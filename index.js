var e="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:{};function t(e){return e&&e.__esModule&&Object.prototype.hasOwnProperty.call(e,"default")?e.default:e}var n,i={exports:{}},a={};function s(){if(n)return a;n=1;var e=Symbol.for("react.element"),t=Symbol.for("react.portal"),i=Symbol.for("react.fragment"),s=Symbol.for("react.strict_mode"),r=Symbol.for("react.profiler"),o=Symbol.for("react.provider"),l=Symbol.for("react.context"),c=Symbol.for("react.forward_ref"),h=Symbol.for("react.suspense"),p=Symbol.for("react.memo"),d=Symbol.for("react.lazy"),u=Symbol.iterator;var m={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},f=Object.assign,g={};function v(e,t,n){this.props=e,this.context=t,this.refs=g,this.updater=n||m}function y(){}function _(e,t,n){this.props=e,this.context=t,this.refs=g,this.updater=n||m}v.prototype.isReactComponent={},v.prototype.setState=function(e,t){if("object"!=typeof e&&"function"!=typeof e&&null!=e)throw Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");this.updater.enqueueSetState(this,e,t,"setState")},v.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},y.prototype=v.prototype;var w=_.prototype=new y;w.constructor=_,f(w,v.prototype),w.isPureReactComponent=!0;var b=Array.isArray,x=Object.prototype.hasOwnProperty,C={current:null},S={key:!0,ref:!0,__self:!0,__source:!0};function E(t,n,i){var a,s={},r=null,o=null;if(null!=n)for(a in void 0!==n.ref&&(o=n.ref),void 0!==n.key&&(r=""+n.key),n)x.call(n,a)&&!S.hasOwnProperty(a)&&(s[a]=n[a]);var l=arguments.length-2;if(1===l)s.children=i;else if(1<l){for(var c=Array(l),h=0;h<l;h++)c[h]=arguments[h+2];s.children=c}if(t&&t.defaultProps)for(a in l=t.defaultProps)void 0===s[a]&&(s[a]=l[a]);return{$$typeof:e,type:t,key:r,ref:o,props:s,_owner:C.current}}function T(t){return"object"==typeof t&&null!==t&&t.$$typeof===e}var A=/\/+/g;function L(e,t){return"object"==typeof e&&null!==e&&null!=e.key?function(e){var t={"=":"=0",":":"=2"};return"$"+e.replace(/[=:]/g,(function(e){return t[e]}))}(""+e.key):t.toString(36)}function M(n,i,a,s,r){var o=typeof n;"undefined"!==o&&"boolean"!==o||(n=null);var l=!1;if(null===n)l=!0;else switch(o){case"string":case"number":l=!0;break;case"object":switch(n.$$typeof){case e:case t:l=!0}}if(l)return r=r(l=n),n=""===s?"."+L(l,0):s,b(r)?(a="",null!=n&&(a=n.replace(A,"$&/")+"/"),M(r,i,a,"",(function(e){return e}))):null!=r&&(T(r)&&(r=function(t,n){return{$$typeof:e,type:t.type,key:n,ref:t.ref,props:t.props,_owner:t._owner}}(r,a+(!r.key||l&&l.key===r.key?"":(""+r.key).replace(A,"$&/")+"/")+n)),i.push(r)),1;if(l=0,s=""===s?".":s+":",b(n))for(var c=0;c<n.length;c++){var h=s+L(o=n[c],c);l+=M(o,i,a,h,r)}else if(h=function(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=u&&e[u]||e["@@iterator"])?e:null}(n),"function"==typeof h)for(n=h.call(n),c=0;!(o=n.next()).done;)l+=M(o=o.value,i,a,h=s+L(o,c++),r);else if("object"===o)throw i=String(n),Error("Objects are not valid as a React child (found: "+("[object Object]"===i?"object with keys {"+Object.keys(n).join(", ")+"}":i)+"). If you meant to render a collection of children, use an array instead.");return l}function P(e,t,n){if(null==e)return e;var i=[],a=0;return M(e,i,"","",(function(e){return t.call(n,e,a++)})),i}function O(e){if(-1===e._status){var t=e._result;(t=t()).then((function(t){0!==e._status&&-1!==e._status||(e._status=1,e._result=t)}),(function(t){0!==e._status&&-1!==e._status||(e._status=2,e._result=t)})),-1===e._status&&(e._status=0,e._result=t)}if(1===e._status)return e._result.default;throw e._result}var I={current:null},R={transition:null},D={ReactCurrentDispatcher:I,ReactCurrentBatchConfig:R,ReactCurrentOwner:C};return a.Children={map:P,forEach:function(e,t,n){P(e,(function(){t.apply(this,arguments)}),n)},count:function(e){var t=0;return P(e,(function(){t++})),t},toArray:function(e){return P(e,(function(e){return e}))||[]},only:function(e){if(!T(e))throw Error("React.Children.only expected to receive a single React element child.");return e}},a.Component=v,a.Fragment=i,a.Profiler=r,a.PureComponent=_,a.StrictMode=s,a.Suspense=h,a.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=D,a.cloneElement=function(t,n,i){if(null==t)throw Error("React.cloneElement(...): The argument must be a React element, but you passed "+t+".");var a=f({},t.props),s=t.key,r=t.ref,o=t._owner;if(null!=n){if(void 0!==n.ref&&(r=n.ref,o=C.current),void 0!==n.key&&(s=""+n.key),t.type&&t.type.defaultProps)var l=t.type.defaultProps;for(c in n)x.call(n,c)&&!S.hasOwnProperty(c)&&(a[c]=void 0===n[c]&&void 0!==l?l[c]:n[c])}var c=arguments.length-2;if(1===c)a.children=i;else if(1<c){l=Array(c);for(var h=0;h<c;h++)l[h]=arguments[h+2];a.children=l}return{$$typeof:e,type:t.type,key:s,ref:r,props:a,_owner:o}},a.createContext=function(e){return(e={$$typeof:l,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null,_defaultValue:null,_globalName:null}).Provider={$$typeof:o,_context:e},e.Consumer=e},a.createElement=E,a.createFactory=function(e){var t=E.bind(null,e);return t.type=e,t},a.createRef=function(){return{current:null}},a.forwardRef=function(e){return{$$typeof:c,render:e}},a.isValidElement=T,a.lazy=function(e){return{$$typeof:d,_payload:{_status:-1,_result:e},_init:O}},a.memo=function(e,t){return{$$typeof:p,type:e,compare:void 0===t?null:t}},a.startTransition=function(e){var t=R.transition;R.transition={};try{e()}finally{R.transition=t}},a.unstable_act=function(){throw Error("act(...) is not supported in production builds of React.")},a.useCallback=function(e,t){return I.current.useCallback(e,t)},a.useContext=function(e){return I.current.useContext(e)},a.useDebugValue=function(){},a.useDeferredValue=function(e){return I.current.useDeferredValue(e)},a.useEffect=function(e,t){return I.current.useEffect(e,t)},a.useId=function(){return I.current.useId()},a.useImperativeHandle=function(e,t,n){return I.current.useImperativeHandle(e,t,n)},a.useInsertionEffect=function(e,t){return I.current.useInsertionEffect(e,t)},a.useLayoutEffect=function(e,t){return I.current.useLayoutEffect(e,t)},a.useMemo=function(e,t){return I.current.useMemo(e,t)},a.useReducer=function(e,t,n){return I.current.useReducer(e,t,n)},a.useRef=function(e){return I.current.useRef(e)},a.useState=function(e){return I.current.useState(e)},a.useSyncExternalStore=function(e,t,n){return I.current.useSyncExternalStore(e,t,n)},a.useTransition=function(){return I.current.useTransition()},a.version="18.2.0",a}i.exports=s();var r,o,l,c,h,p=t(i.exports),d={exports:{}},u={},m={exports:{}},f={};function g(){return o||(o=1,m.exports=(r||(r=1,function(e){function t(e,t){var n=e.length;e.push(t);e:for(;0<n;){var i=n-1>>>1,s=e[i];if(!(0<a(s,t)))break e;e[i]=t,e[n]=s,n=i}}function n(e){return 0===e.length?null:e[0]}function i(e){if(0===e.length)return null;var t=e[0],n=e.pop();if(n!==t){e[0]=n;e:for(var i=0,s=e.length,r=s>>>1;i<r;){var o=2*(i+1)-1,l=e[o],c=o+1,h=e[c];if(0>a(l,n))c<s&&0>a(h,l)?(e[i]=h,e[c]=n,i=c):(e[i]=l,e[o]=n,i=o);else{if(!(c<s&&0>a(h,n)))break e;e[i]=h,e[c]=n,i=c}}}return t}function a(e,t){var n=e.sortIndex-t.sortIndex;return 0!==n?n:e.id-t.id}if("object"==typeof performance&&"function"==typeof performance.now){var s=performance;e.unstable_now=function(){return s.now()}}else{var r=Date,o=r.now();e.unstable_now=function(){return r.now()-o}}var l=[],c=[],h=1,p=null,d=3,u=!1,m=!1,f=!1,g="function"==typeof setTimeout?setTimeout:null,v="function"==typeof clearTimeout?clearTimeout:null,y="undefined"!=typeof setImmediate?setImmediate:null;function _(e){for(var a=n(c);null!==a;){if(null===a.callback)i(c);else{if(!(a.startTime<=e))break;i(c),a.sortIndex=a.expirationTime,t(l,a)}a=n(c)}}function w(e){if(f=!1,_(e),!m)if(null!==n(l))m=!0,I(b);else{var t=n(c);null!==t&&R(w,t.startTime-e)}}function b(t,a){m=!1,f&&(f=!1,v(E),E=-1),u=!0;var s=d;try{for(_(a),p=n(l);null!==p&&(!(p.expirationTime>a)||t&&!L());){var r=p.callback;if("function"==typeof r){p.callback=null,d=p.priorityLevel;var o=r(p.expirationTime<=a);a=e.unstable_now(),"function"==typeof o?p.callback=o:p===n(l)&&i(l),_(a)}else i(l);p=n(l)}if(null!==p)var h=!0;else{var g=n(c);null!==g&&R(w,g.startTime-a),h=!1}return h}finally{p=null,d=s,u=!1}}"undefined"!=typeof navigator&&void 0!==navigator.scheduling&&void 0!==navigator.scheduling.isInputPending&&navigator.scheduling.isInputPending.bind(navigator.scheduling);var x,C=!1,S=null,E=-1,T=5,A=-1;function L(){return!(e.unstable_now()-A<T)}function M(){if(null!==S){var t=e.unstable_now();A=t;var n=!0;try{n=S(!0,t)}finally{n?x():(C=!1,S=null)}}else C=!1}if("function"==typeof y)x=function(){y(M)};else if("undefined"!=typeof MessageChannel){var P=new MessageChannel,O=P.port2;P.port1.onmessage=M,x=function(){O.postMessage(null)}}else x=function(){g(M,0)};function I(e){S=e,C||(C=!0,x())}function R(t,n){E=g((function(){t(e.unstable_now())}),n)}e.unstable_IdlePriority=5,e.unstable_ImmediatePriority=1,e.unstable_LowPriority=4,e.unstable_NormalPriority=3,e.unstable_Profiling=null,e.unstable_UserBlockingPriority=2,e.unstable_cancelCallback=function(e){e.callback=null},e.unstable_continueExecution=function(){m||u||(m=!0,I(b))},e.unstable_forceFrameRate=function(e){0>e||125<e?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):T=0<e?Math.floor(1e3/e):5},e.unstable_getCurrentPriorityLevel=function(){return d},e.unstable_getFirstCallbackNode=function(){return n(l)},e.unstable_next=function(e){switch(d){case 1:case 2:case 3:var t=3;break;default:t=d}var n=d;d=t;try{return e()}finally{d=n}},e.unstable_pauseExecution=function(){},e.unstable_requestPaint=function(){},e.unstable_runWithPriority=function(e,t){switch(e){case 1:case 2:case 3:case 4:case 5:break;default:e=3}var n=d;d=e;try{return t()}finally{d=n}},e.unstable_scheduleCallback=function(i,a,s){var r=e.unstable_now();switch(s="object"==typeof s&&null!==s&&"number"==typeof(s=s.delay)&&0<s?r+s:r,i){case 1:var o=-1;break;case 2:o=250;break;case 5:o=1073741823;break;case 4:o=1e4;break;default:o=5e3}return i={id:h++,callback:a,priorityLevel:i,startTime:s,expirationTime:o=s+o,sortIndex:-1},s>r?(i.sortIndex=s,t(c,i),null===n(l)&&i===n(c)&&(f?(v(E),E=-1):f=!0,R(w,s-r))):(i.sortIndex=o,t(l,i),m||u||(m=!0,I(b))),i},e.unstable_shouldYield=L,e.unstable_wrapCallback=function(e){var t=d;return function(){var n=d;d=t;try{return e.apply(this,arguments)}finally{d=n}}}}(f)),f)),m.exports}
/**
 * @license React
 * react-dom.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */function v(){if(l)return u;l=1;var e=i.exports,t=g();function n(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,n=1;n<arguments.length;n++)t+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var a=new Set,s={};function r(e,t){o(e,t),o(e+"Capture",t)}function o(e,t){for(s[e]=t,e=0;e<t.length;e++)a.add(t[e])}var c=!("undefined"==typeof window||void 0===window.document||void 0===window.document.createElement),h=Object.prototype.hasOwnProperty,p=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,d={},m={};function f(e,t,n,i,a,s,r){this.acceptsBooleans=2===t||3===t||4===t,this.attributeName=i,this.attributeNamespace=a,this.mustUseProperty=n,this.propertyName=e,this.type=t,this.sanitizeURL=s,this.removeEmptyString=r}var v={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach((function(e){v[e]=new f(e,0,!1,e,null,!1,!1)})),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach((function(e){var t=e[0];v[t]=new f(t,1,!1,e[1],null,!1,!1)})),["contentEditable","draggable","spellCheck","value"].forEach((function(e){v[e]=new f(e,2,!1,e.toLowerCase(),null,!1,!1)})),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach((function(e){v[e]=new f(e,2,!1,e,null,!1,!1)})),"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach((function(e){v[e]=new f(e,3,!1,e.toLowerCase(),null,!1,!1)})),["checked","multiple","muted","selected"].forEach((function(e){v[e]=new f(e,3,!0,e,null,!1,!1)})),["capture","download"].forEach((function(e){v[e]=new f(e,4,!1,e,null,!1,!1)})),["cols","rows","size","span"].forEach((function(e){v[e]=new f(e,6,!1,e,null,!1,!1)})),["rowSpan","start"].forEach((function(e){v[e]=new f(e,5,!1,e.toLowerCase(),null,!1,!1)}));var y=/[\-:]([a-z])/g;function _(e){return e[1].toUpperCase()}function w(e,t,n,i){var a=v.hasOwnProperty(t)?v[t]:null;(null!==a?0!==a.type:i||!(2<t.length)||"o"!==t[0]&&"O"!==t[0]||"n"!==t[1]&&"N"!==t[1])&&(function(e,t,n,i){if(null==t||function(e,t,n,i){if(null!==n&&0===n.type)return!1;switch(typeof t){case"function":case"symbol":return!0;case"boolean":return!i&&(null!==n?!n.acceptsBooleans:"data-"!==(e=e.toLowerCase().slice(0,5))&&"aria-"!==e);default:return!1}}(e,t,n,i))return!0;if(i)return!1;if(null!==n)switch(n.type){case 3:return!t;case 4:return!1===t;case 5:return isNaN(t);case 6:return isNaN(t)||1>t}return!1}(t,n,a,i)&&(n=null),i||null===a?function(e){return!!h.call(m,e)||!h.call(d,e)&&(p.test(e)?m[e]=!0:(d[e]=!0,!1))}(t)&&(null===n?e.removeAttribute(t):e.setAttribute(t,""+n)):a.mustUseProperty?e[a.propertyName]=null===n?3!==a.type&&"":n:(t=a.attributeName,i=a.attributeNamespace,null===n?e.removeAttribute(t):(n=3===(a=a.type)||4===a&&!0===n?"":""+n,i?e.setAttributeNS(i,t,n):e.setAttribute(t,n))))}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach((function(e){var t=e.replace(y,_);v[t]=new f(t,1,!1,e,null,!1,!1)})),"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach((function(e){var t=e.replace(y,_);v[t]=new f(t,1,!1,e,"http://www.w3.org/1999/xlink",!1,!1)})),["xml:base","xml:lang","xml:space"].forEach((function(e){var t=e.replace(y,_);v[t]=new f(t,1,!1,e,"http://www.w3.org/XML/1998/namespace",!1,!1)})),["tabIndex","crossOrigin"].forEach((function(e){v[e]=new f(e,1,!1,e.toLowerCase(),null,!1,!1)})),v.xlinkHref=new f("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0,!1),["src","href","action","formAction"].forEach((function(e){v[e]=new f(e,1,!1,e.toLowerCase(),null,!0,!0)}));var b=e.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,x=Symbol.for("react.element"),C=Symbol.for("react.portal"),S=Symbol.for("react.fragment"),E=Symbol.for("react.strict_mode"),T=Symbol.for("react.profiler"),A=Symbol.for("react.provider"),L=Symbol.for("react.context"),M=Symbol.for("react.forward_ref"),P=Symbol.for("react.suspense"),O=Symbol.for("react.suspense_list"),I=Symbol.for("react.memo"),R=Symbol.for("react.lazy"),D=Symbol.for("react.offscreen"),k=Symbol.iterator;function F(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=k&&e[k]||e["@@iterator"])?e:null}var B,N=Object.assign;function U(e){if(void 0===B)try{throw Error()}catch(e){var t=e.stack.trim().match(/\n( *(at )?)/);B=t&&t[1]||""}return"\n"+B+e}var z=!1;function V(e,t){if(!e||z)return"";z=!0;var n=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(t)if(t=function(){throw Error()},Object.defineProperty(t.prototype,"props",{set:function(){throw Error()}}),"object"==typeof Reflect&&Reflect.construct){try{Reflect.construct(t,[])}catch(e){var i=e}Reflect.construct(e,[],t)}else{try{t.call()}catch(e){i=e}e.call(t.prototype)}else{try{throw Error()}catch(e){i=e}e()}}catch(t){if(t&&i&&"string"==typeof t.stack){for(var a=t.stack.split("\n"),s=i.stack.split("\n"),r=a.length-1,o=s.length-1;1<=r&&0<=o&&a[r]!==s[o];)o--;for(;1<=r&&0<=o;r--,o--)if(a[r]!==s[o]){if(1!==r||1!==o)do{if(r--,0>--o||a[r]!==s[o]){var l="\n"+a[r].replace(" at new "," at ");return e.displayName&&l.includes("<anonymous>")&&(l=l.replace("<anonymous>",e.displayName)),l}}while(1<=r&&0<=o);break}}}finally{z=!1,Error.prepareStackTrace=n}return(e=e?e.displayName||e.name:"")?U(e):""}function H(e){switch(e.tag){case 5:return U(e.type);case 16:return U("Lazy");case 13:return U("Suspense");case 19:return U("SuspenseList");case 0:case 2:case 15:return e=V(e.type,!1);case 11:return e=V(e.type.render,!1);case 1:return e=V(e.type,!0);default:return""}}function G(e){if(null==e)return null;if("function"==typeof e)return e.displayName||e.name||null;if("string"==typeof e)return e;switch(e){case S:return"Fragment";case C:return"Portal";case T:return"Profiler";case E:return"StrictMode";case P:return"Suspense";case O:return"SuspenseList"}if("object"==typeof e)switch(e.$$typeof){case L:return(e.displayName||"Context")+".Consumer";case A:return(e._context.displayName||"Context")+".Provider";case M:var t=e.render;return(e=e.displayName)||(e=""!==(e=t.displayName||t.name||"")?"ForwardRef("+e+")":"ForwardRef"),e;case I:return null!==(t=e.displayName||null)?t:G(e.type)||"Memo";case R:t=e._payload,e=e._init;try{return G(e(t))}catch(e){}}return null}function W(e){var t=e.type;switch(e.tag){case 24:return"Cache";case 9:return(t.displayName||"Context")+".Consumer";case 10:return(t._context.displayName||"Context")+".Provider";case 18:return"DehydratedFragment";case 11:return e=(e=t.render).displayName||e.name||"",t.displayName||(""!==e?"ForwardRef("+e+")":"ForwardRef");case 7:return"Fragment";case 5:return t;case 4:return"Portal";case 3:return"Root";case 6:return"Text";case 16:return G(t);case 8:return t===E?"StrictMode":"Mode";case 22:return"Offscreen";case 12:return"Profiler";case 21:return"Scope";case 13:return"Suspense";case 19:return"SuspenseList";case 25:return"TracingMarker";case 1:case 0:case 17:case 2:case 14:case 15:if("function"==typeof t)return t.displayName||t.name||null;if("string"==typeof t)return t}return null}function j(e){switch(typeof e){case"boolean":case"number":case"string":case"undefined":case"object":return e;default:return""}}function X(e){var t=e.type;return(e=e.nodeName)&&"input"===e.toLowerCase()&&("checkbox"===t||"radio"===t)}function Y(e){e._valueTracker||(e._valueTracker=function(e){var t=X(e)?"checked":"value",n=Object.getOwnPropertyDescriptor(e.constructor.prototype,t),i=""+e[t];if(!e.hasOwnProperty(t)&&void 0!==n&&"function"==typeof n.get&&"function"==typeof n.set){var a=n.get,s=n.set;return Object.defineProperty(e,t,{configurable:!0,get:function(){return a.call(this)},set:function(e){i=""+e,s.call(this,e)}}),Object.defineProperty(e,t,{enumerable:n.enumerable}),{getValue:function(){return i},setValue:function(e){i=""+e},stopTracking:function(){e._valueTracker=null,delete e[t]}}}}(e))}function q(e){if(!e)return!1;var t=e._valueTracker;if(!t)return!0;var n=t.getValue(),i="";return e&&(i=X(e)?e.checked?"true":"false":e.value),(e=i)!==n&&(t.setValue(e),!0)}function K(e){if(void 0===(e=e||("undefined"!=typeof document?document:void 0)))return null;try{return e.activeElement||e.body}catch(t){return e.body}}function Z(e,t){var n=t.checked;return N({},t,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=n?n:e._wrapperState.initialChecked})}function Q(e,t){var n=null==t.defaultValue?"":t.defaultValue,i=null!=t.checked?t.checked:t.defaultChecked;n=j(null!=t.value?t.value:n),e._wrapperState={initialChecked:i,initialValue:n,controlled:"checkbox"===t.type||"radio"===t.type?null!=t.checked:null!=t.value}}function J(e,t){null!=(t=t.checked)&&w(e,"checked",t,!1)}function $(e,t){J(e,t);var n=j(t.value),i=t.type;if(null!=n)"number"===i?(0===n&&""===e.value||e.value!=n)&&(e.value=""+n):e.value!==""+n&&(e.value=""+n);else if("submit"===i||"reset"===i)return void e.removeAttribute("value");t.hasOwnProperty("value")?te(e,t.type,n):t.hasOwnProperty("defaultValue")&&te(e,t.type,j(t.defaultValue)),null==t.checked&&null!=t.defaultChecked&&(e.defaultChecked=!!t.defaultChecked)}function ee(e,t,n){if(t.hasOwnProperty("value")||t.hasOwnProperty("defaultValue")){var i=t.type;if(!("submit"!==i&&"reset"!==i||void 0!==t.value&&null!==t.value))return;t=""+e._wrapperState.initialValue,n||t===e.value||(e.value=t),e.defaultValue=t}""!==(n=e.name)&&(e.name=""),e.defaultChecked=!!e._wrapperState.initialChecked,""!==n&&(e.name=n)}function te(e,t,n){"number"===t&&K(e.ownerDocument)===e||(null==n?e.defaultValue=""+e._wrapperState.initialValue:e.defaultValue!==""+n&&(e.defaultValue=""+n))}var ne=Array.isArray;function ie(e,t,n,i){if(e=e.options,t){t={};for(var a=0;a<n.length;a++)t["$"+n[a]]=!0;for(n=0;n<e.length;n++)a=t.hasOwnProperty("$"+e[n].value),e[n].selected!==a&&(e[n].selected=a),a&&i&&(e[n].defaultSelected=!0)}else{for(n=""+j(n),t=null,a=0;a<e.length;a++){if(e[a].value===n)return e[a].selected=!0,void(i&&(e[a].defaultSelected=!0));null!==t||e[a].disabled||(t=e[a])}null!==t&&(t.selected=!0)}}function ae(e,t){if(null!=t.dangerouslySetInnerHTML)throw Error(n(91));return N({},t,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue})}function se(e,t){var i=t.value;if(null==i){if(i=t.children,t=t.defaultValue,null!=i){if(null!=t)throw Error(n(92));if(ne(i)){if(1<i.length)throw Error(n(93));i=i[0]}t=i}null==t&&(t=""),i=t}e._wrapperState={initialValue:j(i)}}function re(e,t){var n=j(t.value),i=j(t.defaultValue);null!=n&&((n=""+n)!==e.value&&(e.value=n),null==t.defaultValue&&e.defaultValue!==n&&(e.defaultValue=n)),null!=i&&(e.defaultValue=""+i)}function oe(e){var t=e.textContent;t===e._wrapperState.initialValue&&""!==t&&null!==t&&(e.value=t)}function le(e){switch(e){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function ce(e,t){return null==e||"http://www.w3.org/1999/xhtml"===e?le(t):"http://www.w3.org/2000/svg"===e&&"foreignObject"===t?"http://www.w3.org/1999/xhtml":e}var he,pe,de=(pe=function(e,t){if("http://www.w3.org/2000/svg"!==e.namespaceURI||"innerHTML"in e)e.innerHTML=t;else{for((he=he||document.createElement("div")).innerHTML="<svg>"+t.valueOf().toString()+"</svg>",t=he.firstChild;e.firstChild;)e.removeChild(e.firstChild);for(;t.firstChild;)e.appendChild(t.firstChild)}},"undefined"!=typeof MSApp&&MSApp.execUnsafeLocalFunction?function(e,t,n,i){MSApp.execUnsafeLocalFunction((function(){return pe(e,t)}))}:pe);function ue(e,t){if(t){var n=e.firstChild;if(n&&n===e.lastChild&&3===n.nodeType)return void(n.nodeValue=t)}e.textContent=t}var me={animationIterationCount:!0,aspectRatio:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},fe=["Webkit","ms","Moz","O"];function ge(e,t,n){return null==t||"boolean"==typeof t||""===t?"":n||"number"!=typeof t||0===t||me.hasOwnProperty(e)&&me[e]?(""+t).trim():t+"px"}function ve(e,t){for(var n in e=e.style,t)if(t.hasOwnProperty(n)){var i=0===n.indexOf("--"),a=ge(n,t[n],i);"float"===n&&(n="cssFloat"),i?e.setProperty(n,a):e[n]=a}}Object.keys(me).forEach((function(e){fe.forEach((function(t){t=t+e.charAt(0).toUpperCase()+e.substring(1),me[t]=me[e]}))}));var ye=N({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function _e(e,t){if(t){if(ye[e]&&(null!=t.children||null!=t.dangerouslySetInnerHTML))throw Error(n(137,e));if(null!=t.dangerouslySetInnerHTML){if(null!=t.children)throw Error(n(60));if("object"!=typeof t.dangerouslySetInnerHTML||!("__html"in t.dangerouslySetInnerHTML))throw Error(n(61))}if(null!=t.style&&"object"!=typeof t.style)throw Error(n(62))}}function we(e,t){if(-1===e.indexOf("-"))return"string"==typeof t.is;switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}var be=null;function xe(e){return(e=e.target||e.srcElement||window).correspondingUseElement&&(e=e.correspondingUseElement),3===e.nodeType?e.parentNode:e}var Ce=null,Se=null,Ee=null;function Te(e){if(e=wa(e)){if("function"!=typeof Ce)throw Error(n(280));var t=e.stateNode;t&&(t=xa(t),Ce(e.stateNode,e.type,t))}}function Ae(e){Se?Ee?Ee.push(e):Ee=[e]:Se=e}function Le(){if(Se){var e=Se,t=Ee;if(Ee=Se=null,Te(e),t)for(e=0;e<t.length;e++)Te(t[e])}}function Me(e,t){return e(t)}function Pe(){}var Oe=!1;function Ie(e,t,n){if(Oe)return e(t,n);Oe=!0;try{return Me(e,t,n)}finally{Oe=!1,(null!==Se||null!==Ee)&&(Pe(),Le())}}function Re(e,t){var i=e.stateNode;if(null===i)return null;var a=xa(i);if(null===a)return null;i=a[t];e:switch(t){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(a=!a.disabled)||(a=!("button"===(e=e.type)||"input"===e||"select"===e||"textarea"===e)),e=!a;break e;default:e=!1}if(e)return null;if(i&&"function"!=typeof i)throw Error(n(231,t,typeof i));return i}var De=!1;if(c)try{var ke={};Object.defineProperty(ke,"passive",{get:function(){De=!0}}),window.addEventListener("test",ke,ke),window.removeEventListener("test",ke,ke)}catch(pe){De=!1}function Fe(e,t,n,i,a,s,r,o,l){var c=Array.prototype.slice.call(arguments,3);try{t.apply(n,c)}catch(e){this.onError(e)}}var Be=!1,Ne=null,Ue=!1,ze=null,Ve={onError:function(e){Be=!0,Ne=e}};function He(e,t,n,i,a,s,r,o,l){Be=!1,Ne=null,Fe.apply(Ve,arguments)}function Ge(e){var t=e,n=e;if(e.alternate)for(;t.return;)t=t.return;else{e=t;do{0!=(4098&(t=e).flags)&&(n=t.return),e=t.return}while(e)}return 3===t.tag?n:null}function We(e){if(13===e.tag){var t=e.memoizedState;if(null===t&&(null!==(e=e.alternate)&&(t=e.memoizedState)),null!==t)return t.dehydrated}return null}function je(e){if(Ge(e)!==e)throw Error(n(188))}function Xe(e){return e=function(e){var t=e.alternate;if(!t){if(null===(t=Ge(e)))throw Error(n(188));return t!==e?null:e}for(var i=e,a=t;;){var s=i.return;if(null===s)break;var r=s.alternate;if(null===r){if(null!==(a=s.return)){i=a;continue}break}if(s.child===r.child){for(r=s.child;r;){if(r===i)return je(s),e;if(r===a)return je(s),t;r=r.sibling}throw Error(n(188))}if(i.return!==a.return)i=s,a=r;else{for(var o=!1,l=s.child;l;){if(l===i){o=!0,i=s,a=r;break}if(l===a){o=!0,a=s,i=r;break}l=l.sibling}if(!o){for(l=r.child;l;){if(l===i){o=!0,i=r,a=s;break}if(l===a){o=!0,a=r,i=s;break}l=l.sibling}if(!o)throw Error(n(189))}}if(i.alternate!==a)throw Error(n(190))}if(3!==i.tag)throw Error(n(188));return i.stateNode.current===i?e:t}(e),null!==e?Ye(e):null}function Ye(e){if(5===e.tag||6===e.tag)return e;for(e=e.child;null!==e;){var t=Ye(e);if(null!==t)return t;e=e.sibling}return null}var qe=t.unstable_scheduleCallback,Ke=t.unstable_cancelCallback,Ze=t.unstable_shouldYield,Qe=t.unstable_requestPaint,Je=t.unstable_now,$e=t.unstable_getCurrentPriorityLevel,et=t.unstable_ImmediatePriority,tt=t.unstable_UserBlockingPriority,nt=t.unstable_NormalPriority,it=t.unstable_LowPriority,at=t.unstable_IdlePriority,st=null,rt=null;var ot=Math.clz32?Math.clz32:function(e){return e>>>=0,0===e?32:31-(lt(e)/ct|0)|0},lt=Math.log,ct=Math.LN2;var ht=64,pt=4194304;function dt(e){switch(e&-e){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return 4194240&e;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return 130023424&e;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 1073741824;default:return e}}function ut(e,t){var n=e.pendingLanes;if(0===n)return 0;var i=0,a=e.suspendedLanes,s=e.pingedLanes,r=268435455&n;if(0!==r){var o=r&~a;0!==o?i=dt(o):0!==(s&=r)&&(i=dt(s))}else 0!==(r=n&~a)?i=dt(r):0!==s&&(i=dt(s));if(0===i)return 0;if(0!==t&&t!==i&&0==(t&a)&&((a=i&-i)>=(s=t&-t)||16===a&&0!=(4194240&s)))return t;if(0!=(4&i)&&(i|=16&n),0!==(t=e.entangledLanes))for(e=e.entanglements,t&=i;0<t;)a=1<<(n=31-ot(t)),i|=e[n],t&=~a;return i}function mt(e,t){switch(e){case 1:case 2:case 4:return t+250;case 8:case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return t+5e3;default:return-1}}function ft(e){return 0!==(e=-1073741825&e.pendingLanes)?e:1073741824&e?1073741824:0}function gt(){var e=ht;return 0==(4194240&(ht<<=1))&&(ht=64),e}function vt(e){for(var t=[],n=0;31>n;n++)t.push(e);return t}function yt(e,t,n){e.pendingLanes|=t,536870912!==t&&(e.suspendedLanes=0,e.pingedLanes=0),(e=e.eventTimes)[t=31-ot(t)]=n}function _t(e,t){var n=e.entangledLanes|=t;for(e=e.entanglements;n;){var i=31-ot(n),a=1<<i;a&t|e[i]&t&&(e[i]|=t),n&=~a}}var wt=0;function bt(e){return 1<(e&=-e)?4<e?0!=(268435455&e)?16:536870912:4:1}var xt,Ct,St,Et,Tt,At=!1,Lt=[],Mt=null,Pt=null,Ot=null,It=new Map,Rt=new Map,Dt=[],kt="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");function Ft(e,t){switch(e){case"focusin":case"focusout":Mt=null;break;case"dragenter":case"dragleave":Pt=null;break;case"mouseover":case"mouseout":Ot=null;break;case"pointerover":case"pointerout":It.delete(t.pointerId);break;case"gotpointercapture":case"lostpointercapture":Rt.delete(t.pointerId)}}function Bt(e,t,n,i,a,s){return null===e||e.nativeEvent!==s?(e={blockedOn:t,domEventName:n,eventSystemFlags:i,nativeEvent:s,targetContainers:[a]},null!==t&&(null!==(t=wa(t))&&Ct(t)),e):(e.eventSystemFlags|=i,t=e.targetContainers,null!==a&&-1===t.indexOf(a)&&t.push(a),e)}function Nt(e){var t=_a(e.target);if(null!==t){var n=Ge(t);if(null!==n)if(13===(t=n.tag)){if(null!==(t=We(n)))return e.blockedOn=t,void Tt(e.priority,(function(){St(n)}))}else if(3===t&&n.stateNode.current.memoizedState.isDehydrated)return void(e.blockedOn=3===n.tag?n.stateNode.containerInfo:null)}e.blockedOn=null}function Ut(e){if(null!==e.blockedOn)return!1;for(var t=e.targetContainers;0<t.length;){var n=Zt(e.domEventName,e.eventSystemFlags,t[0],e.nativeEvent);if(null!==n)return null!==(t=wa(n))&&Ct(t),e.blockedOn=n,!1;var i=new(n=e.nativeEvent).constructor(n.type,n);be=i,n.target.dispatchEvent(i),be=null,t.shift()}return!0}function zt(e,t,n){Ut(e)&&n.delete(t)}function Vt(){At=!1,null!==Mt&&Ut(Mt)&&(Mt=null),null!==Pt&&Ut(Pt)&&(Pt=null),null!==Ot&&Ut(Ot)&&(Ot=null),It.forEach(zt),Rt.forEach(zt)}function Ht(e,n){e.blockedOn===n&&(e.blockedOn=null,At||(At=!0,t.unstable_scheduleCallback(t.unstable_NormalPriority,Vt)))}function Gt(e){function t(t){return Ht(t,e)}if(0<Lt.length){Ht(Lt[0],e);for(var n=1;n<Lt.length;n++){var i=Lt[n];i.blockedOn===e&&(i.blockedOn=null)}}for(null!==Mt&&Ht(Mt,e),null!==Pt&&Ht(Pt,e),null!==Ot&&Ht(Ot,e),It.forEach(t),Rt.forEach(t),n=0;n<Dt.length;n++)(i=Dt[n]).blockedOn===e&&(i.blockedOn=null);for(;0<Dt.length&&null===(n=Dt[0]).blockedOn;)Nt(n),null===n.blockedOn&&Dt.shift()}var Wt=b.ReactCurrentBatchConfig,jt=!0;function Xt(e,t,n,i){var a=wt,s=Wt.transition;Wt.transition=null;try{wt=1,qt(e,t,n,i)}finally{wt=a,Wt.transition=s}}function Yt(e,t,n,i){var a=wt,s=Wt.transition;Wt.transition=null;try{wt=4,qt(e,t,n,i)}finally{wt=a,Wt.transition=s}}function qt(e,t,n,i){if(jt){var a=Zt(e,t,n,i);if(null===a)ji(e,t,i,Kt,n),Ft(e,i);else if(function(e,t,n,i,a){switch(t){case"focusin":return Mt=Bt(Mt,e,t,n,i,a),!0;case"dragenter":return Pt=Bt(Pt,e,t,n,i,a),!0;case"mouseover":return Ot=Bt(Ot,e,t,n,i,a),!0;case"pointerover":var s=a.pointerId;return It.set(s,Bt(It.get(s)||null,e,t,n,i,a)),!0;case"gotpointercapture":return s=a.pointerId,Rt.set(s,Bt(Rt.get(s)||null,e,t,n,i,a)),!0}return!1}(a,e,t,n,i))i.stopPropagation();else if(Ft(e,i),4&t&&-1<kt.indexOf(e)){for(;null!==a;){var s=wa(a);if(null!==s&&xt(s),null===(s=Zt(e,t,n,i))&&ji(e,t,i,Kt,n),s===a)break;a=s}null!==a&&i.stopPropagation()}else ji(e,t,i,null,n)}}var Kt=null;function Zt(e,t,n,i){if(Kt=null,null!==(e=_a(e=xe(i))))if(null===(t=Ge(e)))e=null;else if(13===(n=t.tag)){if(null!==(e=We(t)))return e;e=null}else if(3===n){if(t.stateNode.current.memoizedState.isDehydrated)return 3===t.tag?t.stateNode.containerInfo:null;e=null}else t!==e&&(e=null);return Kt=e,null}function Qt(e){switch(e){case"cancel":case"click":case"close":case"contextmenu":case"copy":case"cut":case"auxclick":case"dblclick":case"dragend":case"dragstart":case"drop":case"focusin":case"focusout":case"input":case"invalid":case"keydown":case"keypress":case"keyup":case"mousedown":case"mouseup":case"paste":case"pause":case"play":case"pointercancel":case"pointerdown":case"pointerup":case"ratechange":case"reset":case"resize":case"seeked":case"submit":case"touchcancel":case"touchend":case"touchstart":case"volumechange":case"change":case"selectionchange":case"textInput":case"compositionstart":case"compositionend":case"compositionupdate":case"beforeblur":case"afterblur":case"beforeinput":case"blur":case"fullscreenchange":case"focus":case"hashchange":case"popstate":case"select":case"selectstart":return 1;case"drag":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"mousemove":case"mouseout":case"mouseover":case"pointermove":case"pointerout":case"pointerover":case"scroll":case"toggle":case"touchmove":case"wheel":case"mouseenter":case"mouseleave":case"pointerenter":case"pointerleave":return 4;case"message":switch($e()){case et:return 1;case tt:return 4;case nt:case it:return 16;case at:return 536870912;default:return 16}default:return 16}}var Jt=null,$t=null,en=null;function tn(){if(en)return en;var e,t,n=$t,i=n.length,a="value"in Jt?Jt.value:Jt.textContent,s=a.length;for(e=0;e<i&&n[e]===a[e];e++);var r=i-e;for(t=1;t<=r&&n[i-t]===a[s-t];t++);return en=a.slice(e,1<t?1-t:void 0)}function nn(e){var t=e.keyCode;return"charCode"in e?0===(e=e.charCode)&&13===t&&(e=13):e=t,10===e&&(e=13),32<=e||13===e?e:0}function an(){return!0}function sn(){return!1}function rn(e){function t(t,n,i,a,s){for(var r in this._reactName=t,this._targetInst=i,this.type=n,this.nativeEvent=a,this.target=s,this.currentTarget=null,e)e.hasOwnProperty(r)&&(t=e[r],this[r]=t?t(a):a[r]);return this.isDefaultPrevented=(null!=a.defaultPrevented?a.defaultPrevented:!1===a.returnValue)?an:sn,this.isPropagationStopped=sn,this}return N(t.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e&&(e.preventDefault?e.preventDefault():"unknown"!=typeof e.returnValue&&(e.returnValue=!1),this.isDefaultPrevented=an)},stopPropagation:function(){var e=this.nativeEvent;e&&(e.stopPropagation?e.stopPropagation():"unknown"!=typeof e.cancelBubble&&(e.cancelBubble=!0),this.isPropagationStopped=an)},persist:function(){},isPersistent:an}),t}var on,ln,cn,hn={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},pn=rn(hn),dn=N({},hn,{view:0,detail:0}),un=rn(dn),mn=N({},dn,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:Tn,button:0,buttons:0,relatedTarget:function(e){return void 0===e.relatedTarget?e.fromElement===e.srcElement?e.toElement:e.fromElement:e.relatedTarget},movementX:function(e){return"movementX"in e?e.movementX:(e!==cn&&(cn&&"mousemove"===e.type?(on=e.screenX-cn.screenX,ln=e.screenY-cn.screenY):ln=on=0,cn=e),on)},movementY:function(e){return"movementY"in e?e.movementY:ln}}),fn=rn(mn),gn=rn(N({},mn,{dataTransfer:0})),vn=rn(N({},dn,{relatedTarget:0})),yn=rn(N({},hn,{animationName:0,elapsedTime:0,pseudoElement:0})),_n=N({},hn,{clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}}),wn=rn(_n),bn=rn(N({},hn,{data:0})),xn={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},Cn={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},Sn={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function En(e){var t=this.nativeEvent;return t.getModifierState?t.getModifierState(e):!!(e=Sn[e])&&!!t[e]}function Tn(){return En}var An=N({},dn,{key:function(e){if(e.key){var t=xn[e.key]||e.key;if("Unidentified"!==t)return t}return"keypress"===e.type?13===(e=nn(e))?"Enter":String.fromCharCode(e):"keydown"===e.type||"keyup"===e.type?Cn[e.keyCode]||"Unidentified":""},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:Tn,charCode:function(e){return"keypress"===e.type?nn(e):0},keyCode:function(e){return"keydown"===e.type||"keyup"===e.type?e.keyCode:0},which:function(e){return"keypress"===e.type?nn(e):"keydown"===e.type||"keyup"===e.type?e.keyCode:0}}),Ln=rn(An),Mn=rn(N({},mn,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0})),Pn=rn(N({},dn,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:Tn})),On=rn(N({},hn,{propertyName:0,elapsedTime:0,pseudoElement:0})),In=N({},mn,{deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:0,deltaMode:0}),Rn=rn(In),Dn=[9,13,27,32],kn=c&&"CompositionEvent"in window,Fn=null;c&&"documentMode"in document&&(Fn=document.documentMode);var Bn=c&&"TextEvent"in window&&!Fn,Nn=c&&(!kn||Fn&&8<Fn&&11>=Fn),Un=String.fromCharCode(32),zn=!1;function Vn(e,t){switch(e){case"keyup":return-1!==Dn.indexOf(t.keyCode);case"keydown":return 229!==t.keyCode;case"keypress":case"mousedown":case"focusout":return!0;default:return!1}}function Hn(e){return"object"==typeof(e=e.detail)&&"data"in e?e.data:null}var Gn=!1;var Wn={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function jn(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return"input"===t?!!Wn[e.type]:"textarea"===t}function Xn(e,t,n,i){Ae(i),0<(t=Yi(t,"onChange")).length&&(n=new pn("onChange","change",null,n,i),e.push({event:n,listeners:t}))}var Yn=null,qn=null;function Kn(e){Ui(e,0)}function Zn(e){if(q(ba(e)))return e}function Qn(e,t){if("change"===e)return t}var Jn=!1;if(c){var $n;if(c){var ei="oninput"in document;if(!ei){var ti=document.createElement("div");ti.setAttribute("oninput","return;"),ei="function"==typeof ti.oninput}$n=ei}else $n=!1;Jn=$n&&(!document.documentMode||9<document.documentMode)}function ni(){Yn&&(Yn.detachEvent("onpropertychange",ii),qn=Yn=null)}function ii(e){if("value"===e.propertyName&&Zn(qn)){var t=[];Xn(t,qn,e,xe(e)),Ie(Kn,t)}}function ai(e,t,n){"focusin"===e?(ni(),qn=n,(Yn=t).attachEvent("onpropertychange",ii)):"focusout"===e&&ni()}function si(e){if("selectionchange"===e||"keyup"===e||"keydown"===e)return Zn(qn)}function ri(e,t){if("click"===e)return Zn(t)}function oi(e,t){if("input"===e||"change"===e)return Zn(t)}var li="function"==typeof Object.is?Object.is:function(e,t){return e===t&&(0!==e||1/e==1/t)||e!=e&&t!=t};function ci(e,t){if(li(e,t))return!0;if("object"!=typeof e||null===e||"object"!=typeof t||null===t)return!1;var n=Object.keys(e),i=Object.keys(t);if(n.length!==i.length)return!1;for(i=0;i<n.length;i++){var a=n[i];if(!h.call(t,a)||!li(e[a],t[a]))return!1}return!0}function hi(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function pi(e,t){var n,i=hi(e);for(e=0;i;){if(3===i.nodeType){if(n=e+i.textContent.length,e<=t&&n>=t)return{node:i,offset:t-e};e=n}e:{for(;i;){if(i.nextSibling){i=i.nextSibling;break e}i=i.parentNode}i=void 0}i=hi(i)}}function di(e,t){return!(!e||!t)&&(e===t||(!e||3!==e.nodeType)&&(t&&3===t.nodeType?di(e,t.parentNode):"contains"in e?e.contains(t):!!e.compareDocumentPosition&&!!(16&e.compareDocumentPosition(t))))}function ui(){for(var e=window,t=K();t instanceof e.HTMLIFrameElement;){try{var n="string"==typeof t.contentWindow.location.href}catch(e){n=!1}if(!n)break;t=K((e=t.contentWindow).document)}return t}function mi(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t&&("input"===t&&("text"===e.type||"search"===e.type||"tel"===e.type||"url"===e.type||"password"===e.type)||"textarea"===t||"true"===e.contentEditable)}function fi(e){var t=ui(),n=e.focusedElem,i=e.selectionRange;if(t!==n&&n&&n.ownerDocument&&di(n.ownerDocument.documentElement,n)){if(null!==i&&mi(n))if(t=i.start,void 0===(e=i.end)&&(e=t),"selectionStart"in n)n.selectionStart=t,n.selectionEnd=Math.min(e,n.value.length);else if((e=(t=n.ownerDocument||document)&&t.defaultView||window).getSelection){e=e.getSelection();var a=n.textContent.length,s=Math.min(i.start,a);i=void 0===i.end?s:Math.min(i.end,a),!e.extend&&s>i&&(a=i,i=s,s=a),a=pi(n,s);var r=pi(n,i);a&&r&&(1!==e.rangeCount||e.anchorNode!==a.node||e.anchorOffset!==a.offset||e.focusNode!==r.node||e.focusOffset!==r.offset)&&((t=t.createRange()).setStart(a.node,a.offset),e.removeAllRanges(),s>i?(e.addRange(t),e.extend(r.node,r.offset)):(t.setEnd(r.node,r.offset),e.addRange(t)))}for(t=[],e=n;e=e.parentNode;)1===e.nodeType&&t.push({element:e,left:e.scrollLeft,top:e.scrollTop});for("function"==typeof n.focus&&n.focus(),n=0;n<t.length;n++)(e=t[n]).element.scrollLeft=e.left,e.element.scrollTop=e.top}}var gi=c&&"documentMode"in document&&11>=document.documentMode,vi=null,yi=null,_i=null,wi=!1;function bi(e,t,n){var i=n.window===n?n.document:9===n.nodeType?n:n.ownerDocument;wi||null==vi||vi!==K(i)||("selectionStart"in(i=vi)&&mi(i)?i={start:i.selectionStart,end:i.selectionEnd}:i={anchorNode:(i=(i.ownerDocument&&i.ownerDocument.defaultView||window).getSelection()).anchorNode,anchorOffset:i.anchorOffset,focusNode:i.focusNode,focusOffset:i.focusOffset},_i&&ci(_i,i)||(_i=i,0<(i=Yi(yi,"onSelect")).length&&(t=new pn("onSelect","select",null,t,n),e.push({event:t,listeners:i}),t.target=vi)))}function xi(e,t){var n={};return n[e.toLowerCase()]=t.toLowerCase(),n["Webkit"+e]="webkit"+t,n["Moz"+e]="moz"+t,n}var Ci={animationend:xi("Animation","AnimationEnd"),animationiteration:xi("Animation","AnimationIteration"),animationstart:xi("Animation","AnimationStart"),transitionend:xi("Transition","TransitionEnd")},Si={},Ei={};function Ti(e){if(Si[e])return Si[e];if(!Ci[e])return e;var t,n=Ci[e];for(t in n)if(n.hasOwnProperty(t)&&t in Ei)return Si[e]=n[t];return e}c&&(Ei=document.createElement("div").style,"AnimationEvent"in window||(delete Ci.animationend.animation,delete Ci.animationiteration.animation,delete Ci.animationstart.animation),"TransitionEvent"in window||delete Ci.transitionend.transition);var Ai=Ti("animationend"),Li=Ti("animationiteration"),Mi=Ti("animationstart"),Pi=Ti("transitionend"),Oi=new Map,Ii="abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel".split(" ");function Ri(e,t){Oi.set(e,t),r(t,[e])}for(var Di=0;Di<Ii.length;Di++){var ki=Ii[Di];Ri(ki.toLowerCase(),"on"+(ki[0].toUpperCase()+ki.slice(1)))}Ri(Ai,"onAnimationEnd"),Ri(Li,"onAnimationIteration"),Ri(Mi,"onAnimationStart"),Ri("dblclick","onDoubleClick"),Ri("focusin","onFocus"),Ri("focusout","onBlur"),Ri(Pi,"onTransitionEnd"),o("onMouseEnter",["mouseout","mouseover"]),o("onMouseLeave",["mouseout","mouseover"]),o("onPointerEnter",["pointerout","pointerover"]),o("onPointerLeave",["pointerout","pointerover"]),r("onChange","change click focusin focusout input keydown keyup selectionchange".split(" ")),r("onSelect","focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" ")),r("onBeforeInput",["compositionend","keypress","textInput","paste"]),r("onCompositionEnd","compositionend focusout keydown keypress keyup mousedown".split(" ")),r("onCompositionStart","compositionstart focusout keydown keypress keyup mousedown".split(" ")),r("onCompositionUpdate","compositionupdate focusout keydown keypress keyup mousedown".split(" "));var Fi="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),Bi=new Set("cancel close invalid load scroll toggle".split(" ").concat(Fi));function Ni(e,t,i){var a=e.type||"unknown-event";e.currentTarget=i,function(e,t,i,a,s,r,o,l,c){if(He.apply(this,arguments),Be){if(!Be)throw Error(n(198));var h=Ne;Be=!1,Ne=null,Ue||(Ue=!0,ze=h)}}(a,t,void 0,e),e.currentTarget=null}function Ui(e,t){t=0!=(4&t);for(var n=0;n<e.length;n++){var i=e[n],a=i.event;i=i.listeners;e:{var s=void 0;if(t)for(var r=i.length-1;0<=r;r--){var o=i[r],l=o.instance,c=o.currentTarget;if(o=o.listener,l!==s&&a.isPropagationStopped())break e;Ni(a,o,c),s=l}else for(r=0;r<i.length;r++){if(l=(o=i[r]).instance,c=o.currentTarget,o=o.listener,l!==s&&a.isPropagationStopped())break e;Ni(a,o,c),s=l}}}if(Ue)throw e=ze,Ue=!1,ze=null,e}function zi(e,t){var n=t[ga];void 0===n&&(n=t[ga]=new Set);var i=e+"__bubble";n.has(i)||(Wi(t,e,2,!1),n.add(i))}function Vi(e,t,n){var i=0;t&&(i|=4),Wi(n,e,i,t)}var Hi="_reactListening"+Math.random().toString(36).slice(2);function Gi(e){if(!e[Hi]){e[Hi]=!0,a.forEach((function(t){"selectionchange"!==t&&(Bi.has(t)||Vi(t,!1,e),Vi(t,!0,e))}));var t=9===e.nodeType?e:e.ownerDocument;null===t||t[Hi]||(t[Hi]=!0,Vi("selectionchange",!1,t))}}function Wi(e,t,n,i){switch(Qt(t)){case 1:var a=Xt;break;case 4:a=Yt;break;default:a=qt}n=a.bind(null,t,n,e),a=void 0,!De||"touchstart"!==t&&"touchmove"!==t&&"wheel"!==t||(a=!0),i?void 0!==a?e.addEventListener(t,n,{capture:!0,passive:a}):e.addEventListener(t,n,!0):void 0!==a?e.addEventListener(t,n,{passive:a}):e.addEventListener(t,n,!1)}function ji(e,t,n,i,a){var s=i;if(0==(1&t)&&0==(2&t)&&null!==i)e:for(;;){if(null===i)return;var r=i.tag;if(3===r||4===r){var o=i.stateNode.containerInfo;if(o===a||8===o.nodeType&&o.parentNode===a)break;if(4===r)for(r=i.return;null!==r;){var l=r.tag;if((3===l||4===l)&&((l=r.stateNode.containerInfo)===a||8===l.nodeType&&l.parentNode===a))return;r=r.return}for(;null!==o;){if(null===(r=_a(o)))return;if(5===(l=r.tag)||6===l){i=s=r;continue e}o=o.parentNode}}i=i.return}Ie((function(){var i=s,a=xe(n),r=[];e:{var o=Oi.get(e);if(void 0!==o){var l=pn,c=e;switch(e){case"keypress":if(0===nn(n))break e;case"keydown":case"keyup":l=Ln;break;case"focusin":c="focus",l=vn;break;case"focusout":c="blur",l=vn;break;case"beforeblur":case"afterblur":l=vn;break;case"click":if(2===n.button)break e;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":l=fn;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":l=gn;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":l=Pn;break;case Ai:case Li:case Mi:l=yn;break;case Pi:l=On;break;case"scroll":l=un;break;case"wheel":l=Rn;break;case"copy":case"cut":case"paste":l=wn;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":l=Mn}var h=0!=(4&t),p=!h&&"scroll"===e,d=h?null!==o?o+"Capture":null:o;h=[];for(var u,m=i;null!==m;){var f=(u=m).stateNode;if(5===u.tag&&null!==f&&(u=f,null!==d&&(null!=(f=Re(m,d))&&h.push(Xi(m,f,u)))),p)break;m=m.return}0<h.length&&(o=new l(o,c,null,n,a),r.push({event:o,listeners:h}))}}if(0==(7&t)){if(l="mouseout"===e||"pointerout"===e,(!(o="mouseover"===e||"pointerover"===e)||n===be||!(c=n.relatedTarget||n.fromElement)||!_a(c)&&!c[fa])&&(l||o)&&(o=a.window===a?a:(o=a.ownerDocument)?o.defaultView||o.parentWindow:window,l?(l=i,null!==(c=(c=n.relatedTarget||n.toElement)?_a(c):null)&&(c!==(p=Ge(c))||5!==c.tag&&6!==c.tag)&&(c=null)):(l=null,c=i),l!==c)){if(h=fn,f="onMouseLeave",d="onMouseEnter",m="mouse","pointerout"!==e&&"pointerover"!==e||(h=Mn,f="onPointerLeave",d="onPointerEnter",m="pointer"),p=null==l?o:ba(l),u=null==c?o:ba(c),(o=new h(f,m+"leave",l,n,a)).target=p,o.relatedTarget=u,f=null,_a(a)===i&&((h=new h(d,m+"enter",c,n,a)).target=u,h.relatedTarget=p,f=h),p=f,l&&c)e:{for(d=c,m=0,u=h=l;u;u=qi(u))m++;for(u=0,f=d;f;f=qi(f))u++;for(;0<m-u;)h=qi(h),m--;for(;0<u-m;)d=qi(d),u--;for(;m--;){if(h===d||null!==d&&h===d.alternate)break e;h=qi(h),d=qi(d)}h=null}else h=null;null!==l&&Ki(r,o,l,h,!1),null!==c&&null!==p&&Ki(r,p,c,h,!0)}if("select"===(l=(o=i?ba(i):window).nodeName&&o.nodeName.toLowerCase())||"input"===l&&"file"===o.type)var g=Qn;else if(jn(o))if(Jn)g=oi;else{g=si;var v=ai}else(l=o.nodeName)&&"input"===l.toLowerCase()&&("checkbox"===o.type||"radio"===o.type)&&(g=ri);switch(g&&(g=g(e,i))?Xn(r,g,n,a):(v&&v(e,o,i),"focusout"===e&&(v=o._wrapperState)&&v.controlled&&"number"===o.type&&te(o,"number",o.value)),v=i?ba(i):window,e){case"focusin":(jn(v)||"true"===v.contentEditable)&&(vi=v,yi=i,_i=null);break;case"focusout":_i=yi=vi=null;break;case"mousedown":wi=!0;break;case"contextmenu":case"mouseup":case"dragend":wi=!1,bi(r,n,a);break;case"selectionchange":if(gi)break;case"keydown":case"keyup":bi(r,n,a)}var y;if(kn)e:{switch(e){case"compositionstart":var _="onCompositionStart";break e;case"compositionend":_="onCompositionEnd";break e;case"compositionupdate":_="onCompositionUpdate";break e}_=void 0}else Gn?Vn(e,n)&&(_="onCompositionEnd"):"keydown"===e&&229===n.keyCode&&(_="onCompositionStart");_&&(Nn&&"ko"!==n.locale&&(Gn||"onCompositionStart"!==_?"onCompositionEnd"===_&&Gn&&(y=tn()):($t="value"in(Jt=a)?Jt.value:Jt.textContent,Gn=!0)),0<(v=Yi(i,_)).length&&(_=new bn(_,e,null,n,a),r.push({event:_,listeners:v}),y?_.data=y:null!==(y=Hn(n))&&(_.data=y))),(y=Bn?function(e,t){switch(e){case"compositionend":return Hn(t);case"keypress":return 32!==t.which?null:(zn=!0,Un);case"textInput":return(e=t.data)===Un&&zn?null:e;default:return null}}(e,n):function(e,t){if(Gn)return"compositionend"===e||!kn&&Vn(e,t)?(e=tn(),en=$t=Jt=null,Gn=!1,e):null;switch(e){case"paste":default:return null;case"keypress":if(!(t.ctrlKey||t.altKey||t.metaKey)||t.ctrlKey&&t.altKey){if(t.char&&1<t.char.length)return t.char;if(t.which)return String.fromCharCode(t.which)}return null;case"compositionend":return Nn&&"ko"!==t.locale?null:t.data}}(e,n))&&(0<(i=Yi(i,"onBeforeInput")).length&&(a=new bn("onBeforeInput","beforeinput",null,n,a),r.push({event:a,listeners:i}),a.data=y))}Ui(r,t)}))}function Xi(e,t,n){return{instance:e,listener:t,currentTarget:n}}function Yi(e,t){for(var n=t+"Capture",i=[];null!==e;){var a=e,s=a.stateNode;5===a.tag&&null!==s&&(a=s,null!=(s=Re(e,n))&&i.unshift(Xi(e,s,a)),null!=(s=Re(e,t))&&i.push(Xi(e,s,a))),e=e.return}return i}function qi(e){if(null===e)return null;do{e=e.return}while(e&&5!==e.tag);return e||null}function Ki(e,t,n,i,a){for(var s=t._reactName,r=[];null!==n&&n!==i;){var o=n,l=o.alternate,c=o.stateNode;if(null!==l&&l===i)break;5===o.tag&&null!==c&&(o=c,a?null!=(l=Re(n,s))&&r.unshift(Xi(n,l,o)):a||null!=(l=Re(n,s))&&r.push(Xi(n,l,o))),n=n.return}0!==r.length&&e.push({event:t,listeners:r})}var Zi=/\r\n?/g,Qi=/\u0000|\uFFFD/g;function Ji(e){return("string"==typeof e?e:""+e).replace(Zi,"\n").replace(Qi,"")}function $i(e,t,i){if(t=Ji(t),Ji(e)!==t&&i)throw Error(n(425))}function ea(){}var ta=null,na=null;function ia(e,t){return"textarea"===e||"noscript"===e||"string"==typeof t.children||"number"==typeof t.children||"object"==typeof t.dangerouslySetInnerHTML&&null!==t.dangerouslySetInnerHTML&&null!=t.dangerouslySetInnerHTML.__html}var aa="function"==typeof setTimeout?setTimeout:void 0,sa="function"==typeof clearTimeout?clearTimeout:void 0,ra="function"==typeof Promise?Promise:void 0,oa="function"==typeof queueMicrotask?queueMicrotask:void 0!==ra?function(e){return ra.resolve(null).then(e).catch(la)}:aa;function la(e){setTimeout((function(){throw e}))}function ca(e,t){var n=t,i=0;do{var a=n.nextSibling;if(e.removeChild(n),a&&8===a.nodeType)if("/$"===(n=a.data)){if(0===i)return e.removeChild(a),void Gt(t);i--}else"$"!==n&&"$?"!==n&&"$!"!==n||i++;n=a}while(n);Gt(t)}function ha(e){for(;null!=e;e=e.nextSibling){var t=e.nodeType;if(1===t||3===t)break;if(8===t){if("$"===(t=e.data)||"$!"===t||"$?"===t)break;if("/$"===t)return null}}return e}function pa(e){e=e.previousSibling;for(var t=0;e;){if(8===e.nodeType){var n=e.data;if("$"===n||"$!"===n||"$?"===n){if(0===t)return e;t--}else"/$"===n&&t++}e=e.previousSibling}return null}var da=Math.random().toString(36).slice(2),ua="__reactFiber$"+da,ma="__reactProps$"+da,fa="__reactContainer$"+da,ga="__reactEvents$"+da,va="__reactListeners$"+da,ya="__reactHandles$"+da;function _a(e){var t=e[ua];if(t)return t;for(var n=e.parentNode;n;){if(t=n[fa]||n[ua]){if(n=t.alternate,null!==t.child||null!==n&&null!==n.child)for(e=pa(e);null!==e;){if(n=e[ua])return n;e=pa(e)}return t}n=(e=n).parentNode}return null}function wa(e){return!(e=e[ua]||e[fa])||5!==e.tag&&6!==e.tag&&13!==e.tag&&3!==e.tag?null:e}function ba(e){if(5===e.tag||6===e.tag)return e.stateNode;throw Error(n(33))}function xa(e){return e[ma]||null}var Ca=[],Sa=-1;function Ea(e){return{current:e}}function Ta(e){0>Sa||(e.current=Ca[Sa],Ca[Sa]=null,Sa--)}function Aa(e,t){Sa++,Ca[Sa]=e.current,e.current=t}var La={},Ma=Ea(La),Pa=Ea(!1),Oa=La;function Ia(e,t){var n=e.type.contextTypes;if(!n)return La;var i=e.stateNode;if(i&&i.__reactInternalMemoizedUnmaskedChildContext===t)return i.__reactInternalMemoizedMaskedChildContext;var a,s={};for(a in n)s[a]=t[a];return i&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=t,e.__reactInternalMemoizedMaskedChildContext=s),s}function Ra(e){return null!=(e=e.childContextTypes)}function Da(){Ta(Pa),Ta(Ma)}function ka(e,t,i){if(Ma.current!==La)throw Error(n(168));Aa(Ma,t),Aa(Pa,i)}function Fa(e,t,i){var a=e.stateNode;if(t=t.childContextTypes,"function"!=typeof a.getChildContext)return i;for(var s in a=a.getChildContext())if(!(s in t))throw Error(n(108,W(e)||"Unknown",s));return N({},i,a)}function Ba(e){return e=(e=e.stateNode)&&e.__reactInternalMemoizedMergedChildContext||La,Oa=Ma.current,Aa(Ma,e),Aa(Pa,Pa.current),!0}function Na(e,t,i){var a=e.stateNode;if(!a)throw Error(n(169));i?(e=Fa(e,t,Oa),a.__reactInternalMemoizedMergedChildContext=e,Ta(Pa),Ta(Ma),Aa(Ma,e)):Ta(Pa),Aa(Pa,i)}var Ua=null,za=!1,Va=!1;function Ha(e){null===Ua?Ua=[e]:Ua.push(e)}function Ga(){if(!Va&&null!==Ua){Va=!0;var e=0,t=wt;try{var n=Ua;for(wt=1;e<n.length;e++){var i=n[e];do{i=i(!0)}while(null!==i)}Ua=null,za=!1}catch(t){throw null!==Ua&&(Ua=Ua.slice(e+1)),qe(et,Ga),t}finally{wt=t,Va=!1}}return null}var Wa=[],ja=0,Xa=null,Ya=0,qa=[],Ka=0,Za=null,Qa=1,Ja="";function $a(e,t){Wa[ja++]=Ya,Wa[ja++]=Xa,Xa=e,Ya=t}function es(e,t,n){qa[Ka++]=Qa,qa[Ka++]=Ja,qa[Ka++]=Za,Za=e;var i=Qa;e=Ja;var a=32-ot(i)-1;i&=~(1<<a),n+=1;var s=32-ot(t)+a;if(30<s){var r=a-a%5;s=(i&(1<<r)-1).toString(32),i>>=r,a-=r,Qa=1<<32-ot(t)+a|n<<a|i,Ja=s+e}else Qa=1<<s|n<<a|i,Ja=e}function ts(e){null!==e.return&&($a(e,1),es(e,1,0))}function ns(e){for(;e===Xa;)Xa=Wa[--ja],Wa[ja]=null,Ya=Wa[--ja],Wa[ja]=null;for(;e===Za;)Za=qa[--Ka],qa[Ka]=null,Ja=qa[--Ka],qa[Ka]=null,Qa=qa[--Ka],qa[Ka]=null}var is=null,as=null,ss=!1,rs=null;function os(e,t){var n=Rc(5,null,null,0);n.elementType="DELETED",n.stateNode=t,n.return=e,null===(t=e.deletions)?(e.deletions=[n],e.flags|=16):t.push(n)}function ls(e,t){switch(e.tag){case 5:var n=e.type;return null!==(t=1!==t.nodeType||n.toLowerCase()!==t.nodeName.toLowerCase()?null:t)&&(e.stateNode=t,is=e,as=ha(t.firstChild),!0);case 6:return null!==(t=""===e.pendingProps||3!==t.nodeType?null:t)&&(e.stateNode=t,is=e,as=null,!0);case 13:return null!==(t=8!==t.nodeType?null:t)&&(n=null!==Za?{id:Qa,overflow:Ja}:null,e.memoizedState={dehydrated:t,treeContext:n,retryLane:1073741824},(n=Rc(18,null,null,0)).stateNode=t,n.return=e,e.child=n,is=e,as=null,!0);default:return!1}}function cs(e){return 0!=(1&e.mode)&&0==(128&e.flags)}function hs(e){if(ss){var t=as;if(t){var i=t;if(!ls(e,t)){if(cs(e))throw Error(n(418));t=ha(i.nextSibling);var a=is;t&&ls(e,t)?os(a,i):(e.flags=-4097&e.flags|2,ss=!1,is=e)}}else{if(cs(e))throw Error(n(418));e.flags=-4097&e.flags|2,ss=!1,is=e}}}function ps(e){for(e=e.return;null!==e&&5!==e.tag&&3!==e.tag&&13!==e.tag;)e=e.return;is=e}function ds(e){if(e!==is)return!1;if(!ss)return ps(e),ss=!0,!1;var t;if((t=3!==e.tag)&&!(t=5!==e.tag)&&(t="head"!==(t=e.type)&&"body"!==t&&!ia(e.type,e.memoizedProps)),t&&(t=as)){if(cs(e))throw us(),Error(n(418));for(;t;)os(e,t),t=ha(t.nextSibling)}if(ps(e),13===e.tag){if(!(e=null!==(e=e.memoizedState)?e.dehydrated:null))throw Error(n(317));e:{for(e=e.nextSibling,t=0;e;){if(8===e.nodeType){var i=e.data;if("/$"===i){if(0===t){as=ha(e.nextSibling);break e}t--}else"$"!==i&&"$!"!==i&&"$?"!==i||t++}e=e.nextSibling}as=null}}else as=is?ha(e.stateNode.nextSibling):null;return!0}function us(){for(var e=as;e;)e=ha(e.nextSibling)}function ms(){as=is=null,ss=!1}function fs(e){null===rs?rs=[e]:rs.push(e)}var gs=b.ReactCurrentBatchConfig;function vs(e,t){if(e&&e.defaultProps){for(var n in t=N({},t),e=e.defaultProps)void 0===t[n]&&(t[n]=e[n]);return t}return t}var ys=Ea(null),_s=null,ws=null,bs=null;function xs(){bs=ws=_s=null}function Cs(e){var t=ys.current;Ta(ys),e._currentValue=t}function Ss(e,t,n){for(;null!==e;){var i=e.alternate;if((e.childLanes&t)!==t?(e.childLanes|=t,null!==i&&(i.childLanes|=t)):null!==i&&(i.childLanes&t)!==t&&(i.childLanes|=t),e===n)break;e=e.return}}function Es(e,t){_s=e,bs=ws=null,null!==(e=e.dependencies)&&null!==e.firstContext&&(0!=(e.lanes&t)&&(bo=!0),e.firstContext=null)}function Ts(e){var t=e._currentValue;if(bs!==e)if(e={context:e,memoizedValue:t,next:null},null===ws){if(null===_s)throw Error(n(308));ws=e,_s.dependencies={lanes:0,firstContext:e}}else ws=ws.next=e;return t}var As=null;function Ls(e){null===As?As=[e]:As.push(e)}function Ms(e,t,n,i){var a=t.interleaved;return null===a?(n.next=n,Ls(t)):(n.next=a.next,a.next=n),t.interleaved=n,Ps(e,i)}function Ps(e,t){e.lanes|=t;var n=e.alternate;for(null!==n&&(n.lanes|=t),n=e,e=e.return;null!==e;)e.childLanes|=t,null!==(n=e.alternate)&&(n.childLanes|=t),n=e,e=e.return;return 3===n.tag?n.stateNode:null}var Os=!1;function Is(e){e.updateQueue={baseState:e.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,interleaved:null,lanes:0},effects:null}}function Rs(e,t){e=e.updateQueue,t.updateQueue===e&&(t.updateQueue={baseState:e.baseState,firstBaseUpdate:e.firstBaseUpdate,lastBaseUpdate:e.lastBaseUpdate,shared:e.shared,effects:e.effects})}function Ds(e,t){return{eventTime:e,lane:t,tag:0,payload:null,callback:null,next:null}}function ks(e,t,n){var i=e.updateQueue;if(null===i)return null;if(i=i.shared,0!=(2&Pl)){var a=i.pending;return null===a?t.next=t:(t.next=a.next,a.next=t),i.pending=t,Ps(e,n)}return null===(a=i.interleaved)?(t.next=t,Ls(i)):(t.next=a.next,a.next=t),i.interleaved=t,Ps(e,n)}function Fs(e,t,n){if(null!==(t=t.updateQueue)&&(t=t.shared,0!=(4194240&n))){var i=t.lanes;n|=i&=e.pendingLanes,t.lanes=n,_t(e,n)}}function Bs(e,t){var n=e.updateQueue,i=e.alternate;if(null!==i&&n===(i=i.updateQueue)){var a=null,s=null;if(null!==(n=n.firstBaseUpdate)){do{var r={eventTime:n.eventTime,lane:n.lane,tag:n.tag,payload:n.payload,callback:n.callback,next:null};null===s?a=s=r:s=s.next=r,n=n.next}while(null!==n);null===s?a=s=t:s=s.next=t}else a=s=t;return n={baseState:i.baseState,firstBaseUpdate:a,lastBaseUpdate:s,shared:i.shared,effects:i.effects},void(e.updateQueue=n)}null===(e=n.lastBaseUpdate)?n.firstBaseUpdate=t:e.next=t,n.lastBaseUpdate=t}function Ns(e,t,n,i){var a=e.updateQueue;Os=!1;var s=a.firstBaseUpdate,r=a.lastBaseUpdate,o=a.shared.pending;if(null!==o){a.shared.pending=null;var l=o,c=l.next;l.next=null,null===r?s=c:r.next=c,r=l;var h=e.alternate;null!==h&&((o=(h=h.updateQueue).lastBaseUpdate)!==r&&(null===o?h.firstBaseUpdate=c:o.next=c,h.lastBaseUpdate=l))}if(null!==s){var p=a.baseState;for(r=0,h=c=l=null,o=s;;){var d=o.lane,u=o.eventTime;if((i&d)===d){null!==h&&(h=h.next={eventTime:u,lane:0,tag:o.tag,payload:o.payload,callback:o.callback,next:null});e:{var m=e,f=o;switch(d=t,u=n,f.tag){case 1:if("function"==typeof(m=f.payload)){p=m.call(u,p,d);break e}p=m;break e;case 3:m.flags=-65537&m.flags|128;case 0:if(null==(d="function"==typeof(m=f.payload)?m.call(u,p,d):m))break e;p=N({},p,d);break e;case 2:Os=!0}}null!==o.callback&&0!==o.lane&&(e.flags|=64,null===(d=a.effects)?a.effects=[o]:d.push(o))}else u={eventTime:u,lane:d,tag:o.tag,payload:o.payload,callback:o.callback,next:null},null===h?(c=h=u,l=p):h=h.next=u,r|=d;if(null===(o=o.next)){if(null===(o=a.shared.pending))break;o=(d=o).next,d.next=null,a.lastBaseUpdate=d,a.shared.pending=null}}if(null===h&&(l=p),a.baseState=l,a.firstBaseUpdate=c,a.lastBaseUpdate=h,null!==(t=a.shared.interleaved)){a=t;do{r|=a.lane,a=a.next}while(a!==t)}else null===s&&(a.shared.lanes=0);Nl|=r,e.lanes=r,e.memoizedState=p}}function Us(e,t,i){if(e=t.effects,t.effects=null,null!==e)for(t=0;t<e.length;t++){var a=e[t],s=a.callback;if(null!==s){if(a.callback=null,a=i,"function"!=typeof s)throw Error(n(191,s));s.call(a)}}}var zs=(new e.Component).refs;function Vs(e,t,n,i){n=null==(n=n(i,t=e.memoizedState))?t:N({},t,n),e.memoizedState=n,0===e.lanes&&(e.updateQueue.baseState=n)}var Hs={isMounted:function(e){return!!(e=e._reactInternals)&&Ge(e)===e},enqueueSetState:function(e,t,n){e=e._reactInternals;var i=nc(),a=ic(e),s=Ds(i,a);s.payload=t,null!=n&&(s.callback=n),null!==(t=ks(e,s,a))&&(ac(t,e,a,i),Fs(t,e,a))},enqueueReplaceState:function(e,t,n){e=e._reactInternals;var i=nc(),a=ic(e),s=Ds(i,a);s.tag=1,s.payload=t,null!=n&&(s.callback=n),null!==(t=ks(e,s,a))&&(ac(t,e,a,i),Fs(t,e,a))},enqueueForceUpdate:function(e,t){e=e._reactInternals;var n=nc(),i=ic(e),a=Ds(n,i);a.tag=2,null!=t&&(a.callback=t),null!==(t=ks(e,a,i))&&(ac(t,e,i,n),Fs(t,e,i))}};function Gs(e,t,n,i,a,s,r){return"function"==typeof(e=e.stateNode).shouldComponentUpdate?e.shouldComponentUpdate(i,s,r):!t.prototype||!t.prototype.isPureReactComponent||(!ci(n,i)||!ci(a,s))}function Ws(e,t,n){var i=!1,a=La,s=t.contextType;return"object"==typeof s&&null!==s?s=Ts(s):(a=Ra(t)?Oa:Ma.current,s=(i=null!=(i=t.contextTypes))?Ia(e,a):La),t=new t(n,s),e.memoizedState=null!==t.state&&void 0!==t.state?t.state:null,t.updater=Hs,e.stateNode=t,t._reactInternals=e,i&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=a,e.__reactInternalMemoizedMaskedChildContext=s),t}function js(e,t,n,i){e=t.state,"function"==typeof t.componentWillReceiveProps&&t.componentWillReceiveProps(n,i),"function"==typeof t.UNSAFE_componentWillReceiveProps&&t.UNSAFE_componentWillReceiveProps(n,i),t.state!==e&&Hs.enqueueReplaceState(t,t.state,null)}function Xs(e,t,n,i){var a=e.stateNode;a.props=n,a.state=e.memoizedState,a.refs=zs,Is(e);var s=t.contextType;"object"==typeof s&&null!==s?a.context=Ts(s):(s=Ra(t)?Oa:Ma.current,a.context=Ia(e,s)),a.state=e.memoizedState,"function"==typeof(s=t.getDerivedStateFromProps)&&(Vs(e,t,s,n),a.state=e.memoizedState),"function"==typeof t.getDerivedStateFromProps||"function"==typeof a.getSnapshotBeforeUpdate||"function"!=typeof a.UNSAFE_componentWillMount&&"function"!=typeof a.componentWillMount||(t=a.state,"function"==typeof a.componentWillMount&&a.componentWillMount(),"function"==typeof a.UNSAFE_componentWillMount&&a.UNSAFE_componentWillMount(),t!==a.state&&Hs.enqueueReplaceState(a,a.state,null),Ns(e,n,a,i),a.state=e.memoizedState),"function"==typeof a.componentDidMount&&(e.flags|=4194308)}function Ys(e,t,i){if(null!==(e=i.ref)&&"function"!=typeof e&&"object"!=typeof e){if(i._owner){if(i=i._owner){if(1!==i.tag)throw Error(n(309));var a=i.stateNode}if(!a)throw Error(n(147,e));var s=a,r=""+e;return null!==t&&null!==t.ref&&"function"==typeof t.ref&&t.ref._stringRef===r?t.ref:(t=function(e){var t=s.refs;t===zs&&(t=s.refs={}),null===e?delete t[r]:t[r]=e},t._stringRef=r,t)}if("string"!=typeof e)throw Error(n(284));if(!i._owner)throw Error(n(290,e))}return e}function qs(e,t){throw e=Object.prototype.toString.call(t),Error(n(31,"[object Object]"===e?"object with keys {"+Object.keys(t).join(", ")+"}":e))}function Ks(e){return(0,e._init)(e._payload)}function Zs(e){function t(t,n){if(e){var i=t.deletions;null===i?(t.deletions=[n],t.flags|=16):i.push(n)}}function i(n,i){if(!e)return null;for(;null!==i;)t(n,i),i=i.sibling;return null}function a(e,t){for(e=new Map;null!==t;)null!==t.key?e.set(t.key,t):e.set(t.index,t),t=t.sibling;return e}function s(e,t){return(e=kc(e,t)).index=0,e.sibling=null,e}function r(t,n,i){return t.index=i,e?null!==(i=t.alternate)?(i=i.index)<n?(t.flags|=2,n):i:(t.flags|=2,n):(t.flags|=1048576,n)}function o(t){return e&&null===t.alternate&&(t.flags|=2),t}function l(e,t,n,i){return null===t||6!==t.tag?((t=Uc(n,e.mode,i)).return=e,t):((t=s(t,n)).return=e,t)}function c(e,t,n,i){var a=n.type;return a===S?p(e,t,n.props.children,i,n.key):null!==t&&(t.elementType===a||"object"==typeof a&&null!==a&&a.$$typeof===R&&Ks(a)===t.type)?((i=s(t,n.props)).ref=Ys(e,t,n),i.return=e,i):((i=Fc(n.type,n.key,n.props,null,e.mode,i)).ref=Ys(e,t,n),i.return=e,i)}function h(e,t,n,i){return null===t||4!==t.tag||t.stateNode.containerInfo!==n.containerInfo||t.stateNode.implementation!==n.implementation?((t=zc(n,e.mode,i)).return=e,t):((t=s(t,n.children||[])).return=e,t)}function p(e,t,n,i,a){return null===t||7!==t.tag?((t=Bc(n,e.mode,i,a)).return=e,t):((t=s(t,n)).return=e,t)}function d(e,t,n){if("string"==typeof t&&""!==t||"number"==typeof t)return(t=Uc(""+t,e.mode,n)).return=e,t;if("object"==typeof t&&null!==t){switch(t.$$typeof){case x:return(n=Fc(t.type,t.key,t.props,null,e.mode,n)).ref=Ys(e,null,t),n.return=e,n;case C:return(t=zc(t,e.mode,n)).return=e,t;case R:return d(e,(0,t._init)(t._payload),n)}if(ne(t)||F(t))return(t=Bc(t,e.mode,n,null)).return=e,t;qs(e,t)}return null}function u(e,t,n,i){var a=null!==t?t.key:null;if("string"==typeof n&&""!==n||"number"==typeof n)return null!==a?null:l(e,t,""+n,i);if("object"==typeof n&&null!==n){switch(n.$$typeof){case x:return n.key===a?c(e,t,n,i):null;case C:return n.key===a?h(e,t,n,i):null;case R:return u(e,t,(a=n._init)(n._payload),i)}if(ne(n)||F(n))return null!==a?null:p(e,t,n,i,null);qs(e,n)}return null}function m(e,t,n,i,a){if("string"==typeof i&&""!==i||"number"==typeof i)return l(t,e=e.get(n)||null,""+i,a);if("object"==typeof i&&null!==i){switch(i.$$typeof){case x:return c(t,e=e.get(null===i.key?n:i.key)||null,i,a);case C:return h(t,e=e.get(null===i.key?n:i.key)||null,i,a);case R:return m(e,t,n,(0,i._init)(i._payload),a)}if(ne(i)||F(i))return p(t,e=e.get(n)||null,i,a,null);qs(t,i)}return null}function f(n,s,o,l){for(var c=null,h=null,p=s,f=s=0,g=null;null!==p&&f<o.length;f++){p.index>f?(g=p,p=null):g=p.sibling;var v=u(n,p,o[f],l);if(null===v){null===p&&(p=g);break}e&&p&&null===v.alternate&&t(n,p),s=r(v,s,f),null===h?c=v:h.sibling=v,h=v,p=g}if(f===o.length)return i(n,p),ss&&$a(n,f),c;if(null===p){for(;f<o.length;f++)null!==(p=d(n,o[f],l))&&(s=r(p,s,f),null===h?c=p:h.sibling=p,h=p);return ss&&$a(n,f),c}for(p=a(n,p);f<o.length;f++)null!==(g=m(p,n,f,o[f],l))&&(e&&null!==g.alternate&&p.delete(null===g.key?f:g.key),s=r(g,s,f),null===h?c=g:h.sibling=g,h=g);return e&&p.forEach((function(e){return t(n,e)})),ss&&$a(n,f),c}function g(s,o,l,c){var h=F(l);if("function"!=typeof h)throw Error(n(150));if(null==(l=h.call(l)))throw Error(n(151));for(var p=h=null,f=o,g=o=0,v=null,y=l.next();null!==f&&!y.done;g++,y=l.next()){f.index>g?(v=f,f=null):v=f.sibling;var _=u(s,f,y.value,c);if(null===_){null===f&&(f=v);break}e&&f&&null===_.alternate&&t(s,f),o=r(_,o,g),null===p?h=_:p.sibling=_,p=_,f=v}if(y.done)return i(s,f),ss&&$a(s,g),h;if(null===f){for(;!y.done;g++,y=l.next())null!==(y=d(s,y.value,c))&&(o=r(y,o,g),null===p?h=y:p.sibling=y,p=y);return ss&&$a(s,g),h}for(f=a(s,f);!y.done;g++,y=l.next())null!==(y=m(f,s,g,y.value,c))&&(e&&null!==y.alternate&&f.delete(null===y.key?g:y.key),o=r(y,o,g),null===p?h=y:p.sibling=y,p=y);return e&&f.forEach((function(e){return t(s,e)})),ss&&$a(s,g),h}return function e(n,a,r,l){if("object"==typeof r&&null!==r&&r.type===S&&null===r.key&&(r=r.props.children),"object"==typeof r&&null!==r){switch(r.$$typeof){case x:e:{for(var c=r.key,h=a;null!==h;){if(h.key===c){if((c=r.type)===S){if(7===h.tag){i(n,h.sibling),(a=s(h,r.props.children)).return=n,n=a;break e}}else if(h.elementType===c||"object"==typeof c&&null!==c&&c.$$typeof===R&&Ks(c)===h.type){i(n,h.sibling),(a=s(h,r.props)).ref=Ys(n,h,r),a.return=n,n=a;break e}i(n,h);break}t(n,h),h=h.sibling}r.type===S?((a=Bc(r.props.children,n.mode,l,r.key)).return=n,n=a):((l=Fc(r.type,r.key,r.props,null,n.mode,l)).ref=Ys(n,a,r),l.return=n,n=l)}return o(n);case C:e:{for(h=r.key;null!==a;){if(a.key===h){if(4===a.tag&&a.stateNode.containerInfo===r.containerInfo&&a.stateNode.implementation===r.implementation){i(n,a.sibling),(a=s(a,r.children||[])).return=n,n=a;break e}i(n,a);break}t(n,a),a=a.sibling}(a=zc(r,n.mode,l)).return=n,n=a}return o(n);case R:return e(n,a,(h=r._init)(r._payload),l)}if(ne(r))return f(n,a,r,l);if(F(r))return g(n,a,r,l);qs(n,r)}return"string"==typeof r&&""!==r||"number"==typeof r?(r=""+r,null!==a&&6===a.tag?(i(n,a.sibling),(a=s(a,r)).return=n,n=a):(i(n,a),(a=Uc(r,n.mode,l)).return=n,n=a),o(n)):i(n,a)}}var Qs=Zs(!0),Js=Zs(!1),$s={},er=Ea($s),tr=Ea($s),nr=Ea($s);function ir(e){if(e===$s)throw Error(n(174));return e}function ar(e,t){switch(Aa(nr,t),Aa(tr,e),Aa(er,$s),e=t.nodeType){case 9:case 11:t=(t=t.documentElement)?t.namespaceURI:ce(null,"");break;default:t=ce(t=(e=8===e?t.parentNode:t).namespaceURI||null,e=e.tagName)}Ta(er),Aa(er,t)}function sr(){Ta(er),Ta(tr),Ta(nr)}function rr(e){ir(nr.current);var t=ir(er.current),n=ce(t,e.type);t!==n&&(Aa(tr,e),Aa(er,n))}function or(e){tr.current===e&&(Ta(er),Ta(tr))}var lr=Ea(0);function cr(e){for(var t=e;null!==t;){if(13===t.tag){var n=t.memoizedState;if(null!==n&&(null===(n=n.dehydrated)||"$?"===n.data||"$!"===n.data))return t}else if(19===t.tag&&void 0!==t.memoizedProps.revealOrder){if(0!=(128&t.flags))return t}else if(null!==t.child){t.child.return=t,t=t.child;continue}if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}return null}var hr=[];function pr(){for(var e=0;e<hr.length;e++)hr[e]._workInProgressVersionPrimary=null;hr.length=0}var dr=b.ReactCurrentDispatcher,ur=b.ReactCurrentBatchConfig,mr=0,fr=null,gr=null,vr=null,yr=!1,_r=!1,wr=0,br=0;function xr(){throw Error(n(321))}function Cr(e,t){if(null===t)return!1;for(var n=0;n<t.length&&n<e.length;n++)if(!li(e[n],t[n]))return!1;return!0}function Sr(e,t,i,a,s,r){if(mr=r,fr=t,t.memoizedState=null,t.updateQueue=null,t.lanes=0,dr.current=null===e||null===e.memoizedState?oo:lo,e=i(a,s),_r){r=0;do{if(_r=!1,wr=0,25<=r)throw Error(n(301));r+=1,vr=gr=null,t.updateQueue=null,dr.current=co,e=i(a,s)}while(_r)}if(dr.current=ro,t=null!==gr&&null!==gr.next,mr=0,vr=gr=fr=null,yr=!1,t)throw Error(n(300));return e}function Er(){var e=0!==wr;return wr=0,e}function Tr(){var e={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return null===vr?fr.memoizedState=vr=e:vr=vr.next=e,vr}function Ar(){if(null===gr){var e=fr.alternate;e=null!==e?e.memoizedState:null}else e=gr.next;var t=null===vr?fr.memoizedState:vr.next;if(null!==t)vr=t,gr=e;else{if(null===e)throw Error(n(310));e={memoizedState:(gr=e).memoizedState,baseState:gr.baseState,baseQueue:gr.baseQueue,queue:gr.queue,next:null},null===vr?fr.memoizedState=vr=e:vr=vr.next=e}return vr}function Lr(e,t){return"function"==typeof t?t(e):t}function Mr(e){var t=Ar(),i=t.queue;if(null===i)throw Error(n(311));i.lastRenderedReducer=e;var a=gr,s=a.baseQueue,r=i.pending;if(null!==r){if(null!==s){var o=s.next;s.next=r.next,r.next=o}a.baseQueue=s=r,i.pending=null}if(null!==s){r=s.next,a=a.baseState;var l=o=null,c=null,h=r;do{var p=h.lane;if((mr&p)===p)null!==c&&(c=c.next={lane:0,action:h.action,hasEagerState:h.hasEagerState,eagerState:h.eagerState,next:null}),a=h.hasEagerState?h.eagerState:e(a,h.action);else{var d={lane:p,action:h.action,hasEagerState:h.hasEagerState,eagerState:h.eagerState,next:null};null===c?(l=c=d,o=a):c=c.next=d,fr.lanes|=p,Nl|=p}h=h.next}while(null!==h&&h!==r);null===c?o=a:c.next=l,li(a,t.memoizedState)||(bo=!0),t.memoizedState=a,t.baseState=o,t.baseQueue=c,i.lastRenderedState=a}if(null!==(e=i.interleaved)){s=e;do{r=s.lane,fr.lanes|=r,Nl|=r,s=s.next}while(s!==e)}else null===s&&(i.lanes=0);return[t.memoizedState,i.dispatch]}function Pr(e){var t=Ar(),i=t.queue;if(null===i)throw Error(n(311));i.lastRenderedReducer=e;var a=i.dispatch,s=i.pending,r=t.memoizedState;if(null!==s){i.pending=null;var o=s=s.next;do{r=e(r,o.action),o=o.next}while(o!==s);li(r,t.memoizedState)||(bo=!0),t.memoizedState=r,null===t.baseQueue&&(t.baseState=r),i.lastRenderedState=r}return[r,a]}function Or(){}function Ir(e,t){var i=fr,a=Ar(),s=t(),r=!li(a.memoizedState,s);if(r&&(a.memoizedState=s,bo=!0),a=a.queue,Wr(kr.bind(null,i,a,e),[e]),a.getSnapshot!==t||r||null!==vr&&1&vr.memoizedState.tag){if(i.flags|=2048,Ur(9,Dr.bind(null,i,a,s,t),void 0,null),null===Ol)throw Error(n(349));0!=(30&mr)||Rr(i,t,s)}return s}function Rr(e,t,n){e.flags|=16384,e={getSnapshot:t,value:n},null===(t=fr.updateQueue)?(t={lastEffect:null,stores:null},fr.updateQueue=t,t.stores=[e]):null===(n=t.stores)?t.stores=[e]:n.push(e)}function Dr(e,t,n,i){t.value=n,t.getSnapshot=i,Fr(t)&&Br(e)}function kr(e,t,n){return n((function(){Fr(t)&&Br(e)}))}function Fr(e){var t=e.getSnapshot;e=e.value;try{var n=t();return!li(e,n)}catch(e){return!0}}function Br(e){var t=Ps(e,1);null!==t&&ac(t,e,1,-1)}function Nr(e){var t=Tr();return"function"==typeof e&&(e=e()),t.memoizedState=t.baseState=e,e={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:Lr,lastRenderedState:e},t.queue=e,e=e.dispatch=no.bind(null,fr,e),[t.memoizedState,e]}function Ur(e,t,n,i){return e={tag:e,create:t,destroy:n,deps:i,next:null},null===(t=fr.updateQueue)?(t={lastEffect:null,stores:null},fr.updateQueue=t,t.lastEffect=e.next=e):null===(n=t.lastEffect)?t.lastEffect=e.next=e:(i=n.next,n.next=e,e.next=i,t.lastEffect=e),e}function zr(){return Ar().memoizedState}function Vr(e,t,n,i){var a=Tr();fr.flags|=e,a.memoizedState=Ur(1|t,n,void 0,void 0===i?null:i)}function Hr(e,t,n,i){var a=Ar();i=void 0===i?null:i;var s=void 0;if(null!==gr){var r=gr.memoizedState;if(s=r.destroy,null!==i&&Cr(i,r.deps))return void(a.memoizedState=Ur(t,n,s,i))}fr.flags|=e,a.memoizedState=Ur(1|t,n,s,i)}function Gr(e,t){return Vr(8390656,8,e,t)}function Wr(e,t){return Hr(2048,8,e,t)}function jr(e,t){return Hr(4,2,e,t)}function Xr(e,t){return Hr(4,4,e,t)}function Yr(e,t){return"function"==typeof t?(e=e(),t(e),function(){t(null)}):null!=t?(e=e(),t.current=e,function(){t.current=null}):void 0}function qr(e,t,n){return n=null!=n?n.concat([e]):null,Hr(4,4,Yr.bind(null,t,e),n)}function Kr(){}function Zr(e,t){var n=Ar();t=void 0===t?null:t;var i=n.memoizedState;return null!==i&&null!==t&&Cr(t,i[1])?i[0]:(n.memoizedState=[e,t],e)}function Qr(e,t){var n=Ar();t=void 0===t?null:t;var i=n.memoizedState;return null!==i&&null!==t&&Cr(t,i[1])?i[0]:(e=e(),n.memoizedState=[e,t],e)}function Jr(e,t,n){return 0==(21&mr)?(e.baseState&&(e.baseState=!1,bo=!0),e.memoizedState=n):(li(n,t)||(n=gt(),fr.lanes|=n,Nl|=n,e.baseState=!0),t)}function $r(e,t){var n=wt;wt=0!==n&&4>n?n:4,e(!0);var i=ur.transition;ur.transition={};try{e(!1),t()}finally{wt=n,ur.transition=i}}function eo(){return Ar().memoizedState}function to(e,t,n){var i=ic(e);if(n={lane:i,action:n,hasEagerState:!1,eagerState:null,next:null},io(e))ao(t,n);else if(null!==(n=Ms(e,t,n,i))){ac(n,e,i,nc()),so(n,t,i)}}function no(e,t,n){var i=ic(e),a={lane:i,action:n,hasEagerState:!1,eagerState:null,next:null};if(io(e))ao(t,a);else{var s=e.alternate;if(0===e.lanes&&(null===s||0===s.lanes)&&null!==(s=t.lastRenderedReducer))try{var r=t.lastRenderedState,o=s(r,n);if(a.hasEagerState=!0,a.eagerState=o,li(o,r)){var l=t.interleaved;return null===l?(a.next=a,Ls(t)):(a.next=l.next,l.next=a),void(t.interleaved=a)}}catch(e){}null!==(n=Ms(e,t,a,i))&&(ac(n,e,i,a=nc()),so(n,t,i))}}function io(e){var t=e.alternate;return e===fr||null!==t&&t===fr}function ao(e,t){_r=yr=!0;var n=e.pending;null===n?t.next=t:(t.next=n.next,n.next=t),e.pending=t}function so(e,t,n){if(0!=(4194240&n)){var i=t.lanes;n|=i&=e.pendingLanes,t.lanes=n,_t(e,n)}}var ro={readContext:Ts,useCallback:xr,useContext:xr,useEffect:xr,useImperativeHandle:xr,useInsertionEffect:xr,useLayoutEffect:xr,useMemo:xr,useReducer:xr,useRef:xr,useState:xr,useDebugValue:xr,useDeferredValue:xr,useTransition:xr,useMutableSource:xr,useSyncExternalStore:xr,useId:xr,unstable_isNewReconciler:!1},oo={readContext:Ts,useCallback:function(e,t){return Tr().memoizedState=[e,void 0===t?null:t],e},useContext:Ts,useEffect:Gr,useImperativeHandle:function(e,t,n){return n=null!=n?n.concat([e]):null,Vr(4194308,4,Yr.bind(null,t,e),n)},useLayoutEffect:function(e,t){return Vr(4194308,4,e,t)},useInsertionEffect:function(e,t){return Vr(4,2,e,t)},useMemo:function(e,t){var n=Tr();return t=void 0===t?null:t,e=e(),n.memoizedState=[e,t],e},useReducer:function(e,t,n){var i=Tr();return t=void 0!==n?n(t):t,i.memoizedState=i.baseState=t,e={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:e,lastRenderedState:t},i.queue=e,e=e.dispatch=to.bind(null,fr,e),[i.memoizedState,e]},useRef:function(e){return e={current:e},Tr().memoizedState=e},useState:Nr,useDebugValue:Kr,useDeferredValue:function(e){return Tr().memoizedState=e},useTransition:function(){var e=Nr(!1),t=e[0];return e=$r.bind(null,e[1]),Tr().memoizedState=e,[t,e]},useMutableSource:function(){},useSyncExternalStore:function(e,t,i){var a=fr,s=Tr();if(ss){if(void 0===i)throw Error(n(407));i=i()}else{if(i=t(),null===Ol)throw Error(n(349));0!=(30&mr)||Rr(a,t,i)}s.memoizedState=i;var r={value:i,getSnapshot:t};return s.queue=r,Gr(kr.bind(null,a,r,e),[e]),a.flags|=2048,Ur(9,Dr.bind(null,a,r,i,t),void 0,null),i},useId:function(){var e=Tr(),t=Ol.identifierPrefix;if(ss){var n=Ja;t=":"+t+"R"+(n=(Qa&~(1<<32-ot(Qa)-1)).toString(32)+n),0<(n=wr++)&&(t+="H"+n.toString(32)),t+=":"}else t=":"+t+"r"+(n=br++).toString(32)+":";return e.memoizedState=t},unstable_isNewReconciler:!1},lo={readContext:Ts,useCallback:Zr,useContext:Ts,useEffect:Wr,useImperativeHandle:qr,useInsertionEffect:jr,useLayoutEffect:Xr,useMemo:Qr,useReducer:Mr,useRef:zr,useState:function(){return Mr(Lr)},useDebugValue:Kr,useDeferredValue:function(e){return Jr(Ar(),gr.memoizedState,e)},useTransition:function(){return[Mr(Lr)[0],Ar().memoizedState]},useMutableSource:Or,useSyncExternalStore:Ir,useId:eo,unstable_isNewReconciler:!1},co={readContext:Ts,useCallback:Zr,useContext:Ts,useEffect:Wr,useImperativeHandle:qr,useInsertionEffect:jr,useLayoutEffect:Xr,useMemo:Qr,useReducer:Pr,useRef:zr,useState:function(){return Pr(Lr)},useDebugValue:Kr,useDeferredValue:function(e){var t=Ar();return null===gr?t.memoizedState=e:Jr(t,gr.memoizedState,e)},useTransition:function(){return[Pr(Lr)[0],Ar().memoizedState]},useMutableSource:Or,useSyncExternalStore:Ir,useId:eo,unstable_isNewReconciler:!1};function ho(e,t){try{var n="",i=t;do{n+=H(i),i=i.return}while(i);var a=n}catch(e){a="\nError generating stack: "+e.message+"\n"+e.stack}return{value:e,source:t,stack:a,digest:null}}function po(e,t,n){return{value:e,source:null,stack:null!=n?n:null,digest:null!=t?t:null}}function uo(e,t){try{console.error(t.value)}catch(e){setTimeout((function(){throw e}))}}var mo="function"==typeof WeakMap?WeakMap:Map;function fo(e,t,n){(n=Ds(-1,n)).tag=3,n.payload={element:null};var i=t.value;return n.callback=function(){Xl||(Xl=!0,Yl=i),uo(0,t)},n}function go(e,t,n){(n=Ds(-1,n)).tag=3;var i=e.type.getDerivedStateFromError;if("function"==typeof i){var a=t.value;n.payload=function(){return i(a)},n.callback=function(){uo(0,t)}}var s=e.stateNode;return null!==s&&"function"==typeof s.componentDidCatch&&(n.callback=function(){uo(0,t),"function"!=typeof i&&(null===ql?ql=new Set([this]):ql.add(this));var e=t.stack;this.componentDidCatch(t.value,{componentStack:null!==e?e:""})}),n}function vo(e,t,n){var i=e.pingCache;if(null===i){i=e.pingCache=new mo;var a=new Set;i.set(t,a)}else void 0===(a=i.get(t))&&(a=new Set,i.set(t,a));a.has(n)||(a.add(n),e=Ac.bind(null,e,t,n),t.then(e,e))}function yo(e){do{var t;if((t=13===e.tag)&&(t=null===(t=e.memoizedState)||null!==t.dehydrated),t)return e;e=e.return}while(null!==e);return null}function _o(e,t,n,i,a){return 0==(1&e.mode)?(e===t?e.flags|=65536:(e.flags|=128,n.flags|=131072,n.flags&=-52805,1===n.tag&&(null===n.alternate?n.tag=17:((t=Ds(-1,1)).tag=2,ks(n,t,1))),n.lanes|=1),e):(e.flags|=65536,e.lanes=a,e)}var wo=b.ReactCurrentOwner,bo=!1;function xo(e,t,n,i){t.child=null===e?Js(t,null,n,i):Qs(t,e.child,n,i)}function Co(e,t,n,i,a){n=n.render;var s=t.ref;return Es(t,a),i=Sr(e,t,n,i,s,a),n=Er(),null===e||bo?(ss&&n&&ts(t),t.flags|=1,xo(e,t,i,a),t.child):(t.updateQueue=e.updateQueue,t.flags&=-2053,e.lanes&=~a,Xo(e,t,a))}function So(e,t,n,i,a){if(null===e){var s=n.type;return"function"!=typeof s||Dc(s)||void 0!==s.defaultProps||null!==n.compare||void 0!==n.defaultProps?((e=Fc(n.type,null,i,t,t.mode,a)).ref=t.ref,e.return=t,t.child=e):(t.tag=15,t.type=s,Eo(e,t,s,i,a))}if(s=e.child,0==(e.lanes&a)){var r=s.memoizedProps;if((n=null!==(n=n.compare)?n:ci)(r,i)&&e.ref===t.ref)return Xo(e,t,a)}return t.flags|=1,(e=kc(s,i)).ref=t.ref,e.return=t,t.child=e}function Eo(e,t,n,i,a){if(null!==e){var s=e.memoizedProps;if(ci(s,i)&&e.ref===t.ref){if(bo=!1,t.pendingProps=i=s,0==(e.lanes&a))return t.lanes=e.lanes,Xo(e,t,a);0!=(131072&e.flags)&&(bo=!0)}}return Lo(e,t,n,i,a)}function To(e,t,n){var i=t.pendingProps,a=i.children,s=null!==e?e.memoizedState:null;if("hidden"===i.mode)if(0==(1&t.mode))t.memoizedState={baseLanes:0,cachePool:null,transitions:null},Aa(kl,Dl),Dl|=n;else{if(0==(1073741824&n))return e=null!==s?s.baseLanes|n:n,t.lanes=t.childLanes=1073741824,t.memoizedState={baseLanes:e,cachePool:null,transitions:null},t.updateQueue=null,Aa(kl,Dl),Dl|=e,null;t.memoizedState={baseLanes:0,cachePool:null,transitions:null},i=null!==s?s.baseLanes:n,Aa(kl,Dl),Dl|=i}else null!==s?(i=s.baseLanes|n,t.memoizedState=null):i=n,Aa(kl,Dl),Dl|=i;return xo(e,t,a,n),t.child}function Ao(e,t){var n=t.ref;(null===e&&null!==n||null!==e&&e.ref!==n)&&(t.flags|=512,t.flags|=2097152)}function Lo(e,t,n,i,a){var s=Ra(n)?Oa:Ma.current;return s=Ia(t,s),Es(t,a),n=Sr(e,t,n,i,s,a),i=Er(),null===e||bo?(ss&&i&&ts(t),t.flags|=1,xo(e,t,n,a),t.child):(t.updateQueue=e.updateQueue,t.flags&=-2053,e.lanes&=~a,Xo(e,t,a))}function Mo(e,t,n,i,a){if(Ra(n)){var s=!0;Ba(t)}else s=!1;if(Es(t,a),null===t.stateNode)jo(e,t),Ws(t,n,i),Xs(t,n,i,a),i=!0;else if(null===e){var r=t.stateNode,o=t.memoizedProps;r.props=o;var l=r.context,c=n.contextType;"object"==typeof c&&null!==c?c=Ts(c):c=Ia(t,c=Ra(n)?Oa:Ma.current);var h=n.getDerivedStateFromProps,p="function"==typeof h||"function"==typeof r.getSnapshotBeforeUpdate;p||"function"!=typeof r.UNSAFE_componentWillReceiveProps&&"function"!=typeof r.componentWillReceiveProps||(o!==i||l!==c)&&js(t,r,i,c),Os=!1;var d=t.memoizedState;r.state=d,Ns(t,i,r,a),l=t.memoizedState,o!==i||d!==l||Pa.current||Os?("function"==typeof h&&(Vs(t,n,h,i),l=t.memoizedState),(o=Os||Gs(t,n,o,i,d,l,c))?(p||"function"!=typeof r.UNSAFE_componentWillMount&&"function"!=typeof r.componentWillMount||("function"==typeof r.componentWillMount&&r.componentWillMount(),"function"==typeof r.UNSAFE_componentWillMount&&r.UNSAFE_componentWillMount()),"function"==typeof r.componentDidMount&&(t.flags|=4194308)):("function"==typeof r.componentDidMount&&(t.flags|=4194308),t.memoizedProps=i,t.memoizedState=l),r.props=i,r.state=l,r.context=c,i=o):("function"==typeof r.componentDidMount&&(t.flags|=4194308),i=!1)}else{r=t.stateNode,Rs(e,t),o=t.memoizedProps,c=t.type===t.elementType?o:vs(t.type,o),r.props=c,p=t.pendingProps,d=r.context,"object"==typeof(l=n.contextType)&&null!==l?l=Ts(l):l=Ia(t,l=Ra(n)?Oa:Ma.current);var u=n.getDerivedStateFromProps;(h="function"==typeof u||"function"==typeof r.getSnapshotBeforeUpdate)||"function"!=typeof r.UNSAFE_componentWillReceiveProps&&"function"!=typeof r.componentWillReceiveProps||(o!==p||d!==l)&&js(t,r,i,l),Os=!1,d=t.memoizedState,r.state=d,Ns(t,i,r,a);var m=t.memoizedState;o!==p||d!==m||Pa.current||Os?("function"==typeof u&&(Vs(t,n,u,i),m=t.memoizedState),(c=Os||Gs(t,n,c,i,d,m,l)||!1)?(h||"function"!=typeof r.UNSAFE_componentWillUpdate&&"function"!=typeof r.componentWillUpdate||("function"==typeof r.componentWillUpdate&&r.componentWillUpdate(i,m,l),"function"==typeof r.UNSAFE_componentWillUpdate&&r.UNSAFE_componentWillUpdate(i,m,l)),"function"==typeof r.componentDidUpdate&&(t.flags|=4),"function"==typeof r.getSnapshotBeforeUpdate&&(t.flags|=1024)):("function"!=typeof r.componentDidUpdate||o===e.memoizedProps&&d===e.memoizedState||(t.flags|=4),"function"!=typeof r.getSnapshotBeforeUpdate||o===e.memoizedProps&&d===e.memoizedState||(t.flags|=1024),t.memoizedProps=i,t.memoizedState=m),r.props=i,r.state=m,r.context=l,i=c):("function"!=typeof r.componentDidUpdate||o===e.memoizedProps&&d===e.memoizedState||(t.flags|=4),"function"!=typeof r.getSnapshotBeforeUpdate||o===e.memoizedProps&&d===e.memoizedState||(t.flags|=1024),i=!1)}return Po(e,t,n,i,s,a)}function Po(e,t,n,i,a,s){Ao(e,t);var r=0!=(128&t.flags);if(!i&&!r)return a&&Na(t,n,!1),Xo(e,t,s);i=t.stateNode,wo.current=t;var o=r&&"function"!=typeof n.getDerivedStateFromError?null:i.render();return t.flags|=1,null!==e&&r?(t.child=Qs(t,e.child,null,s),t.child=Qs(t,null,o,s)):xo(e,t,o,s),t.memoizedState=i.state,a&&Na(t,n,!0),t.child}function Oo(e){var t=e.stateNode;t.pendingContext?ka(0,t.pendingContext,t.pendingContext!==t.context):t.context&&ka(0,t.context,!1),ar(e,t.containerInfo)}function Io(e,t,n,i,a){return ms(),fs(a),t.flags|=256,xo(e,t,n,i),t.child}var Ro,Do,ko,Fo,Bo={dehydrated:null,treeContext:null,retryLane:0};function No(e){return{baseLanes:e,cachePool:null,transitions:null}}function Uo(e,t,i){var a,s=t.pendingProps,r=lr.current,o=!1,l=0!=(128&t.flags);if((a=l)||(a=(null===e||null!==e.memoizedState)&&0!=(2&r)),a?(o=!0,t.flags&=-129):null!==e&&null===e.memoizedState||(r|=1),Aa(lr,1&r),null===e)return hs(t),null!==(e=t.memoizedState)&&null!==(e=e.dehydrated)?(0==(1&t.mode)?t.lanes=1:"$!"===e.data?t.lanes=8:t.lanes=1073741824,null):(l=s.children,e=s.fallback,o?(s=t.mode,o=t.child,l={mode:"hidden",children:l},0==(1&s)&&null!==o?(o.childLanes=0,o.pendingProps=l):o=Nc(l,s,0,null),e=Bc(e,s,i,null),o.return=t,e.return=t,o.sibling=e,t.child=o,t.child.memoizedState=No(i),t.memoizedState=Bo,e):zo(t,l));if(null!==(r=e.memoizedState)&&null!==(a=r.dehydrated))return function(e,t,i,a,s,r,o){if(i)return 256&t.flags?(t.flags&=-257,Vo(e,t,o,a=po(Error(n(422))))):null!==t.memoizedState?(t.child=e.child,t.flags|=128,null):(r=a.fallback,s=t.mode,a=Nc({mode:"visible",children:a.children},s,0,null),(r=Bc(r,s,o,null)).flags|=2,a.return=t,r.return=t,a.sibling=r,t.child=a,0!=(1&t.mode)&&Qs(t,e.child,null,o),t.child.memoizedState=No(o),t.memoizedState=Bo,r);if(0==(1&t.mode))return Vo(e,t,o,null);if("$!"===s.data){if(a=s.nextSibling&&s.nextSibling.dataset)var l=a.dgst;return a=l,Vo(e,t,o,a=po(r=Error(n(419)),a,void 0))}if(l=0!=(o&e.childLanes),bo||l){if(null!==(a=Ol)){switch(o&-o){case 4:s=2;break;case 16:s=8;break;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:s=32;break;case 536870912:s=268435456;break;default:s=0}0!==(s=0!=(s&(a.suspendedLanes|o))?0:s)&&s!==r.retryLane&&(r.retryLane=s,Ps(e,s),ac(a,e,s,-1))}return vc(),Vo(e,t,o,a=po(Error(n(421))))}return"$?"===s.data?(t.flags|=128,t.child=e.child,t=Mc.bind(null,e),s._reactRetry=t,null):(e=r.treeContext,as=ha(s.nextSibling),is=t,ss=!0,rs=null,null!==e&&(qa[Ka++]=Qa,qa[Ka++]=Ja,qa[Ka++]=Za,Qa=e.id,Ja=e.overflow,Za=t),t=zo(t,a.children),t.flags|=4096,t)}(e,t,l,s,a,r,i);if(o){o=s.fallback,l=t.mode,a=(r=e.child).sibling;var c={mode:"hidden",children:s.children};return 0==(1&l)&&t.child!==r?((s=t.child).childLanes=0,s.pendingProps=c,t.deletions=null):(s=kc(r,c)).subtreeFlags=14680064&r.subtreeFlags,null!==a?o=kc(a,o):(o=Bc(o,l,i,null)).flags|=2,o.return=t,s.return=t,s.sibling=o,t.child=s,s=o,o=t.child,l=null===(l=e.child.memoizedState)?No(i):{baseLanes:l.baseLanes|i,cachePool:null,transitions:l.transitions},o.memoizedState=l,o.childLanes=e.childLanes&~i,t.memoizedState=Bo,s}return e=(o=e.child).sibling,s=kc(o,{mode:"visible",children:s.children}),0==(1&t.mode)&&(s.lanes=i),s.return=t,s.sibling=null,null!==e&&(null===(i=t.deletions)?(t.deletions=[e],t.flags|=16):i.push(e)),t.child=s,t.memoizedState=null,s}function zo(e,t){return(t=Nc({mode:"visible",children:t},e.mode,0,null)).return=e,e.child=t}function Vo(e,t,n,i){return null!==i&&fs(i),Qs(t,e.child,null,n),(e=zo(t,t.pendingProps.children)).flags|=2,t.memoizedState=null,e}function Ho(e,t,n){e.lanes|=t;var i=e.alternate;null!==i&&(i.lanes|=t),Ss(e.return,t,n)}function Go(e,t,n,i,a){var s=e.memoizedState;null===s?e.memoizedState={isBackwards:t,rendering:null,renderingStartTime:0,last:i,tail:n,tailMode:a}:(s.isBackwards=t,s.rendering=null,s.renderingStartTime=0,s.last=i,s.tail=n,s.tailMode=a)}function Wo(e,t,n){var i=t.pendingProps,a=i.revealOrder,s=i.tail;if(xo(e,t,i.children,n),0!=(2&(i=lr.current)))i=1&i|2,t.flags|=128;else{if(null!==e&&0!=(128&e.flags))e:for(e=t.child;null!==e;){if(13===e.tag)null!==e.memoizedState&&Ho(e,n,t);else if(19===e.tag)Ho(e,n,t);else if(null!==e.child){e.child.return=e,e=e.child;continue}if(e===t)break e;for(;null===e.sibling;){if(null===e.return||e.return===t)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}i&=1}if(Aa(lr,i),0==(1&t.mode))t.memoizedState=null;else switch(a){case"forwards":for(n=t.child,a=null;null!==n;)null!==(e=n.alternate)&&null===cr(e)&&(a=n),n=n.sibling;null===(n=a)?(a=t.child,t.child=null):(a=n.sibling,n.sibling=null),Go(t,!1,a,n,s);break;case"backwards":for(n=null,a=t.child,t.child=null;null!==a;){if(null!==(e=a.alternate)&&null===cr(e)){t.child=a;break}e=a.sibling,a.sibling=n,n=a,a=e}Go(t,!0,n,null,s);break;case"together":Go(t,!1,null,null,void 0);break;default:t.memoizedState=null}return t.child}function jo(e,t){0==(1&t.mode)&&null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2)}function Xo(e,t,i){if(null!==e&&(t.dependencies=e.dependencies),Nl|=t.lanes,0==(i&t.childLanes))return null;if(null!==e&&t.child!==e.child)throw Error(n(153));if(null!==t.child){for(i=kc(e=t.child,e.pendingProps),t.child=i,i.return=t;null!==e.sibling;)e=e.sibling,(i=i.sibling=kc(e,e.pendingProps)).return=t;i.sibling=null}return t.child}function Yo(e,t){if(!ss)switch(e.tailMode){case"hidden":t=e.tail;for(var n=null;null!==t;)null!==t.alternate&&(n=t),t=t.sibling;null===n?e.tail=null:n.sibling=null;break;case"collapsed":n=e.tail;for(var i=null;null!==n;)null!==n.alternate&&(i=n),n=n.sibling;null===i?t||null===e.tail?e.tail=null:e.tail.sibling=null:i.sibling=null}}function qo(e){var t=null!==e.alternate&&e.alternate.child===e.child,n=0,i=0;if(t)for(var a=e.child;null!==a;)n|=a.lanes|a.childLanes,i|=14680064&a.subtreeFlags,i|=14680064&a.flags,a.return=e,a=a.sibling;else for(a=e.child;null!==a;)n|=a.lanes|a.childLanes,i|=a.subtreeFlags,i|=a.flags,a.return=e,a=a.sibling;return e.subtreeFlags|=i,e.childLanes=n,t}function Ko(e,t,i){var a=t.pendingProps;switch(ns(t),t.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return qo(t),null;case 1:case 17:return Ra(t.type)&&Da(),qo(t),null;case 3:return a=t.stateNode,sr(),Ta(Pa),Ta(Ma),pr(),a.pendingContext&&(a.context=a.pendingContext,a.pendingContext=null),null!==e&&null!==e.child||(ds(t)?t.flags|=4:null===e||e.memoizedState.isDehydrated&&0==(256&t.flags)||(t.flags|=1024,null!==rs&&(lc(rs),rs=null))),Do(e,t),qo(t),null;case 5:or(t);var r=ir(nr.current);if(i=t.type,null!==e&&null!=t.stateNode)ko(e,t,i,a,r),e.ref!==t.ref&&(t.flags|=512,t.flags|=2097152);else{if(!a){if(null===t.stateNode)throw Error(n(166));return qo(t),null}if(e=ir(er.current),ds(t)){a=t.stateNode,i=t.type;var o=t.memoizedProps;switch(a[ua]=t,a[ma]=o,e=0!=(1&t.mode),i){case"dialog":zi("cancel",a),zi("close",a);break;case"iframe":case"object":case"embed":zi("load",a);break;case"video":case"audio":for(r=0;r<Fi.length;r++)zi(Fi[r],a);break;case"source":zi("error",a);break;case"img":case"image":case"link":zi("error",a),zi("load",a);break;case"details":zi("toggle",a);break;case"input":Q(a,o),zi("invalid",a);break;case"select":a._wrapperState={wasMultiple:!!o.multiple},zi("invalid",a);break;case"textarea":se(a,o),zi("invalid",a)}for(var l in _e(i,o),r=null,o)if(o.hasOwnProperty(l)){var c=o[l];"children"===l?"string"==typeof c?a.textContent!==c&&(!0!==o.suppressHydrationWarning&&$i(a.textContent,c,e),r=["children",c]):"number"==typeof c&&a.textContent!==""+c&&(!0!==o.suppressHydrationWarning&&$i(a.textContent,c,e),r=["children",""+c]):s.hasOwnProperty(l)&&null!=c&&"onScroll"===l&&zi("scroll",a)}switch(i){case"input":Y(a),ee(a,o,!0);break;case"textarea":Y(a),oe(a);break;case"select":case"option":break;default:"function"==typeof o.onClick&&(a.onclick=ea)}a=r,t.updateQueue=a,null!==a&&(t.flags|=4)}else{l=9===r.nodeType?r:r.ownerDocument,"http://www.w3.org/1999/xhtml"===e&&(e=le(i)),"http://www.w3.org/1999/xhtml"===e?"script"===i?((e=l.createElement("div")).innerHTML="<script><\/script>",e=e.removeChild(e.firstChild)):"string"==typeof a.is?e=l.createElement(i,{is:a.is}):(e=l.createElement(i),"select"===i&&(l=e,a.multiple?l.multiple=!0:a.size&&(l.size=a.size))):e=l.createElementNS(e,i),e[ua]=t,e[ma]=a,Ro(e,t,!1,!1),t.stateNode=e;e:{switch(l=we(i,a),i){case"dialog":zi("cancel",e),zi("close",e),r=a;break;case"iframe":case"object":case"embed":zi("load",e),r=a;break;case"video":case"audio":for(r=0;r<Fi.length;r++)zi(Fi[r],e);r=a;break;case"source":zi("error",e),r=a;break;case"img":case"image":case"link":zi("error",e),zi("load",e),r=a;break;case"details":zi("toggle",e),r=a;break;case"input":Q(e,a),r=Z(e,a),zi("invalid",e);break;case"option":default:r=a;break;case"select":e._wrapperState={wasMultiple:!!a.multiple},r=N({},a,{value:void 0}),zi("invalid",e);break;case"textarea":se(e,a),r=ae(e,a),zi("invalid",e)}for(o in _e(i,r),c=r)if(c.hasOwnProperty(o)){var h=c[o];"style"===o?ve(e,h):"dangerouslySetInnerHTML"===o?null!=(h=h?h.__html:void 0)&&de(e,h):"children"===o?"string"==typeof h?("textarea"!==i||""!==h)&&ue(e,h):"number"==typeof h&&ue(e,""+h):"suppressContentEditableWarning"!==o&&"suppressHydrationWarning"!==o&&"autoFocus"!==o&&(s.hasOwnProperty(o)?null!=h&&"onScroll"===o&&zi("scroll",e):null!=h&&w(e,o,h,l))}switch(i){case"input":Y(e),ee(e,a,!1);break;case"textarea":Y(e),oe(e);break;case"option":null!=a.value&&e.setAttribute("value",""+j(a.value));break;case"select":e.multiple=!!a.multiple,null!=(o=a.value)?ie(e,!!a.multiple,o,!1):null!=a.defaultValue&&ie(e,!!a.multiple,a.defaultValue,!0);break;default:"function"==typeof r.onClick&&(e.onclick=ea)}switch(i){case"button":case"input":case"select":case"textarea":a=!!a.autoFocus;break e;case"img":a=!0;break e;default:a=!1}}a&&(t.flags|=4)}null!==t.ref&&(t.flags|=512,t.flags|=2097152)}return qo(t),null;case 6:if(e&&null!=t.stateNode)Fo(e,t,e.memoizedProps,a);else{if("string"!=typeof a&&null===t.stateNode)throw Error(n(166));if(i=ir(nr.current),ir(er.current),ds(t)){if(a=t.stateNode,i=t.memoizedProps,a[ua]=t,(o=a.nodeValue!==i)&&null!==(e=is))switch(e.tag){case 3:$i(a.nodeValue,i,0!=(1&e.mode));break;case 5:!0!==e.memoizedProps.suppressHydrationWarning&&$i(a.nodeValue,i,0!=(1&e.mode))}o&&(t.flags|=4)}else(a=(9===i.nodeType?i:i.ownerDocument).createTextNode(a))[ua]=t,t.stateNode=a}return qo(t),null;case 13:if(Ta(lr),a=t.memoizedState,null===e||null!==e.memoizedState&&null!==e.memoizedState.dehydrated){if(ss&&null!==as&&0!=(1&t.mode)&&0==(128&t.flags))us(),ms(),t.flags|=98560,o=!1;else if(o=ds(t),null!==a&&null!==a.dehydrated){if(null===e){if(!o)throw Error(n(318));if(!(o=null!==(o=t.memoizedState)?o.dehydrated:null))throw Error(n(317));o[ua]=t}else ms(),0==(128&t.flags)&&(t.memoizedState=null),t.flags|=4;qo(t),o=!1}else null!==rs&&(lc(rs),rs=null),o=!0;if(!o)return 65536&t.flags?t:null}return 0!=(128&t.flags)?(t.lanes=i,t):((a=null!==a)!==(null!==e&&null!==e.memoizedState)&&a&&(t.child.flags|=8192,0!=(1&t.mode)&&(null===e||0!=(1&lr.current)?0===Fl&&(Fl=3):vc())),null!==t.updateQueue&&(t.flags|=4),qo(t),null);case 4:return sr(),Do(e,t),null===e&&Gi(t.stateNode.containerInfo),qo(t),null;case 10:return Cs(t.type._context),qo(t),null;case 19:if(Ta(lr),null===(o=t.memoizedState))return qo(t),null;if(a=0!=(128&t.flags),null===(l=o.rendering))if(a)Yo(o,!1);else{if(0!==Fl||null!==e&&0!=(128&e.flags))for(e=t.child;null!==e;){if(null!==(l=cr(e))){for(t.flags|=128,Yo(o,!1),null!==(a=l.updateQueue)&&(t.updateQueue=a,t.flags|=4),t.subtreeFlags=0,a=i,i=t.child;null!==i;)e=a,(o=i).flags&=14680066,null===(l=o.alternate)?(o.childLanes=0,o.lanes=e,o.child=null,o.subtreeFlags=0,o.memoizedProps=null,o.memoizedState=null,o.updateQueue=null,o.dependencies=null,o.stateNode=null):(o.childLanes=l.childLanes,o.lanes=l.lanes,o.child=l.child,o.subtreeFlags=0,o.deletions=null,o.memoizedProps=l.memoizedProps,o.memoizedState=l.memoizedState,o.updateQueue=l.updateQueue,o.type=l.type,e=l.dependencies,o.dependencies=null===e?null:{lanes:e.lanes,firstContext:e.firstContext}),i=i.sibling;return Aa(lr,1&lr.current|2),t.child}e=e.sibling}null!==o.tail&&Je()>Wl&&(t.flags|=128,a=!0,Yo(o,!1),t.lanes=4194304)}else{if(!a)if(null!==(e=cr(l))){if(t.flags|=128,a=!0,null!==(i=e.updateQueue)&&(t.updateQueue=i,t.flags|=4),Yo(o,!0),null===o.tail&&"hidden"===o.tailMode&&!l.alternate&&!ss)return qo(t),null}else 2*Je()-o.renderingStartTime>Wl&&1073741824!==i&&(t.flags|=128,a=!0,Yo(o,!1),t.lanes=4194304);o.isBackwards?(l.sibling=t.child,t.child=l):(null!==(i=o.last)?i.sibling=l:t.child=l,o.last=l)}return null!==o.tail?(t=o.tail,o.rendering=t,o.tail=t.sibling,o.renderingStartTime=Je(),t.sibling=null,i=lr.current,Aa(lr,a?1&i|2:1&i),t):(qo(t),null);case 22:case 23:return uc(),a=null!==t.memoizedState,null!==e&&null!==e.memoizedState!==a&&(t.flags|=8192),a&&0!=(1&t.mode)?0!=(1073741824&Dl)&&(qo(t),6&t.subtreeFlags&&(t.flags|=8192)):qo(t),null;case 24:case 25:return null}throw Error(n(156,t.tag))}function Zo(e,t){switch(ns(t),t.tag){case 1:return Ra(t.type)&&Da(),65536&(e=t.flags)?(t.flags=-65537&e|128,t):null;case 3:return sr(),Ta(Pa),Ta(Ma),pr(),0!=(65536&(e=t.flags))&&0==(128&e)?(t.flags=-65537&e|128,t):null;case 5:return or(t),null;case 13:if(Ta(lr),null!==(e=t.memoizedState)&&null!==e.dehydrated){if(null===t.alternate)throw Error(n(340));ms()}return 65536&(e=t.flags)?(t.flags=-65537&e|128,t):null;case 19:return Ta(lr),null;case 4:return sr(),null;case 10:return Cs(t.type._context),null;case 22:case 23:return uc(),null;default:return null}}Ro=function(e,t){for(var n=t.child;null!==n;){if(5===n.tag||6===n.tag)e.appendChild(n.stateNode);else if(4!==n.tag&&null!==n.child){n.child.return=n,n=n.child;continue}if(n===t)break;for(;null===n.sibling;){if(null===n.return||n.return===t)return;n=n.return}n.sibling.return=n.return,n=n.sibling}},Do=function(){},ko=function(e,t,n,i){var a=e.memoizedProps;if(a!==i){e=t.stateNode,ir(er.current);var r,o=null;switch(n){case"input":a=Z(e,a),i=Z(e,i),o=[];break;case"select":a=N({},a,{value:void 0}),i=N({},i,{value:void 0}),o=[];break;case"textarea":a=ae(e,a),i=ae(e,i),o=[];break;default:"function"!=typeof a.onClick&&"function"==typeof i.onClick&&(e.onclick=ea)}for(h in _e(n,i),n=null,a)if(!i.hasOwnProperty(h)&&a.hasOwnProperty(h)&&null!=a[h])if("style"===h){var l=a[h];for(r in l)l.hasOwnProperty(r)&&(n||(n={}),n[r]="")}else"dangerouslySetInnerHTML"!==h&&"children"!==h&&"suppressContentEditableWarning"!==h&&"suppressHydrationWarning"!==h&&"autoFocus"!==h&&(s.hasOwnProperty(h)?o||(o=[]):(o=o||[]).push(h,null));for(h in i){var c=i[h];if(l=null!=a?a[h]:void 0,i.hasOwnProperty(h)&&c!==l&&(null!=c||null!=l))if("style"===h)if(l){for(r in l)!l.hasOwnProperty(r)||c&&c.hasOwnProperty(r)||(n||(n={}),n[r]="");for(r in c)c.hasOwnProperty(r)&&l[r]!==c[r]&&(n||(n={}),n[r]=c[r])}else n||(o||(o=[]),o.push(h,n)),n=c;else"dangerouslySetInnerHTML"===h?(c=c?c.__html:void 0,l=l?l.__html:void 0,null!=c&&l!==c&&(o=o||[]).push(h,c)):"children"===h?"string"!=typeof c&&"number"!=typeof c||(o=o||[]).push(h,""+c):"suppressContentEditableWarning"!==h&&"suppressHydrationWarning"!==h&&(s.hasOwnProperty(h)?(null!=c&&"onScroll"===h&&zi("scroll",e),o||l===c||(o=[])):(o=o||[]).push(h,c))}n&&(o=o||[]).push("style",n);var h=o;(t.updateQueue=h)&&(t.flags|=4)}},Fo=function(e,t,n,i){n!==i&&(t.flags|=4)};var Qo=!1,Jo=!1,$o="function"==typeof WeakSet?WeakSet:Set,el=null;function tl(e,t){var n=e.ref;if(null!==n)if("function"==typeof n)try{n(null)}catch(n){Tc(e,t,n)}else n.current=null}function nl(e,t,n){try{n()}catch(n){Tc(e,t,n)}}var il=!1;function al(e,t,n){var i=t.updateQueue;if(null!==(i=null!==i?i.lastEffect:null)){var a=i=i.next;do{if((a.tag&e)===e){var s=a.destroy;a.destroy=void 0,void 0!==s&&nl(t,n,s)}a=a.next}while(a!==i)}}function sl(e,t){if(null!==(t=null!==(t=t.updateQueue)?t.lastEffect:null)){var n=t=t.next;do{if((n.tag&e)===e){var i=n.create;n.destroy=i()}n=n.next}while(n!==t)}}function rl(e){var t=e.ref;if(null!==t){var n=e.stateNode;e.tag,e=n,"function"==typeof t?t(e):t.current=e}}function ol(e){var t=e.alternate;null!==t&&(e.alternate=null,ol(t)),e.child=null,e.deletions=null,e.sibling=null,5===e.tag&&(null!==(t=e.stateNode)&&(delete t[ua],delete t[ma],delete t[ga],delete t[va],delete t[ya])),e.stateNode=null,e.return=null,e.dependencies=null,e.memoizedProps=null,e.memoizedState=null,e.pendingProps=null,e.stateNode=null,e.updateQueue=null}function ll(e){return 5===e.tag||3===e.tag||4===e.tag}function cl(e){e:for(;;){for(;null===e.sibling;){if(null===e.return||ll(e.return))return null;e=e.return}for(e.sibling.return=e.return,e=e.sibling;5!==e.tag&&6!==e.tag&&18!==e.tag;){if(2&e.flags)continue e;if(null===e.child||4===e.tag)continue e;e.child.return=e,e=e.child}if(!(2&e.flags))return e.stateNode}}function hl(e,t,n){var i=e.tag;if(5===i||6===i)e=e.stateNode,t?8===n.nodeType?n.parentNode.insertBefore(e,t):n.insertBefore(e,t):(8===n.nodeType?(t=n.parentNode).insertBefore(e,n):(t=n).appendChild(e),null!=(n=n._reactRootContainer)||null!==t.onclick||(t.onclick=ea));else if(4!==i&&null!==(e=e.child))for(hl(e,t,n),e=e.sibling;null!==e;)hl(e,t,n),e=e.sibling}function pl(e,t,n){var i=e.tag;if(5===i||6===i)e=e.stateNode,t?n.insertBefore(e,t):n.appendChild(e);else if(4!==i&&null!==(e=e.child))for(pl(e,t,n),e=e.sibling;null!==e;)pl(e,t,n),e=e.sibling}var dl=null,ul=!1;function ml(e,t,n){for(n=n.child;null!==n;)fl(e,t,n),n=n.sibling}function fl(e,t,n){if(rt&&"function"==typeof rt.onCommitFiberUnmount)try{rt.onCommitFiberUnmount(st,n)}catch(e){}switch(n.tag){case 5:Jo||tl(n,t);case 6:var i=dl,a=ul;dl=null,ml(e,t,n),ul=a,null!==(dl=i)&&(ul?(e=dl,n=n.stateNode,8===e.nodeType?e.parentNode.removeChild(n):e.removeChild(n)):dl.removeChild(n.stateNode));break;case 18:null!==dl&&(ul?(e=dl,n=n.stateNode,8===e.nodeType?ca(e.parentNode,n):1===e.nodeType&&ca(e,n),Gt(e)):ca(dl,n.stateNode));break;case 4:i=dl,a=ul,dl=n.stateNode.containerInfo,ul=!0,ml(e,t,n),dl=i,ul=a;break;case 0:case 11:case 14:case 15:if(!Jo&&(null!==(i=n.updateQueue)&&null!==(i=i.lastEffect))){a=i=i.next;do{var s=a,r=s.destroy;s=s.tag,void 0!==r&&(0!=(2&s)||0!=(4&s))&&nl(n,t,r),a=a.next}while(a!==i)}ml(e,t,n);break;case 1:if(!Jo&&(tl(n,t),"function"==typeof(i=n.stateNode).componentWillUnmount))try{i.props=n.memoizedProps,i.state=n.memoizedState,i.componentWillUnmount()}catch(e){Tc(n,t,e)}ml(e,t,n);break;case 21:ml(e,t,n);break;case 22:1&n.mode?(Jo=(i=Jo)||null!==n.memoizedState,ml(e,t,n),Jo=i):ml(e,t,n);break;default:ml(e,t,n)}}function gl(e){var t=e.updateQueue;if(null!==t){e.updateQueue=null;var n=e.stateNode;null===n&&(n=e.stateNode=new $o),t.forEach((function(t){var i=Pc.bind(null,e,t);n.has(t)||(n.add(t),t.then(i,i))}))}}function vl(e,t){var i=t.deletions;if(null!==i)for(var a=0;a<i.length;a++){var s=i[a];try{var r=e,o=t,l=o;e:for(;null!==l;){switch(l.tag){case 5:dl=l.stateNode,ul=!1;break e;case 3:case 4:dl=l.stateNode.containerInfo,ul=!0;break e}l=l.return}if(null===dl)throw Error(n(160));fl(r,o,s),dl=null,ul=!1;var c=s.alternate;null!==c&&(c.return=null),s.return=null}catch(e){Tc(s,t,e)}}if(12854&t.subtreeFlags)for(t=t.child;null!==t;)yl(t,e),t=t.sibling}function yl(e,t){var i=e.alternate,a=e.flags;switch(e.tag){case 0:case 11:case 14:case 15:if(vl(t,e),_l(e),4&a){try{al(3,e,e.return),sl(3,e)}catch(t){Tc(e,e.return,t)}try{al(5,e,e.return)}catch(t){Tc(e,e.return,t)}}break;case 1:vl(t,e),_l(e),512&a&&null!==i&&tl(i,i.return);break;case 5:if(vl(t,e),_l(e),512&a&&null!==i&&tl(i,i.return),32&e.flags){var s=e.stateNode;try{ue(s,"")}catch(t){Tc(e,e.return,t)}}if(4&a&&null!=(s=e.stateNode)){var r=e.memoizedProps,o=null!==i?i.memoizedProps:r,l=e.type,c=e.updateQueue;if(e.updateQueue=null,null!==c)try{"input"===l&&"radio"===r.type&&null!=r.name&&J(s,r),we(l,o);var h=we(l,r);for(o=0;o<c.length;o+=2){var p=c[o],d=c[o+1];"style"===p?ve(s,d):"dangerouslySetInnerHTML"===p?de(s,d):"children"===p?ue(s,d):w(s,p,d,h)}switch(l){case"input":$(s,r);break;case"textarea":re(s,r);break;case"select":var u=s._wrapperState.wasMultiple;s._wrapperState.wasMultiple=!!r.multiple;var m=r.value;null!=m?ie(s,!!r.multiple,m,!1):u!==!!r.multiple&&(null!=r.defaultValue?ie(s,!!r.multiple,r.defaultValue,!0):ie(s,!!r.multiple,r.multiple?[]:"",!1))}s[ma]=r}catch(t){Tc(e,e.return,t)}}break;case 6:if(vl(t,e),_l(e),4&a){if(null===e.stateNode)throw Error(n(162));s=e.stateNode,r=e.memoizedProps;try{s.nodeValue=r}catch(t){Tc(e,e.return,t)}}break;case 3:if(vl(t,e),_l(e),4&a&&null!==i&&i.memoizedState.isDehydrated)try{Gt(t.containerInfo)}catch(t){Tc(e,e.return,t)}break;case 4:default:vl(t,e),_l(e);break;case 13:vl(t,e),_l(e),8192&(s=e.child).flags&&(r=null!==s.memoizedState,s.stateNode.isHidden=r,!r||null!==s.alternate&&null!==s.alternate.memoizedState||(Gl=Je())),4&a&&gl(e);break;case 22:if(p=null!==i&&null!==i.memoizedState,1&e.mode?(Jo=(h=Jo)||p,vl(t,e),Jo=h):vl(t,e),_l(e),8192&a){if(h=null!==e.memoizedState,(e.stateNode.isHidden=h)&&!p&&0!=(1&e.mode))for(el=e,p=e.child;null!==p;){for(d=el=p;null!==el;){switch(m=(u=el).child,u.tag){case 0:case 11:case 14:case 15:al(4,u,u.return);break;case 1:tl(u,u.return);var f=u.stateNode;if("function"==typeof f.componentWillUnmount){a=u,i=u.return;try{t=a,f.props=t.memoizedProps,f.state=t.memoizedState,f.componentWillUnmount()}catch(e){Tc(a,i,e)}}break;case 5:tl(u,u.return);break;case 22:if(null!==u.memoizedState){Cl(d);continue}}null!==m?(m.return=u,el=m):Cl(d)}p=p.sibling}e:for(p=null,d=e;;){if(5===d.tag){if(null===p){p=d;try{s=d.stateNode,h?"function"==typeof(r=s.style).setProperty?r.setProperty("display","none","important"):r.display="none":(l=d.stateNode,o=null!=(c=d.memoizedProps.style)&&c.hasOwnProperty("display")?c.display:null,l.style.display=ge("display",o))}catch(t){Tc(e,e.return,t)}}}else if(6===d.tag){if(null===p)try{d.stateNode.nodeValue=h?"":d.memoizedProps}catch(t){Tc(e,e.return,t)}}else if((22!==d.tag&&23!==d.tag||null===d.memoizedState||d===e)&&null!==d.child){d.child.return=d,d=d.child;continue}if(d===e)break e;for(;null===d.sibling;){if(null===d.return||d.return===e)break e;p===d&&(p=null),d=d.return}p===d&&(p=null),d.sibling.return=d.return,d=d.sibling}}break;case 19:vl(t,e),_l(e),4&a&&gl(e);case 21:}}function _l(e){var t=e.flags;if(2&t){try{e:{for(var i=e.return;null!==i;){if(ll(i)){var a=i;break e}i=i.return}throw Error(n(160))}switch(a.tag){case 5:var s=a.stateNode;32&a.flags&&(ue(s,""),a.flags&=-33),pl(e,cl(e),s);break;case 3:case 4:var r=a.stateNode.containerInfo;hl(e,cl(e),r);break;default:throw Error(n(161))}}catch(t){Tc(e,e.return,t)}e.flags&=-3}4096&t&&(e.flags&=-4097)}function wl(e,t,n){el=e,bl(e)}function bl(e,t,n){for(var i=0!=(1&e.mode);null!==el;){var a=el,s=a.child;if(22===a.tag&&i){var r=null!==a.memoizedState||Qo;if(!r){var o=a.alternate,l=null!==o&&null!==o.memoizedState||Jo;o=Qo;var c=Jo;if(Qo=r,(Jo=l)&&!c)for(el=a;null!==el;)l=(r=el).child,22===r.tag&&null!==r.memoizedState?Sl(a):null!==l?(l.return=r,el=l):Sl(a);for(;null!==s;)el=s,bl(s),s=s.sibling;el=a,Qo=o,Jo=c}xl(e)}else 0!=(8772&a.subtreeFlags)&&null!==s?(s.return=a,el=s):xl(e)}}function xl(e){for(;null!==el;){var t=el;if(0!=(8772&t.flags)){var i=t.alternate;try{if(0!=(8772&t.flags))switch(t.tag){case 0:case 11:case 15:Jo||sl(5,t);break;case 1:var a=t.stateNode;if(4&t.flags&&!Jo)if(null===i)a.componentDidMount();else{var s=t.elementType===t.type?i.memoizedProps:vs(t.type,i.memoizedProps);a.componentDidUpdate(s,i.memoizedState,a.__reactInternalSnapshotBeforeUpdate)}var r=t.updateQueue;null!==r&&Us(t,r,a);break;case 3:var o=t.updateQueue;if(null!==o){if(i=null,null!==t.child)switch(t.child.tag){case 5:case 1:i=t.child.stateNode}Us(t,o,i)}break;case 5:var l=t.stateNode;if(null===i&&4&t.flags){i=l;var c=t.memoizedProps;switch(t.type){case"button":case"input":case"select":case"textarea":c.autoFocus&&i.focus();break;case"img":c.src&&(i.src=c.src)}}break;case 6:case 4:case 12:case 19:case 17:case 21:case 22:case 23:case 25:break;case 13:if(null===t.memoizedState){var h=t.alternate;if(null!==h){var p=h.memoizedState;if(null!==p){var d=p.dehydrated;null!==d&&Gt(d)}}}break;default:throw Error(n(163))}Jo||512&t.flags&&rl(t)}catch(e){Tc(t,t.return,e)}}if(t===e){el=null;break}if(null!==(i=t.sibling)){i.return=t.return,el=i;break}el=t.return}}function Cl(e){for(;null!==el;){var t=el;if(t===e){el=null;break}var n=t.sibling;if(null!==n){n.return=t.return,el=n;break}el=t.return}}function Sl(e){for(;null!==el;){var t=el;try{switch(t.tag){case 0:case 11:case 15:var n=t.return;try{sl(4,t)}catch(e){Tc(t,n,e)}break;case 1:var i=t.stateNode;if("function"==typeof i.componentDidMount){var a=t.return;try{i.componentDidMount()}catch(e){Tc(t,a,e)}}var s=t.return;try{rl(t)}catch(e){Tc(t,s,e)}break;case 5:var r=t.return;try{rl(t)}catch(e){Tc(t,r,e)}}}catch(e){Tc(t,t.return,e)}if(t===e){el=null;break}var o=t.sibling;if(null!==o){o.return=t.return,el=o;break}el=t.return}}var El,Tl=Math.ceil,Al=b.ReactCurrentDispatcher,Ll=b.ReactCurrentOwner,Ml=b.ReactCurrentBatchConfig,Pl=0,Ol=null,Il=null,Rl=0,Dl=0,kl=Ea(0),Fl=0,Bl=null,Nl=0,Ul=0,zl=0,Vl=null,Hl=null,Gl=0,Wl=1/0,jl=null,Xl=!1,Yl=null,ql=null,Kl=!1,Zl=null,Ql=0,Jl=0,$l=null,ec=-1,tc=0;function nc(){return 0!=(6&Pl)?Je():-1!==ec?ec:ec=Je()}function ic(e){return 0==(1&e.mode)?1:0!=(2&Pl)&&0!==Rl?Rl&-Rl:null!==gs.transition?(0===tc&&(tc=gt()),tc):0!==(e=wt)?e:e=void 0===(e=window.event)?16:Qt(e.type)}function ac(e,t,i,a){if(50<Jl)throw Jl=0,$l=null,Error(n(185));yt(e,i,a),0!=(2&Pl)&&e===Ol||(e===Ol&&(0==(2&Pl)&&(Ul|=i),4===Fl&&cc(e,Rl)),sc(e,a),1===i&&0===Pl&&0==(1&t.mode)&&(Wl=Je()+500,za&&Ga()))}function sc(e,t){var n=e.callbackNode;!function(e,t){for(var n=e.suspendedLanes,i=e.pingedLanes,a=e.expirationTimes,s=e.pendingLanes;0<s;){var r=31-ot(s),o=1<<r,l=a[r];-1===l?0!=(o&n)&&0==(o&i)||(a[r]=mt(o,t)):l<=t&&(e.expiredLanes|=o),s&=~o}}(e,t);var i=ut(e,e===Ol?Rl:0);if(0===i)null!==n&&Ke(n),e.callbackNode=null,e.callbackPriority=0;else if(t=i&-i,e.callbackPriority!==t){if(null!=n&&Ke(n),1===t)0===e.tag?function(e){za=!0,Ha(e)}(hc.bind(null,e)):Ha(hc.bind(null,e)),oa((function(){0==(6&Pl)&&Ga()})),n=null;else{switch(bt(i)){case 1:n=et;break;case 4:n=tt;break;case 16:default:n=nt;break;case 536870912:n=at}n=Oc(n,rc.bind(null,e))}e.callbackPriority=t,e.callbackNode=n}}function rc(e,t){if(ec=-1,tc=0,0!=(6&Pl))throw Error(n(327));var i=e.callbackNode;if(Sc()&&e.callbackNode!==i)return null;var a=ut(e,e===Ol?Rl:0);if(0===a)return null;if(0!=(30&a)||0!=(a&e.expiredLanes)||t)t=yc(e,a);else{t=a;var s=Pl;Pl|=2;var r=gc();for(Ol===e&&Rl===t||(jl=null,Wl=Je()+500,mc(e,t));;)try{wc();break}catch(t){fc(e,t)}xs(),Al.current=r,Pl=s,null!==Il?t=0:(Ol=null,Rl=0,t=Fl)}if(0!==t){if(2===t&&(0!==(s=ft(e))&&(a=s,t=oc(e,s))),1===t)throw i=Bl,mc(e,0),cc(e,a),sc(e,Je()),i;if(6===t)cc(e,a);else{if(s=e.current.alternate,0==(30&a)&&!function(e){for(var t=e;;){if(16384&t.flags){var n=t.updateQueue;if(null!==n&&null!==(n=n.stores))for(var i=0;i<n.length;i++){var a=n[i],s=a.getSnapshot;a=a.value;try{if(!li(s(),a))return!1}catch(e){return!1}}}if(n=t.child,16384&t.subtreeFlags&&null!==n)n.return=t,t=n;else{if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return!0;t=t.return}t.sibling.return=t.return,t=t.sibling}}return!0}(s)&&(2===(t=yc(e,a))&&(0!==(r=ft(e))&&(a=r,t=oc(e,r))),1===t))throw i=Bl,mc(e,0),cc(e,a),sc(e,Je()),i;switch(e.finishedWork=s,e.finishedLanes=a,t){case 0:case 1:throw Error(n(345));case 2:case 5:Cc(e,Hl,jl);break;case 3:if(cc(e,a),(130023424&a)===a&&10<(t=Gl+500-Je())){if(0!==ut(e,0))break;if(((s=e.suspendedLanes)&a)!==a){nc(),e.pingedLanes|=e.suspendedLanes&s;break}e.timeoutHandle=aa(Cc.bind(null,e,Hl,jl),t);break}Cc(e,Hl,jl);break;case 4:if(cc(e,a),(4194240&a)===a)break;for(t=e.eventTimes,s=-1;0<a;){var o=31-ot(a);r=1<<o,(o=t[o])>s&&(s=o),a&=~r}if(a=s,10<(a=(120>(a=Je()-a)?120:480>a?480:1080>a?1080:1920>a?1920:3e3>a?3e3:4320>a?4320:1960*Tl(a/1960))-a)){e.timeoutHandle=aa(Cc.bind(null,e,Hl,jl),a);break}Cc(e,Hl,jl);break;default:throw Error(n(329))}}}return sc(e,Je()),e.callbackNode===i?rc.bind(null,e):null}function oc(e,t){var n=Vl;return e.current.memoizedState.isDehydrated&&(mc(e,t).flags|=256),2!==(e=yc(e,t))&&(t=Hl,Hl=n,null!==t&&lc(t)),e}function lc(e){null===Hl?Hl=e:Hl.push.apply(Hl,e)}function cc(e,t){for(t&=~zl,t&=~Ul,e.suspendedLanes|=t,e.pingedLanes&=~t,e=e.expirationTimes;0<t;){var n=31-ot(t),i=1<<n;e[n]=-1,t&=~i}}function hc(e){if(0!=(6&Pl))throw Error(n(327));Sc();var t=ut(e,0);if(0==(1&t))return sc(e,Je()),null;var i=yc(e,t);if(0!==e.tag&&2===i){var a=ft(e);0!==a&&(t=a,i=oc(e,a))}if(1===i)throw i=Bl,mc(e,0),cc(e,t),sc(e,Je()),i;if(6===i)throw Error(n(345));return e.finishedWork=e.current.alternate,e.finishedLanes=t,Cc(e,Hl,jl),sc(e,Je()),null}function pc(e,t){var n=Pl;Pl|=1;try{return e(t)}finally{0===(Pl=n)&&(Wl=Je()+500,za&&Ga())}}function dc(e){null!==Zl&&0===Zl.tag&&0==(6&Pl)&&Sc();var t=Pl;Pl|=1;var n=Ml.transition,i=wt;try{if(Ml.transition=null,wt=1,e)return e()}finally{wt=i,Ml.transition=n,0==(6&(Pl=t))&&Ga()}}function uc(){Dl=kl.current,Ta(kl)}function mc(e,t){e.finishedWork=null,e.finishedLanes=0;var n=e.timeoutHandle;if(-1!==n&&(e.timeoutHandle=-1,sa(n)),null!==Il)for(n=Il.return;null!==n;){var i=n;switch(ns(i),i.tag){case 1:null!=(i=i.type.childContextTypes)&&Da();break;case 3:sr(),Ta(Pa),Ta(Ma),pr();break;case 5:or(i);break;case 4:sr();break;case 13:case 19:Ta(lr);break;case 10:Cs(i.type._context);break;case 22:case 23:uc()}n=n.return}if(Ol=e,Il=e=kc(e.current,null),Rl=Dl=t,Fl=0,Bl=null,zl=Ul=Nl=0,Hl=Vl=null,null!==As){for(t=0;t<As.length;t++)if(null!==(i=(n=As[t]).interleaved)){n.interleaved=null;var a=i.next,s=n.pending;if(null!==s){var r=s.next;s.next=a,i.next=r}n.pending=i}As=null}return e}function fc(e,t){for(;;){var i=Il;try{if(xs(),dr.current=ro,yr){for(var a=fr.memoizedState;null!==a;){var s=a.queue;null!==s&&(s.pending=null),a=a.next}yr=!1}if(mr=0,vr=gr=fr=null,_r=!1,wr=0,Ll.current=null,null===i||null===i.return){Fl=1,Bl=t,Il=null;break}e:{var r=e,o=i.return,l=i,c=t;if(t=Rl,l.flags|=32768,null!==c&&"object"==typeof c&&"function"==typeof c.then){var h=c,p=l,d=p.tag;if(0==(1&p.mode)&&(0===d||11===d||15===d)){var u=p.alternate;u?(p.updateQueue=u.updateQueue,p.memoizedState=u.memoizedState,p.lanes=u.lanes):(p.updateQueue=null,p.memoizedState=null)}var m=yo(o);if(null!==m){m.flags&=-257,_o(m,o,l,0,t),1&m.mode&&vo(r,h,t),c=h;var f=(t=m).updateQueue;if(null===f){var g=new Set;g.add(c),t.updateQueue=g}else f.add(c);break e}if(0==(1&t)){vo(r,h,t),vc();break e}c=Error(n(426))}else if(ss&&1&l.mode){var v=yo(o);if(null!==v){0==(65536&v.flags)&&(v.flags|=256),_o(v,o,l,0,t),fs(ho(c,l));break e}}r=c=ho(c,l),4!==Fl&&(Fl=2),null===Vl?Vl=[r]:Vl.push(r),r=o;do{switch(r.tag){case 3:r.flags|=65536,t&=-t,r.lanes|=t,Bs(r,fo(0,c,t));break e;case 1:l=c;var y=r.type,_=r.stateNode;if(0==(128&r.flags)&&("function"==typeof y.getDerivedStateFromError||null!==_&&"function"==typeof _.componentDidCatch&&(null===ql||!ql.has(_)))){r.flags|=65536,t&=-t,r.lanes|=t,Bs(r,go(r,l,t));break e}}r=r.return}while(null!==r)}xc(i)}catch(e){t=e,Il===i&&null!==i&&(Il=i=i.return);continue}break}}function gc(){var e=Al.current;return Al.current=ro,null===e?ro:e}function vc(){0!==Fl&&3!==Fl&&2!==Fl||(Fl=4),null===Ol||0==(268435455&Nl)&&0==(268435455&Ul)||cc(Ol,Rl)}function yc(e,t){var i=Pl;Pl|=2;var a=gc();for(Ol===e&&Rl===t||(jl=null,mc(e,t));;)try{_c();break}catch(t){fc(e,t)}if(xs(),Pl=i,Al.current=a,null!==Il)throw Error(n(261));return Ol=null,Rl=0,Fl}function _c(){for(;null!==Il;)bc(Il)}function wc(){for(;null!==Il&&!Ze();)bc(Il)}function bc(e){var t=El(e.alternate,e,Dl);e.memoizedProps=e.pendingProps,null===t?xc(e):Il=t,Ll.current=null}function xc(e){var t=e;do{var n=t.alternate;if(e=t.return,0==(32768&t.flags)){if(null!==(n=Ko(n,t,Dl)))return void(Il=n)}else{if(null!==(n=Zo(n,t)))return n.flags&=32767,void(Il=n);if(null===e)return Fl=6,void(Il=null);e.flags|=32768,e.subtreeFlags=0,e.deletions=null}if(null!==(t=t.sibling))return void(Il=t);Il=t=e}while(null!==t);0===Fl&&(Fl=5)}function Cc(e,t,i){var a=wt,s=Ml.transition;try{Ml.transition=null,wt=1,function(e,t,i,a){do{Sc()}while(null!==Zl);if(0!=(6&Pl))throw Error(n(327));i=e.finishedWork;var s=e.finishedLanes;if(null===i)return null;if(e.finishedWork=null,e.finishedLanes=0,i===e.current)throw Error(n(177));e.callbackNode=null,e.callbackPriority=0;var r=i.lanes|i.childLanes;if(function(e,t){var n=e.pendingLanes&~t;e.pendingLanes=t,e.suspendedLanes=0,e.pingedLanes=0,e.expiredLanes&=t,e.mutableReadLanes&=t,e.entangledLanes&=t,t=e.entanglements;var i=e.eventTimes;for(e=e.expirationTimes;0<n;){var a=31-ot(n),s=1<<a;t[a]=0,i[a]=-1,e[a]=-1,n&=~s}}(e,r),e===Ol&&(Il=Ol=null,Rl=0),0==(2064&i.subtreeFlags)&&0==(2064&i.flags)||Kl||(Kl=!0,Oc(nt,(function(){return Sc(),null}))),r=0!=(15990&i.flags),0!=(15990&i.subtreeFlags)||r){r=Ml.transition,Ml.transition=null;var o=wt;wt=1;var l=Pl;Pl|=4,Ll.current=null,function(e,t){if(ta=jt,mi(e=ui())){if("selectionStart"in e)var i={start:e.selectionStart,end:e.selectionEnd};else e:{var a=(i=(i=e.ownerDocument)&&i.defaultView||window).getSelection&&i.getSelection();if(a&&0!==a.rangeCount){i=a.anchorNode;var s=a.anchorOffset,r=a.focusNode;a=a.focusOffset;try{i.nodeType,r.nodeType}catch(e){i=null;break e}var o=0,l=-1,c=-1,h=0,p=0,d=e,u=null;t:for(;;){for(var m;d!==i||0!==s&&3!==d.nodeType||(l=o+s),d!==r||0!==a&&3!==d.nodeType||(c=o+a),3===d.nodeType&&(o+=d.nodeValue.length),null!==(m=d.firstChild);)u=d,d=m;for(;;){if(d===e)break t;if(u===i&&++h===s&&(l=o),u===r&&++p===a&&(c=o),null!==(m=d.nextSibling))break;u=(d=u).parentNode}d=m}i=-1===l||-1===c?null:{start:l,end:c}}else i=null}i=i||{start:0,end:0}}else i=null;for(na={focusedElem:e,selectionRange:i},jt=!1,el=t;null!==el;)if(e=(t=el).child,0!=(1028&t.subtreeFlags)&&null!==e)e.return=t,el=e;else for(;null!==el;){t=el;try{var f=t.alternate;if(0!=(1024&t.flags))switch(t.tag){case 0:case 11:case 15:case 5:case 6:case 4:case 17:break;case 1:if(null!==f){var g=f.memoizedProps,v=f.memoizedState,y=t.stateNode,_=y.getSnapshotBeforeUpdate(t.elementType===t.type?g:vs(t.type,g),v);y.__reactInternalSnapshotBeforeUpdate=_}break;case 3:var w=t.stateNode.containerInfo;1===w.nodeType?w.textContent="":9===w.nodeType&&w.documentElement&&w.removeChild(w.documentElement);break;default:throw Error(n(163))}}catch(e){Tc(t,t.return,e)}if(null!==(e=t.sibling)){e.return=t.return,el=e;break}el=t.return}f=il,il=!1}(e,i),yl(i,e),fi(na),jt=!!ta,na=ta=null,e.current=i,wl(i),Qe(),Pl=l,wt=o,Ml.transition=r}else e.current=i;if(Kl&&(Kl=!1,Zl=e,Ql=s),r=e.pendingLanes,0===r&&(ql=null),function(e){if(rt&&"function"==typeof rt.onCommitFiberRoot)try{rt.onCommitFiberRoot(st,e,void 0,128==(128&e.current.flags))}catch(e){}}(i.stateNode),sc(e,Je()),null!==t)for(a=e.onRecoverableError,i=0;i<t.length;i++)s=t[i],a(s.value,{componentStack:s.stack,digest:s.digest});if(Xl)throw Xl=!1,e=Yl,Yl=null,e;0!=(1&Ql)&&0!==e.tag&&Sc(),r=e.pendingLanes,0!=(1&r)?e===$l?Jl++:(Jl=0,$l=e):Jl=0,Ga()}(e,t,i,a)}finally{Ml.transition=s,wt=a}return null}function Sc(){if(null!==Zl){var e=bt(Ql),t=Ml.transition,i=wt;try{if(Ml.transition=null,wt=16>e?16:e,null===Zl)var a=!1;else{if(e=Zl,Zl=null,Ql=0,0!=(6&Pl))throw Error(n(331));var s=Pl;for(Pl|=4,el=e.current;null!==el;){var r=el,o=r.child;if(0!=(16&el.flags)){var l=r.deletions;if(null!==l){for(var c=0;c<l.length;c++){var h=l[c];for(el=h;null!==el;){var p=el;switch(p.tag){case 0:case 11:case 15:al(8,p,r)}var d=p.child;if(null!==d)d.return=p,el=d;else for(;null!==el;){var u=(p=el).sibling,m=p.return;if(ol(p),p===h){el=null;break}if(null!==u){u.return=m,el=u;break}el=m}}}var f=r.alternate;if(null!==f){var g=f.child;if(null!==g){f.child=null;do{var v=g.sibling;g.sibling=null,g=v}while(null!==g)}}el=r}}if(0!=(2064&r.subtreeFlags)&&null!==o)o.return=r,el=o;else e:for(;null!==el;){if(0!=(2048&(r=el).flags))switch(r.tag){case 0:case 11:case 15:al(9,r,r.return)}var y=r.sibling;if(null!==y){y.return=r.return,el=y;break e}el=r.return}}var _=e.current;for(el=_;null!==el;){var w=(o=el).child;if(0!=(2064&o.subtreeFlags)&&null!==w)w.return=o,el=w;else e:for(o=_;null!==el;){if(0!=(2048&(l=el).flags))try{switch(l.tag){case 0:case 11:case 15:sl(9,l)}}catch(e){Tc(l,l.return,e)}if(l===o){el=null;break e}var b=l.sibling;if(null!==b){b.return=l.return,el=b;break e}el=l.return}}if(Pl=s,Ga(),rt&&"function"==typeof rt.onPostCommitFiberRoot)try{rt.onPostCommitFiberRoot(st,e)}catch(e){}a=!0}return a}finally{wt=i,Ml.transition=t}}return!1}function Ec(e,t,n){e=ks(e,t=fo(0,t=ho(n,t),1),1),t=nc(),null!==e&&(yt(e,1,t),sc(e,t))}function Tc(e,t,n){if(3===e.tag)Ec(e,e,n);else for(;null!==t;){if(3===t.tag){Ec(t,e,n);break}if(1===t.tag){var i=t.stateNode;if("function"==typeof t.type.getDerivedStateFromError||"function"==typeof i.componentDidCatch&&(null===ql||!ql.has(i))){t=ks(t,e=go(t,e=ho(n,e),1),1),e=nc(),null!==t&&(yt(t,1,e),sc(t,e));break}}t=t.return}}function Ac(e,t,n){var i=e.pingCache;null!==i&&i.delete(t),t=nc(),e.pingedLanes|=e.suspendedLanes&n,Ol===e&&(Rl&n)===n&&(4===Fl||3===Fl&&(130023424&Rl)===Rl&&500>Je()-Gl?mc(e,0):zl|=n),sc(e,t)}function Lc(e,t){0===t&&(0==(1&e.mode)?t=1:(t=pt,0==(130023424&(pt<<=1))&&(pt=4194304)));var n=nc();null!==(e=Ps(e,t))&&(yt(e,t,n),sc(e,n))}function Mc(e){var t=e.memoizedState,n=0;null!==t&&(n=t.retryLane),Lc(e,n)}function Pc(e,t){var i=0;switch(e.tag){case 13:var a=e.stateNode,s=e.memoizedState;null!==s&&(i=s.retryLane);break;case 19:a=e.stateNode;break;default:throw Error(n(314))}null!==a&&a.delete(t),Lc(e,i)}function Oc(e,t){return qe(e,t)}function Ic(e,t,n,i){this.tag=e,this.key=n,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=t,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=i,this.subtreeFlags=this.flags=0,this.deletions=null,this.childLanes=this.lanes=0,this.alternate=null}function Rc(e,t,n,i){return new Ic(e,t,n,i)}function Dc(e){return!(!(e=e.prototype)||!e.isReactComponent)}function kc(e,t){var n=e.alternate;return null===n?((n=Rc(e.tag,t,e.key,e.mode)).elementType=e.elementType,n.type=e.type,n.stateNode=e.stateNode,n.alternate=e,e.alternate=n):(n.pendingProps=t,n.type=e.type,n.flags=0,n.subtreeFlags=0,n.deletions=null),n.flags=14680064&e.flags,n.childLanes=e.childLanes,n.lanes=e.lanes,n.child=e.child,n.memoizedProps=e.memoizedProps,n.memoizedState=e.memoizedState,n.updateQueue=e.updateQueue,t=e.dependencies,n.dependencies=null===t?null:{lanes:t.lanes,firstContext:t.firstContext},n.sibling=e.sibling,n.index=e.index,n.ref=e.ref,n}function Fc(e,t,i,a,s,r){var o=2;if(a=e,"function"==typeof e)Dc(e)&&(o=1);else if("string"==typeof e)o=5;else e:switch(e){case S:return Bc(i.children,s,r,t);case E:o=8,s|=8;break;case T:return(e=Rc(12,i,t,2|s)).elementType=T,e.lanes=r,e;case P:return(e=Rc(13,i,t,s)).elementType=P,e.lanes=r,e;case O:return(e=Rc(19,i,t,s)).elementType=O,e.lanes=r,e;case D:return Nc(i,s,r,t);default:if("object"==typeof e&&null!==e)switch(e.$$typeof){case A:o=10;break e;case L:o=9;break e;case M:o=11;break e;case I:o=14;break e;case R:o=16,a=null;break e}throw Error(n(130,null==e?e:typeof e,""))}return(t=Rc(o,i,t,s)).elementType=e,t.type=a,t.lanes=r,t}function Bc(e,t,n,i){return(e=Rc(7,e,i,t)).lanes=n,e}function Nc(e,t,n,i){return(e=Rc(22,e,i,t)).elementType=D,e.lanes=n,e.stateNode={isHidden:!1},e}function Uc(e,t,n){return(e=Rc(6,e,null,t)).lanes=n,e}function zc(e,t,n){return(t=Rc(4,null!==e.children?e.children:[],e.key,t)).lanes=n,t.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},t}function Vc(e,t,n,i,a){this.tag=t,this.containerInfo=e,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=-1,this.callbackNode=this.pendingContext=this.context=null,this.callbackPriority=0,this.eventTimes=vt(0),this.expirationTimes=vt(-1),this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=vt(0),this.identifierPrefix=i,this.onRecoverableError=a,this.mutableSourceEagerHydrationData=null}function Hc(e,t,n,i,a,s,r,o,l){return e=new Vc(e,t,n,o,l),1===t?(t=1,!0===s&&(t|=8)):t=0,s=Rc(3,null,null,t),e.current=s,s.stateNode=e,s.memoizedState={element:i,isDehydrated:n,cache:null,transitions:null,pendingSuspenseBoundaries:null},Is(s),e}function Gc(e){if(!e)return La;e:{if(Ge(e=e._reactInternals)!==e||1!==e.tag)throw Error(n(170));var t=e;do{switch(t.tag){case 3:t=t.stateNode.context;break e;case 1:if(Ra(t.type)){t=t.stateNode.__reactInternalMemoizedMergedChildContext;break e}}t=t.return}while(null!==t);throw Error(n(171))}if(1===e.tag){var i=e.type;if(Ra(i))return Fa(e,i,t)}return t}function Wc(e,t,n,i,a,s,r,o,l){return(e=Hc(n,i,!0,e,0,s,0,o,l)).context=Gc(null),n=e.current,(s=Ds(i=nc(),a=ic(n))).callback=null!=t?t:null,ks(n,s,a),e.current.lanes=a,yt(e,a,i),sc(e,i),e}function jc(e,t,n,i){var a=t.current,s=nc(),r=ic(a);return n=Gc(n),null===t.context?t.context=n:t.pendingContext=n,(t=Ds(s,r)).payload={element:e},null!==(i=void 0===i?null:i)&&(t.callback=i),null!==(e=ks(a,t,r))&&(ac(e,a,r,s),Fs(e,a,r)),r}function Xc(e){return(e=e.current).child?(e.child.tag,e.child.stateNode):null}function Yc(e,t){if(null!==(e=e.memoizedState)&&null!==e.dehydrated){var n=e.retryLane;e.retryLane=0!==n&&n<t?n:t}}function qc(e,t){Yc(e,t),(e=e.alternate)&&Yc(e,t)}El=function(e,t,i){if(null!==e)if(e.memoizedProps!==t.pendingProps||Pa.current)bo=!0;else{if(0==(e.lanes&i)&&0==(128&t.flags))return bo=!1,function(e,t,n){switch(t.tag){case 3:Oo(t),ms();break;case 5:rr(t);break;case 1:Ra(t.type)&&Ba(t);break;case 4:ar(t,t.stateNode.containerInfo);break;case 10:var i=t.type._context,a=t.memoizedProps.value;Aa(ys,i._currentValue),i._currentValue=a;break;case 13:if(null!==(i=t.memoizedState))return null!==i.dehydrated?(Aa(lr,1&lr.current),t.flags|=128,null):0!=(n&t.child.childLanes)?Uo(e,t,n):(Aa(lr,1&lr.current),null!==(e=Xo(e,t,n))?e.sibling:null);Aa(lr,1&lr.current);break;case 19:if(i=0!=(n&t.childLanes),0!=(128&e.flags)){if(i)return Wo(e,t,n);t.flags|=128}if(null!==(a=t.memoizedState)&&(a.rendering=null,a.tail=null,a.lastEffect=null),Aa(lr,lr.current),i)break;return null;case 22:case 23:return t.lanes=0,To(e,t,n)}return Xo(e,t,n)}(e,t,i);bo=0!=(131072&e.flags)}else bo=!1,ss&&0!=(1048576&t.flags)&&es(t,Ya,t.index);switch(t.lanes=0,t.tag){case 2:var a=t.type;jo(e,t),e=t.pendingProps;var s=Ia(t,Ma.current);Es(t,i),s=Sr(null,t,a,e,s,i);var r=Er();return t.flags|=1,"object"==typeof s&&null!==s&&"function"==typeof s.render&&void 0===s.$$typeof?(t.tag=1,t.memoizedState=null,t.updateQueue=null,Ra(a)?(r=!0,Ba(t)):r=!1,t.memoizedState=null!==s.state&&void 0!==s.state?s.state:null,Is(t),s.updater=Hs,t.stateNode=s,s._reactInternals=t,Xs(t,a,e,i),t=Po(null,t,a,!0,r,i)):(t.tag=0,ss&&r&&ts(t),xo(null,t,s,i),t=t.child),t;case 16:a=t.elementType;e:{switch(jo(e,t),e=t.pendingProps,a=(s=a._init)(a._payload),t.type=a,s=t.tag=function(e){if("function"==typeof e)return Dc(e)?1:0;if(null!=e){if((e=e.$$typeof)===M)return 11;if(e===I)return 14}return 2}(a),e=vs(a,e),s){case 0:t=Lo(null,t,a,e,i);break e;case 1:t=Mo(null,t,a,e,i);break e;case 11:t=Co(null,t,a,e,i);break e;case 14:t=So(null,t,a,vs(a.type,e),i);break e}throw Error(n(306,a,""))}return t;case 0:return a=t.type,s=t.pendingProps,Lo(e,t,a,s=t.elementType===a?s:vs(a,s),i);case 1:return a=t.type,s=t.pendingProps,Mo(e,t,a,s=t.elementType===a?s:vs(a,s),i);case 3:e:{if(Oo(t),null===e)throw Error(n(387));a=t.pendingProps,s=(r=t.memoizedState).element,Rs(e,t),Ns(t,a,null,i);var o=t.memoizedState;if(a=o.element,r.isDehydrated){if(r={element:a,isDehydrated:!1,cache:o.cache,pendingSuspenseBoundaries:o.pendingSuspenseBoundaries,transitions:o.transitions},t.updateQueue.baseState=r,t.memoizedState=r,256&t.flags){t=Io(e,t,a,i,s=ho(Error(n(423)),t));break e}if(a!==s){t=Io(e,t,a,i,s=ho(Error(n(424)),t));break e}for(as=ha(t.stateNode.containerInfo.firstChild),is=t,ss=!0,rs=null,i=Js(t,null,a,i),t.child=i;i;)i.flags=-3&i.flags|4096,i=i.sibling}else{if(ms(),a===s){t=Xo(e,t,i);break e}xo(e,t,a,i)}t=t.child}return t;case 5:return rr(t),null===e&&hs(t),a=t.type,s=t.pendingProps,r=null!==e?e.memoizedProps:null,o=s.children,ia(a,s)?o=null:null!==r&&ia(a,r)&&(t.flags|=32),Ao(e,t),xo(e,t,o,i),t.child;case 6:return null===e&&hs(t),null;case 13:return Uo(e,t,i);case 4:return ar(t,t.stateNode.containerInfo),a=t.pendingProps,null===e?t.child=Qs(t,null,a,i):xo(e,t,a,i),t.child;case 11:return a=t.type,s=t.pendingProps,Co(e,t,a,s=t.elementType===a?s:vs(a,s),i);case 7:return xo(e,t,t.pendingProps,i),t.child;case 8:case 12:return xo(e,t,t.pendingProps.children,i),t.child;case 10:e:{if(a=t.type._context,s=t.pendingProps,r=t.memoizedProps,o=s.value,Aa(ys,a._currentValue),a._currentValue=o,null!==r)if(li(r.value,o)){if(r.children===s.children&&!Pa.current){t=Xo(e,t,i);break e}}else for(null!==(r=t.child)&&(r.return=t);null!==r;){var l=r.dependencies;if(null!==l){o=r.child;for(var c=l.firstContext;null!==c;){if(c.context===a){if(1===r.tag){(c=Ds(-1,i&-i)).tag=2;var h=r.updateQueue;if(null!==h){var p=(h=h.shared).pending;null===p?c.next=c:(c.next=p.next,p.next=c),h.pending=c}}r.lanes|=i,null!==(c=r.alternate)&&(c.lanes|=i),Ss(r.return,i,t),l.lanes|=i;break}c=c.next}}else if(10===r.tag)o=r.type===t.type?null:r.child;else if(18===r.tag){if(null===(o=r.return))throw Error(n(341));o.lanes|=i,null!==(l=o.alternate)&&(l.lanes|=i),Ss(o,i,t),o=r.sibling}else o=r.child;if(null!==o)o.return=r;else for(o=r;null!==o;){if(o===t){o=null;break}if(null!==(r=o.sibling)){r.return=o.return,o=r;break}o=o.return}r=o}xo(e,t,s.children,i),t=t.child}return t;case 9:return s=t.type,a=t.pendingProps.children,Es(t,i),a=a(s=Ts(s)),t.flags|=1,xo(e,t,a,i),t.child;case 14:return s=vs(a=t.type,t.pendingProps),So(e,t,a,s=vs(a.type,s),i);case 15:return Eo(e,t,t.type,t.pendingProps,i);case 17:return a=t.type,s=t.pendingProps,s=t.elementType===a?s:vs(a,s),jo(e,t),t.tag=1,Ra(a)?(e=!0,Ba(t)):e=!1,Es(t,i),Ws(t,a,s),Xs(t,a,s,i),Po(null,t,a,!0,e,i);case 19:return Wo(e,t,i);case 22:return To(e,t,i)}throw Error(n(156,t.tag))};var Kc="function"==typeof reportError?reportError:function(e){console.error(e)};function Zc(e){this._internalRoot=e}function Qc(e){this._internalRoot=e}function Jc(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType)}function $c(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType&&(8!==e.nodeType||" react-mount-point-unstable "!==e.nodeValue))}function eh(){}function th(e,t,n,i,a){var s=n._reactRootContainer;if(s){var r=s;if("function"==typeof a){var o=a;a=function(){var e=Xc(r);o.call(e)}}jc(t,r,e,a)}else r=function(e,t,n,i,a){if(a){if("function"==typeof i){var s=i;i=function(){var e=Xc(r);s.call(e)}}var r=Wc(t,i,e,0,null,!1,0,"",eh);return e._reactRootContainer=r,e[fa]=r.current,Gi(8===e.nodeType?e.parentNode:e),dc(),r}for(;a=e.lastChild;)e.removeChild(a);if("function"==typeof i){var o=i;i=function(){var e=Xc(l);o.call(e)}}var l=Hc(e,0,!1,null,0,!1,0,"",eh);return e._reactRootContainer=l,e[fa]=l.current,Gi(8===e.nodeType?e.parentNode:e),dc((function(){jc(t,l,n,i)})),l}(n,t,e,a,i);return Xc(r)}Qc.prototype.render=Zc.prototype.render=function(e){var t=this._internalRoot;if(null===t)throw Error(n(409));jc(e,t,null,null)},Qc.prototype.unmount=Zc.prototype.unmount=function(){var e=this._internalRoot;if(null!==e){this._internalRoot=null;var t=e.containerInfo;dc((function(){jc(null,e,null,null)})),t[fa]=null}},Qc.prototype.unstable_scheduleHydration=function(e){if(e){var t=Et();e={blockedOn:null,target:e,priority:t};for(var n=0;n<Dt.length&&0!==t&&t<Dt[n].priority;n++);Dt.splice(n,0,e),0===n&&Nt(e)}},xt=function(e){switch(e.tag){case 3:var t=e.stateNode;if(t.current.memoizedState.isDehydrated){var n=dt(t.pendingLanes);0!==n&&(_t(t,1|n),sc(t,Je()),0==(6&Pl)&&(Wl=Je()+500,Ga()))}break;case 13:dc((function(){var t=Ps(e,1);if(null!==t){var n=nc();ac(t,e,1,n)}})),qc(e,1)}},Ct=function(e){if(13===e.tag){var t=Ps(e,134217728);if(null!==t)ac(t,e,134217728,nc());qc(e,134217728)}},St=function(e){if(13===e.tag){var t=ic(e),n=Ps(e,t);if(null!==n)ac(n,e,t,nc());qc(e,t)}},Et=function(){return wt},Tt=function(e,t){var n=wt;try{return wt=e,t()}finally{wt=n}},Ce=function(e,t,i){switch(t){case"input":if($(e,i),t=i.name,"radio"===i.type&&null!=t){for(i=e;i.parentNode;)i=i.parentNode;for(i=i.querySelectorAll("input[name="+JSON.stringify(""+t)+'][type="radio"]'),t=0;t<i.length;t++){var a=i[t];if(a!==e&&a.form===e.form){var s=xa(a);if(!s)throw Error(n(90));q(a),$(a,s)}}}break;case"textarea":re(e,i);break;case"select":null!=(t=i.value)&&ie(e,!!i.multiple,t,!1)}},Me=pc,Pe=dc;var nh={usingClientEntryPoint:!1,Events:[wa,ba,xa,Ae,Le,pc]},ih={findFiberByHostInstance:_a,bundleType:0,version:"18.2.0",rendererPackageName:"react-dom"},ah={bundleType:ih.bundleType,version:ih.version,rendererPackageName:ih.rendererPackageName,rendererConfig:ih.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setErrorHandler:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:b.ReactCurrentDispatcher,findHostInstanceByFiber:function(e){return null===(e=Xe(e))?null:e.stateNode},findFiberByHostInstance:ih.findFiberByHostInstance||function(){return null},findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null,reconcilerVersion:"18.2.0-next-9e3b772b8-20220608"};if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__){var sh=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!sh.isDisabled&&sh.supportsFiber)try{st=sh.inject(ah),rt=sh}catch(pe){}}return u.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=nh,u.createPortal=function(e,t){var i=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!Jc(t))throw Error(n(200));return function(e,t,n){var i=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:C,key:null==i?null:""+i,children:e,containerInfo:t,implementation:n}}(e,t,null,i)},u.createRoot=function(e,t){if(!Jc(e))throw Error(n(299));var i=!1,a="",s=Kc;return null!=t&&(!0===t.unstable_strictMode&&(i=!0),void 0!==t.identifierPrefix&&(a=t.identifierPrefix),void 0!==t.onRecoverableError&&(s=t.onRecoverableError)),t=Hc(e,1,!1,null,0,i,0,a,s),e[fa]=t.current,Gi(8===e.nodeType?e.parentNode:e),new Zc(t)},u.findDOMNode=function(e){if(null==e)return null;if(1===e.nodeType)return e;var t=e._reactInternals;if(void 0===t){if("function"==typeof e.render)throw Error(n(188));throw e=Object.keys(e).join(","),Error(n(268,e))}return e=null===(e=Xe(t))?null:e.stateNode},u.flushSync=function(e){return dc(e)},u.hydrate=function(e,t,i){if(!$c(t))throw Error(n(200));return th(null,e,t,!0,i)},u.hydrateRoot=function(e,t,i){if(!Jc(e))throw Error(n(405));var a=null!=i&&i.hydratedSources||null,s=!1,r="",o=Kc;if(null!=i&&(!0===i.unstable_strictMode&&(s=!0),void 0!==i.identifierPrefix&&(r=i.identifierPrefix),void 0!==i.onRecoverableError&&(o=i.onRecoverableError)),t=Wc(t,null,e,1,null!=i?i:null,s,0,r,o),e[fa]=t.current,Gi(e),a)for(e=0;e<a.length;e++)s=(s=(i=a[e])._getVersion)(i._source),null==t.mutableSourceEagerHydrationData?t.mutableSourceEagerHydrationData=[i,s]:t.mutableSourceEagerHydrationData.push(i,s);return new Qc(t)},u.render=function(e,t,i){if(!$c(t))throw Error(n(200));return th(null,e,t,!1,i)},u.unmountComponentAtNode=function(e){if(!$c(e))throw Error(n(40));return!!e._reactRootContainer&&(dc((function(){th(null,null,e,!1,(function(){e._reactRootContainer=null,e[fa]=null}))})),!0)},u.unstable_batchedUpdates=pc,u.unstable_renderSubtreeIntoContainer=function(e,t,i,a){if(!$c(i))throw Error(n(200));if(null==e||void 0===e._reactInternals)throw Error(n(38));return th(e,t,i,!1,a)},u.version="18.2.0-next-9e3b772b8-20220608",u}c=d,function e(){if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE)try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e)}catch(e){console.error(e)}}(),c.exports=v();var y=d.exports;h=y.createRoot,y.hydrateRoot;class _{constructor(e,t,n){this.owner=e,this.name=t,this.fn=n}unbind(){this.owner&&(this.owner.unbind(this.name,this.fn),this.owner=null,this.name=null,this.fn=null)}call(){this.fn&&this.fn.call(this.owner,arguments[0],arguments[1],arguments[2],arguments[3],arguments[4],arguments[5],arguments[6],arguments[7])}on(e,t){return this.owner.on(e,t)}}class w{constructor(){Object.defineProperty(this,"_events",{enumerable:!1,configurable:!1,writable:!0,value:{}}),this._suspendEvents=!1,this._additionalEmitters=[]}set suspendEvents(e){this._suspendEvents=!!e}get suspendEvents(){return this._suspendEvents}on(e,t){const n=this._events[e];return void 0===n?this._events[e]=[t]:-1===n.indexOf(t)&&n.push(t),new _(this,e,t)}once(e,t){const n=this.on(e,((e,i,a,s,r,o,l,c)=>{t.call(this,e,i,a,s,r,o,l,c),n.unbind()}));return n}emit(e,t,n,i,a,s,r,o,l){if(this._suspendEvents)return this;let c=this._events[e];if(c&&c.length){c=c.slice(0);for(let h=0;h<c.length;h++)if(c[h])try{c[h].call(this,t,n,i,a,s,r,o,l)}catch(t){console.info("%c%s %c(event error)","color: #06f",e,"color: #f00"),console.log(t.stack)}}if(this._additionalEmitters.length){this._additionalEmitters.slice().forEach((c=>{c.emit(e,t,n,i,a,s,r,o,l)}))}return this}unbind(e,t){if(e){const n=this._events[e];if(!n)return this;if(t){const i=n.indexOf(t);-1!==i&&(1===n.length?delete this._events[e]:n.splice(i,1))}else delete this._events[e]}else this._events={};return this}addEmitter(e){this._additionalEmitters.includes(e)||this._additionalEmitters.push(e)}removeEmitter(e){const t=this._additionalEmitters.indexOf(e);-1!==t&&this._additionalEmitters.splice(t,1)}}const b=(e,t)=>{if(!e||!t)return!1;const n=e.length;if(n!==t.length)return!1;for(let i=0;i<n;i++)if(e[i]instanceof Array&&t[i]instanceof Array){if(!b(e[i],t[i]))return!1}else if(e[i]!==t[i])return!1;return!0};class x extends w{constructor(e,t={}){if(super(),this._destroyed=!1,this._path="",this._keys=[],this._data={},this._pathsWithDuplicates=null,t.pathsWithDuplicates){this._pathsWithDuplicates={};for(let e=0;e<t.pathsWithDuplicates.length;e++)this._pathsWithDuplicates[t.pathsWithDuplicates[e]]=!0}this.patch(e),this._parent=t.parent||null,this._parentPath=t.parentPath||"",this._parentField=t.parentField||null,this._parentKey=t.parentKey||null,this._latestFn=t.latestFn||null,this._silent=!1;const n=function(e){return function(t,n,i,a){if(!this._parent)return;let s,r=this._parentKey;!r&&this._parentField instanceof Array&&(r=this._parentField.indexOf(this),-1===r)||(t=this._parentPath+"."+r+"."+t,this._silent&&(s=this._parent.silence()),this._parent.emit(t+":"+e,n,i,a),this._parent.emit("*:"+e,t,n,i,a),this._silent&&this._parent.silenceRestore(s))}};this.on("*:set",n("set")),this.on("*:unset",n("unset")),this.on("*:insert",n("insert")),this.on("*:remove",n("remove")),this.on("*:move",n("move"))}static _splitPath(e){const t=x._splitPathsCache;let n=t[e];return n?n=n.slice():(n=e.split("."),t[e]=n),n}silence(){this._silent=!0;const e=this.history&&this.history.enabled;e&&(this.history.enabled=!1);const t=this.sync&&this.sync.enabled;return t&&(this.sync.enabled=!1),[e,t]}silenceRestore(e){this._silent=!1,e[0]&&(this.history.enabled=!0),e[1]&&(this.sync.enabled=!0)}_prepare(e,t,n,i,a){let s,r;const o=(e._path?e._path+".":"")+t,l=typeof n;if(e._keys.push(t),"object"===l&&n instanceof Array){for(e._data[t]=n.slice(0),s=0;s<e._data[t].length;s++)"object"==typeof e._data[t][s]&&null!==e._data[t][s]?e._data[t][s]instanceof Array?e._data[t][s].slice(0):e._data[t][s]=new x(e._data[t][s],{parent:this,parentPath:o,parentField:e._data[t],parentKey:null}):(r=this.silence(),this.emit(o+"."+s+":set",e._data[t][s],null,a),this.emit("*:set",o+"."+s,e._data[t][s],null,a),this.silenceRestore(r));i&&(r=this.silence()),this.emit(o+":set",e._data[t],null,a),this.emit("*:set",o,e._data[t],null,a),i&&this.silenceRestore(r)}else if("object"===l&&n instanceof Object){for(s in"object"!=typeof e._data[t]&&(e._data[t]={_path:o,_keys:[],_data:{}}),n)"object"==typeof n[s]?this._prepare(e._data[t],s,n[s],!0,a):(r=this.silence(),e._data[t]._data[s]=n[s],e._data[t]._keys.push(s),this.emit(o+"."+s+":set",n[s],null,a),this.emit("*:set",o+"."+s,n[s],null,a),this.silenceRestore(r));i&&(r=this.silence()),this.emit(o+":set",n,void 0,a),this.emit("*:set",o,n,void 0,a),i&&this.silenceRestore(r)}else i&&(r=this.silence()),e._data[t]=n,this.emit(o+":set",n,void 0,a),this.emit("*:set",o,n,void 0,a),i&&this.silenceRestore(r);return!0}set(e,t,n,i,a){let s,r,o=x._splitPath(e);const l=o.length,c=o[l-1];let h,p,d=this,u="",m=this;for(s=0;s<l-1;s++)d instanceof Array?(d=d[o[s]],d instanceof x&&(e=o.slice(s+1).join("."),m=d)):(s<l&&"object"!=typeof d._data[o[s]]&&(d._data[o[s]]&&m.unset((d.__path?d.__path+".":"")+o[s]),d._data[o[s]]={_path:e,_keys:[],_data:{}},d._keys.push(o[s])),s===l-1&&d.__path&&(u=d.__path+"."+o[s]),d=d._data[o[s]]);if(d instanceof Array){const s=parseInt(c,10);return!(d[s]===t&&!a)&&(r=d[s],r=r instanceof x?r.json():m.json(r),d[s]=t,t instanceof x&&(t._parent=m,t._parentPath=u,t._parentField=d,t._parentKey=null),n&&(h=m.silence()),m.emit(e+":set",t,r,i),m.emit("*:set",e,t,r,i),n&&m.silenceRestore(h),!0)}if(d._data&&!d._data.hasOwnProperty(c))return"object"==typeof t?m._prepare(d,c,t,!1,i):(d._data[c]=t,d._keys.push(c),n&&(h=m.silence()),m.emit(e+":set",t,null,i),m.emit("*:set",e,t,null,i),n&&m.silenceRestore(h),!0);if("object"==typeof t&&t instanceof Array){if(b(t,d._data[c])&&!a)return!1;if(r=d._data[c],r instanceof x||(r=m.json(r)),d._data[c]&&d._data[c].length===t.length){for(h=m.silence(),0===t.length&&(d._data[c]=t),s=0;s<d._data[c].length;s++)d._data[c][s]instanceof x?d._data[c][s].patch(t[s],!0):d._data[c][s]!==t[s]&&(d._data[c][s]=t[s],m.emit(e+"."+s+":set",d._data[c][s],r&&r[s]||null,i),m.emit("*:set",e+"."+s,d._data[c][s],r&&r[s]||null,i));m.silenceRestore(h)}else{for(d._data[c]=[],t.forEach((e=>{this._doInsert(d,c,e,void 0,!0)})),h=m.silence(),s=0;s<d._data[c].length;s++)m.emit(e+"."+s+":set",d._data[c][s],r&&r[s]||null,i),m.emit("*:set",e+"."+s,d._data[c][s],r&&r[s]||null,i);m.silenceRestore(h)}return n&&(h=m.silence()),m.emit(e+":set",t,r,i),m.emit("*:set",e,t,r,i),n&&m.silenceRestore(h),!0}if("object"==typeof t&&t instanceof Object){let a,l=!1;r=d._data[c],r instanceof x||(r=m.json(r)),o=Object.keys(t),d._data[c]&&d._data[c]._data||(d._data[c]?m.unset((d.__path?d.__path+".":"")+c):l=!0,d._data[c]={_path:e,_keys:[],_data:{}});for(const n in d._data[c]._data)t.hasOwnProperty(n)?d._data[c]._data.hasOwnProperty(n)?m._equals(d._data[c]._data[n],t[n])||(a=m.set(e+"."+n,t[n],!0),a&&(l=!0)):(a=m._prepare(d._data[c],n,t[n],!0,i),a&&(l=!0)):(a=m.unset(e+"."+n,!0),a&&(l=!0));for(s=0;s<o.length;s++)void 0===t[o[s]]&&d._data[c]._data.hasOwnProperty(o[s])?(a=m.unset(e+"."+o[s],!0),a&&(l=!0)):"object"==typeof t[o[s]]?d._data[c]._data.hasOwnProperty(o[s])?(a=m.set(e+"."+o[s],t[o[s]],!0),a&&(l=!0)):(a=m._prepare(d._data[c],o[s],t[o[s]],!0,i),a&&(l=!0)):m._equals(d._data[c]._data[o[s]],t[o[s]])||("object"==typeof t[o[s]]?(a=m.set(d._data[c]._path+"."+o[s],t[o[s]],!0),a&&(l=!0)):d._data[c]._data[o[s]]!==t[o[s]]&&(l=!0,-1===d._data[c]._keys.indexOf(o[s])&&d._data[c]._keys.push(o[s]),d._data[c]._data[o[s]]=t[o[s]],h=m.silence(),m.emit(d._data[c]._path+"."+o[s]+":set",d._data[c]._data[o[s]],null,i),m.emit("*:set",d._data[c]._path+"."+o[s],d._data[c]._data[o[s]],null,i),m.silenceRestore(h)));if(l){n&&(h=m.silence());const e=m.json(d._data[c]);return m.emit(d._data[c]._path+":set",e,r,i),m.emit("*:set",d._data[c]._path,e,r,i),n&&m.silenceRestore(h),!0}return!1}return p=!d.hasOwnProperty("_data")&&d.hasOwnProperty(c)?d:d._data,!(p[c]===t&&!a)&&(n&&(h=m.silence()),r=p[c],r instanceof x||(r=m.json(r)),p[c]=t,m.emit(e+":set",t,r,i),m.emit("*:set",e,t,r,i),n&&m.silenceRestore(h),!0)}has(e){const t=x._splitPath(e);let n=this;for(let e=0,i=t.length;e<i;e++){if(null==n)return;n=n._data?n._data[t[e]]:n[t[e]]}return void 0!==n}get(e,t){const n=x._splitPath(e);let i=this;for(let e=0;e<n.length;e++){if(null==i)return;i=i._data?i._data[n[e]]:i[n[e]]}return t?i:null==i?null:this.json(i)}getRaw(e){return this.get(e,!0)}_equals(e,t){return e===t||!!(e instanceof Array&&t instanceof Array&&b(e,t))}unset(e,t,n){let i;const a=x._splitPath(e),s=a[a.length-1];let r=this,o=this;for(i=0;i<a.length-1;i++)r instanceof Array?(r=r[a[i]],r instanceof x&&(e=a.slice(i+1).join("."),o=r)):r=r._data[a[i]];if(!r._data||!r._data.hasOwnProperty(s))return!1;let l,c=r._data[s];if(c instanceof x||(c=o.json(c)),r._data[s]&&r._data[s]._data)for(i=r._data[s]._keys.length-1;i>=0;i--)o.unset(e+"."+r._data[s]._keys[i],!0);return r._keys.splice(r._keys.indexOf(s),1),delete r._data[s],t&&(l=o.silence()),o.emit(e+":unset",c,n),o.emit("*:unset",e,c,n),t&&o.silenceRestore(l),!0}remove(e,t,n,i){const a=x._splitPath(e),s=a[a.length-1];let r=this,o=this;for(let t=0;t<a.length-1;t++)if(r instanceof Array)r=r[parseInt(a[t],10)],r instanceof x&&(e=a.slice(t+1).join("."),o=r);else{if(!r._data||!r._data.hasOwnProperty(a[t]))return!1;r=r._data[a[t]]}if(!(r._data&&r._data.hasOwnProperty(s)&&r._data[s]instanceof Array))return!1;const l=r._data[s];if(l.length<t)return!1;let c,h=l[t];return h instanceof x?h._parent=null:h=o.json(h),l.splice(t,1),n&&(c=o.silence()),o.emit(e+":remove",h,t,i),o.emit("*:remove",e,h,t,i),n&&o.silenceRestore(c),!0}removeValue(e,t,n,i){const a=x._splitPath(e),s=a[a.length-1];let r=this,o=this;for(let t=0;t<a.length-1;t++)if(r instanceof Array)r=r[parseInt(a[t],10)],r instanceof x&&(e=a.slice(t+1).join("."),o=r);else{if(!r._data||!r._data.hasOwnProperty(a[t]))return;r=r._data[a[t]]}if(!(r._data&&r._data.hasOwnProperty(s)&&r._data[s]instanceof Array))return;const l=r._data[s],c=l.indexOf(t);if(-1===c)return;if(l.length<c)return;let h;return(t=l[c])instanceof x?t._parent=null:t=o.json(t),l.splice(c,1),n&&(h=o.silence()),o.emit(e+":remove",t,c,i),o.emit("*:remove",e,t,c,i),n&&o.silenceRestore(h),!0}insert(e,t,n,i,a){const s=x._splitPath(e),r=s[s.length-1];let o=this,l=this;for(let t=0;t<s.length-1;t++)if(o instanceof Array)o=o[parseInt(s[t],10)],o instanceof x&&(e=s.slice(t+1).join("."),l=o);else{if(!o._data||!o._data.hasOwnProperty(s[t]))return;o=o._data[s[t]]}if(!(o._data&&o._data.hasOwnProperty(r)&&o._data[r]instanceof Array))return;const c=o._data[r];let h;return t=l._doInsert(o,r,t,n),void 0===n&&(n=c.length-1),i&&(h=l.silence()),l.emit(e+":insert",t,n,a),l.emit("*:insert",e,t,n,a),i&&l.silenceRestore(h),!0}_doInsert(e,t,n,i,a){const s=e._data[t];"object"!=typeof n||n instanceof x||null===n||(n=n instanceof Array?n.slice(0):new x(n));const r=e._path?`${e._path}.${t}`:t;if(null===n||a||this._pathsWithDuplicates&&this._pathsWithDuplicates[r]||-1===s.indexOf(n))return void 0===i?s.push(n):s.splice(i,0,n),n instanceof x?(n._parent=this,n._parentPath=r,n._parentField=s,n._parentKey=null):n=this.json(n),n}move(e,t,n,i,a){const s=x._splitPath(e),r=s[s.length-1];let o=this,l=this;for(let t=0;t<s.length-1;t++)if(o instanceof Array)o=o[parseInt(s[t],10)],o instanceof x&&(e=s.slice(t+1).join("."),l=o);else{if(!o._data||!o._data.hasOwnProperty(s[t]))return;o=o._data[s[t]]}if(!(o._data&&o._data.hasOwnProperty(r)&&o._data[r]instanceof Array))return;const c=o._data[r];if(c.length<t||c.length<n||t===n)return;let h,p=c[t];return c.splice(t,1),-1===n&&(n=c.length),c.splice(n,0,p),p instanceof x||(p=l.json(p)),i&&(h=l.silence()),l.emit(e+":move",p,n,t,a),l.emit("*:move",e,p,n,t,a),i&&l.silenceRestore(h),!0}patch(e,t){if("object"==typeof e){for(const t in e)"object"!=typeof e[t]||this._data.hasOwnProperty(t)?this._data[t]!==e[t]&&this.set(t,e[t]):this._prepare(this,t,e[t]);if(t)for(const t in this._data)e.hasOwnProperty(t)||this.unset(t)}}json(e){let t,n,i={};const a=void 0===e?this:e;let s,r;if(a instanceof Object&&a._keys){s=a._keys.length;for(let e=0;e<s;e++){t=a._keys[e];const s=a._data[t],o=typeof s;if("object"===o&&s instanceof Array)for(i[t]=s.slice(0),r=i[t].length,n=0;n<r;n++)"object"==typeof i[t][n]&&(i[t][n]=this.json(i[t][n]));else i[t]="object"===o&&s instanceof Object?this.json(s):s}}else{if(null===a)return null;if("object"==typeof a&&a instanceof Array)for(i=a.slice(0),s=i.length,n=0;n<s;n++)i[n]=this.json(i[n]);else if("object"==typeof a)for(t in a)a.hasOwnProperty(t)&&(i[t]=a[t]);else i=a}return i}forEach(e,t,n=""){const i=t||this;for(let t=0;t<i._keys.length;t++){const a=i._keys[t],s=i._data[a],r=this.schema&&this.schema.has(n+a)&&this.schema.get(n+a).type.name.toLowerCase()||typeof s;"object"===r&&s instanceof Array?e(n+a,"array",s,a):"object"===r&&s instanceof Object?(e(n+a,"object",s,a),this.forEach(e,s,n+a+".")):e(n+a,r,s,a)}}latest(){return this._latestFn?this._latestFn():this}destroy(){this._destroyed||(this._destroyed=!0,this.emit("destroy"),this.unbind())}set latestFn(e){this._latestFn=e}get latestFn(){return this._latestFn}}x._splitPathsCache={};var C=class extends w{constructor(e){super(),this._observers=[],this._paths=[],this._applyingChange=!1,this._linked=!1,this._element=e.element,this._history=e.history,this._historyPrefix=e.historyPrefix,this._historyPostfix=e.historyPostfix,this._historyName=e.historyName,this._historyCombine=e.historyCombine||!1}_pathAt(e,t){return e[t]||e[0]}link(e,t){this._observers&&this.unlink(),this._observers=Array.isArray(e)?e:[e],this._paths=Array.isArray(t)?t:[t],this._linked=!0}unlink(){this._observers=[],this._paths=[],this._linked=!1}clone(){throw new Error("BindingBase#clone: Not implemented")}setValue(e){}setValues(e){}addValue(e){}addValues(e){}removeValue(e){}removeValues(e){}set element(e){this._element=e}get element(){return this._element}set applyingChange(e){this._applyingChange!==e&&(this._applyingChange=e,this.emit("applyingChange",e))}get applyingChange(){return this._applyingChange}get linked(){return this._linked}set historyCombine(e){this._historyCombine=e}get historyCombine(){return this._historyCombine}set historyName(e){this._historyName=e}get historyName(){return this._historyName}set historyPrefix(e){this._historyPrefix=e}get historyPrefix(){return this._historyPrefix}set historyPostfix(e){this._historyPostfix=e}get historyPostfix(){return this._historyPostfix}set historyEnabled(e){this._history&&(this._history.enabled=e)}get historyEnabled(){return this._history&&this._history.enabled}get observers(){return this._observers}get paths(){return this._paths}};class S extends C{clone(){return new S({history:this._history,historyPrefix:this._historyPrefix,historyPostfix:this._historyPostfix,historyName:this._historyName,historyCombine:this._historyCombine})}_getHistoryActionName(e){return`${this._historyPrefix||""}${this._historyName||e[0]}${this._historyPostfix||""}`}_setValue(e,t){if(this.applyingChange)return;if(!this._observers.length)return;this.applyingChange=!0;const n=this._observers.slice(),i=this._paths.slice(),a={observers:n,paths:i},s=()=>{this._setValueToObservers(n,i,e,t),this.emit("history:redo",a)};if(this._history){let e=[];e=1===n.length&&i.length>1?i.map((e=>n[0].has(e)?n[0].get(e):void 0)):n.map(((e,t)=>{const n=this._pathAt(i,t);return e.has(n)?e.get(n):void 0})),this.emit("history:init",a),this._history.add({name:this._getHistoryActionName(i),redo:s,combine:this._historyCombine,undo:()=>{this._setValueToObservers(n,i,e,!0),this.emit("history:undo",a)}})}s(),this.applyingChange=!1}_setValueToObservers(e,t,n,i){if(1===e.length&&t.length>1)for(let i=0;i<t.length;i++){const a=e[0].latest();if(!a)continue;let s=!1;a.history&&(s=a.history.enabled,a.history.enabled=!1);const r=t[i],o=n[i];void 0!==n?this._observerSet(a,r,o):a.unset(r),s&&(a.history.enabled=!0)}else for(let a=0;a<e.length;a++){const s=e[a].latest();if(!s)continue;let r=!1;s.history&&(r=s.history.enabled,s.history.enabled=!1);const o=this._pathAt(t,a),l=i?n[a]:n;void 0!==n?this._observerSet(s,o,l):s.unset(o),r&&(s.history.enabled=!0)}}_observerSet(e,t,n){const i=t.lastIndexOf(".");if(i>0&&!e.has(t.substring(0,i)))return;const a=Array.isArray(n);e.set(t,a&&n?n.slice():n)}_addValues(e){if(this.applyingChange)return;if(!this._observers)return;this.applyingChange=!0;const t=this._observers.slice(),n=this._paths.slice(),i=[];for(let a=0;a<t.length;a++){const s=this._pathAt(n,a),r=t[a];e.forEach((e=>{-1===r.get(s).indexOf(e)&&i.push({observer:r,path:s,value:e})}))}const a=()=>{for(const e of i){const t=e.observer.latest();if(!t)continue;const n=e.path;let i=!1;t.history&&(i=t.history.enabled,t.history.enabled=!1),t.insert(n,e.value),i&&(t.history.enabled=!0)}};this._history&&i.length&&this._history.add({name:this._getHistoryActionName(n),redo:a,combine:this._historyCombine,undo:()=>{for(const e of i){const t=e.observer.latest();if(!t)continue;const n=e.path;let i=!1;t.history&&(i=t.history.enabled,t.history.enabled=!1),t.removeValue(n,e.value),i&&(t.history.enabled=!0)}}}),a(),this.applyingChange=!1}_removeValues(e){if(this.applyingChange)return;if(!this._observers)return;this.applyingChange=!0;const t=this._observers.slice(),n=this._paths.slice(),i=[];for(let a=0;a<t.length;a++){const s=this._pathAt(n,a),r=t[a];e.forEach((e=>{const t=r.get(s).indexOf(e);-1!==t&&i.push({observer:r,path:s,value:e,index:t})}))}const a=()=>{for(const e of i){const t=e.observer.latest();if(!t)continue;const n=e.path;let i=!1;t.history&&(i=t.history.enabled,t.history.enabled=!1),t.removeValue(n,e.value),i&&(t.history.enabled=!0)}};this._history&&i.length&&this._history.add({name:this._getHistoryActionName(n),redo:a,combine:this._historyCombine,undo:()=>{for(const e of i){const t=e.observer.latest();if(!t)continue;const n=e.path;let i=!1;t.history&&(i=t.history.enabled,t.history.enabled=!1),-1===t.get(n).indexOf(e.value)&&t.insert(n,e.value,e.index),i&&(t.history.enabled=!0)}}}),a(),this.applyingChange=!1}setValue(e){this._setValue(e,!1)}setValues(e){e=e.slice().map((e=>Array.isArray(e)?e.slice():e)),this._setValue(e,!0)}addValue(e){this._addValues([e])}addValues(e){this._addValues(e)}removeValue(e){this._removeValues([e])}removeValues(e){this._removeValues(e)}}var E=S;class T extends C{constructor(e={}){super(e),this._events=[],this._updateTimeout=null,this._deferUpdateElement=()=>{this.applyingChange||(this.applyingChange=!0,this._updateTimeout=window.setTimeout((()=>{this._updateElement()})))},this._customUpdate=e.customUpdate}_linkObserver(e,t){this._events.push(e.on(t+":set",this._deferUpdateElement)),this._events.push(e.on(t+":unset",this._deferUpdateElement)),this._events.push(e.on(t+":insert",this._deferUpdateElement)),this._events.push(e.on(t+":remove",this._deferUpdateElement))}_updateElement(){this._updateTimeout&&(window.clearTimeout(this._updateTimeout),this._updateTimeout=null),this._updateTimeout=null,this.applyingChange=!0,this._element&&("function"==typeof this._customUpdate?this._customUpdate(this._element,this._observers,this._paths):1===this._observers.length?this._paths.length>1?this._element.value=this._paths.map((e=>this._observers[0].has(e)?this._observers[0].get(e):void 0)):this._element.value=this._observers[0].has(this._paths[0])?this._observers[0].get(this._paths[0]):void 0:this._element.values=this._observers.map(((e,t)=>{const n=this._pathAt(this._paths,t);return e.has(n)?e.get(n):void 0})),this.applyingChange=!1)}link(e,t){if(super.link(e,t),this._element){const e=this._element.renderChanges;this._element.renderChanges=!1,this._updateElement(),this._element.renderChanges=e}if(1===this._observers.length&&this._paths.length>1)for(let e=0;e<this._paths.length;e++)this._linkObserver(this._observers[0],this._paths[e]);else for(let e=0;e<this._observers.length;e++)this._linkObserver(this._observers[e],this._pathAt(this._paths,e))}unlink(){for(const e of this._events)e.unbind();this._events.length=0,this._updateTimeout&&(window.clearTimeout(this._updateTimeout),this._updateTimeout=null),super.unlink()}clone(){return new T({customUpdate:this._customUpdate})}}var A=T;class L extends C{constructor(e={}){super(e),this._bindingElementToObservers=e.bindingElementToObservers||new E(e),this._bindingObserversToElement=e.bindingObserversToElement||new A(e),this._bindingElementToObservers.on("applyingChange",(e=>{this.applyingChange=e})),this._bindingElementToObservers.on("history:init",(e=>{this.emit("history:init",e)})),this._bindingElementToObservers.on("history:undo",(e=>{this.emit("history:undo",e)})),this._bindingElementToObservers.on("history:redo",(e=>{this.emit("history:redo",e)})),this._bindingObserversToElement.on("applyingChange",(e=>{this.applyingChange=e}))}link(e,t){super.link(e,t),this._bindingElementToObservers.link(e,t),this._bindingObserversToElement.link(e,t)}unlink(){this._bindingElementToObservers.unlink(),this._bindingObserversToElement.unlink(),super.unlink()}clone(){return new L({bindingElementToObservers:this._bindingElementToObservers.clone(),bindingObserversToElement:this._bindingObserversToElement.clone()})}setValue(e){this._bindingElementToObservers.setValue(e)}setValues(e){this._bindingElementToObservers.setValues(e)}addValue(e){this._bindingElementToObservers.addValue(e)}addValues(e){this._bindingElementToObservers.addValues(e)}removeValue(e){this._bindingElementToObservers.removeValue(e)}removeValues(e){this._bindingElementToObservers.removeValues(e)}set element(e){this._element=e,this._bindingElementToObservers.element=e,this._bindingObserversToElement.element=e}get element(){return this._element}set applyingChange(e){super.applyingChange!==e&&(this._bindingElementToObservers.applyingChange=e,this._bindingObserversToElement.applyingChange=e,super.applyingChange=e)}get applyingChange(){return super.applyingChange}set historyCombine(e){this._bindingElementToObservers.historyCombine=e}get historyCombine(){return this._bindingElementToObservers.historyCombine}set historyPrefix(e){this._bindingElementToObservers.historyPrefix=e}get historyPrefix(){return this._bindingElementToObservers.historyPrefix}set historyPostfix(e){this._bindingElementToObservers.historyPostfix=e}get historyPostfix(){return this._bindingElementToObservers.historyPostfix}set historyEnabled(e){this._bindingElementToObservers.historyEnabled=e}get historyEnabled(){return this._bindingElementToObservers.historyEnabled}}var M=L;function P(e){if(null==e||"object"!=typeof e)return e;if(e instanceof Array){const t=[];for(let n=0;n<e.length;n++)t[n]=P(e[n]);return t}const t={};for(const n in e)e.hasOwnProperty(n)&&(t[n]=P(e[n]));return t}function O(e,t){if(!e)return!1;if(!t)return!1;if(e.length!==t.length)return!1;for(let n=0,i=e.length;n<i;n++)if(e[n]instanceof Array&&t[n]instanceof Array){if(!e[n].equals(t[n]))return!1}else if(e[n]!==t[n])return!1;return!0}const I="pcui-flex",R="pcui-grid",D="pcui-hidden",k="pcui-scrollable",F="pcui-resizable",B="pcui-readonly",N="pcui-disabled",U="pcui-collapsible",z="pcui-collapsed",V="pcui-focus",H="pcui-multiple-values",G="pcui-error",W="flash",j="pcui-not-flexible",X="font-regular",Y="font-bold",q=["flexDirection","flexGrow","flexBasis","flexShrink","flexWrap","alignItems","alignSelf","justifyContent","justifySelf"],K=new Map;class Z extends w{constructor(e={}){var t,n,i;if(super(),this._destroyed=!1,this._parent=null,this._eventsParent=[],this._flashTimeout=null,this._suppressChange=!1,this._onMouseOver=e=>{this.emit("hover",e)},this._onMouseOut=e=>{this.emit("hoverend",e)},"string"==typeof e.dom?this._dom=document.createElement(e.dom):e.dom instanceof Node?this._dom=e.dom:this._dom=document.createElement("div"),void 0!==e.id&&(this._dom.id=e.id),this._dom.ui=this,this._onClickEvt=this._onClick.bind(this),this._dom.addEventListener("click",this._onClickEvt),this._dom.addEventListener("mouseover",this._onMouseOver),this._dom.addEventListener("mouseout",this._onMouseOut),this._dom.classList.add("pcui-element",X),e.class){const t=Array.isArray(e.class)?e.class:[e.class];for(const e of t)this._dom.classList.add(e)}this.enabled=void 0===e.enabled||e.enabled,this._hiddenParents=!e.isRoot,this.hidden=null!==(t=e.hidden)&&void 0!==t&&t,this.readOnly=null!==(n=e.readOnly)&&void 0!==n&&n,this.ignoreParent=null!==(i=e.ignoreParent)&&void 0!==i&&i,void 0!==e.width&&(this.width=e.width),void 0!==e.height&&(this.height=e.height),void 0!==e.tabIndex&&(this.tabIndex=e.tabIndex);for(const t in e)void 0!==e[t]&&-1!==q.indexOf(t)&&(this[t]=e[t]);e.binding&&(this.binding=e.binding)}destroy(){if(this._destroyed)return;if(this._destroyed=!0,this.binding?this.binding=null:this.unlink(),this.parent){const e=this.parent;for(const e of this._eventsParent)e.unbind();this._eventsParent.length=0,e.remove&&!e._destroyed&&e.remove(this),this._parent=null,!e._destroyed&&this._dom&&this._dom.parentElement&&this._dom.parentElement.removeChild(this._dom)}const e=this._dom;e&&(e.removeEventListener("click",this._onClickEvt),e.removeEventListener("mouseover",this._onMouseOver),e.removeEventListener("mouseout",this._onMouseOut),delete e.ui,this._dom=null),this._flashTimeout&&window.clearTimeout(this._flashTimeout),this.emit("destroy",e,this),this.unbind()}link(e,t){this._binding&&this._binding.link(e,t)}unlink(){this._binding&&this._binding.unlink()}flash(){this._flashTimeout||(this.class.add(W),this._flashTimeout=window.setTimeout((()=>{this._flashTimeout=null,this.class.remove(W)}),200))}_onClick(e){this.enabled&&this.emit("click",e)}_onHiddenToRootChange(e){this.emit(e?"hideToRoot":"showToRoot")}_onEnabledChange(e){e?this.class.remove(N):this.class.add(N),this.emit(e?"enable":"disable")}_onParentDestroy(){this.destroy()}_onParentDisable(){this._ignoreParent||this._enabled&&this._onEnabledChange(!1)}_onParentEnable(){this._ignoreParent||this._enabled&&this._onEnabledChange(!0)}_onParentShowToRoot(){const e=this.hiddenToRoot;this._hiddenParents=!1,e!==this.hiddenToRoot&&this._onHiddenToRootChange(this.hiddenToRoot)}_onParentHideToRoot(){const e=this.hiddenToRoot;this._hiddenParents=!0,e!==this.hiddenToRoot&&this._onHiddenToRootChange(this.hiddenToRoot)}_onReadOnlyChange(e){e?this.class.add(B):this.class.remove(B),this.emit("readOnly",e)}_onParentReadOnlyChange(e){this._ignoreParent||(e?this._readOnly||this._onReadOnlyChange(!0):this._readOnly||this._onReadOnlyChange(!1))}unbind(e,t){return super.unbind(e,t)}static register(e,t,n){K.set(e,{cls:t,defaultArguments:n})}static unregister(e){K.delete(e)}static create(e,t){const n=K.get(e);if(!n)return void console.error("Invalid type passed to Element.create:",e);return new(0,n.cls)(Object.assign(Object.assign({},n.defaultArguments),t))}set enabled(e){if(this._enabled===e)return;const t=this.enabled;this._enabled=e,t!==e&&this._onEnabledChange(e)}get enabled(){return this._ignoreParent?this._enabled:this._enabled&&(!this._parent||this._parent.enabled)}set ignoreParent(e){this._ignoreParent=e,this._onEnabledChange(this.enabled),this._onReadOnlyChange(this.readOnly)}get ignoreParent(){return this._ignoreParent}get dom(){return this._dom}set parent(e){if(e===this._parent)return;const t=this.enabled,n=this.readOnly,i=this.hiddenToRoot;if(this._parent){for(let e=0;e<this._eventsParent.length;e++)this._eventsParent[e].unbind();this._eventsParent.length=0}this._parent=e,this._parent?(this._eventsParent.push(this._parent.once("destroy",this._onParentDestroy.bind(this))),this._eventsParent.push(this._parent.on("disable",this._onParentDisable.bind(this))),this._eventsParent.push(this._parent.on("enable",this._onParentEnable.bind(this))),this._eventsParent.push(this._parent.on("readOnly",this._onParentReadOnlyChange.bind(this))),this._eventsParent.push(this._parent.on("showToRoot",this._onParentShowToRoot.bind(this))),this._eventsParent.push(this._parent.on("hideToRoot",this._onParentHideToRoot.bind(this))),this._hiddenParents=this._parent.hiddenToRoot):this._hiddenParents=!0,this.emit("parent",this._parent);const a=this.enabled;a!==t&&this._onEnabledChange(a);const s=this.readOnly;s!==n&&this._onReadOnlyChange(s);const r=this.hiddenToRoot;r!==i&&this._onHiddenToRootChange(r)}get parent(){return this._parent}set hidden(e){if(e===this._hidden)return;const t=this.hiddenToRoot;this._hidden=e,e?this.class.add(D):this.class.remove(D),this.emit(e?"hide":"show"),this.hiddenToRoot!==t&&this._onHiddenToRootChange(this.hiddenToRoot)}get hidden(){return this._hidden}get hiddenToRoot(){return this._hidden||this._hiddenParents}set readOnly(e){this._readOnly!==e&&(this._readOnly=e,this._onReadOnlyChange(e))}get readOnly(){return this._ignoreParent?this._readOnly:this._readOnly||!(!this._parent||!this._parent.readOnly)}set error(e){this._hasError!==e&&(this._hasError=e,e?this.class.add(G):this.class.remove(G))}get error(){return this._hasError}get style(){return this._dom.style}get class(){return this._dom.classList}set width(e){"number"==typeof e&&(e=String(e)+"px"),this.style.width=e}get width(){return this._dom.clientWidth}set height(e){"number"==typeof e&&(e=String(e)+"px"),this.style.height=e}get height(){return this._dom.clientHeight}set tabIndex(e){this._dom.tabIndex=e}get tabIndex(){return this._dom.tabIndex}set binding(e){if(this._binding===e)return;let t,n;this._binding&&(t=this._binding.observers,n=this._binding.paths,this.unlink(),this._binding.element=null,this._binding=null),this._binding=e,this._binding&&(this._binding.element=this,t&&n&&this.link(t,n))}get binding(){return this._binding}get destroyed(){return this._destroyed}set flexDirection(e){this.style.flexDirection=e}get flexDirection(){return this.style.flexDirection}set flexGrow(e){this.style.flexGrow=e}get flexGrow(){return this.style.flexGrow}set flexBasis(e){this.style.flexBasis=e}get flexBasis(){return this.style.flexBasis}set flexShrink(e){this.style.flexShrink=e}get flexShrink(){return this.style.flexShrink}set flexWrap(e){this.style.flexWrap=e}get flexWrap(){return this.style.flexWrap}set alignItems(e){this.style.alignItems=e}get alignItems(){return this.style.alignItems}set alignSelf(e){this.style.alignSelf=e}get alignSelf(){return this.style.alignSelf}set justifyContent(e){this.style.justifyContent=e}get justifyContent(){return this.style.justifyContent}set justifySelf(e){this.style.justifySelf=e}get justifySelf(){return this.style.justifySelf}set disabled(e){this.enabled=!e}get disabled(){return!this.enabled}set element(e){this._dom=e}get element(){return this.dom}set innerElement(e){this._domContent=e}get innerElement(){return this._domContent}}Z.EVENT_ENABLE="enable",Z.EVENT_DISABLE="disable",Z.EVENT_HIDE="hide",Z.EVENT_HIDE_TO_ROOT="hideToRoot",Z.EVENT_SHOW="show",Z.EVENT_SHOW_TO_ROOT="showToRoot",Z.EVENT_READ_ONLY="readOnly",Z.EVENT_PARENT="parent",Z.EVENT_CLICK="click",Z.EVENT_HOVER="hover",Z.EVENT_HOVER_END="hoverend",Z.EVENT_DESTROY="destroy";var Q=Z;const J=[null,"top","right","bottom","left"],$=F+"-resizing",ee="pcui-container",te=ee+"-dragged",ne=te+"-child";class ie extends Q{constructor(e={}){var t;super(e),this._scrollable=!1,this._flex=!1,this._grid=!1,this._domResizeHandle=null,this._resizeTouchId=null,this._resizeData=null,this._resizeHorizontally=!0,this._resizeMin=100,this._resizeMax=300,this._draggedStartIndex=-1,this._onScroll=e=>{this.emit("scroll",e)},this._onResizeStart=e=>{e.preventDefault(),e.stopPropagation(),window.addEventListener("mousemove",this._onResizeMove),window.addEventListener("mouseup",this._onResizeEnd),this._resizeStart()},this._onResizeMove=e=>{e.preventDefault(),e.stopPropagation(),this._resizeMove(e.clientX,e.clientY)},this._onResizeEnd=e=>{e.preventDefault(),e.stopPropagation(),window.removeEventListener("mousemove",this._onResizeMove),window.removeEventListener("mouseup",this._onResizeEnd),this._resizeEnd()},this._onResizeTouchStart=e=>{e.preventDefault(),e.stopPropagation();for(let t=0;t<e.changedTouches.length;t++){const n=e.changedTouches[t];n.target===this._domResizeHandle&&(this._resizeTouchId=n.identifier)}window.addEventListener("touchmove",this._onResizeTouchMove),window.addEventListener("touchend",this._onResizeTouchEnd),this._resizeStart()},this._onResizeTouchMove=e=>{for(let t=0;t<e.changedTouches.length;t++){const n=e.changedTouches[t];if(n.identifier===this._resizeTouchId){e.stopPropagation(),e.preventDefault(),this._resizeMove(n.clientX,n.clientY);break}}},this._onResizeTouchEnd=e=>{for(let t=0;t<e.changedTouches.length;t++){if(e.changedTouches[t].identifier!==this._resizeTouchId){this._resizeTouchId=null,e.preventDefault(),e.stopPropagation(),window.removeEventListener("touchmove",this._onResizeTouchMove),window.removeEventListener("touchend",this._onResizeTouchEnd),this._resizeEnd();break}}},this.class.add(ee),this.domContent=this._dom,e.scrollable&&(this.scrollable=!0),this.flex=!!e.flex;let n=!!e.grid;n&&this.flex&&(console.error('Invalid Container arguments: "grid" and "flex" cannot both be true.'),n=!1),this.grid=n,this.resizable=null!==(t=e.resizable)&&void 0!==t?t:null,void 0!==e.resizeMin&&(this.resizeMin=e.resizeMin),void 0!==e.resizeMax&&(this.resizeMax=e.resizeMax)}destroy(){this._destroyed||(this.domContent=null,this._domResizeHandle&&(this._domResizeHandle.removeEventListener("mousedown",this._onResizeStart),window.removeEventListener("mousemove",this._onResizeMove),window.removeEventListener("mouseup",this._onResizeEnd),this._domResizeHandle.removeEventListener("touchstart",this._onResizeTouchStart),window.removeEventListener("touchmove",this._onResizeTouchMove),window.removeEventListener("touchend",this._onResizeTouchEnd)),super.destroy())}append(e){const t=this._getDomFromElement(e);this._domContent.appendChild(t),this._onAppendChild(e)}appendBefore(e,t){const n=this._getDomFromElement(e);this._domContent.appendChild(n);const i=t&&this._getDomFromElement(t);this._domContent.insertBefore(n,i),this._onAppendChild(e)}appendAfter(e,t){const n=this._getDomFromElement(e),i=t&&this._getDomFromElement(t),a=i?i.nextSibling:null;a?this._domContent.insertBefore(n,a):this._domContent.appendChild(n),this._onAppendChild(e)}prepend(e){const t=this._getDomFromElement(e),n=this._domContent.firstChild;n?this._domContent.insertBefore(t,n):this._domContent.appendChild(t),this._onAppendChild(e)}remove(e){if(e.parent!==this)return;const t=this._getDomFromElement(e);this._domContent.removeChild(t),this._onRemoveChild(e)}move(e,t){let n=-1;for(let t=0;t<this.dom.childNodes.length;t++)if(this.dom.childNodes[t].ui===e){n=t;break}-1===n?this.appendBefore(e,this.dom.childNodes[t]):t!==n&&(this.remove(e),t<n?this.appendBefore(e,this.dom.childNodes[t]):this.appendAfter(e,this.dom.childNodes[t-1]))}clear(){let e=this._domContent.childNodes.length;for(;e--;){const t=this._domContent.childNodes[e];t.ui&&t.ui!==this&&t.ui.destroy()}this._domResizeHandle&&(this._domResizeHandle.removeEventListener("mousedown",this._onResizeStart),this._domResizeHandle.removeEventListener("touchstart",this._onResizeTouchStart),this._domResizeHandle=null),this._domContent.innerHTML="",this.resizable&&(this._createResizeHandle(),this._dom.appendChild(this._domResizeHandle))}_getDomFromElement(e){return e.dom?e.dom:e.element?e.element:e}_onAppendChild(e){e.parent=this,this.emit("append",e)}_onRemoveChild(e){e.parent=null,this.emit("remove",e)}_createResizeHandle(){const e=document.createElement("div");e.classList.add("pcui-resizable-handle"),e.ui=this,e.addEventListener("mousedown",this._onResizeStart),e.addEventListener("touchstart",this._onResizeTouchStart,{passive:!1}),this._domResizeHandle=e}_resizeStart(){this.class.add($)}_resizeMove(e,t){if(this._resizeData){if(this._resizeHorizontally){let t=this._resizeData.x-e;"right"===this._resizable&&(t=-t),this.width=4+Math.max(this._resizeMin,Math.min(this._resizeMax,this._resizeData.width+t))}else{let e=this._resizeData.y-t;"bottom"===this._resizable&&(e=-e),this.height=Math.max(this._resizeMin,Math.min(this._resizeMax,this._resizeData.height+e))}this.emit("resize")}else this._resizeData={x:e,y:t,width:this.dom.clientWidth,height:this.dom.clientHeight}}_resizeEnd(){this._resizeData=null,this.class.remove($)}resize(e,t){e=e||0,t=t||0,this._resizeStart(),this._resizeMove(0,0),this._resizeMove(4-e,-t),this._resizeEnd()}_getDraggedChildIndex(e){for(let t=0;t<this.dom.childNodes.length;t++)if(this.dom.childNodes[t].ui===e)return t;return-1}_onChildDragStart(e,t){this.class.add(ne),this._draggedStartIndex=this._getDraggedChildIndex(t),t.class.add(te),this.emit("child:dragstart",t,this._draggedStartIndex)}_onChildDragMove(e,t){const n=this.dom.getBoundingClientRect(),i=e.clientX<n.left||e.clientX>n.right||e.clientY<n.top||e.clientY>n.bottom,a=this._getDraggedChildIndex(t);if(i)return t.class.remove(te),void(this._draggedStartIndex!==a&&(this.remove(t),this._draggedStartIndex<a?this.appendBefore(t,this.dom.childNodes[this._draggedStartIndex]):this.appendAfter(t,this.dom.childNodes[this._draggedStartIndex-1])));t.class.add(te);const s=e.clientY-n.top;let r=null;for(let e=0;e<this.dom.childNodes.length;e++){const n=this.dom.childNodes[e].ui,i=n.dom.offsetTop;if(e<a){if(s<=i+n.header.height){r=e;break}}else if(e>a&&s+t.height>=i+n.height){r=e;break}}null!==r&&a!==r&&(this.remove(t),r<a?this.appendBefore(t,this.dom.childNodes[r]):this.appendAfter(t,this.dom.childNodes[r-1]))}_onChildDragEnd(e,t){this.class.remove(ne),t.class.remove(te);const n=this._getDraggedChildIndex(t);this.emit("child:dragend",t,n,this._draggedStartIndex),this._draggedStartIndex=-1}forEachChild(e){for(let t=0;t<this.dom.childNodes.length;t++){const n=this.dom.childNodes[t].ui;if(n){if(!1===e(n,t))break}}}_buildDomNode(e){const t=Object.keys(e);let n;return t.includes("root")?(n=this._buildDomNode(e.root),e.children.forEach((e=>{const t=this._buildDomNode(e);null!==t&&n.append(t)}))):(n=e[t[0]],this[`_${t[0]}`]=n),n}buildDom(e){e.forEach((e=>{const t=this._buildDomNode(e);this.append(t)}))}set flex(e){e!==this._flex&&(this._flex=e,e?this.class.add(I):this.class.remove(I))}get flex(){return this._flex}set grid(e){e!==this._grid&&(this._grid=e,e?this.class.add(R):this.class.remove(R))}get grid(){return this._grid}set scrollable(e){this._scrollable!==e&&(this._scrollable=e,e?this.class.add(k):this.class.remove(k))}get scrollable(){return this._scrollable}set resizable(e){e!==this._resizable&&(-1!==J.indexOf(e)?(this._resizable&&this.class.remove(`${F}-${this._resizable}`),this._resizable=e,this._resizeHorizontally="right"===e||"left"===e,e?(this.class.add(F),this.class.add(`${F}-${e}`),this._domResizeHandle||this._createResizeHandle(),this._dom.appendChild(this._domResizeHandle)):(this.class.remove(F),this._domResizeHandle&&this._dom.removeChild(this._domResizeHandle))):console.error("Invalid resizable value: must be one of "+J.join(",")))}get resizable(){return this._resizable}set resizeMin(e){this._resizeMin=Math.max(0,Math.min(e,this._resizeMax))}get resizeMin(){return this._resizeMin}set resizeMax(e){this._resizeMax=Math.max(this._resizeMin,e)}get resizeMax(){return this._resizeMax}set domContent(e){this._domContent!==e&&(this._domContent&&this._domContent.removeEventListener("scroll",this._onScroll),this._domContent=e,this._domContent&&this._domContent.addEventListener("scroll",this._onScroll))}get domContent(){return this._domContent}}ie.EVENT_APPEND="append",ie.EVENT_REMOVE="remove",ie.EVENT_SCROLL="scroll",ie.EVENT_RESIZE="resize",Q.register("container",ie);var ae=ie;class se extends Q{constructor(e={}){var t,n,i;super(Object.assign({dom:"span"},e)),this.class.add("pcui-label"),this._unsafe=null!==(t=e.unsafe)&&void 0!==t&&t,this.text=null!==(i=null!==(n=e.text)&&void 0!==n?n:e.value)&&void 0!==i?i:"",e.allowTextSelection&&this.class.add("pcui-default-mousedown"),e.nativeTooltip&&(this.dom.title=this.text),this.placeholder=e.placeholder,this.renderChanges=e.renderChanges,this.on("change",(()=>{this.renderChanges&&this.flash()}))}_updateText(e){return this.class.remove(H),this._text!==e&&(this._text=e,this._unsafe?this._dom.innerHTML=e:this._dom.textContent=e,this.emit("change",e),!0)}set text(e){null==e&&(e="");this._updateText(e)&&this._binding&&this._binding.setValue(e)}get text(){return this._text}set value(e){this.text=e}get value(){return this.text}set values(e){const t=e.some((t=>t!==e[0]));t?(this._updateText(""),this.class.add(H)):this._updateText(e[0])}set placeholder(e){e?this.dom.setAttribute("placeholder",e):this.dom.removeAttribute("placeholder")}get placeholder(){return this.dom.getAttribute("placeholder")}set renderChanges(e){this._renderChanges=e}get renderChanges(){return this._renderChanges}}Q.register("label",se);var re=se;class oe extends Q{constructor(e={}){super(Object.assign({dom:"button"},e)),this._onKeyDown=e=>{"Escape"===e.key?this.blur():"Enter"===e.key&&this._onClick(e)},this.class.add("pcui-button"),this._unsafe=e.unsafe,this.text=e.text,this.size=e.size,this.icon=e.icon,this.dom.addEventListener("keydown",this._onKeyDown)}destroy(){this._destroyed||(this.dom.removeEventListener("keydown",this._onKeyDown),super.destroy())}_onClick(e){this.blur(),this.readOnly||super._onClick(e)}focus(){this.dom.focus()}blur(){this.dom.blur()}set text(e){this._text!==e&&(this._text=e,this._unsafe?this.dom.innerHTML=e:this.dom.textContent=e)}get text(){return this._text}set icon(e){this._icon!==e&&e.match(/^E[0-9]{0,4}$/)&&(this._icon=e,e?this.dom.setAttribute("data-icon",String.fromCodePoint(parseInt(e,16))):this.dom.removeAttribute("data-icon"))}get icon(){return this._icon}set size(e){this._size!==e&&(this._size&&(this.class.remove("pcui-"+this._size),this._size=null),this._size=e,this._size&&this.class.add("pcui-"+this._size))}get size(){return this._size}}Q.register("button",oe);var le=oe;const ce="pcui-panel",he=ce+"-header",pe=he+"-title",de=ce+"-content",ue=ce+"-horizontal",me=ce+"-sortable-icon",fe=ce+"-remove";class ge extends ae{constructor(e={}){var t;const n=Object.assign(Object.assign({},e),{flex:!0});delete n.grid,delete n.flexDirection,delete n.scrollable,super(n),this._reflowTimeout=null,this._widthBeforeCollapse=null,this._heightBeforeCollapse=null,this._iconSort=null,this._btnRemove=null,this._onHeaderClick=e=>{this._collapsible&&(e.target!==this.header.dom&&e.target!==this._labelTitle.dom||(this.collapsed=!this.collapsed))},this._onDragStart=e=>{this.enabled&&!this.readOnly&&(e.stopPropagation(),e.preventDefault(),window.addEventListener("mouseup",this._onDragEndEvt),window.addEventListener("mouseleave",this._onDragEndEvt),window.addEventListener("mousemove",this._onDragMove),this.emit("dragstart"),this.parent&&this.parent._onChildDragStart&&this.parent._onChildDragStart(e,this))},this._onDragMove=e=>{this.emit("dragmove"),this.parent&&this.parent._onChildDragStart&&this.parent._onChildDragMove(e,this)},this.class.add(ce),e.panelType&&this.class.add(ce+"-"+e.panelType),this._suspendReflow=!0,this._initializeHeader(e),this._initializeContent(e),this.headerSize=null!==(t=e.headerSize)&&void 0!==t?t:32,this.collapsible=e.collapsible||!1,this.collapsed=e.collapsed||!1,this.collapseHorizontally=e.collapseHorizontally||!1,this.sortable=e.sortable||!1,this.removable=e.removable||!!e.onRemove||!1,this.domContent=this._containerContent.dom,this._suspendReflow=!1,this._reflow(),this._onDragEndEvt=this._onDragEnd.bind(this)}destroy(){this._destroyed||(this._reflowTimeout&&(cancelAnimationFrame(this._reflowTimeout),this._reflowTimeout=null),window.removeEventListener("mouseup",this._onDragEndEvt),window.removeEventListener("mouseleave",this._onDragEndEvt),window.removeEventListener("mousemove",this._onDragMove),super.destroy())}_initializeHeader(e){this._containerHeader=new ae({flex:!0,flexDirection:"row",class:[he,Y]}),this._labelTitle=new re({text:e.headerText,class:[pe,Y]}),this._containerHeader.append(this._labelTitle),this._containerHeader.dom.addEventListener("click",this._onHeaderClick),this.append(this._containerHeader)}_onClickRemove(e){e.preventDefault(),e.stopPropagation(),this.emit("click:remove")}_initializeContent(e){this._containerContent=new ae({class:de,grid:e.grid,flex:e.flex,flexDirection:e.flexDirection,scrollable:e.scrollable,dom:e.content}),this.append(this._containerContent)}_reflow(){this._suspendReflow||(this._reflowTimeout&&(cancelAnimationFrame(this._reflowTimeout),this._reflowTimeout=null),!this.hidden&&this.collapsible&&(this.collapsed&&this.collapseHorizontally?this._containerHeader.style.top=-this.headerSize+"px":this._containerHeader.style.top="",this._reflowTimeout=requestAnimationFrame((()=>{this._reflowTimeout=null,this.collapsed?(this._widthBeforeCollapse||(this._widthBeforeCollapse=this.style.width),this._heightBeforeCollapse||(this._heightBeforeCollapse=this.style.height),this._collapseHorizontally?(this.height="",this.width=this.headerSize):this.height=this.headerSize,this.class.add(z)):(this.class.remove(z),this._collapseHorizontally?(this.height="",null!==this._widthBeforeCollapse&&(this.width=this._widthBeforeCollapse)):null!==this._heightBeforeCollapse&&(this.height=this._heightBeforeCollapse),this._widthBeforeCollapse=null,this._heightBeforeCollapse=null)}))))}_onDragEnd(e){window.removeEventListener("mouseup",this._onDragEndEvt),window.removeEventListener("mouseleave",this._onDragEndEvt),window.removeEventListener("mousemove",this._onDragMove),this._draggedChild===this&&(this._draggedChild=null),this.emit("dragend"),this.parent&&this.parent._onChildDragStart&&this.parent._onChildDragEnd(e,this)}set collapsible(e){e!==this._collapsible&&(this._collapsible=e,e?this.class.add(U):this.class.remove(U),this._reflow(),this.collapsed&&this.emit(e?"collapse":"expand"))}get collapsible(){return this._collapsible}set collapsed(e){this._collapsed!==e&&(this._collapsed=e,this._reflow(),this.collapsible&&this.emit(e?"collapse":"expand"))}get collapsed(){return this._collapsed}set sortable(e){this._sortable!==e&&(this._sortable=e,e?(this._iconSort=new re({class:me}),this._iconSort.dom.addEventListener("mousedown",this._onDragStart),this.header.prepend(this._iconSort)):this._iconSort&&(this._iconSort.destroy(),this._iconSort=null))}get sortable(){return this._sortable}set removable(e){this.removable!==e&&(e?(this._btnRemove=new le({icon:"E289",class:fe}),this._btnRemove.on("click",this._onClickRemove.bind(this)),this.header.append(this._btnRemove)):(this._btnRemove.destroy(),this._btnRemove=null))}get removable(){return!!this._btnRemove}set collapseHorizontally(e){this._collapseHorizontally!==e&&(this._collapseHorizontally=e,e?this.class.add(ue):this.class.remove(ue),this._reflow())}get collapseHorizontally(){return this._collapseHorizontally}get content(){return this._containerContent}get header(){return this._containerHeader}set headerText(e){this._labelTitle.text=e}get headerText(){return this._labelTitle.text}set headerSize(e){this._headerSize=e;const t=this._containerHeader.dom.style;t.height=Math.max(0,e)+"px",t.lineHeight=t.height,this._reflow()}get headerSize(){return this._headerSize}}ge.EVENT_COLLAPSE="collapse",ge.EVENT_EXPAND="expand",Q.register("panel",ge);var ve=ge;var ye=class extends Q{constructor(e={}){var t,n,i,a,s;super(e),this._onInputFocus=e=>{this.class.add(V),this.emit("focus",e),this._prevValue=this._domInput.value},this._onInputBlur=e=>{this.class.remove(V),this.emit("blur",e)},this._onInputKeyUp=e=>{"Escape"!==e.key&&this._onInputChange(e),this.emit("keyup",e)},this._onInputCtxMenu=e=>{this._domInput.select()},this._updateInputReadOnly=()=>{!this.enabled||this.readOnly?this._domInput.setAttribute("readonly","true"):this._domInput.removeAttribute("readonly")},this.class.add("pcui-input-element");let r=e.input;r||(r=document.createElement("input"),r.type="text"),r.ui=this,r.tabIndex=0,r.autocomplete="off",this._onInputKeyDownEvt=this._onInputKeyDown.bind(this),this._onInputChangeEvt=this._onInputChange.bind(this),r.addEventListener("change",this._onInputChangeEvt),r.addEventListener("keydown",this._onInputKeyDownEvt),r.addEventListener("focus",this._onInputFocus),r.addEventListener("blur",this._onInputBlur),r.addEventListener("contextmenu",this._onInputCtxMenu,!1),this.dom.appendChild(r),this._domInput=r,this._suspendInputChangeEvt=!1,void 0!==e.value&&(this._domInput.value=e.value),this.placeholder=null!==(t=e.placeholder)&&void 0!==t?t:"",this.renderChanges=null!==(n=e.renderChanges)&&void 0!==n&&n,this.blurOnEnter=null===(i=e.blurOnEnter)||void 0===i||i,this.blurOnEscape=null===(a=e.blurOnEscape)||void 0===a||a,this.keyChange=null!==(s=e.keyChange)&&void 0!==s&&s,this._prevValue=null,this.on("change",(()=>{this.renderChanges&&this.flash()})),this.on("disable",this._updateInputReadOnly),this.on("enable",this._updateInputReadOnly),this.on("readOnly",this._updateInputReadOnly),this._updateInputReadOnly()}destroy(){if(this._destroyed)return;const e=this._domInput;e.removeEventListener("change",this._onInputChangeEvt),e.removeEventListener("keydown",this._onInputKeyDownEvt),e.removeEventListener("focus",this._onInputFocus),e.removeEventListener("blur",this._onInputBlur),e.removeEventListener("keyup",this._onInputKeyUp),e.removeEventListener("contextmenu",this._onInputCtxMenu),super.destroy()}_onInputKeyDown(e){if("Enter"===e.key&&this.blurOnEnter)this._suspendInputChangeEvt=this.keyChange,this._domInput.blur(),this._suspendInputChangeEvt=!1;else if("Escape"===e.key){this._suspendInputChangeEvt=!0;const t=this._domInput.value;this._domInput.value=this._prevValue,this._suspendInputChangeEvt=!1,this.keyChange&&t!==this._prevValue&&this._onInputChange(e),this.blurOnEscape&&this._domInput.blur()}this.emit("keydown",e)}_onInputChange(e){}focus(e){this._domInput.focus(),e&&this._domInput.select()}blur(){this._domInput.blur()}set placeholder(e){e?this.dom.setAttribute("placeholder",e):this.dom.removeAttribute("placeholder")}get placeholder(){var e;return null!==(e=this.dom.getAttribute("placeholder"))&&void 0!==e?e:""}set keyChange(e){this._keyChange!==e&&(this._keyChange=e,e?this._domInput.addEventListener("keyup",this._onInputKeyUp):this._domInput.removeEventListener("keyup",this._onInputKeyUp))}get keyChange(){return this._keyChange}get input(){return this._domInput}set blurOnEnter(e){this._blurOnEnter=e}get blurOnEnter(){return this._blurOnEnter}set blurOnEscape(e){this._blurOnEscape=e}get blurOnEscape(){return this._blurOnEscape}set renderChanges(e){this._renderChanges=e}get renderChanges(){return this._renderChanges}};const _e="pcui-numeric-input",we=_e+"-slider-control",be=we+"-active",xe=we+"-hidden",Ce=/,/g;class Se extends ye{constructor(e={}){var t,n,i,a;const s=Object.assign({},e);delete s.value,delete s.renderChanges,super(s),this._sliderUsed=!1,this._onSliderMouseWheel=e=>{this._updatePosition(e.deltaY,e.shiftKey)},this._onSliderMouseMove=e=>{this._updatePosition(e.movementX,e.shiftKey)},this._onSliderMouseDown=()=>{this._sliderControl.dom.requestPointerLock(),this._sliderMovement=0,this._sliderPrevValue=this.value,this._sliderUsed=!0,this.binding&&(this._historyCombine=this.binding.historyCombine,this._historyPostfix=this.binding.historyPostfix,this.binding.historyCombine=!0,this.binding.historyPostfix=`(${Date.now()})`)},this._onSliderMouseUp=()=>{document.exitPointerLock(),this._sliderUsed&&(this._sliderUsed=!1,this.value=this._sliderPrevValue+this._sliderMovement,this.binding&&(this.binding.historyCombine=this._historyCombine,this.binding.historyPostfix=this._historyPostfix,this._historyCombine=!1,this._historyPostfix=null),this.focus())},this._onPointerLockChange=()=>{this._isScrolling()?(this._sliderControl.dom.addEventListener("mousemove",this._onSliderMouseMove,!1),this._sliderControl.dom.addEventListener("wheel",this._onSliderMouseWheel,{passive:!0}),this._sliderControl.class.add(be)):(this._sliderControl.dom.removeEventListener("mousemove",this._onSliderMouseMove,!1),this._sliderControl.dom.removeEventListener("wheel",this._onSliderMouseWheel),this._sliderControl.class.remove(be))},this.class.add(_e),this._min=null!==(t=e.min)&&void 0!==t?t:null,this._max=null!==(n=e.max)&&void 0!==n?n:null,this._allowNull=null!==(i=e.allowNull)&&void 0!==i&&i,this._precision=null!==(a=e.precision)&&void 0!==a?a:7,Number.isFinite(e.step)?this._step=e.step:e.precision?this._step=10/Math.pow(10,e.precision):this._step=1,Number.isFinite(e.stepPrecision)?this._stepPrecision=e.stepPrecision:this._stepPrecision=.1*this._step,this._oldValue=void 0,Number.isFinite(e.value)?this.value=e.value:this._allowNull||(this.value=0),this._historyCombine=!1,this._historyPostfix=null,this._sliderPrevValue=0,this.renderChanges=e.renderChanges,e.hideSlider||(this._sliderControl=new Q,this._sliderControl.class.add(we),this.dom.append(this._sliderControl.dom),this._sliderControl.dom.addEventListener("mousedown",this._onSliderMouseDown),this._sliderControl.dom.addEventListener("mouseup",this._onSliderMouseUp),document.addEventListener("pointerlockchange",this._onPointerLockChange,!1))}destroy(){this.destroyed||(this._sliderControl&&(this._sliderControl.dom.removeEventListener("mousedown",this._onSliderMouseDown),this._sliderControl.dom.removeEventListener("mouseup",this._onSliderMouseUp),this._sliderControl.dom.removeEventListener("mousemove",this._onSliderMouseMove,!1),this._sliderControl.dom.removeEventListener("wheel",this._onSliderMouseWheel),document.removeEventListener("pointerlockchange",this._onPointerLockChange,!1)),super.destroy())}_updatePosition(e,t){this._sliderMovement+=e/100*(t?this._stepPrecision:this._step),this.value=this._sliderPrevValue+this._sliderMovement}_onInputChange(e){this.value=this._normalizeValue(this._domInput.value)}_onInputKeyDown(e){if(this.enabled&&!this.readOnly){if("ArrowUp"===e.key||"ArrowDown"===e.key){const t="ArrowDown"===e.key?-1:1;this.value+=(e.shiftKey?this._stepPrecision:this._step)*t}super._onInputKeyDown(e)}}_isScrolling(){return!!this._sliderControl&&document.pointerLockElement===this._sliderControl.dom}_normalizeValue(e){try{if("string"==typeof e){if("0"===e)return 0;if(null!==(e=(e=(e=e.replace(Ce,".")).replace(/\s/g,"")).match(/^[*/+\-0-9().]+$/))&&e[0].length<20){let t=e[0];["+","-","/","*"].forEach((e=>{const n=t.split(e);n.forEach(((e,t)=>{n[t]=n[t].replace(/^0+/,"")})),t=n.join(e)})),e=Function('"use strict";return ('+t+")")()}}}catch(t){e=null}if(null===e||isNaN(e)){if(this._allowNull)return null;e=0}return null!==this.min&&e<this.min&&(e=this.min),null!==this.max&&e>this.max&&(e=this.max),null!==this.precision&&(e=parseFloat(Number(e).toFixed(this.precision))),e}_updateValue(e,t){const n=e!==this._oldValue||t;return this._oldValue=e,this._domInput.value=null===e?"":String(e),this.class.remove(H),n&&this.emit("change",e),n}set value(e){e=this._normalizeValue(e);const t=this.class.contains(H)&&null===e&&this._allowNull;this._updateValue(e,t)&&this.binding&&this.binding.setValue(e),this._sliderControl&&this._sliderControl.class.remove(xe)}get value(){const e=this._domInput.value;return""!==e?parseFloat(e):null}set values(e){const t=e.map((e=>this._normalizeValue(e))),n=t.some((e=>e!==t[0]));n?(this._updateValue(null),this.class.add(H),this._sliderControl&&this._sliderControl.class.add(xe)):(this._updateValue(t[0]),this._sliderControl&&this._sliderControl.class.remove(xe))}set min(e){this._min!==e&&(this._min=e,null!==this._min&&(this.value=this.value))}get min(){return this._min}set max(e){this._max!==e&&(this._max=e,null!==this._max&&(this.value=this.value))}get max(){return this._max}set precision(e){this._precision!==e&&(this._precision=e,null!==this._precision&&(this.value=this.value))}get precision(){return this._precision}set step(e){this._step=e}get step(){return this._step}}Q.register("number",Se,{renderChanges:!0});var Ee=Se;const Te="pcui-array-input",Ae="pcui-array-empty",Le=Te+"-size",Me=Te+"-items",Pe=Te+"-item",Oe=Pe+"-delete";class Ie extends Q{constructor(e={}){var t,n,i;const a=new ae({dom:e.dom,flex:!0}),s=Object.assign(Object.assign({},e),{dom:a.dom});delete s.binding,super(s),this._suspendSizeChangeEvt=!1,this._suspendArrayElementEvts=!1,this._arrayElementChangeTimeout=null,this._container=a,this._container.parent=this,this.class.add(Te,Ae),this._usePanels=null!==(t=e.usePanels)&&void 0!==t&&t,this._fixedSize=!!e.fixedSize,this._inputSize=new Ee({class:[Le],placeholder:"Array Size",value:0,hideSlider:!0,step:1,precision:0,min:0,readOnly:this._fixedSize}),this._inputSize.on("change",(e=>{this._onSizeChange(e)})),this._inputSize.on("focus",(()=>{this.emit("focus")})),this._inputSize.on("blur",(()=>{this.emit("blur")})),this._container.append(this._inputSize),this._containerArray=new ae({class:Me,hidden:!0}),this._containerArray.on("append",(()=>{this._containerArray.hidden=!1})),this._containerArray.on("remove",(()=>{this._containerArray.hidden=0===this._arrayElements.length})),this._container.append(this._containerArray),this._getDefaultFn=null!==(n=e.getDefaultFn)&&void 0!==n?n:null;let r=e.elementArgs&&e.elementArgs.type||e.type;Ie.DEFAULTS.hasOwnProperty(r)||(r="string"),this._valueType=r,this._elementType=null!==(i=e.type)&&void 0!==i?i:"string",e.elementArgs?this._elementArgs=e.elementArgs:(delete s.dom,this._elementArgs=s),this._arrayElements=[],this.binding=e.binding,this._values=[],e.value&&(this.value=e.value),this.renderChanges=e.renderChanges||!1}destroy(){this._destroyed||(this._arrayElements.length=0,super.destroy())}_onSizeChange(e){if(0===e?this.class.add(Ae):this.class.remove(Ae),null===e)return;if(this._suspendSizeChangeEvt)return;let t;const n=()=>{if(this._getDefaultFn)t=this._getDefaultFn();else if(t=Ie.DEFAULTS[this._valueType],"curveset"===this._valueType){if(t=P(t),Array.isArray(this._elementArgs.curves))for(let e=0;e<this._elementArgs.curves.length;e++)t.keys.push([0,0])}else if("gradient"===this._valueType&&(t=P(t),this._elementArgs.channels))for(let e=0;e<this._elementArgs.channels;e++)t.keys.push([0,1])},i=this._values.map((i=>{if(i)if(i.length<e){const a=new Array(e-i.length);for(let e=0;e<a.length;e++)a[e]=P(Ie.DEFAULTS[this._valueType]),void 0===t&&n(),a[e]=P(t);i=i.concat(a)}else{const t=new Array(e);for(let n=0;n<e;n++)t[n]=P(i[n]);i=t}else{i=new Array(e);for(let a=0;a<e;a++)i[a]=P(Ie.DEFAULTS[this._valueType]),void 0===t&&n(),i[a]=P(t)}return i}));if(!i.length){const a=new Array(e);for(let i=0;i<e;i++)a[i]=P(Ie.DEFAULTS[this._valueType]),void 0===t&&n(),a[i]=P(t);i.push(a)}this._updateValues(i,!0)}_createArrayElement(){const e=Object.assign({},this._elementArgs);let t;e.binding?e.binding=e.binding.clone():this._binding&&(e.binding=this._binding.clone()),e.renderChanges=!1,t=this._usePanels?new ve({headerText:`[${this._arrayElements.length}]`,removable:!this._fixedSize,collapsible:!0,class:[Pe,Pe+"-"+this._elementType]}):new ae({flex:!0,flexDirection:"row",alignItems:"center",class:[Pe,Pe+"-"+this._elementType]}),"json"===this._elementType&&e.attributes&&(e.attributes=e.attributes.map((e=>{if(!e.path)return e;const t=(e=Object.assign({},e)).path.split(".");return t.splice(t.length-1,0,this._arrayElements.length),e.path=t.join("."),e})));const n=Q.create(this._elementType,e);t.append(n),n.renderChanges=this.renderChanges;const i={container:t,element:n};if(this._arrayElements.push(i),this._usePanels)t.on("click:remove",(()=>{this._removeArrayElement(i)}));else if(!this._fixedSize){const e=new le({icon:"E289",size:"small",class:Oe,tabIndex:-1});e.on("click",(()=>{this._removeArrayElement(i)})),t.append(e)}return n.on("change",(e=>{this._onArrayElementChange(i,e)})),this._containerArray.append(t),i}_removeArrayElement(e){const t=this._arrayElements.indexOf(e);if(-1===t)return;const n=this._values.map((e=>e?(e.splice(t,1),e):null));this._updateValues(n,!0)}_onArrayElementChange(e,t){if(this._suspendArrayElementEvts)return;const n=this._arrayElements.indexOf(e);-1!==n&&(this._values.forEach((e=>{e&&e.length>n&&(e[n]=t)})),this._arrayElementChangeTimeout=window.setTimeout((()=>{this._arrayElementChangeTimeout=null,this.emit("change",this.value)})))}_linkArrayElement(e,t){const n=this._binding.observers,i=this._binding.paths,a=1===i.length||n.length!==i.length;e.unlink(),e.value=null,this.emit("unlinkElement",e,t);const s=a?i[0]+`.${t}`:i.map((e=>`${e}.${t}`));e.link(n,s),this.emit("linkElement",e,t,s)}_updateValues(e,t){this._values=e||[],this._suspendArrayElementEvts=!0,this._suspendSizeChangeEvt=!0,t&&this._binding&&this._binding.setValues(e);const n=[],i=[];e.forEach((e=>{e&&(i.push(e.length),e.forEach(((e,t)=>{n[t]||(n[t]=[]),n[t].push(e)})))}));let a=-1;for(let t=0;t<n.length&&n[t].length===e.length;t++)this._arrayElements[t]||this._createArrayElement(),this._binding&&this._binding.observers?this._linkArrayElement(this._arrayElements[t].element,t):n[t].length>1?this._arrayElements[t].element.values=n[t]:this._arrayElements[t].element.value=n[t][0],a=t;for(let e=this._arrayElements.length-1;e>a;e--)this._arrayElements[e].container.destroy(),this._arrayElements.splice(e,1);this._inputSize.values=i,this._suspendSizeChangeEvt=!1,this._suspendArrayElementEvts=!1,this._arrayElementChangeTimeout&&(window.clearTimeout(this._arrayElementChangeTimeout),this._arrayElementChangeTimeout=null),this.emit("change",this.value)}focus(){this._inputSize.focus()}blur(){this._inputSize.blur()}unlink(){super.unlink(),this._arrayElements.forEach((e=>{e.element.unlink()}))}link(e,t){super.link(e,t),this._arrayElements.forEach(((e,t)=>{this._linkArrayElement(e.element,t)}))}forEachArrayElement(e){this._containerArray.forEachChild(((t,n)=>e(t.dom.firstChild.ui,n)))}set binding(e){super.binding=e,this._arrayElements.forEach((t=>{t.element.binding=e?e.clone():null}))}get binding(){return super.binding}set value(e){Array.isArray(e)||(e=[]);O(this.value||[],e)||this._updateValues(new Array(this._values.length||1).fill(e),!0)}get value(){return this._arrayElements.map((e=>e.element.value))}set values(e){O(this._values,e)||this._updateValues(e,!1)}set renderChanges(e){this._renderChanges=e,this._arrayElements.forEach((t=>{t.element.renderChanges=e}))}get renderChanges(){return this._renderChanges}}Ie.DEFAULTS={boolean:!1,number:0,string:"",vec2:[0,0],vec3:[0,0,0],vec4:[0,0,0,0]};for(const e in Ie.DEFAULTS)Q.register(`array:${e}`,Ie,{type:e,renderChanges:!0});Q.register("array:select",Ie,{type:"select",renderChanges:!0});var Re=Ie;class De extends i.exports.Component{constructor(e){super(e),this.attachElement=(e,t)=>{if(!e)return;this.elementClass===Q?this.element=new this.elementClass(e,Object.assign(Object.assign({},this.props),{container:t,parent:void 0})):this.element=new this.elementClass(Object.assign(Object.assign({},this.props),{dom:e,content:t,parent:void 0}));const n=this.props.class;this.class=new Set(n?Array.isArray(n)?n.slice():[n]:void 0),this.onClick&&this.element.on("click",this.onClick),this.onRemove&&this.element.on("click:remove",this.onRemove),this.onChange&&this.element.on("change",this.onChange),this.props.parent&&(this.element.parent=this.props.parent),this.onAttach&&this.onAttach()},this.getPropertyDescriptor=(e,t)=>{let n;do{n=Object.getOwnPropertyDescriptor(e,t)}while(!n&&(e=Object.getPrototypeOf(e)));return n},this.elementClass=Q,e.onClick&&(this.onClick=e.onClick),e.onRemove&&(this.onRemove=e.onRemove),e.onChange&&(this.onChange=e.onChange),e.link&&(this.link=e.link)}componentDidMount(){this.link&&this.element.link(this.link.observer,this.link.path)}componentDidUpdate(e){Object.keys(this.props).forEach((e=>{const t=this.getPropertyDescriptor(this.element,e);if(t&&t.set)"value"===e?(this.element._suppressChange=!0,this.element[e]=this.props[e],this.element._suppressChange=!1):this.element[e]=this.props[e];else if("class"===e){const t=this.props[e],n=new Set(t?Array.isArray(t)?t.slice():[t]:void 0);n.forEach((e=>{this.class.has(e)||(this.element.class.add(e),this.class.add(e))})),this.class.forEach((e=>{n.has(e)||(this.element.class.remove(e),this.class.delete(e))}))}})),e.link!==this.props.link&&this.props.link&&this.element.link(this.props.link.observer,this.props.link.path)}render(){return i.exports.createElement("div",{ref:this.attachElement})}}var ke=De;class Fe extends ke{constructor(e){super(e),this.elementClass=Re}render(){return super.render()}}Fe.ctor=Re;var Be=Fe;const Ne="pcui-boolean-input",Ue=Ne+"-ticked",ze=Ne+"-toggle";class Ve extends Q{constructor(e={}){var t;super(Object.assign({tabIndex:0},e)),this._onKeyDown=e=>{"Escape"!==e.key?this.enabled&&!this.readOnly&&" "===e.key&&(e.stopPropagation(),e.preventDefault(),this.value=!this.value):this.blur()},this._onFocus=()=>{this.emit("focus")},this._onBlur=()=>{this.emit("blur")},"toggle"===e.type?this.class.add(ze):this.class.add(Ne),this.class.add(j),this.dom.addEventListener("keydown",this._onKeyDown),this.dom.addEventListener("focus",this._onFocus),this.dom.addEventListener("blur",this._onBlur),this._value=null,void 0!==e.value&&(this.value=e.value),this.renderChanges=null!==(t=e.renderChanges)&&void 0!==t&&t}destroy(){this._destroyed||(this.dom.removeEventListener("keydown",this._onKeyDown),this.dom.removeEventListener("focus",this._onFocus),this.dom.removeEventListener("blur",this._onBlur),super.destroy())}_onClick(e){return this.enabled&&this.focus(),this.enabled&&!this.readOnly&&(this.value=!this.value),super._onClick(e)}_updateValue(e){return this.class.remove(H),e!==this.value&&(this._value=e,e?this.class.add(Ue):this.class.remove(Ue),this.renderChanges&&this.flash(),this.emit("change",e),!0)}focus(){this.dom.focus()}blur(){this.dom.blur()}set value(e){this._updateValue(e)&&this._binding&&this._binding.setValue(e)}get value(){return this._value}set values(e){const t=e.some((t=>t!==e[0]));t?(this._updateValue(null),this.class.add(H)):this._updateValue(e[0])}set renderChanges(e){this._renderChanges=e}get renderChanges(){return this._renderChanges}}Q.register("boolean",Ve,{renderChanges:!0});var He=Ve;class Ge extends ke{constructor(e={}){super(e),this.elementClass=He}render(){return super.render()}}Ge.ctor=He;var We=Ge;class je extends ke{constructor(e={}){super(e),this.elementClass=le}render(){return i.exports.createElement("button",{ref:this.attachElement})}}je.ctor=le;var Xe=je;class Ye extends Q{constructor(e={}){super(Object.assign({dom:"canvas"},e)),this._width=300,this._height=150,this._ratio=1,this.class.add("pcui-canvas");const{useDevicePixelRatio:t=!1}=e;this._ratio=t?window.devicePixelRatio:1,this.dom.onselectstart=e=>!1}resize(e,t){if(this._width===e&&this._height===t)return;this._width=e,this._height=t;const n=this._dom;n.width=this.pixelWidth,n.height=this.pixelHeight,n.style.width=e+"px",n.style.height=t+"px",this.emit("resize",e,t)}set width(e){if(this._width===e)return;this._width=e;const t=this._dom;t.width=this.pixelWidth,t.style.width=e+"px",this.emit("resize",this._width,this._height)}get width(){return this._width}set height(e){if(this._height===e)return;this._height=e;const t=this._dom;t.height=this.pixelHeight,t.style.height=e+"px",this.emit("resize",this._width,this._height)}get height(){return this._height}get pixelWidth(){return Math.floor(this._width*this._ratio)}get pixelHeight(){return Math.floor(this._height*this._ratio)}get pixelRatio(){return this._ratio}}Q.register("canvas",Ye);var qe=Ye;class Ke extends ke{constructor(e={}){super(e),this.elementClass=qe}render(){return i.exports.createElement("canvas",{ref:this.attachElement})}}Ke.ctor=qe;var Ze=Ke;const Qe="pcui-code",Je=Qe+"-inner";class $e extends ae{constructor(e={}){super(e),this.class.add(Qe),this._inner=new re({class:Je}),this.append(this._inner),e.text&&(this.text=e.text)}set text(e){this._text=e,this._inner.text=e}get text(){return this._text}}Q.register("code",$e);var et=$e;class tt extends ke{constructor(e){super(e),this.elementClass=et}render(){return super.render()}}tt.ctor=et;var nt=tt;const it="pcui-overlay",at=it+"-inner",st=it+"-clickable",rt=it+"-transparent",ot=it+"-content";class lt extends ae{constructor(e={}){super(e),this._onMouseDown=e=>{this.clickable&&(document.body.blur(),requestAnimationFrame((()=>{this.hidden=!0})),e.preventDefault())},this.class.add(it),this._domClickableOverlay=document.createElement("div"),this._domClickableOverlay.ui=this,this._domClickableOverlay.classList.add(at),this.dom.appendChild(this._domClickableOverlay),this._domClickableOverlay.addEventListener("mousedown",this._onMouseDown),this.domContent=document.createElement("div"),this.domContent.ui=this,this.domContent.classList.add(ot),this.dom.appendChild(this.domContent),this.clickable=e.clickable||!1,this.transparent=e.transparent||!1}destroy(){this._destroyed||(this._domClickableOverlay.removeEventListener("mousedown",this._onMouseDown),super.destroy())}position(e,t){const n=this._domClickableOverlay.getBoundingClientRect(),i=this.domContent.getBoundingClientRect();e=Math.max(0,Math.min(n.width-i.width,e)),t=Math.max(0,Math.min(n.height-i.height,t)),this.domContent.style.position="absolute",this.domContent.style.left=`${e}px`,this.domContent.style.top=`${t}px`}set clickable(e){e?this.class.add(st):this.class.remove(st)}get clickable(){return this.class.contains(st)}set transparent(e){e?this.class.add(rt):this.class.remove(rt)}get transparent(){return this.class.contains(rt)}}Q.register("overlay",lt);var ct=lt;class ht extends ye{constructor(e={}){super(e),this.class.add("pcui-text-input"),e.onValidate&&(this.onValidate=e.onValidate)}_onInputChange(e){if(!this._suspendInputChangeEvt){if(this._onValidate){const e=!this._onValidate(this.value);if(this.error=e,e)return}else this.error=!1;this.emit("change",this.value),this._binding&&this._binding.setValue(this.value)}}_updateValue(e){if(this.class.remove(H),e&&"object"==typeof e)if(Array.isArray(e)){let t=!1;for(let n=0;n<e.length;n++)if(e[n]&&"object"==typeof e[n]){t=!0;break}e=t?"[Not available]":e.map((e=>null===e?"null":e)).join(",")}else e="[Not available]";return e!==this.value&&(this._suspendInputChangeEvt=!0,this._domInput.value=null==e?"":String(e),this._suspendInputChangeEvt=!1,this.emit("change",e),!0)}set value(e){const t=this._updateValue(e);t&&(this.error=!1),t&&this._binding&&this._binding.setValue(e)}get value(){return this._domInput.value}set values(e){const t=e.some((t=>t!==e[0]));t?(this._updateValue(null),this.class.add(H)):this._updateValue(e[0])}set onValidate(e){this._onValidate=e}get onValidate(){return this._onValidate}}Q.register("string",ht,{renderChanges:!0});var pt=ht;function dt(e){const t=e[0]/255,n=e[1]/255,i=e[2]/255;let a,s;const r=Math.max(t,n,i),o=r-Math.min(t,n,i),l=e=>(r-e)/6/o+.5;if(0===o)return a=s=0,[a,s,r];s=o/r;const c=l(t),h=l(n),p=l(i);return t===r?a=p-h:n===r?a=1/3+c-p:i===r&&(a=2/3+h-c),a<0?a+=1:a>1&&(a-=1),[a,s,r]}function ut(e){const t=e[0],n=e[1],i=e[2];let a,s,r;const o=Math.floor(6*t),l=6*t-o,c=i*(1-n),h=i*(1-l*n),p=i*(1-(1-l)*n);switch(o%6){case 0:a=i,s=p,r=c;break;case 1:a=h,s=i,r=c;break;case 2:a=c,s=i,r=p;break;case 3:a=c,s=h,r=i;break;case 4:a=p,s=c,r=i;break;case 5:a=i,s=c,r=h}return[Math.round(255*a),Math.round(255*s),Math.round(255*r)]}class mt extends Q{constructor(e={}){var t,n,i;super(e),this._historyCombine=!1,this._historyPostfix=null,this._size=144,this._directInput=!0,this._colorHSV=[0,0,0],this._pickerChannels=[],this._channelsNumber=4,this._changing=!1,this._dragging=!1,this._callingCallback=!1,this._evtColorPick=null,this._evtColorToPicker=null,this._evtColorPickStart=null,this._evtColorPickEnd=null,this._onKeyDown=e=>{"Escape"===e.key&&this.blur(),"Enter"===e.key&&this.enabled&&!this.readOnly&&(e.stopPropagation(),e.preventDefault())},this._onFocus=e=>{this.emit("focus")},this._onBlur=e=>{this.emit("blur")},this._pickRectMouseMove=e=>{this._changing=!0;const t=this._pickRect.getBoundingClientRect(),n=Math.max(0,Math.min(this._size,Math.floor(e.clientX-t.left))),i=Math.max(0,Math.min(this._size,Math.floor(e.clientY-t.top)));this._colorHSV[1]=n/this._size,this._colorHSV[2]=1-i/this._size,this._directInput=!1;const a=ut(this._colorHSV);for(let e=0;e<3;e++)this._pickerChannels[e].value=a[e];this._fieldHex.value=this._getHex(),this._directInput=!0,this._pickRectHandle.style.left=Math.max(4,Math.min(this._size-4,n))+"px",this._pickRectHandle.style.top=Math.max(4,Math.min(this._size-4,i))+"px",this._changing=!1},this._pickRectMouseUp=()=>{window.removeEventListener("mousemove",this._pickRectMouseMove,!1),window.removeEventListener("mouseup",this._pickRectMouseUp,!1),this._dragging=!1,this.emit("picker:color:end")},this._pickHueMouseMove=e=>{this._changing=!0;const t=this._pickHue.getBoundingClientRect(),n=Math.max(0,Math.min(this._size,Math.floor(e.clientY-t.top)))/this._size,i=ut([n,this._colorHSV[1],this._colorHSV[2]]);this._colorHSV[0]=n,this._directInput=!1;for(let e=0;e<3;e++)this._pickerChannels[e].value=i[e];this._fieldHex.value=this._getHex(),this._onChangeRgb(),this._directInput=!0,this._changing=!1},this._pickHueMouseUp=()=>{window.removeEventListener("mousemove",this._pickHueMouseMove,!1),window.removeEventListener("mouseup",this._pickHueMouseUp,!1),this._dragging=!1,this.emit("picker:color:end")},this._pickOpacityMouseMove=e=>{this._changing=!0;const t=this._pickOpacity.getBoundingClientRect(),n=1-Math.max(0,Math.min(this._size,Math.floor(e.clientY-t.top)))/this._size;this._directInput=!1,this._pickerChannels[3].value=Math.max(0,Math.min(255,Math.round(255*n))),this._fieldHex.value=this._getHex(),this._directInput=!0,this._changing=!1},this._pickOpacityMouseUp=()=>{window.removeEventListener("mousemove",this._pickOpacityMouseMove,!1),window.removeEventListener("mouseup",this._pickOpacityMouseUp,!1),this._dragging=!1,this.emit("picker:color:end")},this.class.add("pcui-color-input",j),this._domColor=document.createElement("div"),this.dom.appendChild(this._domColor),this.dom.addEventListener("keydown",this._onKeyDown),this.dom.addEventListener("focus",this._onFocus),this.dom.addEventListener("blur",this._onBlur),this.on("click",(()=>{this.enabled&&!this.readOnly&&this._openColorPicker()})),this._value=null!==(t=e.value)&&void 0!==t?t:[0,0,255,1],this._channels=null!==(n=e.channels)&&void 0!==n?n:3,this._setValue(this._value),this.renderChanges=null!==(i=e.renderChanges)&&void 0!==i&&i,this.on("change",(()=>{this.renderChanges&&this.flash()})),this._overlay=new ct({class:"picker-color",clickable:!0,hidden:!0,transparent:!0}),this.dom.appendChild(this._overlay.dom),this._pickRect=document.createElement("div"),this._pickRect.classList.add("pick-rect"),this._overlay.append(this._pickRect),this._pickRect.addEventListener("mousedown",function(e){this._pickRectMouseMove(e),window.addEventListener("mousemove",this._pickRectMouseMove,!1),window.addEventListener("mouseup",this._pickRectMouseUp,!1),e.stopPropagation(),e.preventDefault(),this.dragging=!0,this.emit("picker:color:start")}.bind(this)),this._pickRectWhite=document.createElement("div"),this._pickRectWhite.classList.add("white"),this._pickRect.appendChild(this._pickRectWhite),this._pickRectBlack=document.createElement("div"),this._pickRectBlack.classList.add("black"),this._pickRect.appendChild(this._pickRectBlack),this._pickRectHandle=document.createElement("div"),this._pickRectHandle.classList.add("handle"),this._pickRect.appendChild(this._pickRectHandle),this._pickHue=document.createElement("div"),this._pickHue.classList.add("pick-hue"),this._overlay.append(this._pickHue),this._pickHue.addEventListener("mousedown",function(e){this._pickHueMouseMove(e),window.addEventListener("mousemove",this._pickHueMouseMove,!1),window.addEventListener("mouseup",this._pickHueMouseUp,!1),e.stopPropagation(),e.preventDefault(),this.dragging=!0,this.emit("picker:color:start")}.bind(this)),this._pickHueHandle=document.createElement("div"),this._pickHueHandle.classList.add("handle"),this._pickHue.appendChild(this._pickHueHandle),this._pickOpacity=document.createElement("div"),this._pickOpacity.classList.add("pick-opacity"),this._overlay.append(this._pickOpacity),this._pickOpacity.addEventListener("mousedown",function(e){this._pickOpacityMouseMove(e),window.addEventListener("mousemove",this._pickOpacityMouseMove,!1),window.addEventListener("mouseup",this._pickOpacityMouseUp,!1),e.stopPropagation(),e.preventDefault(),this.dragging=!0,this.emit("picker:color:start")}.bind(this)),this._pickOpacityHandle=document.createElement("div"),this._pickOpacityHandle.classList.add("handle"),this._pickOpacity.appendChild(this._pickOpacityHandle),this._panelFields=document.createElement("div"),this._panelFields.classList.add("fields"),this._overlay.append(this._panelFields),this._overlay.on("hide",(()=>{this._evtColorPick.unbind(),this._evtColorPick=null,this._evtColorToPicker.unbind(),this._evtColorToPicker=null,this._evtColorPickStart.unbind(),this._evtColorPickStart=null,this._evtColorPickEnd.unbind(),this._evtColorPickEnd=null}));const a=e=>new Ee({class:["field","field-"+e],precision:0,step:1,min:0,max:255,placeholder:e}),s=a("r");s.on("change",(()=>{this._onChangeRgb()})),this._pickerChannels.push(s),this._panelFields.appendChild(s.dom);const r=a("g");r.on("change",(()=>{this._onChangeRgb()})),this._pickerChannels.push(r),this._panelFields.appendChild(r.dom);const o=a("b");o.on("change",(()=>{this._onChangeRgb()})),this._pickerChannels.push(o),this._panelFields.appendChild(o.dom);const l=a("a");l.on("change",(e=>{this._onChangeAlpha(e)})),this._pickerChannels.push(l),this._panelFields.appendChild(l.dom),this._fieldHex=new pt({class:["field","field-hex"],placeholder:"#"}),this._fieldHex.on("change",(()=>{this._onChangeHex()})),this._panelFields.appendChild(this._fieldHex.dom)}destroy(){this._destroyed||(this.dom.removeEventListener("keydown",this._onKeyDown),this.dom.removeEventListener("focus",this._onFocus),this.dom.removeEventListener("blur",this._onBlur),super.destroy())}focus(){this.dom.focus()}blur(){this.dom.blur()}_setColorPickerPosition(e,t){this._overlay.position(e,t)}_setPickerColor(e){if(!this._changing&&!this._dragging){if(this._channelsNumber>=3){const t=dt(e);this._colorHSV[0]=t[0],this._colorHSV[1]=t[1],this._colorHSV[2]=t[2]}this._directInput=!1;for(let t=0;t<e.length;t++)this._pickerChannels[t].value=e[t];this._fieldHex.value=this._getHex(),this._directInput=!0}}_openColorPicker(){this._callPicker(this.value.map((e=>Math.floor(255*e)))),this._evtColorPick=this.on("picker:color",(e=>{this.value=e.map((e=>e/255))})),this._evtColorPickStart=this.on("picker:color:start",(()=>{this.binding?(this._historyCombine=this.binding.historyCombine,this._historyPostfix=this.binding.historyPostfix,this.binding.historyCombine=!0,this._binding.historyPostfix=`(${Date.now()})`):(this._historyCombine=!1,this._historyPostfix=null)})),this._evtColorPickEnd=this.on("picker:color:end",(()=>{this.binding&&(this.binding.historyCombine=this._historyCombine,this.binding.historyPostfix=this._historyPostfix)}));const e=this._overlay.dom.getBoundingClientRect(),t=this.dom.getBoundingClientRect();this._setColorPickerPosition(t.left-e.width,t.top+25),this._evtColorToPicker=this.on("change",(()=>{this._setPickerColor(this.value.map((e=>Math.floor(255*e))))}))}_callPicker(e){for(let t=0;t<4;t++)e.length-1<t?this._overlay.class.remove("c-"+(t+1)):this._overlay.class.add("c-"+(t+1));if(this._channelsNumber=e.length,this._channelsNumber>=3){const t=dt(e);this._colorHSV[0]=t[0],this._colorHSV[1]=t[1],this._colorHSV[2]=t[2]}this._directInput=!1;for(let t=0;t<e.length;t++)this._pickerChannels[t].value=e[t];this._fieldHex.value=this._getHex(),this._directInput=!0,this._overlay.hidden=!1,this._fieldHex.dom.focus(),window.setTimeout((()=>{this._fieldHex.dom.focus()}),100)}_valueToColor(e){return e=Math.floor(255*e),Math.max(0,Math.min(e,255))}_setValue(e){const t=this._valueToColor(e[0]),n=this._valueToColor(e[1]),i=this._valueToColor(e[2]),a=e[3];1===this._channels?this._domColor.style.backgroundColor=`rgb(${t}, ${t}, ${t})`:3===this._channels?this._domColor.style.backgroundColor=`rgb(${t}, ${n}, ${i})`:4===this._channels&&(this._domColor.style.backgroundColor=`rgba(${t}, ${n}, ${i}, ${a})`)}_updateValue(e){let t=!1;for(let n=0;n<e.length;n++)this._value[n]!==e[n]&&(t=!0,this._value[n]=e[n]);return this.class.remove(H),t&&(this._setValue(e),this.emit("change",e)),t}_getHex(){let e="";for(let t=0;t<this._channelsNumber;t++)e+=("00"+this._pickerChannels[t].value.toString(16)).slice(-2).toUpperCase();return e}_onChangeHex(){if(!this._directInput)return;this._changing=!0;const e=this._fieldHex.value.trim().toLowerCase();if(/^([0-9a-f]{2}){3,4}$/.test(e))for(let t=0;t<this._channelsNumber;t++)this._pickerChannels[t].value=parseInt(e.slice(2*t,2*t+2),16);this._changing=!1}_onChangeRgb(){const e=this._pickerChannels.map((function(e){return e.value||0})).slice(0,this._channelsNumber),t=dt(e);if(this._directInput){const n=e[0]+e[1]+e[2];765!==n&&0!==n&&(this._colorHSV[0]=t[0]),this._colorHSV[1]=t[1],this._colorHSV[2]=t[2],this._dragging=!0,this.emit("picker:color:start")}if(this._pickHueHandle.style.top=Math.floor(this._size*this._colorHSV[0])+"px",this._pickRectHandle.style.left=Math.max(4,Math.min(this._size-4,this._size*this._colorHSV[1]))+"px",this._pickRectHandle.style.top=Math.max(4,Math.min(this._size-4,this._size*(1-this._colorHSV[2])))+"px",this._channelsNumber>=3){const t=ut([this._colorHSV[0],1,1]).join(",");this._pickRect.style.backgroundColor="rgb("+t+")",this._pickRectHandle.style.backgroundColor="rgb("+e.slice(0,3).join(",")+")",this._pickHueHandle.style.backgroundColor="rgb("+t+")"}this.callCallback()}_onChangeAlpha(e){4===this._channelsNumber&&(this._pickOpacityHandle.style.top=Math.floor(this._size*(1-Math.max(0,Math.min(255,e))/255))+"px",this._pickOpacityHandle.style.backgroundColor=`rgb(${e}, ${e}, ${e})`,this.callCallback())}callbackHandle(){this._callingCallback=!1,this.emit("picker:color",this._pickerChannels.map((function(e){return e.value||0})).slice(0,this._channelsNumber))}callCallback(){this._callingCallback||(this._callingCallback=!0,window.setTimeout((()=>{this.callbackHandle()}),1e3/60))}set value(e){e=e||[0,0,0,0];this._updateValue(e)&&this._binding&&this._binding.setValue(e)}get value(){return this._value.slice(0,this._channels)}set values(e){let t=!1;const n=e[0];for(let i=1;i<e.length;i++)if(Array.isArray(n)){if(!n.equals(e[i])){t=!0;break}}else if(n!==e[i]){t=!0;break}t?(this.value=null,this.class.add(H)):this.value=e[0]}set channels(e){this._channels!==e&&(this._channels=Math.max(0,Math.min(e,4)),this._setValue(this.value))}get channels(){return this._channels}set renderChanges(e){this._renderChanges=e}get renderChanges(){return this._renderChanges}}Q.register("rgb",mt),Q.register("rgba",mt,{channels:4});var ft=mt;class gt extends ke{constructor(e){super(e),this.elementClass=ft}render(){return i.exports.createElement("div",{ref:this.attachElement})}}gt.ctor=ft;var vt=gt;class yt extends ke{constructor(e={}){super(e),this.getParent=()=>this,this.elementClass=ae}componentDidMount(){this.props.onResize&&this.element.on("resize",this.props.onResize)}render(){let e=i.exports.Children.toArray(this.props.children);return 1===e.length?e=i.exports.cloneElement(e[0],{parent:this.element}):e.length>0&&(e=e.map((e=>i.exports.cloneElement(e,{parent:this.element})))),i.exports.createElement("div",{ref:this.attachElement},e)}}yt.ctor=ae;var _t=yt;class wt extends Q{constructor(e={}){super(e),this.class.add("pcui-divider")}}Q.register("divider",wt);var bt=wt;class xt extends ke{constructor(e){super(e),this.elementClass=bt}render(){return super.render()}}xt.ctor=bt;var Ct=xt;const St=(e,t)=>{if(0===e.length)return t.length;if(0===t.length)return e.length;if(e===t)return 0;const n=[];for(let e=0;e<=t.length;e++)n[e]=[e];for(let t=0;t<=e.length;t++)n[0][t]=t;for(let i=1;i<=t.length;i++)for(let a=1;a<=e.length;a++)t.charAt(i-1)===e.charAt(a-1)?n[i][a]=n[i-1][a-1]:n[i][a]=Math.min(n[i-1][a-1]+1,Math.min(n[i][a-1]+1,n[i-1][a]+1));return n[t.length][e.length]},Et=(e,t)=>{if(e===t)return e.length;let n=0;const i=new Set;for(let e=0;e<t.length;e++)i.add(t.charAt(e));for(let t=0;t<e.length;t++)i.has(e.charAt(t))&&n++;return n},Tt=e=>{const t=[],n=e.replace(/([^A-Z])([A-Z][^A-Z])/g,"$1 $2").replace(/([A-Z0-9]{2,})/g," $1").split(/(\s|\-|_)/g);for(let e=0;e<n.length;e++)n[e]=n[e].toLowerCase().trim(),n[e]&&"-"!==n[e]&&"_"!==n[e]&&t.push(n[e]);return t},At=(e,t,n)=>{const i=[];for(const a of e){if(a.subFull!==1/0){i.push(a),a.edits===1/0&&(a.edits=0),a.sub===1/0&&(a.sub=a.subFull);continue}if(a.name===t||0===a.name.indexOf(t)){i.push(a),a.edits===1/0&&(a.edits=0),a.sub===1/0&&(a.sub=0);continue}if(Et(t,a.name)/t.length<n.containsCharsTolerance)continue;let e=1/0,s=1/0;for(let i=0;i<a.tokens.length;i++){if(a.tokens[i]===t){e=0,s=i;break}const r=St(t,a.tokens[i]);(s===1/0||r<e)&&-1!==a.tokens[i].indexOf(t)?(s=i,e=r):s===1/0&&r<e&&r/Math.max(t.length,a.tokens[i].length)<=n.editsDistanceTolerance&&(e=r)}e!==1/0&&(i.push(a),a.edits=a.edits===1/0?e:a.edits+e,a.sub=a.sub===1/0?s:a.sub+s)}return i},Lt=(e,t="",n={})=>{if(!(t=t.toLowerCase().trim()))return[];const i=Tt(t);if(!i.length)return[];n.containsCharsTolerance=n.containsCharsTolerance||.5,n.editsDistanceTolerance=n.editsDistanceTolerance||.5;let a=[];for(const n of e){const e=n[0].toLowerCase().trim().indexOf(t);a.push({name:n[0],item:n[1],tokens:Tt(n[0]),edits:1/0,subFull:-1!==e?e:1/0,sub:1/0})}for(let e=0;e<i.length;e++)a=At(a,i[e],n);a.sort(((e,t)=>e.subFull!==t.subFull?e.subFull-t.subFull:e.sub!==t.sub?e.sub-t.sub:e.edits!==t.edits?e.edits-t.edits:e.name.length-t.name.length));let s=a.map((e=>e.item));return n.hasOwnProperty("limitResults")&&s.length>n.limitResults&&(s=s.slice(0,n.limitResults)),s},Mt="pcui-select-input",Pt=Mt+"-container-value",Ot=Mt+"-multi",It=Mt+"-disabled-value",Rt=Mt+"-has-disabled-value",Dt=Mt+"-value",kt=Mt+"-icon",Ft=Mt+"-textinput",Bt=Mt+"-list",Nt=Mt+"-tags",Ut=Mt+"-tags-empty",zt=Mt+"-tag",Vt=Mt+"-tag-not-everywhere",Ht=Mt+"-shadow",Gt=Mt+"-fit-height",Wt="pcui-selected",jt=Mt+"-label-highlighted",Xt=Mt+"-create-new",Yt="pcui-open";class qt extends Q{constructor(e={}){var t,n,i,a;const s=new ae({dom:e.dom});super(Object.assign(Object.assign({},e),{dom:s.dom})),this._timeoutLabelValueTabIndex=null,this._valueToText={},this._valueToLabel={},this._labelToValue=new Map,this._labelHighlighted=null,this._disabledOptions={},this._prefix="",this._onInputChange=e=>{this._suspendInputChange||this._lastInputValue!==e&&(this.open(),this._lastInputValue=e,this._filterOptions(e))},this._onInputKeyDown=e=>{if("Enter"===e.key&&this.enabled&&!this.readOnly){let t;if(e.stopPropagation(),e.preventDefault(),t=this._labelHighlighted&&this._labelToValue.has(this._labelHighlighted)?this._labelToValue.get(this._labelHighlighted):this._input.value,void 0!==t)return this.focus(),this.close(),void(this._valueToText[t]?this._onSelectValue(t):this._allowCreate&&(this._createFn?this._createFn(t):this._onSelectValue(t)))}this._onKeyDown(e)},this._onWindowMouseDown=e=>{this.dom.contains(e.target)||this.close()},this._onKeyDown=e=>{if("Escape"!==e.key)if("Tab"!==e.key){if(this.enabled&&!this.readOnly)if("Enter"!==e.key||this._allowInput){if("ArrowUp"===e.key||"ArrowDown"===e.key)if(e.stopPropagation(),e.preventDefault(),(this._allowInput||this.multiSelect)&&this._containerOptions.hidden)this.open();else if(this._containerOptions.hidden){if(!this._options.length)return;let t=-1;for(let e=0;e<this._options.length;e++)if(this._options[e].v===this.value){t=e;break}"ArrowUp"===e.key?t--:"ArrowDown"===e.key&&t++,t>=0&&t<this._options.length&&this._onSelectValue(this._options[t].v)}else{if(!this._containerOptions.dom.childNodes.length)return;if(this._labelHighlighted){let t=this._labelHighlighted.dom;do{"ArrowUp"===e.key?t=t.previousSibling:"ArrowDown"===e.key&&(t=t.nextSibling)}while(t&&t.ui.hidden);t&&this._highlightLabel(t.ui)}else this._highlightLabel(this._containerOptions.dom.childNodes[0].ui)}}else this._labelHighlighted&&this._labelToValue.has(this._labelHighlighted)&&(this._onSelectValue(this._labelToValue.get(this._labelHighlighted)),this.close())}else this.close();else this.close()},this._onMouseDown=()=>{this._allowInput||this.focus()},this._onFocus=()=>{this.class.add(V),this.emit("focus"),this._input.hidden||this.open()},this._onBlur=()=>{this.class.remove(V),this.emit("blur")},this._onWheel=e=>{e.stopPropagation()},this._container=s,this._container.parent=this,this.class.add(Mt),this._containerValue=new ae({class:Pt}),this._container.append(this._containerValue),this._domShadow=document.createElement("div"),this._domShadow.classList.add(Ht),this._containerValue.append(this._domShadow),this._allowInput=e.allowInput,this._allowInput&&this.class.add("pcui-select-input-allow-input"),this._allowCreate=e.allowCreate,this._createFn=e.createFn,this._createLabelText=e.createLabelText,this._labelValue=new re({class:Dt,tabIndex:0}),this._labelValue.on("click",(()=>{this.enabled&&!this.readOnly&&this.toggle()})),this._containerValue.append(this._labelValue),this._labelIcon=new re({class:kt,hidden:e.allowInput&&e.multiSelect}),this._containerValue.append(this._labelIcon),this._input=new pt({class:Ft,blurOnEnter:!1,keyChange:!0}),this._containerValue.append(this._input),this._lastInputValue="",this._suspendInputChange=!1,this._input.on("change",this._onInputChange),this._input.on("keydown",this._onInputKeyDown),this._input.on("focus",this._onFocus),this._input.on("blur",this._onBlur),e.placeholder&&(this.placeholder=e.placeholder),this._containerOptions=new ae({class:Bt,hidden:!0}),this._containerValue.append(this._containerOptions),this._containerTags=new ae({class:Nt,flex:!0,flexDirection:"row",hidden:!0}),this._container.append(this._containerTags),e.multiSelect&&(this.class.add(Ot),this._containerTags.hidden=!1),this._labelValue.dom.addEventListener("keydown",this._onKeyDown),this._labelValue.dom.addEventListener("focus",this._onFocus),this._labelValue.dom.addEventListener("blur",this._onBlur),this._labelValue.dom.addEventListener("mousedown",this._onMouseDown),this._containerOptions.dom.addEventListener("wheel",this._onWheel,{passive:!0}),this.on("hide",(()=>{this.close()})),this._type=null!==(t=e.type)&&void 0!==t?t:"string",this.invalidOptions=null!==(n=e.invalidOptions)&&void 0!==n?n:[],this.options=null!==(i=e.options)&&void 0!==i?i:[],this._optionsFn=e.optionsFn,this._allowNull=e.allowNull,this._values=null,void 0!==e.value?this.value=e.value:e.defaultValue?this.value=e.defaultValue:this.value=null,this._renderChanges=e.renderChanges,this.on("change",(()=>{this._updateInputFieldsVisibility(),this.renderChanges&&!this.multiSelect&&this._labelValue.flash()})),this._updateInputFieldsVisibility(!1),this._onSelect=e.onSelect,this.fallbackOrder=e.fallbackOrder,this.disabledOptions=e.disabledOptions,this._prefix=null!==(a=e.prefix)&&void 0!==a?a:""}destroy(){this._destroyed||(this._labelValue.dom.removeEventListener("keydown",this._onKeyDown),this._labelValue.dom.removeEventListener("mousedown",this._onMouseDown),this._labelValue.dom.removeEventListener("focus",this._onFocus),this._labelValue.dom.removeEventListener("blur",this._onBlur),this._containerOptions.dom.removeEventListener("wheel",this._onWheel),window.removeEventListener("keydown",this._onKeyDown),window.removeEventListener("mousedown",this._onWindowMouseDown),this._timeoutLabelValueTabIndex&&(cancelAnimationFrame(this._timeoutLabelValueTabIndex),this._timeoutLabelValueTabIndex=null),super.destroy())}_initializeCreateLabel(){const e=new ae({class:Xt,flex:!0,flexDirection:"row"}),t=new re({text:this._input.value,tabIndex:-1});e.append(t);let n=this._input.on("change",(n=>{t.destroyed||(t.text=n,this.invalidOptions&&-1!==this.invalidOptions.indexOf(n)?e.hidden||(e.hidden=!0,this._resizeShadow()):e.hidden&&(e.hidden=!1,this._resizeShadow()))}));e.on("click",(e=>{e.stopPropagation();const n=t.text;this.focus(),this.close(),this._createFn?this._createFn(n):n&&this._onSelectValue(n)})),t.on("destroy",(()=>{n.unbind(),n=null}));const i=new re({text:this._createLabelText});return e.append(i),this._containerOptions.append(e),e}_convertSingleValue(e){if(null===e&&this._allowNull)return e;if("string"===this._type)e=e?e.toString():"";else if("number"===this._type)e=e?parseInt(e,10):0;else if("boolean"===this._type)return!!e;return e}_convertValue(e){return null===e&&this._allowNull?e:this.multiSelect?Array.isArray(e)?e.map((e=>this._convertSingleValue(e))):e:this._convertSingleValue(e)}_onSelectValue(e){if(e=this._convertSingleValue(e),this.multiSelect)if(this._values){let t=!1;this._values.forEach((n=>{n?-1===n.indexOf(e)&&(n.push(e),t=!0):(n=[e],t=!0)})),t&&(this._onMultipleValuesChange(this._values),this.emit("change",this.value),this._binding&&this._binding.addValues([e]))}else this._value&&Array.isArray(this._value)?-1===this._value.indexOf(e)&&(this._value.push(e),this._addTag(e),this.emit("change",this.value),this._binding&&this._binding.addValues([e])):this.value=[e];else this.value=e}_highlightLabel(e){if(this._labelHighlighted!==e&&(this._labelHighlighted&&this._labelHighlighted.class.remove(jt),this._labelHighlighted=e,this._labelHighlighted)){this._labelHighlighted.class.add(jt);const e=this._labelHighlighted.dom.offsetTop,t=this._containerOptions.dom.scrollTop;e<t?this._containerOptions.dom.scrollTop=e:e+this._labelHighlighted.height>this._containerOptions.height+t&&(this._containerOptions.dom.scrollTop=e+this._labelHighlighted.height-this._containerOptions.height)}}_onValueChange(e){if(this.multiSelect){if(this._labelValue.value="",this._containerTags.clear(),this._containerTags.class.add(Ut),e&&Array.isArray(e)){for(const t of e){this._addTag(t);const e=this._valueToLabel[t];e&&e.class.add(Wt)}for(const t in this._valueToLabel){const n=this._valueToLabel[t];-1!==e.indexOf(this._convertSingleValue(t))?n.class.add(Wt):n.class.remove(Wt)}}}else{this._labelValue.value=this._prefix+(this._valueToText[e]||""),e=""+e;for(const t in this._valueToLabel){const n=this._valueToLabel[t];t===e?n.class.add(Wt):n.class.remove(Wt)}}}_onMultipleValuesChange(e){this._labelValue.value="",this._containerTags.clear(),this._containerTags.class.add(Ut);const t={},n={};e.forEach((e=>{e&&e.forEach((e=>{t[e]?n[e]++:(t[e]=this._addTag(e),n[e]=1)}))}));for(const i in n)if(n[i]!==e.length){t[i].class.add(Vt);const e=this._valueToLabel[i];e&&e.class.remove(Wt)}}_addTag(e){const t=new ae({flex:!0,flexDirection:"row",class:zt});t.append(new re({text:this._valueToText[e]||e}));const n=new le({size:"small",icon:"E132",tabIndex:-1});t.append(n),n.on("click",(()=>this._removeTag(t,e))),this._containerTags.append(t),this._containerTags.class.remove(Ut);const i=this._valueToLabel[e];return i&&i.class.add(Wt),t.value=e,t}_removeTag(e,t){e.destroy();const n=this._valueToLabel[t];if(n&&n.class.remove(Wt),this._values)this._values.forEach((e=>{if(!e)return;const n=e.indexOf(t);-1!==n&&e.splice(n,1)}));else if(this._value&&Array.isArray(this._value)){const e=this._value.indexOf(t);-1!==e&&this._value.splice(e,1)}this.emit("change",this.value),this._binding&&this._binding.removeValues([t])}_filterOptions(e){const t=this._containerOptions.dom;for(;t.firstChild;)t.removeChild(t.lastChild);if(e){const n=this.options.map((e=>[e.t,e.v]));Lt(n,e).forEach((e=>{const n=this._valueToLabel[e];t.appendChild(n.dom)}))}else for(const e of this._options){const n=this._valueToLabel[e.v];t.appendChild(n.dom)}this._createLabelContainer&&t.appendChild(this._createLabelContainer.dom),t.firstChild&&this._highlightLabel(t.firstChild.ui),this._resizeShadow()}_resizeShadow(){this._domShadow.style.height=this._containerValue.height+this._containerOptions.height+"px"}_updateInputFieldsVisibility(e){let t=!1,n=!1;this._allowInput&&(e?(t=!0,n=!0):t=this.multiSelect||!this._valueToLabel[this.value]),this._labelValue.hidden=t,this._labelIcon.hidden=t,this._input.hidden=!t,n&&this._input.focus(),this._labelValue.hidden||(this._labelValue.tabIndex=-1,this._timeoutLabelValueTabIndex||(this._timeoutLabelValueTabIndex=requestAnimationFrame((()=>{this._timeoutLabelValueTabIndex=null,this._labelValue.tabIndex=0}))))}focus(){this._input.hidden?this._labelValue.dom.focus():this._input.focus()}blur(){this._allowInput?this._input.blur():this._labelValue.dom.blur()}open(){if(!this._containerOptions.hidden||!this.enabled||this.readOnly)return;if(this._updateInputFieldsVisibility(!0),this._optionsFn&&(this.options=this._optionsFn()),0===this._containerOptions.dom.childNodes.length)return;this._containerOptions.forEachChild((e=>{e.hidden=!1,this._labelToValue.get(e)===this.value&&this._highlightLabel(e)})),this._labelHighlighted||this._highlightLabel(this._containerOptions.dom.childNodes[0].ui),this._containerOptions.hidden=!1,this.class.add(Yt),window.addEventListener("keydown",this._onKeyDown),window.addEventListener("mousedown",this._onWindowMouseDown);const e=(this._allowInput?this._input.dom:this._labelValue.dom).getBoundingClientRect();let t=e.bottom+this._containerOptions.height+25>=window.innerHeight;t&&e.top-this._containerOptions.height<0&&(t=!1,this._containerOptions.style.maxHeight=window.innerHeight-e.bottom-25+"px"),t?this.class.add(Gt):this.class.remove(Gt),this._resizeShadow()}close(){this._containerOptions.style.maxHeight="",this._highlightLabel(null),this._updateInputFieldsVisibility(!1),this._suspendInputChange=!0,this._input.value="",this._lastInputValue&&(this._lastInputValue="",this._filterOptions(null)),this._suspendInputChange=!1,this._containerOptions.hidden||(this._containerOptions.hidden=!0,this._domShadow.style.height="",this.class.remove(Yt),window.removeEventListener("keydown",this._onKeyDown),window.removeEventListener("mousedown",this._onWindowMouseDown))}toggle(){this._containerOptions.hidden?this.open():this.close()}unlink(){super.unlink(),this._containerOptions.hidden||this.close()}_updateValue(e){e!==this._value&&(this._value=e,this._onValueChange(e),this._suppressChange||this.emit("change",e),this._binding&&this._binding.setValue(e))}_updateDisabledValue(e){const t={};this._containerOptions.forEachChild((e=>{t[e.dom.id]=e,this._disabledOptions[e.dom.id]?(e.enabled=!1,e.text=this._disabledOptions[e.dom.id]):(e.enabled=!0,e.text=this._valueToText[e.dom.id]),e.class.remove(It)}));const n=this._disabledOptions[e]?e:null;let i=null;if(n){if(this._fallbackOrder)for(let t=0;t<this._fallbackOrder.length;t++)if(this._fallbackOrder[t]!==e){i=this._fallbackOrder[t];break}this.disabledValue=n,t[n].class.add(It)}else this._disabledValue?(i=this._disabledValue,this.disabledValue=null):(i=e,this.disabledValue=null);return i}set options(e){if(!this._options||JSON.stringify(this._options)!==JSON.stringify(e)){this._containerOptions.clear(),this._labelHighlighted=null,this._valueToText={},this._valueToLabel={},this._options=e;for(const e of this._options){if(this._valueToText[e.v]=e.t,""===e.v)return;const t=new re({text:e.t,tabIndex:-1,id:e.v});this._labelToValue.set(t,e.v),this._valueToLabel[e.v]=t,t.on("click",(t=>{t.stopPropagation(),this._onSelectValue(e.v),this.close(),this._onSelect&&this._onSelect(this.value)})),this._containerOptions.append(t)}this._createLabelContainer=null,this._createLabelText&&(this._createLabelContainer=this._initializeCreateLabel()),this.multiSelect&&this._values?this._onMultipleValuesChange(this._values):this._onValueChange(this.value),this._lastInputValue&&this._filterOptions(this._lastInputValue)}}get options(){return this._options.slice()}set invalidOptions(e){this._invalidOptions=e||null}get invalidOptions(){return this._invalidOptions}set disabledValue(e){this._disabledValue=e,null!==this._disabledValue?this.class.add(Rt):this.class.remove(Rt)}set disabledOptions(e){if(JSON.stringify(this._disabledOptions)===JSON.stringify(e))return;this._disabledOptions=e||{};const t=this._updateDisabledValue(this._value);this._updateValue(t)}set fallbackOrder(e){this._fallbackOrder=e||null}get multiSelect(){return this.class.contains(Ot)}set value(e){this._values=null,this._suspendInputChange=!0,this._input.value="",this._lastInputValue&&(this._lastInputValue="",this._filterOptions(null)),this._suspendInputChange=!1,this.class.remove(H),e=this._convertValue(e),(!(this._value===e||this.multiSelect&&this._value&&this._value.equals(e))||null===e&&this._allowNull&&this.class.contains(H))&&(this.disabledValue=null,this._updateValue(e))}get value(){if(!this.multiSelect)return this._value;const e=[];return this._containerTags.dom.childNodes.forEach((t=>{e.push(t.ui.value)})),e}set values(e){e=e.map((e=>this._convertValue(e)));let t=!1;const n=e[0],i=this.multiSelect;this._values=null;for(let a=1;a<e.length;a++)if(!(e[a]===n||i&&e[a]&&e[a].equals(n))){t=!0;break}t?(this._labelValue.values=e,i?(this._values=e,this._value=null,this._onMultipleValuesChange(this._values),this.emit("change",this.value)):null!==this._value&&(this._value=null,this.emit("change",null)),this.class.add(H)):this.value=e[0]}set placeholder(e){this._input.placeholder=e}get placeholder(){return this._input.placeholder}set renderChanges(e){this._renderChanges=e}get renderChanges(){return this._renderChanges}}Q.register("select",qt,{renderChanges:!0}),Q.register("multiselect",qt,{multiSelect:!0,renderChanges:!0}),Q.register("tags",qt,{allowInput:!0,allowCreate:!0,multiSelect:!0,renderChanges:!0});var Kt=qt;const Zt={DEG_TO_RAD:Math.PI/180,RAD_TO_DEG:180/Math.PI,clamp:function(e,t,n){return e>=n?n:e<=t?t:e},intToBytes24:function(e){return[e>>16&255,e>>8&255,255&e]},intToBytes32:function(e){return[e>>24&255,e>>16&255,e>>8&255,255&e]},bytesToInt24:function(e,t,n){return e.length&&(n=e[2],t=e[1],e=e[0]),e<<16|t<<8|n},bytesToInt32:function(e,t,n,i){return e.length&&(i=e[3],n=e[2],t=e[1],e=e[0]),(e<<24|t<<16|n<<8|i)>>>0},lerp:function(e,t,n){return e+(t-e)*Zt.clamp(n,0,1)},lerpAngle:function(e,t,n){return t-e>180&&(t-=360),t-e<-180&&(t+=360),Zt.lerp(e,t,Zt.clamp(n,0,1))},powerOfTwo:function(e){return 0!==e&&!(e&e-1)},nextPowerOfTwo:function(e){return e--,e|=e>>1,e|=e>>2,e|=e>>4,e|=e>>8,e|=e>>16,++e},nearestPowerOfTwo:function(e){return Math.pow(2,Math.round(Math.log(e)/Math.log(2)))},random:function(e,t){const n=t-e;return Math.random()*n+e},smoothstep:function(e,t,n){return n<=e?0:n>=t?1:(n=(n-e)/(t-e))*n*(3-2*n)},smootherstep:function(e,t,n){return n<=e?0:n>=t?1:(n=(n-e)/(t-e))*n*n*(n*(6*n-15)+10)},roundUp:function(e,t){return 0===t?e:Math.ceil(e/t)*t},between:function(e,t,n,i){const a=Math.min(t,n),s=Math.max(t,n);return i?e>=a&&e<=s:e>a&&e<s}},Qt=function(){const e={},t=["Array","Object","Function","Date","RegExp","Float32Array"];for(let n=0;n<t.length;n++)e["[object "+t[n]+"]"]=t[n].toLowerCase();return e}();function Jt(e){if(null===e)return"null";const t=typeof e;return"undefined"===t||"number"===t||"string"===t||"boolean"===t?t:Qt[Object.prototype.toString.call(e)]}function $t(e,t){for(const n in t){const i=t[n];"object"===Jt(i)?e[n]=$t({},i):"array"===Jt(i)?e[n]=$t([],i):e[n]=i}return e}class en{constructor(e,t=0){this._curve=void 0,this._left=-1/0,this._right=1/0,this._recip=0,this._p0=0,this._p1=0,this._m0=0,this._m1=0,this._curve=e,this._reset(t)}evaluate(e,t=!1){let n;(t||e<this._left||e>=this._right)&&this._reset(e);const i=this._curve.type;if(5===i)n=this._p0;else{const t=0===this._recip?0:(e-this._left)*this._recip;n=0===i?Zt.lerp(this._p0,this._p1,t):1===i?Zt.lerp(this._p0,this._p1,t*t*(3-2*t)):this._evaluateHermite(this._p0,this._p1,this._m0,this._m1,t)}return n}_reset(e){const t=this._curve.keys,n=t.length;if(n)if(e<t[0][0])this._left=-1/0,this._right=t[0][0],this._recip=0,this._p0=this._p1=t[0][1],this._m0=this._m1=0;else if(e>=t[n-1][0])this._left=t[n-1][0],this._right=1/0,this._recip=0,this._p0=this._p1=t[n-1][1],this._m0=this._m1=0;else{let n=0;for(;e>=t[n+1][0];)n++;this._left=t[n][0],this._right=t[n+1][0];const i=1/(this._right-this._left);this._recip=isFinite(i)?i:0,this._p0=t[n][1],this._p1=t[n+1][1],this._isHermite()&&this._calcTangents(t,n)}else this._left=-1/0,this._right=1/0,this._recip=0,this._p0=this._p1=this._m0=this._m1=0}_isHermite(){return 2===this._curve.type||3===this._curve.type||4===this._curve.type}_calcTangents(e,t){let n;const i=e[t],a=e[t+1];let s;if(n=0===t?[e[0][0]+(e[0][0]-e[1][0]),e[0][1]+(e[0][1]-e[1][1])]:e[t-1],s=t===e.length-2?[e[t+1][0]+(e[t+1][0]-e[t][0]),e[t+1][1]+(e[t+1][1]-e[t][1])]:e[t+2],4===this._curve.type){const e=2*(a[0]-i[0])/(a[0]-n[0]),t=2*(a[0]-i[0])/(s[0]-i[0]);this._m0=this._curve.tension*(isFinite(e)?e:0)*(a[1]-n[1]),this._m1=this._curve.tension*(isFinite(t)?t:0)*(s[1]-i[1])}else{const e=(a[0]-i[0])/(i[0]-n[0]),t=(a[0]-i[0])/(s[0]-a[0]),r=i[1]+(n[1]-i[1])*(isFinite(e)?e:0),o=a[1]+(s[1]-a[1])*(isFinite(t)?t:0),l=2===this._curve.type?.5:this._curve.tension;this._m0=l*(a[1]-r),this._m1=l*(o-i[1])}}_evaluateHermite(e,t,n,i,a){const s=a*a,r=a+a,o=1-a,l=o*o;return e*((1+r)*l)+n*(a*l)+t*(s*(3-r))+i*(s*(a-1))}}class tn{constructor(e){if(this.keys=[],this.type=1,this.tension=.5,this._eval=new en(this),e)for(let t=0;t<e.length-1;t+=2)this.keys.push([e[t],e[t+1]]);this.sort()}get length(){return this.keys.length}add(e,t){const n=this.keys,i=n.length;let a=0;for(;a<i&&!(n[a][0]>e);a++);const s=[e,t];return this.keys.splice(a,0,s),s}get(e){return this.keys[e]}sort(){this.keys.sort((function(e,t){return e[0]-t[0]}))}value(e){return this._eval.evaluate(e,!0)}closest(e){const t=this.keys,n=t.length;let i=2,a=null;for(let s=0;s<n;s++){const n=Math.abs(e-t[s][0]);if(!(i>=n))break;i=n,a=t[s]}return a}clone(){const e=new this.constructor;return e.keys=$t(e.keys,this.keys),e.type=this.type,e.tension=this.tension,e}quantize(e){e=Math.max(e,2);const t=new Float32Array(e),n=1/(e-1);t[0]=this._eval.evaluate(0,!0);for(let i=1;i<e;i++)t[i]=this._eval.evaluate(n*i);return t}quantizeClamped(e,t,n){const i=this.quantize(e);for(let e=0;e<i.length;++e)i[e]=Math.min(n,Math.max(t,i[e]));return i}}class nn{constructor(){if(this.curves=[],this._type=1,arguments.length>1)for(let e=0;e<arguments.length;e++)this.curves.push(new tn(arguments[e]));else if(0===arguments.length)this.curves.push(new tn);else{const e=arguments[0];if("number"==typeof e)for(let t=0;t<e;t++)this.curves.push(new tn);else for(let t=0;t<e.length;t++)this.curves.push(new tn(e[t]))}}get length(){return this.curves.length}set type(e){this._type=e;for(let t=0;t<this.curves.length;t++)this.curves[t].type=e}get type(){return this._type}get(e){return this.curves[e]}value(e,t=[]){const n=this.curves.length;t.length=n;for(let i=0;i<n;i++)t[i]=this.curves[i].value(e);return t}clone(){const e=new this.constructor;e.curves=[];for(let t=0;t<this.curves.length;t++)e.curves.push(this.curves[t].clone());return e._type=this._type,e}quantize(e){e=Math.max(e,2);const t=this.curves.length,n=new Float32Array(e*t),i=1/(e-1);for(let a=0;a<t;a++){const s=new en(this.curves[a]);for(let r=0;r<e;r++)n[r*t+a]=s.evaluate(i*r)}return n}quantizeClamped(e,t,n){const i=this.quantize(e);for(let e=0;e<i.length;++e)i[e]=Math.min(n,Math.max(t,i[e]));return i}}const an="pcui-multiple-values",sn=/keys/,rn=/type/;class on extends Q{constructor(e={}){var t;super(e),this._onKeyDown=e=>{"Escape"===e.key&&this.blur(),"Enter"!==e.key||!this.enabled||this.readOnly||this.class.contains(an)||(e.stopPropagation(),e.preventDefault(),this._openGradientPicker())},this._onFocus=e=>{this.emit("focus")},this._onBlur=e=>{this.emit("blur")},this._onAnchorsMouseDown=e=>{if(-1===this.STATE.hoveredAnchor){const t=this.calcNormalizedCoord(e.clientX,e.clientY,this.getClientRect(this.UI.anchors.dom));this.insertAnchor(t[0],this.evaluateGradient(t[0])),this.STATE.anchors=this.calcAnchorTimes(),this.selectAnchor(this.STATE.anchors.indexOf(t[0]))}else this.STATE.hoveredAnchor!==this.STATE.selectedAnchor&&this.selectAnchor(this.STATE.hoveredAnchor);this.UI.anchors.dom.style.cursor="grabbing",this.UI.anchorAddCrossHair.style.visibility="hidden",this.dragStart(),this.UI.draggingAnchor=!0},this._onAnchorsMouseMove=e=>{const t=this.calcNormalizedCoord(e.clientX,e.clientY,this.getClientRect(this.UI.anchors.dom));if(this.UI.draggingAnchor)this.dragUpdate(Zt.clamp(t[0],0,1)),this.UI.anchorAddCrossHair.style.visibility="hidden";else if(t[0]>=0&&t[0]<=1&&t[1]>=0&&t[1]<=1){let e=-1,n=0;for(let i=0;i<this.STATE.anchors.length;++i){const a=Math.abs(this.STATE.anchors[i]-t[0]);(-1===e||a<n)&&(e=i,n=a)}const i=-1!==e&&n<.02?e:-1;i!==this.STATE.hoveredAnchor&&(this.selectHovered(i),this.render()),-1===i?(this.UI.anchorAddCrossHair.style.visibility="visible",this.UI.anchors.dom.style.cursor="none"):this.UI.anchorAddCrossHair.style.visibility="hidden",this.UI.showCrosshairPosition.innerText=Math.round(100*t[0]).toString(),this.UI.anchorAddCrossHair.style.left=(2.5+320*t[0]).toString()+"px"}else-1!==this.STATE.hoveredAnchor?(this.UI.anchorAddCrossHair.style.visibility="hidden",this.selectHovered(-1),this.render()):this.UI.anchorAddCrossHair.style.visibility="hidden"},this._onAnchorsMouseUp=e=>{this.UI.draggingAnchor&&(this.dragEnd(),this.UI.draggingAnchor=!1),this.UI.anchors.dom.style.cursor="pointer"},this.class.add("pcui-gradient"),this._canvas=new qe({useDevicePixelRatio:!0}),this.dom.appendChild(this._canvas.dom),this._canvas.parent=this,this._canvas.on("resize",(()=>{this._renderGradient()}));const n=this._canvas.dom;function i(e,t){return function(n){t.apply(e,[n])}}function a(e){const t=new Ee({precision:1,step:1,min:0,max:255});return t.renderChanges=!1,t.placeholder=e,t.on("change",this.fieldChangeHandler),this._fields.appendChild(t.dom),t}this._checkerboardPattern=this._createCheckerboardPattern(n.getContext("2d")),this._resizeInterval=window.setInterval((()=>{this._canvas.resize(this.width,this.height)}),50),this.dom.addEventListener("keydown",this._onKeyDown),this.dom.addEventListener("focus",this._onFocus),this.dom.addEventListener("blur",this._onBlur),this.on("click",(()=>{!this.enabled||this.readOnly||this.class.contains(an)||this._openGradientPicker()})),this.renderChanges=null===(t=e.renderChanges)||void 0===t||t,this.on("change",(()=>{this.renderChanges&&this.flash()})),this.Helpers={rgbaStr:function(e,t){t||(t=1);let n=e.map((function(e,n){return n<3?Math.round(e*t):e})).join(",");for(let i=e.length;i<4;++i)n+=","+(i<3?t:1);return"rgba("+n+")"},hexStr:function(e){return e.map((function(e){return("00"+e.toString(16)).slice(-2).toUpperCase()})).join("")},toHsva:function(e){const t=dt(e.map((function(e){return 255*e})));return t.push(e.length>3?e[3]:1),t},toRgba:function(e){const t=ut(e).map((function(e){return e/255}));return t.push(e.length>3?e[3]:1),t},normalizedCoord:function(e,t,n){const i=e.dom.getBoundingClientRect();return[(t-i.left)/i.width,(n-i.top)/i.height]}},this._panel=new ve,this._panel.class.add("color-panel"),this.dom.appendChild(this._panel.dom),this._colorRect=new qe({useDevicePixelRatio:!0}),this._colorRect.class.add("color-rect"),this._panel.append(this._colorRect.dom),this._colorRect.resize(140,140),this._colorHandle=document.createElement("div"),this._colorHandle.classList.add("color-handle"),this._panel.append(this._colorHandle),this._hueRect=new qe({useDevicePixelRatio:!0}),this._hueRect.class.add("hue-rect"),this._panel.append(this._hueRect.dom),this._hueRect.resize(20,140),this._hueHandle=document.createElement("div"),this._hueHandle.classList.add("hue-handle"),this._panel.append(this._hueHandle),this._alphaRect=new qe({useDevicePixelRatio:!0}),this._alphaRect.class.add("alpha-rect"),this._panel.append(this._alphaRect.dom),this._alphaRect.resize(20,140),this._alphaHandle=document.createElement("div"),this._alphaHandle.classList.add("alpha-handle"),this._panel.append(this._alphaHandle),this._fields=document.createElement("div"),this._fields.classList.add("fields"),this._panel.append(this._fields),this.fieldChangeHandler=i(this,this._onFieldChanged),this.hexChangeHandler=i(this,this._onHexChanged),this.downHandler=i(this,this._onMouseDown),this.moveHandler=i(this,this._onMouseMove),this.upHandler=i(this,this._onMouseUp),this._rField=a.call(this,"r"),this._gField=a.call(this,"g"),this._bField=a.call(this,"b"),this._aField=a.call(this,"a"),this._hexField=new pt,this._hexField.renderChanges=!1,this._hexField.placeholder="#",this._hexField.on("change",this.hexChangeHandler),this._fields.appendChild(this._hexField.dom),this._colorRect.dom.addEventListener("mousedown",this.downHandler),this._hueRect.dom.addEventListener("mousedown",this.downHandler),this._alphaRect.dom.addEventListener("mousedown",this.downHandler),this._generateHue(this._hueRect),this._generateAlpha(this._alphaRect),this._hsva=[-1,-1,-1,1],this._storeHsva=[0,0,0,1],this._dragMode=0,this._changing=!1,this.CONSTANTS={bg:"#2c393c",anchorRadius:5,selectedRadius:7},this.UI={root:this.dom,overlay:new ct,panel:document.createElement("div"),gradient:new qe({useDevicePixelRatio:!0}),checkerPattern:this.createCheckerPattern(),anchors:new qe({useDevicePixelRatio:!0}),footer:new ve,typeLabel:new re({text:"Type"}),typeCombo:new Kt({options:[{t:"0",v:"placeholder"}],type:"number"}),positionLabel:new re({text:"Position"}),positionEdit:new Ee({min:0,max:100,step:1}),copyButton:new le,pasteButton:new le,deleteButton:new le,showSelectedPosition:new Ee({min:0,max:100,step:1,hideSlider:!0}),showCrosshairPosition:document.createElement("div"),anchorAddCrossHair:document.createElement("div"),colorPicker:null},this.STATE={curves:[],keystore:[],anchors:[],hoveredAnchor:-1,selectedAnchor:-1,selectedValue:[],changing:!1,draggingAnchor:!1,typeMap:{}},this.UI.root.appendChild(this.UI.overlay.dom),this.UI.overlay.class.add("picker-gradient"),this.UI.overlay.center=!1,this.UI.overlay.transparent=!0,this.UI.overlay.hidden=!0,this.UI.overlay.clickable=!0,this.UI.overlay.dom.style.position="fixed",this.UI.overlay.on("show",(()=>{this.onOpen()})),this.UI.overlay.on("hide",(()=>{this.onClose()})),this.UI.panel.classList.add("picker-gradient-panel"),this.UI.overlay.append(this.UI.panel),this.UI.panel.appendChild(this.UI.gradient.dom),this.UI.gradient.class.add("picker-gradient-gradient"),this.UI.gradient.resize(320,28),this.UI.panel.appendChild(this.UI.anchors.dom),this.UI.anchors.class.add("picker-gradient-anchors"),this.UI.anchors.resize(320,28),this.UI.panel.appendChild(this.UI.footer.dom),this.UI.footer.append(this.UI.typeLabel),this.UI.footer.class.add("picker-gradient-footer"),this.UI.footer.append(this.UI.typeCombo),this.UI.typeCombo.value=-1,this.UI.typeCombo.on("change",(e=>{this._onTypeChanged(e)})),this.UI.positionEdit.style.width="40px",this.UI.positionEdit.renderChanges=!1,this.UI.showSelectedPosition.on("change",(e=>{this.STATE.changing||this.moveSelectedAnchor(e/100)})),this.UI.copyButton.on("click",(()=>{this.doCopy()})),this.UI.copyButton.class.add("copy-curve-button"),this.UI.footer.append(this.UI.copyButton),this.UI.pasteButton.on("click",(()=>{this.doPaste()})),this.UI.pasteButton.class.add("paste-curve-button"),this.UI.footer.append(this.UI.pasteButton),this.UI.deleteButton.on("click",(()=>{this.doDelete()})),this.UI.deleteButton.class.add("delete-curve-button"),this.UI.footer.append(this.UI.deleteButton),this.UI.panel.appendChild(this._panel.dom),this.UI.panel.append(this.UI.showSelectedPosition.dom),this.UI.showSelectedPosition.class.add("show-selected-position"),this.UI.showSelectedPosition._domInput.classList.add("show-selected-position-input");const s=document.createElementNS("http://www.w3.org/2000/svg","path");s.setAttribute("fill-rule","evenodd"),s.setAttribute("clip-rule","evenodd"),s.setAttribute("d","M8.5 17C7.35596 17 6.26043 16.7741 5.2134 16.3222C4.16637 15.8703 3.26152 15.2629 2.49882 14.4997C1.73612 13.7366 1.12899 12.8312 0.677391 11.7835C0.225795 10.7359 0 9.6397 0 8.49498C0 7.35026 0.225795 6.25409 0.677391 5.20644C1.12899 4.15879 1.73612 3.25507 2.49882 2.49527C3.26152 1.73548 4.16637 1.12965 5.2134 0.677791C6.26043 0.225928 7.35596 0 8.5 0C9.64404 0 10.7396 0.225928 11.7866 0.677791C12.8336 1.12965 13.7385 1.73548 14.5012 2.49527C15.2639 3.25507 15.871 4.15879 16.3226 5.20644C16.7742 6.25409 17 7.35026 17 8.49498C17 9.6397 16.7742 10.7359 16.3226 11.7835C15.871 12.8312 15.2639 13.7366 14.5012 14.4997C13.7385 15.2629 12.8336 15.8703 11.7866 16.3222C10.7396 16.7741 9.64404 17 8.5 17ZM8.5 2.2593C7.64364 2.2593 6.82576 2.42498 6.04634 2.75635C5.26692 3.08772 4.59622 3.53288 4.03424 4.09185C3.47225 4.65082 3.02568 5.31354 2.69451 6.08004C2.36334 6.84653 2.19776 7.6515 2.19776 8.49498C2.19776 9.6397 2.47875 10.6957 3.04073 11.663C3.60272 12.6303 4.36707 13.3952 5.33383 13.9575C6.30058 14.5198 7.35596 14.8009 8.5 14.8009C9.34298 14.8009 10.1475 14.6353 10.9135 14.3039C11.6796 13.9725 12.3419 13.5257 12.9005 12.9634C13.4592 12.4011 13.9041 11.73 14.2352 10.9501C14.5664 10.1702 14.732 9.35184 14.732 8.49498C14.732 7.6515 14.5664 6.84653 14.2352 6.08004C13.9041 5.31354 13.4592 4.65082 12.9005 4.09185C12.3419 3.53288 11.6796 3.08772 10.9135 2.75635C10.1475 2.42498 9.34298 2.2593 8.5 2.2593ZM9.52361 9.73007V12.9533H7.40614V9.73007H4.11452V7.61134H7.40614V4.31778H9.52361V7.61134H12.745V9.73007H9.52361Z"),s.setAttribute("fill","#FF6600");const r=document.createElementNS("http://www.w3.org/2000/svg","svg"),o=document.createElement("div");r.appendChild(s),r.setAttribute("width","17"),r.setAttribute("height","17"),r.setAttribute("viewBox","0 0 17 17"),this.UI.showCrosshairPosition.classList.add("show-crosshair-position"),o.classList.add("crosshair-bar"),this.UI.anchorAddCrossHair.appendChild(r),this.UI.anchorAddCrossHair.appendChild(o),this.UI.anchorAddCrossHair.appendChild(this.UI.showCrosshairPosition),this.UI.anchorAddCrossHair.classList.add("anchor-crosshair"),this.UI.anchorAddCrossHair.style.visibility="hidden",this.UI.panel.append(this.UI.anchorAddCrossHair),this.on("changing",(function(e){this.colorSelectedAnchor(e,!0)})),this._copiedData=null,this._channels=e.channels||3,this._value=this._getDefaultValue(),e.value&&(this.value=e.value)}destroy(){this._destroyed||(this.dom.removeEventListener("keydown",this._onKeyDown),this.dom.removeEventListener("focus",this._onFocus),this.dom.removeEventListener("blur",this._onBlur),window.clearInterval(this._resizeInterval),super.destroy())}_createCheckerboardPattern(e){const t=document.createElement("canvas"),n=12;t.width=24,t.height=24;const i=t.getContext("2d");return i.fillStyle="#",i.fillStyle="#949a9c",i.fillRect(0,0,n,n),i.fillRect(n,n,n,n),i.fillStyle="#657375",i.fillRect(n,0,n,n),i.fillRect(0,n,n,n),e.createPattern(t,"repeat")}_getDefaultValue(){return{type:4,keys:new Array(this._channels).fill([0,0]),betweenCurves:!1}}_openGradientPicker(){this.callOpenGradientPicker([this.value||this._getDefaultValue()]);const e=this.getGradientPickerRect(),t=this.dom.getBoundingClientRect();this.positionGradientPicker(t.right-e.width,t.bottom),this._evtPickerChanged=this.on("picker:curve:change",this._onPickerChange.bind(this)),this._evtRefreshPicker=this.on("change",(()=>this.setGradientPicker([this.value])))}_onPickerChange(e,t){const n=this.value||this._getDefaultValue();sn.test(e[0])?this.value={type:n.type,keys:t,betweenCurves:!1}:rn.test(e[0])&&(this.value={type:t[0],keys:n.keys,betweenCurves:!1})}_renderGradient(){const e=this._canvas.dom.getContext("2d"),t=this._canvas.width,n=this._canvas.height,i=this._canvas.pixelRatio;if(e.setTransform(i,0,0,i,0,0),e.fillStyle=this._checkerboardPattern,e.fillRect(0,0,t,n),!this.value||!this.value.keys||!this.value.keys.length)return;const a=[],s=1===this.channels?new nn([this.value.keys]):new nn(this.value.keys);s.type=this.value.type;const r=e.createLinearGradient(0,0,t,0);for(let e=2;e<t;e+=2){s.value(e/t,a);const n=Math.round(255*(a[0]||0)),i=Math.round(255*(a[1]||0)),o=Math.round(255*(a[2]||0)),l=4===this.channels?a[3]||0:1;r.addColorStop(e/t,`rgba(${n}, ${i}, ${o}, ${l})`)}e.fillStyle=r,e.fillRect(0,0,t,n)}focus(){this.dom.focus()}blur(){this.dom.blur()}set channels(e){this._channels!==e&&(this._channels=Math.max(1,Math.min(e,4)),this.value&&this._renderGradient())}get channels(){return this._channels}set value(e){this._value=e,this.class.remove(an),this._renderGradient(),this.emit("change",e),this.setValue([e])}get value(){return this._value}set values(e){this.class.add(an),this._renderGradient()}_generateHue(e){const t=e.dom.getContext("2d"),n=e.pixelWidth,i=e.pixelHeight,a=t.createLinearGradient(0,0,0,i);for(let e=0;e<=6;e+=1)a.addColorStop(e/6,this.Helpers.rgbaStr(ut([e/6,1,1])));t.fillStyle=a,t.fillRect(0,0,n,i)}_generateAlpha(e){const t=e.dom.getContext("2d"),n=e.pixelWidth,i=e.pixelHeight,a=t.createLinearGradient(0,0,0,i);a.addColorStop(0,"rgb(255, 255, 255)"),a.addColorStop(1,"rgb(0, 0, 0)"),t.fillStyle=a,t.fillRect(0,0,n,i)}_generateGradient(e,t){const n=e.dom.getContext("2d"),i=e.pixelWidth,a=e.pixelHeight;let s=n.createLinearGradient(0,0,i,0);s.addColorStop(0,this.Helpers.rgbaStr([255,255,255,255])),s.addColorStop(1,this.Helpers.rgbaStr([t[0],t[1],t[2],255])),n.fillStyle=s,n.fillRect(0,0,i,a),s=n.createLinearGradient(0,0,0,a),s.addColorStop(0,"rgba(0, 0, 0, 0)"),s.addColorStop(1,"rgba(0, 0, 0, 255)"),n.fillStyle=s,n.fillRect(0,0,i,a)}_onFieldChanged(){if(!this._changing){const e=[this._rField.value,this._gField.value,this._bField.value,this._aField.value].map((function(e){return e/255}));this.hsva=this.Helpers.toHsva(e),this.colorSelectedAnchor(this.color)}}_onHexChanged(){if(!this._changing){const e=this._hexField.value.trim().toLowerCase();if(/^([0-9a-f]{2}){3,4}$/.test(e)){const t=[parseInt(e.substring(0,2),16),parseInt(e.substring(2,4),16),parseInt(e.substring(4,6),16)];this.hsva=dt(t).concat([this.hsva[3]]),this.colorSelectedAnchor(this.color)}}}_onMouseDown(e){e.currentTarget===this._colorRect.dom?this._dragMode=1:e.currentTarget===this._hueRect.dom?this._dragMode=2:this._dragMode=3,this._storeHsva=this._hsva.slice(),this._onMouseMove(e),window.addEventListener("mousemove",this.moveHandler),window.addEventListener("mouseup",this.upHandler)}_onMouseMove(e){let t;if(1===this._dragMode){const n=this.Helpers.normalizedCoord(this._colorRect,e.pageX,e.pageY),i=Zt.clamp(n[0],0,1),a=Zt.clamp(n[1],0,1);t=[this.hsva[0],i,1-a,this._hsva[3]]}else if(2===this._dragMode){const n=this.Helpers.normalizedCoord(this._hueRect,e.pageX,e.pageY);t=[Zt.clamp(n[1],0,1),this.hsva[1],this.hsva[2],this.hsva[3]]}else{const n=this.Helpers.normalizedCoord(this._alphaRect,e.pageX,e.pageY),i=Zt.clamp(n[1],0,1);t=[this.hsva[0],this.hsva[1],this.hsva[2],1-i]}t[0]===this._hsva[0]&&t[1]===this._hsva[1]&&t[2]===this._hsva[2]&&t[3]===this._hsva[3]||(this.hsva=t,this.emit("changing",this.color))}_onMouseUp(e){window.removeEventListener("mousemove",this.moveHandler),window.removeEventListener("mouseup",this.upHandler),this._storeHsva[0]===this._hsva[0]&&this._storeHsva[1]===this._hsva[1]&&this._storeHsva[2]===this._hsva[2]&&this._storeHsva[3]===this._hsva[3]||this.colorSelectedAnchor(this.color)}set hsva(e){const t=ut(e),n=ut([e[0],1,1]);e[0]!==this._hsva[0]&&this._generateGradient(this._colorRect,n);const i=this._colorRect.dom,a=i.getBoundingClientRect(),s=a.width-2,r=a.height-2;this._colorHandle.style.backgroundColor=this.Helpers.rgbaStr(t),this._colorHandle.style.left=i.offsetLeft-7+Math.floor(s*e[1])+"px",this._colorHandle.style.top=i.offsetTop-7+Math.floor(r*(1-e[2]))+"px",this._hueHandle.style.backgroundColor=this.Helpers.rgbaStr(n),this._hueHandle.style.top=i.offsetTop-3+Math.floor(140*e[0])+"px",this._hueHandle.style.left="162px",this._alphaHandle.style.backgroundColor=this.Helpers.rgbaStr(ut([0,0,e[3]])),this._alphaHandle.style.top=i.offsetTop-3+Math.floor(140*(1-e[3]))+"px",this._alphaHandle.style.left="194px",this._changing=!0,this._rField.value=t[0],this._gField.value=t[1],this._bField.value=t[2],this._aField.value=Math.round(255*e[3]),this._hexField.value=this.Helpers.hexStr(t),this._changing=!1,this._hsva=e}get hsva(){return this._hsva}set color(e){const t=this.Helpers.toHsva(e);0===t[0]&&0===t[1]&&-1!==this._hsva[0]&&(t[0]=this._hsva[0]),this.hsva=t}get color(){return this.Helpers.toRgba(this._hsva)}set editAlpha(e){e?(this._alphaRect.dom.style.display="inline",this._alphaHandle.style.display="block",this._aField.dom.style.display="inline-block"):(this._alphaRect.dom.style.display="none",this._alphaHandle.style.display="none",this._aField.dom.style.display="none")}get editAlpha(){return this.editAlpha}open(){this.UI.overlay.hidden=!1}close(){this.UI.overlay.hidden=!0}onOpen(){window.addEventListener("mousemove",this._onAnchorsMouseMove),window.addEventListener("mouseup",this._onAnchorsMouseUp),this.UI.anchors.dom.addEventListener("mousedown",this._onAnchorsMouseDown)}onClose(){this.STATE.hoveredAnchor=-1,window.removeEventListener("mousemove",this._onAnchorsMouseMove),window.removeEventListener("mouseup",this._onAnchorsMouseUp),this.UI.anchors.dom.removeEventListener("mousedown",this._onAnchorsMouseDown),this._evtRefreshPicker.unbind(),this._evtRefreshPicker=null,this._evtPickerChanged.unbind(),this._evtPickerChanged=null}onDeleteKey(){if(!this.UI.overlay.hidden&&-1!==this.STATE.selectedAnchor){const e=this.STATE.anchors[this.STATE.selectedAnchor];this.STATE.selectedAnchor=-1,this.deleteAnchor(e)}}_onTypeChanged(e){e=this.STATE.typeMap[e];const t=[],n=[];for(let i=0;i<this.STATE.curves.length;++i)t.push(i.toString()+".type"),n.push(e);this.emit("picker:curve:change",t,n)}render(){this.renderGradient(),this.renderAnchors()}renderGradient(){const e=this.UI.gradient.dom.getContext("2d"),t=this.UI.gradient.width,n=this.UI.gradient.height,i=this.UI.gradient.pixelRatio;e.setTransform(i,0,0,i,0,0),e.fillStyle=this.UI.checkerPattern,e.fillRect(0,0,t,n);const a=e.createLinearGradient(0,0,t,0);for(let e=0;e<=t;e+=2){const n=e/t;a.addColorStop(n,this.Helpers.rgbaStr(this.evaluateGradient(n),255))}if(e.fillStyle=a,e.fillRect(0,0,t,n),-1!==this.STATE.selectedAnchor){const i=[this.STATE.anchors[this.STATE.selectedAnchor]*t,n],a=this.UI.draggingAnchor?-30:-6;e.beginPath(),e.rect(i[0]-.5,i[1],1,a),e.fillStyle="rgb(41, 53, 56)",e.fill()}}renderAnchors(){const e=this.UI.anchors.dom.getContext("2d"),t=this.UI.anchors.width,n=this.UI.anchors.height,i=this.UI.anchors.pixelRatio;e.setTransform(i,0,0,i,0,0),e.fillStyle=this.CONSTANTS.bg,e.fillRect(0,0,t,n);for(let t=0;t<this.STATE.anchors.length;++t)t!==this.STATE.hoveredAnchor&&t!==this.STATE.selectedAnchor&&this.renderAnchor(e,this.STATE.anchors[t]);-1!==this.STATE.hoveredAnchor&&this.STATE.hoveredAnchor!==this.STATE.selectedAnchor&&this.renderAnchor(e,this.STATE.anchors[this.STATE.hoveredAnchor],"hovered"),-1!==this.STATE.selectedAnchor&&this.renderAnchor(e,this.STATE.anchors[this.STATE.selectedAnchor],"selected")}renderAnchor(e,t,n){const i=[t*this.UI.anchors.width,this.UI.anchors.height/2],a="selected"===n?this.CONSTANTS.selectedRadius:this.CONSTANTS.anchorRadius;"selected"===n&&(e.beginPath(),e.rect(i[0]-.5,i[1],1,-i[1]),e.fillStyle="rgb(41, 53, 56)",e.fill()),"selected"!==n&&"hovered"!==n||(e.beginPath(),e.arc(i[0],i[1],a+2,0,2*Math.PI,!1),e.fillStyle="rgb(255, 255, 255)",e.fill()),e.beginPath(),e.arc(i[0],i[1],a+1,0,2*Math.PI,!1),e.fillStyle=this.Helpers.rgbaStr(this.evaluateGradient(t,1),255),e.fill()}evaluateGradient(e,t){const n=[];for(let t=0;t<3;++t)n.push(this.STATE.curves[t].value(e));return t?n.push(t):this.STATE.curves.length>3?n.push(this.STATE.curves[3].value(e)):n.push(1),n}calcAnchorTimes(){let e=[];for(let t=0;t<this.STATE.curves.length;t++){const n=this.STATE.curves[t];for(let t=0;t<n.keys.length;++t)e.push(n.keys[t][0])}return e.sort(),e=e.filter((function(e,t,n){return!t||e!==n[t-1]})),e}calcNormalizedCoord(e,t,n){return[(e-n.left)/n.width,(t-n.top)/n.height]}getClientRect(e){const t=window.getComputedStyle(e),n=parseFloat(t.paddingTop),i=parseFloat(t.paddingRight),a=parseFloat(t.paddingBottom),s=parseFloat(t.paddingLeft),r=e.getBoundingClientRect();return new DOMRect(r.x+s,r.y+n,r.width-i-s,r.height-n-a)}selectHovered(e){this.STATE.hoveredAnchor=e,this.UI.anchors.dom.style.cursor=-1===e?"":"pointer"}selectAnchor(e){if(this.STATE.selectedAnchor=e,this.STATE.changing=!0,-1===e)this.UI.positionEdit.value="",this.color=[0,0,0];else{const t=this.STATE.anchors[e];this.UI.positionEdit.value=Math.round(100*t),this.STATE.selectedValue=this.evaluateGradient(t),this.color=this.STATE.selectedValue,this.UI.showSelectedPosition.dom.style.left=(this.STATE.anchors[e]*this.UI.gradient.width-4).toString()+"px",this.UI.showSelectedPosition.value=Math.round(100*this.STATE.anchors[e])}this.STATE.changing=!1,this.render()}dragStart(){if(-1===this.STATE.selectedAnchor)return;const e=this.STATE.anchors[this.STATE.selectedAnchor];this.STATE.keystore=[];for(let t=0;t<this.STATE.curves.length;++t){const n=[];this.STATE.curves[t].keys.forEach((function(t){t[0]!==e&&n.push([t[0],t[1]])})),this.STATE.keystore.push(n)}}dragUpdate(e){if(-1!==this.STATE.selectedAnchor){for(let t=0;t<this.STATE.curves.length;++t){const n=this.STATE.curves[t],i=this.STATE.keystore[t];n.keys=i.map((function(e){return[e[0],e[1]]})).filter((function(t){return t[0]!==e})),n.keys.push([e,this.STATE.selectedValue[t]]),n.sort()}this.STATE.anchors=this.calcAnchorTimes(),this.selectAnchor(this.STATE.anchors.indexOf(e))}}dragEnd(){-1!==this.STATE.selectedAnchor&&this.emitCurveChange()}insertAnchor(e,t){for(let n=0;n<this.STATE.curves.length;++n){const i=this.STATE.curves[n].keys;let a=0;for(;a<i.length&&!(i[a][0]>=e);)++a;a<i.length&&i[a][0]===e?i[a][1]=t[n]:i.splice(a,0,[e,t[n]])}this.emitCurveChange()}deleteAnchor(e){for(let t=0;t<this.STATE.curves.length;++t){const n=this.STATE.curves[t];for(let t=0;t<n.keys.length;++t)if(n.keys[t][0]===e){n.keys.splice(t,1);break}}this.selectHovered(-1),this.emitCurveChange()}moveSelectedAnchor(e){-1!==this.STATE.selectedAnchor&&(this.dragStart(),this.dragUpdate(e),this.dragEnd())}colorSelectedAnchor(e,t){if(-1!==this.STATE.selectedAnchor){const n=this.STATE.anchors[this.STATE.selectedAnchor];for(let t=0;t<this.STATE.curves.length;++t){const i=this.STATE.curves[t];for(let a=0;a<i.keys.length;++a)if(i.keys[a][0]===n){i.keys[a][1]=e[t];break}}this.STATE.selectedValue=e,t?this.render():this.emitCurveChange()}}emitCurveChange(){const e=[],t=[];this.STATE.curves.forEach((function(n,i){e.push("0.keys."+i);const a=[];n.keys.forEach((function(e){a.push(e[0],e[1])})),t.push(a)})),this.emit("picker:curve:change",e,t)}doCopy(){const e={type:this.STATE.curves[0].type,keys:this.STATE.curves.map((function(e){return[].concat(...e.keys)}))};this._copiedData=e}doPaste(){const e=this._copiedData;if(null!==e){const t={type:e.type,keys:[]};for(let n=0;n<this.STATE.curves.length;++n)n<e.keys.length?t.keys.push(e.keys[n]):t.keys.push([].concat(...this.STATE.curves[n].keys));this.setValue([t]),this.emitCurveChange()}}doDelete(){const e=this.STATE.selectedAnchor;if(-1!==e&&1!==this.STATE.curves[0].keys.length){for(let t=0;t<this.STATE.curves.length;++t){this.STATE.curves[t].keys.splice(e,1)}this.emitCurveChange()}}createCheckerPattern(){const e=new qe;e.width=16,e.height=16;const t=e.dom,n=t.getContext("2d");return n.fillStyle="#949a9c",n.fillRect(0,0,8,8),n.fillRect(8,8,8,8),n.fillStyle="#657375",n.fillRect(8,0,8,8),n.fillRect(0,8,8,8),n.createPattern(t,"repeat")}setValue(e,t){if(!(e instanceof Array)||1!==e.length||void 0===e[0].keys||3!==e[0].keys.length&&4!==e[0].keys.length)return;this.STATE.typeMap={0:5,1:0,2:4};const n=Object.fromEntries(Object.entries(this.STATE.typeMap).map((([e,t])=>[t,e])));5!==e[0].type&&0!==e[0].type&&4!==e[0].type&&(this.STATE.typeMap[3]=e[0].type),this.UI.typeCombo.options=[{v:0,t:"Step"},{v:1,t:"Linear"},{v:2,t:"Spline"}],this.UI.typeCombo.value=-1===this.UI.typeCombo.value?n[this.value.type]:this.UI.typeCombo.value,this.STATE.curves=[],e[0].keys.forEach((t=>{const n=new tn(t);n.type=e[0].type,this.STATE.curves.push(n)})),this.STATE.anchors=this.calcAnchorTimes(),0===this.STATE.anchors.length?this.selectAnchor(-1):this.selectAnchor(Zt.clamp(this.STATE.selectedAnchor,0,this.STATE.anchors.length-1)),this.editAlpha=this.STATE.curves.length>3}callOpenGradientPicker(e,t){this.setValue(e,t),this.open()}getGradientPickerRect(){return this.UI.overlay.dom.getBoundingClientRect()}positionGradientPicker(e,t){t+this.UI.panel.clientHeight>window.innerHeight&&(t=window.innerHeight-this.UI.panel.clientHeight),this.UI.overlay.position(e,t)}setGradientPicker(e,t){this.setValue(e,t)}}Q.register("div",on);var ln=on;class cn extends ke{constructor(e){super(e),this.elementClass=ln}render(){return i.exports.createElement("div",{ref:this.attachElement})}}cn.ctor=ln;var hn=cn;const pn="pcui-radio-button",dn=pn+"-selected";class un extends Q{constructor(e={}){super(Object.assign({tabIndex:0},e)),this._onKeyDown=e=>{"Escape"!==e.key?this.enabled&&!this.readOnly&&" "===e.key&&(e.stopPropagation(),e.preventDefault(),this.value=!this.value):this.blur()},this._onFocus=e=>{this.emit("focus")},this._onBlur=e=>{this.emit("blur")},this.class.add(pn),this.class.add(j),this.dom.addEventListener("keydown",this._onKeyDown),this.dom.addEventListener("focus",this._onFocus),this.dom.addEventListener("blur",this._onBlur),this.value=e.value,this._renderChanges=e.renderChanges}destroy(){this._destroyed||(this.dom.removeEventListener("keydown",this._onKeyDown),this.dom.removeEventListener("focus",this._onFocus),this.dom.removeEventListener("blur",this._onBlur),super.destroy())}_onClick(e){return this.enabled&&this.focus(),this.enabled&&!this.readOnly&&(this.value=!this.value),super._onClick(e)}_updateValue(e){return this.class.remove(H),e!==this.value&&(this._value=e,e?this.class.add(dn):this.class.remove(dn),this.renderChanges&&this.flash(),this.emit("change",e),!0)}focus(){this.dom.focus()}blur(){this.dom.blur()}set value(e){this._updateValue(e)&&this._binding&&this._binding.setValue(e)}get value(){return this._value}set values(e){const t=e.some((t=>t!==e[0]));t?(this._updateValue(null),this.class.add(H)):this._updateValue(e[0])}set renderChanges(e){this._renderChanges=e}get renderChanges(){return this._renderChanges}}Q.register("radio",un,{renderChanges:!0});var mn=un;const fn="pcui-gridview-item",gn=fn+"-selected",vn=fn+"-text";class yn extends ae{constructor(e={}){var t,n,i;super(Object.assign({tabIndex:0},e)),this._onRadioButtonClick=()=>{this._radioButton.value=this.selected},this._onFocus=()=>{this.emit("focus")},this._onBlur=()=>{this.emit("blur")},this.allowSelect=null===(t=e.allowSelect)||void 0===t||t,this._type=null!==(n=e.type)&&void 0!==n?n:null,this._selected=!1,"radio"===e.type?(this.class.add("pcui-gridview-radio-container"),this._radioButton=new mn({class:"pcui-gridview-radiobtn",binding:new A}),this._radioButton.dom.removeEventListener("click",this._radioButton._onClick),this._radioButton.dom.addEventListener("click",this._onRadioButtonClick),this.append(this._radioButton)):this.class.add(fn),this._labelText=new re({class:vn,binding:new A,text:null!==(i=e.text)&&void 0!==i?i:""}),this.append(this._labelText),this.dom.addEventListener("focus",this._onFocus),this.dom.addEventListener("blur",this._onBlur)}destroy(){this._destroyed||(this.dom.removeEventListener("focus",this._onFocus),this.dom.removeEventListener("blur",this._onBlur),super.destroy())}focus(){this.dom.focus()}blur(){this.dom.blur()}link(e,t){this._labelText.link(e,t)}unlink(){this._labelText.unlink()}set allowSelect(e){this._allowSelect=e}get allowSelect(){return this._allowSelect}set selected(e){e&&this.focus(),this._selected!==e&&(this._selected=e,e?(this._radioButton?this._radioButton.value=e:this.class.add(gn),this.emit("select",this)):(this._radioButton?this._radioButton.value=!1:this.class.remove(gn),this.emit("deselect",this)))}get selected(){return this._selected}set text(e){this._labelText.text=e}get text(){return this._labelText.text}get nextSibling(){let e=this.dom.nextSibling;for(;e;){if(e.ui instanceof yn&&!e.ui.hidden)return e.ui;e=e.nextSibling}return null}get previousSibling(){let e=this.dom.previousSibling;for(;e;){if(e.ui instanceof yn&&!e.ui.hidden)return e.ui;e=e.previousSibling}return null}}var _n=yn;const wn="pcui-gridview",bn=wn+"-vertical";var xn=class extends ae{constructor(e={}){var t,n;super(e),this._filterAnimationFrame=null,this._filterCanceled=!1,this._selected=[],this._vertical=!!e.vertical,this.class.add(this._vertical?bn:wn),this.on("append",(e=>{this._onAppendGridViewItem(e)})),this.on("remove",(e=>{this._onRemoveGridViewItem(e)})),this._filterFn=e.filterFn,this._multiSelect=null===(t=e.multiSelect)||void 0===t||t,this._allowDeselect=null===(n=e.allowDeselect)||void 0===n||n}_onAppendGridViewItem(e){if(!(e instanceof _n))return;let t;t=this._clickFn?e.on("click",(t=>this._clickFn(t,e))):e.on("click",(t=>this._onClickItem(t,e)));let n,i=e.on("select",(()=>this._onSelectItem(e)));this._allowDeselect&&(n=e.on("deselect",(()=>this._onDeselectItem(e)))),this._filterFn&&!this._filterFn(e)&&(e.hidden=!0),e.once("griditem:remove",(()=>{t.unbind(),t=null,i.unbind(),i=null,this._allowDeselect&&(n.unbind(),n=null)}))}_onRemoveGridViewItem(e){e instanceof _n&&(e.selected=!1,e.emit("griditem:remove"),e.unbind("griditem:remove"))}_onClickItem(e,t){if((e.ctrlKey||e.metaKey)&&this._multiSelect)t.selected=!t.selected;else if(e.shiftKey&&this._multiSelect){const e=this._selected[this._selected.length-1];if(e){if(e.dom.compareDocumentPosition(t.dom)&Node.DOCUMENT_POSITION_FOLLOWING){let n=e.nextSibling;for(;n&&(n.selected=!0,n!==t);)n=n.nextSibling}else{let n=e.previousSibling;for(;n&&(n.selected=!0,n!==t);)n=n.previousSibling}}else t.selected=!0}else{let e=!1,n=this._selected.length;for(;n--;)this._selected[n]&&this._selected[n]!==t&&(this._selected[n].selected=!1,e=!0);t.selected=!!e||!t.selected}}_onSelectItem(e){this._selected.push(e),this.emit("select",e)}_onDeselectItem(e){const t=this._selected.indexOf(e);-1!==t&&(this._selected.splice(t,1),this.emit("deselect",e))}deselect(){let e=this._selected.length;for(;e--;)this._selected[e]&&(this._selected[e].selected=!1)}filter(){this.forEachChild((e=>{e instanceof _n&&(e.hidden=this._filterFn&&!this._filterFn(e))}))}filterAsync(e=100){let t=0;const n=this.dom.childNodes,i=n.length;this.emit("filter:start"),this._filterCanceled=!1;const a=()=>{this._filterAnimationFrame=null;let s=0;for(;t<i&&s<e;t++){if(this._filterCanceled)return this._filterCanceled=!1,void this.emit("filter:cancel");const e=n[t].ui;e instanceof _n&&(this._filterFn&&!this._filterFn(e)?e.hidden=!0:(e.hidden=!1,s++))}t<i?(this.emit("filter:delay"),this._filterAnimationFrame=requestAnimationFrame(a)):this.emit("filter:end")};a()}filterAsyncCancel(){this._filterAnimationFrame?(cancelAnimationFrame(this._filterAnimationFrame),this._filterAnimationFrame=null):this._filterCanceled=!0}destroy(){this._destroyed||(this._filterAnimationFrame&&(cancelAnimationFrame(this._filterAnimationFrame),this._filterAnimationFrame=null),super.destroy())}get selected(){return this._selected.slice()}get vertical(){return this._vertical}};class Cn extends ke{constructor(e){super(e),this.element=new xn(Object.assign({},e)),this.loadChildren(this.props.children,this.element)}loadChildren(e,t){e&&(Array.isArray(e)||(e=[e]),e.forEach((e=>{const n=new _n({text:e.props.text,open:!1});t.append(n),this.loadChildren(e.props.children,n)})))}render(){return i.exports.createElement("div",{ref:e=>{e&&e.appendChild(this.element.dom)}})}}Cn.ctor=xn;var Sn=Cn;class En extends ke{constructor(e){super(e),this.elementClass=_n}render(){return super.render()}}En.ctor=_n;var Tn=En;class An extends ae{constructor(e={}){var t,n,i,a;super(e),this._titleElement=new Q,this._textElement=new Q,this.class.add("pcui-infobox"),this.append(this._titleElement),this.append(this._textElement),this._unsafe=null!==(t=e.unsafe)&&void 0!==t&&t,this.icon=null!==(n=e.icon)&&void 0!==n?n:"",this.title=null!==(i=e.title)&&void 0!==i?i:"",this.text=null!==(a=e.text)&&void 0!==a?a:""}set icon(e){this._icon!==e&&(this._icon=e,e?this.dom.setAttribute("data-icon",String.fromCodePoint(parseInt(e,16))):this.dom.removeAttribute("data-icon"))}get icon(){return this._icon}set title(e){this._title!==e&&(this._title=e,this._unsafe?this._titleElement.dom.innerHTML=e:this._titleElement.dom.textContent=e)}get title(){return this._title}set text(e){this._text!==e&&(this._text=e,this._unsafe?this._textElement.dom.innerHTML=e:this._textElement.dom.textContent=e)}get text(){return this._text}}Q.register("infobox",An);var Ln=An;class Mn extends ke{constructor(e){super(e),this.elementClass=Ln}render(){return i.exports.createElement("span",{ref:this.attachElement})}}Mn.ctor=Ln;var Pn=Mn;class On extends ke{constructor(e={}){super(e),this.elementClass=re}render(){return i.exports.createElement("span",{ref:this.attachElement})}}On.ctor=re;var In=On;const Rn="pcui-label-group",Dn=Rn+"-align-top";class kn extends ae{constructor(e={}){var t,n;super(e),this.class.add(Rn),this._label=new re({text:null!==(t=e.text)&&void 0!==t?t:"Label",nativeTooltip:e.nativeTooltip}),this.append(this._label),this._field=null!==(n=e.field)&&void 0!==n?n:null,this._field&&this.append(this._field),this.labelAlignTop=e.labelAlignTop}get label(){return this._label}get field(){return this._field}set text(e){this._label.text=e}get text(){return this._label.text}set labelAlignTop(e){e?this.class.add(Dn):this.class.remove(Dn)}get labelAlignTop(){return this.class.contains(Dn)}}Q.register("labelgroup",kn);var Fn=kn;class Bn extends ke{constructor(e){super(e),this.attachElement=(e,t)=>{if(!e)return;const n="A LabelGroup must contain a single PCUI react component as a child";if(Array.isArray(this.props.children)||!this.props.children)throw new Error(n);const i=this.props.children,a=i.props;if(!(i.type.prototype instanceof ke))throw new Error(n);const s=new(0,i.type.ctor)(Object.assign({},a));i.props.link&&s.link(a.link.observer,a.link.path),this.element=new this.elementClass(Object.assign(Object.assign({},this.props),{dom:e,container:t,parent:void 0,field:s}))},this.elementClass=Fn}render(){return super.render()}}Bn.ctor=Fn;var Nn=Bn;const Un="pcui-menu-item",zn=Un+"-content",Vn=Un+"-children",Hn=Un+"-has-children";class Gn extends ae{constructor(e={}){super(e),this._numChildren=0,this._icon=null,this._menu=null,this._onClickMenuItem=e=>{e.preventDefault(),e.stopPropagation(),this.enabled&&(this._onSelect&&this._onSelect(e),this.emit("select"),this.menu&&(this.menu.hidden=!0))},this.class.add(Un),this._containerContent=new ae({class:zn,flex:!0,flexDirection:"row"}),this.append(this._containerContent),this._labelText=new re,this._containerContent.append(this._labelText),this._containerItems=new ae({class:Vn}),this.append(this._containerItems),this.domContent=this._containerItems.dom,this.text=e.text||"Untitled",this.dom.addEventListener("click",this._onClickMenuItem),e.value&&(this.value=e.value),e.icon&&(this.icon=e.icon),e.binding&&(this.binding=e.binding),this.onIsEnabled=e.onIsEnabled,this.onSelect=e.onSelect,this.onIsVisible=e.onIsVisible,e.items&&e.items.forEach((e=>{const t=new Gn(e);this.append(t)}))}destroy(){this.destroyed||(this.dom.removeEventListener("click",this._onClickMenuItem),super.destroy())}_onAppendChild(e){super._onAppendChild(e),this._numChildren++,e instanceof Gn&&(this.class.add(Hn),e.menu=this.menu)}_onRemoveChild(e){e instanceof Gn&&(this._numChildren--,0===this._numChildren&&this.class.remove(Hn),e.menu=null),super._onRemoveChild(e)}link(e,t){super.link(e,t),this._labelText.link(e,t)}unlink(){super.unlink(),this._labelText.unlink()}select(){this.enabled&&(this._onSelect&&this._onSelect(),this.emit("select"),this.menu&&(this.menu.hidden=!0))}set text(e){this._labelText.text=e}get text(){return this._labelText.text}set value(e){this.text=e}get value(){return this.text}set values(e){this._labelText.values=e}set icon(e){this._icon!==e&&e.match(/^E[0-9]{0,4}$/)&&(this._icon=e,e?this._labelText.dom.setAttribute("data-icon",String.fromCodePoint(parseInt(e,16))):this._labelText.dom.removeAttribute("data-icon"))}get icon(){return this._icon}set binding(e){this._labelText.binding=e}get binding(){return this._labelText.binding}set menu(e){if(this._menu=e,!this._containerItems.destroyed)for(const t of this._containerItems.dom.childNodes)t.ui instanceof Gn&&(t.ui.menu=e)}get menu(){return this._menu}set onSelect(e){this._onSelect=e}get onSelect(){return this._onSelect}set onIsEnabled(e){this._onIsEnabled=e}get onIsEnabled(){return this._onIsEnabled}set onIsVisible(e){this._onIsVisible=e}get onIsVisible(){return this._onIsVisible}get hasChildren(){return this._numChildren>0}set renderChanges(e){this._renderChanges=e}get renderChanges(){return this._renderChanges}}var Wn=Gn;const jn="pcui-menu",Xn=jn+"-items";var Yn=class extends ae{constructor(e={}){var t;super(Object.assign({tabIndex:1},e)),this._onClickMenu=e=>{this._containerMenuItems.dom.contains(e.target)||(this.hidden=!0)},this._onFocus=e=>{this.emit("focus")},this._onBlur=e=>{this.emit("blur")},this._onKeyDown=e=>{this.hidden||"Escape"===e.key&&(this.hidden=!0)},this.hidden=null===(t=e.hidden)||void 0===t||t,this.class.add(jn),this._containerMenuItems=new ae({class:Xn,flex:!0,flexDirection:"column"}),this.append(this._containerMenuItems),this.domContent=this._containerMenuItems.dom,this.on("click",this._onClickMenu),this.on("show",(()=>{this._onShowMenu()})),this.dom.addEventListener("contextmenu",this._onClickMenu),this.dom.addEventListener("keydown",this._onKeyDown),e.items&&e.items.forEach((e=>{const t=new Wn(e);this.append(t)}))}destroy(){this.destroyed||(this.dom.removeEventListener("keydown",this._onKeyDown),this.dom.removeEventListener("contextmenu",this._onClickMenu),this.dom.removeEventListener("focus",this._onFocus),this.dom.removeEventListener("blur",this._onBlur),super.destroy())}_onAppendChild(e){e instanceof Wn&&(e.menu=this)}_onRemoveChild(e){e instanceof Wn&&(e.menu=null)}_filterMenuItems(e){if(e instanceof Wn){e.onIsEnabled&&(e.enabled=e.onIsEnabled()),e.onIsVisible&&(e.hidden=!e.onIsVisible());for(const t of e._containerItems.dom.childNodes)this._filterMenuItems(t.ui)}}_onShowMenu(){this.focus();for(const e of this._containerMenuItems.dom.childNodes)this._filterMenuItems(e.ui)}_limitSubmenuAtScreenEdges(e){if(!(e instanceof Wn&&e.hasChildren))return;const t=e._containerItems;t.style.top="",t.style.left="",t.style.right="";const n=t.dom.getBoundingClientRect();n.bottom>window.innerHeight&&(t.style.top=-(n.bottom-window.innerHeight)+"px"),n.right>window.innerWidth&&(t.style.left="auto",t.style.right="100%");for(const e of t.dom.childNodes)this._limitSubmenuAtScreenEdges(e.ui)}focus(){this.dom.focus()}blur(){this.dom.blur()}position(e,t){const n=this._containerMenuItems.dom.getBoundingClientRect();let i=e||0,a=t||0;a+n.height>window.innerHeight?a=window.innerHeight-n.height:a<0&&(a=0),i+n.width>window.innerWidth?i=window.innerWidth-n.width:i<0&&(i=0),this._containerMenuItems.style.left=i+"px",this._containerMenuItems.style.top=a+"px";for(const e of this._containerMenuItems.dom.childNodes)this._limitSubmenuAtScreenEdges(e.ui)}clear(){this._containerMenuItems.clear()}};class qn extends ke{constructor(e){super(e),this.onDivLoaded=e=>{this.element=new Yn(Object.assign(Object.assign({},this.props),{dom:e}))},this.elementClass=Yn}render(){return i.exports.createElement("div",{ref:this.onDivLoaded})}}qn.ctor=Yn;var Kn=qn;class Zn extends ke{constructor(e){super(e),this.elementClass=Ee}render(){return super.render()}}Zn.ctor=Ee;var Qn=Zn;class Jn extends ke{constructor(e){super(e),this.elementClass=ct}render(){return super.render()}}Jn.ctor=ct;var $n=Jn;class ei extends ke{constructor(e={}){super(e),this.elementClass=ve}componentDidMount(){this.attachElement(this.nodeElement,this.containerElement)}render(){let e=i.exports.Children.toArray(this.props.children);return 1===e.length?e=i.exports.cloneElement(e[0],{parent:this.element}):e.length>0&&(e=e.map((e=>i.exports.cloneElement(e,{parent:this.element})))),i.exports.createElement("div",{ref:e=>{this.nodeElement=e}},i.exports.createElement("div",{ref:e=>{this.containerElement=e}},e))}}ei.ctor=ve;var ti=ei;const ni="pcui-progress",ii=ni+"-inner";class ai extends ae{constructor(e={}){super(e),this._inner=new Q({class:ii}),this.class.add(ni),this.append(this._inner),void 0!==e.value&&(this.value=e.value)}set value(e){this._value!==e&&(this._value=e,this._inner.width=`${this._value}%`,this.emit("change",e))}get value(){return this._value}}Q.register("progress",ai);var si=ai;class ri extends ke{constructor(e){super(e),this.elementClass=si}render(){return super.render()}}ri.ctor=si;var oi=ri;class li extends ke{constructor(e){super(e),this.elementClass=mn}render(){return super.render()}}li.ctor=mn;var ci=li;class hi extends ke{constructor(e){super(e),this.elementClass=Kt,this.onSelect=e.onSelect,this.onAttach=this.onAttachFn.bind(this)}onAttachFn(){this.props.onSelect&&this.element.on("select",this.onSelect)}render(){return super.render()}}hi.ctor=Kt;var pi=hi;const di="pcui-slider",ui=di+"-container",mi=di+"-bar",fi=di+"-handle",gi=di+"-active",vi=/Chrome\//.test(navigator.userAgent);class yi extends Q{constructor(e={}){var t,n,i,a,s;super(e),this._historyCombine=!1,this._historyPostfix=null,this._cursorHandleOffset=0,this._touchId=null,this._onMouseDown=e=>{0===e.button&&this.enabled&&!this.readOnly&&this._onSlideStart(e.pageX)},this._onMouseMove=e=>{e.stopPropagation(),e.preventDefault(),this._onSlideMove(e.pageX)},this._onMouseUp=e=>{e.stopPropagation(),e.preventDefault(),this._onSlideEnd(e.pageX)},this._onTouchStart=e=>{if(this.enabled&&!this.readOnly)for(let t=0;t<e.changedTouches.length;t++){const n=e.changedTouches[t],i=n.target;if(i.ui&&i.ui===this){this._touchId=n.identifier,this._onSlideStart(n.pageX);break}}},this._onTouchMove=e=>{for(let t=0;t<e.changedTouches.length;t++){const n=e.changedTouches[t];if(n.identifier===this._touchId){e.stopPropagation(),e.preventDefault(),this._onSlideMove(n.pageX);break}}},this._onTouchEnd=e=>{for(let t=0;t<e.changedTouches.length;t++){const n=e.changedTouches[t];if(n.identifier===this._touchId){e.stopPropagation(),e.preventDefault(),this._onSlideEnd(n.pageX),this._touchId=null;break}}},this._onKeyDown=e=>{if("Escape"===e.key)return void this.blur();if(!this.enabled||this.readOnly)return;if("ArrowLeft"!==e.key&&"ArrowRight"!==e.key)return;e.stopPropagation(),e.preventDefault();let t="ArrowLeft"===e.key?-1:1;e.shiftKey&&(t*=10),this.value+=t*this.step},this.class.add(di);const r=new Ee({allowNull:e.allowNull,hideSlider:!0,min:e.min,max:e.max,keyChange:e.keyChange,placeholder:e.placeholder,precision:null!==(t=e.precision)&&void 0!==t?t:2,renderChanges:e.renderChanges,step:e.step});r.on("change",(e=>{this._onValueChange(e)})),r.on("focus",(()=>{this.emit("focus")})),r.on("blur",(()=>{this.emit("blur")})),r.parent=this,this.dom.appendChild(r.dom),this._numericInput=r,this._sliderMin=null!==(i=null!==(n=e.sliderMin)&&void 0!==n?n:e.min)&&void 0!==i?i:0,this._sliderMax=null!==(s=null!==(a=e.sliderMax)&&void 0!==a?a:e.max)&&void 0!==s?s:1,this._domSlider=document.createElement("div"),this._domSlider.classList.add(ui),this.dom.appendChild(this._domSlider),this._domBar=document.createElement("div"),this._domBar.classList.add(mi),this._domBar.ui=this,this._domSlider.appendChild(this._domBar),this._domHandle=document.createElement("div"),this._domHandle.ui=this,this._domHandle.tabIndex=0,this._domHandle.classList.add(fi),this._domBar.appendChild(this._domHandle),this._domSlider.addEventListener("mousedown",this._onMouseDown),this._domSlider.addEventListener("touchstart",this._onTouchStart,{passive:!0}),this._domHandle.addEventListener("keydown",this._onKeyDown),void 0!==e.value&&(this.value=e.value),void 0!==e.values&&(this.values=e.values),0===this.value&&this._updateHandle(0)}destroy(){this._destroyed||(this._domSlider.removeEventListener("mousedown",this._onMouseDown),this._domSlider.removeEventListener("touchstart",this._onTouchStart),this._domHandle.removeEventListener("keydown",this._onKeyDown),this.dom.removeEventListener("mouseup",this._onMouseUp),this.dom.removeEventListener("mousemove",this._onMouseMove),this.dom.removeEventListener("touchmove",this._onTouchMove),this.dom.removeEventListener("touchend",this._onTouchEnd),super.destroy())}_updateHandle(e){const t=100*Math.max(0,Math.min(1,((e||0)-this._sliderMin)/(this._sliderMax-this._sliderMin))),n=this._domHandle.getBoundingClientRect().width;this._domHandle.style.left=`calc(${t}% + ${n/2}px)`}_onValueChange(e){this._updateHandle(e),this._suppressChange||this.emit("change",e),this._binding&&this._binding.setValue(e)}_calculateCursorHandleOffset(e){const t=vi?2:0,n=this._domHandle.getBoundingClientRect(),i=n.left-t,a=n.right;return this._cursorHandleOffset=e>=i&&e<=a?e-(i+(a-i)/2):0,this._cursorHandleOffset}_onSlideStart(e){this._domHandle.focus(),null===this._touchId?(window.addEventListener("mousemove",this._onMouseMove),window.addEventListener("mouseup",this._onMouseUp)):(window.addEventListener("touchmove",this._onTouchMove),window.addEventListener("touchend",this._onTouchEnd)),this.class.add(gi),this._calculateCursorHandleOffset(e)||this._onSlideMove(e),this.binding&&(this._historyCombine=this.binding.historyCombine,this._historyPostfix=this.binding.historyPostfix,this.binding.historyCombine=!0,this.binding.historyPostfix=`(${Date.now()})`)}_onSlideMove(e){const t=this._domBar.getBoundingClientRect();e-=this._cursorHandleOffset;let n=Math.max(0,Math.min(1,(e-t.left)/t.width))*(this._sliderMax-this._sliderMin)+this._sliderMin;n=parseFloat(n.toFixed(this.precision)),this.value=n}_onSlideEnd(e){this._calculateCursorHandleOffset(e)||this._onSlideMove(e),this.class.remove(gi),null===this._touchId?(window.removeEventListener("mousemove",this._onMouseMove),window.removeEventListener("mouseup",this._onMouseUp)):(window.removeEventListener("touchmove",this._onTouchMove),window.removeEventListener("touchend",this._onTouchEnd)),this.binding&&(this.binding.historyCombine=this._historyCombine,this.binding.historyPostfix=this._historyPostfix,this._historyCombine=!1,this._historyPostfix=null)}focus(){this._numericInput.focus()}blur(){this._domHandle.blur(),this._numericInput.blur()}set sliderMin(e){this._sliderMin!==e&&(this._sliderMin=e,this._updateHandle(this.value))}get sliderMin(){return this._sliderMin}set sliderMax(e){this._sliderMax!==e&&(this._sliderMax=e,this._updateHandle(this.value))}get sliderMax(){return this._sliderMax}set value(e){this._numericInput.value=e,this._numericInput.class.contains(H)?this.class.add(H):this.class.remove(H)}get value(){return this._numericInput.value}set values(e){this._numericInput.values=e,this._numericInput.class.contains(H)?this.class.add(H):this.class.remove(H)}set renderChanges(e){this._numericInput.renderChanges=e}get renderChanges(){return this._numericInput.renderChanges}set min(e){this._numericInput.min=e}get min(){return this._numericInput.min}set max(e){this._numericInput.max=e}get max(){return this._numericInput.max}set step(e){this._numericInput.step=e}get step(){return this._numericInput.step}set precision(e){this._numericInput.precision=e}get precision(){return this._numericInput.precision}set keyChange(e){this._numericInput.keyChange=e}get keyChange(){return this._numericInput.keyChange}set placeholder(e){this._numericInput.placeholder=e}get placeholder(){return this._numericInput.placeholder}}Q.register("slider",yi,{renderChanges:!0});var _i=yi;class wi extends ke{constructor(e){super(e),this.elementClass=_i}render(){return super.render()}}wi.ctor=_i;var bi=wi;class xi extends Q{constructor(e={}){var t,n;if((null!==(t=e.type)&&void 0!==t?t:"small-thick")===xi.TYPE_SMALL_THICK){const t=function(e,t){const n=t||document.createElementNS("http://www.w3.org/2000/svg","svg");return n.classList.add("spin"),n.setAttribute("width",e),n.setAttribute("height",e),n.setAttribute("viewBox","0 0 14 14"),n.setAttribute("fill","none"),n.innerHTML='<path d="M7 14C3.13871 14 0 10.8613 0 7C0 3.13871 3.13871 0 7 0C10.8613 0 14 3.13871 14 7C14 10.8613 10.8613 14 7 14ZM7 2.25806C4.38064 2.25806 2.25806 4.38064 2.25806 7C2.25806 9.61935 4.38064 11.7419 7 11.7419C9.61935 11.7419 11.7419 9.61935 11.7419 7C11.7419 4.38064 9.61935 2.25806 7 2.25806Z" fill="#773417"/><path class="pcui-spinner-highlight" d="M7 14V11.7419C9.61935 11.7419 11.7419 9.61935 11.7419 7H14C14 10.8613 10.8613 14 7 14Z" fill="#FF6600"/>',n}(null!==(n=e.size)&&void 0!==n?n:12,e.dom);e=Object.assign(Object.assign({},e),{dom:t})}super(e),this.class.add("pcui-spinner")}}xi.TYPE_SMALL_THICK="small-thick";var Ci=xi;class Si extends ke{constructor(e){super(e),this.elementClass=Ci}render(){return i.exports.createElement("svg",{ref:this.attachElement})}}Si.ctor=Ci;var Ei=Si;const Ti="pcui-text-area-input",Ai=Ti+"-resizable",Li=Ai+"-none",Mi=Ai+"-both",Pi=Ai+"-horizontal",Oi=Ai+"-vertical";class Ii extends pt{constructor(e={}){switch(super(e=Object.assign({input:document.createElement("textarea")},e)),this.class.add(Ti),e.resizable){case"both":this.class.add(Mi);break;case"horizontal":this.class.add(Pi);break;case"vertical":this.class.add(Oi);break;default:this.class.add(Li)}}_onInputKeyDown(e){("Escape"===e.key&&this.blurOnEscape||"Enter"===e.key&&this.blurOnEnter&&!e.shiftKey)&&this._domInput.blur(),this.emit("keydown",e)}}Q.register("text",Ii,{renderChanges:!0});var Ri=Ii;class Di extends ke{constructor(e){super(e),this.elementClass=Ri}render(){return super.render()}}Di.ctor=Ri;var ki=Di;class Fi extends ke{constructor(e={}){super(e),this.elementClass=pt,e.onValidate&&(this.onValidate=e.onValidate),this.onAttach=this.onAttachFn.bind(this)}onAttachFn(){this.onValidate&&(this.element.onValidate=this.onValidate)}render(){return super.render()}}Fi.ctor=pt;var Bi=Fi;const Ni="pcui-treeview-item",Ui=Ni+"-icon",zi=Ni+"-text",Vi=Ni+"-selected",Hi=Ni+"-open",Gi=Ni+"-contents",Wi=Ni+"-empty",ji=Ni+"-rename";class Xi extends ae{constructor(e={}){var t,n,i,a;super(e),this._numChildren=0,this._onContentKeyDown=e=>{"INPUT"!==e.target.tagName&&this.allowSelect&&this._treeView&&this._treeView._onChildKeyDown(e,this)},this._onContentMouseDown=e=>{this._treeView&&this._treeView.allowDrag&&this._allowDrag&&(this._treeView._updateModifierKeys(e),e.stopPropagation())},this._onContentMouseUp=e=>{e.stopPropagation(),e.preventDefault(),window.removeEventListener("mouseup",this._onContentMouseUp),this._treeView&&this._treeView._onChildDragEnd(e,this)},this._onContentMouseOver=e=>{e.stopPropagation(),this._treeView&&this._treeView._onChildDragOver(e,this),this.emit("hover",e)},this._onContentDragStart=e=>{e.stopPropagation(),e.preventDefault(),this._treeView&&this._treeView.allowDrag&&(this.class.contains(ji)||(this._treeView._onChildDragStart(e,this),window.addEventListener("mouseup",this._onContentMouseUp)))},this._onContentClick=e=>{if(!this.allowSelect||0!==e.button)return;if("INPUT"===e.target.tagName)return;e.stopPropagation();const t=this._containerContents.dom.getBoundingClientRect();this._numChildren>0&&e.clientX-t.left<0?(this.open=!this.open,e.altKey&&this._dfs((e=>{e.open=this.open})),this.focus()):this._treeView&&this._treeView._onChildClick(e,this)},this._onContentDblClick=e=>{if(!this._treeView||!this._treeView.allowRenaming||0!==e.button)return;if("INPUT"===e.target.tagName)return;e.stopPropagation();const t=this._containerContents.dom.getBoundingClientRect();this.numChildren&&e.clientX-t.left<0||(this.allowSelect&&(this._treeView.deselect(),this._treeView._onChildClick(e,this)),this.rename())},this._onContentContextMenu=e=>{this._treeView&&this._treeView._onContextMenu&&this._treeView._onContextMenu(e,this)},this._onContentFocus=e=>{this.emit("focus")},this._onContentBlur=e=>{this.emit("blur")},this.class.add(Ni,Wi),this._containerContents=new ae({class:Gi,flex:!0,flexDirection:"row",tabIndex:0}),this.append(this._containerContents),this._containerContents.dom.draggable=!0,this._labelIcon=new re({class:Ui}),this._containerContents.append(this._labelIcon),this.icon=null!==(t=e.icon)&&void 0!==t?t:"E360",this._labelText=new re({class:zi}),this._containerContents.append(this._labelText),this.allowSelect=null===(n=e.allowSelect)||void 0===n||n,this.allowDrop=null===(i=e.allowDrop)||void 0===i||i,this.allowDrag=null===(a=e.allowDrag)||void 0===a||a,e.text&&(this.text=e.text),e.selected&&(this.selected=e.selected);const s=this._containerContents.dom;s.addEventListener("focus",this._onContentFocus),s.addEventListener("blur",this._onContentBlur),s.addEventListener("keydown",this._onContentKeyDown),s.addEventListener("dragstart",this._onContentDragStart),s.addEventListener("mousedown",this._onContentMouseDown),s.addEventListener("mouseover",this._onContentMouseOver),s.addEventListener("click",this._onContentClick),s.addEventListener("dblclick",this._onContentDblClick),s.addEventListener("contextmenu",this._onContentContextMenu)}destroy(){if(this._destroyed)return;const e=this._containerContents.dom;e.removeEventListener("focus",this._onContentFocus),e.removeEventListener("blur",this._onContentBlur),e.removeEventListener("keydown",this._onContentKeyDown),e.removeEventListener("dragstart",this._onContentDragStart),e.removeEventListener("mousedown",this._onContentMouseDown),e.removeEventListener("mouseover",this._onContentMouseOver),e.removeEventListener("click",this._onContentClick),e.removeEventListener("dblclick",this._onContentDblClick),e.removeEventListener("contextmenu",this._onContentContextMenu),window.removeEventListener("mouseup",this._onContentMouseUp),super.destroy()}_onAppendChild(e){super._onAppendChild(e),e instanceof Xi&&(this._numChildren++,this._parent!==this._treeView&&this.class.remove(Wi),this._treeView&&this._treeView._onAppendTreeViewItem(e))}_onRemoveChild(e){e instanceof Xi&&(this._numChildren--,0===this._numChildren&&this.class.add(Wi),this._treeView&&this._treeView._onRemoveTreeViewItem(e)),super._onRemoveChild(e)}_dfs(e){e(this);let t=this.firstChild;for(;t;)t._dfs(e),t=t.nextSibling}rename(){this.class.add(ji);const e=new pt({renderChanges:!1,value:this.text,class:X});e.on("blur",(()=>{e.destroy()})),e.on("destroy",(()=>{this.class.remove(ji),this.focus()})),e.on("change",(t=>{(t=t.trim())&&(this.text=t,e.destroy())})),e.on("disable",(()=>{e.input.removeAttribute("readonly")})),this._containerContents.append(e),e.focus(!0)}focus(){this._containerContents.dom.focus()}blur(){this._containerContents.dom.blur()}set selected(e){e!==this.selected?e?(this._containerContents.class.add(Vi),this.emit("select",this),this._treeView&&this._treeView._onChildSelected(this),this.focus()):(this._containerContents.class.remove(Vi),this.blur(),this.emit("deselect",this),this._treeView&&this._treeView._onChildDeselected(this)):e&&this.focus()}get selected(){return this._containerContents.class.contains(Vi)}set text(e){this._labelText.value!==e&&(this._labelText.value=e,this._treeView&&this._treeView._onChildRename(this,e))}get text(){return this._labelText.value}get textLabel(){return this._labelText}get iconLabel(){return this._labelIcon}set open(e){if(this.open!==e)if(e){if(!this.numChildren)return;this.class.add(Hi),this.emit("open",this)}else this.class.remove(Hi),this.emit("close",this)}get open(){return this.class.contains(Hi)||this.parent===this._treeView}set parentsOpen(e){let t=this.parent;for(;t&&t instanceof Xi;)t.open=e,t=t.parent}get parentsOpen(){let e=this.parent;for(;e&&e instanceof Xi;){if(!e.open)return!1;e=e.parent}return!0}set allowDrop(e){this._allowDrop=e}get allowDrop(){return this._allowDrop}set allowDrag(e){this._allowDrag=e}get allowDrag(){return this._allowDrag}set allowSelect(e){this._allowSelect=e}get allowSelect(){return this._allowSelect}set treeView(e){this._treeView=e}get treeView(){return this._treeView}get numChildren(){return this._numChildren}get firstChild(){if(this._numChildren)for(const e of this.dom.childNodes)if(e.ui instanceof Xi)return e.ui;return null}get lastChild(){if(this._numChildren)for(let e=this.dom.childNodes.length-1;e>=0;e--)if(this.dom.childNodes[e].ui instanceof Xi)return this.dom.childNodes[e].ui;return null}get nextSibling(){let e=this.dom.nextSibling;for(;e&&!(e.ui instanceof Xi);)e=e.nextSibling;return e&&e.ui}get previousSibling(){let e=this.dom.previousSibling;for(;e&&!(e.ui instanceof Xi);)e=e.previousSibling;return e&&e.ui}set icon(e){this._icon!==e&&e.match(/^E[0-9]{0,4}$/)&&(this._icon=e,e?this._labelIcon.dom.setAttribute("data-icon",String.fromCodePoint(parseInt(e,16))):this._labelIcon.dom.removeAttribute("data-icon"))}get icon(){return this._icon}}Xi.EVENT_SELECT="select",Xi.EVENT_DESELECT="deselect",Xi.EVENT_OPEN="open",Xi.EVENT_CLOSE="close";var Yi=Xi;const qi="pcui-treeview",Ki=qi+"-item-dragged",Zi=qi+"-drag-handle",Qi=qi+"-filtering",Ji=Qi+"-result",$i="inside",ea="before",ta="after";class na extends ae{constructor(e={}){var t,n,i;super(e),this._selectedItems=[],this._dragItems=[],this._dragging=!1,this._dragOverItem=null,this._dragArea=$i,this._dragScroll=0,this._dragScrollInterval=null,this._pressedCtrl=!1,this._pressedShift=!1,this._filter=null,this._filterResults=[],this._updateModifierKeys=e=>{this._pressedCtrl=e.ctrlKey||e.metaKey,this._pressedShift=e.shiftKey},this._onMouseLeave=e=>{this._allowDrag&&this._dragging&&(this._dragOverItem=null,this._updateDragHandle())},this._onMouseMove=e=>{if(!this._dragging)return;const t=this.dom.getBoundingClientRect();this._dragScroll=0;let n=t.top,i=t.bottom;if(this._dragScrollElement!==this){const e=this._dragScrollElement.dom.getBoundingClientRect();n=Math.max(n+this._dragScrollElement.dom.scrollTop,e.top),i=Math.min(i+this._dragScrollElement.dom.scrollTop,e.bottom)}n=Math.max(0,n),i=Math.min(i,document.body.clientHeight),e.pageY<n+32&&this._dragScrollElement.dom.scrollTop>0?this._dragScroll=-1:e.pageY>i-32&&this._dragScrollElement.dom.scrollHeight>this._dragScrollElement.height+this._dragScrollElement.dom.scrollTop&&(this._dragScroll=1)},this._onDragMove=e=>{if(e.preventDefault(),e.stopPropagation(),!this._allowDrag||!this._dragOverItem)return;const t=this._dragHandle.dom.getBoundingClientRect(),n=Math.floor((e.clientY-t.top)/t.height*5),i=this._dragArea,a=this._dragOverItem;if(this._dragOverItem.parent===this){let e=!1;for(let t=0;t<this._dragItems.length;t++)if(this._dragItems[t].parent===this._dragOverItem){e=!0,this._dragOverItem=null;break}e||(this._dragArea=$i)}else{let e=!1;for(let t=0;t<this._dragItems.length;t++)if(this._dragItems[t].dom.contains(this._dragOverItem.dom)){e=!0;break}if(e)this._dragOverItem=null;else if(this._allowReordering&&n<=1&&-1===this._dragItems.indexOf(this._dragOverItem.previousSibling))this._dragArea=ea;else if(this._allowReordering&&n>=4&&-1===this._dragItems.indexOf(this._dragOverItem.nextSibling)&&(0===this._dragOverItem.numChildren||!this._dragOverItem.open))this._dragArea=ta;else{let e=!1;if(this._allowReordering&&this._dragOverItem.open)for(let t=0;t<this._dragItems.length;t++)if(this._dragItems[t].parent===this._dragOverItem){e=!0,this._dragArea=ea;break}e||(this._dragArea=$i)}}i===this._dragArea&&a===this._dragOverItem||this._updateDragHandle()},this.class.add(qi),this._allowDrag=null===(t=e.allowDrag)||void 0===t||t,this._allowReordering=null===(n=e.allowReordering)||void 0===n||n,this._allowRenaming=null!==(i=e.allowRenaming)&&void 0!==i&&i,this._dragHandle=new Q({class:Zi}),this._dragScrollElement=e.dragScrollElement||this,this.append(this._dragHandle),this._onContextMenu=e.onContextMenu,this._onReparentFn=e.onReparent,this._wasDraggingAllowedBeforeFiltering=this._allowDrag,window.addEventListener("keydown",this._updateModifierKeys),window.addEventListener("keyup",this._updateModifierKeys),window.addEventListener("mousedown",this._updateModifierKeys),this.dom.addEventListener("mouseleave",this._onMouseLeave),this._dragHandle.dom.addEventListener("mousemove",this._onDragMove),this._dragHandle.on("destroy",(e=>{e.removeEventListener("mousemove",this._onDragMove)}))}destroy(){this._destroyed||(window.removeEventListener("keydown",this._updateModifierKeys),window.removeEventListener("keyup",this._updateModifierKeys),window.removeEventListener("mousedown",this._updateModifierKeys),window.removeEventListener("mousemove",this._onMouseMove),this.dom.removeEventListener("mouseleave",this._onMouseLeave),this._dragScrollInterval&&(window.clearInterval(this._dragScrollInterval),this._dragScrollInterval=null),super.destroy())}_findNextVisibleTreeItem(e){if(e.numChildren>0&&e.open)return e.firstChild;const t=e.nextSibling;if(t)return t;let n=e.parent;if(!(n instanceof Yi))return null;let i=n.nextSibling;for(;!i&&(n=n.parent,n instanceof Yi);)i=n.nextSibling;return i}_findLastVisibleChildTreeItem(e){if(!e.numChildren||!e.open)return null;let t=e.lastChild;for(;t&&t.numChildren&&t.open;)t=t.lastChild;return t}_findPreviousVisibleTreeItem(e){const t=e.previousSibling;if(t)return t.numChildren>0&&t.open?this._findLastVisibleChildTreeItem(t):t;const n=e.parent;return n instanceof Yi?n:null}_getChildrenRange(e,t){const n=[];if(this._filterResults.length){const i=this.dom.querySelectorAll(`.${qi}-item.${Ji}`);let a=-1,s=-1;for(let r=0;r<i.length;r++){const o=i[r].ui;if(o===e?a=r:o===t&&(s=r),-1!==a&&-1!==s){const e=a<s?s:a;for(let t=a<s?a:s;t<=e;t++)n.push(i[t].ui);break}}}else{let i=e;const a=e.dom.getBoundingClientRect(),s=t.dom.getBoundingClientRect();if(a.top<s.top)for(;i&&i!==t;)i=this._findNextVisibleTreeItem(i),i&&i!==t&&n.push(i);else for(;i&&i!==t;)i=this._findPreviousVisibleTreeItem(i),i&&i!==t&&n.push(i);n.push(t)}return n}_onAppendChild(e){super._onAppendChild(e),e instanceof Yi&&this._onAppendTreeViewItem(e)}_onRemoveChild(e){e instanceof Yi&&this._onRemoveTreeViewItem(e),super._onRemoveChild(e)}_onAppendTreeViewItem(e){e.treeView=this,this._filter&&this._searchItems([[e.text,e]],this._filter),e.forEachChild((e=>{e instanceof Yi&&this._onAppendTreeViewItem(e)}))}_onRemoveTreeViewItem(e){e.selected=!1,e.forEachChild((e=>{e instanceof Yi&&this._onRemoveTreeViewItem(e)}))}_onChildKeyDown(e,t){if(-1!==["Tab","ArrowLeft","ArrowRight","ArrowUp","ArrowDown"].indexOf(e.key))if(e.preventDefault(),e.stopPropagation(),"ArrowDown"===e.key){if(this._selectedItems.length){const e=this._findNextVisibleTreeItem(t);e&&(this._pressedShift||this._pressedCtrl?e.selected=!0:this._selectSingleItem(e))}}else if("ArrowUp"===e.key){if(this._selectedItems.length){const e=this._findPreviousVisibleTreeItem(t);e&&(this._pressedShift||this._pressedCtrl?e.selected=!0:this._selectSingleItem(e))}}else"ArrowLeft"===e.key?t.parent!==this&&(t.open=!1):"ArrowRight"===e.key&&(t.open=!0)}_onChildClick(e,t){if(0===e.button&&t.allowSelect)if(this._pressedCtrl)t.selected=!t.selected;else if(this._pressedShift){if(!this._selectedItems.length||1===this._selectedItems.length&&this._selectedItems[0]===t)return void(t.selected=!0);const e=this._selectedItems[this._selectedItems.length-1];this._openHierarchy(e);this._getChildrenRange(e,t).forEach((e=>{e.allowSelect&&(e.selected=!0)}))}else this._selectSingleItem(t)}_traverseDepthFirst(e){function t(n){if(n&&n instanceof Yi&&(e(n),n.numChildren))for(const e of n.dom.childNodes)t(e.ui)}for(const e of this.dom.childNodes)t(e.ui)}_getTreeOrder(){const e=new Map;let t=0;return this._traverseDepthFirst((n=>{e.set(n,t++)})),e}_getChildIndex(e,t){return Array.prototype.indexOf.call(t.dom.childNodes,e.dom)-1}_onChildDragStart(e,t){if(this.allowDrag&&!this._dragging){if(this._dragItems=[],-1!==this._selectedItems.indexOf(t)){const e=[];let t=-1;for(let n=0;n<this._selectedItems.length;n++){let i=this._selectedItems[n].parent,a=0,s=!1;for(;i&&i instanceof Yi;){if(-1!==this._selectedItems.indexOf(i)){s=!0;break}a++,i=i.parent}if(!s){if(-1===t)t=a;else if(t!==a)return;e.push(this._selectedItems[n])}}this._dragItems=e}else t.class.add(Ki),this._dragItems.push(t);this._dragItems.length&&(this._dragItems.forEach((e=>{e.class.add(Ki)})),this.isDragging=!0,this.emit("dragstart",this._dragItems.slice()))}}_onChildDragEnd(e,t){if(!this.allowDrag||!this._dragging)return;this._dragItems.forEach((e=>e.class.remove(Ki)));let n=!1;for(let e=0;e<this._dragItems.length;e++)if(this._dragItems[e].parent===this){n=!0;break}if(!n&&this._dragOverItem){if(this._dragItems.length>1){const e=this._getTreeOrder();this._dragItems.sort(((t,n)=>e.get(t)-e.get(n)))}if(this._dragItems.length){const e=[];if(this._onReparentFn){const t=[],n=e=>{let n=t.findIndex((t=>t.parent===e));return-1===n&&(t.push({parent:e,children:[...e.dom.childNodes]}),n=t.length-1),t[n].children};this._dragItems.forEach((t=>{if(t.parent===this._dragOverItem&&this._dragArea===$i)return;e.push({item:t,oldParent:t.parent});const i=n(t.parent),a=i.indexOf(t.dom);i.splice(a,1)})),e.forEach(((t,i)=>{if(this._dragArea===ea){t.newParent=this._dragOverItem.parent;const e=n(this._dragOverItem.parent),i=e.indexOf(this._dragOverItem.dom);e.splice(i,0,t.item.dom),t.newChildIndex=i}else if(this._dragArea===$i){t.newParent=this._dragOverItem;const e=n(this._dragOverItem);e.push(t.item.dom),t.newChildIndex=e.length-1}else if(this._dragArea===ta){t.newParent=this._dragOverItem.parent;const a=n(this._dragOverItem.parent),s=i>0?e[i-1].item:this._dragOverItem,r=a.indexOf(s.dom);a.splice(r+1,0,t.item.dom),t.newChildIndex=r+1}t.newChildIndex--}))}else this._dragItems.forEach((t=>{t.parent===this._dragOverItem&&this._dragArea===$i||(e.push({item:t,oldParent:t.parent}),t.parent.remove(t))})),e.forEach(((t,n)=>{this._dragArea===ea?(t.newParent=this._dragOverItem.parent,t.newParent.appendBefore(t.item,this._dragOverItem),t.newChildIndex=this._getChildIndex(t.item,t.newParent)):this._dragArea===$i?(t.newParent=this._dragOverItem,t.newParent.append(t.item),t.newParent.open=!0,t.newChildIndex=this._getChildIndex(t.item,t.newParent)):this._dragArea===ta&&(t.newParent=this._dragOverItem.parent,t.newParent.appendAfter(t.item,n>0?e[n-1].item:this._dragOverItem),t.newChildIndex=this._getChildIndex(t.item,t.newParent))}));e.length&&(this._onReparentFn&&this._onReparentFn(e),this.emit("reparent",e))}}this._dragItems=[],this.isDragging=!1,this.emit("dragend")}_onChildDragOver(e,t){this._allowDrag&&this._dragging&&(t.allowDrop&&-1===this._dragItems.indexOf(t)?this._dragOverItem=t:this._dragOverItem=null,this._updateDragHandle(),this._onDragMove(e))}_scrollWhileDragging(){this._dragging&&0!==this._dragScroll&&(this._dragScrollElement.dom.scrollTop+=8*this._dragScroll,this._dragOverItem=null,this._updateDragHandle())}_updateDragHandle(e,t){if(t||this._allowDrag&&this._dragging)if(e||(e=this._dragOverItem),e&&!e.hidden&&e.parentsOpen){const t=e._containerContents.dom.getBoundingClientRect();this._dragHandle.hidden=!1,this._dragHandle.class.remove(ta,ea,$i),this._dragHandle.class.add(this._dragArea);const n=t.top;let i=t.left,a=t.width;if(this.dom.parentElement){const e=this.dom.parentElement.getBoundingClientRect();i=Math.max(i,e.left),a=Math.min(a,this.dom.parentElement.clientWidth-i+e.left)}this._dragHandle.style.top=n+"px",this._dragHandle.style.left=i+"px",this._dragHandle.style.width=a-7+"px"}else this._dragHandle.hidden=!0}_openHierarchy(e){e.parentsOpen=!0}_selectSingleItem(e){let t=this._selectedItems.length,n=!1;for(;t--;)this._selectedItems[t]&&this._selectedItems[t]!==e&&(this._selectedItems[t].selected=!1,n=!0);e.selected=!!n||!e.selected}_onChildSelected(e){this._selectedItems.push(e),this._openHierarchy(e),this.emit("select",e)}_onChildDeselected(e){const t=this._selectedItems.indexOf(e);-1!==t&&(this._selectedItems.splice(t,1),this.emit("deselect",e))}_onChildRename(e,t){if(this._filter){e.class.remove(Ji);const t=this._filterResults.indexOf(e);-1!==t&&this._filterResults.splice(t,1),this._searchItems([[e.text,e]],this._filter)}this.emit("rename",e,t)}_searchItems(e,t){const n=Lt(e,t);n.length&&n.forEach((e=>{this._filterResults.push(e),e.class.add(Ji)}))}_applyFilter(e){this._clearFilter(),this._wasDraggingAllowedBeforeFiltering=this._allowDrag,this._allowDrag=!1,this.class.add(Qi);const t=[];this._traverseDepthFirst((e=>{t.push([e.text,e])})),this._searchItems(t,e)}_clearFilter(){this._filterResults.forEach((e=>{e.destroyed||e.class.remove(Ji)})),this._filterResults.length=0,this.class.remove(Qi),this._allowDrag=this._wasDraggingAllowedBeforeFiltering}showDragHandle(e){this._updateDragHandle(e,!0)}deselect(){let e=this._selectedItems.length;for(;e--;)this._selectedItems[e]&&(this._selectedItems[e].selected=!1)}clearTreeItems(){let e=this.dom.childNodes.length;for(;e--;){const t=this.dom.childNodes[e];if(!t)continue;const n=t.ui;n instanceof Yi&&n.destroy()}this._selectedItems=[],this._dragItems=[],this._allowDrag=this._wasDraggingAllowedBeforeFiltering}set allowDrag(e){this._allowDrag=e,this._filter&&(this._wasDraggingAllowedBeforeFiltering=e)}get allowDrag(){return this._allowDrag}set allowReordering(e){this._allowReordering=e}get allowReordering(){return this._allowReordering}set allowRenaming(e){this._allowRenaming=e}get allowRenaming(){return this._allowRenaming}set isDragging(e){this._dragging!==e&&(e?(this._dragging=!0,this._updateDragHandle(),(this.scrollable||this._dragScrollElement!==this)&&(window.removeEventListener("mousemove",this._onMouseMove),window.addEventListener("mousemove",this._onMouseMove),this._dragScrollInterval||(this._dragScrollInterval=window.setInterval((()=>{this._scrollWhileDragging()}),1e3/60)))):(this._dragOverItem=null,this._updateDragHandle(),this._dragging=!1,window.removeEventListener("mousemove",this._onMouseMove),this._dragScrollInterval&&(window.clearInterval(this._dragScrollInterval),this._dragScrollInterval=null)))}get isDragging(){return this._dragging}get selected(){return this._selectedItems.slice()}set filter(e){this._filter!==e&&(this._filter=e,e?this._applyFilter(e):this._clearFilter())}get filter(){return this._filter}get pressedCtrl(){return this._pressedCtrl}get pressedShift(){return this._pressedShift}}na.EVENT_DRAGSTART="dragstart",na.EVENT_DRAGEND="dragend",na.EVENT_REPARENT="reparent",na.EVENT_SELECT="select",na.EVENT_DESELECT="deselect",na.EVENT_RENAME="rename";var ia=na;class aa extends ke{constructor(e){super(e),this.element=new ia(Object.assign({},e)),this.loadChildren(this.props.children,this.element)}loadChildren(e,t){e&&(Array.isArray(e)||(e=[e]),e.forEach((e=>{const n=new Yi({text:e.props.text,icon:e.props.icon,open:!1});e.props.onSelect&&n.on("select",e.props.onSelect),e.props.onDeselect&&n.on("deselect",e.props.onDeselect),t.append(n),this.loadChildren(e.props.children,n)})))}componentDidUpdate(){this.parentElement.removeChild(this.element.dom),this.element=new ia(Object.assign({},this.props)),this.loadChildren(this.props.children,this.element),this.parentElement.appendChild(this.element.dom)}parentElementRendered(e){e&&(this.parentElement=e,this.parentElement.appendChild(this.element.dom))}render(){return i.exports.createElement("div",{ref:this.parentElementRendered.bind(this)})}}aa.ctor=ia;var sa=aa;class ra extends ke{constructor(e){super(e),this.elementClass=Yi,this.onSelect=()=>{e.onSelect&&e.onSelect((()=>{this.element.selected=!1}))},e.onDeselect&&(this.onDeselect=e.onDeselect),this.onAttach=this.onAttachFn.bind(this)}onAttachFn(){this.props.onSelect&&this.element.on("select",this.onSelect),this.props.onDeselect&&this.element.on("deselect",this.onDeselect)}render(){return super.render()}}ra.ctor=Yi;var oa=ra;class la extends Q{constructor(e={}){var t,n,i;const a=Object.assign({},e);delete a.binding,super(a),this._inputs=[],this._applyingChange=!1,this.class.add("pcui-vector-input");const s=Math.max(2,Math.min(4,null!==(t=e.dimensions)&&void 0!==t?t:3));for(let t=0;t<s;t++){const a=new Ee({min:e.min,max:e.max,precision:null!==(n=e.precision)&&void 0!==n?n:7,step:null!==(i=e.step)&&void 0!==i?i:1,stepPrecision:e.stepPrecision,renderChanges:e.renderChanges,placeholder:e.placeholder?Array.isArray(e.placeholder)?e.placeholder[t]:e.placeholder:null});a.on("change",(()=>{this._onInputChange()})),a.on("focus",(()=>{this.emit("focus")})),a.on("blur",(()=>{this.emit("blur")})),this.dom.appendChild(a.dom),a.parent=this,this._inputs.push(a)}e.binding&&(this.binding=e.binding),void 0!==e.value&&(this.value=e.value)}_onInputChange(){if(this._applyingChange)return;this._inputs.some((e=>e.class.contains(H)))?this.class.add(H):this.class.remove(H),this.emit("change",this.value)}_updateValue(e){return this.class.remove(H),JSON.stringify(this.value)!==JSON.stringify(e)&&(this._applyingChange=!0,this._inputs.forEach(((t,n)=>{const i=t.binding;let a=!1;i&&(a=i.applyingChange,i.applyingChange=!0),t.value=e&&void 0!==e[n]?e[n]:null,i&&(i.applyingChange=a)})),this.emit("change",this.value),this._applyingChange=!1,!0)}link(e,t){super.link(e,t),e=Array.isArray(e)?e:[e];if(1===(t=Array.isArray(t)?t:[t]).length||e.length!==t.length)for(let n=0;n<this._inputs.length;n++)this._inputs[n].link(e,t[0]+`.${n}`);else for(let n=0;n<this._inputs.length;n++)this._inputs[n].link(e,t.map((e=>`${e}.${n}`)))}unlink(){super.unlink();for(const e of this._inputs)e.unlink()}focus(){this._inputs[0].focus()}blur(){for(const e of this._inputs)e.blur()}set value(e){if("string"==typeof e)try{if(e=JSON.parse(e),Array.isArray(e)&&e.some((e=>!Number.isFinite(e))))throw new Error("VectorInput value set to string which doesn't contain an array of numbers")}catch(t){console.error(t),e=[]}Array.isArray(e)||(e=[]);this._updateValue(e)&&this._binding&&this._binding.setValue(e)}get value(){return this._inputs.map((e=>e.value))}set values(e){e=this._inputs.map(((t,n)=>e.map((e=>e?e[n]:void 0)))),this._inputs.forEach(((t,n)=>{t.values=e[n]}))}set binding(e){super.binding=e;for(const t of this._inputs)t.binding=e?e.clone():null}get binding(){return super.binding}set placeholder(e){for(let t=0;t<this._inputs.length;t++)this._inputs[t].placeholder=e[t]||e||null}get placeholder(){return this._inputs.map((e=>e.placeholder))}get inputs(){return this._inputs.slice()}set renderChanges(e){for(const t of this._inputs)t.renderChanges=e}get renderChanges(){return this._inputs[0].renderChanges}set min(e){for(const t of this._inputs)t.min=e}get min(){return this._inputs[0].min}set max(e){for(const t of this._inputs)t.max=e}get max(){return this._inputs[0].max}set precision(e){for(const t of this._inputs)t.precision=e}get precision(){return this._inputs[0].precision}set step(e){for(const t of this._inputs)t.step=e}get step(){return this._inputs[0].step}}Q.register("vec2",la,{dimensions:2,renderChanges:!0}),Q.register("vec3",la,{dimensions:3,renderChanges:!0}),Q.register("vec4",la,{dimensions:4,renderChanges:!0});var ca=la;class ha extends ke{constructor(e){super(e),this.elementClass=ca}render(){return super.render()}}ha.ctor=ca;var pa=ha;var da=Object.freeze({__proto__:null,revision:"7d89890",version:"4.0.11",BindingBase:C,BindingElementToObservers:E,BindingObserversToElement:A,BindingTwoWay:M,ArrayInput:Be,BooleanInput:We,Button:Xe,Canvas:Ze,Code:nt,ColorPicker:vt,Container:_t,Divider:Ct,Element:ke,GradientPicker:hn,GridView:Sn,GridViewItem:Tn,InfoBox:Pn,Label:In,LabelGroup:Nn,Menu:Kn,NumericInput:Qn,Overlay:$n,Panel:ti,Progress:oi,RadioButton:ci,SelectInput:pi,SliderInput:bi,Spinner:Ei,TextAreaInput:ki,TextInput:Bi,TreeView:sa,TreeViewItem:oa,VectorInput:pa});function ua(e,t){return ua=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},ua(e,t)}function ma(e,t){e.prototype=Object.create(t.prototype),e.prototype.constructor=e,ua(e,t)}!function(e){if(!e||"undefined"==typeof window)return;const t=document.createElement("style");t.setAttribute("type","text/css"),t.innerHTML=e,document.head.appendChild(t)}('@charset "UTF-8";\n@font-face {\n  font-family: pc-icon;\n  src: url("data:application/font-woff;charset=utf-7;base64,") format("woff");\n  font-weight: normal;\n  font-style: normal;\n}\n.font-icon, .pcui-menu-item-content > .pcui-label[data-icon]::before, .pcui-menu-item-has-children > .pcui-menu-item-content > .pcui-label::after, .pcui-treeview-item:not(.pcui-treeview-item-empty) > .pcui-treeview-item-contents::before, .pcui-treeview-item-icon::after, .pcui-select-input-create-new > .pcui-label:last-child::before, .pcui-container.pcui-select-input-list .pcui-label.pcui-selected::after, .pcui-label.pcui-select-input-disabled-value::after, .pcui-label.pcui-select-input-icon::after, .pcui-infobox[data-icon]:not(.pcui-hidden)::before, .pcui-panel.pcui-collapsible > .pcui-panel-header::before, .picker-gradient > .pcui-overlay-content > .picker-gradient-panel > .picker-gradient-footer > .pcui-panel-content > .delete-curve-button::after, .picker-gradient > .pcui-overlay-content > .picker-gradient-panel > .picker-gradient-footer > .pcui-panel-content > .paste-curve-button::after, .picker-gradient > .pcui-overlay-content > .picker-gradient-panel > .picker-gradient-footer > .pcui-panel-content > .copy-curve-button::after, .picker-gradient > .pcui-overlay-content > .picker-gradient-panel > .picker-gradient-footer > .pcui-panel-content > .pcui-button, .pcui-button[data-icon]::before, .pcui-boolean-input.pcui-boolean-input-ticked::after {\n  font-family: pc-icon;\n}\n\n.font-thin {\n  font-weight: 100;\n  font-style: normal;\n}\n\n.font-light {\n  font-weight: 200;\n  font-style: normal;\n}\n\n.font-regular, .pcui-element {\n  font-weight: normal;\n  font-style: normal;\n}\n\n.font-bold {\n  font-weight: bold;\n  font-style: normal;\n}\n\n.fixed-font, .pcui-select-input-tag > .pcui-label, .pcui-container.pcui-select-input-list .pcui-label, .pcui-select-input-value, .pcui-label.pcui-multiple-values::before, .pcui-text-area-input > textarea, .pcui-input-element.pcui-multiple-values::before, .pcui-input-element > input {\n  font-family: inconsolatamedium, Monaco, Menlo, "Ubuntu Mono", Consolas, source-code-pro, monospace;\n  font-weight: normal;\n  font-size: 12px;\n}\n\n.pcui-no-select, .pcui-treeview, .pcui-overlay-inner, .picker-color > .pcui-overlay-content > .pick-opacity, .picker-color > .pcui-overlay-content > .pick-hue, .picker-color > .pcui-overlay-content > .pick-rect, .pcui-color-input, .pcui-canvas, .pcui-button, .pcui-label.pcui-selectable:hover, .pcui-slider {\n  -webkit-touch-callout: none;\n  -webkit-user-select: none;\n          user-select: none;\n}\n\n.pcui-flex, .pcui-gridview-radio-container, .pcui-gridview-item, .pcui-gridview-vertical, .pcui-gridview, .pcui-label-group, .pcui-select-input-container-value, .pcui-select-input, .pcui-overlay, .pcui-panel-header > .pcui-panel-sortable-icon, .pcui-vector-input {\n  flex-direction: column;\n}\n.pcui-flex:not(.pcui-hidden), .pcui-gridview-radio-container:not(.pcui-hidden), .pcui-gridview-item:not(.pcui-hidden), .pcui-gridview-vertical:not(.pcui-hidden), .pcui-gridview:not(.pcui-hidden), .pcui-label-group:not(.pcui-hidden), .pcui-select-input-container-value:not(.pcui-hidden), .pcui-select-input:not(.pcui-hidden), .pcui-overlay:not(.pcui-hidden), .pcui-panel-header > .pcui-panel-sortable-icon:not(.pcui-hidden), .pcui-vector-input:not(.pcui-hidden) {\n  display: flex;\n}\n\n.pcui-grid {\n  display: grid;\n}\n\n.pcui-scrollable {\n  overflow: auto;\n}\n\n@-webkit-keyframes pcui-flash-animation {\n  from {\n    outline-color: #f60;\n  }\n  to {\n    outline-color: rgba(255, 102, 0, 0);\n  }\n}\n\n@keyframes pcui-flash-animation {\n  from {\n    outline-color: #f60;\n  }\n  to {\n    outline-color: rgba(255, 102, 0, 0);\n  }\n}\n.pcui-element {\n  border: 0 solid #232e30;\n}\n.pcui-element.flash {\n  outline: 1px solid #f60;\n  -webkit-animation: pcui-flash-animation 200ms ease-in-out forwards;\n          animation: pcui-flash-animation 200ms ease-in-out forwards;\n}\n.pcui-element:focus {\n  outline: none;\n}\n.pcui-element::-moz-focus-inner {\n  border: 0;\n}\n\n.pcui-element.pcui-hidden {\n  display: none;\n}\n\n.pcui-input-element {\n  display: inline-block;\n  border: 1px solid #293538;\n  border-radius: 2px;\n  box-sizing: border-box;\n  margin: 6px;\n  min-height: 24px;\n  height: 24px;\n  background-color: #2c393c;\n  vertical-align: top;\n  transition: color 100ms, background-color 100ms, box-shadow 100ms;\n  position: relative;\n  color: #b1b8ba;\n}\n.pcui-input-element > input {\n  height: 100%;\n  width: calc(100% - 16px);\n  padding: 0 6px;\n  line-height: 1;\n  color: inherit;\n  background: transparent;\n  border: none;\n  outline: none;\n  box-shadow: none;\n}\n.pcui-input-element::before {\n  color: inherit;\n}\n\n.pcui-input-element.pcui-multiple-values::before {\n  position: absolute;\n  padding: 0 8px;\n  content: "...";\n  white-space: nowrap;\n  top: 5px;\n  font-size: 12px;\n}\n\n.pcui-input-element:not(.pcui-disabled, .pcui-readonly):hover {\n  background-color: #293538;\n  color: #fff;\n}\n.pcui-input-element:not(.pcui-disabled, .pcui-readonly):not(.pcui-error):hover {\n  box-shadow: 0 0 2px 1px rgba(255, 102, 0, 0.3);\n}\n.pcui-input-element:not(.pcui-disabled, .pcui-readonly).pcui-focus {\n  background-color: #20292b;\n  box-shadow: 0 0 0 1px rgba(255, 102, 0, 0.3);\n}\n\n.pcui-input-element.pcui-focus::after, .pcui-input-element.pcui-focus::before, .pcui-input-element:hover::after, .pcui-input-element:hover::before {\n  display: none;\n}\n\n.pcui-input-element.pcui-readonly {\n  background-color: rgba(44, 57, 60, 0.7);\n  border-color: transparent;\n}\n\n.pcui-input-element.pcui-disabled {\n  color: #5b7073;\n}\n\n.pcui-input-element.pcui-error {\n  color: #b1b8ba;\n  box-shadow: 0 0 0 1px #d34141;\n}\n\n.pcui-input-element[placeholder] {\n  position: relative;\n}\n.pcui-input-element[placeholder]::after {\n  content: attr(placeholder);\n  background-color: #2c393c;\n  position: absolute;\n  top: 0;\n  right: 0;\n  padding: 0 8px;\n  line-height: 22px;\n  font-size: 10px;\n  font-weight: 600;\n  white-space: nowrap;\n  color: #829193;\n  pointer-events: none;\n}\n\n.pcui-text-area-input {\n  min-height: 48px;\n  height: auto;\n}\n.pcui-text-area-input > textarea {\n  resize: none;\n  height: 100%;\n  width: calc(100% - 16px);\n  padding: 0 8px;\n  line-height: 22px;\n  color: inherit;\n  background: transparent;\n  border: none;\n  outline: none;\n  box-shadow: none;\n  min-height: 44px;\n  min-width: 172px;\n}\n\n.pcui-text-area-input.pcui-text-area-input-resizable-none > textarea {\n  resize: none;\n}\n\n.pcui-text-area-input.pcui-text-area-input-resizable-both > textarea {\n  resize: both;\n}\n\n.pcui-text-area-input.pcui-text-area-input-resizable-horizontal > textarea {\n  resize: horizontal;\n}\n\n.pcui-text-area-input.pcui-text-area-input-resizable-vertical > textarea {\n  resize: vertical;\n}\n\n.pcui-numeric-input-slider-control {\n  display: none;\n  position: absolute;\n  width: 10px;\n  height: 10px;\n  right: 3px;\n  border: 2px solid #20292b;\n  background-color: #293538;\n  border-radius: 100px;\n  z-index: 9999;\n  -webkit-transform: translateY(-50%);\n          transform: translateY(-50%);\n  top: 50%;\n  cursor: ew-resize;\n}\n\n.pcui-numeric-input-slider-control::after {\n  content: "\\e408";\n  font-size: 15px;\n  font-family: pc-icon;\n  position: absolute;\n  left: -5px;\n  top: -5px;\n  -webkit-transform: rotateZ(90deg);\n          transform: rotateZ(90deg);\n}\n\n.pcui-numeric-input-slider-control:hover {\n  opacity: 0.5;\n  color: #b1b8ba;\n}\n\n.pcui-numeric-input-slider-control-active {\n  opacity: 1 !important;\n  color: #7f7 !important;\n}\n\n.pcui-numeric-input-slider-control-hidden {\n  display: none !important;\n}\n\n.pcui-numeric-input:hover .pcui-numeric-input-slider-control {\n  display: block;\n}\n\n.pcui-numeric-input.pcui-disabled:hover .pcui-numeric-input-slider-control {\n  display: none;\n}\n\n.pcui-numeric-input.pcui-disabled .pcui-numeric-input-slider-control,\n.pcui-numeric-input.pcui-readonly .pcui-numeric-input-slider-control {\n  display: none;\n}\n\n.pcui-slider {\n  display: inline-flex;\n  height: 24px;\n  margin: 6px;\n  align-items: center;\n}\n.pcui-slider > .pcui-numeric-input {\n  flex: 1;\n  margin-left: 0;\n}\n\n.pcui-slider-container {\n  flex: 3;\n}\n\n.pcui-slider-bar {\n  position: relative;\n  width: calc(100% - 18px);\n  height: 4px;\n  margin: 9px 8px;\n  background-color: #2c393c;\n  border: 1px solid #293538;\n}\n\n.pcui-slider-handle {\n  position: absolute;\n  top: -7px;\n  left: 0;\n  margin-left: -9px;\n  width: 8px;\n  height: 16px;\n  background-color: #5b7073;\n  border: 1px solid #293538;\n  transition: left 100ms ease;\n}\n.pcui-slider-handle:hover, .pcui-slider-handle:focus {\n  outline: none;\n}\n\n.pcui-slider-active {\n  cursor: ew-resize;\n}\n.pcui-slider-active .pcui-slider-bar {\n  border-color: #20292b;\n  background-color: #20292b;\n}\n.pcui-slider-active .pcui-slider-handle {\n  border-color: #20292b;\n  background-color: #fff;\n  transition: none;\n}\n\n.pcui-slider:not(.pcui-disabled, .pcui-readonly):hover {\n  cursor: pointer;\n}\n.pcui-slider:not(.pcui-disabled, .pcui-readonly) .pcui-slider-handle:focus, .pcui-slider:not(.pcui-disabled, .pcui-readonly) .pcui-slider-handle:hover {\n  cursor: ew-resize;\n  outline: none;\n  border-color: #20292b;\n  background-color: #fff;\n}\n\n.pcui-slider.pcui-readonly .pcui-numeric-input {\n  flex: 1;\n}\n.pcui-slider.pcui-readonly .pcui-slider-bar {\n  display: none;\n}\n\n.pcui-slider.pcui-multiple-values .pcui-slider-handle {\n  display: none;\n}\n\n.pcui-vector-input {\n  flex-direction: row;\n  align-items: center;\n}\n.pcui-vector-input > .pcui-numeric-input {\n  flex: 1;\n  margin: 6px 3px;\n}\n.pcui-vector-input > .pcui-numeric-input:first-child {\n  margin-left: 0;\n}\n.pcui-vector-input > .pcui-numeric-input:last-child {\n  margin-right: 0;\n}\n\n.pcui-boolean-input {\n  display: inline-block;\n  position: relative;\n  box-sizing: border-box;\n  background-color: #2c393c;\n  color: #fff;\n  width: 14px;\n  height: 14px;\n  line-height: 1;\n  overflow: hidden;\n  margin: 6px;\n  transition: opacity 100ms, background-color 100ms, box-shadow 100ms;\n}\n.pcui-boolean-input:focus {\n  outline: none;\n}\n\n.pcui-boolean-input.pcui-boolean-input-ticked {\n  background-color: #b1b8ba;\n}\n.pcui-boolean-input.pcui-boolean-input-ticked::after {\n  content: "\\e372";\n  color: #20292b;\n  background-color: inherit;\n  font-size: 19px;\n  display: block;\n  margin-top: -2px;\n  margin-left: -2px;\n}\n\n.pcui-boolean-input:not(.pcui-disabled, .pcui-readonly):hover, .pcui-boolean-input:not(.pcui-disabled, .pcui-readonly):focus {\n  cursor: pointer;\n  background-color: #293538;\n  box-shadow: 0 0 2px 1px rgba(255, 102, 0, 0.3);\n}\n.pcui-boolean-input:not(.pcui-disabled, .pcui-readonly).pcui-boolean-input-ticked:hover, .pcui-boolean-input:not(.pcui-disabled, .pcui-readonly).pcui-boolean-input-ticked:focus {\n  background-color: #b1b8ba;\n}\n\n.pcui-boolean-input.pcui-disabled {\n  opacity: 0.4;\n}\n\n.pcui-boolean-input.pcui-multiple-values::after {\n  position: absolute;\n  font-size: 17px;\n  font-weight: bold;\n  color: #b1b8ba;\n  left: 4px;\n  top: -3px;\n  content: "-";\n}\n\n.pcui-boolean-input-toggle {\n  display: inline-block;\n  position: relative;\n  width: 30px;\n  height: 16px;\n  border-radius: 8px;\n  flex-shrink: 0;\n  border: 1px solid #293538;\n  box-sizing: border-box;\n  background-color: #364346;\n  color: #fff;\n  line-height: 1;\n  overflow: hidden;\n  margin: 6px;\n  transition: opacity 100ms, background-color 100ms, box-shadow 100ms;\n}\n.pcui-boolean-input-toggle:focus {\n  outline: none;\n}\n.pcui-boolean-input-toggle::after {\n  content: " ";\n  position: absolute;\n  top: 1px;\n  left: 1px;\n  width: 12px;\n  height: 12px;\n  border-radius: 6px;\n  background-color: #5b7073;\n  transition: left 100ms ease, background-color 100ms ease;\n}\n\n.pcui-boolean-input-toggle.pcui-boolean-input-ticked {\n  border-color: #293538;\n}\n.pcui-boolean-input-toggle.pcui-boolean-input-ticked::after {\n  left: 15px;\n  background-color: #69b875;\n}\n\n.pcui-boolean-input-toggle:not(.pcui-disabled, .pcui-readonly):hover, .pcui-boolean-input-toggle:not(.pcui-disabled, .pcui-readonly):focus {\n  cursor: pointer;\n  border-color: #20292b;\n  background-color: #20292b;\n  box-shadow: 0 0 2px 1px rgba(255, 102, 0, 0.3);\n}\n.pcui-boolean-input-toggle:not(.pcui-disabled, .pcui-readonly):hover::after, .pcui-boolean-input-toggle:not(.pcui-disabled, .pcui-readonly):focus::after {\n  background-color: #d34141;\n}\n.pcui-boolean-input-toggle:not(.pcui-disabled, .pcui-readonly).pcui-boolean-input-ticked:hover, .pcui-boolean-input-toggle:not(.pcui-disabled, .pcui-readonly).pcui-boolean-input-ticked:focus {\n  border-color: #20292b;\n  background-color: #20292b;\n}\n.pcui-boolean-input-toggle:not(.pcui-disabled, .pcui-readonly).pcui-boolean-input-ticked::after {\n  background-color: #7f7;\n}\n\n.pcui-boolean-input-toggle.pcui-readonly {\n  opacity: 0.7;\n}\n\n.pcui-boolean-input-toggle.pcui-disabled {\n  opacity: 0.4;\n}\n\n.pcui-boolean-input-toggle.pcui-multiple-values::after {\n  left: 8px;\n  background-color: rgba(155, 161, 163, 0.25);\n}\n\n.pcui-label {\n  display: inline-block;\n  box-sizing: border-box;\n  margin: 6px;\n  vertical-align: middle;\n  transition: opacity 100ms;\n  color: #b1b8ba;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  -webkit-user-select: none;\n          user-select: none;\n}\n\n.pcui-label.pcui-default-mousedown {\n  -webkit-user-select: initial;\n          user-select: initial;\n}\n\n.pcui-label.pcui-multiple-values {\n  position: relative;\n  color: transparent;\n}\n.pcui-label.pcui-multiple-values::before {\n  content: "...";\n  color: #b1b8ba;\n  white-space: nowrap;\n  font-size: 12px;\n}\n\n.pcui-label.pcui-error {\n  color: #d34141;\n}\n\n.pcui-label.pcui-selectable:hover {\n  color: #f60;\n  text-decoration: underline;\n}\n\n.pcui-label[placeholder] {\n  position: relative;\n}\n.pcui-label[placeholder]::after {\n  content: attr(placeholder);\n  position: absolute;\n  top: 0;\n  right: 0;\n  padding: 0 8px;\n  color: #999;\n  pointer-events: none;\n}\n\n.pcui-button {\n  display: inline-block;\n  border: 1px solid #20292b;\n  border-radius: 2px;\n  box-sizing: border-box;\n  background-color: #2c393c;\n  color: #b1b8ba;\n  padding: 0 8px;\n  margin: 6px;\n  height: 28px;\n  line-height: 28px;\n  max-height: 100%;\n  vertical-align: middle;\n  font-size: 12px;\n  font-weight: 600;\n  text-align: center;\n  white-space: nowrap;\n  cursor: pointer;\n  transition: color 100ms, opacity 100ms, box-shadow 100ms;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n.pcui-button[data-icon]::before {\n  content: attr(data-icon);\n  font-weight: 100;\n  font-size: inherit;\n  margin-right: 6px;\n  vertical-align: middle;\n}\n.pcui-button[data-icon]:empty::before {\n  margin-right: 0;\n}\n\n.pcui-button:not(.pcui-disabled, .pcui-readonly):hover, .pcui-button:not(.pcui-disabled, .pcui-readonly):focus {\n  color: #fff;\n  background-color: #2c393c;\n  box-shadow: 0 0 2px 1px rgba(255, 102, 0, 0.3);\n}\n.pcui-button:not(.pcui-disabled, .pcui-readonly):active {\n  background-color: #20292b;\n  box-shadow: none;\n}\n\n.pcui-button.pcui-readonly {\n  opacity: 0.7;\n  cursor: default;\n}\n\n.pcui-button.pcui-disabled {\n  opacity: 0.4;\n  cursor: default;\n}\n\n.pcui-button.pcui-small {\n  height: 24px;\n  line-height: 24px;\n  font-size: 10px;\n}\n\n.pcui-code {\n  background: #20292b;\n  overflow: auto;\n}\n.pcui-code .pcui-code-inner {\n  color: #f60;\n  font-family: inconsolatamedium, Monaco, Menlo, "Ubuntu Mono", Consolas, source-code-pro, monospace;\n  font-weight: normal;\n  font-size: 10px;\n  white-space: pre;\n}\n\n.pcui-container {\n  position: relative;\n  min-width: 0;\n  min-height: 0;\n}\n\n.pcui-container.pcui-resizable > .pcui-resizable-handle {\n  position: absolute;\n  z-index: 1;\n  opacity: 0;\n  background-color: transparent;\n}\n.pcui-container.pcui-resizable > .pcui-resizable-handle:hover {\n  opacity: 1;\n}\n.pcui-container.pcui-resizable.pcui-resizable-resizing > .pcui-resizable-handle {\n  opacity: 1;\n}\n.pcui-container.pcui-resizable.pcui-resizable-left > .pcui-resizable-handle, .pcui-container.pcui-resizable.pcui-resizable-right > .pcui-resizable-handle {\n  top: 0;\n  bottom: 0;\n  width: 1px;\n  height: auto;\n  cursor: ew-resize;\n}\n.pcui-container.pcui-resizable.pcui-resizable-left > .pcui-resizable-handle {\n  left: 0;\n  border-left: 3px solid #20292b;\n}\n.pcui-container.pcui-resizable.pcui-resizable-right > .pcui-resizable-handle {\n  right: 0;\n  border-right: 3px solid #20292b;\n}\n.pcui-container.pcui-resizable.pcui-resizable-top > .pcui-resizable-handle, .pcui-container.pcui-resizable.pcui-resizable-bottom > .pcui-resizable-handle {\n  left: 0;\n  right: 0;\n  width: auto;\n  height: 1px;\n  cursor: ns-resize;\n}\n.pcui-container.pcui-resizable.pcui-resizable-top > .pcui-resizable-handle {\n  top: 0;\n  border-top: 3px solid #20292b;\n}\n.pcui-container.pcui-resizable.pcui-resizable-bottom > .pcui-resizable-handle {\n  bottom: 0;\n  border-bottom: 3px solid #20292b;\n}\n\n.pcui-container-dragged {\n  outline: 2px solid #fff;\n  box-sizing: border-box;\n  opacity: 0.7;\n  z-index: 1;\n}\n\n.pcui-container-dragged-child {\n  outline: 1px dotted #f60;\n  box-sizing: border-box;\n}\n\n.pcui-color-input {\n  position: relative;\n  display: inline-block;\n  box-sizing: border-box;\n  width: 44px;\n  height: 24px;\n  margin: 6px;\n  vertical-align: top;\n  cursor: pointer;\n  transition: opacity 100ms;\n}\n.pcui-color-input > .pcui-overlay-clickable {\n  position: fixed;\n}\n.pcui-color-input > div {\n  position: absolute;\n  inset: 0;\n}\n.pcui-color-input::after {\n  content: " ";\n  position: absolute;\n  bottom: 0;\n  right: 0;\n  width: 0;\n  height: 0;\n  background-color: transparent;\n  border-bottom: 16px solid #293538;\n  border-left: 16px solid transparent;\n}\n\n.picker-color.c-1 > .pcui-overlay-content > .pick-opacity {\n  display: block;\n}\n.picker-color.c-1 > .pcui-overlay-content > .fields > .field-r {\n  display: block;\n}\n.picker-color.c-2 > .pcui-overlay-content > .fields > .field-hex {\n  display: block;\n}\n.picker-color.c-3 > .pcui-overlay-content {\n  width: 298px;\n}\n.picker-color.c-3 > .pcui-overlay-content > .pick-rect {\n  display: block;\n}\n.picker-color.c-3 > .pcui-overlay-content > .pick-hue {\n  display: block;\n}\n.picker-color.c-3 > .pcui-overlay-content > .pick-opacity {\n  display: none;\n}\n.picker-color.c-3 > .pcui-overlay-content > .fields > .field-g,\n.picker-color.c-3 > .pcui-overlay-content > .fields > .field-b {\n  display: block;\n}\n.picker-color.c-4 > .pcui-overlay-content {\n  width: 320px;\n}\n.picker-color.c-4 > .pcui-overlay-content > .pick-opacity {\n  display: block;\n}\n.picker-color.c-4 > .pcui-overlay-content > .fields > .field-a {\n  display: block;\n}\n.picker-color > .pcui-overlay-content {\n  border: 1px solid #000;\n  width: 320px;\n  height: 162px;\n  white-space: nowrap;\n  transition: none;\n}\n.picker-color > .pcui-overlay-content > .pick-rect {\n  position: relative;\n  display: none;\n  float: left;\n  width: 146px;\n  height: 146px;\n  border: 1px solid #000;\n  box-sizing: border-box;\n  margin: 8px 0 8px 8px;\n  background-color: #f00;\n  cursor: crosshair;\n}\n.picker-color > .pcui-overlay-content > .pick-rect > .white {\n  position: absolute;\n  width: 144px;\n  height: 144px;\n  top: 0;\n  left: 0;\n  background: linear-gradient(to right, rgb(255, 255, 255) 0%, rgba(255, 255, 255, 0.01) 100%);\n}\n.picker-color > .pcui-overlay-content > .pick-rect > .black {\n  position: absolute;\n  width: 144px;\n  height: 144px;\n  top: 0;\n  left: 0;\n  background: linear-gradient(to bottom, rgba(0, 0, 0, 0.01) 0%, rgb(0, 0, 0) 100%);\n}\n.picker-color > .pcui-overlay-content > .pick-rect > .handle {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 12px;\n  height: 12px;\n  margin: -7px 0 0 -7px;\n  border: 1px solid #000;\n  outline: 1px solid #fff;\n}\n.picker-color > .pcui-overlay-content > .pick-hue {\n  position: relative;\n  display: none;\n  float: left;\n  width: 14px;\n  height: 146px;\n  margin: 8px 0 8px 8px;\n  border: 1px solid #000;\n  box-sizing: border-box;\n  cursor: crosshair;\n  background: #000;\n  background: linear-gradient(to bottom, rgb(255, 0, 0) 0%, rgb(255, 255, 0) 16.67%, rgb(0, 255, 0) 33.33%, rgb(0, 255, 255) 50%, rgb(0, 0, 255) 66.67%, rgb(255, 0, 255) 83.33%, rgb(255, 0, 0) 100%);\n}\n.picker-color > .pcui-overlay-content > .pick-hue > .handle {\n  position: absolute;\n  top: 0;\n  left: -3px;\n  width: 16px;\n  height: 4px;\n  margin: -3px 0 0;\n  border: 1px solid #000;\n  outline: 1px solid #fff;\n}\n.picker-color > .pcui-overlay-content > .pick-opacity {\n  position: relative;\n  display: none;\n  float: left;\n  width: 12px;\n  height: 144px;\n  margin: 8px 0 8px 8px;\n  border: 1px solid #000;\n  cursor: crosshair;\n  background: #000;\n  background: linear-gradient(to bottom, #fff 0%, #000 100%);\n}\n.picker-color > .pcui-overlay-content > .pick-opacity > .handle {\n  position: absolute;\n  top: 0;\n  left: -3px;\n  width: 16px;\n  height: 4px;\n  margin: -3px 0 0;\n  border: 1px solid #000;\n  outline: 1px solid #fff;\n}\n.picker-color > .pcui-overlay-content > .fields {\n  float: left;\n  width: 106px;\n  height: 154px;\n  margin: 0 0 0 8px;\n  padding: 4px;\n}\n.picker-color > .pcui-overlay-content > .fields > .field {\n  display: none;\n  width: 100px;\n}\n\n.pcui-color-input.pcui-multiple-values > div {\n  display: none;\n}\n\n.pcui-color-input.pcui-readonly {\n  cursor: default;\n}\n.pcui-color-input.pcui-readonly::after {\n  display: none;\n}\n\n.pcui-color-input.pcui-disabled {\n  opacity: 0.4;\n  cursor: default;\n}\n\n.pcui-color-input:not(.pcui-disabled, .pcui-readonly):hover, .pcui-color-input:not(.pcui-disabled, .pcui-readonly):focus {\n  box-shadow: 0 0 2px 1px rgba(255, 102, 0, 0.3);\n}\n.pcui-color-input:not(.pcui-disabled, .pcui-readonly):hover::after, .pcui-color-input:not(.pcui-disabled, .pcui-readonly):focus::after {\n  border-bottom-color: #20292b;\n}\n.pcui-color-input:not(.pcui-disabled, .pcui-readonly):active {\n  box-shadow: 0 0 0 1px rgba(255, 102, 0, 0.3);\n}\n\n.pcui-gradient {\n  display: inline-block;\n  flex: 1;\n  height: 24px;\n  box-sizing: border-box;\n  margin: 6px;\n  transition: opacity 100ms, box-shadow 100ms;\n  border: 1px solid #293538;\n  background-color: #2c393c;\n}\n.pcui-gradient > .pcui-canvas {\n  width: 100%;\n  height: 100%;\n  background-color: transparent;\n}\n\n.pcui-gradient.pcui-disabled,\n.pcui-gradient.pcui-multiple-values {\n  opacity: 0.4;\n}\n\n.pcui-gradient:not(.pcui-disabled, .pcui-readonly, .pcui-multiple-values):hover, .pcui-gradient:not(.pcui-disabled, .pcui-readonly, .pcui-multiple-values):focus {\n  cursor: pointer;\n  box-shadow: 0 0 2px 1px rgba(255, 102, 0, 0.3);\n}\n.pcui-gradient:not(.pcui-disabled, .pcui-readonly, .pcui-multiple-values):active {\n  box-shadow: 0 0 0 1px rgba(255, 102, 0, 0.3);\n}\n\n.picker-gradient > .pcui-overlay-content {\n  width: 343px;\n  height: 262px;\n}\n.picker-gradient > .pcui-overlay-content > .picker-gradient-panel {\n  height: 100%;\n  font-size: 11px;\n}\n.picker-gradient > .pcui-overlay-content > .picker-gradient-panel > .show-selected-position {\n  position: absolute;\n  width: 18px;\n  min-height: 17px !important;\n  height: 17px !important;\n  top: 14px;\n  margin-top: 0;\n  margin-bottom: 0;\n  display: flex;\n  align-items: center;\n  text-align: center;\n  color: #9ba1a3;\n  background-color: #2c393c;\n  border-radius: 2px;\n  justify-content: center;\n}\n.picker-gradient > .pcui-overlay-content > .picker-gradient-panel > .show-selected-position > .show-selected-position-input {\n  width: inherit;\n  text-align: center;\n  justify-content: center;\n  font-style: normal;\n  font-weight: 400;\n  font-size: 12px;\n  line-height: 22px;\n}\n.picker-gradient > .pcui-overlay-content > .picker-gradient-panel > .anchor-crosshair {\n  position: absolute;\n  top: 41.5px;\n  pointer-events: none;\n  background: none;\n}\n.picker-gradient > .pcui-overlay-content > .picker-gradient-panel > .anchor-crosshair > .crosshair-bar {\n  background: #293538;\n  width: 1px;\n  height: 29px;\n  position: absolute;\n  top: -34px;\n  left: 8px;\n}\n.picker-gradient > .pcui-overlay-content > .picker-gradient-panel > .anchor-crosshair > .show-crosshair-position {\n  font-style: normal;\n  font-weight: 400;\n  font-size: 12px;\n  font-family: inconsolatamedium, Monaco, Menlo, "Ubuntu Mono", Consolas, source-code-pro, monospace;\n  line-height: 22px;\n  position: absolute;\n  width: 18px;\n  min-height: 17px !important;\n  height: 17px !important;\n  top: 14px;\n  margin-top: 0;\n  margin-bottom: 0;\n  display: flex;\n  align-items: center;\n  text-align: center;\n  color: #9ba1a3;\n  background-color: #2c393c;\n  border-radius: 2px;\n  justify-content: center;\n}\n.picker-gradient > .pcui-overlay-content > .picker-gradient-panel > .picker-gradient-gradient {\n  width: 321px;\n  height: 28px;\n  display: block;\n  padding: 8px 10px 0 11px;\n  background-color: #2c393c;\n}\n.picker-gradient > .pcui-overlay-content > .picker-gradient-panel > .picker-gradient-gradient .crosshair-active {\n  cursor: none;\n}\n.picker-gradient > .pcui-overlay-content > .picker-gradient-panel > .picker-gradient-anchors {\n  width: 320px;\n  height: 28px;\n  display: block;\n  padding: 0 10px 0 11px;\n  background-color: #2c393c;\n}\n.picker-gradient > .pcui-overlay-content > .picker-gradient-panel > .picker-gradient-footer {\n  padding: 5px;\n}\n.picker-gradient > .pcui-overlay-content > .picker-gradient-panel > .picker-gradient-footer > .pcui-panel-header {\n  display: none;\n}\n.picker-gradient > .pcui-overlay-content > .picker-gradient-panel > .picker-gradient-footer > .pcui-panel-content {\n  display: flex;\n}\n.picker-gradient > .pcui-overlay-content > .picker-gradient-panel > .picker-gradient-footer > .pcui-panel-content > .pcui-label {\n  align-self: center;\n  font-family: inherit;\n  font-style: normal;\n  font-weight: 600;\n  font-size: 12px;\n  line-height: 19px;\n  align-content: center;\n  height: 20px;\n}\n.picker-gradient > .pcui-overlay-content > .picker-gradient-panel > .picker-gradient-footer > .pcui-panel-content > .pcui-select-input {\n  align-self: center;\n  width: 162px;\n  height: 22px;\n}\n.picker-gradient > .pcui-overlay-content > .picker-gradient-panel > .picker-gradient-footer > .pcui-panel-content > .pcui-numeric-input {\n  align-self: center;\n}\n.picker-gradient > .pcui-overlay-content > .picker-gradient-panel > .picker-gradient-footer > .pcui-panel-content > .pcui-button {\n  width: 22px;\n  height: 22px;\n  vertical-align: bottom;\n  margin: 0;\n  margin-right: 8px;\n  margin-top: 6px;\n}\n.picker-gradient > .pcui-overlay-content > .picker-gradient-panel > .picker-gradient-footer > .pcui-panel-content > .copy-curve-button {\n  border-color: #2c393c;\n}\n.picker-gradient > .pcui-overlay-content > .picker-gradient-panel > .picker-gradient-footer > .pcui-panel-content > .copy-curve-button::after {\n  content: "\\e351";\n  position: absolute;\n  top: 4px;\n  left: 218px;\n  font-size: 15px;\n  text-align: center;\n}\n.picker-gradient > .pcui-overlay-content > .picker-gradient-panel > .picker-gradient-footer > .pcui-panel-content > .paste-curve-button {\n  border-color: #2c393c;\n}\n.picker-gradient > .pcui-overlay-content > .picker-gradient-panel > .picker-gradient-footer > .pcui-panel-content > .paste-curve-button::after {\n  content: "\\e348";\n  position: absolute;\n  top: 4px;\n  left: 248px;\n  font-size: 15px;\n  text-align: center;\n}\n.picker-gradient > .pcui-overlay-content > .picker-gradient-panel > .picker-gradient-footer > .pcui-panel-content > .delete-curve-button {\n  border-color: #2c393c;\n}\n.picker-gradient > .pcui-overlay-content > .picker-gradient-panel > .picker-gradient-footer > .pcui-panel-content > .delete-curve-button::after {\n  content: "\\e125";\n  position: absolute;\n  top: 4px;\n  left: 278px;\n  font-size: 15px;\n  text-align: center;\n}\n.picker-gradient > .pcui-overlay-content > .picker-gradient-panel > .color-panel {\n  height: 156px;\n}\n.picker-gradient > .pcui-overlay-content > .picker-gradient-panel > .color-panel > .pcui-panel-header {\n  display: none;\n}\n.picker-gradient > .pcui-overlay-content > .picker-gradient-panel > .color-panel > .pcui-panel-content > .color-rect {\n  margin: 5px 10px 10px;\n  width: 140px;\n  height: 140px;\n  cursor: crosshair;\n  position: relative;\n  float: left;\n  border-width: 1px;\n}\n.picker-gradient > .pcui-overlay-content > .picker-gradient-panel > .color-panel > .pcui-panel-content > .color-handle {\n  position: absolute;\n  width: 14px;\n  height: 14px;\n  border: 1px solid #000;\n  outline: 1px solid #fff;\n  pointer-events: none;\n}\n.picker-gradient > .pcui-overlay-content > .picker-gradient-panel > .color-panel > .pcui-panel-content > .hue-rect,\n.picker-gradient > .pcui-overlay-content > .picker-gradient-panel > .color-panel > .pcui-panel-content > .alpha-rect {\n  margin: 5px 10px 10px 0;\n  width: 20px;\n  height: 140px;\n  cursor: crosshair;\n  border-width: 1px;\n}\n.picker-gradient > .pcui-overlay-content > .picker-gradient-panel > .color-panel > .pcui-panel-content > .hue-handle,\n.picker-gradient > .pcui-overlay-content > .picker-gradient-panel > .color-panel > .pcui-panel-content > .alpha-handle {\n  position: absolute;\n  width: 20px;\n  height: 4px;\n  border: 1px solid rgb(92, 82, 79);\n  outline: 1px solid #fff;\n  pointer-events: none;\n}\n.picker-gradient > .pcui-overlay-content > .picker-gradient-panel > .color-panel > .pcui-panel-content > .fields {\n  display: inline-block;\n  margin: 3px 0 0;\n  width: 112px;\n  height: 145px;\n  vertical-align: top;\n}\n.picker-gradient > .pcui-overlay-content > .picker-gradient-panel > .color-panel > .pcui-panel-content > .fields > .pcui-numeric-input {\n  margin: 2px 0;\n  width: 108px;\n}\n.picker-gradient > .pcui-overlay-content > .picker-gradient-panel > .color-panel > .pcui-panel-content > .fields > .pcui-text-input {\n  margin: 2px 0;\n  min-height: 22px;\n  min-width: 111px;\n}\n\n.pcui-panel {\n  background-color: #364346;\n}\n\n.pcui-panel-header {\n  background-color: #293538;\n  color: #fff;\n  font-size: 12px;\n  white-space: nowrap;\n  padding-left: 10px;\n  flex-shrink: 0;\n  align-items: center;\n}\n\n.pcui-panel-header-title {\n  overflow: hidden;\n  text-overflow: ellipsis;\n  flex: 1;\n  color: inherit;\n  font-size: inherit;\n  white-space: inherit;\n  margin: 0 auto 0 0;\n}\n\n.pcui-panel-content {\n  flex: 1;\n}\n\n.pcui-panel.pcui-collapsible {\n  transition: height 100ms, width 100ms;\n}\n.pcui-panel.pcui-collapsible > .pcui-panel-header {\n  cursor: pointer;\n}\n.pcui-panel.pcui-collapsible > .pcui-panel-header::before {\n  left: 0;\n  content: "\\e179";\n  font-size: 14px;\n  margin-right: 10px;\n  text-align: center;\n  color: #f60;\n}\n.pcui-panel.pcui-collapsible > .pcui-panel-header:hover {\n  color: #fff;\n}\n.pcui-panel.pcui-collapsible > .pcui-panel-header:hover::before {\n  color: #fff;\n}\n.pcui-panel.pcui-collapsible.pcui-panel-normal > .pcui-panel-header::before {\n  content: "\\e183";\n  font-weight: 200;\n}\n.pcui-panel.pcui-collapsible > .pcui-panel-content {\n  transition: visibility 100ms;\n}\n.pcui-panel.pcui-collapsible.pcui-collapsed {\n  overflow: hidden;\n}\n.pcui-panel.pcui-collapsible.pcui-collapsed > .pcui-panel-content {\n  visibility: hidden;\n}\n.pcui-panel.pcui-collapsible.pcui-collapsed > .pcui-panel-header::before {\n  content: "\\e180";\n}\n.pcui-panel.pcui-collapsible.pcui-collapsed.pcui-panel-normal > .pcui-panel-header::before {\n  content: "\\e184";\n}\n.pcui-panel.pcui-collapsible.pcui-collapsed.pcui-panel-horizontal > .pcui-panel-header {\n  width: 2048px;\n  -webkit-transform: rotate(90deg);\n          transform: rotate(90deg);\n  -webkit-transform-origin: 0% 100%;\n          transform-origin: 0% 100%;\n}\n.pcui-panel.pcui-collapsible.pcui-collapsed.pcui-panel-horizontal > .pcui-panel-header::before {\n  content: "\\e177";\n}\n.pcui-panel.pcui-collapsible.pcui-collapsed.pcui-panel-horizontal.pcui-panel-normal > .pcui-panel-header::before {\n  content: "\\e181";\n}\n.pcui-panel.pcui-collapsible.pcui-collapsed.pcui-panel-horizontal > .pcui-panel-content {\n  transition: none;\n}\n\n.pcui-panel.pcui-resizable.pcui-collapsible.pcui-collapsed > .pcui-resizable-handle {\n  display: none;\n}\n.pcui-panel.pcui-resizable.pcui-resizable-resizing {\n  transition: none;\n}\n.pcui-panel.pcui-resizable.pcui-resizable-resizing > .pcui-panel-content {\n  transition: none;\n}\n\n.pcui-panel-header > .pcui-panel-sortable-icon {\n  color: #5b7073;\n  transition: color 100ms;\n  flex-direction: row;\n  align-items: center;\n  margin: 0 10px 0 0;\n  height: 100%;\n}\n.pcui-panel-header > .pcui-panel-sortable-icon::before {\n  content: " ";\n  border-left: 1px solid #364346;\n  margin-right: 10px;\n  height: calc(100% - 14px);\n  flex-shrink: 0;\n}\n.pcui-panel-header > .pcui-panel-sortable-icon::after {\n  content: ".. .. ..";\n  white-space: normal;\n  width: 12px;\n  line-height: 5px;\n  overflow: hidden;\n  height: 24px;\n  font-size: 22px;\n  letter-spacing: 1px;\n  flex-shrink: 0;\n}\n\n.pcui-panel:not(.pcui-disabled, .pcui-readonly) > .pcui-panel-header > .pcui-panel-sortable-icon:hover {\n  color: #fff;\n  cursor: move;\n}\n\n.pcui-panel:not(.pcui-collapsible) > .pcui-panel-header > .pcui-panel-sortable-icon::before {\n  display: none;\n}\n\n.pcui-panel-remove {\n  align-self: flex-end;\n  order: 100;\n}\n.pcui-panel-remove::before {\n  line-height: 30px;\n}\n\n.pcui-panel.pcui-readonly .pcui-panel-remove {\n  display: none;\n}\n\n.pcui-panel-header > .pcui-button {\n  flex-shrink: 0;\n  margin: 1px;\n  background-color: transparent;\n  border: 0;\n}\n\n.pcui-panel.pcui-disabled > .pcui-panel-header {\n  background-color: #303d40;\n  color: #999;\n}\n\n.pcui-subpanel {\n  box-sizing: border-box;\n  margin: 6px;\n  border: 1px solid #293538;\n  border-radius: 2px;\n  background-color: #2c393c;\n  color: #b1b8ba;\n  font-size: 12px;\n}\n.pcui-subpanel .pcui-button {\n  background-color: #364346;\n  border-color: #293538;\n}\n.pcui-subpanel .pcui-button:not(.pcui-disabled, .pcui-readonly):hover, .pcui-subpanel .pcui-button:not(.pcui-disabled, .pcui-readonly):focus {\n  background-color: #364346;\n}\n.pcui-subpanel .pcui-button:not(.pcui-disabled, .pcui-readonly):active {\n  background-color: #2c393c;\n}\n\n.pcui-overlay {\n  width: auto;\n  height: auto;\n  inset: 0;\n  z-index: 101;\n  transition: opacity 100ms, visibility 100ms;\n  justify-content: center;\n  align-items: center;\n  position: absolute;\n}\n\n.pcui-overlay-inner {\n  position: absolute;\n  width: auto;\n  height: auto;\n  inset: 0;\n  background-color: rgba(32, 41, 43, 0.7);\n}\n\n.pcui-overlay-clickable > .pcui-overlay-inner {\n  cursor: pointer;\n}\n\n.pcui-overlay-transparent > .pcui-overlay-inner {\n  background-color: transparent;\n}\n\n.pcui-overlay-content {\n  background-color: #364346;\n  transition: width 100ms, height 100ms, margin-left 100ms, margin-top 100ms;\n  box-shadow: 7px 7px 7px rgba(0, 0, 0, 0.15);\n}\n\n.pcui-divider {\n  height: 1px;\n  background-color: #2c393c;\n  margin: 6px 0;\n}\n\n.pcui-infobox {\n  box-sizing: border-box;\n  margin: 6px;\n  padding: 12px;\n  border: 1px solid #293538;\n  border-radius: 2px;\n  background-color: #2c393c;\n  color: #b1b8ba;\n  font-size: 12px;\n}\n.pcui-infobox :first-child {\n  color: #fff;\n  margin-bottom: 2px;\n}\n.pcui-infobox[data-icon]:not(.pcui-hidden) {\n  display: grid;\n  grid: auto-flow/min-content 1fr;\n}\n.pcui-infobox[data-icon]:not(.pcui-hidden)::before {\n  content: attr(data-icon);\n  font-weight: 100;\n  font-size: 16px;\n  margin-right: 12px;\n  vertical-align: middle;\n  grid-column: 1;\n  grid-row: 1/3;\n}\n\n.pcui-select-input {\n  box-sizing: border-box;\n  margin: 6px;\n  border-radius: 2px;\n  min-width: 0;\n}\n\n.pcui-select-input-container-value {\n  background-color: #2c393c;\n  transition: box-shadow 100ms, opacity 100ms;\n}\n\n.pcui-select-input-shadow {\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  transition: box-shadow 100ms;\n  border-radius: 2px;\n  pointer-events: none;\n  z-index: 1;\n}\n\n.pcui-select-input-value {\n  margin: 0;\n  padding: 0 24px 0 8px;\n  height: 24px;\n  line-height: 24px;\n  font-size: 12px;\n  transition: background-color 100ms, color 100ms;\n}\n.pcui-select-input-value:not(.pcui-hidden) {\n  display: block;\n}\n\n.pcui-label.pcui-select-input-value {\n  margin: 0;\n}\n\n.pcui-select-input-textinput {\n  margin: 0;\n}\n\n.pcui-select-input-textinput:not(.pcui-disabled, .pcui-readonly, .pcui-error).pcui-focus, .pcui-select-input-textinput:not(.pcui-disabled, .pcui-readonly, .pcui-error):hover {\n  box-shadow: none;\n}\n\n.pcui-label.pcui-select-input-icon {\n  position: absolute;\n  right: 6px;\n  color: #5b7073;\n  pointer-events: none;\n  transition: color 100ms;\n  margin: 0;\n  height: 24px;\n  line-height: 24px;\n}\n.pcui-label.pcui-select-input-icon::after {\n  content: "\\e159";\n  vertical-align: middle;\n}\n\n.pcui-select-input-has-disabled-value .pcui-container.pcui-select-input-list .pcui-label.pcui-selected::after {\n  font-family: inherit;\n  content: "fallback";\n  color: #fff;\n  font-size: 10px;\n  position: absolute;\n  right: 6px;\n}\n\n.pcui-label.pcui-select-input-disabled-value::after {\n  content: "\\e133" !important;\n  position: absolute;\n  right: 6px;\n}\n\n.pcui-select-input.pcui-open .pcui-select-input-shadow {\n  box-shadow: 0 0 2px 1px rgba(255, 102, 0, 0.3);\n}\n.pcui-select-input.pcui-open .pcui-select-input-value {\n  color: #fff;\n  background-color: #20292b;\n}\n.pcui-select-input.pcui-open .pcui-select-input-icon::after {\n  color: #fff;\n  content: "\\e157";\n}\n\n.pcui-container.pcui-select-input-list {\n  position: absolute;\n  z-index: 1;\n  top: 100%;\n  width: 100%;\n  max-height: 200px;\n  overflow-y: auto;\n  background-color: #293538;\n}\n.pcui-container.pcui-select-input-list .pcui-label {\n  font-size: 12px;\n  height: 22px;\n  line-height: 22px;\n  padding: 0 24px 0 6px;\n  margin: 0;\n  transition: background-color 100ms, color 100ms;\n}\n.pcui-container.pcui-select-input-list .pcui-label:not(.pcui-hidden) {\n  display: block;\n}\n.pcui-container.pcui-select-input-list .pcui-label.pcui-selected {\n  color: #fff;\n}\n.pcui-container.pcui-select-input-list .pcui-label.pcui-selected::after {\n  content: "\\e133";\n  color: #5b7073;\n  position: absolute;\n  right: 6px;\n}\n\n.pcui-select-input-fit-height .pcui-select-input-list {\n  top: initial;\n  bottom: 100%;\n}\n.pcui-select-input-fit-height .pcui-select-input-shadow {\n  top: initial;\n  bottom: 0;\n}\n\n.pcui-select-input-tags:not(.pcui-select-input-tags-empty) {\n  margin-top: 1px;\n  flex-wrap: wrap;\n}\n\n.pcui-select-input-tag {\n  background-color: #293538;\n  align-items: center;\n  border-radius: 2px;\n  border: 1px solid #232e30;\n  margin-right: 2px;\n  margin-top: 2px;\n  min-width: 0;\n  height: 18px;\n}\n.pcui-select-input-tag > * {\n  margin: 0;\n  background-color: transparent;\n  border: 0;\n}\n.pcui-select-input-tag > .pcui-label {\n  padding: 0 5px 0 8px;\n}\n.pcui-select-input-tag > .pcui-button {\n  padding: 0 5px;\n  height: 18px;\n  line-height: 18px;\n  flex-shrink: 0;\n}\n.pcui-select-input-tag > .pcui-button:not(.pcui-disabled, .pcui-readonly):hover {\n  box-shadow: none;\n  color: #d34141;\n}\n\n.pcui-select-input-tag-not-everywhere > .pcui-label {\n  opacity: 0.5;\n}\n.pcui-select-input-tag-not-everywhere > .pcui-label::before {\n  content: "*";\n  margin-right: 5px;\n}\n\n.pcui-select-input:not(.pcui-disabled, .pcui-readonly) .pcui-select-input-container-value:hover .pcui-select-input-shadow {\n  box-shadow: 0 0 2px 1px rgba(255, 102, 0, 0.3);\n}\n.pcui-select-input:not(.pcui-disabled, .pcui-readonly) .pcui-select-input-container-value:hover .pcui-select-input-icon {\n  color: #9ba1a3;\n}\n.pcui-select-input:not(.pcui-disabled, .pcui-readonly).pcui-focus .pcui-select-input-shadow {\n  box-shadow: 0 0 2px 1px rgba(255, 102, 0, 0.3);\n}\n.pcui-select-input:not(.pcui-disabled, .pcui-readonly).pcui-focus .pcui-select-input-icon {\n  color: #9ba1a3;\n}\n.pcui-select-input:not(.pcui-disabled, .pcui-readonly) .pcui-select-input-value:hover {\n  color: #fff;\n  background-color: #20292b;\n  cursor: pointer;\n}\n.pcui-select-input:not(.pcui-disabled, .pcui-readonly) .pcui-select-input-list > *:hover,\n.pcui-select-input:not(.pcui-disabled, .pcui-readonly) .pcui-select-input-list > .pcui-select-input-label-highlighted {\n  background-color: #20292b;\n  color: #fff;\n  cursor: pointer;\n}\n\n.pcui-select-input-create-new > .pcui-label {\n  padding-right: 6px;\n}\n.pcui-select-input-create-new > .pcui-label:last-child {\n  flex-shrink: 0;\n  margin-left: auto;\n}\n.pcui-select-input-create-new > .pcui-label:last-child::before {\n  content: "\\e120";\n  margin-right: 6px;\n}\n\n.pcui-select-input.pcui-disabled {\n  opacity: 0.4;\n}\n\n.pcui-select-input .pcui-label.pcui-disabled {\n  opacity: 0.4;\n}\n\n.pcui-select-input.pcui-readonly .pcui-select-input-icon {\n  display: none;\n}\n.pcui-select-input.pcui-readonly.pcui-select-input-multi .pcui-select-input-container-value {\n  display: none;\n}\n.pcui-select-input.pcui-readonly.pcui-select-input-multi .pcui-select-input-tag > .pcui-button {\n  display: none;\n}\n.pcui-select-input.pcui-readonly.pcui-select-input-allow-input:not(.pcui-select-input-multi) {\n  opacity: 0.7;\n}\n.pcui-select-input.pcui-readonly.pcui-select-input-allow-input:not(.pcui-select-input-multi) .pcui-select-input-textinput::after {\n  display: none;\n}\n\n@-webkit-keyframes animation-spin {\n  from {\n    -webkit-transform: rotate(0deg);\n            transform: rotate(0deg);\n  }\n  to {\n    -webkit-transform: rotate(360deg);\n            transform: rotate(360deg);\n  }\n}\n\n@keyframes animation-spin {\n  from {\n    -webkit-transform: rotate(0deg);\n            transform: rotate(0deg);\n  }\n  to {\n    -webkit-transform: rotate(360deg);\n            transform: rotate(360deg);\n  }\n}\n.pcui-spinner {\n  display: inline-block;\n  margin: 6px;\n  vertical-align: middle;\n}\n.pcui-spinner > path {\n  -webkit-animation-name: animation-spin;\n          animation-name: animation-spin;\n  -webkit-animation-duration: 750ms;\n          animation-duration: 750ms;\n  -webkit-animation-iteration-count: infinite;\n          animation-iteration-count: infinite;\n  -webkit-animation-timing-function: linear;\n          animation-timing-function: linear;\n  -webkit-transform-origin: center;\n          transform-origin: center;\n}\n.pcui-spinner.pcui-error > path {\n  -webkit-animation: none;\n          animation: none;\n  fill: #ff2020;\n}\n.pcui-spinner.pcui-error > path.pcui-spinner-highlight {\n  fill: #ff7777;\n}\n\n.pcui-progress {\n  height: 4px;\n  background-color: #20292b;\n  transition: opacity 100ms;\n  width: 100%;\n}\n.pcui-progress .pcui-progress-inner {\n  width: 0%;\n  height: inherit;\n  background: #f60;\n  background: linear-gradient(135deg, #ff6600 0%, #ff6600 25%, #a84300 26%, #a84300 50%, #ff6600 51%, #ff6600 75%, #a84300 76%, #a84300 100%);\n  background-position: 0 0;\n  background-size: 24px 24px;\n  background-repeat: repeat;\n  -webkit-animation: pcui-progress-background 1000ms linear infinite;\n          animation: pcui-progress-background 1000ms linear infinite;\n}\n\n.pcui-progress.pcui-error .pcui-progress-inner {\n  background: #f60;\n  background: linear-gradient(135deg, #ff7777 0%, #ff7777 25%, #ff2020 26%, #ff2020 50%, #ff7777 51%, #ff7777 75%, #ff2020 76%, #ff2020 100%);\n  background-position: 0 0;\n  background-size: 24px 24px;\n  background-repeat: repeat;\n  -webkit-animation: none;\n          animation: none;\n}\n\n@-webkit-keyframes pcui-progress-background {\n  from {\n    background-position: 0 0;\n  }\n  to {\n    background-position: 24px 0;\n  }\n}\n\n@keyframes pcui-progress-background {\n  from {\n    background-position: 0 0;\n  }\n  to {\n    background-position: 24px 0;\n  }\n}\n.pcui-treeview {\n  min-width: -webkit-max-content;\n  min-width: max-content;\n}\n\n.pcui-treeview-item {\n  position: relative;\n  padding-left: 24px;\n}\n.pcui-treeview-item::before {\n  content: " ";\n  position: absolute;\n  background-color: #313e41;\n  width: 2px;\n  left: 14px;\n  top: -12px;\n  bottom: 12px;\n}\n.pcui-treeview-item:last-child::before {\n  height: 25px;\n  bottom: auto;\n}\n\n.pcui-treeview-item.pcui-disabled > .pcui-treeview-item-contents > .pcui-treeview-item-text {\n  opacity: 0.4;\n}\n\n.pcui-treeview-item-contents {\n  position: relative;\n  color: #b1b8ba;\n  margin-left: 3px;\n  border: 1px solid transparent;\n  align-items: center;\n  height: 24px;\n  box-sizing: border-box;\n}\n.pcui-treeview-item-contents:hover {\n  cursor: pointer;\n  color: #fff;\n  background-color: #2c393c;\n}\n.pcui-treeview-item-contents:hover > .pcui-treeview-item-icon {\n  color: #fff;\n}\n\n.pcui-treeview-item-icon {\n  color: #5b7073;\n  margin: 0 2px 0 0;\n  flex-shrink: 0;\n}\n.pcui-treeview-item-icon::before {\n  content: " ";\n  position: absolute;\n  background-color: #313e41;\n  left: -12px;\n  top: 10px;\n  width: 24px;\n  height: 2px;\n}\n.pcui-treeview-item-icon::after {\n  content: attr(data-icon);\n  display: inline-block;\n  vertical-align: sub;\n  width: 22px;\n  height: 22px;\n  position: relative;\n  z-index: 1;\n  text-align: center;\n}\n\n.pcui-treeview-item-text {\n  margin: 0;\n  flex-shrink: 0;\n  position: relative;\n  z-index: 1;\n  transition: opacity 100ms;\n  padding-right: 8px;\n  color: inherit;\n}\n\n.pcui-treeview-item-contents.pcui-treeview-item-selected {\n  background-color: #20292b;\n  color: #fff;\n}\n.pcui-treeview-item-contents.pcui-treeview-item-selected > .pcui-treeview-item-icon {\n  color: #fff;\n}\n\n.pcui-treeview-item:not(.pcui-treeview-item-empty) > .pcui-treeview-item-contents::before {\n  content: "\\e120";\n  position: absolute;\n  font-size: 10px;\n  font-weight: bold;\n  text-align: center;\n  color: #b1b8ba;\n  background-color: #2c393c;\n  top: 0;\n  left: -24px;\n  width: 16px;\n  height: 16px;\n  line-height: 16px;\n  margin: 3px;\n  cursor: pointer;\n  z-index: 1;\n}\n.pcui-treeview-item:not(.pcui-treeview-item-empty).pcui-treeview-item-open > .pcui-treeview-item-contents::before {\n  content: "\\e121";\n}\n\n.pcui-treeview > .pcui-treeview-item {\n  padding-left: 0;\n}\n.pcui-treeview > .pcui-treeview-item::before {\n  content: none;\n}\n.pcui-treeview > .pcui-treeview-item > .pcui-treeview-item-contents {\n  margin-left: 0;\n}\n.pcui-treeview > .pcui-treeview-item > .pcui-treeview-item-contents > .pcui-treeview-item-icon::before {\n  content: none;\n}\n.pcui-treeview > .pcui-treeview-item > .pcui-treeview-item-contents > .pcui-treeview-item-icon::after {\n  margin-left: 0;\n}\n.pcui-treeview > .pcui-treeview-item > .pcui-treeview-item {\n  padding-left: 21px;\n}\n.pcui-treeview > .pcui-treeview-item > .pcui-treeview-item::before {\n  left: 11px;\n}\n\n.pcui-treeview:not(.pcui-treeview-filtering) > .pcui-treeview-item .pcui-treeview-item:not(.pcui-treeview-item-open, .pcui-treeview-item-empty) > .pcui-treeview-item {\n  display: none;\n}\n\n.pcui-treeview-item-dragged > .pcui-treeview-item-contents {\n  background-color: rgba(44, 57, 60, 0.5);\n  color: #fff;\n}\n\n.pcui-treeview-drag-handle {\n  position: fixed;\n  width: 32px;\n  height: 20px;\n  top: 0;\n  bottom: 0;\n  z-index: 4;\n  margin-top: -1px;\n  margin-left: -1px;\n}\n.pcui-treeview-drag-handle.before {\n  border-top: 4px solid #f60;\n  padding-right: 8px;\n  height: 24px;\n}\n.pcui-treeview-drag-handle.inside {\n  border: 4px solid #f60;\n}\n.pcui-treeview-drag-handle.after {\n  border-bottom: 4px solid #f60;\n  padding-right: 8px;\n  height: 24px;\n}\n\n.pcui-treeview-item-contents::after {\n  content: " ";\n  display: block;\n  clear: both;\n}\n\n.pcui-treeview-item.pcui-treeview-item-rename > .pcui-treeview-item-contents > .pcui-treeview-item-text {\n  display: none;\n}\n.pcui-treeview-item.pcui-treeview-item-rename > .pcui-treeview-item-contents > .pcui-text-input {\n  margin: 0;\n  flex-grow: 1;\n  box-shadow: none !important;\n  border: 0;\n  background-color: transparent;\n}\n.pcui-treeview-item.pcui-treeview-item-rename > .pcui-treeview-item-contents > .pcui-text-input > input {\n  font-family: inherit;\n  font-size: 14px;\n  padding: 0;\n}\n\n.pcui-treeview.pcui-treeview-filtering .pcui-treeview-item {\n  padding-left: 0;\n}\n.pcui-treeview.pcui-treeview-filtering .pcui-treeview-item::before {\n  display: none;\n}\n.pcui-treeview.pcui-treeview-filtering .pcui-treeview-item:not(.pcui-treeview-filtering-result) > .pcui-treeview-item-contents {\n  display: none;\n}\n.pcui-treeview.pcui-treeview-filtering .pcui-treeview-item-contents {\n  margin-left: 0;\n}\n\n.pcui-treeview-filtering-result .pcui-treeview-item-contents::before,\n.pcui-treeview-filtering-result .pcui-treeview-item-icon::before {\n  display: none;\n}\n\n.pcui-label-group {\n  align-items: center;\n  flex-flow: row nowrap;\n  margin: 6px;\n}\n.pcui-label-group > .pcui-label:first-child {\n  width: 100px;\n  flex-shrink: 0;\n  margin: 0;\n}\n.pcui-label-group > .pcui-element:not(:first-child) {\n  margin: 0 0 0 6px;\n}\n.pcui-label-group > .pcui-element:nth-child(2):not(.pcui-not-flexible) {\n  flex: 1;\n}\n.pcui-label-group > .pcui-vector-input > .pcui-numeric-input {\n  margin-top: 0;\n  margin-bottom: 0;\n}\n\n.pcui-label-group-align-top > .pcui-label:first-child {\n  align-self: flex-start;\n  margin-top: 4px;\n}\n\n.pcui-label-group.pcui-disabled > .pcui-label:first-child {\n  opacity: 0.4;\n}\n\n.pcui-gridview {\n  flex-flow: row wrap;\n  align-content: flex-start;\n}\n\n.pcui-gridview-vertical {\n  flex-direction: column;\n  align-content: flex-start;\n}\n\n.pcui-gridview-item {\n  box-sizing: border-box;\n  justify-content: center;\n  align-items: center;\n  flex-shrink: 0;\n  width: 104px;\n}\n.pcui-gridview-item:not(.pcui-disabled) {\n  cursor: pointer;\n}\n.pcui-gridview-item:not(.pcui-disabled):not(.pcui-gridview-item-selected, .pcui-gridview-radiobtn, .pcui-gridview-radiobtn-selected):hover {\n  background-color: #293538;\n}\n\n.pcui-gridview-item-selected {\n  background-color: #20292b;\n}\n\n.pcui-gridview-item-text {\n  max-width: 100px;\n  font-size: 12px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  margin: 0;\n  padding: 0 2px;\n}\n\n.pcui-gridview-radio-container {\n  box-sizing: border-box;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  flex-shrink: 0;\n  width: 104px;\n}\n.pcui-gridview-radio-container :not(.pcui-disabled) {\n  cursor: pointer;\n}\n\n.pcui-menu {\n  position: absolute;\n  z-index: 401;\n  inset: 0;\n  width: auto;\n  height: auto;\n}\n\n.pcui-menu-items {\n  position: fixed;\n  top: 0;\n  left: 0;\n}\n\n.pcui-menu-item {\n  position: relative;\n  background-color: #20292b;\n  width: auto;\n}\n\n.pcui-menu-item-children {\n  box-shadow: 0 0 8px rgba(0, 0, 0, 0.6);\n  position: absolute;\n  z-index: 1;\n  left: 100%;\n  top: 0;\n  opacity: 0;\n  transition: opacity 100ms, visibility 100ms;\n  visibility: hidden;\n}\n\n.pcui-menu-item:hover > .pcui-menu-item-children {\n  opacity: 1;\n  visibility: visible;\n}\n\n.pcui-menu-item-has-children > .pcui-menu-item-content > .pcui-label {\n  padding-right: 32px;\n}\n.pcui-menu-item-has-children > .pcui-menu-item-content > .pcui-label::after {\n  content: "\\e160";\n  position: absolute;\n  right: 6px;\n}\n\n.pcui-menu-item-content {\n  min-width: 158px;\n  color: #9ba1a3;\n  border-bottom: 1px solid #263134;\n  cursor: pointer;\n}\n.pcui-menu-item-content:hover {\n  color: #fff;\n  background-color: #5b7073;\n}\n.pcui-menu-item-content > .pcui-label {\n  transition: none;\n}\n\n.pcui-menu-item:last-child > .pcui-menu-item-content {\n  border-bottom: none;\n}\n\n.pcui-menu-item-content > .pcui-label {\n  color: inherit;\n}\n.pcui-menu-item-content > .pcui-label[data-icon]::before {\n  content: attr(data-icon);\n  font-weight: 100;\n  font-size: inherit;\n  margin-right: 6px;\n  vertical-align: middle;\n}\n\n.pcui-menu-item.pcui-disabled .pcui-menu-item-content {\n  cursor: default;\n}\n.pcui-menu-item.pcui-disabled .pcui-menu-item-content:hover {\n  color: #9ba1a3;\n  background-color: transparent;\n}\n.pcui-menu-item.pcui-disabled .pcui-menu-item-content > .pcui-label {\n  cursor: default;\n  opacity: 0.4;\n}\n\n.pcui-radio-button {\n  display: inline-block;\n  position: relative;\n  background-color: #293538;\n  color: #fff;\n  width: 17px;\n  height: 17px;\n  border-radius: 50%;\n  overflow: hidden;\n  margin: 6px;\n  transition: opacity 100ms, background-color 100ms, box-shadow 100ms;\n}\n.pcui-radio-button::before {\n  content: "";\n  position: absolute;\n  display: block;\n  left: 50%;\n  top: 50%;\n  width: 16px;\n  min-width: 16px;\n  height: 16px;\n  -webkit-transform: translate(-50%, -50%);\n          transform: translate(-50%, -50%);\n  border-radius: 50%;\n  background-color: #293538;\n}\n.pcui-radio-button::after {\n  position: absolute;\n  left: 50%;\n  top: 50%;\n  width: 11px;\n  min-width: 11px;\n  height: 11px;\n  -webkit-transform: translate(-50%, -50%);\n          transform: translate(-50%, -50%);\n  border-radius: 50%;\n  background-color: white;\n}\n\n.pcui-radio-button-selected::before {\n  width: 16px;\n  min-width: 16px;\n  height: 16px;\n  box-sizing: border-box;\n  border: 1px solid white;\n}\n.pcui-radio-button-selected::after {\n  content: "";\n  display: block;\n}\n\n.pcui-radio-button.pcui-readonly {\n  opacity: 0.7;\n}\n\n.pcui-radio-button.pcui-disabled {\n  opacity: 0.4;\n}\n\n.pcui-radio-button:not(.pcui-disabled, .pcui-readonly):hover {\n  cursor: pointer;\n}\n.pcui-radio-button:not(.pcui-disabled, .pcui-readonly):hover::before {\n  background-color: #20292b;\n}\n\n.pcui-array-input {\n  margin: 6px;\n  min-width: 0;\n}\n.pcui-array-input > .pcui-numeric-input {\n  margin: 0 0 6px 0;\n}\n\n.pcui-array-input.pcui-array-empty > .pcui-numeric-input {\n  margin: 0;\n}\n\n.pcui-array-input-item > * {\n  margin-top: 1px;\n  margin-bottom: 1px;\n}\n.pcui-array-input-item > *:first-child:not(.pcui-not-flexible, .pcui-panel-header) {\n  flex: 1;\n}\n.pcui-array-input-item > .pcui-button {\n  margin-left: -3px;\n  margin-right: 0;\n  background-color: transparent;\n  border: 0;\n}\n\n.pcui-array-input-item-asset > .pcui-button {\n  margin-top: 36px;\n}\n\n.pcui-array-input.pcui-readonly .pcui-array-input-item-delete {\n  display: none;\n}');var fa,ga,va,ya,_a,wa,ba={exports:{}},xa={exports:{}},Ca={};function Sa(){return ga||(ga=1,xa.exports=function(){if(fa)return Ca;fa=1;var e="function"==typeof Symbol&&Symbol.for,t=e?Symbol.for("react.element"):60103,n=e?Symbol.for("react.portal"):60106,i=e?Symbol.for("react.fragment"):60107,a=e?Symbol.for("react.strict_mode"):60108,s=e?Symbol.for("react.profiler"):60114,r=e?Symbol.for("react.provider"):60109,o=e?Symbol.for("react.context"):60110,l=e?Symbol.for("react.async_mode"):60111,c=e?Symbol.for("react.concurrent_mode"):60111,h=e?Symbol.for("react.forward_ref"):60112,p=e?Symbol.for("react.suspense"):60113,d=e?Symbol.for("react.suspense_list"):60120,u=e?Symbol.for("react.memo"):60115,m=e?Symbol.for("react.lazy"):60116,f=e?Symbol.for("react.block"):60121,g=e?Symbol.for("react.fundamental"):60117,v=e?Symbol.for("react.responder"):60118,y=e?Symbol.for("react.scope"):60119;function _(e){if("object"==typeof e&&null!==e){var d=e.$$typeof;switch(d){case t:switch(e=e.type){case l:case c:case i:case s:case a:case p:return e;default:switch(e=e&&e.$$typeof){case o:case h:case m:case u:case r:return e;default:return d}}case n:return d}}}function w(e){return _(e)===c}return Ca.AsyncMode=l,Ca.ConcurrentMode=c,Ca.ContextConsumer=o,Ca.ContextProvider=r,Ca.Element=t,Ca.ForwardRef=h,Ca.Fragment=i,Ca.Lazy=m,Ca.Memo=u,Ca.Portal=n,Ca.Profiler=s,Ca.StrictMode=a,Ca.Suspense=p,Ca.isAsyncMode=function(e){return w(e)||_(e)===l},Ca.isConcurrentMode=w,Ca.isContextConsumer=function(e){return _(e)===o},Ca.isContextProvider=function(e){return _(e)===r},Ca.isElement=function(e){return"object"==typeof e&&null!==e&&e.$$typeof===t},Ca.isForwardRef=function(e){return _(e)===h},Ca.isFragment=function(e){return _(e)===i},Ca.isLazy=function(e){return _(e)===m},Ca.isMemo=function(e){return _(e)===u},Ca.isPortal=function(e){return _(e)===n},Ca.isProfiler=function(e){return _(e)===s},Ca.isStrictMode=function(e){return _(e)===a},Ca.isSuspense=function(e){return _(e)===p},Ca.isValidElementType=function(e){return"string"==typeof e||"function"==typeof e||e===i||e===c||e===s||e===a||e===p||e===d||"object"==typeof e&&null!==e&&(e.$$typeof===m||e.$$typeof===u||e.$$typeof===r||e.$$typeof===o||e.$$typeof===h||e.$$typeof===g||e.$$typeof===v||e.$$typeof===y||e.$$typeof===f)},Ca.typeOf=_,Ca}()),xa.exports}function Ea(){return Ea=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var i in n)Object.prototype.hasOwnProperty.call(n,i)&&(e[i]=n[i])}return e},Ea.apply(this,arguments)}function Ta(e){return"/"===e.charAt(0)}function Aa(e,t){for(var n=t,i=n+1,a=e.length;i<a;n+=1,i+=1)e[n]=e[i];e.pop()}function La(e){return e.valueOf?e.valueOf():Object.prototype.valueOf.call(e)}function Ma(e,t){if(e===t)return!0;if(null==e||null==t)return!1;if(Array.isArray(e))return Array.isArray(t)&&e.length===t.length&&e.every((function(e,n){return Ma(e,t[n])}));if("object"==typeof e||"object"==typeof t){var n=La(e),i=La(t);return n!==e||i!==t?Ma(n,i):Object.keys(Object.assign({},e,t)).every((function(n){return Ma(e[n],t[n])}))}return!1}ba.exports=function(){if(wa)return _a;wa=1;var e=ya?va:(ya=1,va="SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED");function t(){}function n(){}return n.resetWarningCache=t,_a=function(){function i(t,n,i,a,s,r){if(r!==e){var o=new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");throw o.name="Invariant Violation",o}}function a(){return i}i.isRequired=i;var s={array:i,bigint:i,bool:i,func:i,number:i,object:i,string:i,symbol:i,any:i,arrayOf:a,element:i,elementType:i,instanceOf:a,node:i,objectOf:a,oneOf:a,oneOfType:a,shape:a,exact:a,checkPropTypes:n,resetWarningCache:t};return s.PropTypes=s,s}}()();var Pa="Invariant failed";function Oa(e,t){if(!e)throw new Error(Pa)}function Ia(e){return"/"===e.charAt(0)?e:"/"+e}function Ra(e){return"/"===e.charAt(0)?e.substr(1):e}function Da(e,t){return function(e,t){return 0===e.toLowerCase().indexOf(t.toLowerCase())&&-1!=="/?#".indexOf(e.charAt(t.length))}(e,t)?e.substr(t.length):e}function ka(e){return"/"===e.charAt(e.length-1)?e.slice(0,-1):e}function Fa(e){var t=e.pathname,n=e.search,i=e.hash,a=t||"/";return n&&"?"!==n&&(a+="?"===n.charAt(0)?n:"?"+n),i&&"#"!==i&&(a+="#"===i.charAt(0)?i:"#"+i),a}function Ba(e,t,n,i){var a;"string"==typeof e?(a=function(e){var t=e||"/",n="",i="",a=t.indexOf("#");-1!==a&&(i=t.substr(a),t=t.substr(0,a));var s=t.indexOf("?");return-1!==s&&(n=t.substr(s),t=t.substr(0,s)),{pathname:t,search:"?"===n?"":n,hash:"#"===i?"":i}}(e),a.state=t):(void 0===(a=Ea({},e)).pathname&&(a.pathname=""),a.search?"?"!==a.search.charAt(0)&&(a.search="?"+a.search):a.search="",a.hash?"#"!==a.hash.charAt(0)&&(a.hash="#"+a.hash):a.hash="",void 0!==t&&void 0===a.state&&(a.state=t));try{a.pathname=decodeURI(a.pathname)}catch(e){throw e instanceof URIError?new URIError('Pathname "'+a.pathname+'" could not be decoded. This is likely caused by an invalid percent-encoding.'):e}return n&&(a.key=n),i?a.pathname?"/"!==a.pathname.charAt(0)&&(a.pathname=function(e,t){void 0===t&&(t="");var n,i=e&&e.split("/")||[],a=t&&t.split("/")||[],s=e&&Ta(e),r=t&&Ta(t),o=s||r;if(e&&Ta(e)?a=i:i.length&&(a.pop(),a=a.concat(i)),!a.length)return"/";if(a.length){var l=a[a.length-1];n="."===l||".."===l||""===l}else n=!1;for(var c=0,h=a.length;h>=0;h--){var p=a[h];"."===p?Aa(a,h):".."===p?(Aa(a,h),c++):c&&(Aa(a,h),c--)}if(!o)for(;c--;c)a.unshift("..");!o||""===a[0]||a[0]&&Ta(a[0])||a.unshift("");var d=a.join("/");return n&&"/"!==d.substr(-1)&&(d+="/"),d}(a.pathname,i.pathname)):a.pathname=i.pathname:a.pathname||(a.pathname="/"),a}function Na(e,t){return e.pathname===t.pathname&&e.search===t.search&&e.hash===t.hash&&e.key===t.key&&Ma(e.state,t.state)}function Ua(){var e=null;var t=[];return{setPrompt:function(t){return e=t,function(){e===t&&(e=null)}},confirmTransitionTo:function(t,n,i,a){if(null!=e){var s="function"==typeof e?e(t,n):e;"string"==typeof s?"function"==typeof i?i(s,a):a(!0):a(!1!==s)}else a(!0)},appendListener:function(e){var n=!0;function i(){n&&e.apply(void 0,arguments)}return t.push(i),function(){n=!1,t=t.filter((function(e){return e!==i}))}},notifyListeners:function(){for(var e=arguments.length,n=new Array(e),i=0;i<e;i++)n[i]=arguments[i];t.forEach((function(e){return e.apply(void 0,n)}))}}}var za=!("undefined"==typeof window||!window.document||!window.document.createElement);function Va(e,t){t(window.confirm(e))}var Ha="hashchange",Ga={hashbang:{encodePath:function(e){return"!"===e.charAt(0)?e:"!/"+Ra(e)},decodePath:function(e){return"!"===e.charAt(0)?e.substr(1):e}},noslash:{encodePath:Ra,decodePath:Ia},slash:{encodePath:Ia,decodePath:Ia}};function Wa(e){var t=e.indexOf("#");return-1===t?e:e.slice(0,t)}function ja(){var e=window.location.href,t=e.indexOf("#");return-1===t?"":e.substring(t+1)}function Xa(e){window.location.replace(Wa(window.location.href)+"#"+e)}function Ya(e){void 0===e&&(e={}),za||Oa(!1);var t=window.history;window.navigator.userAgent.indexOf("Firefox");var n=e,i=n.getUserConfirmation,a=void 0===i?Va:i,s=n.hashType,r=void 0===s?"slash":s,o=e.basename?ka(Ia(e.basename)):"",l=Ga[r],c=l.encodePath,h=l.decodePath;function p(){var e=h(ja());return o&&(e=Da(e,o)),Ba(e)}var d=Ua();function u(e){Ea(E,e),E.length=t.length,d.notifyListeners(E.location,E.action)}var m=!1,f=null;function g(){var e=ja(),t=c(e);if(e!==t)Xa(t);else{var n=p(),i=E.location;if(!m&&function(e,t){return e.pathname===t.pathname&&e.search===t.search&&e.hash===t.hash}(i,n))return;if(f===Fa(n))return;f=null,function(e){if(m)m=!1,u();else{var t="POP";d.confirmTransitionTo(e,t,a,(function(n){n?u({action:t,location:e}):function(e){var t=E.location,n=w.lastIndexOf(Fa(t));-1===n&&(n=0);var i=w.lastIndexOf(Fa(e));-1===i&&(i=0);var a=n-i;a&&(m=!0,b(a))}(e)}))}}(n)}}var v=ja(),y=c(v);v!==y&&Xa(y);var _=p(),w=[Fa(_)];function b(e){t.go(e)}var x=0;function C(e){1===(x+=e)&&1===e?window.addEventListener(Ha,g):0===x&&window.removeEventListener(Ha,g)}var S=!1;var E={length:t.length,action:"POP",location:_,createHref:function(e){var t=document.querySelector("base"),n="";return t&&t.getAttribute("href")&&(n=Wa(window.location.href)),n+"#"+c(o+Fa(e))},push:function(e,t){var n="PUSH",i=Ba(e,void 0,void 0,E.location);d.confirmTransitionTo(i,n,a,(function(e){if(e){var t=Fa(i),a=c(o+t);if(ja()!==a){f=t,function(e){window.location.hash=e}(a);var s=w.lastIndexOf(Fa(E.location)),r=w.slice(0,s+1);r.push(t),w=r,u({action:n,location:i})}else u()}}))},replace:function(e,t){var n="REPLACE",i=Ba(e,void 0,void 0,E.location);d.confirmTransitionTo(i,n,a,(function(e){if(e){var t=Fa(i),a=c(o+t);ja()!==a&&(f=t,Xa(a));var s=w.indexOf(Fa(E.location));-1!==s&&(w[s]=t),u({action:n,location:i})}}))},go:b,goBack:function(){b(-1)},goForward:function(){b(1)},block:function(e){void 0===e&&(e=!1);var t=d.setPrompt(e);return S||(C(1),S=!0),function(){return S&&(S=!1,C(-1)),t()}},listen:function(e){var t=d.appendListener(e);return C(1),function(){C(-1),t()}}};return E}var qa={exports:{}},Ka=Array.isArray||function(e){return"[object Array]"==Object.prototype.toString.call(e)},Za=Ka;qa.exports=rs,qa.exports.parse=Ja,qa.exports.compile=function(e,t){return es(Ja(e,t),t)},qa.exports.tokensToFunction=es,qa.exports.tokensToRegExp=ss;var Qa=new RegExp(["(\\\\.)","([\\/.])?(?:(?:\\:(\\w+)(?:\\(((?:\\\\.|[^\\\\()])+)\\))?|\\(((?:\\\\.|[^\\\\()])+)\\))([+*?])?|(\\*))"].join("|"),"g");function Ja(e,t){for(var n,i=[],a=0,s=0,r="",o=t&&t.delimiter||"/";null!=(n=Qa.exec(e));){var l=n[0],c=n[1],h=n.index;if(r+=e.slice(s,h),s=h+l.length,c)r+=c[1];else{var p=e[s],d=n[2],u=n[3],m=n[4],f=n[5],g=n[6],v=n[7];r&&(i.push(r),r="");var y=null!=d&&null!=p&&p!==d,_="+"===g||"*"===g,w="?"===g||"*"===g,b=n[2]||o,x=m||f;i.push({name:u||a++,prefix:d||"",delimiter:b,optional:w,repeat:_,partial:y,asterisk:!!v,pattern:x?ns(x):v?".*":"[^"+ts(b)+"]+?"})}}return s<e.length&&(r+=e.substr(s)),r&&i.push(r),i}function $a(e){return encodeURI(e).replace(/[\/?#]/g,(function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()}))}function es(e,t){for(var n=new Array(e.length),i=0;i<e.length;i++)"object"==typeof e[i]&&(n[i]=new RegExp("^(?:"+e[i].pattern+")$",as(t)));return function(t,i){for(var a="",s=t||{},r=(i||{}).pretty?$a:encodeURIComponent,o=0;o<e.length;o++){var l=e[o];if("string"!=typeof l){var c,h=s[l.name];if(null==h){if(l.optional){l.partial&&(a+=l.prefix);continue}throw new TypeError('Expected "'+l.name+'" to be defined')}if(Za(h)){if(!l.repeat)throw new TypeError('Expected "'+l.name+'" to not repeat, but received `'+JSON.stringify(h)+"`");if(0===h.length){if(l.optional)continue;throw new TypeError('Expected "'+l.name+'" to not be empty')}for(var p=0;p<h.length;p++){if(c=r(h[p]),!n[o].test(c))throw new TypeError('Expected all "'+l.name+'" to match "'+l.pattern+'", but received `'+JSON.stringify(c)+"`");a+=(0===p?l.prefix:l.delimiter)+c}}else{if(c=l.asterisk?encodeURI(h).replace(/[?#]/g,(function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()})):r(h),!n[o].test(c))throw new TypeError('Expected "'+l.name+'" to match "'+l.pattern+'", but received "'+c+'"');a+=l.prefix+c}}else a+=l}return a}}function ts(e){return e.replace(/([.+*?=^!:${}()[\]|\/\\])/g,"\\$1")}function ns(e){return e.replace(/([=!:$\/()])/g,"\\$1")}function is(e,t){return e.keys=t,e}function as(e){return e&&e.sensitive?"":"i"}function ss(e,t,n){Za(t)||(n=t||n,t=[]);for(var i=(n=n||{}).strict,a=!1!==n.end,s="",r=0;r<e.length;r++){var o=e[r];if("string"==typeof o)s+=ts(o);else{var l=ts(o.prefix),c="(?:"+o.pattern+")";t.push(o),o.repeat&&(c+="(?:"+l+c+")*"),s+=c=o.optional?o.partial?l+"("+c+")?":"(?:"+l+"("+c+"))?":l+"("+c+")"}}var h=ts(n.delimiter||"/"),p=s.slice(-h.length)===h;return i||(s=(p?s.slice(0,-h.length):s)+"(?:"+h+"(?=$))?"),s+=a?"$":i&&p?"":"(?="+h+"|$)",is(new RegExp("^"+s,as(n)),t)}function rs(e,t,n){return Za(t)||(n=t||n,t=[]),n=n||{},e instanceof RegExp?function(e,t){var n=e.source.match(/\((?!\?)/g);if(n)for(var i=0;i<n.length;i++)t.push({name:i,prefix:null,delimiter:null,optional:!1,repeat:!1,partial:!1,asterisk:!1,pattern:null});return is(e,t)}(e,t):Za(e)?function(e,t,n){for(var i=[],a=0;a<e.length;a++)i.push(rs(e[a],t,n).source);return is(new RegExp("(?:"+i.join("|")+")",as(n)),t)}(e,t,n):function(e,t,n){return ss(Ja(e,n),t,n)}(e,t,n)}function os(e,t){if(null==e)return{};var n,i,a={},s=Object.keys(e);for(i=0;i<s.length;i++)n=s[i],t.indexOf(n)>=0||(a[n]=e[n]);return a}Sa();var ls=Sa(),cs={childContextTypes:!0,contextType:!0,contextTypes:!0,defaultProps:!0,displayName:!0,getDefaultProps:!0,getDerivedStateFromError:!0,getDerivedStateFromProps:!0,mixins:!0,propTypes:!0,type:!0},hs={name:!0,length:!0,prototype:!0,caller:!0,callee:!0,arguments:!0,arity:!0},ps={$$typeof:!0,compare:!0,defaultProps:!0,displayName:!0,propTypes:!0,type:!0},ds={};function us(e){return ls.isMemo(e)?ps:ds[e.$$typeof]||cs}ds[ls.ForwardRef]={$$typeof:!0,render:!0,defaultProps:!0,displayName:!0,propTypes:!0},ds[ls.Memo]=ps;var ms=Object.defineProperty,fs=Object.getOwnPropertyNames,gs=Object.getOwnPropertySymbols,vs=Object.getOwnPropertyDescriptor,ys=Object.getPrototypeOf,_s=Object.prototype;var ws=function e(t,n,i){if("string"!=typeof n){if(_s){var a=ys(n);a&&a!==_s&&e(t,a,i)}var s=fs(n);gs&&(s=s.concat(gs(n)));for(var r=us(t),o=us(n),l=0;l<s.length;++l){var c=s[l];if(!(hs[c]||i&&i[c]||o&&o[c]||r&&r[c])){var h=vs(n,c);try{ms(t,c,h)}catch(e){}}}}return t},bs=1073741823,xs="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof window?window:"undefined"!=typeof global?global:{};var Cs=p.createContext||function(e,t){var n,i,a,s="__create-react-context-"+((xs[a="__global_unique_id__"]=(xs[a]||0)+1)+"__"),r=function(e){function n(){for(var t,n,i,a=arguments.length,s=new Array(a),r=0;r<a;r++)s[r]=arguments[r];return(t=e.call.apply(e,[this].concat(s))||this).emitter=(n=t.props.value,i=[],{on:function(e){i.push(e)},off:function(e){i=i.filter((function(t){return t!==e}))},get:function(){return n},set:function(e,t){n=e,i.forEach((function(e){return e(n,t)}))}}),t}ma(n,e);var i=n.prototype;return i.getChildContext=function(){var e;return(e={})[s]=this.emitter,e},i.componentWillReceiveProps=function(e){if(this.props.value!==e.value){var n,i=this.props.value,a=e.value;((s=i)===(r=a)?0!==s||1/s==1/r:s!=s&&r!=r)?n=0:(n="function"==typeof t?t(i,a):bs,0!==(n|=0)&&this.emitter.set(e.value,n))}var s,r},i.render=function(){return this.props.children},n}(p.Component);r.childContextTypes=((n={})[s]=ba.exports.object.isRequired,n);var o=function(t){function n(){for(var e,n=arguments.length,i=new Array(n),a=0;a<n;a++)i[a]=arguments[a];return(e=t.call.apply(t,[this].concat(i))||this).observedBits=void 0,e.state={value:e.getValue()},e.onUpdate=function(t,n){0!=((0|e.observedBits)&n)&&e.setState({value:e.getValue()})},e}ma(n,t);var i=n.prototype;return i.componentWillReceiveProps=function(e){var t=e.observedBits;this.observedBits=null==t?bs:t},i.componentDidMount=function(){this.context[s]&&this.context[s].on(this.onUpdate);var e=this.props.observedBits;this.observedBits=null==e?bs:e},i.componentWillUnmount=function(){this.context[s]&&this.context[s].off(this.onUpdate)},i.getValue=function(){return this.context[s]?this.context[s].get():e},i.render=function(){return(e=this.props.children,Array.isArray(e)?e[0]:e)(this.state.value);var e},n}(p.Component);return o.contextTypes=((i={})[s]=ba.exports.object,i),{Provider:r,Consumer:o}},Ss=function(e){var t=Cs();return t.displayName=e,t},Es=Ss("Router-History"),Ts=Ss("Router"),As=function(e){function t(t){var n;return(n=e.call(this,t)||this).state={location:t.history.location},n._isMounted=!1,n._pendingLocation=null,t.staticContext||(n.unlisten=t.history.listen((function(e){n._pendingLocation=e}))),n}ma(t,e),t.computeRootMatch=function(e){return{path:"/",url:"/",params:{},isExact:"/"===e}};var n=t.prototype;return n.componentDidMount=function(){var e=this;this._isMounted=!0,this.unlisten&&this.unlisten(),this.props.staticContext||(this.unlisten=this.props.history.listen((function(t){e._isMounted&&e.setState({location:t})}))),this._pendingLocation&&this.setState({location:this._pendingLocation})},n.componentWillUnmount=function(){this.unlisten&&(this.unlisten(),this._isMounted=!1,this._pendingLocation=null)},n.render=function(){return p.createElement(Ts.Provider,{value:{history:this.props.history,location:this.state.location,match:t.computeRootMatch(this.state.location.pathname),staticContext:this.props.staticContext}},p.createElement(Es.Provider,{children:this.props.children||null,value:this.props.history}))},t}(p.Component);p.Component;var Ls=function(e){function t(){return e.apply(this,arguments)||this}ma(t,e);var n=t.prototype;return n.componentDidMount=function(){this.props.onMount&&this.props.onMount.call(this,this)},n.componentDidUpdate=function(e){this.props.onUpdate&&this.props.onUpdate.call(this,this,e)},n.componentWillUnmount=function(){this.props.onUnmount&&this.props.onUnmount.call(this,this)},n.render=function(){return null},t}(p.Component),Ms={},Ps=1e4,Os=0;function Is(e,t){return void 0===e&&(e="/"),void 0===t&&(t={}),"/"===e?e:function(e){if(Ms[e])return Ms[e];var t=qa.exports.compile(e);return Os<Ps&&(Ms[e]=t,Os++),t}(e)(t,{pretty:!0})}function Rs(e){var t=e.computedMatch,n=e.to,i=e.push,a=void 0!==i&&i;return p.createElement(Ts.Consumer,null,(function(e){e||Oa(!1);var i=e.history,s=e.staticContext,r=a?i.push:i.replace,o=Ba(t?"string"==typeof n?Is(n,t.params):Ea({},n,{pathname:Is(n.pathname,t.params)}):n);return s?(r(o),null):p.createElement(Ls,{onMount:function(){r(o)},onUpdate:function(e,t){var n=Ba(t.to);Na(n,Ea({},o,{key:n.key}))||r(o)},to:n})}))}var Ds={},ks=1e4,Fs=0;function Bs(e,t){void 0===t&&(t={}),("string"==typeof t||Array.isArray(t))&&(t={path:t});var n=t,i=n.path,a=n.exact,s=void 0!==a&&a,r=n.strict,o=void 0!==r&&r,l=n.sensitive,c=void 0!==l&&l;return[].concat(i).reduce((function(t,n){if(!n&&""!==n)return null;if(t)return t;var i=function(e,t){var n=""+t.end+t.strict+t.sensitive,i=Ds[n]||(Ds[n]={});if(i[e])return i[e];var a=[],s={regexp:qa.exports(e,a,t),keys:a};return Fs<ks&&(i[e]=s,Fs++),s}(n,{end:s,strict:o,sensitive:c}),a=i.regexp,r=i.keys,l=a.exec(e);if(!l)return null;var h=l[0],p=l.slice(1),d=e===h;return s&&!d?null:{path:n,url:"/"===n&&""===h?"/":h,isExact:d,params:r.reduce((function(e,t,n){return e[t.name]=p[n],e}),{})}}),null)}var Ns=function(e){function t(){return e.apply(this,arguments)||this}return ma(t,e),t.prototype.render=function(){var e=this;return p.createElement(Ts.Consumer,null,(function(t){t||Oa(!1);var n=e.props.location||t.location,i=Ea({},t,{location:n,match:e.props.computedMatch?e.props.computedMatch:e.props.path?Bs(n.pathname,e.props):t.match}),a=e.props,s=a.children,r=a.component,o=a.render;return Array.isArray(s)&&function(e){return 0===p.Children.count(e)}(s)&&(s=null),p.createElement(Ts.Provider,{value:i},i.match?s?"function"==typeof s?s(i):s:r?p.createElement(r,i):o?o(i):null:"function"==typeof s?s(i):null)}))},t}(p.Component);p.Component;var Us=function(e){function t(){return e.apply(this,arguments)||this}return ma(t,e),t.prototype.render=function(){var e=this;return p.createElement(Ts.Consumer,null,(function(t){t||Oa(!1);var n,i,a=e.props.location||t.location;return p.Children.forEach(e.props.children,(function(e){if(null==i&&p.isValidElement(e)){n=e;var s=e.props.path||e.props.from;i=s?Bs(a.pathname,Ea({},e.props,{path:s})):t.match}})),i?p.cloneElement(n,{location:a,computedMatch:i}):null}))},t}(p.Component);p.useContext,p.Component;var zs=function(e){function t(){for(var t,n=arguments.length,i=new Array(n),a=0;a<n;a++)i[a]=arguments[a];return(t=e.call.apply(e,[this].concat(i))||this).history=Ya(t.props),t}return ma(t,e),t.prototype.render=function(){return p.createElement(As,{history:this.history,children:this.props.children})},t}(p.Component),Vs=function(e,t){return"function"==typeof e?e(t):e},Hs=function(e,t){return"string"==typeof e?Ba(e,null,null,t):e},Gs=function(e){return e},Ws=p.forwardRef;void 0===Ws&&(Ws=Gs);var js=Ws((function(e,t){var n=e.innerRef,i=e.navigate,a=e.onClick,s=os(e,["innerRef","navigate","onClick"]),r=s.target,o=Ea({},s,{onClick:function(e){try{a&&a(e)}catch(t){throw e.preventDefault(),t}e.defaultPrevented||0!==e.button||r&&"_self"!==r||function(e){return!!(e.metaKey||e.altKey||e.ctrlKey||e.shiftKey)}(e)||(e.preventDefault(),i())}});return o.ref=Gs!==Ws&&t||n,p.createElement("a",o)})),Xs=Ws((function(e,t){var n=e.component,i=void 0===n?js:n,a=e.replace,s=e.to,r=e.innerRef,o=os(e,["component","replace","to","innerRef"]);return p.createElement(Ts.Consumer,null,(function(e){e||Oa(!1);var n=e.history,l=Hs(Vs(s,e.location),e.location),c=l?n.createHref(l):"",h=Ea({},o,{href:c,navigate:function(){var t=Vs(s,e.location),i=Fa(e.location)===Fa(Hs(t));(a||i?n.replace:n.push)(t)}});return Gs!==Ws?h.ref=t||r:h.innerRef=r,p.createElement(i,h)}))})),Ys=function(e){return e},qs=p.forwardRef;void 0===qs&&(qs=Ys),qs((function(e,t){var n=e["aria-current"],i=void 0===n?"page":n,a=e.activeClassName,s=void 0===a?"active":a,r=e.activeStyle,o=e.className,l=e.exact,c=e.isActive,h=e.location,d=e.sensitive,u=e.strict,m=e.style,f=e.to,g=e.innerRef,v=os(e,["aria-current","activeClassName","activeStyle","className","exact","isActive","location","sensitive","strict","style","to","innerRef"]);return p.createElement(Ts.Consumer,null,(function(e){e||Oa(!1);var n=h||e.location,a=Hs(Vs(f,n),n),y=a.pathname,_=y&&y.replace(/([.+*?=^!:${}()[\]|/\\])/g,"\\$1"),w=_?Bs(n.pathname,{path:_,exact:l,sensitive:d,strict:u}):null,b=!!(c?c(w,n):w),x="function"==typeof o?o(b):o,C="function"==typeof m?m(b):m;b&&(x=function(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return t.filter((function(e){return e})).join(" ")}(x,s),C=Ea({},C,r));var S=Ea({"aria-current":b&&i||null,className:x,style:C,to:a},v);return Ys!==qs?S.ref=t||g:S.innerRef=g,p.createElement(Xs,S)}))}));var Ks={animation:{"blend-trees-1d":{typeScriptFunction:'function example(canvas: HTMLCanvasElement, deviceType: string, data: any): void {\n\n    const assets = {\n        \'model\': new pc.Asset(\'model\', \'container\', { url: \'/static/assets/models/bitmoji.glb\' }),\n        \'idleAnim\': new pc.Asset(\'idleAnim\', \'container\', { url: \'/static/assets/animations/bitmoji/idle.glb\' }),\n        \'danceAnim\': new pc.Asset(\'danceAnim\', \'container\', { url: \'/static/assets/animations/bitmoji/win-dance.glb\' }),\n        helipad: new pc.Asset(\'helipad-env-atlas\', \'texture\', { url: \'/static/assets/cubemaps/helipad-env-atlas.png\' }, { type: pc.TEXTURETYPE_RGBP, mipmaps: false }),\n        \'bloom\': new pc.Asset(\'bloom\', \'script\', { url: \'/static/scripts/posteffects/posteffect-bloom.js\' })\n    };\n\n    const gfxOptions = {\n        deviceTypes: [deviceType],\n        glslangUrl: \'/static/lib/glslang/glslang.js\',\n        twgslUrl: \'/static/lib/twgsl/twgsl.js\'\n    };\n\n    pc.createGraphicsDevice(canvas, gfxOptions).then((device: pc.GraphicsDevice) => {\n\n        const createOptions = new pc.AppOptions();\n        createOptions.graphicsDevice = device;\n\n        createOptions.componentSystems = [\n            // @ts-ignore\n            pc.RenderComponentSystem,\n            // @ts-ignore\n            pc.CameraComponentSystem,\n            // @ts-ignore\n            pc.LightComponentSystem,\n            // @ts-ignore\n            pc.ScriptComponentSystem,\n            // @ts-ignore\n            pc.AnimComponentSystem\n        ];\n        createOptions.resourceHandlers = [\n            // @ts-ignore\n            pc.TextureHandler,\n            // @ts-ignore\n            pc.ContainerHandler,\n            // @ts-ignore\n            pc.ScriptHandler,\n            // @ts-ignore\n            pc.AnimClipHandler,\n            // @ts-ignore\n            pc.AnimStateGraphHandler\n        ];\n\n        const app = new pc.AppBase(canvas);\n        app.init(createOptions);\n\n        // Set the canvas to fill the window and automatically change resolution to be the same as the canvas size\n        app.setCanvasFillMode(pc.FILLMODE_FILL_WINDOW);\n        app.setCanvasResolution(pc.RESOLUTION_AUTO);\n\n        const assetListLoader = new pc.AssetListLoader(Object.values(assets), app.assets);\n        assetListLoader.load(() => {\n\n            app.start();\n\n            // setup skydome\n            app.scene.exposure = 2;\n            app.scene.skyboxMip = 2;\n            app.scene.envAtlas = assets.helipad.resource;\n\n            // Create an Entity with a camera component\n            const cameraEntity = new pc.Entity();\n            cameraEntity.addComponent("camera", {\n                clearColor: new pc.Color(0.1, 0.1, 0.1)\n            });\n            cameraEntity.translate(0, 0.75, 3);\n\n            // add bloom postprocessing (this is ignored by the picker)\n            cameraEntity.addComponent("script");\n            cameraEntity.script.create("bloom", {\n                attributes: {\n                    bloomIntensity: 1,\n                    bloomThreshold: 0.7,\n                    blurAmount: 4\n                }\n            });\n            app.root.addChild(cameraEntity);\n\n            // Create an entity with a light component\n            const lightEntity = new pc.Entity();\n            lightEntity.addComponent("light", {\n                castShadows: true,\n                intensity: 1.5,\n                normalOffsetBias: 0.02,\n                shadowType: pc.SHADOW_PCF5,\n                shadowDistance: 6,\n                shadowResolution: 2048,\n                shadowBias: 0.02\n            });\n            app.root.addChild(lightEntity);\n            lightEntity.setLocalEulerAngles(45, 30, 0);\n\n            // create an entity from the loaded model using the render component\n            const modelEntity = assets.model.resource.instantiateRenderEntity({\n                castShadows: true\n            });\n\n            // add an anim component to the entity\n            modelEntity.addComponent(\'anim\', {\n                activate: true\n            });\n\n            // create an anim state graph\n            const animStateGraphData = {\n                "layers": [\n                    {\n                        "name": "characterState",\n                        "states": [\n                            {\n                                "name": "START"\n                            },\n                            {\n                                "name": "Movement",\n                                "speed": 1.0,\n                                "loop": true,\n                                "blendTree": {\n                                    "type": "1D",\n                                    "parameter": "blend",\n                                    "children": [\n                                        {\n                                            "name": "Idle",\n                                            "point": 0.0\n                                        },\n                                        {\n                                            "name": "Dance",\n                                            "point": 1.0,\n                                            "speed": 0.85\n                                        }\n                                    ]\n                                }\n                            }\n                        ],\n                        "transitions": [\n                            {\n                                "from": "START",\n                                "to": "Movement"\n                            }\n                        ]\n                    }\n                ],\n                "parameters": {\n                    "blend": {\n                        "name": "blend",\n                        "type": "FLOAT",\n                        "value": 0\n                    }\n                }\n            };\n\n            // load the state graph into the anim component\n            modelEntity.anim.loadStateGraph(animStateGraphData);\n\n            // load the state graph asset resource into the anim component\n            const characterStateLayer = modelEntity.anim.baseLayer;\n            characterStateLayer.assignAnimation(\'Movement.Idle\', assets.idleAnim.resource.animations[0].resource);\n            characterStateLayer.assignAnimation(\'Movement.Dance\', assets.danceAnim.resource.animations[0].resource);\n\n            app.root.addChild(modelEntity);\n\n            data.on(\'blend:set\', (blend: number) => {\n                modelEntity.anim.setFloat(\'blend\', blend);\n            });\n        });\n    });\n}',javaScriptFunction:'function example(canvas, deviceType, data) {\n    const assets = {\n        model: new pc.Asset("model", "container", {\n            url: "/static/assets/models/bitmoji.glb",\n        }),\n        idleAnim: new pc.Asset("idleAnim", "container", {\n            url: "/static/assets/animations/bitmoji/idle.glb",\n        }),\n        danceAnim: new pc.Asset("danceAnim", "container", {\n            url: "/static/assets/animations/bitmoji/win-dance.glb",\n        }),\n        helipad: new pc.Asset(\n            "helipad-env-atlas",\n            "texture",\n            { url: "/static/assets/cubemaps/helipad-env-atlas.png" },\n            { type: pc.TEXTURETYPE_RGBP, mipmaps: false }\n        ),\n        bloom: new pc.Asset("bloom", "script", {\n            url: "/static/scripts/posteffects/posteffect-bloom.js",\n        }),\n    };\n\n    const gfxOptions = {\n        deviceTypes: [deviceType],\n        glslangUrl: "/static/lib/glslang/glslang.js",\n        twgslUrl: "/static/lib/twgsl/twgsl.js",\n    };\n\n    pc.createGraphicsDevice(canvas, gfxOptions).then((device) => {\n        const createOptions = new pc.AppOptions();\n        createOptions.graphicsDevice = device;\n\n        createOptions.componentSystems = [\n            // @ts-ignore\n            pc.RenderComponentSystem,\n            // @ts-ignore\n            pc.CameraComponentSystem,\n            // @ts-ignore\n            pc.LightComponentSystem,\n            // @ts-ignore\n            pc.ScriptComponentSystem,\n            // @ts-ignore\n            pc.AnimComponentSystem,\n        ];\n\n        createOptions.resourceHandlers = [\n            // @ts-ignore\n            pc.TextureHandler,\n            // @ts-ignore\n            pc.ContainerHandler,\n            // @ts-ignore\n            pc.ScriptHandler,\n            // @ts-ignore\n            pc.AnimClipHandler,\n            // @ts-ignore\n            pc.AnimStateGraphHandler,\n        ];\n\n        const app = new pc.AppBase(canvas);\n        app.init(createOptions);\n\n        // Set the canvas to fill the window and automatically change resolution to be the same as the canvas size\n        app.setCanvasFillMode(pc.FILLMODE_FILL_WINDOW);\n        app.setCanvasResolution(pc.RESOLUTION_AUTO);\n\n        const assetListLoader = new pc.AssetListLoader(\n            Object.values(assets),\n            app.assets\n        );\n        assetListLoader.load(() => {\n            app.start();\n\n            // setup skydome\n            app.scene.exposure = 2;\n            app.scene.skyboxMip = 2;\n            app.scene.envAtlas = assets.helipad.resource;\n\n            // Create an Entity with a camera component\n            const cameraEntity = new pc.Entity();\n            cameraEntity.addComponent("camera", {\n                clearColor: new pc.Color(0.1, 0.1, 0.1),\n            });\n            cameraEntity.translate(0, 0.75, 3);\n\n            // add bloom postprocessing (this is ignored by the picker)\n            cameraEntity.addComponent("script");\n            cameraEntity.script.create("bloom", {\n                attributes: {\n                    bloomIntensity: 1,\n                    bloomThreshold: 0.7,\n                    blurAmount: 4,\n                },\n            });\n            app.root.addChild(cameraEntity);\n\n            // Create an entity with a light component\n            const lightEntity = new pc.Entity();\n            lightEntity.addComponent("light", {\n                castShadows: true,\n                intensity: 1.5,\n                normalOffsetBias: 0.02,\n                shadowType: pc.SHADOW_PCF5,\n                shadowDistance: 6,\n                shadowResolution: 2048,\n                shadowBias: 0.02,\n            });\n            app.root.addChild(lightEntity);\n            lightEntity.setLocalEulerAngles(45, 30, 0);\n\n            // create an entity from the loaded model using the render component\n            const modelEntity = assets.model.resource.instantiateRenderEntity({\n                castShadows: true,\n            });\n\n            // add an anim component to the entity\n            modelEntity.addComponent("anim", {\n                activate: true,\n            });\n\n            // create an anim state graph\n            const animStateGraphData = {\n                layers: [\n                    {\n                        name: "characterState",\n                        states: [\n                            {\n                                name: "START",\n                            },\n                            {\n                                name: "Movement",\n                                speed: 1.0,\n                                loop: true,\n                                blendTree: {\n                                    type: "1D",\n                                    parameter: "blend",\n                                    children: [\n                                        {\n                                            name: "Idle",\n                                            point: 0.0,\n                                        },\n                                        {\n                                            name: "Dance",\n                                            point: 1.0,\n                                            speed: 0.85,\n                                        },\n                                    ],\n                                },\n                            },\n                        ],\n\n                        transitions: [\n                            {\n                                from: "START",\n                                to: "Movement",\n                            },\n                        ],\n                    },\n                ],\n\n                parameters: {\n                    blend: {\n                        name: "blend",\n                        type: "FLOAT",\n                        value: 0,\n                    },\n                },\n            };\n\n            // load the state graph into the anim component\n            modelEntity.anim.loadStateGraph(animStateGraphData);\n\n            // load the state graph asset resource into the anim component\n            const characterStateLayer = modelEntity.anim.baseLayer;\n            characterStateLayer.assignAnimation(\n                "Movement.Idle",\n                assets.idleAnim.resource.animations[0].resource\n            );\n            characterStateLayer.assignAnimation(\n                "Movement.Dance",\n                assets.danceAnim.resource.animations[0].resource\n            );\n\n            app.root.addChild(modelEntity);\n\n            data.on("blend:set", (blend) => {\n                modelEntity.anim.setFloat("blend", blend);\n            });\n        });\n    });\n}\n',nameSlug:"blend-trees-1d",categorySlug:"animation"},"blend-trees-2d-cartesian":{typeScriptFunction:'function example(canvas: HTMLCanvasElement, deviceType: string): void {\n\n    const assets = {\n        \'model\': new pc.Asset(\'model\', \'container\', { url: \'/static/assets/models/bitmoji.glb\' }),\n        \'idleAnim\': new pc.Asset(\'idleAnim\', \'container\', { url: \'/static/assets/animations/bitmoji/idle.glb\' }),\n        \'walkAnim\': new pc.Asset(\'idleAnim\', \'container\', { url: \'/static/assets/animations/bitmoji/walk.glb\' }),\n        \'eagerAnim\': new pc.Asset(\'idleAnim\', \'container\', { url: \'/static/assets/animations/bitmoji/idle-eager.glb\' }),\n        \'danceAnim\': new pc.Asset(\'danceAnim\', \'container\', { url: \'/static/assets/animations/bitmoji/win-dance.glb\' }),\n        helipad: new pc.Asset(\'helipad-env-atlas\', \'texture\', { url: \'/static/assets/cubemaps/helipad-env-atlas.png\' }, { type: pc.TEXTURETYPE_RGBP, mipmaps: false }),\n        \'bloom\': new pc.Asset(\'bloom\', \'script\', { url: \'/static/scripts/posteffects/posteffect-bloom.js\' })\n    };\n\n    const gfxOptions = {\n        deviceTypes: [deviceType],\n        glslangUrl: \'/static/lib/glslang/glslang.js\',\n        twgslUrl: \'/static/lib/twgsl/twgsl.js\'\n    };\n\n    pc.createGraphicsDevice(canvas, gfxOptions).then((device: pc.GraphicsDevice) => {\n\n        const createOptions = new pc.AppOptions();\n        createOptions.graphicsDevice = device;\n        createOptions.mouse = new pc.Mouse(document.body);\n        createOptions.touch = new pc.TouchDevice(document.body);\n        createOptions.elementInput = new pc.ElementInput(canvas);\n\n        createOptions.componentSystems = [\n            // @ts-ignore\n            pc.RenderComponentSystem,\n            // @ts-ignore\n            pc.CameraComponentSystem,\n            // @ts-ignore\n            pc.LightComponentSystem,\n            // @ts-ignore\n            pc.ScriptComponentSystem,\n            // @ts-ignore\n            pc.AnimComponentSystem\n        ];\n        createOptions.resourceHandlers = [\n            // @ts-ignore\n            pc.TextureHandler,\n            // @ts-ignore\n            pc.ContainerHandler,\n            // @ts-ignore\n            pc.ScriptHandler,\n            // @ts-ignore\n            pc.AnimClipHandler,\n            // @ts-ignore\n            pc.AnimStateGraphHandler\n        ];\n\n        const app = new pc.AppBase(canvas);\n        app.init(createOptions);\n\n        // Set the canvas to fill the window and automatically change resolution to be the same as the canvas size\n        app.setCanvasFillMode(pc.FILLMODE_FILL_WINDOW);\n        app.setCanvasResolution(pc.RESOLUTION_AUTO);\n\n        const assetListLoader = new pc.AssetListLoader(Object.values(assets), app.assets);\n        assetListLoader.load(() => {\n\n            // setup skydome\n            app.scene.exposure = 2;\n            app.scene.skyboxMip = 2;\n            app.scene.envAtlas = assets.helipad.resource;\n\n            // Create an Entity with a camera component\n            const cameraEntity = new pc.Entity();\n            cameraEntity.addComponent("camera", {\n                clearColor: new pc.Color(0.1, 0.1, 0.1)\n            });\n            cameraEntity.translate(0, 0.75, 3);\n            // add bloom postprocessing (this is ignored by the picker)\n            cameraEntity.addComponent("script");\n            cameraEntity.script.create("bloom", {\n                attributes: {\n                    bloomIntensity: 1,\n                    bloomThreshold: 0.7,\n                    blurAmount: 4\n                }\n            });\n            app.root.addChild(cameraEntity);\n\n            // Create an entity with a light component\n            const lightEntity = new pc.Entity();\n            lightEntity.addComponent("light", {\n                castShadows: true,\n                intensity: 1.5,\n                normalOffsetBias: 0.02,\n                shadowType: pc.SHADOW_PCF5,\n                shadowDistance: 6,\n                shadowResolution: 2048,\n                shadowBias: 0.02\n            });\n            app.root.addChild(lightEntity);\n            lightEntity.setLocalEulerAngles(45, 30, 0);\n\n            // create an entity from the loaded model using the render component\n            const modelEntity = assets.model.resource.instantiateRenderEntity({\n                castShadows: true\n            });\n            modelEntity.name = \'model\';\n\n            // add an anim component to the entity\n            modelEntity.addComponent(\'anim\', {\n                activate: true\n            });\n\n            // create an anim state graph\n            const animStateGraphData = {\n                "layers": [\n                    {\n                        "name": "base",\n                        "states": [\n                            {\n                                "name": "START"\n                            },\n                            {\n                                "name": "Emote",\n                                "speed": 1.0,\n                                "loop": true,\n                                "blendTree": {\n                                    "type": pc.ANIM_BLEND_2D_CARTESIAN,\n                                    "parameters": ["posX", "posY"],\n                                    "children": [\n                                        {\n                                            "name": "Idle",\n                                            "point": [-0.5, 0.5]\n                                        },\n                                        {\n                                            "name": "Eager",\n                                            "point": [0.5, 0.5]\n                                        },\n                                        {\n                                            "name": "Walk",\n                                            "point": [0.5, -0.5]\n                                        },\n                                        {\n                                            "name": "Dance",\n                                            "point": [-0.5, -0.5]\n                                        }\n                                    ]\n                                }\n                            }\n                        ],\n                        "transitions": [\n                            {\n                                "from": "START",\n                                "to": "Emote"\n                            }\n                        ]\n                    }\n                ],\n                "parameters": {\n                    "posX": {\n                        "name": "posX",\n                        "type": "FLOAT",\n                        "value": -0.5\n                    },\n                    "posY": {\n                        "name": "posY",\n                        "type": "FLOAT",\n                        "value": 0.5\n                    }\n                }\n            };\n\n            // load the state graph into the anim component\n            modelEntity.anim.loadStateGraph(animStateGraphData);\n\n            // load the state graph asset resource into the anim component\n            const characterStateLayer = modelEntity.anim.baseLayer;\n            characterStateLayer.assignAnimation(\'Emote.Idle\', assets.idleAnim.resource.animations[0].resource);\n            characterStateLayer.assignAnimation(\'Emote.Eager\', assets.eagerAnim.resource.animations[0].resource);\n            characterStateLayer.assignAnimation(\'Emote.Dance\', assets.danceAnim.resource.animations[0].resource);\n            characterStateLayer.assignAnimation(\'Emote.Walk\', assets.walkAnim.resource.animations[0].resource);\n\n            app.root.addChild(modelEntity);\n\n            app.start();\n        });\n    });\n}',javaScriptFunction:'function example(canvas, deviceType) {\n    const assets = {\n        model: new pc.Asset("model", "container", {\n            url: "/static/assets/models/bitmoji.glb",\n        }),\n        idleAnim: new pc.Asset("idleAnim", "container", {\n            url: "/static/assets/animations/bitmoji/idle.glb",\n        }),\n        walkAnim: new pc.Asset("idleAnim", "container", {\n            url: "/static/assets/animations/bitmoji/walk.glb",\n        }),\n        eagerAnim: new pc.Asset("idleAnim", "container", {\n            url: "/static/assets/animations/bitmoji/idle-eager.glb",\n        }),\n        danceAnim: new pc.Asset("danceAnim", "container", {\n            url: "/static/assets/animations/bitmoji/win-dance.glb",\n        }),\n        helipad: new pc.Asset(\n            "helipad-env-atlas",\n            "texture",\n            { url: "/static/assets/cubemaps/helipad-env-atlas.png" },\n            { type: pc.TEXTURETYPE_RGBP, mipmaps: false }\n        ),\n        bloom: new pc.Asset("bloom", "script", {\n            url: "/static/scripts/posteffects/posteffect-bloom.js",\n        }),\n    };\n\n    const gfxOptions = {\n        deviceTypes: [deviceType],\n        glslangUrl: "/static/lib/glslang/glslang.js",\n        twgslUrl: "/static/lib/twgsl/twgsl.js",\n    };\n\n    pc.createGraphicsDevice(canvas, gfxOptions).then((device) => {\n        const createOptions = new pc.AppOptions();\n        createOptions.graphicsDevice = device;\n        createOptions.mouse = new pc.Mouse(document.body);\n        createOptions.touch = new pc.TouchDevice(document.body);\n        createOptions.elementInput = new pc.ElementInput(canvas);\n\n        createOptions.componentSystems = [\n            // @ts-ignore\n            pc.RenderComponentSystem,\n            // @ts-ignore\n            pc.CameraComponentSystem,\n            // @ts-ignore\n            pc.LightComponentSystem,\n            // @ts-ignore\n            pc.ScriptComponentSystem,\n            // @ts-ignore\n            pc.AnimComponentSystem,\n        ];\n\n        createOptions.resourceHandlers = [\n            // @ts-ignore\n            pc.TextureHandler,\n            // @ts-ignore\n            pc.ContainerHandler,\n            // @ts-ignore\n            pc.ScriptHandler,\n            // @ts-ignore\n            pc.AnimClipHandler,\n            // @ts-ignore\n            pc.AnimStateGraphHandler,\n        ];\n\n        const app = new pc.AppBase(canvas);\n        app.init(createOptions);\n\n        // Set the canvas to fill the window and automatically change resolution to be the same as the canvas size\n        app.setCanvasFillMode(pc.FILLMODE_FILL_WINDOW);\n        app.setCanvasResolution(pc.RESOLUTION_AUTO);\n\n        const assetListLoader = new pc.AssetListLoader(\n            Object.values(assets),\n            app.assets\n        );\n        assetListLoader.load(() => {\n            // setup skydome\n            app.scene.exposure = 2;\n            app.scene.skyboxMip = 2;\n            app.scene.envAtlas = assets.helipad.resource;\n\n            // Create an Entity with a camera component\n            const cameraEntity = new pc.Entity();\n            cameraEntity.addComponent("camera", {\n                clearColor: new pc.Color(0.1, 0.1, 0.1),\n            });\n            cameraEntity.translate(0, 0.75, 3);\n            // add bloom postprocessing (this is ignored by the picker)\n            cameraEntity.addComponent("script");\n            cameraEntity.script.create("bloom", {\n                attributes: {\n                    bloomIntensity: 1,\n                    bloomThreshold: 0.7,\n                    blurAmount: 4,\n                },\n            });\n            app.root.addChild(cameraEntity);\n\n            // Create an entity with a light component\n            const lightEntity = new pc.Entity();\n            lightEntity.addComponent("light", {\n                castShadows: true,\n                intensity: 1.5,\n                normalOffsetBias: 0.02,\n                shadowType: pc.SHADOW_PCF5,\n                shadowDistance: 6,\n                shadowResolution: 2048,\n                shadowBias: 0.02,\n            });\n            app.root.addChild(lightEntity);\n            lightEntity.setLocalEulerAngles(45, 30, 0);\n\n            // create an entity from the loaded model using the render component\n            const modelEntity = assets.model.resource.instantiateRenderEntity({\n                castShadows: true,\n            });\n            modelEntity.name = "model";\n\n            // add an anim component to the entity\n            modelEntity.addComponent("anim", {\n                activate: true,\n            });\n\n            // create an anim state graph\n            const animStateGraphData = {\n                layers: [\n                    {\n                        name: "base",\n                        states: [\n                            {\n                                name: "START",\n                            },\n                            {\n                                name: "Emote",\n                                speed: 1.0,\n                                loop: true,\n                                blendTree: {\n                                    type: pc.ANIM_BLEND_2D_CARTESIAN,\n                                    parameters: ["posX", "posY"],\n                                    children: [\n                                        {\n                                            name: "Idle",\n                                            point: [-0.5, 0.5],\n                                        },\n                                        {\n                                            name: "Eager",\n                                            point: [0.5, 0.5],\n                                        },\n                                        {\n                                            name: "Walk",\n                                            point: [0.5, -0.5],\n                                        },\n                                        {\n                                            name: "Dance",\n                                            point: [-0.5, -0.5],\n                                        },\n                                    ],\n                                },\n                            },\n                        ],\n\n                        transitions: [\n                            {\n                                from: "START",\n                                to: "Emote",\n                            },\n                        ],\n                    },\n                ],\n\n                parameters: {\n                    posX: {\n                        name: "posX",\n                        type: "FLOAT",\n                        value: -0.5,\n                    },\n                    posY: {\n                        name: "posY",\n                        type: "FLOAT",\n                        value: 0.5,\n                    },\n                },\n            };\n\n            // load the state graph into the anim component\n            modelEntity.anim.loadStateGraph(animStateGraphData);\n\n            // load the state graph asset resource into the anim component\n            const characterStateLayer = modelEntity.anim.baseLayer;\n            characterStateLayer.assignAnimation(\n                "Emote.Idle",\n                assets.idleAnim.resource.animations[0].resource\n            );\n            characterStateLayer.assignAnimation(\n                "Emote.Eager",\n                assets.eagerAnim.resource.animations[0].resource\n            );\n            characterStateLayer.assignAnimation(\n                "Emote.Dance",\n                assets.danceAnim.resource.animations[0].resource\n            );\n            characterStateLayer.assignAnimation(\n                "Emote.Walk",\n                assets.walkAnim.resource.animations[0].resource\n            );\n\n            app.root.addChild(modelEntity);\n\n            app.start();\n        });\n    });\n}\n',nameSlug:"blend-trees-2d-cartesian",categorySlug:"animation"},"blend-trees-2d-directional":{typeScriptFunction:'function example(canvas: HTMLCanvasElement, deviceType: string): void {\n\n    const assets = {\n        \'model\': new pc.Asset(\'model\', \'container\', { url: \'/static/assets/models/bitmoji.glb\' }),\n        \'idleAnim\': new pc.Asset(\'idleAnim\', \'container\', { url: \'/static/assets/animations/bitmoji/idle.glb\' }),\n        \'walkAnim\': new pc.Asset(\'idleAnim\', \'container\', { url: \'/static/assets/animations/bitmoji/walk.glb\' }),\n        \'jogAnim\': new pc.Asset(\'idleAnim\', \'container\', { url: \'/static/assets/animations/bitmoji/run.glb\' }),\n        \'danceAnim\': new pc.Asset(\'danceAnim\', \'container\', { url: \'/static/assets/animations/bitmoji/win-dance.glb\' }),\n        helipad: new pc.Asset(\'helipad-env-atlas\', \'texture\', { url: \'/static/assets/cubemaps/helipad-env-atlas.png\' }, { type: pc.TEXTURETYPE_RGBP, mipmaps: false }),\n        \'bloom\': new pc.Asset(\'bloom\', \'script\', { url: \'/static/scripts/posteffects/posteffect-bloom.js\' })\n    };\n\n    const gfxOptions = {\n        deviceTypes: [deviceType],\n        glslangUrl: \'/static/lib/glslang/glslang.js\',\n        twgslUrl: \'/static/lib/twgsl/twgsl.js\'\n    };\n\n    pc.createGraphicsDevice(canvas, gfxOptions).then((device: pc.GraphicsDevice) => {\n\n        const createOptions = new pc.AppOptions();\n        createOptions.graphicsDevice = device;\n        createOptions.mouse = new pc.Mouse(document.body);\n        createOptions.touch = new pc.TouchDevice(document.body);\n        createOptions.elementInput = new pc.ElementInput(canvas);\n\n        createOptions.componentSystems = [\n            // @ts-ignore\n            pc.RenderComponentSystem,\n            // @ts-ignore\n            pc.CameraComponentSystem,\n            // @ts-ignore\n            pc.LightComponentSystem,\n            // @ts-ignore\n            pc.ScriptComponentSystem,\n            // @ts-ignore\n            pc.AnimComponentSystem\n        ];\n        createOptions.resourceHandlers = [\n            // @ts-ignore\n            pc.TextureHandler,\n            // @ts-ignore\n            pc.ContainerHandler,\n            // @ts-ignore\n            pc.ScriptHandler,\n            // @ts-ignore\n            pc.AnimClipHandler,\n            // @ts-ignore\n            pc.AnimStateGraphHandler\n        ];\n\n        const app = new pc.AppBase(canvas);\n        app.init(createOptions);\n\n        // Set the canvas to fill the window and automatically change resolution to be the same as the canvas size\n        app.setCanvasFillMode(pc.FILLMODE_FILL_WINDOW);\n        app.setCanvasResolution(pc.RESOLUTION_AUTO);\n\n        const assetListLoader = new pc.AssetListLoader(Object.values(assets), app.assets);\n        assetListLoader.load(() => {\n            // setup skydome\n            app.scene.exposure = 2;\n            app.scene.skyboxMip = 2;\n            app.scene.envAtlas = assets.helipad.resource;\n\n            // Create an Entity with a camera component\n            const cameraEntity = new pc.Entity();\n            cameraEntity.addComponent("camera", {\n                clearColor: new pc.Color(0.1, 0.1, 0.1)\n            });\n            cameraEntity.translate(0, 0.75, 3);\n            // add bloom postprocessing (this is ignored by the picker)\n            cameraEntity.addComponent("script");\n            cameraEntity.script.create("bloom", {\n                attributes: {\n                    bloomIntensity: 1,\n                    bloomThreshold: 0.7,\n                    blurAmount: 4\n                }\n            });\n            app.root.addChild(cameraEntity);\n\n            // Create an entity with a light component\n            const lightEntity = new pc.Entity();\n            lightEntity.addComponent("light", {\n                castShadows: true,\n                intensity: 1.5,\n                normalOffsetBias: 0.02,\n                shadowType: pc.SHADOW_PCF5,\n                shadowDistance: 6,\n                shadowResolution: 2048,\n                shadowBias: 0.02\n            });\n            app.root.addChild(lightEntity);\n            lightEntity.setLocalEulerAngles(45, 30, 0);\n\n            // create an entity from the loaded model using the render component\n            const modelEntity = assets.model.resource.instantiateRenderEntity({\n                castShadows: true\n            });\n            modelEntity.name = \'model\';\n\n            // add an anim component to the entity\n            modelEntity.addComponent(\'anim\', {\n                activate: true\n            });\n\n            // create an anim state graph\n            const animStateGraphData = {\n                "layers": [\n                    {\n                        "name": "locomotion",\n                        "states": [\n                            {\n                                "name": "START"\n                            },\n                            {\n                                "name": "Travel",\n                                "speed": 1.0,\n                                "loop": true,\n                                "blendTree": {\n                                    "type": pc.ANIM_BLEND_2D_DIRECTIONAL,\n                                    "syncDurations": true,\n                                    "parameters": ["posX", "posY"],\n                                    "children": [\n                                        {\n                                            "name": "Idle",\n                                            "point": [0.0, 0.0]\n                                        },\n                                        {\n                                            "speed": -1,\n                                            "name": "WalkBackwards",\n                                            "point": [0.0, -0.5]\n                                        },\n                                        {\n                                            "speed": 1,\n                                            "name": "Walk",\n                                            "point": [0.0, 0.5]\n                                        },\n                                        {\n                                            "speed": 1,\n                                            "name": "Jog",\n                                            "point": [0.0, 1.0]\n                                        }\n                                    ]\n                                }\n                            }\n                        ],\n                        "transitions": [\n                            {\n                                "from": "START",\n                                "to": "Travel"\n                            }\n                        ]\n                    }\n                ],\n                "parameters": {\n                    "posX": {\n                        "name": "posX",\n                        "type": "FLOAT",\n                        "value": 0\n                    },\n                    "posY": {\n                        "name": "posY",\n                        "type": "FLOAT",\n                        "value": 0\n                    }\n                }\n            };\n\n            // load the state graph into the anim component\n            modelEntity.anim.loadStateGraph(animStateGraphData);\n\n            // load the state graph asset resource into the anim component\n            const locomotionLayer = modelEntity.anim.baseLayer;\n            locomotionLayer.assignAnimation(\'Travel.Idle\', assets.idleAnim.resource.animations[0].resource);\n            locomotionLayer.assignAnimation(\'Travel.Walk\', assets.walkAnim.resource.animations[0].resource);\n            locomotionLayer.assignAnimation(\'Travel.WalkBackwards\', assets.walkAnim.resource.animations[0].resource);\n            locomotionLayer.assignAnimation(\'Travel.Jog\', assets.jogAnim.resource.animations[0].resource);\n\n            app.root.addChild(modelEntity);\n\n            app.start();\n        });\n    });\n}',javaScriptFunction:'function example(canvas, deviceType) {\n    const assets = {\n        model: new pc.Asset("model", "container", {\n            url: "/static/assets/models/bitmoji.glb",\n        }),\n        idleAnim: new pc.Asset("idleAnim", "container", {\n            url: "/static/assets/animations/bitmoji/idle.glb",\n        }),\n        walkAnim: new pc.Asset("idleAnim", "container", {\n            url: "/static/assets/animations/bitmoji/walk.glb",\n        }),\n        jogAnim: new pc.Asset("idleAnim", "container", {\n            url: "/static/assets/animations/bitmoji/run.glb",\n        }),\n        danceAnim: new pc.Asset("danceAnim", "container", {\n            url: "/static/assets/animations/bitmoji/win-dance.glb",\n        }),\n        helipad: new pc.Asset(\n            "helipad-env-atlas",\n            "texture",\n            { url: "/static/assets/cubemaps/helipad-env-atlas.png" },\n            { type: pc.TEXTURETYPE_RGBP, mipmaps: false }\n        ),\n        bloom: new pc.Asset("bloom", "script", {\n            url: "/static/scripts/posteffects/posteffect-bloom.js",\n        }),\n    };\n\n    const gfxOptions = {\n        deviceTypes: [deviceType],\n        glslangUrl: "/static/lib/glslang/glslang.js",\n        twgslUrl: "/static/lib/twgsl/twgsl.js",\n    };\n\n    pc.createGraphicsDevice(canvas, gfxOptions).then((device) => {\n        const createOptions = new pc.AppOptions();\n        createOptions.graphicsDevice = device;\n        createOptions.mouse = new pc.Mouse(document.body);\n        createOptions.touch = new pc.TouchDevice(document.body);\n        createOptions.elementInput = new pc.ElementInput(canvas);\n\n        createOptions.componentSystems = [\n            // @ts-ignore\n            pc.RenderComponentSystem,\n            // @ts-ignore\n            pc.CameraComponentSystem,\n            // @ts-ignore\n            pc.LightComponentSystem,\n            // @ts-ignore\n            pc.ScriptComponentSystem,\n            // @ts-ignore\n            pc.AnimComponentSystem,\n        ];\n\n        createOptions.resourceHandlers = [\n            // @ts-ignore\n            pc.TextureHandler,\n            // @ts-ignore\n            pc.ContainerHandler,\n            // @ts-ignore\n            pc.ScriptHandler,\n            // @ts-ignore\n            pc.AnimClipHandler,\n            // @ts-ignore\n            pc.AnimStateGraphHandler,\n        ];\n\n        const app = new pc.AppBase(canvas);\n        app.init(createOptions);\n\n        // Set the canvas to fill the window and automatically change resolution to be the same as the canvas size\n        app.setCanvasFillMode(pc.FILLMODE_FILL_WINDOW);\n        app.setCanvasResolution(pc.RESOLUTION_AUTO);\n\n        const assetListLoader = new pc.AssetListLoader(\n            Object.values(assets),\n            app.assets\n        );\n        assetListLoader.load(() => {\n            // setup skydome\n            app.scene.exposure = 2;\n            app.scene.skyboxMip = 2;\n            app.scene.envAtlas = assets.helipad.resource;\n\n            // Create an Entity with a camera component\n            const cameraEntity = new pc.Entity();\n            cameraEntity.addComponent("camera", {\n                clearColor: new pc.Color(0.1, 0.1, 0.1),\n            });\n            cameraEntity.translate(0, 0.75, 3);\n            // add bloom postprocessing (this is ignored by the picker)\n            cameraEntity.addComponent("script");\n            cameraEntity.script.create("bloom", {\n                attributes: {\n                    bloomIntensity: 1,\n                    bloomThreshold: 0.7,\n                    blurAmount: 4,\n                },\n            });\n            app.root.addChild(cameraEntity);\n\n            // Create an entity with a light component\n            const lightEntity = new pc.Entity();\n            lightEntity.addComponent("light", {\n                castShadows: true,\n                intensity: 1.5,\n                normalOffsetBias: 0.02,\n                shadowType: pc.SHADOW_PCF5,\n                shadowDistance: 6,\n                shadowResolution: 2048,\n                shadowBias: 0.02,\n            });\n            app.root.addChild(lightEntity);\n            lightEntity.setLocalEulerAngles(45, 30, 0);\n\n            // create an entity from the loaded model using the render component\n            const modelEntity = assets.model.resource.instantiateRenderEntity({\n                castShadows: true,\n            });\n            modelEntity.name = "model";\n\n            // add an anim component to the entity\n            modelEntity.addComponent("anim", {\n                activate: true,\n            });\n\n            // create an anim state graph\n            const animStateGraphData = {\n                layers: [\n                    {\n                        name: "locomotion",\n                        states: [\n                            {\n                                name: "START",\n                            },\n                            {\n                                name: "Travel",\n                                speed: 1.0,\n                                loop: true,\n                                blendTree: {\n                                    type: pc.ANIM_BLEND_2D_DIRECTIONAL,\n                                    syncDurations: true,\n                                    parameters: ["posX", "posY"],\n                                    children: [\n                                        {\n                                            name: "Idle",\n                                            point: [0.0, 0.0],\n                                        },\n                                        {\n                                            speed: -1,\n                                            name: "WalkBackwards",\n                                            point: [0.0, -0.5],\n                                        },\n                                        {\n                                            speed: 1,\n                                            name: "Walk",\n                                            point: [0.0, 0.5],\n                                        },\n                                        {\n                                            speed: 1,\n                                            name: "Jog",\n                                            point: [0.0, 1.0],\n                                        },\n                                    ],\n                                },\n                            },\n                        ],\n\n                        transitions: [\n                            {\n                                from: "START",\n                                to: "Travel",\n                            },\n                        ],\n                    },\n                ],\n\n                parameters: {\n                    posX: {\n                        name: "posX",\n                        type: "FLOAT",\n                        value: 0,\n                    },\n                    posY: {\n                        name: "posY",\n                        type: "FLOAT",\n                        value: 0,\n                    },\n                },\n            };\n\n            // load the state graph into the anim component\n            modelEntity.anim.loadStateGraph(animStateGraphData);\n\n            // load the state graph asset resource into the anim component\n            const locomotionLayer = modelEntity.anim.baseLayer;\n            locomotionLayer.assignAnimation(\n                "Travel.Idle",\n                assets.idleAnim.resource.animations[0].resource\n            );\n            locomotionLayer.assignAnimation(\n                "Travel.Walk",\n                assets.walkAnim.resource.animations[0].resource\n            );\n            locomotionLayer.assignAnimation(\n                "Travel.WalkBackwards",\n                assets.walkAnim.resource.animations[0].resource\n            );\n            locomotionLayer.assignAnimation(\n                "Travel.Jog",\n                assets.jogAnim.resource.animations[0].resource\n            );\n\n            app.root.addChild(modelEntity);\n\n            app.start();\n        });\n    });\n}\n',nameSlug:"blend-trees-2d-directional",categorySlug:"animation"},"component-properties":{typeScriptFunction:'function example(canvas: HTMLCanvasElement, deviceType: string, data: any): void {\n\n    const assets = {\n        \'playcanvasGreyTexture\': new pc.Asset(\'playcanvasGreyTexture\', \'texture\', { url: \'/static/assets/textures/playcanvas-grey.png\' })\n    };\n    const gfxOptions = {\n        deviceTypes: [deviceType],\n        glslangUrl: \'/static/lib/glslang/glslang.js\',\n        twgslUrl: \'/static/lib/twgsl/twgsl.js\'\n    };\n\n    pc.createGraphicsDevice(canvas, gfxOptions).then((device: pc.GraphicsDevice) => {\n\n        const createOptions = new pc.AppOptions();\n        createOptions.graphicsDevice = device;\n        createOptions.mouse = new pc.Mouse(document.body);\n        createOptions.touch = new pc.TouchDevice(document.body);\n        createOptions.elementInput = new pc.ElementInput(canvas);\n\n        createOptions.componentSystems = [\n            // @ts-ignore\n            pc.RenderComponentSystem,\n            // @ts-ignore\n            pc.CameraComponentSystem,\n            // @ts-ignore\n            pc.LightComponentSystem,\n            // @ts-ignore\n            pc.AnimComponentSystem\n        ];\n        createOptions.resourceHandlers = [\n            // @ts-ignore\n            pc.TextureHandler,\n            // @ts-ignore\n            pc.AnimClipHandler,\n            // @ts-ignore\n            pc.AnimStateGraphHandler\n        ];\n\n        const app = new pc.AppBase(canvas);\n        app.init(createOptions);\n\n        // Set the canvas to fill the window and automatically change resolution to be the same as the canvas size\n        app.setCanvasFillMode(pc.FILLMODE_FILL_WINDOW);\n        app.setCanvasResolution(pc.RESOLUTION_AUTO);\n\n        const assetListLoader = new pc.AssetListLoader(Object.values(assets), app.assets);\n        assetListLoader.load(() => {\n            // create the animation data for two static spot lights\n            const animClipStaticLightData = {\n                "name": "staticLight",\n                "duration": 1.0,\n                // curve keyframe inputs\n                "inputs": [\n                    [\n                        0.0\n                    ]\n                ],\n                // curve keyframe outputs\n                "outputs": [\n                    // a single RGBA color keyframe value of a green light\n                    {\n                        "components": 4,\n                        "data": [\n                            0.0, 1.0, 0.0, 1.0\n                        ]\n                    },\n                    // a single quaternion keyframe value with no rotation\n                    {\n                        "components": 4,\n                        "data": [\n                            0.0, 0.0, 0.0, 0.0\n                        ]\n                    }\n                ],\n                // the curves contained in the clip, each with the path to the property they animation, the index of\n                // their input and output keyframes and the method of interpolation to be used\n                "curves": [\n                    {\n                        "path": { entityPath: ["lights", "spotLight1"], component: "light", propertyPath: ["color"] },\n                        "inputIndex": 0,\n                        "outputIndex": 0,\n                        "interpolation": 1\n                    },\n                    {\n                        "path": { entityPath: ["lights", "spotLight2"], component: "light", propertyPath: ["color"] },\n                        "inputIndex": 0,\n                        "outputIndex": 0,\n                        "interpolation": 1\n                    },\n                    {\n                        "path": { entityPath: ["lights", "spotLight1"], component: "entity", propertyPath: ["localEulerAngles"] },\n                        "inputIndex": 0,\n                        "outputIndex": 1,\n                        "interpolation": 1\n                    },\n                    {\n                        "path": { entityPath: ["lights", "spotLight2"], component: "entity", propertyPath: ["localEulerAngles"] },\n                        "inputIndex": 0,\n                        "outputIndex": 1,\n                        "interpolation": 1\n                    }\n                ]\n            };\n\n            // create the animation data for two flashing spot lights\n            const animClipFlashingLightData = {\n                "name": "flashingLight",\n                "duration": 2.0,\n                // curve keyframe inputs\n                "inputs": [\n                    [\n                        0.0, 0.5, 1.0, 1.5, 2.0\n                    ],\n                    [\n                        0, 1, 2\n                    ]\n                ],\n                // curve keyframe outputs\n                "outputs": [\n                    //  keyframe outputs for a flashing red RGBA color\n                    {\n                        "components": 4,\n                        "data": [\n                            1.0, 0.0, 0.0, 1.0,\n                            0.4, 0.0, 0.0, 1.0,\n                            1.0, 0.0, 0.0, 1.0,\n                            0.4, 0.0, 0.0, 1.0,\n                            1.0, 0.0, 0.0, 1.0\n                        ]\n                    },\n                    //  keyframe outputs for a quaternion rotation\n                    {\n                        "components": 4,\n                        "data": [\n                            4.0, 0.0, 0.0, 0.0,\n                            4.0, 180.0, 0.0, 0.0,\n                            4.0, 0.0, 0.0, 0.0\n                        ]\n                    },\n                    //  keyframe outputs for a quaternion rotation\n                    {\n                        "components": 4,\n                        "data": [\n                            -4.0, 0.0, 0.0, 0.0,\n                            -4.0, 180.0, 0.0, 0.0,\n                            -4.0, 0.0, 0.0, 0.0\n                        ]\n                    }\n                ],\n                // the curves contained in the clip, each with the path to the property they animation, the index of\n                // their input and output keyframes and the method of interpolation to be used\n                "curves": [\n                    {\n                        "path": { entityPath: ["lights", "spotLight1"], component: "light", propertyPath: ["color"] },\n                        "inputIndex": 0,\n                        "outputIndex": 0,\n                        "interpolation": 1\n                    },\n                    {\n                        "path": { entityPath: ["lights", "spotLight2"], component: "light", propertyPath: ["color"] },\n                        "inputIndex": 0,\n                        "outputIndex": 0,\n                        "interpolation": 1\n                    },\n                    {\n                        "path": { entityPath: ["lights", "spotLight1"], component: "entity", propertyPath: ["localEulerAngles"] },\n                        "inputIndex": 1,\n                        "outputIndex": 1,\n                        "interpolation": 1\n                    },\n                    {\n                        "path": { entityPath: ["lights", "spotLight2"], component: "entity", propertyPath: ["localEulerAngles"] },\n                        "inputIndex": 1,\n                        "outputIndex": 2,\n                        "interpolation": 1\n                    }\n                ]\n            };\n\n            const animClipHandler = new pc.AnimClipHandler(app);\n            const animClipStaticLight = animClipHandler.open(undefined, animClipStaticLightData);\n            const animClipFlashingLight = animClipHandler.open(undefined, animClipFlashingLightData);\n\n            // Create an Entity with a camera component\n            const cameraEntity = new pc.Entity();\n            cameraEntity.name = \'camera\';\n            cameraEntity.addComponent("camera", {\n                clearColor: new pc.Color(0, 0, 0.0)\n            });\n            cameraEntity.translateLocal(7, 10, 7);\n            cameraEntity.lookAt(0, 0, 0);\n\n            const boxEntity = new pc.Entity();\n            boxEntity.addComponent("render", {\n                type: \'box\'\n            });\n            boxEntity.name = \'model\';\n            boxEntity.setPosition(0, 0.25, 0);\n            boxEntity.setLocalScale(0.5, 0.5, 0.5);\n            const material = new pc.StandardMaterial();\n            material.diffuseMap = assets.playcanvasGreyTexture.resource;\n            material.update();\n            boxEntity.render.meshInstances[0].material = material;\n\n            const planeEntity = new pc.Entity();\n            planeEntity.name = \'plane\';\n            planeEntity.addComponent("render", {\n                type: "plane"\n            });\n            planeEntity.setLocalScale(15, 1, 15);\n            planeEntity.setPosition(0, 0, 0);\n\n            // Create the animatible lights\n            const lightsEntity = new pc.Entity();\n            lightsEntity.name = \'lights\';\n\n            const light1 = new pc.Entity();\n            light1.name = \'spotLight1\';\n            light1.addComponent("light", {\n                type: "spot",\n                color: new pc.Color(0.0, 0.0, 0.0, 1.0),\n                intensity: 1,\n                range: 15,\n                innerConeAngle: 5,\n                outerConeAngle: 10\n            });\n            light1.setPosition(0, 10, 0);\n\n            const light2 = new pc.Entity();\n            light2.name = \'spotLight2\';\n            light2.addComponent("light", {\n                type: "spot",\n                color: new pc.Color(0.0, 0.0, 0.0, 1.0),\n                intensity: 1,\n                range: 15,\n                innerConeAngle: 5,\n                outerConeAngle: 10\n            });\n            light2.setPosition(0, 10, 0);\n\n            // Add Entities into the scene hierarchy\n            app.root.addChild(cameraEntity);\n            lightsEntity.addChild(light1);\n            lightsEntity.addChild(light2);\n            app.root.addChild(lightsEntity);\n            app.root.addChild(boxEntity);\n            app.root.addChild(planeEntity);\n\n            // add the anim component to the lights entity\n            lightsEntity.addComponent("anim", {\n                speed: 1.0,\n                activate: true\n            });\n\n            // assign animation clip asset resources to the appropriate states\n            lightsEntity.anim.assignAnimation(\'Static\', animClipStaticLight);\n            lightsEntity.anim.assignAnimation(\'Flash\', animClipFlashingLight);\n\n            app.start();\n\n            data.on(\'flash:set\', () => {\n                if (lightsEntity.anim.baseLayer.activeState === \'Static\') {\n                    lightsEntity.anim.baseLayer.transition(\'Flash\', 0.5);\n                } else {\n                    lightsEntity.anim.baseLayer.transition(\'Static\', 0.5);\n                }\n            });\n        });\n    });\n}',javaScriptFunction:'function example(canvas, deviceType, data) {\n    const assets = {\n        playcanvasGreyTexture: new pc.Asset(\n            "playcanvasGreyTexture",\n            "texture",\n            { url: "/static/assets/textures/playcanvas-grey.png" }\n        ),\n    };\n    const gfxOptions = {\n        deviceTypes: [deviceType],\n        glslangUrl: "/static/lib/glslang/glslang.js",\n        twgslUrl: "/static/lib/twgsl/twgsl.js",\n    };\n\n    pc.createGraphicsDevice(canvas, gfxOptions).then((device) => {\n        const createOptions = new pc.AppOptions();\n        createOptions.graphicsDevice = device;\n        createOptions.mouse = new pc.Mouse(document.body);\n        createOptions.touch = new pc.TouchDevice(document.body);\n        createOptions.elementInput = new pc.ElementInput(canvas);\n\n        createOptions.componentSystems = [\n            // @ts-ignore\n            pc.RenderComponentSystem,\n            // @ts-ignore\n            pc.CameraComponentSystem,\n            // @ts-ignore\n            pc.LightComponentSystem,\n            // @ts-ignore\n            pc.AnimComponentSystem,\n        ];\n\n        createOptions.resourceHandlers = [\n            // @ts-ignore\n            pc.TextureHandler,\n            // @ts-ignore\n            pc.AnimClipHandler,\n            // @ts-ignore\n            pc.AnimStateGraphHandler,\n        ];\n\n        const app = new pc.AppBase(canvas);\n        app.init(createOptions);\n\n        // Set the canvas to fill the window and automatically change resolution to be the same as the canvas size\n        app.setCanvasFillMode(pc.FILLMODE_FILL_WINDOW);\n        app.setCanvasResolution(pc.RESOLUTION_AUTO);\n\n        const assetListLoader = new pc.AssetListLoader(\n            Object.values(assets),\n            app.assets\n        );\n        assetListLoader.load(() => {\n            // create the animation data for two static spot lights\n            const animClipStaticLightData = {\n                name: "staticLight",\n                duration: 1.0,\n                // curve keyframe inputs\n                inputs: [[0.0]],\n\n                // curve keyframe outputs\n                outputs: [\n                    // a single RGBA color keyframe value of a green light\n                    {\n                        components: 4,\n                        data: [0.0, 1.0, 0.0, 1.0],\n                    },\n                    // a single quaternion keyframe value with no rotation\n                    {\n                        components: 4,\n                        data: [0.0, 0.0, 0.0, 0.0],\n                    },\n                ],\n\n                // the curves contained in the clip, each with the path to the property they animation, the index of\n                // their input and output keyframes and the method of interpolation to be used\n                curves: [\n                    {\n                        path: {\n                            entityPath: ["lights", "spotLight1"],\n                            component: "light",\n                            propertyPath: ["color"],\n                        },\n                        inputIndex: 0,\n                        outputIndex: 0,\n                        interpolation: 1,\n                    },\n                    {\n                        path: {\n                            entityPath: ["lights", "spotLight2"],\n                            component: "light",\n                            propertyPath: ["color"],\n                        },\n                        inputIndex: 0,\n                        outputIndex: 0,\n                        interpolation: 1,\n                    },\n                    {\n                        path: {\n                            entityPath: ["lights", "spotLight1"],\n                            component: "entity",\n                            propertyPath: ["localEulerAngles"],\n                        },\n                        inputIndex: 0,\n                        outputIndex: 1,\n                        interpolation: 1,\n                    },\n                    {\n                        path: {\n                            entityPath: ["lights", "spotLight2"],\n                            component: "entity",\n                            propertyPath: ["localEulerAngles"],\n                        },\n                        inputIndex: 0,\n                        outputIndex: 1,\n                        interpolation: 1,\n                    },\n                ],\n            };\n\n            // create the animation data for two flashing spot lights\n            const animClipFlashingLightData = {\n                name: "flashingLight",\n                duration: 2.0,\n                // curve keyframe inputs\n                inputs: [\n                    [0.0, 0.5, 1.0, 1.5, 2.0],\n\n                    [0, 1, 2],\n                ],\n\n                // curve keyframe outputs\n                outputs: [\n                    //  keyframe outputs for a flashing red RGBA color\n                    {\n                        components: 4,\n                        data: [\n                            1.0, 0.0, 0.0, 1.0, 0.4, 0.0, 0.0, 1.0, 1.0, 0.0,\n                            0.0, 1.0, 0.4, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0,\n                        ],\n                    },\n                    //  keyframe outputs for a quaternion rotation\n                    {\n                        components: 4,\n                        data: [\n                            4.0, 0.0, 0.0, 0.0, 4.0, 180.0, 0.0, 0.0, 4.0, 0.0,\n                            0.0, 0.0,\n                        ],\n                    },\n                    //  keyframe outputs for a quaternion rotation\n                    {\n                        components: 4,\n                        data: [\n                            -4.0, 0.0, 0.0, 0.0, -4.0, 180.0, 0.0, 0.0, -4.0,\n                            0.0, 0.0, 0.0,\n                        ],\n                    },\n                ],\n\n                // the curves contained in the clip, each with the path to the property they animation, the index of\n                // their input and output keyframes and the method of interpolation to be used\n                curves: [\n                    {\n                        path: {\n                            entityPath: ["lights", "spotLight1"],\n                            component: "light",\n                            propertyPath: ["color"],\n                        },\n                        inputIndex: 0,\n                        outputIndex: 0,\n                        interpolation: 1,\n                    },\n                    {\n                        path: {\n                            entityPath: ["lights", "spotLight2"],\n                            component: "light",\n                            propertyPath: ["color"],\n                        },\n                        inputIndex: 0,\n                        outputIndex: 0,\n                        interpolation: 1,\n                    },\n                    {\n                        path: {\n                            entityPath: ["lights", "spotLight1"],\n                            component: "entity",\n                            propertyPath: ["localEulerAngles"],\n                        },\n                        inputIndex: 1,\n                        outputIndex: 1,\n                        interpolation: 1,\n                    },\n                    {\n                        path: {\n                            entityPath: ["lights", "spotLight2"],\n                            component: "entity",\n                            propertyPath: ["localEulerAngles"],\n                        },\n                        inputIndex: 1,\n                        outputIndex: 2,\n                        interpolation: 1,\n                    },\n                ],\n            };\n\n            const animClipHandler = new pc.AnimClipHandler(app);\n            const animClipStaticLight = animClipHandler.open(\n                undefined,\n                animClipStaticLightData\n            );\n            const animClipFlashingLight = animClipHandler.open(\n                undefined,\n                animClipFlashingLightData\n            );\n\n            // Create an Entity with a camera component\n            const cameraEntity = new pc.Entity();\n            cameraEntity.name = "camera";\n            cameraEntity.addComponent("camera", {\n                clearColor: new pc.Color(0, 0, 0.0),\n            });\n            cameraEntity.translateLocal(7, 10, 7);\n            cameraEntity.lookAt(0, 0, 0);\n\n            const boxEntity = new pc.Entity();\n            boxEntity.addComponent("render", {\n                type: "box",\n            });\n            boxEntity.name = "model";\n            boxEntity.setPosition(0, 0.25, 0);\n            boxEntity.setLocalScale(0.5, 0.5, 0.5);\n            const material = new pc.StandardMaterial();\n            material.diffuseMap = assets.playcanvasGreyTexture.resource;\n            material.update();\n            boxEntity.render.meshInstances[0].material = material;\n\n            const planeEntity = new pc.Entity();\n            planeEntity.name = "plane";\n            planeEntity.addComponent("render", {\n                type: "plane",\n            });\n            planeEntity.setLocalScale(15, 1, 15);\n            planeEntity.setPosition(0, 0, 0);\n\n            // Create the animatible lights\n            const lightsEntity = new pc.Entity();\n            lightsEntity.name = "lights";\n\n            const light1 = new pc.Entity();\n            light1.name = "spotLight1";\n            light1.addComponent("light", {\n                type: "spot",\n                color: new pc.Color(0.0, 0.0, 0.0, 1.0),\n                intensity: 1,\n                range: 15,\n                innerConeAngle: 5,\n                outerConeAngle: 10,\n            });\n            light1.setPosition(0, 10, 0);\n\n            const light2 = new pc.Entity();\n            light2.name = "spotLight2";\n            light2.addComponent("light", {\n                type: "spot",\n                color: new pc.Color(0.0, 0.0, 0.0, 1.0),\n                intensity: 1,\n                range: 15,\n                innerConeAngle: 5,\n                outerConeAngle: 10,\n            });\n            light2.setPosition(0, 10, 0);\n\n            // Add Entities into the scene hierarchy\n            app.root.addChild(cameraEntity);\n            lightsEntity.addChild(light1);\n            lightsEntity.addChild(light2);\n            app.root.addChild(lightsEntity);\n            app.root.addChild(boxEntity);\n            app.root.addChild(planeEntity);\n\n            // add the anim component to the lights entity\n            lightsEntity.addComponent("anim", {\n                speed: 1.0,\n                activate: true,\n            });\n\n            // assign animation clip asset resources to the appropriate states\n            lightsEntity.anim.assignAnimation("Static", animClipStaticLight);\n            lightsEntity.anim.assignAnimation("Flash", animClipFlashingLight);\n\n            app.start();\n\n            data.on("flash:set", () => {\n                if (lightsEntity.anim.baseLayer.activeState === "Static") {\n                    lightsEntity.anim.baseLayer.transition("Flash", 0.5);\n                } else {\n                    lightsEntity.anim.baseLayer.transition("Static", 0.5);\n                }\n            });\n        });\n    });\n}\n',nameSlug:"component-properties",categorySlug:"animation"},events:{typeScriptFunction:"function example(canvas: HTMLCanvasElement, deviceType: string): void {\n\n    const assets = {\n        'model': new pc.Asset('model', 'container', { url: '/static/assets/models/bitmoji.glb' }),\n        'walkAnim': new pc.Asset('walkAnim', 'container', { url: '/static/assets/animations/bitmoji/walk.glb' }),\n        helipad: new pc.Asset('helipad-env-atlas', 'texture', { url: '/static/assets/cubemaps/helipad-env-atlas.png' }, { type: pc.TEXTURETYPE_RGBP, mipmaps: false }),\n        'bloom': new pc.Asset('bloom', 'script', { url: '/static/scripts/posteffects/posteffect-bloom.js' })\n    };\n    const gfxOptions = {\n        deviceTypes: [deviceType],\n        glslangUrl: '/static/lib/glslang/glslang.js',\n        twgslUrl: '/static/lib/twgsl/twgsl.js'\n    };\n\n    pc.createGraphicsDevice(canvas, gfxOptions).then((device: pc.GraphicsDevice) => {\n\n        const createOptions = new pc.AppOptions();\n        createOptions.graphicsDevice = device;\n        createOptions.mouse = new pc.Mouse(document.body);\n        createOptions.touch = new pc.TouchDevice(document.body);\n        createOptions.elementInput = new pc.ElementInput(canvas);\n\n        createOptions.componentSystems = [\n            // @ts-ignore\n            pc.RenderComponentSystem,\n            // @ts-ignore\n            pc.CameraComponentSystem,\n            // @ts-ignore\n            pc.LightComponentSystem,\n            // @ts-ignore\n            pc.ScriptComponentSystem,\n            // @ts-ignore\n            pc.AnimComponentSystem\n        ];\n        createOptions.resourceHandlers = [\n            // @ts-ignore\n            pc.TextureHandler,\n            // @ts-ignore\n            pc.ContainerHandler,\n            // @ts-ignore\n            pc.ScriptHandler,\n            // @ts-ignore\n            pc.AnimClipHandler,\n            // @ts-ignore\n            pc.AnimStateGraphHandler\n        ];\n\n        const app = new pc.AppBase(canvas);\n        app.init(createOptions);\n\n        // Set the canvas to fill the window and automatically change resolution to be the same as the canvas size\n        app.setCanvasFillMode(pc.FILLMODE_FILL_WINDOW);\n        app.setCanvasResolution(pc.RESOLUTION_AUTO);\n\n        const assetListLoader = new pc.AssetListLoader(Object.values(assets), app.assets);\n        assetListLoader.load(() => {\n\n            app.start();\n\n            // setup skydome\n            app.scene.exposure = 2;\n            app.scene.skyboxMip = 2;\n            app.scene.envAtlas = assets.helipad.resource;\n            app.scene.skyboxIntensity = 0.4;    // make it darker\n\n            // Create an Entity with a camera component\n            const cameraEntity = new pc.Entity();\n            cameraEntity.addComponent(\"camera\", {\n                clearColor: new pc.Color(0.1, 0.1, 0.1)\n            });\n            cameraEntity.translate(0, 1, 0);\n\n            // add bloom postprocessing (this is ignored by the picker)\n            cameraEntity.addComponent(\"script\");\n            cameraEntity.script.create(\"bloom\", {\n                attributes: {\n                    bloomIntensity: 1,\n                    bloomThreshold: 0.7,\n                    blurAmount: 4\n                }\n            });\n            app.root.addChild(cameraEntity);\n\n            const boxes: any = {};\n            const highlightedBoxes: pc.Entity[] = [];\n\n            // create a floor made up of box models\n            for (let i = -5; i <= 5; i++) {\n                for (let j = -5; j <= 5; j++) {\n\n                    const material = new pc.StandardMaterial();\n                    material.diffuse = new pc.Color(0.7, 0.7, 0.7);\n                    material.gloss = 0.3;\n                    material.metalness = 0.2;\n                    material.useMetalness = true;\n                    material.update();\n\n                    const box = new pc.Entity();\n                    boxes[`${i}${j}`] = box;\n                    box.addComponent('render', {\n                        type: 'box',\n                        material: material\n                    });\n                    box.setPosition(i, -0.5, j);\n                    box.setLocalScale(0.95, 1, 0.95);\n                    app.root.addChild(box);\n                }\n            }\n\n            // light up a box at the given position with a random color using the emissive material property\n            const highlightBox = (pos: pc.Vec3) => {\n                const i = Math.floor(pos.x + 0.5);\n                const j = Math.floor(pos.z + 0.5);\n                const colorVec = new pc.Vec3(Math.random(), Math.random(), Math.random());\n                colorVec.mulScalar(1 / colorVec.length());\n                boxes[`${i}${j}`].render.material.emissive = new pc.Color(colorVec.x, colorVec.y, colorVec.z);\n                highlightedBoxes.push(boxes[`${i}${j}`]);\n            };\n\n            // create an entity from the loaded model using the render component\n            const modelEntity = assets.model.resource.instantiateRenderEntity({\n                castShadows: true\n            });\n\n            // add an anim component to the entity\n            modelEntity.addComponent('anim', {\n                activate: true\n            });\n            modelEntity.setLocalPosition(-3, 0, 0);\n\n            const modelEntityParent = new pc.Entity();\n            modelEntityParent.addChild(modelEntity);\n\n            app.root.addChild(modelEntityParent);\n\n            // rotate the model in a circle around the center of the scene\n            app.on('update', (dt: number) => {\n                modelEntityParent.rotate(0, 13.8 * dt, 0);\n            });\n\n            const walkTrack = assets.walkAnim.resource.animations[0].resource;\n\n            // Add two anim events to the walk animation, one for each foot step. These events should occur just as each foot touches the ground\n            walkTrack.events = new pc.AnimEvents([\n                {\n                    time: walkTrack.duration * 0.1,\n                    name: 'foot_step',\n                    bone: 'R_foot0002_bind_JNT'\n                },\n                {\n                    time: walkTrack.duration * 0.6,\n                    name: 'foot_step',\n                    bone: 'L_foot0002_bind_JNT'\n                }\n            ]);\n\n            // add the animation track to the anim component, with a defined speed\n            modelEntity.anim.assignAnimation('Walk', walkTrack, undefined, 0.62);\n\n            modelEntity.anim.on('foot_step', (event: any) => {\n                // highlight the box that is under the foot's bone position\n                highlightBox(modelEntity.findByName(event.bone).getPosition());\n            });\n\n            app.on('update', () => {\n                // on update, iterate over any currently highlighted boxes and reduce their emissive property\n                highlightedBoxes.forEach((box: pc.Entity) => {\n                    const material = box.render.material as pc.StandardMaterial;\n                    const emissive = material.emissive;\n                    emissive.lerp(emissive, pc.Color.BLACK, 0.08);\n                    material.update();\n                });\n                // remove old highlighted boxes from the update loop\n                while (highlightedBoxes.length > 5) {\n                    highlightedBoxes.shift();\n                }\n\n                // set the camera to follow the model\n                const modelPosition = modelEntity.getPosition().clone();\n                modelPosition.y = 0.5;\n                cameraEntity.lookAt(modelPosition);\n\n            });\n        });\n    });\n}",javaScriptFunction:'function example(canvas, deviceType) {\n    const assets = {\n        model: new pc.Asset("model", "container", {\n            url: "/static/assets/models/bitmoji.glb",\n        }),\n        walkAnim: new pc.Asset("walkAnim", "container", {\n            url: "/static/assets/animations/bitmoji/walk.glb",\n        }),\n        helipad: new pc.Asset(\n            "helipad-env-atlas",\n            "texture",\n            { url: "/static/assets/cubemaps/helipad-env-atlas.png" },\n            { type: pc.TEXTURETYPE_RGBP, mipmaps: false }\n        ),\n        bloom: new pc.Asset("bloom", "script", {\n            url: "/static/scripts/posteffects/posteffect-bloom.js",\n        }),\n    };\n    const gfxOptions = {\n        deviceTypes: [deviceType],\n        glslangUrl: "/static/lib/glslang/glslang.js",\n        twgslUrl: "/static/lib/twgsl/twgsl.js",\n    };\n\n    pc.createGraphicsDevice(canvas, gfxOptions).then((device) => {\n        const createOptions = new pc.AppOptions();\n        createOptions.graphicsDevice = device;\n        createOptions.mouse = new pc.Mouse(document.body);\n        createOptions.touch = new pc.TouchDevice(document.body);\n        createOptions.elementInput = new pc.ElementInput(canvas);\n\n        createOptions.componentSystems = [\n            // @ts-ignore\n            pc.RenderComponentSystem,\n            // @ts-ignore\n            pc.CameraComponentSystem,\n            // @ts-ignore\n            pc.LightComponentSystem,\n            // @ts-ignore\n            pc.ScriptComponentSystem,\n            // @ts-ignore\n            pc.AnimComponentSystem,\n        ];\n\n        createOptions.resourceHandlers = [\n            // @ts-ignore\n            pc.TextureHandler,\n            // @ts-ignore\n            pc.ContainerHandler,\n            // @ts-ignore\n            pc.ScriptHandler,\n            // @ts-ignore\n            pc.AnimClipHandler,\n            // @ts-ignore\n            pc.AnimStateGraphHandler,\n        ];\n\n        const app = new pc.AppBase(canvas);\n        app.init(createOptions);\n\n        // Set the canvas to fill the window and automatically change resolution to be the same as the canvas size\n        app.setCanvasFillMode(pc.FILLMODE_FILL_WINDOW);\n        app.setCanvasResolution(pc.RESOLUTION_AUTO);\n\n        const assetListLoader = new pc.AssetListLoader(\n            Object.values(assets),\n            app.assets\n        );\n        assetListLoader.load(() => {\n            app.start();\n\n            // setup skydome\n            app.scene.exposure = 2;\n            app.scene.skyboxMip = 2;\n            app.scene.envAtlas = assets.helipad.resource;\n            app.scene.skyboxIntensity = 0.4; // make it darker\n\n            // Create an Entity with a camera component\n            const cameraEntity = new pc.Entity();\n            cameraEntity.addComponent("camera", {\n                clearColor: new pc.Color(0.1, 0.1, 0.1),\n            });\n            cameraEntity.translate(0, 1, 0);\n\n            // add bloom postprocessing (this is ignored by the picker)\n            cameraEntity.addComponent("script");\n            cameraEntity.script.create("bloom", {\n                attributes: {\n                    bloomIntensity: 1,\n                    bloomThreshold: 0.7,\n                    blurAmount: 4,\n                },\n            });\n            app.root.addChild(cameraEntity);\n\n            const boxes = {};\n            const highlightedBoxes = [];\n\n            // create a floor made up of box models\n            for (let i = -5; i <= 5; i++) {\n                for (let j = -5; j <= 5; j++) {\n                    const material = new pc.StandardMaterial();\n                    material.diffuse = new pc.Color(0.7, 0.7, 0.7);\n                    material.gloss = 0.3;\n                    material.metalness = 0.2;\n                    material.useMetalness = true;\n                    material.update();\n\n                    const box = new pc.Entity();\n                    boxes[`${i}${j}`] = box;\n                    box.addComponent("render", {\n                        type: "box",\n                        material: material,\n                    });\n                    box.setPosition(i, -0.5, j);\n                    box.setLocalScale(0.95, 1, 0.95);\n                    app.root.addChild(box);\n                }\n            }\n\n            // light up a box at the given position with a random color using the emissive material property\n            const highlightBox = (pos) => {\n                const i = Math.floor(pos.x + 0.5);\n                const j = Math.floor(pos.z + 0.5);\n                const colorVec = new pc.Vec3(\n                    Math.random(),\n                    Math.random(),\n                    Math.random()\n                );\n                colorVec.mulScalar(1 / colorVec.length());\n                boxes[`${i}${j}`].render.material.emissive = new pc.Color(\n                    colorVec.x,\n                    colorVec.y,\n                    colorVec.z\n                );\n                highlightedBoxes.push(boxes[`${i}${j}`]);\n            };\n\n            // create an entity from the loaded model using the render component\n            const modelEntity = assets.model.resource.instantiateRenderEntity({\n                castShadows: true,\n            });\n\n            // add an anim component to the entity\n            modelEntity.addComponent("anim", {\n                activate: true,\n            });\n            modelEntity.setLocalPosition(-3, 0, 0);\n\n            const modelEntityParent = new pc.Entity();\n            modelEntityParent.addChild(modelEntity);\n\n            app.root.addChild(modelEntityParent);\n\n            // rotate the model in a circle around the center of the scene\n            app.on("update", (dt) => {\n                modelEntityParent.rotate(0, 13.8 * dt, 0);\n            });\n\n            const walkTrack = assets.walkAnim.resource.animations[0].resource;\n\n            // Add two anim events to the walk animation, one for each foot step. These events should occur just as each foot touches the ground\n            walkTrack.events = new pc.AnimEvents([\n                {\n                    time: walkTrack.duration * 0.1,\n                    name: "foot_step",\n                    bone: "R_foot0002_bind_JNT",\n                },\n                {\n                    time: walkTrack.duration * 0.6,\n                    name: "foot_step",\n                    bone: "L_foot0002_bind_JNT",\n                },\n            ]);\n\n            // add the animation track to the anim component, with a defined speed\n            modelEntity.anim.assignAnimation(\n                "Walk",\n                walkTrack,\n                undefined,\n                0.62\n            );\n\n            modelEntity.anim.on("foot_step", (event) => {\n                // highlight the box that is under the foot\'s bone position\n                highlightBox(modelEntity.findByName(event.bone).getPosition());\n            });\n\n            app.on("update", () => {\n                // on update, iterate over any currently highlighted boxes and reduce their emissive property\n                highlightedBoxes.forEach((box) => {\n                    const material = box.render.material;\n                    const emissive = material.emissive;\n                    emissive.lerp(emissive, pc.Color.BLACK, 0.08);\n                    material.update();\n                });\n                // remove old highlighted boxes from the update loop\n                while (highlightedBoxes.length > 5) {\n                    highlightedBoxes.shift();\n                }\n\n                // set the camera to follow the model\n                const modelPosition = modelEntity.getPosition().clone();\n                modelPosition.y = 0.5;\n                cameraEntity.lookAt(modelPosition);\n            });\n        });\n    });\n}\n',nameSlug:"events",categorySlug:"animation"},"layer-masks":{typeScriptFunction:"function example(canvas: HTMLCanvasElement, deviceType: string, data: any): void {\n\n    const assets = {\n        'model': new pc.Asset('model', 'container', { url: '/static/assets/models/bitmoji.glb' }),\n        'idleAnim': new pc.Asset('idleAnim', 'container', { url: '/static/assets/animations/bitmoji/idle.glb' }),\n        'idleEagerAnim': new pc.Asset('idleEagerAnim', 'container', { url: '/static/assets/animations/bitmoji/idle-eager.glb' }),\n        'walkAnim': new pc.Asset('walkAnim', 'container', { url: '/static/assets/animations/bitmoji/walk.glb' }),\n        'danceAnim': new pc.Asset('danceAnim', 'container', { url: '/static/assets/animations/bitmoji/win-dance.glb' }),\n        helipad: new pc.Asset('helipad-env-atlas', 'texture', { url: '/static/assets/cubemaps/helipad-env-atlas.png' }, { type: pc.TEXTURETYPE_RGBP, mipmaps: false }),\n        'bloom': new pc.Asset('bloom', 'script', { url: '/static/scripts/posteffects/posteffect-bloom.js' })\n    };\n\n    const gfxOptions = {\n        deviceTypes: [deviceType],\n        glslangUrl: '/static/lib/glslang/glslang.js',\n        twgslUrl: '/static/lib/twgsl/twgsl.js'\n    };\n\n    pc.createGraphicsDevice(canvas, gfxOptions).then((device: pc.GraphicsDevice) => {\n\n        const createOptions = new pc.AppOptions();\n        createOptions.graphicsDevice = device;\n        createOptions.mouse = new pc.Mouse(document.body);\n        createOptions.touch = new pc.TouchDevice(document.body);\n\n        createOptions.componentSystems = [\n            // @ts-ignore\n            pc.RenderComponentSystem,\n            // @ts-ignore\n            pc.CameraComponentSystem,\n            // @ts-ignore\n            pc.LightComponentSystem,\n            // @ts-ignore\n            pc.ScriptComponentSystem,\n            // @ts-ignore\n            pc.AnimComponentSystem\n        ];\n        createOptions.resourceHandlers = [\n            // @ts-ignore\n            pc.TextureHandler,\n            // @ts-ignore\n            pc.ContainerHandler,\n            // @ts-ignore\n            pc.ScriptHandler,\n            // @ts-ignore\n            pc.AnimClipHandler,\n            // @ts-ignore\n            pc.AnimStateGraphHandler\n        ];\n\n        const app = new pc.AppBase(canvas);\n        app.init(createOptions);\n\n        // Set the canvas to fill the window and automatically change resolution to be the same as the canvas size\n        app.setCanvasFillMode(pc.FILLMODE_FILL_WINDOW);\n        app.setCanvasResolution(pc.RESOLUTION_AUTO);\n\n        const assetListLoader = new pc.AssetListLoader(Object.values(assets), app.assets);\n        assetListLoader.load(() => {\n\n            // setup data\n            data.set('fullBodyLayer', {\n                state: 'Idle',\n                blendType: pc.ANIM_LAYER_OVERWRITE\n            });\n            data.set('upperBodyLayer', {\n                state: 'Eager',\n                blendType: pc.ANIM_LAYER_ADDITIVE,\n                useMask: true\n            });\n            data.set('options', {\n                blend: 0.5,\n                skeleton: true\n            });\n\n            // setup skydome\n            app.scene.exposure = 2;\n            app.scene.skyboxMip = 2;\n            app.scene.envAtlas = assets.helipad.resource;\n\n            // Create an Entity with a camera component\n            const cameraEntity = new pc.Entity();\n            cameraEntity.addComponent(\"camera\", {\n                clearColor: new pc.Color(0.1, 0.1, 0.1)\n            });\n            cameraEntity.translate(0, 0.75, 3);\n\n            // add bloom postprocessing (this is ignored by the picker)\n            cameraEntity.addComponent(\"script\");\n            cameraEntity.script.create(\"bloom\", {\n                attributes: {\n                    bloomIntensity: 1,\n                    bloomThreshold: 0.7,\n                    blurAmount: 4\n                }\n            });\n            app.root.addChild(cameraEntity);\n\n            // Create an entity with a light component\n            const lightEntity = new pc.Entity();\n            lightEntity.addComponent(\"light\", {\n                castShadows: true,\n                intensity: 1.5,\n                normalOffsetBias: 0.02,\n                shadowType: pc.SHADOW_PCF5,\n                shadowDistance: 6,\n                shadowResolution: 2048,\n                shadowBias: 0.02\n            });\n            app.root.addChild(lightEntity);\n            lightEntity.setLocalEulerAngles(45, 30, 0);\n\n            // create an entity from the loaded model using the render component\n            const modelEntity = assets.model.resource.instantiateRenderEntity({\n                castShadows: true\n            });\n            modelEntity.addComponent('anim', {\n                activate: true\n            });\n            app.root.addChild(modelEntity);\n\n            // retrieve the animation assets\n            const idleTrack = assets.idleAnim.resource.animations[0].resource;\n            const walkTrack = assets.walkAnim.resource.animations[0].resource;\n            const danceTrack = assets.danceAnim.resource.animations[0].resource;\n            const idleEagerTrack = assets.idleEagerAnim.resource.animations[0].resource;\n\n            // create the full body layer by assigning full body animations to the anim component\n            modelEntity.anim.assignAnimation('Idle', idleTrack);\n            modelEntity.anim.assignAnimation('Walk', walkTrack);\n\n            // set the default weight for the base layer\n            modelEntity.anim.baseLayer.weight = 1.0 - data.get('options.blend');\n\n            // create a mask for the upper body layer\n            const upperBodyMask = {\n                // set a path with the children property as true to include that path and all of its children in the mask\n                'RootNode/AVATAR/C_spine0001_bind_JNT/C_spine0002_bind_JNT': {\n                    children: true\n                },\n                // set a path to true in the mask to include only that specific path\n                'RootNode/AVATAR/C_spine0001_bind_JNT/C_spine0002_bind_JNT/C_Head': true\n            };\n\n            // create a new layer for the upper body, with additive layer blending\n            const upperBodyLayer = modelEntity.anim.addLayer('UpperBody', data.get('options.blend'), upperBodyMask, data.get('upperBodyLayer.blendType'));\n            upperBodyLayer.assignAnimation('Eager', idleEagerTrack);\n            upperBodyLayer.assignAnimation('Idle', idleTrack);\n            upperBodyLayer.assignAnimation('Dance', danceTrack);\n\n            // respond to changes in the data object made by the control panel\n            data.on('*:set', (path: string, value: any) => {\n                if (path === 'fullBodyLayer.state') {\n                    modelEntity.anim.baseLayer.transition(value, 0.4);\n                }\n                if (path === 'upperBodyLayer.state') {\n                    upperBodyLayer.transition(value, 0.4);\n                }\n                if (path === 'fullBodyLayer.blendType') {\n                    modelEntity.anim.baseLayer.blendType = value;\n                }\n                if (path === 'upperBodyLayer.blendType') {\n                    upperBodyLayer.blendType = value;\n                }\n                if (path === 'upperBodyLayer.useMask') {\n                    upperBodyLayer.mask = value ? {\n                        'RootNode/AVATAR/C_spine0001_bind_JNT/C_spine0002_bind_JNT': {\n                            children: true\n                        }\n                    } : null;\n                }\n                if (path === 'options.blend') {\n                    modelEntity.anim.baseLayer.weight = 1.0 - value;\n                    upperBodyLayer.weight = value;\n                }\n            });\n\n            const drawSkeleton = (entity: pc.Entity, color: pc.Color) => {\n                entity.children.forEach((c: pc.Entity) => {\n                    const target = modelEntity.anim._targets[entity.path + '/graph/localPosition'];\n                    if (target) {\n                        app.drawLine(entity.getPosition(), c.getPosition(), new pc.Color(target.getWeight(0), 0, target.getWeight(1), 1), false);\n                    }\n                    drawSkeleton(c, color);\n                });\n            };\n\n            app.on('update', () => {\n                if (data.get('options.skeleton')) {\n                    drawSkeleton(modelEntity, new pc.Color(1, 0, 0, modelEntity.anim.baseLayer.weight * 0.5));\n                }\n            });\n\n            app.start();\n        });\n    });\n}",javaScriptFunction:'function example(canvas, deviceType, data) {\n    const assets = {\n        model: new pc.Asset("model", "container", {\n            url: "/static/assets/models/bitmoji.glb",\n        }),\n        idleAnim: new pc.Asset("idleAnim", "container", {\n            url: "/static/assets/animations/bitmoji/idle.glb",\n        }),\n        idleEagerAnim: new pc.Asset("idleEagerAnim", "container", {\n            url: "/static/assets/animations/bitmoji/idle-eager.glb",\n        }),\n        walkAnim: new pc.Asset("walkAnim", "container", {\n            url: "/static/assets/animations/bitmoji/walk.glb",\n        }),\n        danceAnim: new pc.Asset("danceAnim", "container", {\n            url: "/static/assets/animations/bitmoji/win-dance.glb",\n        }),\n        helipad: new pc.Asset(\n            "helipad-env-atlas",\n            "texture",\n            { url: "/static/assets/cubemaps/helipad-env-atlas.png" },\n            { type: pc.TEXTURETYPE_RGBP, mipmaps: false }\n        ),\n        bloom: new pc.Asset("bloom", "script", {\n            url: "/static/scripts/posteffects/posteffect-bloom.js",\n        }),\n    };\n\n    const gfxOptions = {\n        deviceTypes: [deviceType],\n        glslangUrl: "/static/lib/glslang/glslang.js",\n        twgslUrl: "/static/lib/twgsl/twgsl.js",\n    };\n\n    pc.createGraphicsDevice(canvas, gfxOptions).then((device) => {\n        const createOptions = new pc.AppOptions();\n        createOptions.graphicsDevice = device;\n        createOptions.mouse = new pc.Mouse(document.body);\n        createOptions.touch = new pc.TouchDevice(document.body);\n\n        createOptions.componentSystems = [\n            // @ts-ignore\n            pc.RenderComponentSystem,\n            // @ts-ignore\n            pc.CameraComponentSystem,\n            // @ts-ignore\n            pc.LightComponentSystem,\n            // @ts-ignore\n            pc.ScriptComponentSystem,\n            // @ts-ignore\n            pc.AnimComponentSystem,\n        ];\n\n        createOptions.resourceHandlers = [\n            // @ts-ignore\n            pc.TextureHandler,\n            // @ts-ignore\n            pc.ContainerHandler,\n            // @ts-ignore\n            pc.ScriptHandler,\n            // @ts-ignore\n            pc.AnimClipHandler,\n            // @ts-ignore\n            pc.AnimStateGraphHandler,\n        ];\n\n        const app = new pc.AppBase(canvas);\n        app.init(createOptions);\n\n        // Set the canvas to fill the window and automatically change resolution to be the same as the canvas size\n        app.setCanvasFillMode(pc.FILLMODE_FILL_WINDOW);\n        app.setCanvasResolution(pc.RESOLUTION_AUTO);\n\n        const assetListLoader = new pc.AssetListLoader(\n            Object.values(assets),\n            app.assets\n        );\n        assetListLoader.load(() => {\n            // setup data\n            data.set("fullBodyLayer", {\n                state: "Idle",\n                blendType: pc.ANIM_LAYER_OVERWRITE,\n            });\n            data.set("upperBodyLayer", {\n                state: "Eager",\n                blendType: pc.ANIM_LAYER_ADDITIVE,\n                useMask: true,\n            });\n            data.set("options", {\n                blend: 0.5,\n                skeleton: true,\n            });\n\n            // setup skydome\n            app.scene.exposure = 2;\n            app.scene.skyboxMip = 2;\n            app.scene.envAtlas = assets.helipad.resource;\n\n            // Create an Entity with a camera component\n            const cameraEntity = new pc.Entity();\n            cameraEntity.addComponent("camera", {\n                clearColor: new pc.Color(0.1, 0.1, 0.1),\n            });\n            cameraEntity.translate(0, 0.75, 3);\n\n            // add bloom postprocessing (this is ignored by the picker)\n            cameraEntity.addComponent("script");\n            cameraEntity.script.create("bloom", {\n                attributes: {\n                    bloomIntensity: 1,\n                    bloomThreshold: 0.7,\n                    blurAmount: 4,\n                },\n            });\n            app.root.addChild(cameraEntity);\n\n            // Create an entity with a light component\n            const lightEntity = new pc.Entity();\n            lightEntity.addComponent("light", {\n                castShadows: true,\n                intensity: 1.5,\n                normalOffsetBias: 0.02,\n                shadowType: pc.SHADOW_PCF5,\n                shadowDistance: 6,\n                shadowResolution: 2048,\n                shadowBias: 0.02,\n            });\n            app.root.addChild(lightEntity);\n            lightEntity.setLocalEulerAngles(45, 30, 0);\n\n            // create an entity from the loaded model using the render component\n            const modelEntity = assets.model.resource.instantiateRenderEntity({\n                castShadows: true,\n            });\n            modelEntity.addComponent("anim", {\n                activate: true,\n            });\n            app.root.addChild(modelEntity);\n\n            // retrieve the animation assets\n            const idleTrack = assets.idleAnim.resource.animations[0].resource;\n            const walkTrack = assets.walkAnim.resource.animations[0].resource;\n            const danceTrack = assets.danceAnim.resource.animations[0].resource;\n            const idleEagerTrack =\n                assets.idleEagerAnim.resource.animations[0].resource;\n\n            // create the full body layer by assigning full body animations to the anim component\n            modelEntity.anim.assignAnimation("Idle", idleTrack);\n            modelEntity.anim.assignAnimation("Walk", walkTrack);\n\n            // set the default weight for the base layer\n            modelEntity.anim.baseLayer.weight = 1.0 - data.get("options.blend");\n\n            // create a mask for the upper body layer\n            const upperBodyMask = {\n                // set a path with the children property as true to include that path and all of its children in the mask\n                "RootNode/AVATAR/C_spine0001_bind_JNT/C_spine0002_bind_JNT": {\n                    children: true,\n                },\n                // set a path to true in the mask to include only that specific path\n                "RootNode/AVATAR/C_spine0001_bind_JNT/C_spine0002_bind_JNT/C_Head": true,\n            };\n\n            // create a new layer for the upper body, with additive layer blending\n            const upperBodyLayer = modelEntity.anim.addLayer(\n                "UpperBody",\n                data.get("options.blend"),\n                upperBodyMask,\n                data.get("upperBodyLayer.blendType")\n            );\n            upperBodyLayer.assignAnimation("Eager", idleEagerTrack);\n            upperBodyLayer.assignAnimation("Idle", idleTrack);\n            upperBodyLayer.assignAnimation("Dance", danceTrack);\n\n            // respond to changes in the data object made by the control panel\n            data.on("*:set", (path, value) => {\n                if (path === "fullBodyLayer.state") {\n                    modelEntity.anim.baseLayer.transition(value, 0.4);\n                }\n                if (path === "upperBodyLayer.state") {\n                    upperBodyLayer.transition(value, 0.4);\n                }\n                if (path === "fullBodyLayer.blendType") {\n                    modelEntity.anim.baseLayer.blendType = value;\n                }\n                if (path === "upperBodyLayer.blendType") {\n                    upperBodyLayer.blendType = value;\n                }\n                if (path === "upperBodyLayer.useMask") {\n                    upperBodyLayer.mask = value\n                        ? {\n                              "RootNode/AVATAR/C_spine0001_bind_JNT/C_spine0002_bind_JNT":\n                                  {\n                                      children: true,\n                                  },\n                          }\n                        : null;\n                }\n                if (path === "options.blend") {\n                    modelEntity.anim.baseLayer.weight = 1.0 - value;\n                    upperBodyLayer.weight = value;\n                }\n            });\n\n            const drawSkeleton = (entity, color) => {\n                entity.children.forEach((c) => {\n                    const target =\n                        modelEntity.anim._targets[\n                            entity.path + "/graph/localPosition"\n                        ];\n                    if (target) {\n                        app.drawLine(\n                            entity.getPosition(),\n                            c.getPosition(),\n                            new pc.Color(\n                                target.getWeight(0),\n                                0,\n                                target.getWeight(1),\n                                1\n                            ),\n                            false\n                        );\n                    }\n                    drawSkeleton(c, color);\n                });\n            };\n\n            app.on("update", () => {\n                if (data.get("options.skeleton")) {\n                    drawSkeleton(\n                        modelEntity,\n                        new pc.Color(\n                            1,\n                            0,\n                            0,\n                            modelEntity.anim.baseLayer.weight * 0.5\n                        )\n                    );\n                }\n            });\n\n            app.start();\n        });\n    });\n}\n',nameSlug:"layer-masks",categorySlug:"animation"},locomotion:{typeScriptFunction:'function example(canvas: HTMLCanvasElement, deviceType: string, data: any): void {\n\n    pc.WasmModule.setConfig(\'Ammo\', {\n        glueUrl: \'/static/lib/ammo/ammo.wasm.js\',\n        wasmUrl: \'/static/lib/ammo/ammo.wasm.wasm\',\n        fallbackUrl: \'/static/lib/ammo/ammo.js\'\n    });\n\n    pc.WasmModule.getInstance(\'Ammo\', run);\n\n    function run() {\n\n        const assets = {\n            \'playcanvasGreyTexture\': new pc.Asset(\'playcanvasGreyTexture\', \'texture\', { url: \'/static/assets/textures/playcanvas-grey.png\' }),\n            \'model\': new pc.Asset(\'model\', \'container\', { url: \'/static/assets/models/bitmoji.glb\' }),\n            \'idleAnim\': new pc.Asset(\'idleAnim\', \'container\', { url: \'/static/assets/animations/bitmoji/idle.glb\' }),\n            \'walkAnim\': new pc.Asset(\'walkAnim\', \'container\', { url: \'/static/assets/animations/bitmoji/walk.glb\' }),\n            \'jogAnim\': new pc.Asset(\'jogAnim\', \'container\', { url: \'/static/assets/animations/bitmoji/run.glb\' }),\n            \'jumpAnim\': new pc.Asset(\'jumpAnim\', \'container\', { url: \'/static/assets/animations/bitmoji/jump-flip.glb\' }),\n            helipad: new pc.Asset(\'helipad-env-atlas\', \'texture\', { url: \'/static/assets/cubemaps/helipad-env-atlas.png\' }, { type: pc.TEXTURETYPE_RGBP, mipmaps: false })\n        };\n\n        const gfxOptions = {\n            deviceTypes: [deviceType],\n            glslangUrl: \'/static/lib/glslang/glslang.js\',\n            twgslUrl: \'/static/lib/twgsl/twgsl.js\'\n        };\n\n        pc.createGraphicsDevice(canvas, gfxOptions).then((device: pc.GraphicsDevice) => {\n\n            const createOptions = new pc.AppOptions();\n            createOptions.graphicsDevice = device;\n            createOptions.mouse = new pc.Mouse(document.body);\n            createOptions.touch = new pc.TouchDevice(document.body);\n\n            createOptions.componentSystems = [\n                // @ts-ignore\n                pc.RenderComponentSystem,\n                // @ts-ignore\n                pc.CameraComponentSystem,\n                // @ts-ignore\n                pc.LightComponentSystem,\n                // @ts-ignore\n                pc.ScriptComponentSystem,\n                // @ts-ignore\n                pc.AnimComponentSystem,\n                // @ts-ignore\n                pc.CollisionComponentSystem,\n                // @ts-ignore\n                pc.RigidBodyComponentSystem\n            ];\n            createOptions.resourceHandlers = [\n                // @ts-ignore\n                pc.TextureHandler,\n                // @ts-ignore\n                pc.ContainerHandler,\n                // @ts-ignore\n                pc.ScriptHandler,\n                // @ts-ignore\n                pc.AnimClipHandler,\n                // @ts-ignore\n                pc.AnimStateGraphHandler\n            ];\n\n            const app = new pc.AppBase(canvas);\n            app.init(createOptions);\n\n            // Set the canvas to fill the window and automatically change resolution to be the same as the canvas size\n            app.setCanvasFillMode(pc.FILLMODE_FILL_WINDOW);\n            app.setCanvasResolution(pc.RESOLUTION_AUTO);\n\n            const assetListLoader = new pc.AssetListLoader(Object.values(assets), app.assets);\n            assetListLoader.load(() => {\n\n                // setup skydome\n                app.scene.skyboxMip = 2;\n                app.scene.skyboxIntensity = 0.7;\n                app.scene.envAtlas = assets.helipad.resource;\n                app.scene.toneMapping = pc.TONEMAP_ACES;\n\n                // Create an Entity with a camera component\n                const cameraEntity = new pc.Entity();\n                cameraEntity.name = "Camera";\n                cameraEntity.addComponent("camera", {\n                    clearColor: new pc.Color(0.1, 0.15, 0.2)\n                });\n\n                cameraEntity.translateLocal(0.5, 3, 8);\n                cameraEntity.rotateLocal(-30, 0, 0);\n                app.root.addChild(cameraEntity);\n\n                // Create an entity with a light component\n                const light = new pc.Entity();\n                light.addComponent("light", {\n                    type: "directional",\n                    color: new pc.Color(1, 1, 1),\n                    castShadows: true,\n                    intensity: 2,\n                    shadowBias: 0.2,\n                    shadowDistance: 16,\n                    normalOffsetBias: 0.05,\n                    shadowResolution: 2048\n                });\n                light.setLocalEulerAngles(60, 30, 0);\n                app.root.addChild(light);\n\n                app.start();\n\n                const characterEntity = new pc.Entity();\n\n                // create an entity from the loaded model using the render component\n                const renderEntity = assets.model.resource.instantiateRenderEntity({\n                    castShadows: true\n                });\n\n                // assign the renderEntity as the child of character entity. All transforms of the\n                // renderEntity and its children are driven by the anim component.\n                // The characterEntity transform will be controlled by the Locomotion script.\n                characterEntity.addChild(renderEntity);\n\n                // add an anim component to the entity\n                characterEntity.addComponent(\'anim\', {\n                    activate: true\n                });\n\n                // create an anim state graph\n                const animStateGraphData = {\n                    "layers": [\n                        {\n                            "name": "locomotion",\n                            "states": [\n                                {\n                                    "name": "START"\n                                },\n                                {\n                                    "name": "Idle",\n                                    "speed": 1.0\n                                },\n                                {\n                                    "name": "Walk",\n                                    "speed": 1.0\n                                },\n                                {\n                                    "name": "Jump",\n                                    "speed": 1\n                                },\n                                {\n                                    "name": "Jog",\n                                    "speed": 1.0\n                                },\n                                {\n                                    "name": "END"\n                                }\n                            ],\n                            "transitions": [\n                                {\n                                    "from": "START",\n                                    "to": "Idle",\n                                    "time": 0,\n                                    "priority": 0\n                                },\n                                {\n                                    "from": "Idle",\n                                    "to": "Walk",\n                                    "time": 0.1,\n                                    "priority": 0,\n                                    "conditions": [\n                                        {\n                                            "parameterName": "speed",\n                                            "predicate": pc.ANIM_GREATER_THAN,\n                                            "value": 0\n                                        }\n                                    ]\n                                },\n                                {\n                                    "from": "ANY",\n                                    "to": "Jump",\n                                    "time": 0.1,\n                                    "priority": 0,\n                                    "conditions": [\n                                        {\n                                            "parameterName": "jump",\n                                            "predicate": pc.ANIM_EQUAL_TO,\n                                            "value": true\n                                        }\n                                    ]\n                                },\n                                {\n                                    "from": "Jump",\n                                    "to": "Idle",\n                                    "time": 0.2,\n                                    "priority": 0,\n                                    "exitTime": 0.8\n                                },\n                                {\n                                    "from": "Jump",\n                                    "to": "Walk",\n                                    "time": 0.2,\n                                    "priority": 0,\n                                    "exitTime": 0.8\n                                },\n                                {\n                                    "from": "Walk",\n                                    "to": "Idle",\n                                    "time": 0.1,\n                                    "priority": 0,\n                                    "conditions": [\n                                        {\n                                            "parameterName": "speed",\n                                            "predicate": pc.ANIM_LESS_THAN_EQUAL_TO,\n                                            "value": 0\n                                        }\n                                    ]\n                                },\n                                {\n                                    "from": "Walk",\n                                    "to": "Jog",\n                                    "time": 0.1,\n                                    "priority": 0,\n                                    "conditions": [\n                                        {\n                                            "parameterName": "speed",\n                                            "predicate": pc.ANIM_GREATER_THAN,\n                                            "value": 1\n                                        }\n                                    ]\n                                },\n                                {\n                                    "from": "Jog",\n                                    "to": "Walk",\n                                    "time": 0.1,\n                                    "priority": 0,\n                                    "conditions": [\n                                        {\n                                            "parameterName": "speed",\n                                            "predicate": pc.ANIM_LESS_THAN,\n                                            "value": 2\n                                        }\n                                    ]\n                                }\n                            ]\n                        }\n                    ],\n                    "parameters": {\n                        "speed": {\n                            "name": "speed",\n                            "type": pc.ANIM_PARAMETER_INTEGER,\n                            "value": 0\n                        },\n                        "jump": {\n                            "name": "jump",\n                            "type": pc.ANIM_PARAMETER_TRIGGER,\n                            "value": false\n                        }\n                    }\n                };\n\n                // load the state graph into the anim component\n                characterEntity.anim.loadStateGraph(animStateGraphData);\n\n                // assign the loaded animation assets to each of the states present in the state graph\n                const locomotionLayer = characterEntity.anim.baseLayer;\n                locomotionLayer.assignAnimation(\'Idle\', assets.idleAnim.resource.animations[0].resource);\n                locomotionLayer.assignAnimation(\'Walk\', assets.walkAnim.resource.animations[0].resource);\n                locomotionLayer.assignAnimation(\'Jog\', assets.jogAnim.resource.animations[0].resource);\n                locomotionLayer.assignAnimation(\'Jump\', assets.jumpAnim.resource.animations[0].resource);\n\n                app.root.addChild(characterEntity);\n\n                const planeEntity = new pc.Entity();\n                planeEntity.name = \'Plane\';\n                planeEntity.addComponent("render", {\n                    type: "plane"\n                });\n                planeEntity.addComponent("collision", {\n                    type: \'box\',\n                    halfExtents: new pc.Vec3(7.5, 0, 7.5)\n                });\n                planeEntity.addComponent("rigidbody", {\n                    type: \'static\'\n                });\n                planeEntity.setLocalScale(15, 1, 15);\n                planeEntity.setPosition(0, 0, 0);\n                const material = new pc.StandardMaterial();\n                material.diffuseMap = assets.playcanvasGreyTexture.resource;\n                material.update();\n                planeEntity.render.meshInstances[0].material = material;\n                app.root.addChild(planeEntity);\n\n                data.on(\'jump\', function () {\n                    const isJumping = characterEntity.anim.baseLayer.activeState === \'Jump\';\n                    if (!isJumping) {\n                        characterEntity.anim.setTrigger(\'jump\');\n                    }\n                });\n\n                // create a Locomotion script and initialize some variables\n                const Locomotion = pc.createScript(\'Locomotion\');\n\n                let characterDirection;\n                let targetPosition: pc.Vec3;\n\n                // initialize code called once per entity\n                Locomotion.prototype.initialize = function () {\n                    characterDirection = new pc.Vec3(1, 0, 0);\n                    targetPosition = new pc.Vec3(2, 0, 2);\n                    document.addEventListener("mousedown", this.onMouseDown);\n                };\n\n                // @ts-ignore engine-tsd\n                Locomotion.prototype.onMouseDown = function (event: any) {\n                    if (event.button !== 0) return;\n                    // Set the character target position to a position on the plane that the user has clicked\n                    const cameraEntity = app.root.findByName(\'Camera\') as pc.Entity;\n                    const near = cameraEntity.camera.screenToWorld(event.x, event.y, cameraEntity.camera.nearClip);\n                    const far = cameraEntity.camera.screenToWorld(event.x, event.y, cameraEntity.camera.farClip);\n                    const result = app.systems.rigidbody.raycastFirst(far, near);\n                    if (result) {\n                        targetPosition = new pc.Vec3(result.point.x, 0, result.point.z);\n                        characterEntity.anim.setInteger(\'speed\', data.get(\'jogToggle\') ? 2 : 1);\n                    }\n                };\n\n                // defines how many units the character should move per second given its current animation state\n                function speedForState(state: any) {\n                    switch (state) {\n                        case \'Walk\':\n                            return 1.0;\n                        case \'Jog\':\n                            return 4.0;\n                        case \'Jump\':\n                        case \'Idle\':\n                        default:\n                            return 0.0;\n                    }\n                }\n\n                const currentPosition = new pc.Vec3(0, 0, 0);\n\n                // update code called every frame\n                Locomotion.prototype.update = function (dt: number) {\n                    if (characterEntity.anim.getInteger(\'speed\')) {\n                        // Update position if target position is not the same as entity position. Base the movement speed on the current state\n                        // Move the character along X & Z axis based on click target position & make character face click direction\n                        let moveSpeed = speedForState(characterEntity.anim.baseLayer.activeState);\n                        if (characterEntity.anim.baseLayer.transitioning) {\n                            const prevMoveSpeed = speedForState(characterEntity.anim.baseLayer.previousState);\n                            const progress = characterEntity.anim.baseLayer.transitionProgress;\n                            moveSpeed = (prevMoveSpeed * (1.0 - progress)) + (moveSpeed * progress);\n                        }\n                        const distance = targetPosition.clone().sub(currentPosition);\n                        const direction = distance.clone().normalize();\n                        characterDirection = new pc.Vec3().sub(direction);\n                        const movement = direction.clone().mulScalar(dt * moveSpeed);\n                        if (movement.length() < distance.length()) {\n                            currentPosition.add(movement);\n                            characterEntity.setPosition(currentPosition);\n                            characterEntity.lookAt(characterEntity.getPosition().clone().add(characterDirection));\n                        } else {\n                            currentPosition.copy(targetPosition);\n                            characterEntity.setPosition(currentPosition);\n                            characterEntity.anim.setInteger(\'speed\', 0);\n                        }\n                    }\n\n                };\n\n                characterEntity.addComponent("script");\n                characterEntity.script.create(\'Locomotion\', {});\n            });\n        });\n    }\n}',javaScriptFunction:'function example(canvas, deviceType, data) {\n    pc.WasmModule.setConfig("Ammo", {\n        glueUrl: "/static/lib/ammo/ammo.wasm.js",\n        wasmUrl: "/static/lib/ammo/ammo.wasm.wasm",\n        fallbackUrl: "/static/lib/ammo/ammo.js",\n    });\n\n    pc.WasmModule.getInstance("Ammo", run);\n\n    function run() {\n        const assets = {\n            playcanvasGreyTexture: new pc.Asset(\n                "playcanvasGreyTexture",\n                "texture",\n                { url: "/static/assets/textures/playcanvas-grey.png" }\n            ),\n            model: new pc.Asset("model", "container", {\n                url: "/static/assets/models/bitmoji.glb",\n            }),\n            idleAnim: new pc.Asset("idleAnim", "container", {\n                url: "/static/assets/animations/bitmoji/idle.glb",\n            }),\n            walkAnim: new pc.Asset("walkAnim", "container", {\n                url: "/static/assets/animations/bitmoji/walk.glb",\n            }),\n            jogAnim: new pc.Asset("jogAnim", "container", {\n                url: "/static/assets/animations/bitmoji/run.glb",\n            }),\n            jumpAnim: new pc.Asset("jumpAnim", "container", {\n                url: "/static/assets/animations/bitmoji/jump-flip.glb",\n            }),\n            helipad: new pc.Asset(\n                "helipad-env-atlas",\n                "texture",\n                { url: "/static/assets/cubemaps/helipad-env-atlas.png" },\n                { type: pc.TEXTURETYPE_RGBP, mipmaps: false }\n            ),\n        };\n\n        const gfxOptions = {\n            deviceTypes: [deviceType],\n            glslangUrl: "/static/lib/glslang/glslang.js",\n            twgslUrl: "/static/lib/twgsl/twgsl.js",\n        };\n\n        pc.createGraphicsDevice(canvas, gfxOptions).then((device) => {\n            const createOptions = new pc.AppOptions();\n            createOptions.graphicsDevice = device;\n            createOptions.mouse = new pc.Mouse(document.body);\n            createOptions.touch = new pc.TouchDevice(document.body);\n\n            createOptions.componentSystems = [\n                // @ts-ignore\n                pc.RenderComponentSystem,\n                // @ts-ignore\n                pc.CameraComponentSystem,\n                // @ts-ignore\n                pc.LightComponentSystem,\n                // @ts-ignore\n                pc.ScriptComponentSystem,\n                // @ts-ignore\n                pc.AnimComponentSystem,\n                // @ts-ignore\n                pc.CollisionComponentSystem,\n                // @ts-ignore\n                pc.RigidBodyComponentSystem,\n            ];\n\n            createOptions.resourceHandlers = [\n                // @ts-ignore\n                pc.TextureHandler,\n                // @ts-ignore\n                pc.ContainerHandler,\n                // @ts-ignore\n                pc.ScriptHandler,\n                // @ts-ignore\n                pc.AnimClipHandler,\n                // @ts-ignore\n                pc.AnimStateGraphHandler,\n            ];\n\n            const app = new pc.AppBase(canvas);\n            app.init(createOptions);\n\n            // Set the canvas to fill the window and automatically change resolution to be the same as the canvas size\n            app.setCanvasFillMode(pc.FILLMODE_FILL_WINDOW);\n            app.setCanvasResolution(pc.RESOLUTION_AUTO);\n\n            const assetListLoader = new pc.AssetListLoader(\n                Object.values(assets),\n                app.assets\n            );\n            assetListLoader.load(() => {\n                // setup skydome\n                app.scene.skyboxMip = 2;\n                app.scene.skyboxIntensity = 0.7;\n                app.scene.envAtlas = assets.helipad.resource;\n                app.scene.toneMapping = pc.TONEMAP_ACES;\n\n                // Create an Entity with a camera component\n                const cameraEntity = new pc.Entity();\n                cameraEntity.name = "Camera";\n                cameraEntity.addComponent("camera", {\n                    clearColor: new pc.Color(0.1, 0.15, 0.2),\n                });\n\n                cameraEntity.translateLocal(0.5, 3, 8);\n                cameraEntity.rotateLocal(-30, 0, 0);\n                app.root.addChild(cameraEntity);\n\n                // Create an entity with a light component\n                const light = new pc.Entity();\n                light.addComponent("light", {\n                    type: "directional",\n                    color: new pc.Color(1, 1, 1),\n                    castShadows: true,\n                    intensity: 2,\n                    shadowBias: 0.2,\n                    shadowDistance: 16,\n                    normalOffsetBias: 0.05,\n                    shadowResolution: 2048,\n                });\n                light.setLocalEulerAngles(60, 30, 0);\n                app.root.addChild(light);\n\n                app.start();\n\n                const characterEntity = new pc.Entity();\n\n                // create an entity from the loaded model using the render component\n                const renderEntity =\n                    assets.model.resource.instantiateRenderEntity({\n                        castShadows: true,\n                    });\n\n                // assign the renderEntity as the child of character entity. All transforms of the\n                // renderEntity and its children are driven by the anim component.\n                // The characterEntity transform will be controlled by the Locomotion script.\n                characterEntity.addChild(renderEntity);\n\n                // add an anim component to the entity\n                characterEntity.addComponent("anim", {\n                    activate: true,\n                });\n\n                // create an anim state graph\n                const animStateGraphData = {\n                    layers: [\n                        {\n                            name: "locomotion",\n                            states: [\n                                {\n                                    name: "START",\n                                },\n                                {\n                                    name: "Idle",\n                                    speed: 1.0,\n                                },\n                                {\n                                    name: "Walk",\n                                    speed: 1.0,\n                                },\n                                {\n                                    name: "Jump",\n                                    speed: 1,\n                                },\n                                {\n                                    name: "Jog",\n                                    speed: 1.0,\n                                },\n                                {\n                                    name: "END",\n                                },\n                            ],\n\n                            transitions: [\n                                {\n                                    from: "START",\n                                    to: "Idle",\n                                    time: 0,\n                                    priority: 0,\n                                },\n                                {\n                                    from: "Idle",\n                                    to: "Walk",\n                                    time: 0.1,\n                                    priority: 0,\n                                    conditions: [\n                                        {\n                                            parameterName: "speed",\n                                            predicate: pc.ANIM_GREATER_THAN,\n                                            value: 0,\n                                        },\n                                    ],\n                                },\n                                {\n                                    from: "ANY",\n                                    to: "Jump",\n                                    time: 0.1,\n                                    priority: 0,\n                                    conditions: [\n                                        {\n                                            parameterName: "jump",\n                                            predicate: pc.ANIM_EQUAL_TO,\n                                            value: true,\n                                        },\n                                    ],\n                                },\n                                {\n                                    from: "Jump",\n                                    to: "Idle",\n                                    time: 0.2,\n                                    priority: 0,\n                                    exitTime: 0.8,\n                                },\n                                {\n                                    from: "Jump",\n                                    to: "Walk",\n                                    time: 0.2,\n                                    priority: 0,\n                                    exitTime: 0.8,\n                                },\n                                {\n                                    from: "Walk",\n                                    to: "Idle",\n                                    time: 0.1,\n                                    priority: 0,\n                                    conditions: [\n                                        {\n                                            parameterName: "speed",\n                                            predicate:\n                                                pc.ANIM_LESS_THAN_EQUAL_TO,\n                                            value: 0,\n                                        },\n                                    ],\n                                },\n                                {\n                                    from: "Walk",\n                                    to: "Jog",\n                                    time: 0.1,\n                                    priority: 0,\n                                    conditions: [\n                                        {\n                                            parameterName: "speed",\n                                            predicate: pc.ANIM_GREATER_THAN,\n                                            value: 1,\n                                        },\n                                    ],\n                                },\n                                {\n                                    from: "Jog",\n                                    to: "Walk",\n                                    time: 0.1,\n                                    priority: 0,\n                                    conditions: [\n                                        {\n                                            parameterName: "speed",\n                                            predicate: pc.ANIM_LESS_THAN,\n                                            value: 2,\n                                        },\n                                    ],\n                                },\n                            ],\n                        },\n                    ],\n\n                    parameters: {\n                        speed: {\n                            name: "speed",\n                            type: pc.ANIM_PARAMETER_INTEGER,\n                            value: 0,\n                        },\n                        jump: {\n                            name: "jump",\n                            type: pc.ANIM_PARAMETER_TRIGGER,\n                            value: false,\n                        },\n                    },\n                };\n\n                // load the state graph into the anim component\n                characterEntity.anim.loadStateGraph(animStateGraphData);\n\n                // assign the loaded animation assets to each of the states present in the state graph\n                const locomotionLayer = characterEntity.anim.baseLayer;\n                locomotionLayer.assignAnimation(\n                    "Idle",\n                    assets.idleAnim.resource.animations[0].resource\n                );\n                locomotionLayer.assignAnimation(\n                    "Walk",\n                    assets.walkAnim.resource.animations[0].resource\n                );\n                locomotionLayer.assignAnimation(\n                    "Jog",\n                    assets.jogAnim.resource.animations[0].resource\n                );\n                locomotionLayer.assignAnimation(\n                    "Jump",\n                    assets.jumpAnim.resource.animations[0].resource\n                );\n\n                app.root.addChild(characterEntity);\n\n                const planeEntity = new pc.Entity();\n                planeEntity.name = "Plane";\n                planeEntity.addComponent("render", {\n                    type: "plane",\n                });\n                planeEntity.addComponent("collision", {\n                    type: "box",\n                    halfExtents: new pc.Vec3(7.5, 0, 7.5),\n                });\n                planeEntity.addComponent("rigidbody", {\n                    type: "static",\n                });\n                planeEntity.setLocalScale(15, 1, 15);\n                planeEntity.setPosition(0, 0, 0);\n                const material = new pc.StandardMaterial();\n                material.diffuseMap = assets.playcanvasGreyTexture.resource;\n                material.update();\n                planeEntity.render.meshInstances[0].material = material;\n                app.root.addChild(planeEntity);\n\n                data.on("jump", function () {\n                    const isJumping =\n                        characterEntity.anim.baseLayer.activeState === "Jump";\n                    if (!isJumping) {\n                        characterEntity.anim.setTrigger("jump");\n                    }\n                });\n\n                // create a Locomotion script and initialize some variables\n                const Locomotion = pc.createScript("Locomotion");\n\n                let characterDirection;\n                let targetPosition;\n\n                // initialize code called once per entity\n                Locomotion.prototype.initialize = function () {\n                    characterDirection = new pc.Vec3(1, 0, 0);\n                    targetPosition = new pc.Vec3(2, 0, 2);\n                    document.addEventListener("mousedown", this.onMouseDown);\n                };\n\n                // @ts-ignore engine-tsd\n                Locomotion.prototype.onMouseDown = function (event) {\n                    if (event.button !== 0) return;\n                    // Set the character target position to a position on the plane that the user has clicked\n                    const cameraEntity = app.root.findByName("Camera");\n                    const near = cameraEntity.camera.screenToWorld(\n                        event.x,\n                        event.y,\n                        cameraEntity.camera.nearClip\n                    );\n                    const far = cameraEntity.camera.screenToWorld(\n                        event.x,\n                        event.y,\n                        cameraEntity.camera.farClip\n                    );\n                    const result = app.systems.rigidbody.raycastFirst(\n                        far,\n                        near\n                    );\n                    if (result) {\n                        targetPosition = new pc.Vec3(\n                            result.point.x,\n                            0,\n                            result.point.z\n                        );\n                        characterEntity.anim.setInteger(\n                            "speed",\n                            data.get("jogToggle") ? 2 : 1\n                        );\n                    }\n                };\n\n                // defines how many units the character should move per second given its current animation state\n                function speedForState(state) {\n                    switch (state) {\n                        case "Walk":\n                            return 1.0;\n                        case "Jog":\n                            return 4.0;\n                        case "Jump":\n                        case "Idle":\n                        default:\n                            return 0.0;\n                    }\n                }\n\n                const currentPosition = new pc.Vec3(0, 0, 0);\n\n                // update code called every frame\n                Locomotion.prototype.update = function (dt) {\n                    if (characterEntity.anim.getInteger("speed")) {\n                        // Update position if target position is not the same as entity position. Base the movement speed on the current state\n                        // Move the character along X & Z axis based on click target position & make character face click direction\n                        let moveSpeed = speedForState(\n                            characterEntity.anim.baseLayer.activeState\n                        );\n                        if (characterEntity.anim.baseLayer.transitioning) {\n                            const prevMoveSpeed = speedForState(\n                                characterEntity.anim.baseLayer.previousState\n                            );\n                            const progress =\n                                characterEntity.anim.baseLayer\n                                    .transitionProgress;\n                            moveSpeed =\n                                prevMoveSpeed * (1.0 - progress) +\n                                moveSpeed * progress;\n                        }\n                        const distance = targetPosition\n                            .clone()\n                            .sub(currentPosition);\n                        const direction = distance.clone().normalize();\n                        characterDirection = new pc.Vec3().sub(direction);\n                        const movement = direction\n                            .clone()\n                            .mulScalar(dt * moveSpeed);\n                        if (movement.length() < distance.length()) {\n                            currentPosition.add(movement);\n                            characterEntity.setPosition(currentPosition);\n                            characterEntity.lookAt(\n                                characterEntity\n                                    .getPosition()\n                                    .clone()\n                                    .add(characterDirection)\n                            );\n                        } else {\n                            currentPosition.copy(targetPosition);\n                            characterEntity.setPosition(currentPosition);\n                            characterEntity.anim.setInteger("speed", 0);\n                        }\n                    }\n                };\n\n                characterEntity.addComponent("script");\n                characterEntity.script.create("Locomotion", {});\n            });\n        });\n    }\n}\n',nameSlug:"locomotion",categorySlug:"animation"},tween:{typeScriptFunction:"function example(canvas: HTMLCanvasElement, deviceType: string): void {\n\n    const assets = {\n        'font': new pc.Asset('font', 'font', { url: '/static/assets/fonts/arial.json' }),\n        'script': new pc.Asset('script', 'script', { url: '/static/scripts/animation/tween.js' })\n    };\n\n    const gfxOptions = {\n        deviceTypes: [deviceType],\n        glslangUrl: '/static/lib/glslang/glslang.js',\n        twgslUrl: '/static/lib/twgsl/twgsl.js'\n    };\n\n    pc.createGraphicsDevice(canvas, gfxOptions).then((device: pc.GraphicsDevice) => {\n\n        const createOptions = new pc.AppOptions();\n        createOptions.graphicsDevice = device;\n\n        createOptions.componentSystems = [\n            // @ts-ignore\n            pc.RenderComponentSystem,\n            // @ts-ignore\n            pc.CameraComponentSystem,\n            // @ts-ignore\n            pc.LightComponentSystem,\n            // @ts-ignore\n            pc.ScriptComponentSystem,\n            // @ts-ignore\n            pc.ElementComponentSystem\n        ];\n        createOptions.resourceHandlers = [\n            // @ts-ignore\n            pc.TextureHandler,\n            // @ts-ignore\n            pc.FontHandler,\n            // @ts-ignore\n            pc.JsonHandler,\n            // @ts-ignore\n            pc.ScriptHandler\n        ];\n\n        const app = new pc.AppBase(canvas);\n        app.init(createOptions);\n\n        // Set the canvas to fill the window and automatically change resolution to be the same as the canvas size\n        app.setCanvasFillMode(pc.FILLMODE_FILL_WINDOW);\n        app.setCanvasResolution(pc.RESOLUTION_AUTO);\n\n        const assetListLoader = new pc.AssetListLoader(Object.values(assets), app.assets);\n        assetListLoader.load(() => {\n\n            app.start();\n\n            // Utility function to create a text element-based entity\n            const createText = function (fontAsset: pc.Asset, message: string, x: number, y: number, z: number, rot: number) {\n                const text = new pc.Entity();\n                text.addComponent(\"element\", {\n                    anchor: [0.5, 0.5, 0.5, 0.5],\n                    fontAsset: fontAsset,\n                    fontSize: 0.5,\n                    pivot: [1, 0.5],\n                    text: message,\n                    type: pc.ELEMENTTYPE_TEXT\n                });\n                text.setLocalPosition(x, y, z);\n                text.setLocalEulerAngles(0, 0, rot);\n                app.root.addChild(text);\n            };\n\n            const easingFunctions = [\n                'Linear',\n                'Quadratic',\n                'Cubic',\n                'Quartic',\n                'Quintic',\n                'Sinusoidal',\n                'Exponential',\n                'Circular',\n                'Elastic',\n                'Back',\n                'Bounce'\n            ];\n            const points: Array<pc.Vec3> = [];\n            const colors: Array<pc.Color> = [];\n\n            for (let i = 0; i < easingFunctions.length; i++) {\n                // Create an entity with a sphere render component\n                const sphere = new pc.Entity();\n\n                sphere.addComponent(\"render\", {\n                    type: \"sphere\"\n                });\n                const material = sphere.render.material as pc.StandardMaterial;\n                material.diffuse.set(1, 0, 0);\n                material.specular.set(0.6, 0.6, 0.6);\n                material.gloss = 0.2;\n\n                sphere.addComponent(\"script\");\n                sphere.script.create(\"tween\", {\n                    attributes: {\n                        tweens: [{\n                            autoPlay: true, // Start this tween immediately\n                            delay: 0, // No delay on start\n                            duration: 1500, // 2 seconds\n                            easingFunction: i,\n                            easingType: 2, // InOut type\n                            end: new pc.Vec4(4, -i, 0, 0),\n                            path: 'localPosition', // Update the entity's local position\n                            repeat: -1, // Repeat infinitely\n                            repeatDelay: 0, // No delay between repeats\n                            start: new pc.Vec4(0, -i, 0, 0),\n                            yoyo: true // Ping pong between start and end values\n                        }]\n                    }\n                });\n\n                sphere.setLocalScale(0.8, 0.8, 0.8);\n                app.root.addChild(sphere);\n\n                // Add a line for the path of the sphere\n                points.push(new pc.Vec3(0, -i, 0), new pc.Vec3(4, -i, 0));\n                colors.push(pc.Color.WHITE, pc.Color.WHITE);\n\n                // Create a text label for the sphere\n                createText(assets.font, easingFunctions[i], -0.5, -i, 0, 0);\n            }\n\n            // Create an entity with a directional light component\n            const light = new pc.Entity();\n            light.addComponent(\"light\", {\n                type: \"directional\"\n            });\n            light.setLocalEulerAngles(70, 30, 0);\n            app.root.addChild(light);\n\n            // Create an entity with a camera component\n            const camera = new pc.Entity();\n            camera.addComponent(\"camera\", {\n                clearColor: new pc.Color(0.4, 0.45, 0.5)\n            });\n            camera.translate(0.65, -5.5, 20);\n            app.root.addChild(camera);\n\n            app.on('update', function () {\n                app.drawLines(points, colors);\n            });\n        });\n    });\n}",javaScriptFunction:'function example(canvas, deviceType) {\n    const assets = {\n        font: new pc.Asset("font", "font", {\n            url: "/static/assets/fonts/arial.json",\n        }),\n        script: new pc.Asset("script", "script", {\n            url: "/static/scripts/animation/tween.js",\n        }),\n    };\n\n    const gfxOptions = {\n        deviceTypes: [deviceType],\n        glslangUrl: "/static/lib/glslang/glslang.js",\n        twgslUrl: "/static/lib/twgsl/twgsl.js",\n    };\n\n    pc.createGraphicsDevice(canvas, gfxOptions).then((device) => {\n        const createOptions = new pc.AppOptions();\n        createOptions.graphicsDevice = device;\n\n        createOptions.componentSystems = [\n            // @ts-ignore\n            pc.RenderComponentSystem,\n            // @ts-ignore\n            pc.CameraComponentSystem,\n            // @ts-ignore\n            pc.LightComponentSystem,\n            // @ts-ignore\n            pc.ScriptComponentSystem,\n            // @ts-ignore\n            pc.ElementComponentSystem,\n        ];\n\n        createOptions.resourceHandlers = [\n            // @ts-ignore\n            pc.TextureHandler,\n            // @ts-ignore\n            pc.FontHandler,\n            // @ts-ignore\n            pc.JsonHandler,\n            // @ts-ignore\n            pc.ScriptHandler,\n        ];\n\n        const app = new pc.AppBase(canvas);\n        app.init(createOptions);\n\n        // Set the canvas to fill the window and automatically change resolution to be the same as the canvas size\n        app.setCanvasFillMode(pc.FILLMODE_FILL_WINDOW);\n        app.setCanvasResolution(pc.RESOLUTION_AUTO);\n\n        const assetListLoader = new pc.AssetListLoader(\n            Object.values(assets),\n            app.assets\n        );\n        assetListLoader.load(() => {\n            app.start();\n\n            // Utility function to create a text element-based entity\n            const createText = function (fontAsset, message, x, y, z, rot) {\n                const text = new pc.Entity();\n                text.addComponent("element", {\n                    anchor: [0.5, 0.5, 0.5, 0.5],\n                    fontAsset: fontAsset,\n                    fontSize: 0.5,\n                    pivot: [1, 0.5],\n                    text: message,\n                    type: pc.ELEMENTTYPE_TEXT,\n                });\n                text.setLocalPosition(x, y, z);\n                text.setLocalEulerAngles(0, 0, rot);\n                app.root.addChild(text);\n            };\n\n            const easingFunctions = [\n                "Linear",\n                "Quadratic",\n                "Cubic",\n                "Quartic",\n                "Quintic",\n                "Sinusoidal",\n                "Exponential",\n                "Circular",\n                "Elastic",\n                "Back",\n                "Bounce",\n            ];\n\n            const points = [];\n            const colors = [];\n\n            for (let i = 0; i < easingFunctions.length; i++) {\n                // Create an entity with a sphere render component\n                const sphere = new pc.Entity();\n\n                sphere.addComponent("render", {\n                    type: "sphere",\n                });\n                const material = sphere.render.material;\n                material.diffuse.set(1, 0, 0);\n                material.specular.set(0.6, 0.6, 0.6);\n                material.gloss = 0.2;\n\n                sphere.addComponent("script");\n                sphere.script.create("tween", {\n                    attributes: {\n                        tweens: [\n                            {\n                                autoPlay: true, // Start this tween immediately\n                                delay: 0, // No delay on start\n                                duration: 1500, // 2 seconds\n                                easingFunction: i,\n                                easingType: 2, // InOut type\n                                end: new pc.Vec4(4, -i, 0, 0),\n                                path: "localPosition", // Update the entity\'s local position\n                                repeat: -1, // Repeat infinitely\n                                repeatDelay: 0, // No delay between repeats\n                                start: new pc.Vec4(0, -i, 0, 0),\n                                yoyo: true, // Ping pong between start and end values\n                            },\n                        ],\n                    },\n                });\n\n                sphere.setLocalScale(0.8, 0.8, 0.8);\n                app.root.addChild(sphere);\n\n                // Add a line for the path of the sphere\n                points.push(new pc.Vec3(0, -i, 0), new pc.Vec3(4, -i, 0));\n                colors.push(pc.Color.WHITE, pc.Color.WHITE);\n\n                // Create a text label for the sphere\n                createText(assets.font, easingFunctions[i], -0.5, -i, 0, 0);\n            }\n\n            // Create an entity with a directional light component\n            const light = new pc.Entity();\n            light.addComponent("light", {\n                type: "directional",\n            });\n            light.setLocalEulerAngles(70, 30, 0);\n            app.root.addChild(light);\n\n            // Create an entity with a camera component\n            const camera = new pc.Entity();\n            camera.addComponent("camera", {\n                clearColor: new pc.Color(0.4, 0.45, 0.5),\n            });\n            camera.translate(0.65, -5.5, 20);\n            app.root.addChild(camera);\n\n            app.on("update", function () {\n                app.drawLines(points, colors);\n            });\n        });\n    });\n}\n',nameSlug:"tween",categorySlug:"animation"}},camera:{"first-person":{typeScriptFunction:'function example(canvas: HTMLCanvasElement, deviceType: string): void {\n\n    // Create the application and start the update loop\n    const app = new pc.Application(canvas, {\n        mouse: new pc.Mouse(document.body),\n        touch: new pc.TouchDevice(document.body),\n        gamepads: new pc.GamePads(),\n        keyboard: new pc.Keyboard(window)\n    });\n\n    const assets = {\n        \'statue\': new pc.Asset(\'statue\', \'container\', { url: \'/static/assets/models/statue.glb\' }),\n        \'script\': new pc.Asset(\'script\', \'script\', { url: \'/static/scripts/camera/first-person-camera.js\' })\n    };\n\n    const assetListLoader = new pc.AssetListLoader(Object.values(assets), app.assets);\n    assetListLoader.load(() => {\n\n        pc.WasmModule.setConfig(\'Ammo\', {\n            glueUrl: \'/static/lib/ammo/ammo.wasm.js\',\n            wasmUrl: \'/static/lib/ammo/ammo.wasm.wasm\',\n            fallbackUrl: \'/static/lib/ammo/ammo.js\'\n        });\n\n        pc.WasmModule.getInstance(\'Ammo\', run);\n\n        // Set the canvas to fill the window and automatically change resolution to be the same as the canvas size\n        app.setCanvasFillMode(pc.FILLMODE_FILL_WINDOW);\n        app.setCanvasResolution(pc.RESOLUTION_AUTO);\n        function run() {\n            app.start();\n\n            // Create a physical floor\n            const floor = new pc.Entity();\n            floor.addComponent("collision", {\n                type: "box",\n                halfExtents: new pc.Vec3(100, 0.5, 100)\n            });\n            floor.addComponent("rigidbody", {\n                type: "static",\n                restitution: 0.5\n            });\n            floor.setLocalPosition(0, -0.5, 0);\n            app.root.addChild(floor);\n\n            const floorModel = new pc.Entity();\n            floorModel.addComponent("render", {\n                type: "plane"\n            });\n            floorModel.setLocalPosition(0, 0.5, 0);\n            floorModel.setLocalScale(200, 1, 200);\n            floor.addChild(floorModel);\n\n            // Create a model entity and assign the statue model\n            const model = assets.statue.resource.instantiateRenderEntity({\n                castShadows: true\n            });\n            model.addComponent("collision", {\n                type: "mesh",\n                asset: assets.statue.resource.model\n            });\n            model.addComponent("rigidbody", {\n                type: "static",\n                restitution: 0.5\n            });\n            app.root.addChild(model);\n\n            // Create a camera that will be driven by the character controller\n            const camera = new pc.Entity();\n            camera.addComponent("camera", {\n                clearColor: new pc.Color(0.4, 0.45, 0.5),\n                farClip: 100,\n                fov: 65,\n                nearClip: 0.1\n            });\n            camera.setLocalPosition(0, 1, 0);\n\n            // Create a physical character controller\n            const characterController = new pc.Entity();\n            characterController.addComponent("collision", {\n                axis: 0,\n                height: 2,\n                radius: 0.5,\n                type: "capsule"\n            });\n            characterController.addComponent("rigidbody", {\n                angularDamping: 0,\n                angularFactor: pc.Vec3.ZERO,\n                friction: 0.3,\n                linearDamping: 0,\n                linearFactor: pc.Vec3.ONE,\n                mass: 80,\n                restitution: 0,\n                type: "dynamic"\n            });\n            characterController.addComponent("script");\n            characterController.script.create("characterController");\n            characterController.script.create("firstPersonCamera", {\n                attributes: {\n                    camera: camera\n                }\n            });\n            characterController.script.create("gamePadInput");\n            characterController.script.create("keyboardInput");\n            characterController.script.create("mouseInput");\n            characterController.script.create("touchInput");\n            characterController.setLocalPosition(0, 1, 10);\n\n            // Add the character controller and camera to the hierarchy\n            app.root.addChild(characterController);\n            characterController.addChild(camera);\n\n            // Create a directional light\n            const light = new pc.Entity();\n            light.addComponent("light", {\n                castShadows: true,\n                color: new pc.Color(1, 1, 1),\n                normalOffsetBias: 0.05,\n                shadowBias: 0.2,\n                shadowDistance: 40,\n                type: "directional",\n                shadowResolution: 2048\n            });\n            app.root.addChild(light);\n            light.setLocalEulerAngles(45, 30, 0);\n        }\n    });\n}',javaScriptFunction:'function example(canvas, deviceType) {\n    // Create the application and start the update loop\n    const app = new pc.Application(canvas, {\n        mouse: new pc.Mouse(document.body),\n        touch: new pc.TouchDevice(document.body),\n        gamepads: new pc.GamePads(),\n        keyboard: new pc.Keyboard(window),\n    });\n\n    const assets = {\n        statue: new pc.Asset("statue", "container", {\n            url: "/static/assets/models/statue.glb",\n        }),\n        script: new pc.Asset("script", "script", {\n            url: "/static/scripts/camera/first-person-camera.js",\n        }),\n    };\n\n    const assetListLoader = new pc.AssetListLoader(\n        Object.values(assets),\n        app.assets\n    );\n    assetListLoader.load(() => {\n        pc.WasmModule.setConfig("Ammo", {\n            glueUrl: "/static/lib/ammo/ammo.wasm.js",\n            wasmUrl: "/static/lib/ammo/ammo.wasm.wasm",\n            fallbackUrl: "/static/lib/ammo/ammo.js",\n        });\n\n        pc.WasmModule.getInstance("Ammo", run);\n\n        // Set the canvas to fill the window and automatically change resolution to be the same as the canvas size\n        app.setCanvasFillMode(pc.FILLMODE_FILL_WINDOW);\n        app.setCanvasResolution(pc.RESOLUTION_AUTO);\n        function run() {\n            app.start();\n\n            // Create a physical floor\n            const floor = new pc.Entity();\n            floor.addComponent("collision", {\n                type: "box",\n                halfExtents: new pc.Vec3(100, 0.5, 100),\n            });\n            floor.addComponent("rigidbody", {\n                type: "static",\n                restitution: 0.5,\n            });\n            floor.setLocalPosition(0, -0.5, 0);\n            app.root.addChild(floor);\n\n            const floorModel = new pc.Entity();\n            floorModel.addComponent("render", {\n                type: "plane",\n            });\n            floorModel.setLocalPosition(0, 0.5, 0);\n            floorModel.setLocalScale(200, 1, 200);\n            floor.addChild(floorModel);\n\n            // Create a model entity and assign the statue model\n            const model = assets.statue.resource.instantiateRenderEntity({\n                castShadows: true,\n            });\n            model.addComponent("collision", {\n                type: "mesh",\n                asset: assets.statue.resource.model,\n            });\n            model.addComponent("rigidbody", {\n                type: "static",\n                restitution: 0.5,\n            });\n            app.root.addChild(model);\n\n            // Create a camera that will be driven by the character controller\n            const camera = new pc.Entity();\n            camera.addComponent("camera", {\n                clearColor: new pc.Color(0.4, 0.45, 0.5),\n                farClip: 100,\n                fov: 65,\n                nearClip: 0.1,\n            });\n            camera.setLocalPosition(0, 1, 0);\n\n            // Create a physical character controller\n            const characterController = new pc.Entity();\n            characterController.addComponent("collision", {\n                axis: 0,\n                height: 2,\n                radius: 0.5,\n                type: "capsule",\n            });\n            characterController.addComponent("rigidbody", {\n                angularDamping: 0,\n                angularFactor: pc.Vec3.ZERO,\n                friction: 0.3,\n                linearDamping: 0,\n                linearFactor: pc.Vec3.ONE,\n                mass: 80,\n                restitution: 0,\n                type: "dynamic",\n            });\n            characterController.addComponent("script");\n            characterController.script.create("characterController");\n            characterController.script.create("firstPersonCamera", {\n                attributes: {\n                    camera: camera,\n                },\n            });\n            characterController.script.create("gamePadInput");\n            characterController.script.create("keyboardInput");\n            characterController.script.create("mouseInput");\n            characterController.script.create("touchInput");\n            characterController.setLocalPosition(0, 1, 10);\n\n            // Add the character controller and camera to the hierarchy\n            app.root.addChild(characterController);\n            characterController.addChild(camera);\n\n            // Create a directional light\n            const light = new pc.Entity();\n            light.addComponent("light", {\n                castShadows: true,\n                color: new pc.Color(1, 1, 1),\n                normalOffsetBias: 0.05,\n                shadowBias: 0.2,\n                shadowDistance: 40,\n                type: "directional",\n                shadowResolution: 2048,\n            });\n            app.root.addChild(light);\n            light.setLocalEulerAngles(45, 30, 0);\n        }\n    });\n}\n',nameSlug:"first-person",categorySlug:"camera"},fly:{typeScriptFunction:'function example(canvas: HTMLCanvasElement, deviceType: string): void {\n\n    // Create the application and start the update loop\n    const app = new pc.Application(canvas, {\n        mouse: new pc.Mouse(canvas),\n        keyboard: new pc.Keyboard(window)\n    });\n\n    const assets = {\n        \'script\': new pc.Asset(\'script\', \'script\', { url: \'/static/scripts/camera/fly-camera.js\' })\n    };\n\n    const assetListLoader = new pc.AssetListLoader(Object.values(assets), app.assets);\n    assetListLoader.load(() => {\n\n        app.scene.ambientLight = new pc.Color(0.2, 0.2, 0.2);\n\n        app.start();\n\n        // ***********    Helper functions    *******************\n\n        function createMaterial(color: pc.Color) {\n            const material = new pc.StandardMaterial();\n            material.diffuse = color;\n            // we need to call material.update when we change its properties\n            material.update();\n            return material;\n        }\n\n        function createBox(position: pc.Vec3, size: pc.Vec3, material: pc.Material) {\n            // create an entity and add a model component of type \'box\'\n            const box = new pc.Entity();\n            box.addComponent("render", {\n                type: "box",\n                material: material\n            });\n\n            // move the box\n            box.setLocalPosition(position);\n            box.setLocalScale(size);\n\n            // add the box to the hierarchy\n            app.root.addChild(box);\n        }\n\n        // ***********    Create Boxes    *******************\n\n        // create a few boxes in our scene\n        const red = createMaterial(pc.Color.RED);\n        for (let i = 0; i < 3; i++) {\n            for (let j = 0; j < 2; j++) {\n                createBox(new pc.Vec3(i * 2, 0, j * 4), pc.Vec3.ONE, red);\n            }\n        }\n\n        // create a floor\n        const white = createMaterial(pc.Color.WHITE);\n        createBox(new pc.Vec3(0, -0.5, 0), new pc.Vec3(10, 0.1, 10), white);\n\n        // ***********    Create lights   *******************\n\n        // make our scene prettier by adding a directional light\n        const light = new pc.Entity();\n        light.addComponent("light", {\n            type: "omni",\n            color: new pc.Color(1, 1, 1),\n            range: 100\n        });\n        light.setLocalPosition(0, 0, 2);\n\n        // add the light to the hierarchy\n        app.root.addChild(light);\n\n        // ***********    Create camera    *******************\n\n        // Create an Entity with a camera component\n        const camera = new pc.Entity();\n        camera.addComponent("camera", {\n            clearColor: new pc.Color(0.5, 0.5, 0.8),\n            nearClip: 0.3,\n            farClip: 30\n        });\n\n        // add the fly camera script to the camera\n        camera.addComponent("script");\n        camera.script.create("flyCamera");\n\n        // add the camera to the hierarchy\n        app.root.addChild(camera);\n\n        // Move the camera a little further away\n        camera.translate(2, 0.8, 9);\n    });\n}',javaScriptFunction:'function example(canvas, deviceType) {\n    // Create the application and start the update loop\n    const app = new pc.Application(canvas, {\n        mouse: new pc.Mouse(canvas),\n        keyboard: new pc.Keyboard(window),\n    });\n\n    const assets = {\n        script: new pc.Asset("script", "script", {\n            url: "/static/scripts/camera/fly-camera.js",\n        }),\n    };\n\n    const assetListLoader = new pc.AssetListLoader(\n        Object.values(assets),\n        app.assets\n    );\n    assetListLoader.load(() => {\n        app.scene.ambientLight = new pc.Color(0.2, 0.2, 0.2);\n\n        app.start();\n\n        // ***********    Helper functions    *******************\n\n        function createMaterial(color) {\n            const material = new pc.StandardMaterial();\n            material.diffuse = color;\n            // we need to call material.update when we change its properties\n            material.update();\n            return material;\n        }\n\n        function createBox(position, size, material) {\n            // create an entity and add a model component of type \'box\'\n            const box = new pc.Entity();\n            box.addComponent("render", {\n                type: "box",\n                material: material,\n            });\n\n            // move the box\n            box.setLocalPosition(position);\n            box.setLocalScale(size);\n\n            // add the box to the hierarchy\n            app.root.addChild(box);\n        }\n\n        // ***********    Create Boxes    *******************\n\n        // create a few boxes in our scene\n        const red = createMaterial(pc.Color.RED);\n        for (let i = 0; i < 3; i++) {\n            for (let j = 0; j < 2; j++) {\n                createBox(new pc.Vec3(i * 2, 0, j * 4), pc.Vec3.ONE, red);\n            }\n        }\n\n        // create a floor\n        const white = createMaterial(pc.Color.WHITE);\n        createBox(new pc.Vec3(0, -0.5, 0), new pc.Vec3(10, 0.1, 10), white);\n\n        // ***********    Create lights   *******************\n\n        // make our scene prettier by adding a directional light\n        const light = new pc.Entity();\n        light.addComponent("light", {\n            type: "omni",\n            color: new pc.Color(1, 1, 1),\n            range: 100,\n        });\n        light.setLocalPosition(0, 0, 2);\n\n        // add the light to the hierarchy\n        app.root.addChild(light);\n\n        // ***********    Create camera    *******************\n\n        // Create an Entity with a camera component\n        const camera = new pc.Entity();\n        camera.addComponent("camera", {\n            clearColor: new pc.Color(0.5, 0.5, 0.8),\n            nearClip: 0.3,\n            farClip: 30,\n        });\n\n        // add the fly camera script to the camera\n        camera.addComponent("script");\n        camera.script.create("flyCamera");\n\n        // add the camera to the hierarchy\n        app.root.addChild(camera);\n\n        // Move the camera a little further away\n        camera.translate(2, 0.8, 9);\n    });\n}\n',nameSlug:"fly",categorySlug:"camera"},orbit:{typeScriptFunction:"function example(canvas: HTMLCanvasElement, deviceType: string): void {\n\n    // Create the app and start the update loop\n    const app = new pc.Application(canvas, {\n        mouse: new pc.Mouse(document.body),\n        touch: new pc.TouchDevice(document.body)\n    });\n\n    const assets = {\n        'statue': new pc.Asset('statue', 'container', { url: '/static/assets/models/statue.glb' }),\n        'script': new pc.Asset('script', 'script', { url: '/static/scripts/camera/orbit-camera.js' })\n    };\n\n    const assetListLoader = new pc.AssetListLoader(Object.values(assets), app.assets);\n    assetListLoader.load(() => {\n\n        // Create an entity hierarchy representing the statue\n        const statueEntity = assets.statue.resource.instantiateRenderEntity();\n        statueEntity.setLocalScale(0.07, 0.07, 0.07);\n        statueEntity.setLocalPosition(0, -0.5, 0);\n        app.root.addChild(statueEntity);\n\n        // Create a camera with an orbit camera script\n        const camera = new pc.Entity();\n        camera.addComponent(\"camera\", {\n            clearColor: new pc.Color(0.4, 0.45, 0.5)\n        });\n        camera.addComponent(\"script\");\n        camera.script.create(\"orbitCamera\", {\n            attributes: {\n                inertiaFactor: 0.2 // Override default of 0 (no inertia)\n            }\n        });\n        camera.script.create(\"orbitCameraInputMouse\");\n        camera.script.create(\"orbitCameraInputTouch\");\n        app.root.addChild(camera);\n\n        // Create a directional light\n        const light = new pc.Entity();\n        light.addComponent(\"light\", {\n            type: \"directional\"\n        });\n        app.root.addChild(light);\n        light.setLocalEulerAngles(45, 30, 0);\n\n        app.start();\n    });\n}",javaScriptFunction:'function example(canvas, deviceType) {\n    // Create the app and start the update loop\n    const app = new pc.Application(canvas, {\n        mouse: new pc.Mouse(document.body),\n        touch: new pc.TouchDevice(document.body),\n    });\n\n    const assets = {\n        statue: new pc.Asset("statue", "container", {\n            url: "/static/assets/models/statue.glb",\n        }),\n        script: new pc.Asset("script", "script", {\n            url: "/static/scripts/camera/orbit-camera.js",\n        }),\n    };\n\n    const assetListLoader = new pc.AssetListLoader(\n        Object.values(assets),\n        app.assets\n    );\n    assetListLoader.load(() => {\n        // Create an entity hierarchy representing the statue\n        const statueEntity = assets.statue.resource.instantiateRenderEntity();\n        statueEntity.setLocalScale(0.07, 0.07, 0.07);\n        statueEntity.setLocalPosition(0, -0.5, 0);\n        app.root.addChild(statueEntity);\n\n        // Create a camera with an orbit camera script\n        const camera = new pc.Entity();\n        camera.addComponent("camera", {\n            clearColor: new pc.Color(0.4, 0.45, 0.5),\n        });\n        camera.addComponent("script");\n        camera.script.create("orbitCamera", {\n            attributes: {\n                inertiaFactor: 0.2, // Override default of 0 (no inertia)\n            },\n        });\n        camera.script.create("orbitCameraInputMouse");\n        camera.script.create("orbitCameraInputTouch");\n        app.root.addChild(camera);\n\n        // Create a directional light\n        const light = new pc.Entity();\n        light.addComponent("light", {\n            type: "directional",\n        });\n        app.root.addChild(light);\n        light.setLocalEulerAngles(45, 30, 0);\n\n        app.start();\n    });\n}\n',nameSlug:"orbit",categorySlug:"camera"}},graphics:{"area-lights":{typeScriptFunction:"function example(canvas: HTMLCanvasElement, deviceType: string): void {\n\n    const assets = {\n        'color': new pc.Asset('color', 'texture', { url: '/static/assets/textures/seaside-rocks01-color.jpg' }),\n        'normal': new pc.Asset('normal', 'texture', { url: '/static/assets/textures/seaside-rocks01-normal.jpg' }),\n        'gloss': new pc.Asset('gloss', 'texture', { url: '/static/assets/textures/seaside-rocks01-gloss.jpg' }),\n        'statue': new pc.Asset('statue', 'container', { url: '/static/assets/models/statue.glb' }),\n        'luts': new pc.Asset('luts', 'json', { url: '/static/assets/json/area-light-luts.json' }),\n        helipad: new pc.Asset('helipad-env-atlas', 'texture', { url: '/static/assets/cubemaps/helipad-env-atlas.png' }, { type: pc.TEXTURETYPE_RGBP, mipmaps: false })\n    };\n\n    const gfxOptions = {\n        deviceTypes: [deviceType],\n        glslangUrl: '/static/lib/glslang/glslang.js',\n        twgslUrl: '/static/lib/twgsl/twgsl.js'\n    };\n\n    pc.createGraphicsDevice(canvas, gfxOptions).then((device: pc.GraphicsDevice) => {\n\n        const createOptions = new pc.AppOptions();\n        createOptions.graphicsDevice = device;\n        createOptions.mouse = new pc.Mouse(document.body);\n        createOptions.touch = new pc.TouchDevice(document.body);\n\n        createOptions.componentSystems = [\n            // @ts-ignore\n            pc.RenderComponentSystem,\n            // @ts-ignore\n            pc.CameraComponentSystem,\n            // @ts-ignore\n            pc.LightComponentSystem\n        ];\n        createOptions.resourceHandlers = [\n            // @ts-ignore\n            pc.TextureHandler,\n            // @ts-ignore\n            pc.ContainerHandler,\n            // @ts-ignore\n            pc.JsonHandler,\n            // @ts-ignore\n            pc.CubemapHandler\n        ];\n\n        const app = new pc.AppBase(canvas);\n        app.init(createOptions);\n\n        // Set the canvas to fill the window and automatically change resolution to be the same as the canvas size\n        app.setCanvasFillMode(pc.FILLMODE_FILL_WINDOW);\n        app.setCanvasResolution(pc.RESOLUTION_AUTO);\n\n        const assetListLoader = new pc.AssetListLoader(Object.values(assets), app.assets);\n        assetListLoader.load(() => {\n\n            // helper function to create a primitive with shape type, position, scale, color\n            function createPrimitive(primitiveType: string, position: pc.Vec3, scale: pc.Vec3, color: pc.Color, assetManifest: any) {\n\n                // create material of specified color\n                const material = new pc.StandardMaterial();\n                material.diffuse = color;\n                material.gloss = 0.8;\n                material.useMetalness = true;\n\n                if (assetManifest) {\n                    material.diffuseMap = assetManifest.color.resource;\n                    material.normalMap = assetManifest.normal.resource;\n                    material.glossMap = assetManifest.gloss.resource;\n                    material.metalness = 0.7;\n\n                    material.diffuseMapTiling.set(7, 7);\n                    material.normalMapTiling.set(7, 7);\n                    material.glossMapTiling.set(7, 7);\n                }\n\n                material.update();\n\n                // create primitive\n                const primitive = new pc.Entity();\n                primitive.addComponent('render', {\n                    type: primitiveType,\n                    material: material\n                });\n\n                // set position and scale and add it to scene\n                primitive.setLocalPosition(position);\n                primitive.setLocalScale(scale);\n                app.root.addChild(primitive);\n\n                return primitive;\n            }\n\n            // helper function to create area light including its visual representation in the world\n            function createAreaLight(type: string, shape: number, position: pc.Vec3, scale: number, color: pc.Color, intensity: number, shadows: boolean, range: number) {\n                const lightParent = new pc.Entity();\n                lightParent.translate(position);\n                app.root.addChild(lightParent);\n\n                const light = new pc.Entity();\n                light.addComponent(\"light\", {\n                    type: type,\n                    shape: shape,\n                    color: color,\n                    intensity: intensity,\n                    falloffMode: pc.LIGHTFALLOFF_INVERSESQUARED,\n                    range: range,\n                    castShadows: shadows,\n                    innerConeAngle: 80,\n                    outerConeAngle: 85,\n                    shadowBias: 0.1,\n                    normalOffsetBias: 0.1,\n                    shadowResolution: 2048\n                });\n\n                light.setLocalScale(scale, scale, scale);\n                lightParent.addChild(light);\n\n                // emissive material that is the light source color\n                const brightMaterial = new pc.StandardMaterial();\n                brightMaterial.emissive = color;\n                brightMaterial.useLighting = false;\n                brightMaterial.cull = (shape === pc.LIGHTSHAPE_RECT) ? pc.CULLFACE_NONE : pc.CULLFACE_BACK;\n                brightMaterial.update();\n\n                const brightShape = new pc.Entity();\n                // primitive shape that matches light source shape\n                brightShape.addComponent(\"render\", {\n                    type: (shape === pc.LIGHTSHAPE_SPHERE) ? \"sphere\" : (shape === pc.LIGHTSHAPE_DISK) ? \"cone\" : \"plane\",\n                    material: brightMaterial,\n                    castShadows: type !== \"directional\"\n                });\n                brightShape.setLocalScale(((type === \"directional\") ? scale * range : scale), (shape === pc.LIGHTSHAPE_DISK) ? 0.001 : ((type === \"directional\") ? scale * range : scale), ((type === \"directional\") ? scale * range : scale));\n                lightParent.addChild(brightShape);\n\n                // add black primitive shape if not omni-directional or global directional\n                if (type === \"spot\") {\n                    // black material\n                    const blackMaterial = new pc.StandardMaterial();\n                    blackMaterial.diffuse = new pc.Color(0, 0, 0);\n                    blackMaterial.useLighting = false;\n                    blackMaterial.cull = (shape === pc.LIGHTSHAPE_RECT) ? pc.CULLFACE_NONE : pc.CULLFACE_BACK;\n                    blackMaterial.update();\n\n                    const blackShape = new pc.Entity();\n                    blackShape.addComponent(\"render\", {\n                        type: (shape === pc.LIGHTSHAPE_SPHERE) ? \"sphere\" : (shape === pc.LIGHTSHAPE_DISK) ? \"cone\" : \"plane\",\n                        material: blackMaterial\n                    });\n                    blackShape.setLocalPosition(0, 0.01 / scale, 0);\n                    blackShape.setLocalEulerAngles(-180, 0, 0);\n                    brightShape.addChild(blackShape);\n                }\n\n                return lightParent;\n            }\n\n            const far = 5000.0;\n\n            app.start();\n\n            // enable area lights which are disabled by default for clustered lighting\n            app.scene.lighting.areaLightsEnabled = true;\n\n            // set the loaded area light LUT data\n            const luts = assets.luts.resource;\n            app.setAreaLightLuts(luts.LTC_MAT_1, luts.LTC_MAT_2);\n\n            // set up some general scene rendering properties\n            app.scene.toneMapping = pc.TONEMAP_ACES;\n\n            // setup skydome\n            app.scene.skyboxMip = 1;            // use top mipmap level of cubemap (full resolution)\n            app.scene.skyboxIntensity = 0.4;    // make it darker\n            app.scene.envAtlas = assets.helipad.resource;\n\n            // create ground plane\n            createPrimitive(\"plane\", new pc.Vec3(0, 0, 0), new pc.Vec3(20, 20, 20), new pc.Color(0.3, 0.3, 0.3), assets);\n\n            // get the instance of the statue and set up with render component\n            const statue = assets.statue.resource.instantiateRenderEntity();\n            statue.setLocalScale(0.4, 0.4, 0.4);\n            app.root.addChild(statue);\n\n            // Create the camera, which renders entities\n            const camera = new pc.Entity();\n            camera.addComponent(\"camera\", {\n                clearColor: new pc.Color(0.2, 0.2, 0.2),\n                fov: 60,\n                farClip: 100000\n            });\n            app.root.addChild(camera);\n            camera.setLocalPosition(0, 2.5, 12);\n            camera.lookAt(0, 0, 0);\n\n            // Create lights with light source shape\n            const light1 = createAreaLight(\"spot\", pc.LIGHTSHAPE_RECT, new pc.Vec3(-3, 4, 0), 4, new pc.Color(1, 1, 1), 2, true, 10);\n            const light2 = createAreaLight(\"omni\", pc.LIGHTSHAPE_SPHERE, new pc.Vec3(5, 2, -2), 2, new pc.Color(1, 1, 0), 2, false, 10);\n            const light3 = createAreaLight(\"directional\", pc.LIGHTSHAPE_DISK, new pc.Vec3(0, 0, 0), 0.2, new pc.Color(0.7, 0.7, 1), 10, true, far);\n\n            // update things each frame\n            let time = 0;\n            app.on(\"update\", function (dt: number) {\n                time += dt;\n\n                const factor1 = (Math.sin(time) + 1) * 0.5;\n                const factor2 = (Math.sin(time * 0.6) + 1) * 0.5;\n                const factor3 = (Math.sin(time * 0.4) + 1) * 0.5;\n\n                if (light1) {\n                    light1.setLocalEulerAngles(pc.math.lerp(-90, 110, factor1), 0, 90);\n                    light1.setLocalPosition(-4, pc.math.lerp(2, 4, factor3), pc.math.lerp(-2, 2, factor2));\n                }\n\n                if (light2) {\n                    light2.setLocalPosition(5, pc.math.lerp(1, 3, factor1), pc.math.lerp(-2, 2, factor2));\n                }\n\n                if (light3) {\n                    light3.setLocalEulerAngles(pc.math.lerp(230, 310, factor2), pc.math.lerp(-30, 0, factor3), 90);\n\n                    const dir = light3.getWorldTransform().getY();\n                    const campos = camera.getPosition();\n\n                    light3.setPosition(campos.x + dir.x * far, campos.y + dir.y * far, campos.z + dir.z * far);\n                }\n            });\n        });\n    });\n}",javaScriptFunction:'function example(canvas, deviceType) {\n    const assets = {\n        color: new pc.Asset("color", "texture", {\n            url: "/static/assets/textures/seaside-rocks01-color.jpg",\n        }),\n        normal: new pc.Asset("normal", "texture", {\n            url: "/static/assets/textures/seaside-rocks01-normal.jpg",\n        }),\n        gloss: new pc.Asset("gloss", "texture", {\n            url: "/static/assets/textures/seaside-rocks01-gloss.jpg",\n        }),\n        statue: new pc.Asset("statue", "container", {\n            url: "/static/assets/models/statue.glb",\n        }),\n        luts: new pc.Asset("luts", "json", {\n            url: "/static/assets/json/area-light-luts.json",\n        }),\n        helipad: new pc.Asset(\n            "helipad-env-atlas",\n            "texture",\n            { url: "/static/assets/cubemaps/helipad-env-atlas.png" },\n            { type: pc.TEXTURETYPE_RGBP, mipmaps: false }\n        ),\n    };\n\n    const gfxOptions = {\n        deviceTypes: [deviceType],\n        glslangUrl: "/static/lib/glslang/glslang.js",\n        twgslUrl: "/static/lib/twgsl/twgsl.js",\n    };\n\n    pc.createGraphicsDevice(canvas, gfxOptions).then((device) => {\n        const createOptions = new pc.AppOptions();\n        createOptions.graphicsDevice = device;\n        createOptions.mouse = new pc.Mouse(document.body);\n        createOptions.touch = new pc.TouchDevice(document.body);\n\n        createOptions.componentSystems = [\n            // @ts-ignore\n            pc.RenderComponentSystem,\n            // @ts-ignore\n            pc.CameraComponentSystem,\n            // @ts-ignore\n            pc.LightComponentSystem,\n        ];\n\n        createOptions.resourceHandlers = [\n            // @ts-ignore\n            pc.TextureHandler,\n            // @ts-ignore\n            pc.ContainerHandler,\n            // @ts-ignore\n            pc.JsonHandler,\n            // @ts-ignore\n            pc.CubemapHandler,\n        ];\n\n        const app = new pc.AppBase(canvas);\n        app.init(createOptions);\n\n        // Set the canvas to fill the window and automatically change resolution to be the same as the canvas size\n        app.setCanvasFillMode(pc.FILLMODE_FILL_WINDOW);\n        app.setCanvasResolution(pc.RESOLUTION_AUTO);\n\n        const assetListLoader = new pc.AssetListLoader(\n            Object.values(assets),\n            app.assets\n        );\n        assetListLoader.load(() => {\n            // helper function to create a primitive with shape type, position, scale, color\n            function createPrimitive(\n                primitiveType,\n                position,\n                scale,\n                color,\n                assetManifest\n            ) {\n                // create material of specified color\n                const material = new pc.StandardMaterial();\n                material.diffuse = color;\n                material.gloss = 0.8;\n                material.useMetalness = true;\n\n                if (assetManifest) {\n                    material.diffuseMap = assetManifest.color.resource;\n                    material.normalMap = assetManifest.normal.resource;\n                    material.glossMap = assetManifest.gloss.resource;\n                    material.metalness = 0.7;\n\n                    material.diffuseMapTiling.set(7, 7);\n                    material.normalMapTiling.set(7, 7);\n                    material.glossMapTiling.set(7, 7);\n                }\n\n                material.update();\n\n                // create primitive\n                const primitive = new pc.Entity();\n                primitive.addComponent("render", {\n                    type: primitiveType,\n                    material: material,\n                });\n\n                // set position and scale and add it to scene\n                primitive.setLocalPosition(position);\n                primitive.setLocalScale(scale);\n                app.root.addChild(primitive);\n\n                return primitive;\n            }\n\n            // helper function to create area light including its visual representation in the world\n            function createAreaLight(\n                type,\n                shape,\n                position,\n                scale,\n                color,\n                intensity,\n                shadows,\n                range\n            ) {\n                const lightParent = new pc.Entity();\n                lightParent.translate(position);\n                app.root.addChild(lightParent);\n\n                const light = new pc.Entity();\n                light.addComponent("light", {\n                    type: type,\n                    shape: shape,\n                    color: color,\n                    intensity: intensity,\n                    falloffMode: pc.LIGHTFALLOFF_INVERSESQUARED,\n                    range: range,\n                    castShadows: shadows,\n                    innerConeAngle: 80,\n                    outerConeAngle: 85,\n                    shadowBias: 0.1,\n                    normalOffsetBias: 0.1,\n                    shadowResolution: 2048,\n                });\n\n                light.setLocalScale(scale, scale, scale);\n                lightParent.addChild(light);\n\n                // emissive material that is the light source color\n                const brightMaterial = new pc.StandardMaterial();\n                brightMaterial.emissive = color;\n                brightMaterial.useLighting = false;\n                brightMaterial.cull =\n                    shape === pc.LIGHTSHAPE_RECT\n                        ? pc.CULLFACE_NONE\n                        : pc.CULLFACE_BACK;\n                brightMaterial.update();\n\n                const brightShape = new pc.Entity();\n                // primitive shape that matches light source shape\n                brightShape.addComponent("render", {\n                    type:\n                        shape === pc.LIGHTSHAPE_SPHERE\n                            ? "sphere"\n                            : shape === pc.LIGHTSHAPE_DISK\n                            ? "cone"\n                            : "plane",\n                    material: brightMaterial,\n                    castShadows: type !== "directional",\n                });\n                brightShape.setLocalScale(\n                    type === "directional" ? scale * range : scale,\n                    shape === pc.LIGHTSHAPE_DISK\n                        ? 0.001\n                        : type === "directional"\n                        ? scale * range\n                        : scale,\n                    type === "directional" ? scale * range : scale\n                );\n                lightParent.addChild(brightShape);\n\n                // add black primitive shape if not omni-directional or global directional\n                if (type === "spot") {\n                    // black material\n                    const blackMaterial = new pc.StandardMaterial();\n                    blackMaterial.diffuse = new pc.Color(0, 0, 0);\n                    blackMaterial.useLighting = false;\n                    blackMaterial.cull =\n                        shape === pc.LIGHTSHAPE_RECT\n                            ? pc.CULLFACE_NONE\n                            : pc.CULLFACE_BACK;\n                    blackMaterial.update();\n\n                    const blackShape = new pc.Entity();\n                    blackShape.addComponent("render", {\n                        type:\n                            shape === pc.LIGHTSHAPE_SPHERE\n                                ? "sphere"\n                                : shape === pc.LIGHTSHAPE_DISK\n                                ? "cone"\n                                : "plane",\n                        material: blackMaterial,\n                    });\n                    blackShape.setLocalPosition(0, 0.01 / scale, 0);\n                    blackShape.setLocalEulerAngles(-180, 0, 0);\n                    brightShape.addChild(blackShape);\n                }\n\n                return lightParent;\n            }\n\n            const far = 5000.0;\n\n            app.start();\n\n            // enable area lights which are disabled by default for clustered lighting\n            app.scene.lighting.areaLightsEnabled = true;\n\n            // set the loaded area light LUT data\n            const luts = assets.luts.resource;\n            app.setAreaLightLuts(luts.LTC_MAT_1, luts.LTC_MAT_2);\n\n            // set up some general scene rendering properties\n            app.scene.toneMapping = pc.TONEMAP_ACES;\n\n            // setup skydome\n            app.scene.skyboxMip = 1; // use top mipmap level of cubemap (full resolution)\n            app.scene.skyboxIntensity = 0.4; // make it darker\n            app.scene.envAtlas = assets.helipad.resource;\n\n            // create ground plane\n            createPrimitive(\n                "plane",\n                new pc.Vec3(0, 0, 0),\n                new pc.Vec3(20, 20, 20),\n                new pc.Color(0.3, 0.3, 0.3),\n                assets\n            );\n\n            // get the instance of the statue and set up with render component\n            const statue = assets.statue.resource.instantiateRenderEntity();\n            statue.setLocalScale(0.4, 0.4, 0.4);\n            app.root.addChild(statue);\n\n            // Create the camera, which renders entities\n            const camera = new pc.Entity();\n            camera.addComponent("camera", {\n                clearColor: new pc.Color(0.2, 0.2, 0.2),\n                fov: 60,\n                farClip: 100000,\n            });\n            app.root.addChild(camera);\n            camera.setLocalPosition(0, 2.5, 12);\n            camera.lookAt(0, 0, 0);\n\n            // Create lights with light source shape\n            const light1 = createAreaLight(\n                "spot",\n                pc.LIGHTSHAPE_RECT,\n                new pc.Vec3(-3, 4, 0),\n                4,\n                new pc.Color(1, 1, 1),\n                2,\n                true,\n                10\n            );\n            const light2 = createAreaLight(\n                "omni",\n                pc.LIGHTSHAPE_SPHERE,\n                new pc.Vec3(5, 2, -2),\n                2,\n                new pc.Color(1, 1, 0),\n                2,\n                false,\n                10\n            );\n            const light3 = createAreaLight(\n                "directional",\n                pc.LIGHTSHAPE_DISK,\n                new pc.Vec3(0, 0, 0),\n                0.2,\n                new pc.Color(0.7, 0.7, 1),\n                10,\n                true,\n                far\n            );\n\n            // update things each frame\n            let time = 0;\n            app.on("update", function (dt) {\n                time += dt;\n\n                const factor1 = (Math.sin(time) + 1) * 0.5;\n                const factor2 = (Math.sin(time * 0.6) + 1) * 0.5;\n                const factor3 = (Math.sin(time * 0.4) + 1) * 0.5;\n\n                if (light1) {\n                    light1.setLocalEulerAngles(\n                        pc.math.lerp(-90, 110, factor1),\n                        0,\n                        90\n                    );\n                    light1.setLocalPosition(\n                        -4,\n                        pc.math.lerp(2, 4, factor3),\n                        pc.math.lerp(-2, 2, factor2)\n                    );\n                }\n\n                if (light2) {\n                    light2.setLocalPosition(\n                        5,\n                        pc.math.lerp(1, 3, factor1),\n                        pc.math.lerp(-2, 2, factor2)\n                    );\n                }\n\n                if (light3) {\n                    light3.setLocalEulerAngles(\n                        pc.math.lerp(230, 310, factor2),\n                        pc.math.lerp(-30, 0, factor3),\n                        90\n                    );\n\n                    const dir = light3.getWorldTransform().getY();\n                    const campos = camera.getPosition();\n\n                    light3.setPosition(\n                        campos.x + dir.x * far,\n                        campos.y + dir.y * far,\n                        campos.z + dir.z * far\n                    );\n                }\n            });\n        });\n    });\n}\n',nameSlug:"area-lights",categorySlug:"graphics"},"area-picker":{typeScriptFunction:"function example(canvas: HTMLCanvasElement, deviceType: string): void {\n\n    const assets = {\n        'bloom': new pc.Asset('bloom', 'script', { url: '/static/scripts/posteffects/posteffect-bloom.js' }),\n        helipad: new pc.Asset('helipad-env-atlas', 'texture', { url: '/static/assets/cubemaps/helipad-env-atlas.png' }, { type: pc.TEXTURETYPE_RGBP, mipmaps: false })\n    };\n\n    const gfxOptions = {\n        deviceTypes: [deviceType],\n        glslangUrl: '/static/lib/glslang/glslang.js',\n        twgslUrl: '/static/lib/twgsl/twgsl.js'\n    };\n\n    pc.createGraphicsDevice(canvas, gfxOptions).then((device: pc.GraphicsDevice) => {\n\n        const createOptions = new pc.AppOptions();\n        createOptions.graphicsDevice = device;\n        createOptions.mouse = new pc.Mouse(document.body);\n        createOptions.touch = new pc.TouchDevice(document.body);\n\n        createOptions.componentSystems = [\n            // @ts-ignore\n            pc.RenderComponentSystem,\n            // @ts-ignore\n            pc.CameraComponentSystem,\n            // @ts-ignore\n            pc.ScriptComponentSystem\n        ];\n        createOptions.resourceHandlers = [\n            // @ts-ignore\n            pc.ScriptHandler,\n            // @ts-ignore\n            pc.TextureHandler\n        ];\n\n        const app = new pc.AppBase(canvas);\n        app.init(createOptions);\n\n        // Set the canvas to fill the window and automatically change resolution to be the same as the canvas size\n        app.setCanvasFillMode(pc.FILLMODE_FILL_WINDOW);\n        app.setCanvasResolution(pc.RESOLUTION_AUTO);\n\n        const assetListLoader = new pc.AssetListLoader(Object.values(assets), app.assets);\n        assetListLoader.load(() => {\n\n            app.start();\n\n            // setup skydome\n            app.scene.skyboxMip = 2;\n            app.scene.envAtlas = assets.helipad.resource;\n            app.scene.skyboxIntensity = 0.1;\n\n            // use a quarter resolution for picker render target (faster but less precise - can miss small objects)\n            const pickerScale = 0.25;\n            let mouseX = 0, mouseY = 0;\n\n            // generate a box area with specified size of random primitives\n            const size = 30;\n            const halfSize = size * 0.5;\n            for (let i = 0; i < 300; i++) {\n                const shape = Math.random() < 0.5 ? \"cylinder\" : \"sphere\";\n                const position = new pc.Vec3(Math.random() * size - halfSize, Math.random() * size - halfSize, Math.random() * size - halfSize);\n                const scale = 1 + Math.random();\n                const entity = createPrimitive(shape, position, new pc.Vec3(scale, scale, scale));\n                app.root.addChild(entity);\n            }\n\n            // handle mouse move event and store current mouse position to use as a position to pick from the scene\n            new pc.Mouse(document.body).on(pc.EVENT_MOUSEMOVE, function (event: any) {\n                mouseX = event.x;\n                mouseY = event.y;\n            }, this);\n\n            // Create an instance of the picker class\n            // Lets use quarter of the resolution to improve performance - this will miss very small objects, but it's ok in our case\n            const picker = new pc.Picker(app, canvas.clientWidth * pickerScale, canvas.clientHeight * pickerScale);\n\n            // helper function to create a primitive with shape type, position, scale\n            function createPrimitive(primitiveType: string, position: pc.Vec3, scale: pc.Vec3) {\n                // create material of random color\n                const material = new pc.StandardMaterial();\n                material.diffuse = new pc.Color(Math.random(), Math.random(), Math.random());\n                material.gloss = 0.6;\n                material.metalness = 0.4;\n                material.useMetalness = true;\n                material.update();\n\n                // create primitive\n                const primitive = new pc.Entity();\n                primitive.addComponent('render', {\n                    type: primitiveType,\n                    material: material\n                });\n\n                // set position and scale\n                primitive.setLocalPosition(position);\n                primitive.setLocalScale(scale);\n\n                return primitive;\n            }\n\n            // Create main camera\n            const camera = new pc.Entity();\n            camera.addComponent(\"camera\", {\n                clearColor: new pc.Color(0.1, 0.1, 0.1)\n            });\n\n            // add bloom postprocessing (this is ignored by the picker)\n            camera.addComponent(\"script\");\n            camera.script.create(\"bloom\", {\n                attributes: {\n                    bloomIntensity: 1,\n                    bloomThreshold: 0.7,\n                    blurAmount: 4\n                }\n            });\n            app.root.addChild(camera);\n\n            // function to draw a 2D rectangle in the screen space coordinates\n            function drawRectangle(x: number, y: number, w: number, h: number) {\n\n                const pink = new pc.Color(1, 0.02, 0.58);\n\n                // transform 4 2D screen points into world space\n                const pt0 = camera.camera.screenToWorld(x, y, 1);\n                const pt1 = camera.camera.screenToWorld(x + w, y, 1);\n                const pt2 = camera.camera.screenToWorld(x + w, y + h, 1);\n                const pt3 = camera.camera.screenToWorld(x, y + h, 1);\n\n                // and connect them using white lines\n                const points = [pt0, pt1,  pt1, pt2,  pt2, pt3,  pt3, pt0];\n                const colors = [pink, pink, pink, pink, pink, pink, pink, pink];\n                app.drawLines(points, colors);\n            }\n\n            // sets material emissive color to specified color\n            function highlightMaterial(material: pc.StandardMaterial, color: pc.Color) {\n                material.emissive = color;\n                material.update();\n            }\n\n            // array of highlighted materials\n            const highlights: pc.StandardMaterial[] = [];\n\n            // the layers picker renders\n            const worldLayer = app.scene.layers.getLayerByName(\"World\");\n            const pickerLayers = [worldLayer];\n\n            // update each frame\n            let time = 0;\n            app.on(\"update\", function (dt: number) {\n\n                time += dt * 0.1;\n\n                // orbit the camera around\n                if (!camera) {\n                    return;\n                }\n\n                camera.setLocalPosition(40 * Math.sin(time), 0, 40 * Math.cos(time));\n                camera.lookAt(pc.Vec3.ZERO);\n\n                // turn all previously highlighted meshes to black at the start of the frame\n                for (let h = 0; h < highlights.length; h++) {\n                    highlightMaterial(highlights[h], pc.Color.BLACK);\n                }\n                highlights.length = 0;\n\n                // Make sure the picker is the right size, and prepare it, which renders meshes into its render target\n                if (picker) {\n                    picker.resize(canvas.clientWidth * pickerScale, canvas.clientHeight * pickerScale);\n                    picker.prepare(camera.camera, app.scene, pickerLayers);\n                }\n\n                // areas we want to sample - two larger rectangles, one small square, and one pixel at a mouse position\n                // assign them different highlight colors as well\n                const areas = [\n                    {\n                        pos: new pc.Vec2(canvas.clientWidth * 0.3, canvas.clientHeight * 0.3),\n                        size: new pc.Vec2(100, 200),\n                        color: pc.Color.YELLOW\n                    },\n                    {\n                        pos: new pc.Vec2(canvas.clientWidth * 0.6, canvas.clientHeight * 0.7),\n                        size: new pc.Vec2(200, 20),\n                        color: pc.Color.CYAN\n                    },\n                    {\n                        pos: new pc.Vec2(canvas.clientWidth * 0.8, canvas.clientHeight * 0.3),\n                        size: new pc.Vec2(5, 5),\n                        color: pc.Color.MAGENTA\n                    },\n                    {\n                        // area based on mouse position\n                        pos: new pc.Vec2(mouseX, mouseY),\n                        size: new pc.Vec2(1, 1),\n                        color: pc.Color.RED\n                    }\n                ];\n\n                // process all areas\n                for (let a = 0; a < areas.length; a++) {\n                    const areaPos = areas[a].pos;\n                    const areaSize = areas[a].size;\n                    const color = areas[a].color;\n\n                    // display 2D rectangle around it\n                    drawRectangle(areaPos.x, areaPos.y, areaSize.x, areaSize.y);\n\n                    // get list of meshInstances inside the area from the picker\n                    // this scans the pixels inside the render target and maps the id value stored there into meshInstances\n                    const selection = picker.getSelection(areaPos.x * pickerScale, areaPos.y * pickerScale, areaSize.x * pickerScale, areaSize.y * pickerScale);\n\n                    // process all meshInstances it found - highlight them to appropriate color for the area\n                    for (let s = 0; s < selection.length; s++) {\n                        if (selection[s]) {\n                            const material = selection[s].material as pc.StandardMaterial;\n                            highlightMaterial(material, color);\n                            highlights.push(material);\n                        }\n                    }\n                }\n            });\n        });\n    });\n}",javaScriptFunction:'function example(canvas, deviceType) {\n    const assets = {\n        bloom: new pc.Asset("bloom", "script", {\n            url: "/static/scripts/posteffects/posteffect-bloom.js",\n        }),\n        helipad: new pc.Asset(\n            "helipad-env-atlas",\n            "texture",\n            { url: "/static/assets/cubemaps/helipad-env-atlas.png" },\n            { type: pc.TEXTURETYPE_RGBP, mipmaps: false }\n        ),\n    };\n\n    const gfxOptions = {\n        deviceTypes: [deviceType],\n        glslangUrl: "/static/lib/glslang/glslang.js",\n        twgslUrl: "/static/lib/twgsl/twgsl.js",\n    };\n\n    pc.createGraphicsDevice(canvas, gfxOptions).then((device) => {\n        const createOptions = new pc.AppOptions();\n        createOptions.graphicsDevice = device;\n        createOptions.mouse = new pc.Mouse(document.body);\n        createOptions.touch = new pc.TouchDevice(document.body);\n\n        createOptions.componentSystems = [\n            // @ts-ignore\n            pc.RenderComponentSystem,\n            // @ts-ignore\n            pc.CameraComponentSystem,\n            // @ts-ignore\n            pc.ScriptComponentSystem,\n        ];\n\n        createOptions.resourceHandlers = [\n            // @ts-ignore\n            pc.ScriptHandler,\n            // @ts-ignore\n            pc.TextureHandler,\n        ];\n\n        const app = new pc.AppBase(canvas);\n        app.init(createOptions);\n\n        // Set the canvas to fill the window and automatically change resolution to be the same as the canvas size\n        app.setCanvasFillMode(pc.FILLMODE_FILL_WINDOW);\n        app.setCanvasResolution(pc.RESOLUTION_AUTO);\n\n        const assetListLoader = new pc.AssetListLoader(\n            Object.values(assets),\n            app.assets\n        );\n        assetListLoader.load(() => {\n            app.start();\n\n            // setup skydome\n            app.scene.skyboxMip = 2;\n            app.scene.envAtlas = assets.helipad.resource;\n            app.scene.skyboxIntensity = 0.1;\n\n            // use a quarter resolution for picker render target (faster but less precise - can miss small objects)\n            const pickerScale = 0.25;\n            let mouseX = 0,\n                mouseY = 0;\n\n            // generate a box area with specified size of random primitives\n            const size = 30;\n            const halfSize = size * 0.5;\n            for (let i = 0; i < 300; i++) {\n                const shape = Math.random() < 0.5 ? "cylinder" : "sphere";\n                const position = new pc.Vec3(\n                    Math.random() * size - halfSize,\n                    Math.random() * size - halfSize,\n                    Math.random() * size - halfSize\n                );\n                const scale = 1 + Math.random();\n                const entity = createPrimitive(\n                    shape,\n                    position,\n                    new pc.Vec3(scale, scale, scale)\n                );\n                app.root.addChild(entity);\n            }\n\n            // handle mouse move event and store current mouse position to use as a position to pick from the scene\n            new pc.Mouse(document.body).on(\n                pc.EVENT_MOUSEMOVE,\n                function (event) {\n                    mouseX = event.x;\n                    mouseY = event.y;\n                },\n                this\n            );\n\n            // Create an instance of the picker class\n            // Lets use quarter of the resolution to improve performance - this will miss very small objects, but it\'s ok in our case\n            const picker = new pc.Picker(\n                app,\n                canvas.clientWidth * pickerScale,\n                canvas.clientHeight * pickerScale\n            );\n\n            // helper function to create a primitive with shape type, position, scale\n            function createPrimitive(primitiveType, position, scale) {\n                // create material of random color\n                const material = new pc.StandardMaterial();\n                material.diffuse = new pc.Color(\n                    Math.random(),\n                    Math.random(),\n                    Math.random()\n                );\n                material.gloss = 0.6;\n                material.metalness = 0.4;\n                material.useMetalness = true;\n                material.update();\n\n                // create primitive\n                const primitive = new pc.Entity();\n                primitive.addComponent("render", {\n                    type: primitiveType,\n                    material: material,\n                });\n\n                // set position and scale\n                primitive.setLocalPosition(position);\n                primitive.setLocalScale(scale);\n\n                return primitive;\n            }\n\n            // Create main camera\n            const camera = new pc.Entity();\n            camera.addComponent("camera", {\n                clearColor: new pc.Color(0.1, 0.1, 0.1),\n            });\n\n            // add bloom postprocessing (this is ignored by the picker)\n            camera.addComponent("script");\n            camera.script.create("bloom", {\n                attributes: {\n                    bloomIntensity: 1,\n                    bloomThreshold: 0.7,\n                    blurAmount: 4,\n                },\n            });\n            app.root.addChild(camera);\n\n            // function to draw a 2D rectangle in the screen space coordinates\n            function drawRectangle(x, y, w, h) {\n                const pink = new pc.Color(1, 0.02, 0.58);\n\n                // transform 4 2D screen points into world space\n                const pt0 = camera.camera.screenToWorld(x, y, 1);\n                const pt1 = camera.camera.screenToWorld(x + w, y, 1);\n                const pt2 = camera.camera.screenToWorld(x + w, y + h, 1);\n                const pt3 = camera.camera.screenToWorld(x, y + h, 1);\n\n                // and connect them using white lines\n                const points = [pt0, pt1, pt1, pt2, pt2, pt3, pt3, pt0];\n                const colors = [pink, pink, pink, pink, pink, pink, pink, pink];\n                app.drawLines(points, colors);\n            }\n\n            // sets material emissive color to specified color\n            function highlightMaterial(material, color) {\n                material.emissive = color;\n                material.update();\n            }\n\n            // array of highlighted materials\n            const highlights = [];\n\n            // the layers picker renders\n            const worldLayer = app.scene.layers.getLayerByName("World");\n            const pickerLayers = [worldLayer];\n\n            // update each frame\n            let time = 0;\n            app.on("update", function (dt) {\n                time += dt * 0.1;\n\n                // orbit the camera around\n                if (!camera) {\n                    return;\n                }\n\n                camera.setLocalPosition(\n                    40 * Math.sin(time),\n                    0,\n                    40 * Math.cos(time)\n                );\n                camera.lookAt(pc.Vec3.ZERO);\n\n                // turn all previously highlighted meshes to black at the start of the frame\n                for (let h = 0; h < highlights.length; h++) {\n                    highlightMaterial(highlights[h], pc.Color.BLACK);\n                }\n                highlights.length = 0;\n\n                // Make sure the picker is the right size, and prepare it, which renders meshes into its render target\n                if (picker) {\n                    picker.resize(\n                        canvas.clientWidth * pickerScale,\n                        canvas.clientHeight * pickerScale\n                    );\n                    picker.prepare(camera.camera, app.scene, pickerLayers);\n                }\n\n                // areas we want to sample - two larger rectangles, one small square, and one pixel at a mouse position\n                // assign them different highlight colors as well\n                const areas = [\n                    {\n                        pos: new pc.Vec2(\n                            canvas.clientWidth * 0.3,\n                            canvas.clientHeight * 0.3\n                        ),\n                        size: new pc.Vec2(100, 200),\n                        color: pc.Color.YELLOW,\n                    },\n                    {\n                        pos: new pc.Vec2(\n                            canvas.clientWidth * 0.6,\n                            canvas.clientHeight * 0.7\n                        ),\n                        size: new pc.Vec2(200, 20),\n                        color: pc.Color.CYAN,\n                    },\n                    {\n                        pos: new pc.Vec2(\n                            canvas.clientWidth * 0.8,\n                            canvas.clientHeight * 0.3\n                        ),\n                        size: new pc.Vec2(5, 5),\n                        color: pc.Color.MAGENTA,\n                    },\n                    {\n                        // area based on mouse position\n                        pos: new pc.Vec2(mouseX, mouseY),\n                        size: new pc.Vec2(1, 1),\n                        color: pc.Color.RED,\n                    },\n                ];\n\n                // process all areas\n                for (let a = 0; a < areas.length; a++) {\n                    const areaPos = areas[a].pos;\n                    const areaSize = areas[a].size;\n                    const color = areas[a].color;\n\n                    // display 2D rectangle around it\n                    drawRectangle(areaPos.x, areaPos.y, areaSize.x, areaSize.y);\n\n                    // get list of meshInstances inside the area from the picker\n                    // this scans the pixels inside the render target and maps the id value stored there into meshInstances\n                    const selection = picker.getSelection(\n                        areaPos.x * pickerScale,\n                        areaPos.y * pickerScale,\n                        areaSize.x * pickerScale,\n                        areaSize.y * pickerScale\n                    );\n\n                    // process all meshInstances it found - highlight them to appropriate color for the area\n                    for (let s = 0; s < selection.length; s++) {\n                        if (selection[s]) {\n                            const material = selection[s].material;\n                            highlightMaterial(material, color);\n                            highlights.push(material);\n                        }\n                    }\n                }\n            });\n        });\n    });\n}\n',nameSlug:"area-picker",categorySlug:"graphics"},"asset-viewer":{typeScriptFunction:"function example(canvas: HTMLCanvasElement, deviceType: string, data: any): void {\n\n    const assets = {\n        orbitCamera: new pc.Asset('script', 'script', { url: '/static/scripts/camera/orbit-camera.js' }),\n        helipad: new pc.Asset('helipad-env-atlas', 'texture', { url: '/static/assets/cubemaps/helipad-env-atlas.png' }, { type: pc.TEXTURETYPE_RGBP, mipmaps: false }),\n        dish: new pc.Asset('dish', 'container', { url: '/static/assets/models/IridescentDishWithOlives.glb' }),\n        mosquito: new pc.Asset('mosquito', 'container', { url: '/static/assets/models/MosquitoInAmber.glb' }),\n        sheen: new pc.Asset('sheen', 'container', { url: '/static/assets/models/SheenChair.glb' }),\n        lamp: new pc.Asset('lamp', 'container', { url: '/static/assets/models/StainedGlassLamp.glb' }),\n        font: new pc.Asset('font', 'font', { url: '/static/assets/fonts/arial.json' }),\n        checkerboard: new pc.Asset('checkerboard', 'texture', { url: '/static/assets/textures/checkboard.png' })\n    };\n\n    const gfxOptions = {\n        deviceTypes: [deviceType],\n        glslangUrl: '/static/lib/glslang/glslang.js',\n        twgslUrl: '/static/lib/twgsl/twgsl.js'\n    };\n\n    pc.createGraphicsDevice(canvas, gfxOptions).then((device: pc.GraphicsDevice) => {\n\n        const createOptions = new pc.AppOptions();\n        createOptions.graphicsDevice = device;\n        createOptions.mouse = new pc.Mouse(document.body);\n        createOptions.touch = new pc.TouchDevice(document.body);\n        createOptions.keyboard = new pc.Keyboard(document.body);\n\n        createOptions.componentSystems = [\n            // @ts-ignore\n            pc.RenderComponentSystem,\n            // @ts-ignore\n            pc.CameraComponentSystem,\n            // @ts-ignore\n            pc.LightComponentSystem,\n            // @ts-ignore\n            pc.ScriptComponentSystem,\n            // @ts-ignore\n            pc.ElementComponentSystem\n        ];\n        createOptions.resourceHandlers = [\n            // @ts-ignore\n            pc.TextureHandler,\n            // @ts-ignore\n            pc.ContainerHandler,\n            // @ts-ignore\n            pc.ScriptHandler,\n            // @ts-ignore\n            pc.JsonHandler,\n            // @ts-ignore\n            pc.FontHandler\n        ];\n\n        const app = new pc.AppBase(canvas);\n        app.init(createOptions);\n\n        // Set the canvas to fill the window and automatically change resolution to be the same as the canvas size\n        app.setCanvasFillMode(pc.FILLMODE_FILL_WINDOW);\n        app.setCanvasResolution(pc.RESOLUTION_AUTO);\n\n        const assetListLoader = new pc.AssetListLoader(Object.values(assets), app.assets);\n        assetListLoader.load(() => {\n\n            app.start();\n\n            // Depth layer is where the framebuffer is copied to a texture to be used in the following layers.\n            // Move the depth layer to take place after World and Skydome layers, to capture both of them.\n            const depthLayer = app.scene.layers.getLayerById(pc.LAYERID_DEPTH);\n            app.scene.layers.remove(depthLayer);\n            app.scene.layers.insertOpaque(depthLayer, 2);\n\n            const createText = (fontAsset: pc.Asset, message: string, x: number, z: number) => {\n                // Create a text element-based entity\n                const text = new pc.Entity();\n                text.addComponent(\"element\", {\n                    anchor: [0.5, 0.5, 0.5, 0.5],\n                    fontAsset: fontAsset,\n                    fontSize: 0.2,\n                    pivot: [0.5, 0.5],\n                    text: message,\n                    type: pc.ELEMENTTYPE_TEXT\n                });\n                text.setLocalPosition(x, -0.9, z);\n                text.setLocalEulerAngles(-90, 0, 0);\n                app.root.addChild(text);\n            };\n\n            const createVisual = (resource: any, pos: pc.Vec3, scale: number) => {\n\n                const entity = resource.instantiateRenderEntity({\n                    castShadows: true\n                });\n                entity.setLocalScale(scale, scale, scale);\n                entity.setLocalPosition(pos);\n                app.root.addChild(entity);\n\n                return entity;\n            };\n\n            let currentAssetIndex = 0;\n\n            // create the scene by instantiating glbs\n            const mosquito = createVisual(assets.mosquito.resource, new pc.Vec3(0, 0.5, 0), 25);\n            createText(assets.font, \"KHR_materials_volume\\nKHR_materials_ior\\nKHR_materials_transmission\", 0, 2);\n\n            const dish = createVisual(assets.dish.resource, new pc.Vec3(-4, -0.5, 0), 9);\n            createText(assets.font, \"KHR_materials_specular\\nKHR_materials_volume\\nKHR_materials_ior\\nKHR_materials_transmission\", -4, 2);\n\n            const sheen1 = createVisual(assets.sheen.resource, new pc.Vec3(8, -1.0, 0), 4);\n            createText(assets.font, \"Mango Velvet\", 8, 1);\n\n            const sheen2 = createVisual(assets.sheen.resource, new pc.Vec3(4, -1.0, 0), 4);\n            assets.sheen.resource.applyMaterialVariant(sheen2, \"Peacock Velvet\");\n            createText(assets.font, \"KHR_materials_sheen\\nKHR_materials_variants\", 5.5, 2);\n            createText(assets.font, \"Peacock Velvet\", 4, 1);\n\n            const lamp = createVisual(assets.lamp.resource, new pc.Vec3(-8, -1.0, 0), 5);\n            createText(assets.font, \"Lamp on\", -8, 1);\n\n            const lamp2 = createVisual(assets.lamp.resource, new pc.Vec3(-11, -1.0, 0), 5);\n            assets.lamp.resource.applyMaterialVariant(lamp2, \"Lamp off\");\n            createText(assets.font, \"Lamp off\", -11, 1);\n            createText(assets.font, \"KHR_materials_transmission\\nKHR_materials_ior\\nKHR_materials_volume\\nKHR_materials_variants\\nKHR_materials_clearcoat\", -9.5, 2);\n\n            const assetList = [\n                lamp2, lamp, dish, mosquito, sheen2, sheen1\n            ];\n\n            const material = new pc.StandardMaterial();\n            material.diffuseMap = assets.checkerboard.resource;\n            material.diffuseMapTiling = new pc.Vec2(16, 6);\n            material.update();\n            const plane = new pc.Entity();\n            plane.addComponent('render', {\n                type: 'plane',\n                material: material\n            });\n            plane.setLocalScale(new pc.Vec3(25, 0, 10));\n            plane.setLocalPosition(0, -1.0, 0);\n            app.root.addChild(plane);\n\n            // Create an Entity with a camera component\n            const camera = new pc.Entity();\n            camera.addComponent(\"camera\", {\n            });\n            camera.setLocalPosition(0, 55, 160);\n\n            camera.camera.requestSceneColorMap(true);\n            camera.addComponent(\"script\");\n            camera.script.create(\"orbitCamera\", {\n                attributes: {\n                    inertiaFactor: 0.2,\n                    distanceMin: 8,\n                    distanceMax: 50\n                }\n            });\n            camera.script.create(\"orbitCameraInputMouse\");\n            camera.script.create(\"orbitCameraInputTouch\");\n            app.root.addChild(camera);\n\n            const directionalLight = new pc.Entity();\n            directionalLight.addComponent(\"light\", {\n                type: \"directional\",\n                color: pc.Color.WHITE,\n                castShadows: true,\n                intensity: 1,\n                shadowBias: 0.2,\n                normalOffsetBias: 0.05,\n                shadowResolution: 2048\n            });\n            directionalLight.setEulerAngles(45, 180, 0);\n            app.root.addChild(directionalLight);\n\n            app.scene.envAtlas = assets.helipad.resource;\n            app.scene.toneMapping = pc.TONEMAP_ACES;\n            app.scene.skyboxMip = 1;\n            app.scene.skyboxRotation = new pc.Quat().setFromEulerAngles(0, 70, 0);\n            app.scene.skyboxIntensity = 1.5;\n\n            window.addEventListener(\"touchstart\", (event) => {\n                const touch = event.touches[0];\n                const entity = data.get('selection.focusEntity');\n                let newEntity = entity;\n                if (touch.clientX <= canvas.width * 0.2) {\n                    newEntity = Math.max(0, entity - 1);\n                } else if (touch.clientX >= canvas.width * 0.8) {\n                    newEntity = Math.min(entity + 1, assetList.length);\n                }\n                if (entity !== newEntity) {\n                    data.set('selection.focusEntity', newEntity);\n                }\n            }, false);\n\n            function jumpToAsset(offset: number) {\n\n                // wrap around\n                const count = assetList.length - 1;\n                currentAssetIndex += offset;\n                if (currentAssetIndex < 0) currentAssetIndex = count;\n                if (currentAssetIndex > count) currentAssetIndex = 0;\n\n                const pos = assetList[currentAssetIndex].getLocalPosition();\n                const newPos = new pc.Vec3(0, 2.0, 6.0).add(pos);\n                camera.setLocalPosition(newPos);\n\n                // @ts-ignore engine-tsd\n                camera.script.orbitCamera.focusEntity = assetList[currentAssetIndex];\n            }\n\n            // focus on mosquito\n            jumpToAsset(3);\n\n            data.on('previous', function () {\n                jumpToAsset(-1);\n            });\n\n            // remove light button handler\n            data.on('next', function () {\n                jumpToAsset(1);\n            });\n        });\n    });\n}",javaScriptFunction:'function example(canvas, deviceType, data) {\n    const assets = {\n        orbitCamera: new pc.Asset("script", "script", {\n            url: "/static/scripts/camera/orbit-camera.js",\n        }),\n        helipad: new pc.Asset(\n            "helipad-env-atlas",\n            "texture",\n            { url: "/static/assets/cubemaps/helipad-env-atlas.png" },\n            { type: pc.TEXTURETYPE_RGBP, mipmaps: false }\n        ),\n        dish: new pc.Asset("dish", "container", {\n            url: "/static/assets/models/IridescentDishWithOlives.glb",\n        }),\n        mosquito: new pc.Asset("mosquito", "container", {\n            url: "/static/assets/models/MosquitoInAmber.glb",\n        }),\n        sheen: new pc.Asset("sheen", "container", {\n            url: "/static/assets/models/SheenChair.glb",\n        }),\n        lamp: new pc.Asset("lamp", "container", {\n            url: "/static/assets/models/StainedGlassLamp.glb",\n        }),\n        font: new pc.Asset("font", "font", {\n            url: "/static/assets/fonts/arial.json",\n        }),\n        checkerboard: new pc.Asset("checkerboard", "texture", {\n            url: "/static/assets/textures/checkboard.png",\n        }),\n    };\n\n    const gfxOptions = {\n        deviceTypes: [deviceType],\n        glslangUrl: "/static/lib/glslang/glslang.js",\n        twgslUrl: "/static/lib/twgsl/twgsl.js",\n    };\n\n    pc.createGraphicsDevice(canvas, gfxOptions).then((device) => {\n        const createOptions = new pc.AppOptions();\n        createOptions.graphicsDevice = device;\n        createOptions.mouse = new pc.Mouse(document.body);\n        createOptions.touch = new pc.TouchDevice(document.body);\n        createOptions.keyboard = new pc.Keyboard(document.body);\n\n        createOptions.componentSystems = [\n            // @ts-ignore\n            pc.RenderComponentSystem,\n            // @ts-ignore\n            pc.CameraComponentSystem,\n            // @ts-ignore\n            pc.LightComponentSystem,\n            // @ts-ignore\n            pc.ScriptComponentSystem,\n            // @ts-ignore\n            pc.ElementComponentSystem,\n        ];\n\n        createOptions.resourceHandlers = [\n            // @ts-ignore\n            pc.TextureHandler,\n            // @ts-ignore\n            pc.ContainerHandler,\n            // @ts-ignore\n            pc.ScriptHandler,\n            // @ts-ignore\n            pc.JsonHandler,\n            // @ts-ignore\n            pc.FontHandler,\n        ];\n\n        const app = new pc.AppBase(canvas);\n        app.init(createOptions);\n\n        // Set the canvas to fill the window and automatically change resolution to be the same as the canvas size\n        app.setCanvasFillMode(pc.FILLMODE_FILL_WINDOW);\n        app.setCanvasResolution(pc.RESOLUTION_AUTO);\n\n        const assetListLoader = new pc.AssetListLoader(\n            Object.values(assets),\n            app.assets\n        );\n        assetListLoader.load(() => {\n            app.start();\n\n            // Depth layer is where the framebuffer is copied to a texture to be used in the following layers.\n            // Move the depth layer to take place after World and Skydome layers, to capture both of them.\n            const depthLayer = app.scene.layers.getLayerById(pc.LAYERID_DEPTH);\n            app.scene.layers.remove(depthLayer);\n            app.scene.layers.insertOpaque(depthLayer, 2);\n\n            const createText = (fontAsset, message, x, z) => {\n                // Create a text element-based entity\n                const text = new pc.Entity();\n                text.addComponent("element", {\n                    anchor: [0.5, 0.5, 0.5, 0.5],\n                    fontAsset: fontAsset,\n                    fontSize: 0.2,\n                    pivot: [0.5, 0.5],\n                    text: message,\n                    type: pc.ELEMENTTYPE_TEXT,\n                });\n                text.setLocalPosition(x, -0.9, z);\n                text.setLocalEulerAngles(-90, 0, 0);\n                app.root.addChild(text);\n            };\n\n            const createVisual = (resource, pos, scale) => {\n                const entity = resource.instantiateRenderEntity({\n                    castShadows: true,\n                });\n                entity.setLocalScale(scale, scale, scale);\n                entity.setLocalPosition(pos);\n                app.root.addChild(entity);\n\n                return entity;\n            };\n\n            let currentAssetIndex = 0;\n\n            // create the scene by instantiating glbs\n            const mosquito = createVisual(\n                assets.mosquito.resource,\n                new pc.Vec3(0, 0.5, 0),\n                25\n            );\n            createText(\n                assets.font,\n                "KHR_materials_volume\\nKHR_materials_ior\\nKHR_materials_transmission",\n                0,\n                2\n            );\n\n            const dish = createVisual(\n                assets.dish.resource,\n                new pc.Vec3(-4, -0.5, 0),\n                9\n            );\n            createText(\n                assets.font,\n                "KHR_materials_specular\\nKHR_materials_volume\\nKHR_materials_ior\\nKHR_materials_transmission",\n                -4,\n                2\n            );\n\n            const sheen1 = createVisual(\n                assets.sheen.resource,\n                new pc.Vec3(8, -1.0, 0),\n                4\n            );\n            createText(assets.font, "Mango Velvet", 8, 1);\n\n            const sheen2 = createVisual(\n                assets.sheen.resource,\n                new pc.Vec3(4, -1.0, 0),\n                4\n            );\n            assets.sheen.resource.applyMaterialVariant(\n                sheen2,\n                "Peacock Velvet"\n            );\n            createText(\n                assets.font,\n                "KHR_materials_sheen\\nKHR_materials_variants",\n                5.5,\n                2\n            );\n            createText(assets.font, "Peacock Velvet", 4, 1);\n\n            const lamp = createVisual(\n                assets.lamp.resource,\n                new pc.Vec3(-8, -1.0, 0),\n                5\n            );\n            createText(assets.font, "Lamp on", -8, 1);\n\n            const lamp2 = createVisual(\n                assets.lamp.resource,\n                new pc.Vec3(-11, -1.0, 0),\n                5\n            );\n            assets.lamp.resource.applyMaterialVariant(lamp2, "Lamp off");\n            createText(assets.font, "Lamp off", -11, 1);\n            createText(\n                assets.font,\n                "KHR_materials_transmission\\nKHR_materials_ior\\nKHR_materials_volume\\nKHR_materials_variants\\nKHR_materials_clearcoat",\n                -9.5,\n                2\n            );\n\n            const assetList = [lamp2, lamp, dish, mosquito, sheen2, sheen1];\n\n            const material = new pc.StandardMaterial();\n            material.diffuseMap = assets.checkerboard.resource;\n            material.diffuseMapTiling = new pc.Vec2(16, 6);\n            material.update();\n            const plane = new pc.Entity();\n            plane.addComponent("render", {\n                type: "plane",\n                material: material,\n            });\n            plane.setLocalScale(new pc.Vec3(25, 0, 10));\n            plane.setLocalPosition(0, -1.0, 0);\n            app.root.addChild(plane);\n\n            // Create an Entity with a camera component\n            const camera = new pc.Entity();\n            camera.addComponent("camera", {});\n            camera.setLocalPosition(0, 55, 160);\n\n            camera.camera.requestSceneColorMap(true);\n            camera.addComponent("script");\n            camera.script.create("orbitCamera", {\n                attributes: {\n                    inertiaFactor: 0.2,\n                    distanceMin: 8,\n                    distanceMax: 50,\n                },\n            });\n            camera.script.create("orbitCameraInputMouse");\n            camera.script.create("orbitCameraInputTouch");\n            app.root.addChild(camera);\n\n            const directionalLight = new pc.Entity();\n            directionalLight.addComponent("light", {\n                type: "directional",\n                color: pc.Color.WHITE,\n                castShadows: true,\n                intensity: 1,\n                shadowBias: 0.2,\n                normalOffsetBias: 0.05,\n                shadowResolution: 2048,\n            });\n            directionalLight.setEulerAngles(45, 180, 0);\n            app.root.addChild(directionalLight);\n\n            app.scene.envAtlas = assets.helipad.resource;\n            app.scene.toneMapping = pc.TONEMAP_ACES;\n            app.scene.skyboxMip = 1;\n            app.scene.skyboxRotation = new pc.Quat().setFromEulerAngles(\n                0,\n                70,\n                0\n            );\n            app.scene.skyboxIntensity = 1.5;\n\n            window.addEventListener(\n                "touchstart",\n                (event) => {\n                    const touch = event.touches[0];\n                    const entity = data.get("selection.focusEntity");\n                    let newEntity = entity;\n                    if (touch.clientX <= canvas.width * 0.2) {\n                        newEntity = Math.max(0, entity - 1);\n                    } else if (touch.clientX >= canvas.width * 0.8) {\n                        newEntity = Math.min(entity + 1, assetList.length);\n                    }\n                    if (entity !== newEntity) {\n                        data.set("selection.focusEntity", newEntity);\n                    }\n                },\n                false\n            );\n\n            function jumpToAsset(offset) {\n                // wrap around\n                const count = assetList.length - 1;\n                currentAssetIndex += offset;\n                if (currentAssetIndex < 0) currentAssetIndex = count;\n                if (currentAssetIndex > count) currentAssetIndex = 0;\n\n                const pos = assetList[currentAssetIndex].getLocalPosition();\n                const newPos = new pc.Vec3(0, 2.0, 6.0).add(pos);\n                camera.setLocalPosition(newPos);\n\n                // @ts-ignore engine-tsd\n                camera.script.orbitCamera.focusEntity =\n                    assetList[currentAssetIndex];\n            }\n\n            // focus on mosquito\n            jumpToAsset(3);\n\n            data.on("previous", function () {\n                jumpToAsset(-1);\n            });\n\n            // remove light button handler\n            data.on("next", function () {\n                jumpToAsset(1);\n            });\n        });\n    });\n}\n',nameSlug:"asset-viewer",categorySlug:"graphics"},"batching-dynamic":{typeScriptFunction:'function example(canvas: HTMLCanvasElement, deviceType: string): void {\n\n    const gfxOptions = {\n        deviceTypes: [deviceType],\n        glslangUrl: \'/static/lib/glslang/glslang.js\',\n        twgslUrl: \'/static/lib/twgsl/twgsl.js\'\n    };\n\n    pc.createGraphicsDevice(canvas, gfxOptions).then((device: pc.GraphicsDevice) => {\n\n        const createOptions = new pc.AppOptions();\n        createOptions.graphicsDevice = device;\n\n        // @ts-ignore\n        createOptions.batchManager = pc.BatchManager;\n\n        createOptions.componentSystems = [\n            // @ts-ignore\n            pc.RenderComponentSystem,\n            // @ts-ignore\n            pc.CameraComponentSystem,\n            // @ts-ignore\n            pc.LightComponentSystem\n        ];\n\n        const app = new pc.AppBase(canvas);\n        app.init(createOptions);\n\n        // Set the canvas to fill the window and automatically change resolution to be the same as the canvas size\n        app.setCanvasFillMode(pc.FILLMODE_FILL_WINDOW);\n        app.setCanvasResolution(pc.RESOLUTION_AUTO);\n\n        app.start();\n\n        window.addEventListener("resize", function () {\n            app.resizeCanvas(canvas.width, canvas.height);\n        });\n\n        // create two material\n        const material1 = new pc.StandardMaterial();\n        material1.diffuse = new pc.Color(1, 1, 0);\n        material1.gloss = 0.4;\n        material1.metalness = 0.5;\n        material1.useMetalness = true;\n        material1.update();\n\n        const material2 = new pc.StandardMaterial();\n        material2.diffuse = new pc.Color(0, 1, 1);\n        material2.gloss = 0.4;\n        material2.metalness = 0.5;\n        material2.useMetalness = true;\n        material2.update();\n\n        // create a single BatchGroup. Make it dynamic to allow batched meshes to be freely moved every frame.\n        const batchGroup = app.batcher.addGroup("Meshes", true, 100);\n\n        // create various primitive instances using one of the two materials\n        const numInstances = 500;\n        const shapes = ["box", "cone", "cylinder", "sphere", "capsule"];\n        const entities: any = [];\n        for (let i = 0; i < numInstances; i++) {\n\n            // random shape\n            const shapeName = shapes[Math.floor(Math.random() * shapes.length)];\n\n            const entity = new pc.Entity();\n\n            // create render component\n            entity.addComponent("render", {\n                type: shapeName,\n                material: Math.random() < 0.5 ? material1 : material2,\n                castShadows: true,\n\n                // add it to the batchGroup - this instructs engine to try and render these meshes in a small number of draw calls.\n                // there will be at least 2 draw calls, one for each material\n                batchGroupId: batchGroup.id\n            });\n\n            // add entity for rendering\n            app.root.addChild(entity);\n\n            // keep in the list to adjust positions each frame\n            entities.push(entity);\n        }\n\n        // Create an Entity for the ground\n        const ground = new pc.Entity();\n        ground.addComponent("render", {\n            type: "box",\n            material: material2\n        });\n        ground.setLocalScale(150, 1, 150);\n        ground.setLocalPosition(0, -26, 0);\n        app.root.addChild(ground);\n\n        // Create an entity with a camera component\n        const camera = new pc.Entity();\n        camera.addComponent("camera", {\n            clearColor: new pc.Color(0.2, 0.2, 0.2)\n        });\n        app.root.addChild(camera);\n\n        // Create an entity with a directional light component\n        // Add it as a child of a camera to rotate with the camera\n        const light = new pc.Entity();\n        light.addComponent("light", {\n            type: "directional",\n            castShadows: true,\n            shadowBias: 0.2,\n            normalOffsetBias: 0.06,\n            shadowDistance: 150\n        });\n        camera.addChild(light);\n        light.setLocalEulerAngles(15, 30, 0);\n\n        // Set an update function on the app\'s update event\n        let time = 0;\n        app.on("update", function (dt: number) {\n            time += dt;\n\n            // move all entities along orbits\n            for (let i = 0; i < entities.length; i++) {\n                const radius = 5 + 20.0 * i / numInstances;\n                const speed = i / numInstances;\n                entities[i].setLocalPosition(radius * Math.sin(i + time * speed), radius * Math.cos(i + time * speed), radius * Math.cos(i + 2 * time * speed));\n                entities[i].lookAt(pc.Vec3.ZERO);\n            }\n\n            // orbit camera around\n            camera.setLocalPosition(70 * Math.sin(time), 0, 70 * Math.cos(time));\n            camera.lookAt(pc.Vec3.ZERO);\n        });\n    });\n}',javaScriptFunction:'function example(canvas, deviceType) {\n    const gfxOptions = {\n        deviceTypes: [deviceType],\n        glslangUrl: "/static/lib/glslang/glslang.js",\n        twgslUrl: "/static/lib/twgsl/twgsl.js",\n    };\n\n    pc.createGraphicsDevice(canvas, gfxOptions).then((device) => {\n        const createOptions = new pc.AppOptions();\n        createOptions.graphicsDevice = device;\n\n        // @ts-ignore\n        createOptions.batchManager = pc.BatchManager;\n\n        createOptions.componentSystems = [\n            // @ts-ignore\n            pc.RenderComponentSystem,\n            // @ts-ignore\n            pc.CameraComponentSystem,\n            // @ts-ignore\n            pc.LightComponentSystem,\n        ];\n\n        const app = new pc.AppBase(canvas);\n        app.init(createOptions);\n\n        // Set the canvas to fill the window and automatically change resolution to be the same as the canvas size\n        app.setCanvasFillMode(pc.FILLMODE_FILL_WINDOW);\n        app.setCanvasResolution(pc.RESOLUTION_AUTO);\n\n        app.start();\n\n        window.addEventListener("resize", function () {\n            app.resizeCanvas(canvas.width, canvas.height);\n        });\n\n        // create two material\n        const material1 = new pc.StandardMaterial();\n        material1.diffuse = new pc.Color(1, 1, 0);\n        material1.gloss = 0.4;\n        material1.metalness = 0.5;\n        material1.useMetalness = true;\n        material1.update();\n\n        const material2 = new pc.StandardMaterial();\n        material2.diffuse = new pc.Color(0, 1, 1);\n        material2.gloss = 0.4;\n        material2.metalness = 0.5;\n        material2.useMetalness = true;\n        material2.update();\n\n        // create a single BatchGroup. Make it dynamic to allow batched meshes to be freely moved every frame.\n        const batchGroup = app.batcher.addGroup("Meshes", true, 100);\n\n        // create various primitive instances using one of the two materials\n        const numInstances = 500;\n        const shapes = ["box", "cone", "cylinder", "sphere", "capsule"];\n        const entities = [];\n        for (let i = 0; i < numInstances; i++) {\n            // random shape\n            const shapeName = shapes[Math.floor(Math.random() * shapes.length)];\n\n            const entity = new pc.Entity();\n\n            // create render component\n            entity.addComponent("render", {\n                type: shapeName,\n                material: Math.random() < 0.5 ? material1 : material2,\n                castShadows: true,\n\n                // add it to the batchGroup - this instructs engine to try and render these meshes in a small number of draw calls.\n                // there will be at least 2 draw calls, one for each material\n                batchGroupId: batchGroup.id,\n            });\n\n            // add entity for rendering\n            app.root.addChild(entity);\n\n            // keep in the list to adjust positions each frame\n            entities.push(entity);\n        }\n\n        // Create an Entity for the ground\n        const ground = new pc.Entity();\n        ground.addComponent("render", {\n            type: "box",\n            material: material2,\n        });\n        ground.setLocalScale(150, 1, 150);\n        ground.setLocalPosition(0, -26, 0);\n        app.root.addChild(ground);\n\n        // Create an entity with a camera component\n        const camera = new pc.Entity();\n        camera.addComponent("camera", {\n            clearColor: new pc.Color(0.2, 0.2, 0.2),\n        });\n        app.root.addChild(camera);\n\n        // Create an entity with a directional light component\n        // Add it as a child of a camera to rotate with the camera\n        const light = new pc.Entity();\n        light.addComponent("light", {\n            type: "directional",\n            castShadows: true,\n            shadowBias: 0.2,\n            normalOffsetBias: 0.06,\n            shadowDistance: 150,\n        });\n        camera.addChild(light);\n        light.setLocalEulerAngles(15, 30, 0);\n\n        // Set an update function on the app\'s update event\n        let time = 0;\n        app.on("update", function (dt) {\n            time += dt;\n\n            // move all entities along orbits\n            for (let i = 0; i < entities.length; i++) {\n                const radius = 5 + (20.0 * i) / numInstances;\n                const speed = i / numInstances;\n                entities[i].setLocalPosition(\n                    radius * Math.sin(i + time * speed),\n                    radius * Math.cos(i + time * speed),\n                    radius * Math.cos(i + 2 * time * speed)\n                );\n                entities[i].lookAt(pc.Vec3.ZERO);\n            }\n\n            // orbit camera around\n            camera.setLocalPosition(\n                70 * Math.sin(time),\n                0,\n                70 * Math.cos(time)\n            );\n            camera.lookAt(pc.Vec3.ZERO);\n        });\n    });\n}\n',nameSlug:"batching-dynamic",categorySlug:"graphics"},"clustered-area-lights":{typeScriptFunction:"function example(canvas: HTMLCanvasElement, deviceType: string, data:any): void {\n\n    data.set('settings', {\n        material: {\n            gloss: 0.8,\n            metalness: 0.7\n        }\n    });\n\n    const assets = {\n        'bloom': new pc.Asset('bloom', 'script', { url: '/static/scripts/posteffects/posteffect-bloom.js' }),\n        'script': new pc.Asset('script', 'script', { url: '/static/scripts/camera/orbit-camera.js' }),\n        'color': new pc.Asset('color', 'texture', { url: '/static/assets/textures/seaside-rocks01-color.jpg' }),\n        'normal': new pc.Asset('normal', 'texture', { url: '/static/assets/textures/seaside-rocks01-normal.jpg' }),\n        'gloss': new pc.Asset('gloss', 'texture', { url: '/static/assets/textures/seaside-rocks01-gloss.jpg' }),\n        'luts': new pc.Asset('luts', 'json', { url: '/static/assets/json/area-light-luts.json' })\n    };\n\n    const gfxOptions = {\n        deviceTypes: [deviceType],\n        glslangUrl: '/static/lib/glslang/glslang.js',\n        twgslUrl: '/static/lib/twgsl/twgsl.js'\n    };\n\n    pc.createGraphicsDevice(canvas, gfxOptions).then((device: pc.GraphicsDevice) => {\n\n        const createOptions = new pc.AppOptions();\n        createOptions.graphicsDevice = device;\n        createOptions.mouse = new pc.Mouse(document.body);\n        createOptions.touch = new pc.TouchDevice(document.body);\n\n        createOptions.componentSystems = [\n            // @ts-ignore\n            pc.RenderComponentSystem,\n            // @ts-ignore\n            pc.CameraComponentSystem,\n            // @ts-ignore\n            pc.LightComponentSystem,\n            // @ts-ignore\n            pc.ScriptComponentSystem\n        ];\n        createOptions.resourceHandlers = [\n            // @ts-ignore\n            pc.TextureHandler,\n            // @ts-ignore\n            pc.ContainerHandler,\n            // @ts-ignore\n            pc.ScriptHandler,\n            // @ts-ignore\n            pc.JsonHandler\n        ];\n\n        const app = new pc.AppBase(canvas);\n        app.init(createOptions);\n\n        // Set the canvas to fill the window and automatically change resolution to be the same as the canvas size\n        app.setCanvasFillMode(pc.FILLMODE_FILL_WINDOW);\n        app.setCanvasResolution(pc.RESOLUTION_AUTO);\n\n        const assetListLoader = new pc.AssetListLoader(Object.values(assets), app.assets);\n        assetListLoader.load(() => {\n\n            app.start();\n\n            // set up some general scene rendering properties\n            app.scene.toneMapping = pc.TONEMAP_ACES;\n\n            // enabled clustered lighting. This is a temporary API and will change in the future\n            app.scene.clusteredLightingEnabled = true;\n\n            // adjust default clustered lighting parameters to handle many lights\n            const lighting = app.scene.lighting;\n\n            // 1) subdivide space with lights into this many cells\n            lighting.cells = new pc.Vec3(30, 2, 30);\n\n            // 2) and allow this many lights per cell\n            lighting.maxLightsPerCell = 20;\n\n            lighting.areaLightsEnabled = true;\n            lighting.shadowsEnabled = false;\n\n            // pure black material - used on back side of light objects\n            const blackMaterial = new pc.StandardMaterial();\n            blackMaterial.diffuse = new pc.Color(0, 0, 0);\n            blackMaterial.useLighting = false;\n            blackMaterial.update();\n\n            // ground material\n            const groundMaterial = new pc.StandardMaterial();\n            groundMaterial.diffuse = pc.Color.GRAY;\n            groundMaterial.gloss = 0.8;\n            groundMaterial.metalness = 0.7;\n            groundMaterial.useMetalness = true;\n\n            // helper function to create a primitive with shape type, position, scale, color\n            function createPrimitive(primitiveType: string, position: pc.Vec3, scale: pc.Vec3, assetManifest: any) {\n\n                if (assetManifest) {\n                    groundMaterial.diffuseMap = assetManifest.color.resource;\n                    groundMaterial.normalMap = assetManifest.normal.resource;\n                    groundMaterial.glossMap = assetManifest.gloss.resource;\n\n                    groundMaterial.diffuseMapTiling.set(17, 17);\n                    groundMaterial.normalMapTiling.set(17, 17);\n                    groundMaterial.glossMapTiling.set(17, 17);\n                }\n\n                groundMaterial.update();\n\n                // create primitive\n                const primitive = new pc.Entity();\n                primitive.addComponent('render', {\n                    type: primitiveType,\n                    material: groundMaterial\n                });\n\n                // set position and scale and add it to scene\n                primitive.setLocalPosition(position);\n                primitive.setLocalScale(scale);\n                app.root.addChild(primitive);\n\n                return primitive;\n            }\n\n            // helper function to create area light including its visual representation in the world\n            function createAreaLight(type: string, shape: number, position: pc.Vec3, scale: pc.Vec3, color: pc.Color, intensity: number, range: number) {\n\n                const light = new pc.Entity();\n                light.addComponent(\"light\", {\n                    type: type,\n                    shape: shape,\n                    color: color,\n                    intensity: intensity,\n                    falloffMode: pc.LIGHTFALLOFF_INVERSESQUARED,\n                    range: range,\n                    innerConeAngle: 88,\n                    outerConeAngle: 89\n                });\n\n                light.setLocalScale(scale);\n                light.setLocalPosition(position);\n                if (type === \"spot\") {\n                    light.rotate(-90, 0, 0);\n                }\n                app.root.addChild(light);\n\n                // emissive material that is the light source color\n                const brightMaterial = new pc.StandardMaterial();\n                brightMaterial.emissive = new pc.Color(color.r * 0.8, color.g * 0.8, color.b * 0.8);\n                brightMaterial.useLighting = false;\n                brightMaterial.update();\n\n                // primitive shape that matches light source shape\n                const lightPrimitive = (shape === pc.LIGHTSHAPE_SPHERE) ? \"sphere\" : (shape === pc.LIGHTSHAPE_DISK) ? \"cylinder\" : \"box\";\n\n                // primitive scale - flatten it to disk / rectangle\n                const primitiveScale = new pc.Vec3(1, shape !== pc.LIGHTSHAPE_SPHERE ? 0.001 : 1, 1);\n\n                // bright primitive representing the area light source\n                const brightShape = new pc.Entity();\n                brightShape.addComponent(\"render\", {\n                    type: lightPrimitive,\n                    material: brightMaterial\n                });\n                brightShape.setLocalScale(primitiveScale);\n                light.addChild(brightShape);\n\n                // black primitive representing the back of the light source which is not emitting light\n                if (type === \"spot\") {\n\n                    const blackShape = new pc.Entity();\n                    blackShape.addComponent(\"render\", {\n                        type: lightPrimitive,\n                        material: blackMaterial\n                    });\n                    blackShape.setLocalPosition(0, 0.004, 0);\n                    blackShape.setLocalEulerAngles(-180, 0, 0);\n                    blackShape.setLocalScale(primitiveScale);\n                    light.addChild(blackShape);\n                }\n\n                return light;\n            }\n\n            // set the loaded area light LUT data\n            const luts = assets.luts.resource;\n            app.setAreaLightLuts(luts.LTC_MAT_1, luts.LTC_MAT_2);\n\n            // set up some general scene rendering properties\n            app.scene.toneMapping = pc.TONEMAP_ACES;\n\n            // create ground plane\n            const ground = createPrimitive(\"plane\", new pc.Vec3(0, 0, 0), new pc.Vec3(45, 1, 45), assets);\n\n            // Create the camera, which renders entities\n            const camera = new pc.Entity();\n            camera.addComponent(\"camera\", {\n                clearColor: new pc.Color(0.1, 0.1, 0.1),\n                fov: 60,\n                farClip: 1000\n            });\n            camera.setLocalPosition(3, 3, 12);\n\n            // add orbit camera script with a mouse and a touch support\n            camera.addComponent(\"script\");\n            camera.script.create(\"orbitCamera\", {\n                attributes: {\n                    inertiaFactor: 0.2,\n                    focusEntity: ground,\n                    distanceMax: 60,\n                    frameOnStart: false\n                }\n            });\n            camera.script.create(\"orbitCameraInputMouse\");\n            camera.script.create(\"orbitCameraInputTouch\");\n            app.root.addChild(camera);\n\n            // add bloom postprocessing\n            camera.script.create(\"bloom\", {\n                attributes: {\n                    bloomIntensity: 1.5,\n                    bloomThreshold: 0.6,\n                    blurAmount: 6\n                }\n            });\n\n            // generate a grid of area lights of sphere, disk and rect shapes\n            for (let x = -20; x <= 20; x += 5) {\n                for (let y = -20; y <= 20; y += 5) {\n                    const pos = new pc.Vec3(x, 0.6, y);\n                    const color = new pc.Color(0.3 + Math.random() * 0.7, 0.3 + Math.random() * 0.7, 0.3 + Math.random() * 0.7);\n                    const rand = Math.random();\n                    if (rand < 0.3) {\n                        createAreaLight(\"omni\", pc.LIGHTSHAPE_SPHERE, pos, new pc.Vec3(1.5, 1.5, 1.5), color, 2, 6);\n                    } else if (rand < 0.6) {\n                        createAreaLight(\"spot\", pc.LIGHTSHAPE_DISK, pos, new pc.Vec3(1.5, 1.5, 1.5), color, 2.5, 5);\n                    } else {\n                        createAreaLight(\"spot\", pc.LIGHTSHAPE_RECT, pos, new pc.Vec3(2, 1, 1), color, 2.5, 5);\n                    }\n                }\n            }\n\n            // handle HUD changes - update properties on the material\n            data.on('*:set', (path: string, value: any) => {\n                const pathArray = path.split('.');\n                if (pathArray[2] === \"gloss\") groundMaterial.gloss = value;\n                if (pathArray[2] === \"metalness\") groundMaterial.metalness = value;\n                groundMaterial.update();\n            });\n        });\n    });\n}",javaScriptFunction:'function example(canvas, deviceType, data) {\n    data.set("settings", {\n        material: {\n            gloss: 0.8,\n            metalness: 0.7,\n        },\n    });\n\n    const assets = {\n        bloom: new pc.Asset("bloom", "script", {\n            url: "/static/scripts/posteffects/posteffect-bloom.js",\n        }),\n        script: new pc.Asset("script", "script", {\n            url: "/static/scripts/camera/orbit-camera.js",\n        }),\n        color: new pc.Asset("color", "texture", {\n            url: "/static/assets/textures/seaside-rocks01-color.jpg",\n        }),\n        normal: new pc.Asset("normal", "texture", {\n            url: "/static/assets/textures/seaside-rocks01-normal.jpg",\n        }),\n        gloss: new pc.Asset("gloss", "texture", {\n            url: "/static/assets/textures/seaside-rocks01-gloss.jpg",\n        }),\n        luts: new pc.Asset("luts", "json", {\n            url: "/static/assets/json/area-light-luts.json",\n        }),\n    };\n\n    const gfxOptions = {\n        deviceTypes: [deviceType],\n        glslangUrl: "/static/lib/glslang/glslang.js",\n        twgslUrl: "/static/lib/twgsl/twgsl.js",\n    };\n\n    pc.createGraphicsDevice(canvas, gfxOptions).then((device) => {\n        const createOptions = new pc.AppOptions();\n        createOptions.graphicsDevice = device;\n        createOptions.mouse = new pc.Mouse(document.body);\n        createOptions.touch = new pc.TouchDevice(document.body);\n\n        createOptions.componentSystems = [\n            // @ts-ignore\n            pc.RenderComponentSystem,\n            // @ts-ignore\n            pc.CameraComponentSystem,\n            // @ts-ignore\n            pc.LightComponentSystem,\n            // @ts-ignore\n            pc.ScriptComponentSystem,\n        ];\n\n        createOptions.resourceHandlers = [\n            // @ts-ignore\n            pc.TextureHandler,\n            // @ts-ignore\n            pc.ContainerHandler,\n            // @ts-ignore\n            pc.ScriptHandler,\n            // @ts-ignore\n            pc.JsonHandler,\n        ];\n\n        const app = new pc.AppBase(canvas);\n        app.init(createOptions);\n\n        // Set the canvas to fill the window and automatically change resolution to be the same as the canvas size\n        app.setCanvasFillMode(pc.FILLMODE_FILL_WINDOW);\n        app.setCanvasResolution(pc.RESOLUTION_AUTO);\n\n        const assetListLoader = new pc.AssetListLoader(\n            Object.values(assets),\n            app.assets\n        );\n        assetListLoader.load(() => {\n            app.start();\n\n            // set up some general scene rendering properties\n            app.scene.toneMapping = pc.TONEMAP_ACES;\n\n            // enabled clustered lighting. This is a temporary API and will change in the future\n            app.scene.clusteredLightingEnabled = true;\n\n            // adjust default clustered lighting parameters to handle many lights\n            const lighting = app.scene.lighting;\n\n            // 1) subdivide space with lights into this many cells\n            lighting.cells = new pc.Vec3(30, 2, 30);\n\n            // 2) and allow this many lights per cell\n            lighting.maxLightsPerCell = 20;\n\n            lighting.areaLightsEnabled = true;\n            lighting.shadowsEnabled = false;\n\n            // pure black material - used on back side of light objects\n            const blackMaterial = new pc.StandardMaterial();\n            blackMaterial.diffuse = new pc.Color(0, 0, 0);\n            blackMaterial.useLighting = false;\n            blackMaterial.update();\n\n            // ground material\n            const groundMaterial = new pc.StandardMaterial();\n            groundMaterial.diffuse = pc.Color.GRAY;\n            groundMaterial.gloss = 0.8;\n            groundMaterial.metalness = 0.7;\n            groundMaterial.useMetalness = true;\n\n            // helper function to create a primitive with shape type, position, scale, color\n            function createPrimitive(\n                primitiveType,\n                position,\n                scale,\n                assetManifest\n            ) {\n                if (assetManifest) {\n                    groundMaterial.diffuseMap = assetManifest.color.resource;\n                    groundMaterial.normalMap = assetManifest.normal.resource;\n                    groundMaterial.glossMap = assetManifest.gloss.resource;\n\n                    groundMaterial.diffuseMapTiling.set(17, 17);\n                    groundMaterial.normalMapTiling.set(17, 17);\n                    groundMaterial.glossMapTiling.set(17, 17);\n                }\n\n                groundMaterial.update();\n\n                // create primitive\n                const primitive = new pc.Entity();\n                primitive.addComponent("render", {\n                    type: primitiveType,\n                    material: groundMaterial,\n                });\n\n                // set position and scale and add it to scene\n                primitive.setLocalPosition(position);\n                primitive.setLocalScale(scale);\n                app.root.addChild(primitive);\n\n                return primitive;\n            }\n\n            // helper function to create area light including its visual representation in the world\n            function createAreaLight(\n                type,\n                shape,\n                position,\n                scale,\n                color,\n                intensity,\n                range\n            ) {\n                const light = new pc.Entity();\n                light.addComponent("light", {\n                    type: type,\n                    shape: shape,\n                    color: color,\n                    intensity: intensity,\n                    falloffMode: pc.LIGHTFALLOFF_INVERSESQUARED,\n                    range: range,\n                    innerConeAngle: 88,\n                    outerConeAngle: 89,\n                });\n\n                light.setLocalScale(scale);\n                light.setLocalPosition(position);\n                if (type === "spot") {\n                    light.rotate(-90, 0, 0);\n                }\n                app.root.addChild(light);\n\n                // emissive material that is the light source color\n                const brightMaterial = new pc.StandardMaterial();\n                brightMaterial.emissive = new pc.Color(\n                    color.r * 0.8,\n                    color.g * 0.8,\n                    color.b * 0.8\n                );\n                brightMaterial.useLighting = false;\n                brightMaterial.update();\n\n                // primitive shape that matches light source shape\n                const lightPrimitive =\n                    shape === pc.LIGHTSHAPE_SPHERE\n                        ? "sphere"\n                        : shape === pc.LIGHTSHAPE_DISK\n                        ? "cylinder"\n                        : "box";\n\n                // primitive scale - flatten it to disk / rectangle\n                const primitiveScale = new pc.Vec3(\n                    1,\n                    shape !== pc.LIGHTSHAPE_SPHERE ? 0.001 : 1,\n                    1\n                );\n\n                // bright primitive representing the area light source\n                const brightShape = new pc.Entity();\n                brightShape.addComponent("render", {\n                    type: lightPrimitive,\n                    material: brightMaterial,\n                });\n                brightShape.setLocalScale(primitiveScale);\n                light.addChild(brightShape);\n\n                // black primitive representing the back of the light source which is not emitting light\n                if (type === "spot") {\n                    const blackShape = new pc.Entity();\n                    blackShape.addComponent("render", {\n                        type: lightPrimitive,\n                        material: blackMaterial,\n                    });\n                    blackShape.setLocalPosition(0, 0.004, 0);\n                    blackShape.setLocalEulerAngles(-180, 0, 0);\n                    blackShape.setLocalScale(primitiveScale);\n                    light.addChild(blackShape);\n                }\n\n                return light;\n            }\n\n            // set the loaded area light LUT data\n            const luts = assets.luts.resource;\n            app.setAreaLightLuts(luts.LTC_MAT_1, luts.LTC_MAT_2);\n\n            // set up some general scene rendering properties\n            app.scene.toneMapping = pc.TONEMAP_ACES;\n\n            // create ground plane\n            const ground = createPrimitive(\n                "plane",\n                new pc.Vec3(0, 0, 0),\n                new pc.Vec3(45, 1, 45),\n                assets\n            );\n\n            // Create the camera, which renders entities\n            const camera = new pc.Entity();\n            camera.addComponent("camera", {\n                clearColor: new pc.Color(0.1, 0.1, 0.1),\n                fov: 60,\n                farClip: 1000,\n            });\n            camera.setLocalPosition(3, 3, 12);\n\n            // add orbit camera script with a mouse and a touch support\n            camera.addComponent("script");\n            camera.script.create("orbitCamera", {\n                attributes: {\n                    inertiaFactor: 0.2,\n                    focusEntity: ground,\n                    distanceMax: 60,\n                    frameOnStart: false,\n                },\n            });\n            camera.script.create("orbitCameraInputMouse");\n            camera.script.create("orbitCameraInputTouch");\n            app.root.addChild(camera);\n\n            // add bloom postprocessing\n            camera.script.create("bloom", {\n                attributes: {\n                    bloomIntensity: 1.5,\n                    bloomThreshold: 0.6,\n                    blurAmount: 6,\n                },\n            });\n\n            // generate a grid of area lights of sphere, disk and rect shapes\n            for (let x = -20; x <= 20; x += 5) {\n                for (let y = -20; y <= 20; y += 5) {\n                    const pos = new pc.Vec3(x, 0.6, y);\n                    const color = new pc.Color(\n                        0.3 + Math.random() * 0.7,\n                        0.3 + Math.random() * 0.7,\n                        0.3 + Math.random() * 0.7\n                    );\n                    const rand = Math.random();\n                    if (rand < 0.3) {\n                        createAreaLight(\n                            "omni",\n                            pc.LIGHTSHAPE_SPHERE,\n                            pos,\n                            new pc.Vec3(1.5, 1.5, 1.5),\n                            color,\n                            2,\n                            6\n                        );\n                    } else if (rand < 0.6) {\n                        createAreaLight(\n                            "spot",\n                            pc.LIGHTSHAPE_DISK,\n                            pos,\n                            new pc.Vec3(1.5, 1.5, 1.5),\n                            color,\n                            2.5,\n                            5\n                        );\n                    } else {\n                        createAreaLight(\n                            "spot",\n                            pc.LIGHTSHAPE_RECT,\n                            pos,\n                            new pc.Vec3(2, 1, 1),\n                            color,\n                            2.5,\n                            5\n                        );\n                    }\n                }\n            }\n\n            // handle HUD changes - update properties on the material\n            data.on("*:set", (path, value) => {\n                const pathArray = path.split(".");\n                if (pathArray[2] === "gloss") groundMaterial.gloss = value;\n                if (pathArray[2] === "metalness")\n                    groundMaterial.metalness = value;\n                groundMaterial.update();\n            });\n        });\n    });\n}\n',nameSlug:"clustered-area-lights",categorySlug:"graphics"},"clustered-lighting":{typeScriptFunction:'function example(canvas: HTMLCanvasElement, deviceType: string): void {\n\n    const assets = {\n        \'script\': new pc.Asset(\'script\', \'script\', { url: \'/static/scripts/camera/orbit-camera.js\' }),\n        \'normal\': new pc.Asset(\'normal\', \'texture\', { url: \'/static/assets/textures/normal-map.png\' })\n    };\n\n    const gfxOptions = {\n        deviceTypes: [deviceType],\n        glslangUrl: \'/static/lib/glslang/glslang.js\',\n        twgslUrl: \'/static/lib/twgsl/twgsl.js\'\n    };\n\n    pc.createGraphicsDevice(canvas, gfxOptions).then((device: pc.GraphicsDevice) => {\n\n        const createOptions = new pc.AppOptions();\n        createOptions.graphicsDevice = device;\n        createOptions.mouse = new pc.Mouse(document.body);\n        createOptions.touch = new pc.TouchDevice(document.body);\n\n        createOptions.componentSystems = [\n            // @ts-ignore\n            pc.RenderComponentSystem,\n            // @ts-ignore\n            pc.CameraComponentSystem,\n            // @ts-ignore\n            pc.LightComponentSystem,\n            // @ts-ignore\n            pc.ScriptComponentSystem\n        ];\n        createOptions.resourceHandlers = [\n            // @ts-ignore\n            pc.TextureHandler,\n            // @ts-ignore\n            pc.ContainerHandler,\n            // @ts-ignore\n            pc.ScriptHandler\n        ];\n\n        const app = new pc.AppBase(canvas);\n        app.init(createOptions);\n\n        // Set the canvas to fill the window and automatically change resolution to be the same as the canvas size\n        app.setCanvasFillMode(pc.FILLMODE_FILL_WINDOW);\n        app.setCanvasResolution(pc.RESOLUTION_AUTO);\n\n        const assetListLoader = new pc.AssetListLoader(Object.values(assets), app.assets);\n        assetListLoader.load(() => {\n\n            app.start();\n\n            const pointLightList: Array<pc.Entity> = [];\n            const spotLightList: Array<pc.Entity> = [];\n            let dirLight: pc.Entity = null;\n\n            // enabled clustered lighting. This is a temporary API and will change in the future\n            app.scene.clusteredLightingEnabled = true;\n\n            // adjust default clustered lighting parameters to handle many lights\n            const lighting = app.scene.lighting;\n\n            // 1) subdivide space with lights into this many cells\n            lighting.cells = new pc.Vec3(12, 16, 12);\n\n            // 2) and allow this many lights per cell\n            lighting.maxLightsPerCell = 48;\n\n            lighting.shadowsEnabled = false;\n\n            window.addEventListener("resize", function () {\n                app.resizeCanvas(canvas.width, canvas.height);\n            });\n\n            // material with tiled normal map\n            let material = new pc.StandardMaterial();\n            material.normalMap = assets.normal.resource;\n            material.normalMapTiling.set(5, 5);\n            material.bumpiness = 1;\n\n            // enable specular\n            material.gloss = 0.5;\n            material.metalness = 0.3;\n            material.useMetalness = true;\n\n            material.update();\n\n            // ground plane\n            const ground = new pc.Entity();\n            ground.addComponent(\'render\', {\n                type: "plane",\n                material: material\n            });\n            ground.setLocalScale(150, 150, 150);\n            app.root.addChild(ground);\n\n            // high polycount cylinder\n            const cylinderMesh = pc.createCylinder(app.graphicsDevice, { capSegments: 200 });\n            const cylinder = new pc.Entity();\n            cylinder.addComponent(\'render\', {\n                material: material,\n                meshInstances: [new pc.MeshInstance(cylinderMesh, material)],\n                castShadows: true\n            });\n            app.root.addChild(cylinder);\n            cylinder.setLocalPosition(0, 50, 0);\n            cylinder.setLocalScale(50, 100, 50);\n\n            // create many omni lights that do not cast shadows\n            let count = 30;\n            for (let i = 0; i < count; i++) {\n                const color = new pc.Color(Math.random(), Math.random(), Math.random(), 1);\n                const lightPoint = new pc.Entity();\n                lightPoint.addComponent("light", {\n                    type: "omni",\n                    color: color,\n                    range: 12,\n                    castShadows: false,\n                    falloffMode: pc.LIGHTFALLOFF_INVERSESQUARED\n                });\n\n                // attach a render component with a small sphere to each light\n                const material = new pc.StandardMaterial();\n                material.emissive = color;\n                material.update();\n\n                lightPoint.addComponent(\'render\', {\n                    type: "sphere",\n                    material: material,\n                    castShadows: true\n                });\n                lightPoint.setLocalScale(5, 5, 5);\n\n                // add it to the scene and also keep it in an array\n                app.root.addChild(lightPoint);\n                pointLightList.push(lightPoint);\n            }\n\n            // create many spot lights\n            count = 16;\n            for (let i = 0; i < count; i++) {\n                const color = new pc.Color(Math.random(), Math.random(), Math.random(), 1);\n                const lightSpot = new pc.Entity();\n                lightSpot.addComponent("light", {\n                    type: "spot",\n                    color: color,\n                    innerConeAngle: 5,\n                    outerConeAngle: 6 + Math.random() * 40,\n                    range: 25,\n                    castShadows: false\n                });\n\n                // attach a render component with a small cone to each light\n                material = new pc.StandardMaterial();\n                material.emissive = color;\n                material.update();\n\n                lightSpot.addComponent(\'render\', {\n                    type: "cone",\n                    material: material\n                });\n                lightSpot.setLocalScale(5, 5, 5);\n\n                lightSpot.setLocalPosition(100, 50, 70);\n                lightSpot.lookAt(new pc.Vec3(100, 60, 70));\n                app.root.addChild(lightSpot);\n                spotLightList.push(lightSpot);\n            }\n\n            // Create a single directional light which casts shadows\n            dirLight = new pc.Entity();\n            dirLight.addComponent("light", {\n                type: "directional",\n                color: pc.Color.WHITE,\n                intensity: 0.15,\n                range: 300,\n                shadowDistance: 600,\n                castShadows: true,\n                shadowBias: 0.2,\n                normalOffsetBias: 0.05\n            });\n            app.root.addChild(dirLight);\n\n            // Create an entity with a camera component\n            const camera = new pc.Entity();\n            camera.addComponent("camera", {\n                clearColor: new pc.Color(0.05, 0.05, 0.05),\n                farClip: 500,\n                nearClip: 0.1\n            });\n            camera.setLocalPosition(140, 140, 140);\n            camera.lookAt(new pc.Vec3(0, 40, 0));\n\n            // add orbit camera script with mouse and touch support\n            camera.addComponent("script");\n            camera.script.create("orbitCamera", {\n                attributes: {\n                    inertiaFactor: 0.2,\n                    focusEntity: app.root,\n                    distanceMax: 400,\n                    frameOnStart: false\n                }\n            });\n            camera.script.create("orbitCameraInputMouse");\n            camera.script.create("orbitCameraInputTouch");\n            app.root.addChild(camera);\n\n            // Set an update function on the app\'s update event\n            let time = 0;\n            app.on("update", function (dt: number) {\n                time += dt;\n\n                // move lights along sin based waves around the cylinder\n                pointLightList.forEach(function (light, i) {\n                    const angle = (i / pointLightList.length) * Math.PI * 2;\n                    const y = Math.sin(time * 0.5 + 7 * angle) * 30 + 70;\n                    light.setLocalPosition(30 * Math.sin(angle), y, 30 * Math.cos(angle));\n                });\n\n                // rotate spot lights around\n                spotLightList.forEach(function (spotlight, i) {\n                    const angle = (i / spotLightList.length) * Math.PI * 2;\n                    spotlight.setLocalPosition(40 * Math.sin(time + angle), 5, 40 * Math.cos(time + angle));\n                    spotlight.lookAt(pc.Vec3.ZERO);\n                    spotlight.rotateLocal(90, 0, 0);\n                });\n\n                // rotate directional light\n                if (dirLight) {\n                    dirLight.setLocalEulerAngles(25, -30 * time, 0);\n                }\n            });\n        });\n    });\n}',javaScriptFunction:'function example(canvas, deviceType) {\n    const assets = {\n        script: new pc.Asset("script", "script", {\n            url: "/static/scripts/camera/orbit-camera.js",\n        }),\n        normal: new pc.Asset("normal", "texture", {\n            url: "/static/assets/textures/normal-map.png",\n        }),\n    };\n\n    const gfxOptions = {\n        deviceTypes: [deviceType],\n        glslangUrl: "/static/lib/glslang/glslang.js",\n        twgslUrl: "/static/lib/twgsl/twgsl.js",\n    };\n\n    pc.createGraphicsDevice(canvas, gfxOptions).then((device) => {\n        const createOptions = new pc.AppOptions();\n        createOptions.graphicsDevice = device;\n        createOptions.mouse = new pc.Mouse(document.body);\n        createOptions.touch = new pc.TouchDevice(document.body);\n\n        createOptions.componentSystems = [\n            // @ts-ignore\n            pc.RenderComponentSystem,\n            // @ts-ignore\n            pc.CameraComponentSystem,\n            // @ts-ignore\n            pc.LightComponentSystem,\n            // @ts-ignore\n            pc.ScriptComponentSystem,\n        ];\n\n        createOptions.resourceHandlers = [\n            // @ts-ignore\n            pc.TextureHandler,\n            // @ts-ignore\n            pc.ContainerHandler,\n            // @ts-ignore\n            pc.ScriptHandler,\n        ];\n\n        const app = new pc.AppBase(canvas);\n        app.init(createOptions);\n\n        // Set the canvas to fill the window and automatically change resolution to be the same as the canvas size\n        app.setCanvasFillMode(pc.FILLMODE_FILL_WINDOW);\n        app.setCanvasResolution(pc.RESOLUTION_AUTO);\n\n        const assetListLoader = new pc.AssetListLoader(\n            Object.values(assets),\n            app.assets\n        );\n        assetListLoader.load(() => {\n            app.start();\n\n            const pointLightList = [];\n            const spotLightList = [];\n            let dirLight = null;\n\n            // enabled clustered lighting. This is a temporary API and will change in the future\n            app.scene.clusteredLightingEnabled = true;\n\n            // adjust default clustered lighting parameters to handle many lights\n            const lighting = app.scene.lighting;\n\n            // 1) subdivide space with lights into this many cells\n            lighting.cells = new pc.Vec3(12, 16, 12);\n\n            // 2) and allow this many lights per cell\n            lighting.maxLightsPerCell = 48;\n\n            lighting.shadowsEnabled = false;\n\n            window.addEventListener("resize", function () {\n                app.resizeCanvas(canvas.width, canvas.height);\n            });\n\n            // material with tiled normal map\n            let material = new pc.StandardMaterial();\n            material.normalMap = assets.normal.resource;\n            material.normalMapTiling.set(5, 5);\n            material.bumpiness = 1;\n\n            // enable specular\n            material.gloss = 0.5;\n            material.metalness = 0.3;\n            material.useMetalness = true;\n\n            material.update();\n\n            // ground plane\n            const ground = new pc.Entity();\n            ground.addComponent("render", {\n                type: "plane",\n                material: material,\n            });\n            ground.setLocalScale(150, 150, 150);\n            app.root.addChild(ground);\n\n            // high polycount cylinder\n            const cylinderMesh = pc.createCylinder(app.graphicsDevice, {\n                capSegments: 200,\n            });\n            const cylinder = new pc.Entity();\n            cylinder.addComponent("render", {\n                material: material,\n                meshInstances: [new pc.MeshInstance(cylinderMesh, material)],\n                castShadows: true,\n            });\n            app.root.addChild(cylinder);\n            cylinder.setLocalPosition(0, 50, 0);\n            cylinder.setLocalScale(50, 100, 50);\n\n            // create many omni lights that do not cast shadows\n            let count = 30;\n            for (let i = 0; i < count; i++) {\n                const color = new pc.Color(\n                    Math.random(),\n                    Math.random(),\n                    Math.random(),\n                    1\n                );\n                const lightPoint = new pc.Entity();\n                lightPoint.addComponent("light", {\n                    type: "omni",\n                    color: color,\n                    range: 12,\n                    castShadows: false,\n                    falloffMode: pc.LIGHTFALLOFF_INVERSESQUARED,\n                });\n\n                // attach a render component with a small sphere to each light\n                const material = new pc.StandardMaterial();\n                material.emissive = color;\n                material.update();\n\n                lightPoint.addComponent("render", {\n                    type: "sphere",\n                    material: material,\n                    castShadows: true,\n                });\n                lightPoint.setLocalScale(5, 5, 5);\n\n                // add it to the scene and also keep it in an array\n                app.root.addChild(lightPoint);\n                pointLightList.push(lightPoint);\n            }\n\n            // create many spot lights\n            count = 16;\n            for (let i = 0; i < count; i++) {\n                const color = new pc.Color(\n                    Math.random(),\n                    Math.random(),\n                    Math.random(),\n                    1\n                );\n                const lightSpot = new pc.Entity();\n                lightSpot.addComponent("light", {\n                    type: "spot",\n                    color: color,\n                    innerConeAngle: 5,\n                    outerConeAngle: 6 + Math.random() * 40,\n                    range: 25,\n                    castShadows: false,\n                });\n\n                // attach a render component with a small cone to each light\n                material = new pc.StandardMaterial();\n                material.emissive = color;\n                material.update();\n\n                lightSpot.addComponent("render", {\n                    type: "cone",\n                    material: material,\n                });\n                lightSpot.setLocalScale(5, 5, 5);\n\n                lightSpot.setLocalPosition(100, 50, 70);\n                lightSpot.lookAt(new pc.Vec3(100, 60, 70));\n                app.root.addChild(lightSpot);\n                spotLightList.push(lightSpot);\n            }\n\n            // Create a single directional light which casts shadows\n            dirLight = new pc.Entity();\n            dirLight.addComponent("light", {\n                type: "directional",\n                color: pc.Color.WHITE,\n                intensity: 0.15,\n                range: 300,\n                shadowDistance: 600,\n                castShadows: true,\n                shadowBias: 0.2,\n                normalOffsetBias: 0.05,\n            });\n            app.root.addChild(dirLight);\n\n            // Create an entity with a camera component\n            const camera = new pc.Entity();\n            camera.addComponent("camera", {\n                clearColor: new pc.Color(0.05, 0.05, 0.05),\n                farClip: 500,\n                nearClip: 0.1,\n            });\n            camera.setLocalPosition(140, 140, 140);\n            camera.lookAt(new pc.Vec3(0, 40, 0));\n\n            // add orbit camera script with mouse and touch support\n            camera.addComponent("script");\n            camera.script.create("orbitCamera", {\n                attributes: {\n                    inertiaFactor: 0.2,\n                    focusEntity: app.root,\n                    distanceMax: 400,\n                    frameOnStart: false,\n                },\n            });\n            camera.script.create("orbitCameraInputMouse");\n            camera.script.create("orbitCameraInputTouch");\n            app.root.addChild(camera);\n\n            // Set an update function on the app\'s update event\n            let time = 0;\n            app.on("update", function (dt) {\n                time += dt;\n\n                // move lights along sin based waves around the cylinder\n                pointLightList.forEach(function (light, i) {\n                    const angle = (i / pointLightList.length) * Math.PI * 2;\n                    const y = Math.sin(time * 0.5 + 7 * angle) * 30 + 70;\n                    light.setLocalPosition(\n                        30 * Math.sin(angle),\n                        y,\n                        30 * Math.cos(angle)\n                    );\n                });\n\n                // rotate spot lights around\n                spotLightList.forEach(function (spotlight, i) {\n                    const angle = (i / spotLightList.length) * Math.PI * 2;\n                    spotlight.setLocalPosition(\n                        40 * Math.sin(time + angle),\n                        5,\n                        40 * Math.cos(time + angle)\n                    );\n                    spotlight.lookAt(pc.Vec3.ZERO);\n                    spotlight.rotateLocal(90, 0, 0);\n                });\n\n                // rotate directional light\n                if (dirLight) {\n                    dirLight.setLocalEulerAngles(25, -30 * time, 0);\n                }\n            });\n        });\n    });\n}\n',nameSlug:"clustered-lighting",categorySlug:"graphics"},"clustered-omni-shadows":{typeScriptFunction:'function example(canvas: HTMLCanvasElement, deviceType: string, data: any): void {\n\n    const assets = {\n        \'script\': new pc.Asset(\'script\', \'script\', { url: \'/static/scripts/camera/orbit-camera.js\' }),\n        \'normal\': new pc.Asset(\'normal\', \'texture\', { url: \'/static/assets/textures/normal-map.png\' }),\n        "xmas_negx": new pc.Asset("xmas_negx", "texture", { url: "/static/assets/cubemaps/xmas_faces/xmas_negx.png" }),\n        "xmas_negy": new pc.Asset("xmas_negy", "texture", { url: "/static/assets/cubemaps/xmas_faces/xmas_negy.png" }),\n        "xmas_negz": new pc.Asset("xmas_negz", "texture", { url: "/static/assets/cubemaps/xmas_faces/xmas_negz.png" }),\n        "xmas_posx": new pc.Asset("xmas_posx", "texture", { url: "/static/assets/cubemaps/xmas_faces/xmas_posx.png" }),\n        "xmas_posy": new pc.Asset("xmas_posy", "texture", { url: "/static/assets/cubemaps/xmas_faces/xmas_posy.png" }),\n        "xmas_posz": new pc.Asset("xmas_posz", "texture", { url: "/static/assets/cubemaps/xmas_faces/xmas_posz.png" })\n    };\n\n    const gfxOptions = {\n        deviceTypes: [deviceType],\n        glslangUrl: \'/static/lib/glslang/glslang.js\',\n        twgslUrl: \'/static/lib/twgsl/twgsl.js\'\n    };\n\n    pc.createGraphicsDevice(canvas, gfxOptions).then((device: pc.GraphicsDevice) => {\n\n        const createOptions = new pc.AppOptions();\n        createOptions.graphicsDevice = device;\n        createOptions.mouse = new pc.Mouse(document.body);\n        createOptions.touch = new pc.TouchDevice(document.body);\n\n        createOptions.componentSystems = [\n            // @ts-ignore\n            pc.RenderComponentSystem,\n            // @ts-ignore\n            pc.CameraComponentSystem,\n            // @ts-ignore\n            pc.LightComponentSystem,\n            // @ts-ignore\n            pc.ScriptComponentSystem\n        ];\n        createOptions.resourceHandlers = [\n            // @ts-ignore\n            pc.ScriptHandler,\n            // @ts-ignore\n            pc.TextureHandler,\n            // @ts-ignore\n            pc.CubemapHandler\n        ];\n\n        const app = new pc.AppBase(canvas);\n        app.init(createOptions);\n\n        // Set the canvas to fill the window and automatically change resolution to be the same as the canvas size\n        app.setCanvasFillMode(pc.FILLMODE_FILL_WINDOW);\n        app.setCanvasResolution(pc.RESOLUTION_AUTO);\n\n        const assetListLoader = new pc.AssetListLoader(Object.values(assets), app.assets);\n        assetListLoader.load(() => {\n\n            app.start();\n\n            // set up some general scene rendering properties\n            app.scene.toneMapping = pc.TONEMAP_ACES;\n\n            data.set(\'settings\', {\n                shadowAtlasResolution: 1300,     // shadow map resolution storing all shadows\n                shadowType: pc.SHADOW_PCF3,      // shadow filter type\n                shadowsEnabled: true,\n                cookiesEnabled: true\n            });\n\n            // enabled clustered lighting. This is a temporary API and will change in the future\n            app.scene.clusteredLightingEnabled = true;\n\n            // adjust default clustered lighting parameters to handle many lights\n            const lighting = app.scene.lighting;\n\n            // 1) subdivide space with lights into this many cells\n            lighting.cells = new pc.Vec3(16, 12, 16);\n\n            // 2) and allow this many lights per cell\n            lighting.maxLightsPerCell = 12;\n\n            // enable clustered shadows (it\'s enabled by default as well)\n            lighting.shadowsEnabled = true;\n\n            // enable clustered cookies\n            lighting.cookiesEnabled = true;\n\n            // resolution of the shadow and cookie atlas\n            lighting.shadowAtlasResolution = data.get(\'settings.shadowAtlasResolution\');\n            lighting.cookieAtlasResolution = 2048;\n\n            // helper function to create a 3d primitive including its material\n            function createPrimitive(primitiveType: string, position: pc.Vec3, scale: pc.Vec3) {\n\n                // create a material\n                const material = new pc.StandardMaterial();\n                material.diffuse = new pc.Color(0.7, 0.7, 0.7);\n\n                // normal map\n                material.normalMap = assets.normal.resource;\n                material.normalMapTiling.set(5, 5);\n                material.bumpiness = 0.7;\n\n                // enable specular\n                material.gloss = 0.4;\n                material.metalness = 0.3;\n                material.useMetalness = true;\n\n                material.update();\n\n                // create the primitive using the material\n                const primitive = new pc.Entity();\n                primitive.addComponent(\'render\', {\n                    type: primitiveType,\n                    material: material\n                });\n\n                // set position and scale and add it to scene\n                primitive.setLocalPosition(position);\n                primitive.setLocalScale(scale);\n                app.root.addChild(primitive);\n\n                return primitive;\n            }\n\n            // create the ground plane from the boxes\n            createPrimitive("box", new pc.Vec3(0, 0, 0), new pc.Vec3(800, 2, 800));\n            createPrimitive("box", new pc.Vec3(0, 400, 0), new pc.Vec3(800, 2, 800));\n\n            // walls\n            createPrimitive("box", new pc.Vec3(400, 200, 0), new pc.Vec3(2, 400, 800));\n            createPrimitive("box", new pc.Vec3(-400, 200, 0), new pc.Vec3(2, 400, 800));\n            createPrimitive("box", new pc.Vec3(0, 200, 400), new pc.Vec3(800, 400, 0));\n            createPrimitive("box", new pc.Vec3(0, 200, -400), new pc.Vec3(800, 400, 0));\n\n            const numTowers = 7;\n            for (let i = 0; i < numTowers; i++) {\n                let scale = 25;\n                const fraction = i / numTowers * Math.PI * 2;\n                const radius = (i % 2) ? 340 : 210;\n                for (let y = 0; y <= 7; y++) {\n                    const prim = createPrimitive("box", new pc.Vec3(radius * Math.sin(fraction), 2 + y * 25, radius * Math.cos(fraction)), new pc.Vec3(scale, scale, scale));\n                    prim.setLocalEulerAngles(Math.random() * 360, Math.random() * 360, Math.random() * 360);\n                }\n                scale -= 1.5;\n            }\n\n            // construct the cubemap asset for the omni light cookie texture\n            // Note: the textures array could contain 6 texture asset names to load instead as well\n            const cubemapAsset = new pc.Asset(\'xmas_cubemap\', \'cubemap\', null, {\n                textures: [\n                    assets.xmas_posx.id, assets.xmas_negx.id,\n                    assets.xmas_posy.id, assets.xmas_negy.id,\n                    assets.xmas_posz.id, assets.xmas_negz.id\n                ],\n\n                // don\'t generate mipmaps for the cookie cubemap if clustered lighting is used,\n                // as only top levels are copied to the cookie atlas.\n                mipmaps: !app.scene.clusteredLightingEnabled\n            });\n            cubemapAsset.loadFaces = true;\n            app.assets.add(cubemapAsset);\n\n            const omniLights: Array<pc.Entity> = [];\n            const numLights = 10;\n            for (let i = 0; i < numLights; i++) {\n                const lightOmni = new pc.Entity("Omni");\n                lightOmni.addComponent("light", {\n                    type: "omni",\n                    color: pc.Color.WHITE,\n                    intensity: 10 / numLights,\n                    range: 350,\n                    castShadows: true,\n                    shadowBias: 0.2,\n                    normalOffsetBias: 0.2,\n\n                    // cookie texture\n                    cookieAsset: cubemapAsset,\n                    cookieChannel: "rgb"\n                });\n\n                // attach a render component with a small sphere to it\n                const material = new pc.StandardMaterial();\n                material.emissive = pc.Color.WHITE;\n                material.update();\n\n                lightOmni.addComponent(\'render\', {\n                    type: "sphere",\n                    material: material,\n                    castShadows: false\n                });\n                lightOmni.setPosition(0, 120, 0);\n                lightOmni.setLocalScale(5, 5, 5);\n                app.root.addChild(lightOmni);\n\n                omniLights.push(lightOmni);\n            }\n\n            // create an Entity with a camera component\n            const camera = new pc.Entity();\n            camera.addComponent("camera", {\n                fov: 80,\n                clearColor: new pc.Color(0.1, 0.1, 0.1),\n                farClip: 1500\n            });\n\n            // and position it in the world\n            camera.setLocalPosition(300, 120, 25);\n\n            // add orbit camera script with a mouse and a touch support\n            camera.addComponent("script");\n            camera.script.create("orbitCamera", {\n                attributes: {\n                    inertiaFactor: 0.2,\n                    focusEntity: app.root,\n                    distanceMax: 1200,\n                    frameOnStart: false\n                }\n            });\n            camera.script.create("orbitCameraInputMouse");\n            camera.script.create("orbitCameraInputTouch");\n            app.root.addChild(camera);\n\n            // handle HUD changes - update properties on the scene\n            data.on(\'*:set\', (path: string, value: any) => {\n                const pathArray = path.split(\'.\');\n                // @ts-ignore\n                lighting[pathArray[1]] = value;\n            });\n\n            // Set an update function on the app\'s update event\n            let time = 0;\n            app.on("update", function (dt: number) {\n                time += dt * 0.3;\n                const radius = 250;\n                for (let i = 0; i < omniLights.length; i++) {\n                    const fraction = i / omniLights.length * Math.PI * 2;\n                    omniLights[i].setPosition(radius * Math.sin(time + fraction), 190 + Math.sin(time + fraction) * 150, radius * Math.cos(time + fraction));\n                }\n\n                // display shadow texture (debug feature)\n                if (app.graphicsDevice.isWebGPU) {\n                    // @ts-ignore engine-tsd\n                    app.drawTexture(-0.7, -0.7, 0.5, 0.5, app.renderer.lightTextureAtlas.shadowAtlas.texture, undefined, undefined, false);\n                }\n            });\n        });\n    });\n}',javaScriptFunction:'function example(canvas, deviceType, data) {\n    const assets = {\n        script: new pc.Asset("script", "script", {\n            url: "/static/scripts/camera/orbit-camera.js",\n        }),\n        normal: new pc.Asset("normal", "texture", {\n            url: "/static/assets/textures/normal-map.png",\n        }),\n        xmas_negx: new pc.Asset("xmas_negx", "texture", {\n            url: "/static/assets/cubemaps/xmas_faces/xmas_negx.png",\n        }),\n        xmas_negy: new pc.Asset("xmas_negy", "texture", {\n            url: "/static/assets/cubemaps/xmas_faces/xmas_negy.png",\n        }),\n        xmas_negz: new pc.Asset("xmas_negz", "texture", {\n            url: "/static/assets/cubemaps/xmas_faces/xmas_negz.png",\n        }),\n        xmas_posx: new pc.Asset("xmas_posx", "texture", {\n            url: "/static/assets/cubemaps/xmas_faces/xmas_posx.png",\n        }),\n        xmas_posy: new pc.Asset("xmas_posy", "texture", {\n            url: "/static/assets/cubemaps/xmas_faces/xmas_posy.png",\n        }),\n        xmas_posz: new pc.Asset("xmas_posz", "texture", {\n            url: "/static/assets/cubemaps/xmas_faces/xmas_posz.png",\n        }),\n    };\n\n    const gfxOptions = {\n        deviceTypes: [deviceType],\n        glslangUrl: "/static/lib/glslang/glslang.js",\n        twgslUrl: "/static/lib/twgsl/twgsl.js",\n    };\n\n    pc.createGraphicsDevice(canvas, gfxOptions).then((device) => {\n        const createOptions = new pc.AppOptions();\n        createOptions.graphicsDevice = device;\n        createOptions.mouse = new pc.Mouse(document.body);\n        createOptions.touch = new pc.TouchDevice(document.body);\n\n        createOptions.componentSystems = [\n            // @ts-ignore\n            pc.RenderComponentSystem,\n            // @ts-ignore\n            pc.CameraComponentSystem,\n            // @ts-ignore\n            pc.LightComponentSystem,\n            // @ts-ignore\n            pc.ScriptComponentSystem,\n        ];\n\n        createOptions.resourceHandlers = [\n            // @ts-ignore\n            pc.ScriptHandler,\n            // @ts-ignore\n            pc.TextureHandler,\n            // @ts-ignore\n            pc.CubemapHandler,\n        ];\n\n        const app = new pc.AppBase(canvas);\n        app.init(createOptions);\n\n        // Set the canvas to fill the window and automatically change resolution to be the same as the canvas size\n        app.setCanvasFillMode(pc.FILLMODE_FILL_WINDOW);\n        app.setCanvasResolution(pc.RESOLUTION_AUTO);\n\n        const assetListLoader = new pc.AssetListLoader(\n            Object.values(assets),\n            app.assets\n        );\n        assetListLoader.load(() => {\n            app.start();\n\n            // set up some general scene rendering properties\n            app.scene.toneMapping = pc.TONEMAP_ACES;\n\n            data.set("settings", {\n                shadowAtlasResolution: 1300, // shadow map resolution storing all shadows\n                shadowType: pc.SHADOW_PCF3, // shadow filter type\n                shadowsEnabled: true,\n                cookiesEnabled: true,\n            });\n\n            // enabled clustered lighting. This is a temporary API and will change in the future\n            app.scene.clusteredLightingEnabled = true;\n\n            // adjust default clustered lighting parameters to handle many lights\n            const lighting = app.scene.lighting;\n\n            // 1) subdivide space with lights into this many cells\n            lighting.cells = new pc.Vec3(16, 12, 16);\n\n            // 2) and allow this many lights per cell\n            lighting.maxLightsPerCell = 12;\n\n            // enable clustered shadows (it\'s enabled by default as well)\n            lighting.shadowsEnabled = true;\n\n            // enable clustered cookies\n            lighting.cookiesEnabled = true;\n\n            // resolution of the shadow and cookie atlas\n            lighting.shadowAtlasResolution = data.get(\n                "settings.shadowAtlasResolution"\n            );\n            lighting.cookieAtlasResolution = 2048;\n\n            // helper function to create a 3d primitive including its material\n            function createPrimitive(primitiveType, position, scale) {\n                // create a material\n                const material = new pc.StandardMaterial();\n                material.diffuse = new pc.Color(0.7, 0.7, 0.7);\n\n                // normal map\n                material.normalMap = assets.normal.resource;\n                material.normalMapTiling.set(5, 5);\n                material.bumpiness = 0.7;\n\n                // enable specular\n                material.gloss = 0.4;\n                material.metalness = 0.3;\n                material.useMetalness = true;\n\n                material.update();\n\n                // create the primitive using the material\n                const primitive = new pc.Entity();\n                primitive.addComponent("render", {\n                    type: primitiveType,\n                    material: material,\n                });\n\n                // set position and scale and add it to scene\n                primitive.setLocalPosition(position);\n                primitive.setLocalScale(scale);\n                app.root.addChild(primitive);\n\n                return primitive;\n            }\n\n            // create the ground plane from the boxes\n            createPrimitive(\n                "box",\n                new pc.Vec3(0, 0, 0),\n                new pc.Vec3(800, 2, 800)\n            );\n            createPrimitive(\n                "box",\n                new pc.Vec3(0, 400, 0),\n                new pc.Vec3(800, 2, 800)\n            );\n\n            // walls\n            createPrimitive(\n                "box",\n                new pc.Vec3(400, 200, 0),\n                new pc.Vec3(2, 400, 800)\n            );\n            createPrimitive(\n                "box",\n                new pc.Vec3(-400, 200, 0),\n                new pc.Vec3(2, 400, 800)\n            );\n            createPrimitive(\n                "box",\n                new pc.Vec3(0, 200, 400),\n                new pc.Vec3(800, 400, 0)\n            );\n            createPrimitive(\n                "box",\n                new pc.Vec3(0, 200, -400),\n                new pc.Vec3(800, 400, 0)\n            );\n\n            const numTowers = 7;\n            for (let i = 0; i < numTowers; i++) {\n                let scale = 25;\n                const fraction = (i / numTowers) * Math.PI * 2;\n                const radius = i % 2 ? 340 : 210;\n                for (let y = 0; y <= 7; y++) {\n                    const prim = createPrimitive(\n                        "box",\n                        new pc.Vec3(\n                            radius * Math.sin(fraction),\n                            2 + y * 25,\n                            radius * Math.cos(fraction)\n                        ),\n                        new pc.Vec3(scale, scale, scale)\n                    );\n                    prim.setLocalEulerAngles(\n                        Math.random() * 360,\n                        Math.random() * 360,\n                        Math.random() * 360\n                    );\n                }\n                scale -= 1.5;\n            }\n\n            // construct the cubemap asset for the omni light cookie texture\n            // Note: the textures array could contain 6 texture asset names to load instead as well\n            const cubemapAsset = new pc.Asset("xmas_cubemap", "cubemap", null, {\n                textures: [\n                    assets.xmas_posx.id,\n                    assets.xmas_negx.id,\n                    assets.xmas_posy.id,\n                    assets.xmas_negy.id,\n                    assets.xmas_posz.id,\n                    assets.xmas_negz.id,\n                ],\n\n                // don\'t generate mipmaps for the cookie cubemap if clustered lighting is used,\n                // as only top levels are copied to the cookie atlas.\n                mipmaps: !app.scene.clusteredLightingEnabled,\n            });\n            cubemapAsset.loadFaces = true;\n            app.assets.add(cubemapAsset);\n\n            const omniLights = [];\n            const numLights = 10;\n            for (let i = 0; i < numLights; i++) {\n                const lightOmni = new pc.Entity("Omni");\n                lightOmni.addComponent("light", {\n                    type: "omni",\n                    color: pc.Color.WHITE,\n                    intensity: 10 / numLights,\n                    range: 350,\n                    castShadows: true,\n                    shadowBias: 0.2,\n                    normalOffsetBias: 0.2,\n\n                    // cookie texture\n                    cookieAsset: cubemapAsset,\n                    cookieChannel: "rgb",\n                });\n\n                // attach a render component with a small sphere to it\n                const material = new pc.StandardMaterial();\n                material.emissive = pc.Color.WHITE;\n                material.update();\n\n                lightOmni.addComponent("render", {\n                    type: "sphere",\n                    material: material,\n                    castShadows: false,\n                });\n                lightOmni.setPosition(0, 120, 0);\n                lightOmni.setLocalScale(5, 5, 5);\n                app.root.addChild(lightOmni);\n\n                omniLights.push(lightOmni);\n            }\n\n            // create an Entity with a camera component\n            const camera = new pc.Entity();\n            camera.addComponent("camera", {\n                fov: 80,\n                clearColor: new pc.Color(0.1, 0.1, 0.1),\n                farClip: 1500,\n            });\n\n            // and position it in the world\n            camera.setLocalPosition(300, 120, 25);\n\n            // add orbit camera script with a mouse and a touch support\n            camera.addComponent("script");\n            camera.script.create("orbitCamera", {\n                attributes: {\n                    inertiaFactor: 0.2,\n                    focusEntity: app.root,\n                    distanceMax: 1200,\n                    frameOnStart: false,\n                },\n            });\n            camera.script.create("orbitCameraInputMouse");\n            camera.script.create("orbitCameraInputTouch");\n            app.root.addChild(camera);\n\n            // handle HUD changes - update properties on the scene\n            data.on("*:set", (path, value) => {\n                const pathArray = path.split(".");\n                // @ts-ignore\n                lighting[pathArray[1]] = value;\n            });\n\n            // Set an update function on the app\'s update event\n            let time = 0;\n            app.on("update", function (dt) {\n                time += dt * 0.3;\n                const radius = 250;\n                for (let i = 0; i < omniLights.length; i++) {\n                    const fraction = (i / omniLights.length) * Math.PI * 2;\n                    omniLights[i].setPosition(\n                        radius * Math.sin(time + fraction),\n                        190 + Math.sin(time + fraction) * 150,\n                        radius * Math.cos(time + fraction)\n                    );\n                }\n\n                // display shadow texture (debug feature)\n                if (app.graphicsDevice.isWebGPU) {\n                    // @ts-ignore engine-tsd\n                    app.drawTexture(\n                        -0.7,\n                        -0.7,\n                        0.5,\n                        0.5,\n                        app.renderer.lightTextureAtlas.shadowAtlas.texture,\n                        undefined,\n                        undefined,\n                        false\n                    );\n                }\n            });\n        });\n    });\n}\n',nameSlug:"clustered-omni-shadows",categorySlug:"graphics"},"clustered-spot-shadows":{typeScriptFunction:"function example(canvas: HTMLCanvasElement, deviceType: string, data: any): void {\n\n    const assets = {\n        'script': new pc.Asset('script', 'script', { url: '/static/scripts/camera/orbit-camera.js' }),\n        \"channels\": new pc.Asset(\"channels\", \"texture\", { url: \"/static/assets/textures/channels.png\" }),\n        \"heart\": new pc.Asset(\"heart\", \"texture\", { url: \"/static/assets/textures/heart.png\" }),\n        'normal': new pc.Asset('normal', 'texture', { url: '/static/assets/textures/normal-map.png' }),\n        helipad: new pc.Asset('helipad-env-atlas', 'texture', { url: '/static/assets/cubemaps/helipad-env-atlas.png' }, { type: pc.TEXTURETYPE_RGBP, mipmaps: false })\n    };\n\n    const gfxOptions = {\n        deviceTypes: [deviceType],\n        glslangUrl: '/static/lib/glslang/glslang.js',\n        twgslUrl: '/static/lib/twgsl/twgsl.js'\n    };\n\n    pc.createGraphicsDevice(canvas, gfxOptions).then((device: pc.GraphicsDevice) => {\n\n        const createOptions = new pc.AppOptions();\n        createOptions.graphicsDevice = device;\n        createOptions.mouse = new pc.Mouse(document.body);\n        createOptions.touch = new pc.TouchDevice(document.body);\n\n        createOptions.componentSystems = [\n            // @ts-ignore\n            pc.RenderComponentSystem,\n            // @ts-ignore\n            pc.CameraComponentSystem,\n            // @ts-ignore\n            pc.LightComponentSystem,\n            // @ts-ignore\n            pc.ScriptComponentSystem\n        ];\n        createOptions.resourceHandlers = [\n            // @ts-ignore\n            pc.TextureHandler,\n            // @ts-ignore\n            pc.ScriptHandler\n        ];\n\n        const app = new pc.AppBase(canvas);\n        app.init(createOptions);\n\n        // Set the canvas to fill the window and automatically change resolution to be the same as the canvas size\n        app.setCanvasFillMode(pc.FILLMODE_FILL_WINDOW);\n        app.setCanvasResolution(pc.RESOLUTION_AUTO);\n\n        const assetListLoader = new pc.AssetListLoader(Object.values(assets), app.assets);\n        assetListLoader.load(() => {\n\n            app.start();\n\n            data.set('settings', {\n                shadowAtlasResolution: 1024,     // shadow map resolution storing all shadows\n                cookieAtlasResolution: 1024,     // cookie map resolution storing all cookies\n                shadowType: pc.SHADOW_PCF3,      // shadow filter type\n                shadowsEnabled: true,\n                cookiesEnabled: true,\n                shadowIntensity: 1,\n                numLights: 0,\n                debug: false,\n                debugAtlas: false,\n                splitOptions: 0,\n                static: false\n            });\n\n            // setup skydome as ambient light\n            app.scene.skyboxMip = 3;\n            app.scene.skyboxIntensity = 0.1;\n            app.scene.envAtlas = assets.helipad.resource;\n\n            // enabled clustered lighting. This is a temporary API and will change in the future\n            app.scene.clusteredLightingEnabled = true;\n\n            // adjust default clustered lighting parameters to handle many lights\n            const lighting = app.scene.lighting;\n\n            // 1) subdivide space with lights into this many cells\n            lighting.cells = new pc.Vec3(12, 4, 12);\n\n            // 2) and allow this many lights per cell\n            const maxLights = 24;\n            lighting.maxLightsPerCell = maxLights;\n\n            // enable clustered shadows (it's enabled by default as well)\n            lighting.shadowsEnabled = data.get('settings.shadowsEnabled');\n\n            // enable clustered cookies\n            lighting.cookiesEnabled = data.get('settings.cookiesEnabled');\n\n            // resolution of the shadow and cookie atlas\n            lighting.shadowAtlasResolution = data.get('settings.shadowAtlasResolution');\n            lighting.cookieAtlasResolution = data.get('settings.cookieAtlasResolution');;\n\n            const splitOptions = [\n                null,               // automatic - split atlas each frame to give all required lights an equal size\n                [2, 1, 1, 2, 1],    // 7 shadows: split atlas to 2x2 (first number), and split created quarters to 1x1, 1x1, 2x2, 1x1\n                [3, 2],             // 12 shadows: split atlas to 3x3 (first number), and split one of the created parts to 2x2\n                [4]                 // 16 shadows: split atlas to 4x4\n            ];\n\n            // lights are static (not moving and so do not need to update shadows) or dynamic\n            let lightsStatic = false;\n\n            // debug rendering is enabled\n            let debugAtlas = false;\n\n            // Set the canvas to fill the window and automatically change resolution to be the same as the canvas size\n            app.setCanvasFillMode(pc.FILLMODE_FILL_WINDOW);\n            app.setCanvasResolution(pc.RESOLUTION_AUTO);\n\n            window.addEventListener(\"resize\", function () {\n                app.resizeCanvas(canvas.width, canvas.height);\n            });\n\n            // ground material\n            const groundMaterial = new pc.StandardMaterial();\n            groundMaterial.gloss = 0.55;\n            groundMaterial.metalness = 0.4;\n            groundMaterial.useMetalness = true;\n            groundMaterial.normalMap = assets.normal.resource;\n            groundMaterial.normalMapTiling.set(10, 10);\n            groundMaterial.bumpiness = 0.5;\n            groundMaterial.update();\n\n            // cube material\n            const cubeMaterial = new pc.StandardMaterial();\n            cubeMaterial.gloss = 0.55;\n            cubeMaterial.metalness = 0.4;\n            cubeMaterial.useMetalness = true;\n            cubeMaterial.normalMap = assets.normal.resource;\n            cubeMaterial.normalMapTiling.set(0.25, 0.25);\n            cubeMaterial.bumpiness = 0.5;\n            cubeMaterial.update();\n\n            // helper function to create a 3d primitive including its material\n            function createPrimitive(primitiveType: string, position: pc.Vec3, scale: pc.Vec3, mat: pc.Material) {\n\n                // create the primitive using the material\n                const primitive = new pc.Entity();\n                primitive.addComponent('render', {\n                    type: primitiveType,\n                    castShadows: true,\n                    material: mat\n                });\n\n                // set position and scale and add it to scene\n                primitive.setLocalPosition(position);\n                primitive.setLocalScale(scale);\n                app.root.addChild(primitive);\n\n                return primitive;\n            }\n\n            // create some visible geometry\n            const ground = createPrimitive(\"box\", new pc.Vec3(0, 0, 0), new pc.Vec3(500, 1, 500), groundMaterial);\n\n            const numTowers = 8;\n            for (let i = 0; i < numTowers; i++) {\n                let scale = 12;\n                const fraction = i / numTowers * Math.PI * 2;\n                const radius = 200;\n                const numCubes = 12;\n                for (let y = 0; y <= 10; y++) {\n                    const elevationRadius = radius * (1 - (y / numCubes));\n                    const pos = new pc.Vec3(elevationRadius * Math.sin(fraction), y * 6, elevationRadius * Math.cos(fraction));\n                    const prim = createPrimitive(\"box\", pos, new pc.Vec3(scale, scale, scale), cubeMaterial);\n                    prim.setLocalEulerAngles(Math.random() * 360, Math.random() * 360, Math.random() * 360);\n                }\n                scale -= 1.5;\n            }\n\n            const spotLightList: Array<pc.Entity> = [];\n            const cookieChannels = [\"r\", \"g\", \"b\", \"a\", \"rgb\"];\n\n            // helper function to create a light\n            function createLight(index: number) {\n                const intensity = 1.5;\n                const color = new pc.Color(intensity * Math.random(), intensity * Math.random(), intensity * Math.random(), 1);\n                const lightSpot = new pc.Entity(`Spot-${index}`);\n                const heartTexture = Math.random() < 0.5;\n                const cookieTexture = heartTexture ? assets.heart : assets.channels;\n                const cookieChannel = heartTexture ? \"a\" : cookieChannels[Math.floor(Math.random() * cookieChannels.length)];\n\n                lightSpot.addComponent(\"light\", {\n                    type: \"spot\",\n                    color: color,\n                    intensity: 3,\n                    innerConeAngle: 30,\n                    outerConeAngle: 35,\n                    range: 150,\n                    castShadows: true,\n                    shadowBias: 0.4,\n                    normalOffsetBias: 0.1,\n                    shadowResolution: 512,      // only used when clustering is off\n\n                    // when lights are static, only render shadows one time (or as needed when they use different atlas slot)\n                    shadowUpdateMode: lightsStatic ? pc.SHADOWUPDATE_THISFRAME : pc.SHADOWUPDATE_REALTIME,\n\n                    // cookie texture\n                    cookie: cookieTexture.resource,\n                    cookieChannel: cookieChannel,\n                    cookieIntensity: 0.5\n                });\n\n                // attach a render component with a small cone to each light\n                const material = new pc.StandardMaterial();\n                material.emissive = color;\n                material.update();\n\n                lightSpot.addComponent('render', {\n                    type: \"cone\",\n                    material: material,\n                    castShadows: false\n                });\n                lightSpot.setLocalScale(5, 5, 5);\n                app.root.addChild(lightSpot);\n                spotLightList.push(lightSpot);\n            }\n\n            // create many spot lights\n            const count = 10;\n            for (let i = 0; i < count; i++) {\n                createLight(i);\n            }\n            updateLightCount();\n\n            // Create an entity with a camera component\n            const camera = new pc.Entity();\n            camera.addComponent(\"camera\", {\n                clearColor: new pc.Color(0.2, 0.2, 0.2),\n                farClip: 2000,\n                nearClip: 1\n            });\n            app.root.addChild(camera);\n            camera.setLocalPosition(300 * Math.sin(0), 150, 300 * Math.cos(0));\n\n            // add orbit camera script with mouse and touch support\n            camera.addComponent(\"script\");\n            camera.script.create(\"orbitCamera\", {\n                attributes: {\n                    inertiaFactor: 0.2,\n                    focusEntity: ground,\n                    distanceMax: 1200,\n                    frameOnStart: false\n                }\n            });\n            camera.script.create(\"orbitCameraInputMouse\");\n            camera.script.create(\"orbitCameraInputTouch\");\n\n            // handle HUD changes - update properties on the scene\n            data.on('*:set', (path: string, value: any) => {\n                const pathArray = path.split('.');\n                if (pathArray[1] === 'static') {\n\n                    lightsStatic = value;\n                    updateLightCount();\n\n                } else if (pathArray[1] === 'atlasSplit') {\n\n                    // assign atlas split option\n                    lighting.atlasSplit = splitOptions[value];\n\n                } else if (pathArray[1] === 'debug') {\n\n                    // debug rendering of lighting clusters on world layer\n                    lighting.debugLayer = value ? app.scene.layers.getLayerByName(\"World\").id : undefined;\n\n                } else if (pathArray[1] === 'debugAtlas') {\n\n                    // show debug atlas\n                    debugAtlas = value;\n                } else if (pathArray[1] === 'shadowIntensity') {\n                    for (let i = 0; i < spotLightList.length; i++) {\n                        spotLightList[i].light.shadowIntensity = value;\n                    }\n                } else {\n                    // @ts-ignore\n                    lighting[pathArray[1]] = value;\n                }\n            });\n\n            function updateLightCount() {\n\n                // update the number on HUD\n                data.set('settings.numLights', spotLightList.length);\n\n                // shadow update mode (need to force render shadow when we add / remove light, as they all move)\n                spotLightList.forEach((spot) => {\n                    spot.light.shadowUpdateMode = lightsStatic ? pc.SHADOWUPDATE_THISFRAME : pc.SHADOWUPDATE_REALTIME;\n                });\n            }\n\n            // add light button handler\n            data.on('add', function () {\n                if (spotLightList.length < maxLights) {\n                    createLight(spotLightList.length);\n                    updateLightCount();\n                }\n            });\n\n            // remove light button handler\n            data.on('remove', function () {\n                if (spotLightList.length) {\n                    const light = spotLightList.pop();\n                    app.root.removeChild(light);\n                    light.destroy();\n                    updateLightCount();\n                }\n            });\n\n            // Set an update function on the app's update event\n            let time = 0;\n            app.on(\"update\", function (dt: number) {\n\n                // don't move lights around when they're static\n                if (!lightsStatic) {\n                    time += dt * 0.15;\n                }\n\n                // rotate spot lights around\n                const lightPos = new pc.Vec3();\n                spotLightList.forEach(function (spotlight, i) {\n                    const angle = (i / spotLightList.length) * Math.PI * 2;\n                    const x = 130 * Math.sin(angle + time);\n                    const z = 130 * Math.cos(angle + time);\n                    lightPos.set(x, 100, z);\n                    spotlight.setLocalPosition(lightPos);\n\n                    lightPos.y = 0;\n                    spotlight.lookAt(lightPos, pc.Vec3.RIGHT);\n\n                    spotlight.rotateLocal(90, 0, 0);\n                });\n\n                // display shadow texture (debug feature, only works when depth is stored as color, which is webgl1)\n                // app.drawTexture(-0.7, 0.7, 0.4, 0.4, app.renderer.lightTextureAtlas.shadowAtlas.texture);\n\n                // display cookie texture (debug feature)\n                if (debugAtlas) {\n                    // @ts-ignore engine-tsd\n                    app.drawTexture(-0.7, 0.2, 0.4, 0.4, app.renderer.lightTextureAtlas.cookieAtlas);\n                }\n            });\n        });\n    });\n}",javaScriptFunction:'function example(canvas, deviceType, data) {\n    const assets = {\n        script: new pc.Asset("script", "script", {\n            url: "/static/scripts/camera/orbit-camera.js",\n        }),\n        channels: new pc.Asset("channels", "texture", {\n            url: "/static/assets/textures/channels.png",\n        }),\n        heart: new pc.Asset("heart", "texture", {\n            url: "/static/assets/textures/heart.png",\n        }),\n        normal: new pc.Asset("normal", "texture", {\n            url: "/static/assets/textures/normal-map.png",\n        }),\n        helipad: new pc.Asset(\n            "helipad-env-atlas",\n            "texture",\n            { url: "/static/assets/cubemaps/helipad-env-atlas.png" },\n            { type: pc.TEXTURETYPE_RGBP, mipmaps: false }\n        ),\n    };\n\n    const gfxOptions = {\n        deviceTypes: [deviceType],\n        glslangUrl: "/static/lib/glslang/glslang.js",\n        twgslUrl: "/static/lib/twgsl/twgsl.js",\n    };\n\n    pc.createGraphicsDevice(canvas, gfxOptions).then((device) => {\n        const createOptions = new pc.AppOptions();\n        createOptions.graphicsDevice = device;\n        createOptions.mouse = new pc.Mouse(document.body);\n        createOptions.touch = new pc.TouchDevice(document.body);\n\n        createOptions.componentSystems = [\n            // @ts-ignore\n            pc.RenderComponentSystem,\n            // @ts-ignore\n            pc.CameraComponentSystem,\n            // @ts-ignore\n            pc.LightComponentSystem,\n            // @ts-ignore\n            pc.ScriptComponentSystem,\n        ];\n\n        createOptions.resourceHandlers = [\n            // @ts-ignore\n            pc.TextureHandler,\n            // @ts-ignore\n            pc.ScriptHandler,\n        ];\n\n        const app = new pc.AppBase(canvas);\n        app.init(createOptions);\n\n        // Set the canvas to fill the window and automatically change resolution to be the same as the canvas size\n        app.setCanvasFillMode(pc.FILLMODE_FILL_WINDOW);\n        app.setCanvasResolution(pc.RESOLUTION_AUTO);\n\n        const assetListLoader = new pc.AssetListLoader(\n            Object.values(assets),\n            app.assets\n        );\n        assetListLoader.load(() => {\n            app.start();\n\n            data.set("settings", {\n                shadowAtlasResolution: 1024, // shadow map resolution storing all shadows\n                cookieAtlasResolution: 1024, // cookie map resolution storing all cookies\n                shadowType: pc.SHADOW_PCF3, // shadow filter type\n                shadowsEnabled: true,\n                cookiesEnabled: true,\n                shadowIntensity: 1,\n                numLights: 0,\n                debug: false,\n                debugAtlas: false,\n                splitOptions: 0,\n                static: false,\n            });\n\n            // setup skydome as ambient light\n            app.scene.skyboxMip = 3;\n            app.scene.skyboxIntensity = 0.1;\n            app.scene.envAtlas = assets.helipad.resource;\n\n            // enabled clustered lighting. This is a temporary API and will change in the future\n            app.scene.clusteredLightingEnabled = true;\n\n            // adjust default clustered lighting parameters to handle many lights\n            const lighting = app.scene.lighting;\n\n            // 1) subdivide space with lights into this many cells\n            lighting.cells = new pc.Vec3(12, 4, 12);\n\n            // 2) and allow this many lights per cell\n            const maxLights = 24;\n            lighting.maxLightsPerCell = maxLights;\n\n            // enable clustered shadows (it\'s enabled by default as well)\n            lighting.shadowsEnabled = data.get("settings.shadowsEnabled");\n\n            // enable clustered cookies\n            lighting.cookiesEnabled = data.get("settings.cookiesEnabled");\n\n            // resolution of the shadow and cookie atlas\n            lighting.shadowAtlasResolution = data.get(\n                "settings.shadowAtlasResolution"\n            );\n            lighting.cookieAtlasResolution = data.get(\n                "settings.cookieAtlasResolution"\n            );\n\n            const splitOptions = [\n                null, // automatic - split atlas each frame to give all required lights an equal size\n                [2, 1, 1, 2, 1], // 7 shadows: split atlas to 2x2 (first number), and split created quarters to 1x1, 1x1, 2x2, 1x1\n                [3, 2], // 12 shadows: split atlas to 3x3 (first number), and split one of the created parts to 2x2\n                [4], // 16 shadows: split atlas to 4x4\n            ];\n\n            // lights are static (not moving and so do not need to update shadows) or dynamic\n            let lightsStatic = false;\n\n            // debug rendering is enabled\n            let debugAtlas = false;\n\n            // Set the canvas to fill the window and automatically change resolution to be the same as the canvas size\n            app.setCanvasFillMode(pc.FILLMODE_FILL_WINDOW);\n            app.setCanvasResolution(pc.RESOLUTION_AUTO);\n\n            window.addEventListener("resize", function () {\n                app.resizeCanvas(canvas.width, canvas.height);\n            });\n\n            // ground material\n            const groundMaterial = new pc.StandardMaterial();\n            groundMaterial.gloss = 0.55;\n            groundMaterial.metalness = 0.4;\n            groundMaterial.useMetalness = true;\n            groundMaterial.normalMap = assets.normal.resource;\n            groundMaterial.normalMapTiling.set(10, 10);\n            groundMaterial.bumpiness = 0.5;\n            groundMaterial.update();\n\n            // cube material\n            const cubeMaterial = new pc.StandardMaterial();\n            cubeMaterial.gloss = 0.55;\n            cubeMaterial.metalness = 0.4;\n            cubeMaterial.useMetalness = true;\n            cubeMaterial.normalMap = assets.normal.resource;\n            cubeMaterial.normalMapTiling.set(0.25, 0.25);\n            cubeMaterial.bumpiness = 0.5;\n            cubeMaterial.update();\n\n            // helper function to create a 3d primitive including its material\n            function createPrimitive(primitiveType, position, scale, mat) {\n                // create the primitive using the material\n                const primitive = new pc.Entity();\n                primitive.addComponent("render", {\n                    type: primitiveType,\n                    castShadows: true,\n                    material: mat,\n                });\n\n                // set position and scale and add it to scene\n                primitive.setLocalPosition(position);\n                primitive.setLocalScale(scale);\n                app.root.addChild(primitive);\n\n                return primitive;\n            }\n\n            // create some visible geometry\n            const ground = createPrimitive(\n                "box",\n                new pc.Vec3(0, 0, 0),\n                new pc.Vec3(500, 1, 500),\n                groundMaterial\n            );\n\n            const numTowers = 8;\n            for (let i = 0; i < numTowers; i++) {\n                let scale = 12;\n                const fraction = (i / numTowers) * Math.PI * 2;\n                const radius = 200;\n                const numCubes = 12;\n                for (let y = 0; y <= 10; y++) {\n                    const elevationRadius = radius * (1 - y / numCubes);\n                    const pos = new pc.Vec3(\n                        elevationRadius * Math.sin(fraction),\n                        y * 6,\n                        elevationRadius * Math.cos(fraction)\n                    );\n                    const prim = createPrimitive(\n                        "box",\n                        pos,\n                        new pc.Vec3(scale, scale, scale),\n                        cubeMaterial\n                    );\n                    prim.setLocalEulerAngles(\n                        Math.random() * 360,\n                        Math.random() * 360,\n                        Math.random() * 360\n                    );\n                }\n                scale -= 1.5;\n            }\n\n            const spotLightList = [];\n            const cookieChannels = ["r", "g", "b", "a", "rgb"];\n\n            // helper function to create a light\n            function createLight(index) {\n                const intensity = 1.5;\n                const color = new pc.Color(\n                    intensity * Math.random(),\n                    intensity * Math.random(),\n                    intensity * Math.random(),\n                    1\n                );\n                const lightSpot = new pc.Entity(`Spot-${index}`);\n                const heartTexture = Math.random() < 0.5;\n                const cookieTexture = heartTexture\n                    ? assets.heart\n                    : assets.channels;\n                const cookieChannel = heartTexture\n                    ? "a"\n                    : cookieChannels[\n                          Math.floor(Math.random() * cookieChannels.length)\n                      ];\n\n                lightSpot.addComponent("light", {\n                    type: "spot",\n                    color: color,\n                    intensity: 3,\n                    innerConeAngle: 30,\n                    outerConeAngle: 35,\n                    range: 150,\n                    castShadows: true,\n                    shadowBias: 0.4,\n                    normalOffsetBias: 0.1,\n                    shadowResolution: 512, // only used when clustering is off\n\n                    // when lights are static, only render shadows one time (or as needed when they use different atlas slot)\n                    shadowUpdateMode: lightsStatic\n                        ? pc.SHADOWUPDATE_THISFRAME\n                        : pc.SHADOWUPDATE_REALTIME,\n\n                    // cookie texture\n                    cookie: cookieTexture.resource,\n                    cookieChannel: cookieChannel,\n                    cookieIntensity: 0.5,\n                });\n\n                // attach a render component with a small cone to each light\n                const material = new pc.StandardMaterial();\n                material.emissive = color;\n                material.update();\n\n                lightSpot.addComponent("render", {\n                    type: "cone",\n                    material: material,\n                    castShadows: false,\n                });\n                lightSpot.setLocalScale(5, 5, 5);\n                app.root.addChild(lightSpot);\n                spotLightList.push(lightSpot);\n            }\n\n            // create many spot lights\n            const count = 10;\n            for (let i = 0; i < count; i++) {\n                createLight(i);\n            }\n            updateLightCount();\n\n            // Create an entity with a camera component\n            const camera = new pc.Entity();\n            camera.addComponent("camera", {\n                clearColor: new pc.Color(0.2, 0.2, 0.2),\n                farClip: 2000,\n                nearClip: 1,\n            });\n            app.root.addChild(camera);\n            camera.setLocalPosition(300 * Math.sin(0), 150, 300 * Math.cos(0));\n\n            // add orbit camera script with mouse and touch support\n            camera.addComponent("script");\n            camera.script.create("orbitCamera", {\n                attributes: {\n                    inertiaFactor: 0.2,\n                    focusEntity: ground,\n                    distanceMax: 1200,\n                    frameOnStart: false,\n                },\n            });\n            camera.script.create("orbitCameraInputMouse");\n            camera.script.create("orbitCameraInputTouch");\n\n            // handle HUD changes - update properties on the scene\n            data.on("*:set", (path, value) => {\n                const pathArray = path.split(".");\n                if (pathArray[1] === "static") {\n                    lightsStatic = value;\n                    updateLightCount();\n                } else if (pathArray[1] === "atlasSplit") {\n                    // assign atlas split option\n                    lighting.atlasSplit = splitOptions[value];\n                } else if (pathArray[1] === "debug") {\n                    // debug rendering of lighting clusters on world layer\n                    lighting.debugLayer = value\n                        ? app.scene.layers.getLayerByName("World").id\n                        : undefined;\n                } else if (pathArray[1] === "debugAtlas") {\n                    // show debug atlas\n                    debugAtlas = value;\n                } else if (pathArray[1] === "shadowIntensity") {\n                    for (let i = 0; i < spotLightList.length; i++) {\n                        spotLightList[i].light.shadowIntensity = value;\n                    }\n                } else {\n                    // @ts-ignore\n                    lighting[pathArray[1]] = value;\n                }\n            });\n\n            function updateLightCount() {\n                // update the number on HUD\n                data.set("settings.numLights", spotLightList.length);\n\n                // shadow update mode (need to force render shadow when we add / remove light, as they all move)\n                spotLightList.forEach((spot) => {\n                    spot.light.shadowUpdateMode = lightsStatic\n                        ? pc.SHADOWUPDATE_THISFRAME\n                        : pc.SHADOWUPDATE_REALTIME;\n                });\n            }\n\n            // add light button handler\n            data.on("add", function () {\n                if (spotLightList.length < maxLights) {\n                    createLight(spotLightList.length);\n                    updateLightCount();\n                }\n            });\n\n            // remove light button handler\n            data.on("remove", function () {\n                if (spotLightList.length) {\n                    const light = spotLightList.pop();\n                    app.root.removeChild(light);\n                    light.destroy();\n                    updateLightCount();\n                }\n            });\n\n            // Set an update function on the app\'s update event\n            let time = 0;\n            app.on("update", function (dt) {\n                // don\'t move lights around when they\'re static\n                if (!lightsStatic) {\n                    time += dt * 0.15;\n                }\n\n                // rotate spot lights around\n                const lightPos = new pc.Vec3();\n                spotLightList.forEach(function (spotlight, i) {\n                    const angle = (i / spotLightList.length) * Math.PI * 2;\n                    const x = 130 * Math.sin(angle + time);\n                    const z = 130 * Math.cos(angle + time);\n                    lightPos.set(x, 100, z);\n                    spotlight.setLocalPosition(lightPos);\n\n                    lightPos.y = 0;\n                    spotlight.lookAt(lightPos, pc.Vec3.RIGHT);\n\n                    spotlight.rotateLocal(90, 0, 0);\n                });\n\n                // display shadow texture (debug feature, only works when depth is stored as color, which is webgl1)\n                // app.drawTexture(-0.7, 0.7, 0.4, 0.4, app.renderer.lightTextureAtlas.shadowAtlas.texture);\n\n                // display cookie texture (debug feature)\n                if (debugAtlas) {\n                    // @ts-ignore engine-tsd\n                    app.drawTexture(\n                        -0.7,\n                        0.2,\n                        0.4,\n                        0.4,\n                        app.renderer.lightTextureAtlas.cookieAtlas\n                    );\n                }\n            });\n        });\n    });\n}\n',nameSlug:"clustered-spot-shadows",categorySlug:"graphics"},"contact-hardening-shadows":{typeScriptFunction:"function example(canvas: HTMLCanvasElement, deviceType: string, data: any): void {\n\n    pc.WasmModule.setConfig('DracoDecoderModule', {\n        glueUrl: '/static/lib/draco/draco.wasm.js',\n        wasmUrl: '/static/lib/draco/draco.wasm.wasm',\n        fallbackUrl: '/static/lib/draco/draco.js'\n    });\n\n    pc.WasmModule.getInstance('DracoDecoderModule', demo);\n\n\n    function demo() {\n\n        const assets = {\n            orbitCamera: new pc.Asset('script', 'script', { url: '/static/scripts/camera/orbit-camera.js' }),\n            helipad: new pc.Asset('helipad-env-atlas', 'texture', { url: '/static/assets/cubemaps/helipad-env-atlas.png' }, { type: pc.TEXTURETYPE_RGBP, mipmaps: false }),\n            cube: new pc.Asset('cube', 'container', { url: '/static/assets/models/playcanvas-cube.glb' }),\n            luts: new pc.Asset('luts', 'json', { url: '/static/assets/json/area-light-luts.json' }),\n            asset: new pc.Asset('asset', 'container', { url: '/static/assets/models/robot-arm.glb' })\n        };\n\n        const gfxOptions = {\n            deviceTypes: [deviceType],\n            glslangUrl: '/static/lib/glslang/glslang.js',\n            twgslUrl: '/static/lib/twgsl/twgsl.js'\n        };\n\n        pc.createGraphicsDevice(canvas, gfxOptions).then((device: pc.GraphicsDevice) => {\n\n            const createOptions = new pc.AppOptions();\n            createOptions.graphicsDevice = device;\n            createOptions.keyboard = new pc.Keyboard(document.body);\n            createOptions.mouse = new pc.Mouse(document.body);\n            createOptions.touch = new pc.TouchDevice(document.body);\n\n            createOptions.componentSystems = [\n                // @ts-ignore\n                pc.RenderComponentSystem,\n                // @ts-ignore\n                pc.CameraComponentSystem,\n                // @ts-ignore\n                pc.LightComponentSystem,\n                // @ts-ignore\n                pc.ScriptComponentSystem,\n                // @ts-ignore\n                pc.AnimComponentSystem\n            ];\n            createOptions.resourceHandlers = [\n                // @ts-ignore\n                pc.TextureHandler,\n                // @ts-ignore\n                pc.ContainerHandler,\n                // @ts-ignore\n                pc.ScriptHandler,\n                // @ts-ignore\n                pc.JsonHandler,\n                // @ts-ignore\n                pc.AnimClipHandler,\n                // @ts-ignore\n                pc.AnimStateGraphHandler\n            ];\n\n            const app = new pc.AppBase(canvas);\n            app.init(createOptions);\n\n            // Set the canvas to fill the window and automatically change resolution to be the same as the canvas size\n            app.setCanvasFillMode(pc.FILLMODE_FILL_WINDOW);\n            app.setCanvasResolution(pc.RESOLUTION_AUTO);\n\n            const assetListLoader = new pc.AssetListLoader(Object.values(assets), app.assets);\n            assetListLoader.load(() => {\n\n                app.start();\n\n                app.scene.toneMapping = pc.TONEMAP_ACES;\n                app.scene.skyboxMip = 1;\n                app.scene.ambientLight.set(0, 0, 0);\n                app.scene.ambientLuminance = 0;\n                app.scene.setSkybox(assets.helipad.resources);\n\n                // enable area lights which are disabled by default for clustered lighting\n                app.scene.clusteredLightingEnabled = false;\n                app.scene.skyboxIntensity = 0.1;\n\n                // set the loaded area light LUT data\n                const luts = assets.luts.resource;\n                app.setAreaLightLuts(luts.LTC_MAT_1, luts.LTC_MAT_2);\n\n                const planeMaterial = new pc.StandardMaterial();\n                planeMaterial.gloss = 0.0;\n                planeMaterial.metalness = 0.7;\n                planeMaterial.useMetalness = true;\n                planeMaterial.update();\n\n                const plane = new pc.Entity();\n                plane.addComponent('render', {\n                    type: 'plane',\n                    material: planeMaterial\n                });\n                plane.setLocalScale(new pc.Vec3(100, 0, 100));\n                plane.setLocalPosition(0, 0, 0);\n                app.root.addChild(plane);\n\n                data.set('script', {\n                    cycle: true,\n                    animate: true,\n                    area: {\n                        enabled: true,\n                        intensity: 16.0,\n                        size: 2,\n                        shadowType: pc.SHADOW_PCSS\n                    },\n                    point: {\n                        enabled: true,\n                        intensity: 4.0,\n                        size: 2,\n                        shadowType: pc.SHADOW_PCSS\n                    },\n                    directional: {\n                        enabled: true,\n                        intensity: 2.0,\n                        size: 1,\n                        shadowType: pc.SHADOW_PCSS\n                    }\n                });\n\n                const occluder = assets.asset.resource.instantiateRenderEntity();\n                occluder.addComponent('anim', {\n                    activate: true\n                });\n                occluder.setLocalScale(3, 3, 3);\n                app.root.addChild(occluder);\n\n                occluder.anim.assignAnimation('Idle', assets.asset.resource.animations[0].resource);\n                occluder.anim.baseLayer.weight = 1.0;\n                occluder.anim.speed = 0.1;\n                // const animLayer = occluder.anim.addLayer('Idle', 1.0, )\n\n                app.scene.envAtlas = assets.helipad.resource;\n\n                const areaLight = new pc.Entity();\n                areaLight.addComponent(\"light\", {\n                    type: \"spot\",\n                    shape: pc.LIGHTSHAPE_RECT,\n                    color: new pc.Color(0.25, 1, 0.25),\n                    castShadows: true,\n                    range: 150,\n                    shadowResolution: 2048,\n                    shadowDistance: 100,\n                    penumbraSize: data.get('script.area.size'),\n                    shadowType: data.get('script.area.shadowType'),\n                    intensity: data.get('script.area.intensity'),\n                    falloffMode: pc.LIGHTFALLOFF_INVERSESQUARED,\n                    innerConeAngle: 45,\n                    outerConeAngle: 50,\n                    normalOffsetBias: 0.1\n                });\n                areaLight.setLocalScale(3, 1, 3);\n                areaLight.setEulerAngles(45, 90, 0);\n                areaLight.setLocalPosition(4, 7, 0);\n\n                // emissive material that is the light source color\n                const brightMaterial = new pc.StandardMaterial();\n                brightMaterial.emissive = areaLight.light.color;\n                brightMaterial.emissiveIntensity = areaLight.light.intensity;\n                brightMaterial.useLighting = false;\n                brightMaterial.cull = pc.CULLFACE_NONE;\n                brightMaterial.update();\n\n                const brightShape = new pc.Entity();\n                // primitive shape that matches light source shape\n                brightShape.addComponent(\"render\", {\n                    type: \"plane\",\n                    material: brightMaterial,\n                    castShadows: false\n                });\n                areaLight.addChild(brightShape);\n                app.root.addChild(areaLight);\n\n                const directionalLight = new pc.Entity();\n                directionalLight.addComponent(\"light\", {\n                    type: \"directional\",\n                    color: new pc.Color(1, 1, 1),\n                    castShadows: true,\n                    numCascades: 1,\n                    penumbraSize: data.get('script.directional.size'),\n                    shadowType: data.get('script.directional.shadowType'),\n                    intensity: data.get('script.directional.intensity'),\n                    shadowBias: 0.5,\n                    shadowDistance: 50,\n                    normalOffsetBias: 0.1,\n                    shadowResolution: 8192\n                });\n                directionalLight.setEulerAngles(65, 35, 0);\n                app.root.addChild(directionalLight);\n\n                const lightOmni = new pc.Entity(\"Omni\");\n                lightOmni.addComponent(\"light\", {\n                    type: \"omni\",\n                    color: new pc.Color(1, 0.25, 0.25),\n                    range: 25,\n                    penumbraSize: data.get('script.point.size'),\n                    shadowType: data.get('script.point.shadowType'),\n                    intensity: data.get('script.point.intensity'),\n                    castShadows: true,\n                    shadowBias: 0.2,\n                    normalOffsetBias: 0.2,\n                    shadowResolution: 2048\n                });\n                lightOmni.setLocalPosition(-4, 7, 0);\n\n                const omniMaterial = new pc.StandardMaterial();\n                omniMaterial.emissive = lightOmni.light.color;\n                omniMaterial.emissiveIntensity = lightOmni.light.intensity;\n                omniMaterial.useLighting = false;\n                omniMaterial.cull = pc.CULLFACE_NONE;\n                omniMaterial.update();\n\n                const omniShape = new pc.Entity();\n                omniShape.addComponent(\"render\", {\n                    type: \"sphere\",\n                    material: omniMaterial,\n                    castShadows: false\n                });\n                omniShape.setLocalScale(0.2, 0.2, 0.2);\n                lightOmni.addChild(omniShape);\n                app.root.addChild(lightOmni);\n\n                // Create an Entity with a camera component\n                const camera = new pc.Entity();\n                camera.addComponent(\"camera\", {\n                    clearColor: new pc.Color(0.4, 0.45, 0.5)\n                });\n                camera.setLocalPosition(0, 5, 11);\n\n                camera.camera.requestSceneColorMap(true);\n                camera.addComponent(\"script\");\n                camera.script.create(\"orbitCamera\", {\n                    attributes: {\n                        inertiaFactor: 0.2,\n                        focusEntity: occluder,\n                        distanceMax: 500,\n                        frameOnStart: false\n                    }\n                });\n                camera.script.create(\"orbitCameraInputMouse\");\n                camera.script.create(\"orbitCameraInputTouch\");\n                app.root.addChild(camera);\n\n                data.on('*:set', (path: string, value: any) => {\n                    switch (path) {\n                        case 'script.area.enabled':\n                            areaLight.enabled = value;\n                            break;\n                        case 'script.area.intensity':\n                            areaLight.light.intensity = value;\n                            brightMaterial.emissiveIntensity = value;\n                            brightMaterial.update();\n                            break;\n                        case 'script.area.size':\n                            areaLight.light.penumbraSize = value;\n                            break;\n                        case 'script.area.shadowType':\n                            areaLight.light.shadowType = parseInt(value);\n                            break;\n                        case 'script.directional.enabled':\n                            directionalLight.enabled = value;\n                            break;\n                        case 'script.directional.intensity':\n                            directionalLight.light.intensity = value;\n                            break;\n                        case 'script.directional.size':\n                            directionalLight.light.penumbraSize = value;\n                            break;\n                        case 'script.directional.shadowType':\n                            directionalLight.light.shadowType = parseInt(value);\n                            break;\n                        case 'script.point.enabled':\n                            lightOmni.enabled = value;\n                            break;\n                        case 'script.point.intensity':\n                            lightOmni.light.intensity = value;\n                            break;\n                        case 'script.point.size':\n                            lightOmni.light.penumbraSize = value;\n                            break;\n                        case 'script.point.shadowType':\n                            lightOmni.light.shadowType = parseInt(value);\n                            break;\n                    }\n                });\n\n                const areaLightElement = window.top.document.getElementById('area-light');\n                const pointLightElement = window.top.document.getElementById('point-light');\n                const directionalLightElement = window.top.document.getElementById('directional-light');\n\n                let resizeControlPanel = true;\n                let time = 0;\n                let timeDiff = 0;\n                let index = 0;\n                app.on(\"update\", function (dt) {\n\n                    if (time === 0) {\n                        // @ts-ignore engine-tsd\n                        camera.script.orbitCamera.distance = 25;\n                    }\n                    timeDiff += dt;\n\n                    if (data.get('script.cycle')) {\n                        if ((timeDiff / 5) > 1) {\n                            index = (index + 1) % 3;\n                            timeDiff = 0;\n                        }\n                        areaLight.enabled = index === 0;\n                        directionalLight.enabled = index === 1;\n                        lightOmni.enabled = index === 2;\n\n                        if (areaLightElement) {\n                            areaLightElement.ui.enabled = false;\n                            pointLightElement.ui.enabled = false;\n                            directionalLightElement.ui.enabled = false;\n                        }\n                    } else {\n                        if (areaLightElement) {\n                            areaLightElement.ui.enabled = true;\n                            pointLightElement.ui.enabled = true;\n                            directionalLightElement.ui.enabled = true;\n                        }\n\n                        areaLight.enabled = data.get('script.area.enabled');\n                        directionalLight.enabled = data.get('script.directional.enabled');\n                        lightOmni.enabled = data.get('script.point.enabled');\n                    }\n\n                    if (data.get('script.animate')) {\n                        time += dt;\n                        const x = Math.sin(time * 0.2);\n                        const z = Math.cos(time * 0.2);\n                        lightOmni.setLocalPosition(x * 4, 5, z * 4);\n                        directionalLight.setEulerAngles(65, 35 + (time * 2), 0);\n                        areaLight.setEulerAngles(45, 180 + time * 0.2 * 180.0 / Math.PI, 0);\n                        areaLight.setLocalPosition(-x * 4, 7, -z * 4);\n                    }\n\n                    // resize control panel to fit the content better\n                    if (resizeControlPanel) {\n                        const panel = window.top.document.getElementById('controlPanel');\n                        if (panel) {\n                            panel.style.width = '360px';\n                            resizeControlPanel = false;\n                        }\n                    }\n                });\n            });\n        });\n    }\n}",javaScriptFunction:'function example(canvas, deviceType, data) {\n    pc.WasmModule.setConfig("DracoDecoderModule", {\n        glueUrl: "/static/lib/draco/draco.wasm.js",\n        wasmUrl: "/static/lib/draco/draco.wasm.wasm",\n        fallbackUrl: "/static/lib/draco/draco.js",\n    });\n\n    pc.WasmModule.getInstance("DracoDecoderModule", demo);\n\n    function demo() {\n        const assets = {\n            orbitCamera: new pc.Asset("script", "script", {\n                url: "/static/scripts/camera/orbit-camera.js",\n            }),\n            helipad: new pc.Asset(\n                "helipad-env-atlas",\n                "texture",\n                { url: "/static/assets/cubemaps/helipad-env-atlas.png" },\n                { type: pc.TEXTURETYPE_RGBP, mipmaps: false }\n            ),\n            cube: new pc.Asset("cube", "container", {\n                url: "/static/assets/models/playcanvas-cube.glb",\n            }),\n            luts: new pc.Asset("luts", "json", {\n                url: "/static/assets/json/area-light-luts.json",\n            }),\n            asset: new pc.Asset("asset", "container", {\n                url: "/static/assets/models/robot-arm.glb",\n            }),\n        };\n\n        const gfxOptions = {\n            deviceTypes: [deviceType],\n            glslangUrl: "/static/lib/glslang/glslang.js",\n            twgslUrl: "/static/lib/twgsl/twgsl.js",\n        };\n\n        pc.createGraphicsDevice(canvas, gfxOptions).then((device) => {\n            const createOptions = new pc.AppOptions();\n            createOptions.graphicsDevice = device;\n            createOptions.keyboard = new pc.Keyboard(document.body);\n            createOptions.mouse = new pc.Mouse(document.body);\n            createOptions.touch = new pc.TouchDevice(document.body);\n\n            createOptions.componentSystems = [\n                // @ts-ignore\n                pc.RenderComponentSystem,\n                // @ts-ignore\n                pc.CameraComponentSystem,\n                // @ts-ignore\n                pc.LightComponentSystem,\n                // @ts-ignore\n                pc.ScriptComponentSystem,\n                // @ts-ignore\n                pc.AnimComponentSystem,\n            ];\n\n            createOptions.resourceHandlers = [\n                // @ts-ignore\n                pc.TextureHandler,\n                // @ts-ignore\n                pc.ContainerHandler,\n                // @ts-ignore\n                pc.ScriptHandler,\n                // @ts-ignore\n                pc.JsonHandler,\n                // @ts-ignore\n                pc.AnimClipHandler,\n                // @ts-ignore\n                pc.AnimStateGraphHandler,\n            ];\n\n            const app = new pc.AppBase(canvas);\n            app.init(createOptions);\n\n            // Set the canvas to fill the window and automatically change resolution to be the same as the canvas size\n            app.setCanvasFillMode(pc.FILLMODE_FILL_WINDOW);\n            app.setCanvasResolution(pc.RESOLUTION_AUTO);\n\n            const assetListLoader = new pc.AssetListLoader(\n                Object.values(assets),\n                app.assets\n            );\n            assetListLoader.load(() => {\n                app.start();\n\n                app.scene.toneMapping = pc.TONEMAP_ACES;\n                app.scene.skyboxMip = 1;\n                app.scene.ambientLight.set(0, 0, 0);\n                app.scene.ambientLuminance = 0;\n                app.scene.setSkybox(assets.helipad.resources);\n\n                // enable area lights which are disabled by default for clustered lighting\n                app.scene.clusteredLightingEnabled = false;\n                app.scene.skyboxIntensity = 0.1;\n\n                // set the loaded area light LUT data\n                const luts = assets.luts.resource;\n                app.setAreaLightLuts(luts.LTC_MAT_1, luts.LTC_MAT_2);\n\n                const planeMaterial = new pc.StandardMaterial();\n                planeMaterial.gloss = 0.0;\n                planeMaterial.metalness = 0.7;\n                planeMaterial.useMetalness = true;\n                planeMaterial.update();\n\n                const plane = new pc.Entity();\n                plane.addComponent("render", {\n                    type: "plane",\n                    material: planeMaterial,\n                });\n                plane.setLocalScale(new pc.Vec3(100, 0, 100));\n                plane.setLocalPosition(0, 0, 0);\n                app.root.addChild(plane);\n\n                data.set("script", {\n                    cycle: true,\n                    animate: true,\n                    area: {\n                        enabled: true,\n                        intensity: 16.0,\n                        size: 2,\n                        shadowType: pc.SHADOW_PCSS,\n                    },\n                    point: {\n                        enabled: true,\n                        intensity: 4.0,\n                        size: 2,\n                        shadowType: pc.SHADOW_PCSS,\n                    },\n                    directional: {\n                        enabled: true,\n                        intensity: 2.0,\n                        size: 1,\n                        shadowType: pc.SHADOW_PCSS,\n                    },\n                });\n\n                const occluder =\n                    assets.asset.resource.instantiateRenderEntity();\n                occluder.addComponent("anim", {\n                    activate: true,\n                });\n                occluder.setLocalScale(3, 3, 3);\n                app.root.addChild(occluder);\n\n                occluder.anim.assignAnimation(\n                    "Idle",\n                    assets.asset.resource.animations[0].resource\n                );\n                occluder.anim.baseLayer.weight = 1.0;\n                occluder.anim.speed = 0.1;\n                // const animLayer = occluder.anim.addLayer(\'Idle\', 1.0, )\n\n                app.scene.envAtlas = assets.helipad.resource;\n\n                const areaLight = new pc.Entity();\n                areaLight.addComponent("light", {\n                    type: "spot",\n                    shape: pc.LIGHTSHAPE_RECT,\n                    color: new pc.Color(0.25, 1, 0.25),\n                    castShadows: true,\n                    range: 150,\n                    shadowResolution: 2048,\n                    shadowDistance: 100,\n                    penumbraSize: data.get("script.area.size"),\n                    shadowType: data.get("script.area.shadowType"),\n                    intensity: data.get("script.area.intensity"),\n                    falloffMode: pc.LIGHTFALLOFF_INVERSESQUARED,\n                    innerConeAngle: 45,\n                    outerConeAngle: 50,\n                    normalOffsetBias: 0.1,\n                });\n                areaLight.setLocalScale(3, 1, 3);\n                areaLight.setEulerAngles(45, 90, 0);\n                areaLight.setLocalPosition(4, 7, 0);\n\n                // emissive material that is the light source color\n                const brightMaterial = new pc.StandardMaterial();\n                brightMaterial.emissive = areaLight.light.color;\n                brightMaterial.emissiveIntensity = areaLight.light.intensity;\n                brightMaterial.useLighting = false;\n                brightMaterial.cull = pc.CULLFACE_NONE;\n                brightMaterial.update();\n\n                const brightShape = new pc.Entity();\n                // primitive shape that matches light source shape\n                brightShape.addComponent("render", {\n                    type: "plane",\n                    material: brightMaterial,\n                    castShadows: false,\n                });\n                areaLight.addChild(brightShape);\n                app.root.addChild(areaLight);\n\n                const directionalLight = new pc.Entity();\n                directionalLight.addComponent("light", {\n                    type: "directional",\n                    color: new pc.Color(1, 1, 1),\n                    castShadows: true,\n                    numCascades: 1,\n                    penumbraSize: data.get("script.directional.size"),\n                    shadowType: data.get("script.directional.shadowType"),\n                    intensity: data.get("script.directional.intensity"),\n                    shadowBias: 0.5,\n                    shadowDistance: 50,\n                    normalOffsetBias: 0.1,\n                    shadowResolution: 8192,\n                });\n                directionalLight.setEulerAngles(65, 35, 0);\n                app.root.addChild(directionalLight);\n\n                const lightOmni = new pc.Entity("Omni");\n                lightOmni.addComponent("light", {\n                    type: "omni",\n                    color: new pc.Color(1, 0.25, 0.25),\n                    range: 25,\n                    penumbraSize: data.get("script.point.size"),\n                    shadowType: data.get("script.point.shadowType"),\n                    intensity: data.get("script.point.intensity"),\n                    castShadows: true,\n                    shadowBias: 0.2,\n                    normalOffsetBias: 0.2,\n                    shadowResolution: 2048,\n                });\n                lightOmni.setLocalPosition(-4, 7, 0);\n\n                const omniMaterial = new pc.StandardMaterial();\n                omniMaterial.emissive = lightOmni.light.color;\n                omniMaterial.emissiveIntensity = lightOmni.light.intensity;\n                omniMaterial.useLighting = false;\n                omniMaterial.cull = pc.CULLFACE_NONE;\n                omniMaterial.update();\n\n                const omniShape = new pc.Entity();\n                omniShape.addComponent("render", {\n                    type: "sphere",\n                    material: omniMaterial,\n                    castShadows: false,\n                });\n                omniShape.setLocalScale(0.2, 0.2, 0.2);\n                lightOmni.addChild(omniShape);\n                app.root.addChild(lightOmni);\n\n                // Create an Entity with a camera component\n                const camera = new pc.Entity();\n                camera.addComponent("camera", {\n                    clearColor: new pc.Color(0.4, 0.45, 0.5),\n                });\n                camera.setLocalPosition(0, 5, 11);\n\n                camera.camera.requestSceneColorMap(true);\n                camera.addComponent("script");\n                camera.script.create("orbitCamera", {\n                    attributes: {\n                        inertiaFactor: 0.2,\n                        focusEntity: occluder,\n                        distanceMax: 500,\n                        frameOnStart: false,\n                    },\n                });\n                camera.script.create("orbitCameraInputMouse");\n                camera.script.create("orbitCameraInputTouch");\n                app.root.addChild(camera);\n\n                data.on("*:set", (path, value) => {\n                    switch (path) {\n                        case "script.area.enabled":\n                            areaLight.enabled = value;\n                            break;\n                        case "script.area.intensity":\n                            areaLight.light.intensity = value;\n                            brightMaterial.emissiveIntensity = value;\n                            brightMaterial.update();\n                            break;\n                        case "script.area.size":\n                            areaLight.light.penumbraSize = value;\n                            break;\n                        case "script.area.shadowType":\n                            areaLight.light.shadowType = parseInt(value);\n                            break;\n                        case "script.directional.enabled":\n                            directionalLight.enabled = value;\n                            break;\n                        case "script.directional.intensity":\n                            directionalLight.light.intensity = value;\n                            break;\n                        case "script.directional.size":\n                            directionalLight.light.penumbraSize = value;\n                            break;\n                        case "script.directional.shadowType":\n                            directionalLight.light.shadowType = parseInt(value);\n                            break;\n                        case "script.point.enabled":\n                            lightOmni.enabled = value;\n                            break;\n                        case "script.point.intensity":\n                            lightOmni.light.intensity = value;\n                            break;\n                        case "script.point.size":\n                            lightOmni.light.penumbraSize = value;\n                            break;\n                        case "script.point.shadowType":\n                            lightOmni.light.shadowType = parseInt(value);\n                            break;\n                    }\n                });\n\n                const areaLightElement =\n                    window.top.document.getElementById("area-light");\n                const pointLightElement =\n                    window.top.document.getElementById("point-light");\n                const directionalLightElement =\n                    window.top.document.getElementById("directional-light");\n\n                let resizeControlPanel = true;\n                let time = 0;\n                let timeDiff = 0;\n                let index = 0;\n                app.on("update", function (dt) {\n                    if (time === 0) {\n                        // @ts-ignore engine-tsd\n                        camera.script.orbitCamera.distance = 25;\n                    }\n                    timeDiff += dt;\n\n                    if (data.get("script.cycle")) {\n                        if (timeDiff / 5 > 1) {\n                            index = (index + 1) % 3;\n                            timeDiff = 0;\n                        }\n                        areaLight.enabled = index === 0;\n                        directionalLight.enabled = index === 1;\n                        lightOmni.enabled = index === 2;\n\n                        if (areaLightElement) {\n                            areaLightElement.ui.enabled = false;\n                            pointLightElement.ui.enabled = false;\n                            directionalLightElement.ui.enabled = false;\n                        }\n                    } else {\n                        if (areaLightElement) {\n                            areaLightElement.ui.enabled = true;\n                            pointLightElement.ui.enabled = true;\n                            directionalLightElement.ui.enabled = true;\n                        }\n\n                        areaLight.enabled = data.get("script.area.enabled");\n                        directionalLight.enabled = data.get(\n                            "script.directional.enabled"\n                        );\n                        lightOmni.enabled = data.get("script.point.enabled");\n                    }\n\n                    if (data.get("script.animate")) {\n                        time += dt;\n                        const x = Math.sin(time * 0.2);\n                        const z = Math.cos(time * 0.2);\n                        lightOmni.setLocalPosition(x * 4, 5, z * 4);\n                        directionalLight.setEulerAngles(65, 35 + time * 2, 0);\n                        areaLight.setEulerAngles(\n                            45,\n                            180 + (time * 0.2 * 180.0) / Math.PI,\n                            0\n                        );\n                        areaLight.setLocalPosition(-x * 4, 7, -z * 4);\n                    }\n\n                    // resize control panel to fit the content better\n                    if (resizeControlPanel) {\n                        const panel =\n                            window.top.document.getElementById("controlPanel");\n                        if (panel) {\n                            panel.style.width = "360px";\n                            resizeControlPanel = false;\n                        }\n                    }\n                });\n            });\n        });\n    }\n}\n',nameSlug:"contact-hardening-shadows",categorySlug:"graphics"},"grab-pass":{typeScriptFunction:"function example(canvas: HTMLCanvasElement, deviceType: string, files: { 'shader.vert': string, 'shader.frag': string }): void {\n\n    const assets = {\n        'normal': new pc.Asset('normal', 'texture', { url: '/static/assets/textures/normal-map.png' }),\n        \"roughness\": new pc.Asset(\"roughness\", \"texture\", { url: \"/static/assets/textures/pc-gray.png\" }),\n        'helipad': new pc.Asset('helipad-env-atlas', 'texture', { url: '/static/assets/cubemaps/helipad-env-atlas.png' }, { type: pc.TEXTURETYPE_RGBP, mipmaps: false })\n    };\n\n    const gfxOptions = {\n        deviceTypes: [deviceType],\n        glslangUrl: '/static/lib/glslang/glslang.js',\n        twgslUrl: '/static/lib/twgsl/twgsl.js'\n    };\n\n    pc.createGraphicsDevice(canvas, gfxOptions).then((device: pc.GraphicsDevice) => {\n\n        const createOptions = new pc.AppOptions();\n        createOptions.graphicsDevice = device;\n        createOptions.mouse = new pc.Mouse(document.body);\n        createOptions.touch = new pc.TouchDevice(document.body);\n\n        createOptions.componentSystems = [\n            // @ts-ignore\n            pc.RenderComponentSystem,\n            // @ts-ignore\n            pc.CameraComponentSystem\n        ];\n        createOptions.resourceHandlers = [\n            // @ts-ignore\n            pc.TextureHandler\n        ];\n\n        const app = new pc.AppBase(canvas);\n        app.init(createOptions);\n\n        // Set the canvas to fill the window and automatically change resolution to be the same as the canvas size\n        app.setCanvasFillMode(pc.FILLMODE_FILL_WINDOW);\n        app.setCanvasResolution(pc.RESOLUTION_AUTO);\n\n        const assetListLoader = new pc.AssetListLoader(Object.values(assets), app.assets);\n        assetListLoader.load(() => {\n\n            app.start();\n\n            // setup skydome\n            app.scene.skyboxMip = 0;\n            app.scene.exposure = 2;\n            app.scene.envAtlas = assets.helipad.resource;\n\n            app.scene.toneMapping = pc.TONEMAP_ACES;\n\n            // Depth layer is where the framebuffer is copied to a texture to be used in the following layers.\n            // Move the depth layer to take place after World and Skydome layers, to capture both of them.\n            const depthLayer = app.scene.layers.getLayerById(pc.LAYERID_DEPTH);\n            app.scene.layers.remove(depthLayer);\n            app.scene.layers.insertOpaque(depthLayer, 2);\n\n            // helper function to create a primitive with shape type, position, scale, color\n            function createPrimitive(primitiveType: string, position: pc.Vec3, scale: pc.Vec3, color: pc.Color) {\n                // create material of specified color\n                const material = new pc.StandardMaterial();\n                material.diffuse = color;\n                material.gloss = 0.6;\n                material.metalness = 0.4;\n                material.useMetalness = true;\n                material.update();\n\n                // create primitive\n                const primitive = new pc.Entity();\n                primitive.addComponent('render', {\n                    type: primitiveType,\n                    material: material\n                });\n\n                // set position and scale and add it to scene\n                primitive.setLocalPosition(position);\n                primitive.setLocalScale(scale);\n                app.root.addChild(primitive);\n\n                return primitive;\n            }\n\n            // create few primitives, keep their references to rotate them later\n            const primitives: any = [];\n            const count = 7;\n            const shapes = [\"box\", \"cone\", \"cylinder\", \"sphere\", \"capsule\"];\n            for (let i = 0; i < count; i++) {\n                const shapeName = shapes[Math.floor(Math.random() * shapes.length)];\n                const color = new pc.Color(Math.random(), Math.random(), Math.random());\n                const angle = 2 * Math.PI * i / count;\n                const pos = new pc.Vec3(12 * Math.sin(angle), 0, 12 * Math.cos(angle));\n                primitives.push(createPrimitive(shapeName, pos, new pc.Vec3(4, 8, 4), color));\n            }\n\n            // Create the camera, which renders entities\n            const camera = new pc.Entity(\"SceneCamera\");\n            camera.addComponent(\"camera\", {\n                clearColor: new pc.Color(0.2, 0.2, 0.2)\n            });\n            app.root.addChild(camera);\n            camera.setLocalPosition(0, 10, 20);\n            camera.lookAt(pc.Vec3.ZERO);\n\n            // enable the camera to render the scene's color map.\n            camera.camera.requestSceneColorMap(true);\n\n            // create a primitive which uses refraction shader to distort the view behind it\n            const glass = createPrimitive(\"box\", new pc.Vec3(1, 3, 0), new pc.Vec3(10, 10, 10), new pc.Color(1, 1, 1));\n            glass.render.castShadows = false;\n            glass.render.receiveShadows = false;\n\n            const shader = pc.createShaderFromCode(app.graphicsDevice, files['shader.vert'], files['shader.frag'], 'myShader');\n\n            // reflection material using the shader\n            const refractionMaterial = new pc.Material();\n            refractionMaterial.shader = shader;\n            glass.render.material = refractionMaterial;\n\n            // set an offset map on the material\n            refractionMaterial.setParameter('uOffsetMap', assets.normal.resource);\n\n            // set roughness map\n            refractionMaterial.setParameter('uRoughnessMap', assets.roughness.resource);\n\n            // tint colors\n            refractionMaterial.setParameter('tints[0]', new Float32Array([\n                1, 0.7, 0.7,    // red\n                1, 1, 1,        // white\n                0.7, 0.7, 1,    // blue\n                1, 1, 1         // white\n            ]));\n\n            // transparency\n            refractionMaterial.blendType = pc.BLEND_NORMAL;\n            refractionMaterial.update();\n\n            // update things each frame\n            let time = 0;\n            app.on(\"update\", function (dt) {\n                time += dt;\n\n                // rotate the primitives\n                primitives.forEach((prim: pc.Entity) => {\n                    prim.rotate(0.3, 0.2, 0.1);\n                });\n\n                glass.rotate(-0.1, 0.1, -0.15);\n\n                // orbit the camera\n                camera.setLocalPosition(20 * Math.sin(time * 0.2), 7, 20 * Math.cos(time * 0.2));\n                camera.lookAt(new pc.Vec3(0, 2, 0));\n            });\n        });\n    });\n}",javaScriptFunction:'function example(canvas, deviceType, files) {\n    const assets = {\n        normal: new pc.Asset("normal", "texture", {\n            url: "/static/assets/textures/normal-map.png",\n        }),\n        roughness: new pc.Asset("roughness", "texture", {\n            url: "/static/assets/textures/pc-gray.png",\n        }),\n        helipad: new pc.Asset(\n            "helipad-env-atlas",\n            "texture",\n            { url: "/static/assets/cubemaps/helipad-env-atlas.png" },\n            { type: pc.TEXTURETYPE_RGBP, mipmaps: false }\n        ),\n    };\n\n    const gfxOptions = {\n        deviceTypes: [deviceType],\n        glslangUrl: "/static/lib/glslang/glslang.js",\n        twgslUrl: "/static/lib/twgsl/twgsl.js",\n    };\n\n    pc.createGraphicsDevice(canvas, gfxOptions).then((device) => {\n        const createOptions = new pc.AppOptions();\n        createOptions.graphicsDevice = device;\n        createOptions.mouse = new pc.Mouse(document.body);\n        createOptions.touch = new pc.TouchDevice(document.body);\n\n        createOptions.componentSystems = [\n            // @ts-ignore\n            pc.RenderComponentSystem,\n            // @ts-ignore\n            pc.CameraComponentSystem,\n        ];\n\n        createOptions.resourceHandlers = [\n            // @ts-ignore\n            pc.TextureHandler,\n        ];\n\n        const app = new pc.AppBase(canvas);\n        app.init(createOptions);\n\n        // Set the canvas to fill the window and automatically change resolution to be the same as the canvas size\n        app.setCanvasFillMode(pc.FILLMODE_FILL_WINDOW);\n        app.setCanvasResolution(pc.RESOLUTION_AUTO);\n\n        const assetListLoader = new pc.AssetListLoader(\n            Object.values(assets),\n            app.assets\n        );\n        assetListLoader.load(() => {\n            app.start();\n\n            // setup skydome\n            app.scene.skyboxMip = 0;\n            app.scene.exposure = 2;\n            app.scene.envAtlas = assets.helipad.resource;\n\n            app.scene.toneMapping = pc.TONEMAP_ACES;\n\n            // Depth layer is where the framebuffer is copied to a texture to be used in the following layers.\n            // Move the depth layer to take place after World and Skydome layers, to capture both of them.\n            const depthLayer = app.scene.layers.getLayerById(pc.LAYERID_DEPTH);\n            app.scene.layers.remove(depthLayer);\n            app.scene.layers.insertOpaque(depthLayer, 2);\n\n            // helper function to create a primitive with shape type, position, scale, color\n            function createPrimitive(primitiveType, position, scale, color) {\n                // create material of specified color\n                const material = new pc.StandardMaterial();\n                material.diffuse = color;\n                material.gloss = 0.6;\n                material.metalness = 0.4;\n                material.useMetalness = true;\n                material.update();\n\n                // create primitive\n                const primitive = new pc.Entity();\n                primitive.addComponent("render", {\n                    type: primitiveType,\n                    material: material,\n                });\n\n                // set position and scale and add it to scene\n                primitive.setLocalPosition(position);\n                primitive.setLocalScale(scale);\n                app.root.addChild(primitive);\n\n                return primitive;\n            }\n\n            // create few primitives, keep their references to rotate them later\n            const primitives = [];\n            const count = 7;\n            const shapes = ["box", "cone", "cylinder", "sphere", "capsule"];\n            for (let i = 0; i < count; i++) {\n                const shapeName =\n                    shapes[Math.floor(Math.random() * shapes.length)];\n                const color = new pc.Color(\n                    Math.random(),\n                    Math.random(),\n                    Math.random()\n                );\n                const angle = (2 * Math.PI * i) / count;\n                const pos = new pc.Vec3(\n                    12 * Math.sin(angle),\n                    0,\n                    12 * Math.cos(angle)\n                );\n                primitives.push(\n                    createPrimitive(shapeName, pos, new pc.Vec3(4, 8, 4), color)\n                );\n            }\n\n            // Create the camera, which renders entities\n            const camera = new pc.Entity("SceneCamera");\n            camera.addComponent("camera", {\n                clearColor: new pc.Color(0.2, 0.2, 0.2),\n            });\n            app.root.addChild(camera);\n            camera.setLocalPosition(0, 10, 20);\n            camera.lookAt(pc.Vec3.ZERO);\n\n            // enable the camera to render the scene\'s color map.\n            camera.camera.requestSceneColorMap(true);\n\n            // create a primitive which uses refraction shader to distort the view behind it\n            const glass = createPrimitive(\n                "box",\n                new pc.Vec3(1, 3, 0),\n                new pc.Vec3(10, 10, 10),\n                new pc.Color(1, 1, 1)\n            );\n            glass.render.castShadows = false;\n            glass.render.receiveShadows = false;\n\n            const shader = pc.createShaderFromCode(\n                app.graphicsDevice,\n                files["shader.vert"],\n                files["shader.frag"],\n                "myShader"\n            );\n\n            // reflection material using the shader\n            const refractionMaterial = new pc.Material();\n            refractionMaterial.shader = shader;\n            glass.render.material = refractionMaterial;\n\n            // set an offset map on the material\n            refractionMaterial.setParameter(\n                "uOffsetMap",\n                assets.normal.resource\n            );\n\n            // set roughness map\n            refractionMaterial.setParameter(\n                "uRoughnessMap",\n                assets.roughness.resource\n            );\n\n            // tint colors\n            refractionMaterial.setParameter(\n                "tints[0]",\n                new Float32Array([\n                    1,\n                    0.7,\n                    0.7, // red\n                    1,\n                    1,\n                    1, // white\n                    0.7,\n                    0.7,\n                    1, // blue\n                    1,\n                    1,\n                    1, // white\n                ])\n            );\n\n            // transparency\n            refractionMaterial.blendType = pc.BLEND_NORMAL;\n            refractionMaterial.update();\n\n            // update things each frame\n            let time = 0;\n            app.on("update", function (dt) {\n                time += dt;\n\n                // rotate the primitives\n                primitives.forEach((prim) => {\n                    prim.rotate(0.3, 0.2, 0.1);\n                });\n\n                glass.rotate(-0.1, 0.1, -0.15);\n\n                // orbit the camera\n                camera.setLocalPosition(\n                    20 * Math.sin(time * 0.2),\n                    7,\n                    20 * Math.cos(time * 0.2)\n                );\n                camera.lookAt(new pc.Vec3(0, 2, 0));\n            });\n        });\n    });\n}\n',nameSlug:"grab-pass",categorySlug:"graphics",files:{"shader.vert":"\n            attribute vec3 vertex_position;\n            attribute vec2 vertex_texCoord0;\n\n            uniform mat4 matrix_model;\n            uniform mat4 matrix_viewProjection;\n\n            varying vec2 texCoord;\n\n            void main(void)\n            {\n                // project the position\n                vec4 pos = matrix_model * vec4(vertex_position, 1.0);\n                gl_Position = matrix_viewProjection * pos;\n\n                texCoord = vertex_texCoord0;\n            }\n        ","shader.frag":"\n            // use the special uSceneColorMap texture, which is a built-in texture containing\n            // a copy of the color buffer at the point of capture, inside the Depth layer.\n            uniform sampler2D uSceneColorMap;\n\n            // normal map providing offsets\n            uniform sampler2D uOffsetMap;\n\n            // roughness map\n            uniform sampler2D uRoughnessMap;\n\n            // tint colors\n            uniform vec3 tints[4];\n\n            // engine built-in constant storing render target size in .xy and inverse size in .zw\n            uniform vec4 uScreenSize;\n\n            varying vec2 texCoord;\n\n            void main(void)\n            {\n                float roughness = 1.0 - texture2D(uRoughnessMap, texCoord).r;\n\n                // sample offset texture - used to add distortion to the sampled background\n                vec2 offset = texture2D(uOffsetMap, texCoord).rg;\n                offset = 2.0 * offset - 1.0;\n\n                // offset strength\n                offset *= (0.2 + roughness) * 0.015;\n\n                // get normalized uv coordinates for canvas\n                vec2 grabUv = gl_FragCoord.xy * uScreenSize.zw;\n\n                // roughness dictates which mipmap level gets used, in 0..4 range\n                float mipmap = roughness * 5.0;\n\n                // get background pixel color with distorted offset\n                vec3 grabColor = texture2DLodEXT(uSceneColorMap, grabUv + offset, mipmap).rgb;\n\n                // tint the material based on mipmap, on WebGL2 only, as WebGL1 does not support non-constant array indexing\n                // (note - this could be worked around by using a series of if statements in this case)\n                #ifdef GL2\n                    float tintIndex = clamp(mipmap, 0.0, 3.0);\n                    grabColor *= tints[int(tintIndex)];\n                #endif\n\n                // brighten the refracted texture a little bit\n                // brighten even more the rough parts of the glass\n                gl_FragColor = vec4(grabColor * 1.1, 1.0) + roughness * 0.09;\n            }\n        "}},"ground-fog":{typeScriptFunction:"function example(canvas: HTMLCanvasElement, deviceType: string, files: { 'shader.vert': string, 'shader.frag': string }, data: any): void {\n\n    const assets = {\n        'script': new pc.Asset('script', 'script', { url: '/static/scripts/camera/orbit-camera.js' }),\n        'terrain': new pc.Asset('terrain', 'container', { url: '/static/assets/models/terrain.glb' }),\n        'helipad': new pc.Asset('helipad-env-atlas', 'texture', { url: '/static/assets/cubemaps/helipad-env-atlas.png' }, { type: pc.TEXTURETYPE_RGBP, mipmaps: false }),\n        'texture': new pc.Asset('color', 'texture', { url: '/static/assets/textures/clouds.jpg' })\n    };\n\n    const gfxOptions = {\n        deviceTypes: [deviceType],\n        glslangUrl: '/static/lib/glslang/glslang.js',\n        twgslUrl: '/static/lib/twgsl/twgsl.js'\n    };\n\n    pc.createGraphicsDevice(canvas, gfxOptions).then((device: pc.GraphicsDevice) => {\n\n        const createOptions = new pc.AppOptions();\n        createOptions.graphicsDevice = device;\n        createOptions.mouse = new pc.Mouse(document.body);\n        createOptions.touch = new pc.TouchDevice(document.body);\n\n        createOptions.componentSystems = [\n            // @ts-ignore\n            pc.RenderComponentSystem,\n            // @ts-ignore\n            pc.CameraComponentSystem,\n            // @ts-ignore\n            pc.LightComponentSystem,\n            // @ts-ignore\n            pc.ScriptComponentSystem\n        ];\n        createOptions.resourceHandlers = [\n            // @ts-ignore\n            pc.TextureHandler,\n            // @ts-ignore\n            pc.ContainerHandler,\n            // @ts-ignore\n            pc.ScriptHandler\n        ];\n\n        const app = new pc.AppBase(canvas);\n        app.init(createOptions);\n\n        // Set the canvas to fill the window and automatically change resolution to be the same as the canvas size\n        app.setCanvasFillMode(pc.FILLMODE_FILL_WINDOW);\n        app.setCanvasResolution(pc.RESOLUTION_AUTO);\n\n        const assetListLoader = new pc.AssetListLoader(Object.values(assets), app.assets);\n        assetListLoader.load(() => {\n\n            app.start();\n\n            window.addEventListener(\"resize\", function () {\n                app.resizeCanvas(canvas.width, canvas.height);\n            });\n\n            data.set('data', {\n                softness: true\n            });\n\n            // setup skydome\n            app.scene.skyboxMip = 3;\n            app.scene.envAtlas = assets.helipad.resource;\n            app.scene.skyboxRotation = new pc.Quat().setFromEulerAngles(0, -70, 0);\n            app.scene.toneMapping = pc.TONEMAP_ACES;\n\n            // disable skydome rendering\n            const skyLayer = app.scene.layers.getLayerById(pc.LAYERID_SKYBOX);\n            skyLayer.enabled = false;\n\n            // instantiate the terrain\n            const terrain = assets.terrain.resource.instantiateRenderEntity();\n            terrain.setLocalScale(30, 30, 30);\n            app.root.addChild(terrain);\n\n            // find a tree in the middle to use as a focus point\n            const tree = terrain.findOne(\"name\", \"Arbol 2.002\");\n\n            // create an Entity with a camera component\n            const camera = new pc.Entity();\n            camera.addComponent(\"camera\", {\n                clearColor: new pc.Color(150 / 255, 213 / 255, 63 / 255),\n                farClip: 1000\n            });\n\n            // and position it in the world\n            camera.setLocalPosition(-200, 120, 225);\n\n            // add orbit camera script with a mouse and a touch support\n            camera.addComponent(\"script\");\n            camera.script.create(\"orbitCamera\", {\n                attributes: {\n                    inertiaFactor: 0.2,\n                    focusEntity: tree,\n                    distanceMax: 600\n                }\n            });\n            camera.script.create(\"orbitCameraInputMouse\");\n            camera.script.create(\"orbitCameraInputTouch\");\n            app.root.addChild(camera);\n\n            // enable the camera to render the scene's depth map.\n            camera.camera.requestSceneDepthMap(true);\n\n            // Create a directional light casting cascaded shadows\n            const dirLight = new pc.Entity();\n            dirLight.addComponent(\"light\", {\n                type: \"directional\",\n                color: pc.Color.WHITE,\n                shadowBias: 0.3,\n                normalOffsetBias: 0.2,\n                intensity: 1.0,\n\n                // enable shadow casting\n                castShadows: true,\n                shadowDistance: 1000,\n                shadowResolution: 2048,\n                shadowType: pc.SHADOW_PCF3\n            });\n            app.root.addChild(dirLight);\n            dirLight.setLocalEulerAngles(45, 350, 20);\n\n            // create a custom fog shader\n            // @ts-ignore\n            const vertex = `#define VERTEXSHADER\\n` + pc.shaderChunks.screenDepthPS + files['shader.vert'];\n            // @ts-ignore\n            const fragment = pc.shaderChunks.screenDepthPS + files['shader.frag'];\n            const shader = pc.createShaderFromCode(app.graphicsDevice, vertex, fragment, 'GroundFogShader');\n\n            // and set up a material using this shader\n            const material = new pc.Material();\n            material.shader = shader;\n            material.setParameter('uTexture', assets.texture.resource);\n            material.depthWrite = false;\n            material.blendType = pc.BLEND_NORMAL;\n            material.update();\n\n            // create a subdivided plane mesh, to allow for vertex animation by the shader\n            const mesh = pc.createPlane(app.graphicsDevice, { widthSegments: 20, lengthSegments: 20 });\n            const meshInstance = new pc.MeshInstance(mesh, material);\n            const ground = new pc.Entity();\n            ground.addComponent(\"render\", {\n                meshInstances: [meshInstance],\n                material: material,\n                castShadows: false,\n                receiveShadows: false\n            });\n            ground.setLocalScale(500, 1, 500);\n            ground.setLocalPosition(0, 25, 0);\n            app.root.addChild(ground);\n\n            let firstFrame = true;\n            let currentTime = 0;\n            app.on(\"update\", function (dt) {\n\n                // on the first frame, when camera is updated, move it further away from the focus tree\n                if (firstFrame) {\n                    firstFrame = false;\n                    // @ts-ignore engine-tsd\n                    camera.script.orbitCamera.distance = 320;\n                }\n\n                // Update the time and pass it to shader\n                currentTime += dt;\n                material.setParameter('uTime', currentTime);\n\n                // based on sofness toggle, set shader parameter\n                material.setParameter('uSoftening', data.get('data.softness') ? 50 : 1000);\n\n                // debug rendering of the deptht texture in the corner\n                app.drawDepthTexture(0.7, -0.7, 0.5, -0.5);\n            });\n        });\n    });\n}",javaScriptFunction:'function example(canvas, deviceType, files, data) {\n    const assets = {\n        script: new pc.Asset("script", "script", {\n            url: "/static/scripts/camera/orbit-camera.js",\n        }),\n        terrain: new pc.Asset("terrain", "container", {\n            url: "/static/assets/models/terrain.glb",\n        }),\n        helipad: new pc.Asset(\n            "helipad-env-atlas",\n            "texture",\n            { url: "/static/assets/cubemaps/helipad-env-atlas.png" },\n            { type: pc.TEXTURETYPE_RGBP, mipmaps: false }\n        ),\n        texture: new pc.Asset("color", "texture", {\n            url: "/static/assets/textures/clouds.jpg",\n        }),\n    };\n\n    const gfxOptions = {\n        deviceTypes: [deviceType],\n        glslangUrl: "/static/lib/glslang/glslang.js",\n        twgslUrl: "/static/lib/twgsl/twgsl.js",\n    };\n\n    pc.createGraphicsDevice(canvas, gfxOptions).then((device) => {\n        const createOptions = new pc.AppOptions();\n        createOptions.graphicsDevice = device;\n        createOptions.mouse = new pc.Mouse(document.body);\n        createOptions.touch = new pc.TouchDevice(document.body);\n\n        createOptions.componentSystems = [\n            // @ts-ignore\n            pc.RenderComponentSystem,\n            // @ts-ignore\n            pc.CameraComponentSystem,\n            // @ts-ignore\n            pc.LightComponentSystem,\n            // @ts-ignore\n            pc.ScriptComponentSystem,\n        ];\n\n        createOptions.resourceHandlers = [\n            // @ts-ignore\n            pc.TextureHandler,\n            // @ts-ignore\n            pc.ContainerHandler,\n            // @ts-ignore\n            pc.ScriptHandler,\n        ];\n\n        const app = new pc.AppBase(canvas);\n        app.init(createOptions);\n\n        // Set the canvas to fill the window and automatically change resolution to be the same as the canvas size\n        app.setCanvasFillMode(pc.FILLMODE_FILL_WINDOW);\n        app.setCanvasResolution(pc.RESOLUTION_AUTO);\n\n        const assetListLoader = new pc.AssetListLoader(\n            Object.values(assets),\n            app.assets\n        );\n        assetListLoader.load(() => {\n            app.start();\n\n            window.addEventListener("resize", function () {\n                app.resizeCanvas(canvas.width, canvas.height);\n            });\n\n            data.set("data", {\n                softness: true,\n            });\n\n            // setup skydome\n            app.scene.skyboxMip = 3;\n            app.scene.envAtlas = assets.helipad.resource;\n            app.scene.skyboxRotation = new pc.Quat().setFromEulerAngles(\n                0,\n                -70,\n                0\n            );\n            app.scene.toneMapping = pc.TONEMAP_ACES;\n\n            // disable skydome rendering\n            const skyLayer = app.scene.layers.getLayerById(pc.LAYERID_SKYBOX);\n            skyLayer.enabled = false;\n\n            // instantiate the terrain\n            const terrain = assets.terrain.resource.instantiateRenderEntity();\n            terrain.setLocalScale(30, 30, 30);\n            app.root.addChild(terrain);\n\n            // find a tree in the middle to use as a focus point\n            const tree = terrain.findOne("name", "Arbol 2.002");\n\n            // create an Entity with a camera component\n            const camera = new pc.Entity();\n            camera.addComponent("camera", {\n                clearColor: new pc.Color(150 / 255, 213 / 255, 63 / 255),\n                farClip: 1000,\n            });\n\n            // and position it in the world\n            camera.setLocalPosition(-200, 120, 225);\n\n            // add orbit camera script with a mouse and a touch support\n            camera.addComponent("script");\n            camera.script.create("orbitCamera", {\n                attributes: {\n                    inertiaFactor: 0.2,\n                    focusEntity: tree,\n                    distanceMax: 600,\n                },\n            });\n            camera.script.create("orbitCameraInputMouse");\n            camera.script.create("orbitCameraInputTouch");\n            app.root.addChild(camera);\n\n            // enable the camera to render the scene\'s depth map.\n            camera.camera.requestSceneDepthMap(true);\n\n            // Create a directional light casting cascaded shadows\n            const dirLight = new pc.Entity();\n            dirLight.addComponent("light", {\n                type: "directional",\n                color: pc.Color.WHITE,\n                shadowBias: 0.3,\n                normalOffsetBias: 0.2,\n                intensity: 1.0,\n\n                // enable shadow casting\n                castShadows: true,\n                shadowDistance: 1000,\n                shadowResolution: 2048,\n                shadowType: pc.SHADOW_PCF3,\n            });\n            app.root.addChild(dirLight);\n            dirLight.setLocalEulerAngles(45, 350, 20);\n\n            // create a custom fog shader\n            // @ts-ignore\n            const vertex =\n                `#define VERTEXSHADER\\n` +\n                pc.shaderChunks.screenDepthPS +\n                files["shader.vert"];\n            // @ts-ignore\n            const fragment =\n                pc.shaderChunks.screenDepthPS + files["shader.frag"];\n            const shader = pc.createShaderFromCode(\n                app.graphicsDevice,\n                vertex,\n                fragment,\n                "GroundFogShader"\n            );\n\n            // and set up a material using this shader\n            const material = new pc.Material();\n            material.shader = shader;\n            material.setParameter("uTexture", assets.texture.resource);\n            material.depthWrite = false;\n            material.blendType = pc.BLEND_NORMAL;\n            material.update();\n\n            // create a subdivided plane mesh, to allow for vertex animation by the shader\n            const mesh = pc.createPlane(app.graphicsDevice, {\n                widthSegments: 20,\n                lengthSegments: 20,\n            });\n            const meshInstance = new pc.MeshInstance(mesh, material);\n            const ground = new pc.Entity();\n            ground.addComponent("render", {\n                meshInstances: [meshInstance],\n                material: material,\n                castShadows: false,\n                receiveShadows: false,\n            });\n            ground.setLocalScale(500, 1, 500);\n            ground.setLocalPosition(0, 25, 0);\n            app.root.addChild(ground);\n\n            let firstFrame = true;\n            let currentTime = 0;\n            app.on("update", function (dt) {\n                // on the first frame, when camera is updated, move it further away from the focus tree\n                if (firstFrame) {\n                    firstFrame = false;\n                    // @ts-ignore engine-tsd\n                    camera.script.orbitCamera.distance = 320;\n                }\n\n                // Update the time and pass it to shader\n                currentTime += dt;\n                material.setParameter("uTime", currentTime);\n\n                // based on sofness toggle, set shader parameter\n                material.setParameter(\n                    "uSoftening",\n                    data.get("data.softness") ? 50 : 1000\n                );\n\n                // debug rendering of the deptht texture in the corner\n                app.drawDepthTexture(0.7, -0.7, 0.5, -0.5);\n            });\n        });\n    });\n}\n',nameSlug:"ground-fog",categorySlug:"graphics",files:{"shader.vert":"\n            attribute vec3 vertex_position;\n            attribute vec2 vertex_texCoord0;\n\n            uniform mat4 matrix_model;\n            uniform mat4 matrix_viewProjection;\n            uniform float uTime;\n            uniform sampler2D uTexture;\n\n            varying vec2 texCoord0;\n            varying vec2 texCoord1;\n            varying vec2 texCoord2;\n            varying vec4 screenPos;\n            varying float depth;\n\n            void main(void)\n            {\n                // 3 scrolling texture coordinates with different direction and speed\n                texCoord0 = vertex_texCoord0 * 2.0 + vec2(uTime * 0.003, uTime * 0.01);\n                texCoord1 = vertex_texCoord0 * 1.5 + vec2(uTime * -0.02, uTime * 0.02);\n                texCoord2 = vertex_texCoord0 * 1.0 + vec2(uTime * 0.01, uTime * -0.003);\n\n                // sample the fog texture to have elevation for this vertex\n                vec2 offsetTexCoord = vertex_texCoord0 + vec2(uTime * 0.001, uTime * -0.0003);\n                float offset = texture2D(uTexture, offsetTexCoord).r;\n\n                // vertex in the world space\n                vec4 pos = matrix_model * vec4(vertex_position, 1.0);\n\n                // move it up based on the offset\n                pos.y += offset * 25.0;\n\n                // position in projected (screen) space\n                vec4 projPos = matrix_viewProjection * pos;\n                gl_Position = projPos;\n\n                // the linear depth of the vertex (in camera space)\n                depth = getLinearDepth(pos.xyz);\n\n                // screen fragment position, used to sample the depth texture\n                screenPos = projPos;\n            }\n        ","shader.frag":"\n            uniform sampler2D uTexture;\n            uniform float uSoftening;\n\n            varying vec2 texCoord0;\n            varying vec2 texCoord1;\n            varying vec2 texCoord2;\n            varying vec4 screenPos;\n            varying float depth;\n            \n            void main(void)\n            {\n                // sample the texture 3 times and compute average intensity of the fog\n                vec4 diffusTexture0 = texture2D (uTexture, texCoord0);\n                vec4 diffusTexture1 = texture2D (uTexture, texCoord1);\n                vec4 diffusTexture2 = texture2D (uTexture, texCoord2);\n                float alpha = 0.5 * (diffusTexture0.r + diffusTexture1.r + diffusTexture2.r);\n\n                // use built-in getGrabScreenPos function to convert screen position to grab texture uv coords\n                vec2 screenCoord = getGrabScreenPos(screenPos);\n\n                // read the depth from the depth buffer\n                float sceneDepth = getLinearScreenDepth(screenCoord) * camera_params.x;\n\n                // depth of the current fragment (on the fog plane)\n                float fragmentDepth = depth * camera_params.x;\n\n                // difference between these two depths is used to adjust the alpha, to fade out\n                // the fog near the geometry\n                float depthDiff = clamp(abs(fragmentDepth - sceneDepth) * uSoftening, 0.0, 1.0);\n                alpha *= smoothstep(0.0, 1.0, depthDiff);\n\n                // final color\n                vec3 fogColor = vec3(1.0, 1.0, 1.0);\n                gl_FragColor = vec4(fogColor, alpha);\n            }\n        "}},"hardware-instancing":{typeScriptFunction:"function example(canvas: HTMLCanvasElement, deviceType: string): void {\n\n    const assets = {\n        helipad: new pc.Asset('helipad-env-atlas', 'texture', { url: '/static/assets/cubemaps/helipad-env-atlas.png' }, { type: pc.TEXTURETYPE_RGBP, mipmaps: false })\n    };\n\n    const gfxOptions = {\n        deviceTypes: [deviceType],\n        glslangUrl: '/static/lib/glslang/glslang.js',\n        twgslUrl: '/static/lib/twgsl/twgsl.js'\n    };\n\n    pc.createGraphicsDevice(canvas, gfxOptions).then((device: pc.GraphicsDevice) => {\n\n        const createOptions = new pc.AppOptions();\n        createOptions.graphicsDevice = device;\n\n        createOptions.componentSystems = [\n            // @ts-ignore\n            pc.RenderComponentSystem,\n            // @ts-ignore\n            pc.CameraComponentSystem\n        ];\n        createOptions.resourceHandlers = [\n            // @ts-ignore\n            pc.TextureHandler\n        ];\n\n        const app = new pc.AppBase(canvas);\n        app.init(createOptions);\n\n        // Set the canvas to fill the window and automatically change resolution to be the same as the canvas size\n        app.setCanvasFillMode(pc.FILLMODE_FILL_WINDOW);\n        app.setCanvasResolution(pc.RESOLUTION_AUTO);\n\n        const assetListLoader = new pc.AssetListLoader(Object.values(assets), app.assets);\n        assetListLoader.load(() => {\n\n            app.start();\n\n            // setup skydome\n            app.scene.skyboxMip = 2;\n            app.scene.exposure = 0.3;\n            app.scene.envAtlas = assets.helipad.resource;\n\n            // set up some general scene rendering properties\n            app.scene.toneMapping = pc.TONEMAP_ACES;\n\n            app.scene.ambientLight = new pc.Color(0.1, 0.1, 0.1);\n\n            // Create an Entity with a camera component\n            const camera = new pc.Entity();\n            camera.addComponent(\"camera\", {\n            });\n            app.root.addChild(camera);\n\n            // Move the camera back to see the cubes\n            camera.translate(0, 0, 10);\n\n            // create standard material and enable instancing on it\n            const material = new pc.StandardMaterial();\n            material.gloss = 0.6;\n            material.metalness = 0.7;\n            material.useMetalness = true;\n            material.update();\n\n            // Create a Entity with a cylinder render component and the instancing material\n            const cylinder = new pc.Entity(\"InstancingEntity\");\n            cylinder.addComponent(\"render\", {\n                material: material,\n                type: \"cylinder\"\n            });\n\n            // add the cylinder entity to the hierarchy\n            app.root.addChild(cylinder);\n\n            if (app.graphicsDevice.supportsInstancing) {\n                // number of instances to render\n                const instanceCount = 1000;\n\n                // store matrices for individual instances into array\n                const matrices = new Float32Array(instanceCount * 16);\n                let matrixIndex = 0;\n\n                const radius = 5;\n                const pos = new pc.Vec3();\n                const rot = new pc.Quat();\n                const scl = new pc.Vec3();\n                const matrix = new pc.Mat4();\n\n                for (let i = 0; i < instanceCount; i++) {\n                    // generate random positions / scales and rotations\n                    pos.set(Math.random() * radius - radius * 0.5, Math.random() * radius - radius * 0.5, Math.random() * radius - radius * 0.5);\n                    scl.set(0.1 + Math.random() * 0.1, 0.1 + Math.random() * 0.3, 0.1 + Math.random() * 0.1);\n                    rot.setFromEulerAngles(i * 30, i * 50, i * 70);\n                    matrix.setTRS(pos, rot, scl);\n\n                    // copy matrix elements into array of floats\n                    for (let m = 0; m < 16; m++)\n                        matrices[matrixIndex++] = matrix.data[m];\n                }\n\n                // create static vertex buffer containing the matrices\n                const vertexBuffer = new pc.VertexBuffer(app.graphicsDevice, pc.VertexFormat.getDefaultInstancingFormat(app.graphicsDevice),\n                                                         instanceCount, pc.BUFFER_STATIC, matrices);\n\n                // initialize instancing using the vertex buffer on meshInstance of the created cylinder\n                const cylinderMeshInst = cylinder.render.meshInstances[0];\n                cylinderMeshInst.setInstancing(vertexBuffer);\n            }\n\n            // Set an update function on the app's update event\n            let angle = 0;\n            app.on(\"update\", function (dt) {\n                // orbit camera around\n                angle += dt * 0.2;\n                camera.setLocalPosition(8 * Math.sin(angle), 0, 8 * Math.cos(angle));\n                camera.lookAt(pc.Vec3.ZERO);\n            });\n        });\n    }).catch(console.error);\n}",javaScriptFunction:'function example(canvas, deviceType) {\n    const assets = {\n        helipad: new pc.Asset(\n            "helipad-env-atlas",\n            "texture",\n            { url: "/static/assets/cubemaps/helipad-env-atlas.png" },\n            { type: pc.TEXTURETYPE_RGBP, mipmaps: false }\n        ),\n    };\n\n    const gfxOptions = {\n        deviceTypes: [deviceType],\n        glslangUrl: "/static/lib/glslang/glslang.js",\n        twgslUrl: "/static/lib/twgsl/twgsl.js",\n    };\n\n    pc.createGraphicsDevice(canvas, gfxOptions)\n        .then((device) => {\n            const createOptions = new pc.AppOptions();\n            createOptions.graphicsDevice = device;\n\n            createOptions.componentSystems = [\n                // @ts-ignore\n                pc.RenderComponentSystem,\n                // @ts-ignore\n                pc.CameraComponentSystem,\n            ];\n\n            createOptions.resourceHandlers = [\n                // @ts-ignore\n                pc.TextureHandler,\n            ];\n\n            const app = new pc.AppBase(canvas);\n            app.init(createOptions);\n\n            // Set the canvas to fill the window and automatically change resolution to be the same as the canvas size\n            app.setCanvasFillMode(pc.FILLMODE_FILL_WINDOW);\n            app.setCanvasResolution(pc.RESOLUTION_AUTO);\n\n            const assetListLoader = new pc.AssetListLoader(\n                Object.values(assets),\n                app.assets\n            );\n            assetListLoader.load(() => {\n                app.start();\n\n                // setup skydome\n                app.scene.skyboxMip = 2;\n                app.scene.exposure = 0.3;\n                app.scene.envAtlas = assets.helipad.resource;\n\n                // set up some general scene rendering properties\n                app.scene.toneMapping = pc.TONEMAP_ACES;\n\n                app.scene.ambientLight = new pc.Color(0.1, 0.1, 0.1);\n\n                // Create an Entity with a camera component\n                const camera = new pc.Entity();\n                camera.addComponent("camera", {});\n                app.root.addChild(camera);\n\n                // Move the camera back to see the cubes\n                camera.translate(0, 0, 10);\n\n                // create standard material and enable instancing on it\n                const material = new pc.StandardMaterial();\n                material.gloss = 0.6;\n                material.metalness = 0.7;\n                material.useMetalness = true;\n                material.update();\n\n                // Create a Entity with a cylinder render component and the instancing material\n                const cylinder = new pc.Entity("InstancingEntity");\n                cylinder.addComponent("render", {\n                    material: material,\n                    type: "cylinder",\n                });\n\n                // add the cylinder entity to the hierarchy\n                app.root.addChild(cylinder);\n\n                if (app.graphicsDevice.supportsInstancing) {\n                    // number of instances to render\n                    const instanceCount = 1000;\n\n                    // store matrices for individual instances into array\n                    const matrices = new Float32Array(instanceCount * 16);\n                    let matrixIndex = 0;\n\n                    const radius = 5;\n                    const pos = new pc.Vec3();\n                    const rot = new pc.Quat();\n                    const scl = new pc.Vec3();\n                    const matrix = new pc.Mat4();\n\n                    for (let i = 0; i < instanceCount; i++) {\n                        // generate random positions / scales and rotations\n                        pos.set(\n                            Math.random() * radius - radius * 0.5,\n                            Math.random() * radius - radius * 0.5,\n                            Math.random() * radius - radius * 0.5\n                        );\n                        scl.set(\n                            0.1 + Math.random() * 0.1,\n                            0.1 + Math.random() * 0.3,\n                            0.1 + Math.random() * 0.1\n                        );\n                        rot.setFromEulerAngles(i * 30, i * 50, i * 70);\n                        matrix.setTRS(pos, rot, scl);\n\n                        // copy matrix elements into array of floats\n                        for (let m = 0; m < 16; m++)\n                            matrices[matrixIndex++] = matrix.data[m];\n                    }\n\n                    // create static vertex buffer containing the matrices\n                    const vertexBuffer = new pc.VertexBuffer(\n                        app.graphicsDevice,\n                        pc.VertexFormat.getDefaultInstancingFormat(\n                            app.graphicsDevice\n                        ),\n                        instanceCount,\n                        pc.BUFFER_STATIC,\n                        matrices\n                    );\n\n                    // initialize instancing using the vertex buffer on meshInstance of the created cylinder\n                    const cylinderMeshInst = cylinder.render.meshInstances[0];\n                    cylinderMeshInst.setInstancing(vertexBuffer);\n                }\n\n                // Set an update function on the app\'s update event\n                let angle = 0;\n                app.on("update", function (dt) {\n                    // orbit camera around\n                    angle += dt * 0.2;\n                    camera.setLocalPosition(\n                        8 * Math.sin(angle),\n                        0,\n                        8 * Math.cos(angle)\n                    );\n                    camera.lookAt(pc.Vec3.ZERO);\n                });\n            });\n        })\n        .catch(console.error);\n}\n',nameSlug:"hardware-instancing",categorySlug:"graphics"},hierarchy:{typeScriptFunction:'function example(canvas: HTMLCanvasElement, deviceType: string): void {\n\n    const gfxOptions = {\n        deviceTypes: [deviceType],\n        glslangUrl: \'/static/lib/glslang/glslang.js\',\n        twgslUrl: \'/static/lib/twgsl/twgsl.js\'\n    };\n\n    pc.createGraphicsDevice(canvas, gfxOptions).then((device: pc.GraphicsDevice) => {\n\n        const createOptions = new pc.AppOptions();\n        createOptions.graphicsDevice = device;\n\n        createOptions.componentSystems = [\n            // @ts-ignore\n            pc.RenderComponentSystem,\n            // @ts-ignore\n            pc.CameraComponentSystem,\n            // @ts-ignore\n            pc.LightComponentSystem\n        ];\n\n        const app = new pc.AppBase(canvas);\n        app.init(createOptions);\n\n        // Set the canvas to fill the window and automatically change resolution to be the same as the canvas size\n        app.setCanvasFillMode(pc.FILLMODE_FILL_WINDOW);\n        app.setCanvasResolution(pc.RESOLUTION_AUTO);\n\n        app.start();\n\n        app.scene.ambientLight = new pc.Color(0.2, 0.2, 0.2);\n\n        // helper function to create a primitive with shape type, position, scale\n        function createPrimitive(primitiveType: string, position: pc.Vec3, scale: pc.Vec3) {\n            // create material of random color\n            const material = new pc.StandardMaterial();\n            material.diffuse = new pc.Color(Math.random(), Math.random(), Math.random());\n            material.update();\n\n            // create primitive with a render component\n            const primitive = new pc.Entity();\n            primitive.addComponent(\'render\', {\n                type: primitiveType,\n                material: material\n            });\n\n            // set position and scale\n            primitive.setLocalPosition(position);\n            primitive.setLocalScale(scale);\n\n            return primitive;\n        }\n\n        // list of all created entities\n        const entities: Array<pc.Entity> = [];\n\n        // helper recursive function to create a next layer of entities for a specified parent\n        function createChildren(parent: pc.Entity, gridSize: number, scale: number, scaleDelta: number, spacing: number, levels: number) {\n            if (levels >= 0) {\n                const offset = spacing * (gridSize - 1) * 0.5;\n                for (let x = 0; x < gridSize; x++) {\n                    for (let y = 0; y < gridSize; y++) {\n                        const shape = Math.random() < 0.5 ? "box" : "sphere";\n                        const position = new pc.Vec3(x * spacing - offset, spacing, y * spacing - offset);\n                        const entity = createPrimitive(shape, position, new pc.Vec3(scale, scale, scale));\n\n                        parent.addChild(entity);\n                        entities.push(entity);\n\n                        createChildren(entity, gridSize, scale - scaleDelta, scaleDelta, spacing * 0.7, levels - 1);\n                    }\n                }\n            }\n        }\n\n        // dummy root entity\n        const root = new pc.Entity();\n        app.root.addChild(root);\n\n        // generate hierarchy of children entities\n        const levels = 5;\n        const gridSize = 2;\n        const scale = 1.7;\n        const scaleDelta = 0.25;\n        const spacing = 7;\n        createChildren(root, gridSize, scale, scaleDelta, spacing, levels);\n        console.log("number of created entities: " + entities.length);\n\n        // Create main camera\n        const camera = new pc.Entity();\n        camera.addComponent("camera", {\n            clearColor: new pc.Color(0.1, 0.1, 0.1)\n        });\n        camera.setLocalPosition(90 * Math.sin(0), 40, 90 * Math.cos(0));\n        camera.lookAt(new pc.Vec3(0, 5, 0));\n        app.root.addChild(camera);\n\n        // Create an Entity with a omni light component\n        const light = new pc.Entity();\n        light.addComponent("light", {\n            type: "omni",\n            color: new pc.Color(1, 1, 1),\n            range: 150\n        });\n        light.translate(40, 60, 50);\n        app.root.addChild(light);\n\n        // update each frame\n        let time = 0;\n        app.on("update", function (dt) {\n            time += dt;\n\n            // rotation quaternion changing with time\n            const rot = new pc.Quat();\n            rot.setFromEulerAngles(time * 5, time * 13, time * 6);\n\n            // apply it to all entities\n            for (let e = 0; e < entities.length; e++) {\n                entities[e].setLocalRotation(rot);\n            }\n        });\n    });\n}',javaScriptFunction:'function example(canvas, deviceType) {\n    const gfxOptions = {\n        deviceTypes: [deviceType],\n        glslangUrl: "/static/lib/glslang/glslang.js",\n        twgslUrl: "/static/lib/twgsl/twgsl.js",\n    };\n\n    pc.createGraphicsDevice(canvas, gfxOptions).then((device) => {\n        const createOptions = new pc.AppOptions();\n        createOptions.graphicsDevice = device;\n\n        createOptions.componentSystems = [\n            // @ts-ignore\n            pc.RenderComponentSystem,\n            // @ts-ignore\n            pc.CameraComponentSystem,\n            // @ts-ignore\n            pc.LightComponentSystem,\n        ];\n\n        const app = new pc.AppBase(canvas);\n        app.init(createOptions);\n\n        // Set the canvas to fill the window and automatically change resolution to be the same as the canvas size\n        app.setCanvasFillMode(pc.FILLMODE_FILL_WINDOW);\n        app.setCanvasResolution(pc.RESOLUTION_AUTO);\n\n        app.start();\n\n        app.scene.ambientLight = new pc.Color(0.2, 0.2, 0.2);\n\n        // helper function to create a primitive with shape type, position, scale\n        function createPrimitive(primitiveType, position, scale) {\n            // create material of random color\n            const material = new pc.StandardMaterial();\n            material.diffuse = new pc.Color(\n                Math.random(),\n                Math.random(),\n                Math.random()\n            );\n            material.update();\n\n            // create primitive with a render component\n            const primitive = new pc.Entity();\n            primitive.addComponent("render", {\n                type: primitiveType,\n                material: material,\n            });\n\n            // set position and scale\n            primitive.setLocalPosition(position);\n            primitive.setLocalScale(scale);\n\n            return primitive;\n        }\n\n        // list of all created entities\n        const entities = [];\n\n        // helper recursive function to create a next layer of entities for a specified parent\n        function createChildren(\n            parent,\n            gridSize,\n            scale,\n            scaleDelta,\n            spacing,\n            levels\n        ) {\n            if (levels >= 0) {\n                const offset = spacing * (gridSize - 1) * 0.5;\n                for (let x = 0; x < gridSize; x++) {\n                    for (let y = 0; y < gridSize; y++) {\n                        const shape = Math.random() < 0.5 ? "box" : "sphere";\n                        const position = new pc.Vec3(\n                            x * spacing - offset,\n                            spacing,\n                            y * spacing - offset\n                        );\n                        const entity = createPrimitive(\n                            shape,\n                            position,\n                            new pc.Vec3(scale, scale, scale)\n                        );\n\n                        parent.addChild(entity);\n                        entities.push(entity);\n\n                        createChildren(\n                            entity,\n                            gridSize,\n                            scale - scaleDelta,\n                            scaleDelta,\n                            spacing * 0.7,\n                            levels - 1\n                        );\n                    }\n                }\n            }\n        }\n\n        // dummy root entity\n        const root = new pc.Entity();\n        app.root.addChild(root);\n\n        // generate hierarchy of children entities\n        const levels = 5;\n        const gridSize = 2;\n        const scale = 1.7;\n        const scaleDelta = 0.25;\n        const spacing = 7;\n        createChildren(root, gridSize, scale, scaleDelta, spacing, levels);\n        console.log("number of created entities: " + entities.length);\n\n        // Create main camera\n        const camera = new pc.Entity();\n        camera.addComponent("camera", {\n            clearColor: new pc.Color(0.1, 0.1, 0.1),\n        });\n        camera.setLocalPosition(90 * Math.sin(0), 40, 90 * Math.cos(0));\n        camera.lookAt(new pc.Vec3(0, 5, 0));\n        app.root.addChild(camera);\n\n        // Create an Entity with a omni light component\n        const light = new pc.Entity();\n        light.addComponent("light", {\n            type: "omni",\n            color: new pc.Color(1, 1, 1),\n            range: 150,\n        });\n        light.translate(40, 60, 50);\n        app.root.addChild(light);\n\n        // update each frame\n        let time = 0;\n        app.on("update", function (dt) {\n            time += dt;\n\n            // rotation quaternion changing with time\n            const rot = new pc.Quat();\n            rot.setFromEulerAngles(time * 5, time * 13, time * 6);\n\n            // apply it to all entities\n            for (let e = 0; e < entities.length; e++) {\n                entities[e].setLocalRotation(rot);\n            }\n        });\n    });\n}\n',nameSlug:"hierarchy",categorySlug:"graphics"},layers:{typeScriptFunction:"function example(canvas: HTMLCanvasElement, deviceType: string): void {\n\n    const gfxOptions = {\n        deviceTypes: [deviceType],\n        glslangUrl: '/static/lib/glslang/glslang.js',\n        twgslUrl: '/static/lib/twgsl/twgsl.js'\n    };\n\n    pc.createGraphicsDevice(canvas, gfxOptions).then((device: pc.GraphicsDevice) => {\n\n        const createOptions = new pc.AppOptions();\n        createOptions.graphicsDevice = device;\n\n        createOptions.componentSystems = [\n            // @ts-ignore\n            pc.RenderComponentSystem,\n            // @ts-ignore\n            pc.CameraComponentSystem,\n            // @ts-ignore\n            pc.LightComponentSystem\n        ];\n\n        const app = new pc.AppBase(canvas);\n        app.init(createOptions);\n\n        // Set the canvas to fill the window and automatically change resolution to be the same as the canvas size\n        app.setCanvasFillMode(pc.FILLMODE_FILL_WINDOW);\n        app.setCanvasResolution(pc.RESOLUTION_AUTO);\n\n        app.start();\n\n        app.scene.ambientLight = new pc.Color(0.2, 0.2, 0.2);\n\n        // Create a new layer to put in front of everything\n        const layer = new pc.Layer({\n            name: \"Front Layer\"\n        });\n\n        // get the world layer index\n        const worldLayer = app.scene.layers.getLayerByName(\"World\");\n        const idx = app.scene.layers.getTransparentIndex(worldLayer);\n\n        // insert the new layer after the world layer\n        app.scene.layers.insert(layer, idx + 1);\n\n        // Create an Entity with a camera component\n        // Make sure it renders both World and Front Layer\n        const camera = new pc.Entity();\n        camera.addComponent(\"camera\", {\n            clearColor: new pc.Color(0.4, 0.45, 0.5),\n            layers: [worldLayer.id, layer.id]\n        });\n        camera.translate(0, 0, 24);\n        app.root.addChild(camera);\n\n        // Create an Entity with a omni light component\n        // Make sure it lights both World and Front Layer\n        const light = new pc.Entity();\n        light.addComponent('light', {\n            type: 'omni',\n            color: new pc.Color(1, 1, 1),\n            range: 100,\n            layers: [worldLayer.id, layer.id]\n        });\n        light.translate(5, 0, 15);\n        app.root.addChild(light);\n\n        // red material is semi-transparent\n        const red = new pc.StandardMaterial();\n        red.diffuse.set(1, 0, 0);\n        red.blendType = pc.BLEND_NORMAL;\n        red.opacity = 0.5;\n        red.update();\n\n        // blue material does not test the existing depth buffer\n        const blue = new pc.StandardMaterial();\n        blue.diffuse.set(0, 0, 1);\n        blue.depthTest = false;\n        blue.update();\n\n        // red box is rendered first in World layer\n        const redBox = new pc.Entity();\n        redBox.addComponent('render', {\n            type: 'box',\n            material: red\n        });\n        redBox.setLocalScale(5, 5, 5);\n        app.root.addChild(redBox);\n\n        // blue box is rendered in the Front Layer which is after World\n        // because it does not test for depth\n        // and is in a later layer\n        // it is visible even though it should be inside the red box\n        const blueBox = new pc.Entity();\n        blueBox.addComponent('render', {\n            type: 'box',\n            material: blue,\n            layers: [layer.id] // try removing this line, the blue box will appear inside the red one\n        });\n        blueBox.setLocalScale(2.5, 2.5, 2.5);\n        app.root.addChild(blueBox);\n\n        app.on(\"update\", function (dt) {\n            if (redBox) {\n                redBox.rotate(0, 10 * dt, 0);\n            }\n            if (blueBox) {\n                blueBox.rotate(0, -10 * dt, 0);\n            }\n        });\n    });\n}",javaScriptFunction:'function example(canvas, deviceType) {\n    const gfxOptions = {\n        deviceTypes: [deviceType],\n        glslangUrl: "/static/lib/glslang/glslang.js",\n        twgslUrl: "/static/lib/twgsl/twgsl.js",\n    };\n\n    pc.createGraphicsDevice(canvas, gfxOptions).then((device) => {\n        const createOptions = new pc.AppOptions();\n        createOptions.graphicsDevice = device;\n\n        createOptions.componentSystems = [\n            // @ts-ignore\n            pc.RenderComponentSystem,\n            // @ts-ignore\n            pc.CameraComponentSystem,\n            // @ts-ignore\n            pc.LightComponentSystem,\n        ];\n\n        const app = new pc.AppBase(canvas);\n        app.init(createOptions);\n\n        // Set the canvas to fill the window and automatically change resolution to be the same as the canvas size\n        app.setCanvasFillMode(pc.FILLMODE_FILL_WINDOW);\n        app.setCanvasResolution(pc.RESOLUTION_AUTO);\n\n        app.start();\n\n        app.scene.ambientLight = new pc.Color(0.2, 0.2, 0.2);\n\n        // Create a new layer to put in front of everything\n        const layer = new pc.Layer({\n            name: "Front Layer",\n        });\n\n        // get the world layer index\n        const worldLayer = app.scene.layers.getLayerByName("World");\n        const idx = app.scene.layers.getTransparentIndex(worldLayer);\n\n        // insert the new layer after the world layer\n        app.scene.layers.insert(layer, idx + 1);\n\n        // Create an Entity with a camera component\n        // Make sure it renders both World and Front Layer\n        const camera = new pc.Entity();\n        camera.addComponent("camera", {\n            clearColor: new pc.Color(0.4, 0.45, 0.5),\n            layers: [worldLayer.id, layer.id],\n        });\n        camera.translate(0, 0, 24);\n        app.root.addChild(camera);\n\n        // Create an Entity with a omni light component\n        // Make sure it lights both World and Front Layer\n        const light = new pc.Entity();\n        light.addComponent("light", {\n            type: "omni",\n            color: new pc.Color(1, 1, 1),\n            range: 100,\n            layers: [worldLayer.id, layer.id],\n        });\n        light.translate(5, 0, 15);\n        app.root.addChild(light);\n\n        // red material is semi-transparent\n        const red = new pc.StandardMaterial();\n        red.diffuse.set(1, 0, 0);\n        red.blendType = pc.BLEND_NORMAL;\n        red.opacity = 0.5;\n        red.update();\n\n        // blue material does not test the existing depth buffer\n        const blue = new pc.StandardMaterial();\n        blue.diffuse.set(0, 0, 1);\n        blue.depthTest = false;\n        blue.update();\n\n        // red box is rendered first in World layer\n        const redBox = new pc.Entity();\n        redBox.addComponent("render", {\n            type: "box",\n            material: red,\n        });\n        redBox.setLocalScale(5, 5, 5);\n        app.root.addChild(redBox);\n\n        // blue box is rendered in the Front Layer which is after World\n        // because it does not test for depth\n        // and is in a later layer\n        // it is visible even though it should be inside the red box\n        const blueBox = new pc.Entity();\n        blueBox.addComponent("render", {\n            type: "box",\n            material: blue,\n            layers: [layer.id], // try removing this line, the blue box will appear inside the red one\n        });\n        blueBox.setLocalScale(2.5, 2.5, 2.5);\n        app.root.addChild(blueBox);\n\n        app.on("update", function (dt) {\n            if (redBox) {\n                redBox.rotate(0, 10 * dt, 0);\n            }\n            if (blueBox) {\n                blueBox.rotate(0, -10 * dt, 0);\n            }\n        });\n    });\n}\n',nameSlug:"layers",categorySlug:"graphics"},"light-physical-units":{typeScriptFunction:"function example(canvas: HTMLCanvasElement, deviceType: string, data: any): void {\n\n    const assets = {\n        orbitCamera: new pc.Asset('script', 'script', { url: '/static/scripts/camera/orbit-camera.js' }),\n        helipad: new pc.Asset('helipad-env-atlas', 'texture', { url: '/static/assets/cubemaps/helipad-env-atlas.png' }, { type: pc.TEXTURETYPE_RGBP, mipmaps: false }),\n        lights: new pc.Asset('lights', 'container', { url: '/static/assets/models/Lights.glb' }),\n        sheen: new pc.Asset('sheen', 'container', { url: '/static/assets/models/SheenChair.glb' }),\n        color: new pc.Asset('color', 'texture', { url: '/static/assets/textures/seaside-rocks01-color.jpg' }),\n        normal: new pc.Asset('normal', 'texture', { url: '/static/assets/textures/seaside-rocks01-normal.jpg' }),\n        gloss: new pc.Asset('gloss', 'texture', { url: '/static/assets/textures/seaside-rocks01-gloss.jpg' }),\n        luts: new pc.Asset('luts', 'json', { url: '/static/assets/json/area-light-luts.json' })\n    };\n\n    const gfxOptions = {\n        deviceTypes: [deviceType],\n        glslangUrl: '/static/lib/glslang/glslang.js',\n        twgslUrl: '/static/lib/twgsl/twgsl.js'\n    };\n\n    pc.createGraphicsDevice(canvas, gfxOptions).then((device: pc.GraphicsDevice) => {\n\n        const createOptions = new pc.AppOptions();\n        createOptions.graphicsDevice = device;\n        createOptions.keyboard = new pc.Keyboard(document.body);\n        createOptions.mouse = new pc.Mouse(document.body);\n        createOptions.touch = new pc.TouchDevice(document.body);\n\n        createOptions.componentSystems = [\n            // @ts-ignore\n            pc.RenderComponentSystem,\n            // @ts-ignore\n            pc.CameraComponentSystem,\n            // @ts-ignore\n            pc.LightComponentSystem,\n            // @ts-ignore\n            pc.ScriptComponentSystem\n        ];\n        createOptions.resourceHandlers = [\n            // @ts-ignore\n            pc.TextureHandler,\n            // @ts-ignore\n            pc.ContainerHandler,\n            // @ts-ignore\n            pc.ScriptHandler,\n            // @ts-ignore\n            pc.JsonHandler\n        ];\n\n        const app = new pc.AppBase(canvas);\n        app.init(createOptions);\n\n        // Set the canvas to fill the window and automatically change resolution to be the same as the canvas size\n        app.setCanvasFillMode(pc.FILLMODE_FILL_WINDOW);\n        app.setCanvasResolution(pc.RESOLUTION_AUTO);\n\n        const assetListLoader = new pc.AssetListLoader(Object.values(assets), app.assets);\n        assetListLoader.load(() => {\n\n            app.start();\n\n            app.scene.toneMapping = pc.TONEMAP_ACES;\n            app.scene.skyboxMip = 1;\n            app.scene.ambientLight.set(1, 0, 0);\n            app.scene.ambientLuminance = 20000;\n\n            // enable area lights which are disabled by default for clustered lighting\n            app.scene.lighting.areaLightsEnabled = true;\n\n            // set the loaded area light LUT data\n            const luts = assets.luts.resource;\n            app.setAreaLightLuts(luts.LTC_MAT_1, luts.LTC_MAT_2);\n\n            const sheen1 = assets.sheen.resource.instantiateRenderEntity({\n                castShadows: true\n            });\n            sheen1.setLocalScale(new pc.Vec3(3, 3, 3));\n            sheen1.setLocalPosition(7, -1.0, 0);\n            app.root.addChild(sheen1);\n\n            const sheen2 = assets.sheen.resource.instantiateRenderEntity({\n                castShadows: true\n            });\n            sheen2.setLocalScale(new pc.Vec3(3, 3, 3));\n            sheen2.setLocalPosition(4, -1.0, 0);\n            assets.sheen.resource.applyMaterialVariant(sheen2, \"Peacock Velvet\");\n            app.root.addChild(sheen2);\n\n            const lights = assets.lights.resource.instantiateRenderEntity({\n                castShadows: true\n            });\n            // enable all lights from the glb\n            const lightComponents: Array<pc.LightComponent> = lights.findComponents(\"light\");\n            lightComponents.forEach((component) => {\n                component.enabled = true;\n            });\n            lights.setLocalPosition(10, 0, 0);\n            app.root.addChild(lights);\n\n            const material = new pc.StandardMaterial();\n            material.diffuseMap = assets.color.resource;\n            material.normalMap = assets.normal.resource;\n            material.gloss = 0.8;\n            material.glossMap = assets.gloss.resource;\n            material.metalness = 0.7;\n            material.useMetalness = true;\n\n            material.diffuseMapTiling.set(17, 17);\n            material.normalMapTiling.set(17, 17);\n            material.glossMapTiling.set(17, 17);\n            material.update();\n\n            const plane = new pc.Entity();\n            plane.addComponent('render', {\n                type: 'plane',\n                material: material\n            });\n            plane.setLocalScale(new pc.Vec3(100, 0, 100));\n            plane.setLocalPosition(0, -1.0, 0);\n            app.root.addChild(plane);\n\n\n            data.set('script', {\n                sun: {\n                    luminance: 100000\n                },\n                sky: {\n                    luminance: 20000\n                },\n                spot: {\n                    luminance: 200000,\n                    aperture: 45\n                },\n                point: {\n                    luminance: 100000\n                },\n                rect: {\n                    luminance: 200000\n                },\n                camera: {\n                    aperture: 16.0,\n                    shutter: 1000,\n                    sensitivity: 1000,\n                    animate: false\n                },\n                scene: {\n                    physicalUnits: true,\n                    sky: true\n                }\n            });\n\n            app.scene.physicalUnits = data.get('script.scene.physicalUnits');\n            app.scene.envAtlas = assets.helipad.resource;\n\n            app.scene.skyboxLuminance = data.get('script.sky.luminance');\n\n            const directionalLight = new pc.Entity();\n            directionalLight.addComponent(\"light\", {\n                type: \"directional\",\n                color: pc.Color.WHITE,\n                castShadows: true,\n                luminance: data.get('script.sun.luminance'),\n                shadowBias: 0.2,\n                normalOffsetBias: 0.05,\n                shadowResolution: 2048\n            });\n            directionalLight.setEulerAngles(45, 35, 0);\n            app.root.addChild(directionalLight);\n\n            const omniLight = new pc.Entity();\n            omniLight.addComponent(\"light\", {\n                type: \"omni\",\n                color: pc.Color.WHITE,\n                castShadows: false,\n                luminance: data.get('script.point.luminance'),\n                shadowBias: 0.2,\n                normalOffsetBias: 0.05,\n                shadowResolution: 2048\n            });\n            omniLight.setLocalPosition(0, 5, 0);\n            app.root.addChild(omniLight);\n\n            const spotLight = new pc.Entity();\n            spotLight.addComponent(\"light\", {\n                type: \"spot\",\n                color: pc.Color.WHITE,\n                castShadows: false,\n                luminance: data.get('script.spot.luminance'),\n                shadowBias: 0.2,\n                normalOffsetBias: 0.05,\n                shadowResolution: 2048,\n                outerConeAngle: data.get('script.spot.aperture'),\n                innerConeAngle: 0\n            });\n            spotLight.setEulerAngles(0, 0, 0);\n            spotLight.setLocalPosition(10, 5, 5);\n            app.root.addChild(spotLight);\n\n            const areaLight = new pc.Entity();\n            areaLight.addComponent(\"light\", {\n                type: \"spot\",\n                shape: pc.LIGHTSHAPE_RECT,\n                color: pc.Color.YELLOW,\n                range: 9999,\n                luminance: data.get('script.rect.luminance'),\n                falloffMode: pc.LIGHTFALLOFF_INVERSESQUARED,\n                innerConeAngle: 80,\n                outerConeAngle: 85,\n                normalOffsetBias: 0.1\n            });\n            areaLight.setLocalScale(4, 1, 5);\n            areaLight.setEulerAngles(70, 180, 0);\n            areaLight.setLocalPosition(5, 3, -5);\n\n            // emissive material that is the light source color\n            const brightMaterial = new pc.StandardMaterial();\n            brightMaterial.emissive = pc.Color.YELLOW;\n            brightMaterial.emissiveIntensity = areaLight.light.luminance;\n            brightMaterial.useLighting = false;\n            brightMaterial.cull = pc.CULLFACE_NONE;\n            brightMaterial.update();\n\n            const brightShape = new pc.Entity();\n            // primitive shape that matches light source shape\n            brightShape.addComponent(\"render\", {\n                type: \"plane\",\n                material: brightMaterial,\n                castShadows: false\n            });\n            areaLight.addChild(brightShape);\n            app.root.addChild(areaLight);\n\n            // Create an Entity with a camera component\n            const camera = new pc.Entity();\n            camera.addComponent(\"camera\", {\n                clearColor: new pc.Color(0.4, 0.45, 0.5),\n                aperture: data.get('script.camera.aperture'),\n                shutter: 1 / data.get('script.camera.shutter'),\n                sensitivity: data.get('script.camera.sensitivity')\n            });\n            camera.setLocalPosition(0, 5, 11);\n\n            camera.camera.requestSceneColorMap(true);\n            camera.addComponent(\"script\");\n            camera.script.create(\"orbitCamera\", {\n                attributes: {\n                    inertiaFactor: 0.2,\n                    focusEntity: sheen1,\n                    distanceMin: 1,\n                    distanceMax: 400,\n                    frameOnStart: false\n                }\n            });\n            camera.script.create(\"orbitCameraInputMouse\");\n            camera.script.create(\"orbitCameraInputTouch\");\n            app.root.addChild(camera);\n\n            data.on('*:set', (path: string, value: any) => {\n                if (path === 'script.sun.luminance') {\n                    directionalLight.light.luminance = value;\n                } else if (path === 'script.sky.luminance') {\n                    app.scene.skyboxLuminance = value;\n                } else if (path === 'script.spot.luminance') {\n                    spotLight.light.luminance = value;\n                } else if (path === 'script.spot.aperture') {\n                    spotLight.light.outerConeAngle = value;\n                } else if (path === 'script.point.luminance') {\n                    omniLight.light.luminance = value;\n                } else if (path === 'script.rect.luminance') {\n                    areaLight.light.luminance = value;\n                    brightMaterial.emissiveIntensity = value;\n                    brightMaterial.update();\n                } else if (path === 'script.camera.aperture') {\n                    camera.camera.aperture = value;\n                } else if (path === 'script.camera.shutter') {\n                    camera.camera.shutter = 1 / value;\n                } else if (path === 'script.camera.sensitivity') {\n                    camera.camera.sensitivity = value;\n                } else if (path === 'script.scene.physicalUnits') {\n                    app.scene.physicalUnits = value;\n                } else if (path === 'script.scene.sky') {\n                    if (value) {\n                        app.scene.setSkybox(assets.helipad.resources);\n                    } else {\n                        app.scene.setSkybox(null);\n                    }\n                }\n            });\n\n            let resizeControlPanel = true;\n            let time = 0;\n            app.on(\"update\", function (dt) {\n                time += dt;\n\n                // resize control panel to fit the content better\n                if (resizeControlPanel) {\n                    const panel = window.top.document.getElementById('controlPanel');\n                    if (panel) {\n                        panel.style.width = '360px';\n                        resizeControlPanel = false;\n                    }\n                }\n\n                if (data.get('script.camera.animate')) {\n                    data.set('script.camera.aperture', 3 + (1 + Math.sin(time)) * 5.0);\n                }\n            });\n        });\n    });\n}",javaScriptFunction:'function example(canvas, deviceType, data) {\n    const assets = {\n        orbitCamera: new pc.Asset("script", "script", {\n            url: "/static/scripts/camera/orbit-camera.js",\n        }),\n        helipad: new pc.Asset(\n            "helipad-env-atlas",\n            "texture",\n            { url: "/static/assets/cubemaps/helipad-env-atlas.png" },\n            { type: pc.TEXTURETYPE_RGBP, mipmaps: false }\n        ),\n        lights: new pc.Asset("lights", "container", {\n            url: "/static/assets/models/Lights.glb",\n        }),\n        sheen: new pc.Asset("sheen", "container", {\n            url: "/static/assets/models/SheenChair.glb",\n        }),\n        color: new pc.Asset("color", "texture", {\n            url: "/static/assets/textures/seaside-rocks01-color.jpg",\n        }),\n        normal: new pc.Asset("normal", "texture", {\n            url: "/static/assets/textures/seaside-rocks01-normal.jpg",\n        }),\n        gloss: new pc.Asset("gloss", "texture", {\n            url: "/static/assets/textures/seaside-rocks01-gloss.jpg",\n        }),\n        luts: new pc.Asset("luts", "json", {\n            url: "/static/assets/json/area-light-luts.json",\n        }),\n    };\n\n    const gfxOptions = {\n        deviceTypes: [deviceType],\n        glslangUrl: "/static/lib/glslang/glslang.js",\n        twgslUrl: "/static/lib/twgsl/twgsl.js",\n    };\n\n    pc.createGraphicsDevice(canvas, gfxOptions).then((device) => {\n        const createOptions = new pc.AppOptions();\n        createOptions.graphicsDevice = device;\n        createOptions.keyboard = new pc.Keyboard(document.body);\n        createOptions.mouse = new pc.Mouse(document.body);\n        createOptions.touch = new pc.TouchDevice(document.body);\n\n        createOptions.componentSystems = [\n            // @ts-ignore\n            pc.RenderComponentSystem,\n            // @ts-ignore\n            pc.CameraComponentSystem,\n            // @ts-ignore\n            pc.LightComponentSystem,\n            // @ts-ignore\n            pc.ScriptComponentSystem,\n        ];\n\n        createOptions.resourceHandlers = [\n            // @ts-ignore\n            pc.TextureHandler,\n            // @ts-ignore\n            pc.ContainerHandler,\n            // @ts-ignore\n            pc.ScriptHandler,\n            // @ts-ignore\n            pc.JsonHandler,\n        ];\n\n        const app = new pc.AppBase(canvas);\n        app.init(createOptions);\n\n        // Set the canvas to fill the window and automatically change resolution to be the same as the canvas size\n        app.setCanvasFillMode(pc.FILLMODE_FILL_WINDOW);\n        app.setCanvasResolution(pc.RESOLUTION_AUTO);\n\n        const assetListLoader = new pc.AssetListLoader(\n            Object.values(assets),\n            app.assets\n        );\n        assetListLoader.load(() => {\n            app.start();\n\n            app.scene.toneMapping = pc.TONEMAP_ACES;\n            app.scene.skyboxMip = 1;\n            app.scene.ambientLight.set(1, 0, 0);\n            app.scene.ambientLuminance = 20000;\n\n            // enable area lights which are disabled by default for clustered lighting\n            app.scene.lighting.areaLightsEnabled = true;\n\n            // set the loaded area light LUT data\n            const luts = assets.luts.resource;\n            app.setAreaLightLuts(luts.LTC_MAT_1, luts.LTC_MAT_2);\n\n            const sheen1 = assets.sheen.resource.instantiateRenderEntity({\n                castShadows: true,\n            });\n            sheen1.setLocalScale(new pc.Vec3(3, 3, 3));\n            sheen1.setLocalPosition(7, -1.0, 0);\n            app.root.addChild(sheen1);\n\n            const sheen2 = assets.sheen.resource.instantiateRenderEntity({\n                castShadows: true,\n            });\n            sheen2.setLocalScale(new pc.Vec3(3, 3, 3));\n            sheen2.setLocalPosition(4, -1.0, 0);\n            assets.sheen.resource.applyMaterialVariant(\n                sheen2,\n                "Peacock Velvet"\n            );\n            app.root.addChild(sheen2);\n\n            const lights = assets.lights.resource.instantiateRenderEntity({\n                castShadows: true,\n            });\n            // enable all lights from the glb\n            const lightComponents = lights.findComponents("light");\n            lightComponents.forEach((component) => {\n                component.enabled = true;\n            });\n            lights.setLocalPosition(10, 0, 0);\n            app.root.addChild(lights);\n\n            const material = new pc.StandardMaterial();\n            material.diffuseMap = assets.color.resource;\n            material.normalMap = assets.normal.resource;\n            material.gloss = 0.8;\n            material.glossMap = assets.gloss.resource;\n            material.metalness = 0.7;\n            material.useMetalness = true;\n\n            material.diffuseMapTiling.set(17, 17);\n            material.normalMapTiling.set(17, 17);\n            material.glossMapTiling.set(17, 17);\n            material.update();\n\n            const plane = new pc.Entity();\n            plane.addComponent("render", {\n                type: "plane",\n                material: material,\n            });\n            plane.setLocalScale(new pc.Vec3(100, 0, 100));\n            plane.setLocalPosition(0, -1.0, 0);\n            app.root.addChild(plane);\n\n            data.set("script", {\n                sun: {\n                    luminance: 100000,\n                },\n                sky: {\n                    luminance: 20000,\n                },\n                spot: {\n                    luminance: 200000,\n                    aperture: 45,\n                },\n                point: {\n                    luminance: 100000,\n                },\n                rect: {\n                    luminance: 200000,\n                },\n                camera: {\n                    aperture: 16.0,\n                    shutter: 1000,\n                    sensitivity: 1000,\n                    animate: false,\n                },\n                scene: {\n                    physicalUnits: true,\n                    sky: true,\n                },\n            });\n\n            app.scene.physicalUnits = data.get("script.scene.physicalUnits");\n            app.scene.envAtlas = assets.helipad.resource;\n\n            app.scene.skyboxLuminance = data.get("script.sky.luminance");\n\n            const directionalLight = new pc.Entity();\n            directionalLight.addComponent("light", {\n                type: "directional",\n                color: pc.Color.WHITE,\n                castShadows: true,\n                luminance: data.get("script.sun.luminance"),\n                shadowBias: 0.2,\n                normalOffsetBias: 0.05,\n                shadowResolution: 2048,\n            });\n            directionalLight.setEulerAngles(45, 35, 0);\n            app.root.addChild(directionalLight);\n\n            const omniLight = new pc.Entity();\n            omniLight.addComponent("light", {\n                type: "omni",\n                color: pc.Color.WHITE,\n                castShadows: false,\n                luminance: data.get("script.point.luminance"),\n                shadowBias: 0.2,\n                normalOffsetBias: 0.05,\n                shadowResolution: 2048,\n            });\n            omniLight.setLocalPosition(0, 5, 0);\n            app.root.addChild(omniLight);\n\n            const spotLight = new pc.Entity();\n            spotLight.addComponent("light", {\n                type: "spot",\n                color: pc.Color.WHITE,\n                castShadows: false,\n                luminance: data.get("script.spot.luminance"),\n                shadowBias: 0.2,\n                normalOffsetBias: 0.05,\n                shadowResolution: 2048,\n                outerConeAngle: data.get("script.spot.aperture"),\n                innerConeAngle: 0,\n            });\n            spotLight.setEulerAngles(0, 0, 0);\n            spotLight.setLocalPosition(10, 5, 5);\n            app.root.addChild(spotLight);\n\n            const areaLight = new pc.Entity();\n            areaLight.addComponent("light", {\n                type: "spot",\n                shape: pc.LIGHTSHAPE_RECT,\n                color: pc.Color.YELLOW,\n                range: 9999,\n                luminance: data.get("script.rect.luminance"),\n                falloffMode: pc.LIGHTFALLOFF_INVERSESQUARED,\n                innerConeAngle: 80,\n                outerConeAngle: 85,\n                normalOffsetBias: 0.1,\n            });\n            areaLight.setLocalScale(4, 1, 5);\n            areaLight.setEulerAngles(70, 180, 0);\n            areaLight.setLocalPosition(5, 3, -5);\n\n            // emissive material that is the light source color\n            const brightMaterial = new pc.StandardMaterial();\n            brightMaterial.emissive = pc.Color.YELLOW;\n            brightMaterial.emissiveIntensity = areaLight.light.luminance;\n            brightMaterial.useLighting = false;\n            brightMaterial.cull = pc.CULLFACE_NONE;\n            brightMaterial.update();\n\n            const brightShape = new pc.Entity();\n            // primitive shape that matches light source shape\n            brightShape.addComponent("render", {\n                type: "plane",\n                material: brightMaterial,\n                castShadows: false,\n            });\n            areaLight.addChild(brightShape);\n            app.root.addChild(areaLight);\n\n            // Create an Entity with a camera component\n            const camera = new pc.Entity();\n            camera.addComponent("camera", {\n                clearColor: new pc.Color(0.4, 0.45, 0.5),\n                aperture: data.get("script.camera.aperture"),\n                shutter: 1 / data.get("script.camera.shutter"),\n                sensitivity: data.get("script.camera.sensitivity"),\n            });\n            camera.setLocalPosition(0, 5, 11);\n\n            camera.camera.requestSceneColorMap(true);\n            camera.addComponent("script");\n            camera.script.create("orbitCamera", {\n                attributes: {\n                    inertiaFactor: 0.2,\n                    focusEntity: sheen1,\n                    distanceMin: 1,\n                    distanceMax: 400,\n                    frameOnStart: false,\n                },\n            });\n            camera.script.create("orbitCameraInputMouse");\n            camera.script.create("orbitCameraInputTouch");\n            app.root.addChild(camera);\n\n            data.on("*:set", (path, value) => {\n                if (path === "script.sun.luminance") {\n                    directionalLight.light.luminance = value;\n                } else if (path === "script.sky.luminance") {\n                    app.scene.skyboxLuminance = value;\n                } else if (path === "script.spot.luminance") {\n                    spotLight.light.luminance = value;\n                } else if (path === "script.spot.aperture") {\n                    spotLight.light.outerConeAngle = value;\n                } else if (path === "script.point.luminance") {\n                    omniLight.light.luminance = value;\n                } else if (path === "script.rect.luminance") {\n                    areaLight.light.luminance = value;\n                    brightMaterial.emissiveIntensity = value;\n                    brightMaterial.update();\n                } else if (path === "script.camera.aperture") {\n                    camera.camera.aperture = value;\n                } else if (path === "script.camera.shutter") {\n                    camera.camera.shutter = 1 / value;\n                } else if (path === "script.camera.sensitivity") {\n                    camera.camera.sensitivity = value;\n                } else if (path === "script.scene.physicalUnits") {\n                    app.scene.physicalUnits = value;\n                } else if (path === "script.scene.sky") {\n                    if (value) {\n                        app.scene.setSkybox(assets.helipad.resources);\n                    } else {\n                        app.scene.setSkybox(null);\n                    }\n                }\n            });\n\n            let resizeControlPanel = true;\n            let time = 0;\n            app.on("update", function (dt) {\n                time += dt;\n\n                // resize control panel to fit the content better\n                if (resizeControlPanel) {\n                    const panel =\n                        window.top.document.getElementById("controlPanel");\n                    if (panel) {\n                        panel.style.width = "360px";\n                        resizeControlPanel = false;\n                    }\n                }\n\n                if (data.get("script.camera.animate")) {\n                    data.set(\n                        "script.camera.aperture",\n                        3 + (1 + Math.sin(time)) * 5.0\n                    );\n                }\n            });\n        });\n    });\n}\n',nameSlug:"light-physical-units",categorySlug:"graphics"},"lights-baked-a-o":{typeScriptFunction:"function example(canvas: HTMLCanvasElement, deviceType: string, data: any): void {\n\n    const assets = {\n        helipad: new pc.Asset('helipad-env-atlas', 'texture', { url: '/static/assets/cubemaps/helipad-env-atlas.png' }, { type: pc.TEXTURETYPE_RGBP, mipmaps: false }),\n        'house': new pc.Asset('house', 'container', { url: '/static/assets/models/house.glb' }),\n        'script': new pc.Asset('script', 'script', { url: '/static/scripts/camera/orbit-camera.js' })\n    };\n\n    const gfxOptions = {\n        deviceTypes: [deviceType],\n        glslangUrl: '/static/lib/glslang/glslang.js',\n        twgslUrl: '/static/lib/twgsl/twgsl.js'\n    };\n\n    pc.createGraphicsDevice(canvas, gfxOptions).then((device: pc.GraphicsDevice) => {\n\n        const createOptions = new pc.AppOptions();\n        createOptions.graphicsDevice = device;\n        createOptions.mouse = new pc.Mouse(document.body);\n        createOptions.touch = new pc.TouchDevice(document.body);\n\n        // @ts-ignore\n        createOptions.lightmapper = pc.Lightmapper;\n\n        createOptions.componentSystems = [\n            // @ts-ignore\n            pc.RenderComponentSystem,\n            // @ts-ignore\n            pc.CameraComponentSystem,\n            // @ts-ignore\n            pc.LightComponentSystem,\n            // @ts-ignore\n            pc.ScriptComponentSystem\n        ];\n        createOptions.resourceHandlers = [\n            // @ts-ignore\n            pc.ScriptHandler,\n            // @ts-ignore\n            pc.TextureHandler,\n            // @ts-ignore\n            pc.ContainerHandler,\n            // @ts-ignore\n            pc.CubemapHandler\n        ];\n\n        const app = new pc.AppBase(canvas);\n        app.init(createOptions);\n\n        // Set the canvas to fill the window and automatically change resolution to be the same as the canvas size\n        app.setCanvasFillMode(pc.FILLMODE_FILL_WINDOW);\n        app.setCanvasResolution(pc.RESOLUTION_AUTO);\n\n        const assetListLoader = new pc.AssetListLoader(Object.values(assets), app.assets);\n        assetListLoader.load(() => {\n\n            app.start();\n\n            // setup skydome - this is the main source of ambient light\n            app.scene.skyboxMip = 3;\n            app.scene.skyboxIntensity = 0.6;\n            app.scene.envAtlas = assets.helipad.resource;\n\n            // if skydome cubemap is disabled using HUD, a constant ambient color is used instead\n            app.scene.ambientLight = new pc.Color(0.1, 0.3, 0.4);\n\n            // instantiate the house model, which has unwrapped texture coordinates for lightmap in UV1\n            const house = assets.house.resource.instantiateRenderEntity();\n            house.setLocalScale(100, 100, 100);\n            app.root.addChild(house);\n\n            // change its materials to lightmapping\n            const renders: Array<pc.RenderComponent> = house.findComponents(\"render\");\n            renders.forEach((render) => {\n                render.castShadows = true;\n                render.castShadowsLightmap = true;\n                render.lightmapped = true;\n            });\n\n            // directional light\n            const lightDirectional = new pc.Entity(\"Directional\");\n            lightDirectional.addComponent(\"light\", {\n                type: \"directional\",\n\n                // disable to not have shadow map updated every frame,\n                // as the scene does not have dynamically lit objects\n                affectDynamic: false,\n\n                affectLightmapped: true,\n                castShadows: true,\n                normalOffsetBias: 0.05,\n                shadowBias: 0.2,\n                shadowDistance: 100,\n                shadowResolution: 2048,\n                shadowType: pc.SHADOW_PCF3,\n                color: new pc.Color(0.7, 0.7, 0.5),\n                intensity: 1.6\n            });\n            app.root.addChild(lightDirectional);\n            lightDirectional.setLocalEulerAngles(-55, 0, -30);\n\n            // Create an entity with a omni light component that is configured as a baked light\n            const lightOmni = new pc.Entity(\"Omni\");\n            lightOmni.addComponent(\"light\", {\n                type: \"omni\",\n                affectDynamic: false,\n                affectLightmapped: true,\n                bake: true,\n                castShadows: true,\n                normalOffsetBias: 0.05,\n                shadowBias: 0.2,\n                shadowDistance: 25,\n                shadowResolution: 512,\n                shadowType: pc.SHADOW_PCF3,\n                color: pc.Color.YELLOW,\n                range: 25,\n                intensity: 0.9\n            });\n            lightOmni.setLocalPosition(-4, 10, 5);\n            app.root.addChild(lightOmni);\n\n            // Create an entity with a spot light component that is configured as a baked light\n            const lightSpot = new pc.Entity(\"Spot\");\n            lightSpot.addComponent(\"light\", {\n                type: \"spot\",\n                affectDynamic: false,\n                affectLightmapped: true,\n                bake: true,\n                castShadows: true,\n                normalOffsetBias: 0.05,\n                shadowBias: 0.2,\n                shadowDistance: 50,\n                shadowResolution: 512,\n                shadowType: pc.SHADOW_PCF3,\n                color: pc.Color.RED,\n                range: 10,\n                intensity: 2.5\n            });\n            lightSpot.setLocalPosition(-5, 10, -7.5);\n            app.root.addChild(lightSpot);\n\n            // Create an entity with a camera component\n            const camera = new pc.Entity();\n            camera.addComponent(\"camera\", {\n                clearColor: new pc.Color(0.4, 0.45, 0.5),\n                farClip: 100,\n                nearClip: 1\n            });\n            camera.setLocalPosition(40, 20, 40);\n\n            // add orbit camera script with a mouse and a touch support\n            camera.addComponent(\"script\");\n            camera.script.create(\"orbitCamera\", {\n                attributes: {\n                    inertiaFactor: 0.2,\n                    focusEntity: house,\n                    distanceMax: 60\n                }\n            });\n            camera.script.create(\"orbitCameraInputMouse\");\n            camera.script.create(\"orbitCameraInputTouch\");\n            app.root.addChild(camera);\n\n            // lightmap baking properties\n            const bakeType = pc.BAKE_COLOR;\n            app.scene.lightmapMode = bakeType;\n            app.scene.lightmapMaxResolution = 1024;\n\n            // multiplier for lightmap resolution\n            app.scene.lightmapSizeMultiplier = 512;\n\n            // bake when settings are changed only\n            let needBake = false;\n\n            // handle data changes from HUD to modify baking properties\n            data.on('*:set', (path: string, value: any) => {\n                let bakeSettingChanged = true;\n                const pathArray = path.split('.');\n\n                // ambient light\n                if (pathArray[1] === 'ambient') {\n                    if (pathArray[2] === 'cubemap') {\n                        // enable / disable cubemap\n                        app.scene.envAtlas = value ? assets.helipad.resource : null;\n                    } else if (pathArray[2] === 'hemisphere') {\n                        // switch between smaller upper hemisphere and full sphere\n                        app.scene.ambientBakeSpherePart = value ? 0.4 : 1;\n                    } else {\n                        // all other values are set directly on the scene\n                        // @ts-ignore engine-tsd\n                        app.scene[pathArray[2]] = value;\n                    }\n                } else if (pathArray[1] === 'directional') {\n                    // @ts-ignore engine-tsd\n                    lightDirectional.light[pathArray[2]] = value;\n                } else if (pathArray[1] === 'settings') {\n                    // @ts-ignore engine-tsd\n                    app.scene[pathArray[2]] = value;\n                } else if (pathArray[1] === 'other') {\n                    // @ts-ignore engine-tsd\n                    lightOmni.light[pathArray[2]] = value;\n                    // @ts-ignore engine-tsd\n                    lightSpot.light[pathArray[2]] = value;\n                } else {\n                    // don't rebake if stats change\n                    bakeSettingChanged = false;\n                }\n\n                // trigger bake on the next frame if relevant settings were changes\n                needBake ||= bakeSettingChanged;\n            });\n\n            // bake properties connected to the HUD\n            data.set('data', {\n                settings: {\n                    lightmapFilterEnabled: true,\n                    lightmapFilterRange: 10,\n                    lightmapFilterSmoothness: 0.2\n                },\n                ambient: {\n                    ambientBake: true,\n                    cubemap: true,\n                    hemisphere: true,\n                    ambientBakeNumSamples: 20,\n                    ambientBakeOcclusionContrast: -0.6,\n                    ambientBakeOcclusionBrightness: -0.5\n                },\n                directional: {\n                    enabled: true,\n                    bake: true,\n                    bakeNumSamples: 15,\n                    bakeArea: 10\n                },\n                other: {\n                    enabled: true\n                },\n                stats: {\n                    duration: ''\n                }\n            });\n\n            // Set an update function on the app's update event\n            app.on(\"update\", function (dt) {\n\n                // bake lightmaps when HUD properties change\n                if (needBake) {\n                    needBake = false;\n                    app.lightmapper.bake(null, bakeType);\n\n                    // update stats with the bake duration\n                    data.set('data.stats.duration', app.lightmapper.stats.totalRenderTime.toFixed(1) + 'ms');\n                }\n            });\n        });\n    });\n}",javaScriptFunction:'function example(canvas, deviceType, data) {\n    const assets = {\n        helipad: new pc.Asset(\n            "helipad-env-atlas",\n            "texture",\n            { url: "/static/assets/cubemaps/helipad-env-atlas.png" },\n            { type: pc.TEXTURETYPE_RGBP, mipmaps: false }\n        ),\n        house: new pc.Asset("house", "container", {\n            url: "/static/assets/models/house.glb",\n        }),\n        script: new pc.Asset("script", "script", {\n            url: "/static/scripts/camera/orbit-camera.js",\n        }),\n    };\n\n    const gfxOptions = {\n        deviceTypes: [deviceType],\n        glslangUrl: "/static/lib/glslang/glslang.js",\n        twgslUrl: "/static/lib/twgsl/twgsl.js",\n    };\n\n    pc.createGraphicsDevice(canvas, gfxOptions).then((device) => {\n        const createOptions = new pc.AppOptions();\n        createOptions.graphicsDevice = device;\n        createOptions.mouse = new pc.Mouse(document.body);\n        createOptions.touch = new pc.TouchDevice(document.body);\n\n        // @ts-ignore\n        createOptions.lightmapper = pc.Lightmapper;\n\n        createOptions.componentSystems = [\n            // @ts-ignore\n            pc.RenderComponentSystem,\n            // @ts-ignore\n            pc.CameraComponentSystem,\n            // @ts-ignore\n            pc.LightComponentSystem,\n            // @ts-ignore\n            pc.ScriptComponentSystem,\n        ];\n\n        createOptions.resourceHandlers = [\n            // @ts-ignore\n            pc.ScriptHandler,\n            // @ts-ignore\n            pc.TextureHandler,\n            // @ts-ignore\n            pc.ContainerHandler,\n            // @ts-ignore\n            pc.CubemapHandler,\n        ];\n\n        const app = new pc.AppBase(canvas);\n        app.init(createOptions);\n\n        // Set the canvas to fill the window and automatically change resolution to be the same as the canvas size\n        app.setCanvasFillMode(pc.FILLMODE_FILL_WINDOW);\n        app.setCanvasResolution(pc.RESOLUTION_AUTO);\n\n        const assetListLoader = new pc.AssetListLoader(\n            Object.values(assets),\n            app.assets\n        );\n        assetListLoader.load(() => {\n            app.start();\n\n            // setup skydome - this is the main source of ambient light\n            app.scene.skyboxMip = 3;\n            app.scene.skyboxIntensity = 0.6;\n            app.scene.envAtlas = assets.helipad.resource;\n\n            // if skydome cubemap is disabled using HUD, a constant ambient color is used instead\n            app.scene.ambientLight = new pc.Color(0.1, 0.3, 0.4);\n\n            // instantiate the house model, which has unwrapped texture coordinates for lightmap in UV1\n            const house = assets.house.resource.instantiateRenderEntity();\n            house.setLocalScale(100, 100, 100);\n            app.root.addChild(house);\n\n            // change its materials to lightmapping\n            const renders = house.findComponents("render");\n            renders.forEach((render) => {\n                render.castShadows = true;\n                render.castShadowsLightmap = true;\n                render.lightmapped = true;\n            });\n\n            // directional light\n            const lightDirectional = new pc.Entity("Directional");\n            lightDirectional.addComponent("light", {\n                type: "directional",\n\n                // disable to not have shadow map updated every frame,\n                // as the scene does not have dynamically lit objects\n                affectDynamic: false,\n\n                affectLightmapped: true,\n                castShadows: true,\n                normalOffsetBias: 0.05,\n                shadowBias: 0.2,\n                shadowDistance: 100,\n                shadowResolution: 2048,\n                shadowType: pc.SHADOW_PCF3,\n                color: new pc.Color(0.7, 0.7, 0.5),\n                intensity: 1.6,\n            });\n            app.root.addChild(lightDirectional);\n            lightDirectional.setLocalEulerAngles(-55, 0, -30);\n\n            // Create an entity with a omni light component that is configured as a baked light\n            const lightOmni = new pc.Entity("Omni");\n            lightOmni.addComponent("light", {\n                type: "omni",\n                affectDynamic: false,\n                affectLightmapped: true,\n                bake: true,\n                castShadows: true,\n                normalOffsetBias: 0.05,\n                shadowBias: 0.2,\n                shadowDistance: 25,\n                shadowResolution: 512,\n                shadowType: pc.SHADOW_PCF3,\n                color: pc.Color.YELLOW,\n                range: 25,\n                intensity: 0.9,\n            });\n            lightOmni.setLocalPosition(-4, 10, 5);\n            app.root.addChild(lightOmni);\n\n            // Create an entity with a spot light component that is configured as a baked light\n            const lightSpot = new pc.Entity("Spot");\n            lightSpot.addComponent("light", {\n                type: "spot",\n                affectDynamic: false,\n                affectLightmapped: true,\n                bake: true,\n                castShadows: true,\n                normalOffsetBias: 0.05,\n                shadowBias: 0.2,\n                shadowDistance: 50,\n                shadowResolution: 512,\n                shadowType: pc.SHADOW_PCF3,\n                color: pc.Color.RED,\n                range: 10,\n                intensity: 2.5,\n            });\n            lightSpot.setLocalPosition(-5, 10, -7.5);\n            app.root.addChild(lightSpot);\n\n            // Create an entity with a camera component\n            const camera = new pc.Entity();\n            camera.addComponent("camera", {\n                clearColor: new pc.Color(0.4, 0.45, 0.5),\n                farClip: 100,\n                nearClip: 1,\n            });\n            camera.setLocalPosition(40, 20, 40);\n\n            // add orbit camera script with a mouse and a touch support\n            camera.addComponent("script");\n            camera.script.create("orbitCamera", {\n                attributes: {\n                    inertiaFactor: 0.2,\n                    focusEntity: house,\n                    distanceMax: 60,\n                },\n            });\n            camera.script.create("orbitCameraInputMouse");\n            camera.script.create("orbitCameraInputTouch");\n            app.root.addChild(camera);\n\n            // lightmap baking properties\n            const bakeType = pc.BAKE_COLOR;\n            app.scene.lightmapMode = bakeType;\n            app.scene.lightmapMaxResolution = 1024;\n\n            // multiplier for lightmap resolution\n            app.scene.lightmapSizeMultiplier = 512;\n\n            // bake when settings are changed only\n            let needBake = false;\n\n            // handle data changes from HUD to modify baking properties\n            data.on("*:set", (path, value) => {\n                let bakeSettingChanged = true;\n                const pathArray = path.split(".");\n\n                // ambient light\n                if (pathArray[1] === "ambient") {\n                    if (pathArray[2] === "cubemap") {\n                        // enable / disable cubemap\n                        app.scene.envAtlas = value\n                            ? assets.helipad.resource\n                            : null;\n                    } else if (pathArray[2] === "hemisphere") {\n                        // switch between smaller upper hemisphere and full sphere\n                        app.scene.ambientBakeSpherePart = value ? 0.4 : 1;\n                    } else {\n                        // all other values are set directly on the scene\n                        // @ts-ignore engine-tsd\n                        app.scene[pathArray[2]] = value;\n                    }\n                } else if (pathArray[1] === "directional") {\n                    // @ts-ignore engine-tsd\n                    lightDirectional.light[pathArray[2]] = value;\n                } else if (pathArray[1] === "settings") {\n                    // @ts-ignore engine-tsd\n                    app.scene[pathArray[2]] = value;\n                } else if (pathArray[1] === "other") {\n                    // @ts-ignore engine-tsd\n                    lightOmni.light[pathArray[2]] = value;\n                    // @ts-ignore engine-tsd\n                    lightSpot.light[pathArray[2]] = value;\n                } else {\n                    // don\'t rebake if stats change\n                    bakeSettingChanged = false;\n                }\n\n                // trigger bake on the next frame if relevant settings were changes\n                needBake ||= bakeSettingChanged;\n            });\n\n            // bake properties connected to the HUD\n            data.set("data", {\n                settings: {\n                    lightmapFilterEnabled: true,\n                    lightmapFilterRange: 10,\n                    lightmapFilterSmoothness: 0.2,\n                },\n                ambient: {\n                    ambientBake: true,\n                    cubemap: true,\n                    hemisphere: true,\n                    ambientBakeNumSamples: 20,\n                    ambientBakeOcclusionContrast: -0.6,\n                    ambientBakeOcclusionBrightness: -0.5,\n                },\n                directional: {\n                    enabled: true,\n                    bake: true,\n                    bakeNumSamples: 15,\n                    bakeArea: 10,\n                },\n                other: {\n                    enabled: true,\n                },\n                stats: {\n                    duration: "",\n                },\n            });\n\n            // Set an update function on the app\'s update event\n            app.on("update", function (dt) {\n                // bake lightmaps when HUD properties change\n                if (needBake) {\n                    needBake = false;\n                    app.lightmapper.bake(null, bakeType);\n\n                    // update stats with the bake duration\n                    data.set(\n                        "data.stats.duration",\n                        app.lightmapper.stats.totalRenderTime.toFixed(1) + "ms"\n                    );\n                }\n            });\n        });\n    });\n}\n',nameSlug:"lights-baked-a-o",categorySlug:"graphics"},"lights-baked":{typeScriptFunction:'function example(canvas: HTMLCanvasElement, deviceType: string): void {\n\n    const gfxOptions = {\n        deviceTypes: [deviceType],\n        glslangUrl: \'/static/lib/glslang/glslang.js\',\n        twgslUrl: \'/static/lib/twgsl/twgsl.js\'\n    };\n\n    pc.createGraphicsDevice(canvas, gfxOptions).then((device: pc.GraphicsDevice) => {\n\n        const createOptions = new pc.AppOptions();\n        createOptions.graphicsDevice = device;\n\n        // @ts-ignore\n        createOptions.lightmapper = pc.Lightmapper;\n\n        createOptions.componentSystems = [\n            // @ts-ignore\n            pc.RenderComponentSystem,\n            // @ts-ignore\n            pc.CameraComponentSystem,\n            // @ts-ignore\n            pc.LightComponentSystem\n        ];\n\n        const app = new pc.AppBase(canvas);\n        app.init(createOptions);\n\n        // Set the canvas to fill the window and automatically change resolution to be the same as the canvas size\n        app.setCanvasFillMode(pc.FILLMODE_FILL_WINDOW);\n        app.setCanvasResolution(pc.RESOLUTION_AUTO);\n\n        app.start();\n\n        // create material used on the geometry\n        const material = new pc.StandardMaterial();\n        material.gloss = 0.6;\n        material.metalness = 0.4;\n        material.useMetalness = true;\n        material.update();\n\n        // All render component primitive shape types\n        const shapes = ["box", "cone", "cylinder", "sphere", "capsule", "torus"];\n\n        for (let i = 0; i < 40; i++) {\n            const shape = shapes[Math.floor(Math.random() * shapes.length)];\n\n            // Create an entity with a render component that is set up to be lightmapped with baked direct lighting\n            const entity = new pc.Entity();\n            entity.addComponent(\'render\', {\n                castShadows: false,\n                castShadowsLightmap: true,\n                lightmapped: true,\n                type: shape,\n                material: material\n            });\n            app.root.addChild(entity);\n\n            // random orientation\n            entity.setLocalPosition(Math.random() * 10 - 5, Math.random() * 5, Math.random() * 10 - 5);\n        }\n\n        const ground = new pc.Entity();\n        ground.addComponent(\'render\', {\n            castShadows: false,\n            castShadowsLightmap: false,\n            lightmapped: true,\n            type: "plane",\n            material: material\n        });\n        app.root.addChild(ground);\n        ground.setLocalPosition(0, -1, 0);\n        ground.setLocalScale(40, 40, 40);\n\n        // Create an entity with a directional light component that is configured as a baked light\n        const light = new pc.Entity();\n        light.addComponent("light", {\n            affectDynamic: false,\n            affectLightmapped: true,\n            bake: true,\n            castShadows: true,\n            normalOffsetBias: 0.05,\n            shadowBias: 0.2,\n            shadowDistance: 50,\n            shadowResolution: 2048,\n            shadowType: pc.SHADOW_PCF3,\n            color: pc.Color.GREEN,\n            type: "directional"\n        });\n        app.root.addChild(light);\n        light.setLocalEulerAngles(45, 30, 0);\n\n        // Create an entity with an omni light component that is configured as a baked light\n        const lightPoint = new pc.Entity();\n        lightPoint.addComponent("light", {\n            affectDynamic: false,\n            affectLightmapped: true,\n            bake: true,\n            castShadows: true,\n            normalOffsetBias: 0.05,\n            shadowBias: 0.2,\n            shadowDistance: 50,\n            shadowResolution: 512,\n            shadowType: pc.SHADOW_PCF3,\n            color: pc.Color.RED,\n            range: 100,\n            type: "point"\n        });\n        lightPoint.setLocalPosition(0, 2, 0);\n        app.root.addChild(lightPoint);\n\n        // Create an entity with a camera component\n        const camera = new pc.Entity();\n        camera.addComponent("camera", {\n            clearColor: new pc.Color(0.4, 0.45, 0.5),\n            farClip: 100,\n            nearClip: 0.05\n        });\n        app.root.addChild(camera);\n\n        // lightmap baking properties\n        app.scene.lightmapMode = pc.BAKE_COLOR;\n        app.scene.lightmapMaxResolution = 2048;\n\n        // For baked lights, this property perhaps has the biggest impact on lightmap resolution:\n        app.scene.lightmapSizeMultiplier = 32;\n\n        // bake lightmaps\n        app.lightmapper.bake(null, pc.BAKE_COLORDIR);\n\n        // Set an update function on the app\'s update event\n        let time = 4;\n        app.on("update", function (dt) {\n            time += dt;\n\n            // orbit camera\n            camera.setLocalPosition(20 * Math.sin(time * 0.4), 3, 6);\n            camera.lookAt(pc.Vec3.ZERO);\n        });\n    });\n}',javaScriptFunction:'function example(canvas, deviceType) {\n    const gfxOptions = {\n        deviceTypes: [deviceType],\n        glslangUrl: "/static/lib/glslang/glslang.js",\n        twgslUrl: "/static/lib/twgsl/twgsl.js",\n    };\n\n    pc.createGraphicsDevice(canvas, gfxOptions).then((device) => {\n        const createOptions = new pc.AppOptions();\n        createOptions.graphicsDevice = device;\n\n        // @ts-ignore\n        createOptions.lightmapper = pc.Lightmapper;\n\n        createOptions.componentSystems = [\n            // @ts-ignore\n            pc.RenderComponentSystem,\n            // @ts-ignore\n            pc.CameraComponentSystem,\n            // @ts-ignore\n            pc.LightComponentSystem,\n        ];\n\n        const app = new pc.AppBase(canvas);\n        app.init(createOptions);\n\n        // Set the canvas to fill the window and automatically change resolution to be the same as the canvas size\n        app.setCanvasFillMode(pc.FILLMODE_FILL_WINDOW);\n        app.setCanvasResolution(pc.RESOLUTION_AUTO);\n\n        app.start();\n\n        // create material used on the geometry\n        const material = new pc.StandardMaterial();\n        material.gloss = 0.6;\n        material.metalness = 0.4;\n        material.useMetalness = true;\n        material.update();\n\n        // All render component primitive shape types\n        const shapes = [\n            "box",\n            "cone",\n            "cylinder",\n            "sphere",\n            "capsule",\n            "torus",\n        ];\n\n        for (let i = 0; i < 40; i++) {\n            const shape = shapes[Math.floor(Math.random() * shapes.length)];\n\n            // Create an entity with a render component that is set up to be lightmapped with baked direct lighting\n            const entity = new pc.Entity();\n            entity.addComponent("render", {\n                castShadows: false,\n                castShadowsLightmap: true,\n                lightmapped: true,\n                type: shape,\n                material: material,\n            });\n            app.root.addChild(entity);\n\n            // random orientation\n            entity.setLocalPosition(\n                Math.random() * 10 - 5,\n                Math.random() * 5,\n                Math.random() * 10 - 5\n            );\n        }\n\n        const ground = new pc.Entity();\n        ground.addComponent("render", {\n            castShadows: false,\n            castShadowsLightmap: false,\n            lightmapped: true,\n            type: "plane",\n            material: material,\n        });\n        app.root.addChild(ground);\n        ground.setLocalPosition(0, -1, 0);\n        ground.setLocalScale(40, 40, 40);\n\n        // Create an entity with a directional light component that is configured as a baked light\n        const light = new pc.Entity();\n        light.addComponent("light", {\n            affectDynamic: false,\n            affectLightmapped: true,\n            bake: true,\n            castShadows: true,\n            normalOffsetBias: 0.05,\n            shadowBias: 0.2,\n            shadowDistance: 50,\n            shadowResolution: 2048,\n            shadowType: pc.SHADOW_PCF3,\n            color: pc.Color.GREEN,\n            type: "directional",\n        });\n        app.root.addChild(light);\n        light.setLocalEulerAngles(45, 30, 0);\n\n        // Create an entity with an omni light component that is configured as a baked light\n        const lightPoint = new pc.Entity();\n        lightPoint.addComponent("light", {\n            affectDynamic: false,\n            affectLightmapped: true,\n            bake: true,\n            castShadows: true,\n            normalOffsetBias: 0.05,\n            shadowBias: 0.2,\n            shadowDistance: 50,\n            shadowResolution: 512,\n            shadowType: pc.SHADOW_PCF3,\n            color: pc.Color.RED,\n            range: 100,\n            type: "point",\n        });\n        lightPoint.setLocalPosition(0, 2, 0);\n        app.root.addChild(lightPoint);\n\n        // Create an entity with a camera component\n        const camera = new pc.Entity();\n        camera.addComponent("camera", {\n            clearColor: new pc.Color(0.4, 0.45, 0.5),\n            farClip: 100,\n            nearClip: 0.05,\n        });\n        app.root.addChild(camera);\n\n        // lightmap baking properties\n        app.scene.lightmapMode = pc.BAKE_COLOR;\n        app.scene.lightmapMaxResolution = 2048;\n\n        // For baked lights, this property perhaps has the biggest impact on lightmap resolution:\n        app.scene.lightmapSizeMultiplier = 32;\n\n        // bake lightmaps\n        app.lightmapper.bake(null, pc.BAKE_COLORDIR);\n\n        // Set an update function on the app\'s update event\n        let time = 4;\n        app.on("update", function (dt) {\n            time += dt;\n\n            // orbit camera\n            camera.setLocalPosition(20 * Math.sin(time * 0.4), 3, 6);\n            camera.lookAt(pc.Vec3.ZERO);\n        });\n    });\n}\n',nameSlug:"lights-baked",categorySlug:"graphics"},lights:{typeScriptFunction:'function example(canvas: HTMLCanvasElement, deviceType: string, data:any): void {\n    function createMaterial(colors: any) {\n        const material: any = new pc.StandardMaterial();\n        for (const param in colors) {\n            material[param] = colors[param];\n        }\n        material.update();\n        return material;\n    }\n\n    const assets = {\n        \'statue\': new pc.Asset(\'statue\', \'container\', { url: \'/static/assets/models/statue.glb\' }),\n        "heart": new pc.Asset("heart", "texture", { url: "/static/assets/textures/heart.png" }),\n        "xmas_negx": new pc.Asset("xmas_negx", "texture", { url: "/static/assets/cubemaps/xmas_faces/xmas_negx.png" }),\n        "xmas_negy": new pc.Asset("xmas_negy", "texture", { url: "/static/assets/cubemaps/xmas_faces/xmas_negy.png" }),\n        "xmas_negz": new pc.Asset("xmas_negz", "texture", { url: "/static/assets/cubemaps/xmas_faces/xmas_negz.png" }),\n        "xmas_posx": new pc.Asset("xmas_posx", "texture", { url: "/static/assets/cubemaps/xmas_faces/xmas_posx.png" }),\n        "xmas_posy": new pc.Asset("xmas_posy", "texture", { url: "/static/assets/cubemaps/xmas_faces/xmas_posy.png" }),\n        "xmas_posz": new pc.Asset("xmas_posz", "texture", { url: "/static/assets/cubemaps/xmas_faces/xmas_posz.png" })\n    };\n\n    const gfxOptions = {\n        deviceTypes: [deviceType],\n        glslangUrl: \'/static/lib/glslang/glslang.js\',\n        twgslUrl: \'/static/lib/twgsl/twgsl.js\'\n    };\n\n    pc.createGraphicsDevice(canvas, gfxOptions).then((device: pc.GraphicsDevice) => {\n\n        const createOptions = new pc.AppOptions();\n        createOptions.graphicsDevice = device;\n        createOptions.keyboard = new pc.Keyboard(document.body);\n\n        createOptions.componentSystems = [\n            // @ts-ignore\n            pc.RenderComponentSystem,\n            // @ts-ignore\n            pc.CameraComponentSystem,\n            // @ts-ignore\n            pc.LightComponentSystem\n        ];\n        createOptions.resourceHandlers = [\n            // @ts-ignore\n            pc.TextureHandler,\n            // @ts-ignore\n            pc.ContainerHandler,\n            // @ts-ignore\n            pc.CubemapHandler\n        ];\n\n        const app = new pc.AppBase(canvas);\n        app.init(createOptions);\n\n        // Set the canvas to fill the window and automatically change resolution to be the same as the canvas size\n        app.setCanvasFillMode(pc.FILLMODE_FILL_WINDOW);\n        app.setCanvasResolution(pc.RESOLUTION_AUTO);\n\n        const assetListLoader = new pc.AssetListLoader(Object.values(assets), app.assets);\n        assetListLoader.load(() => {\n\n            app.start();\n\n            // enable cookies which are disabled by default for clustered lighting\n            app.scene.lighting.cookiesEnabled = true;\n\n            // ambient lighting\n            app.scene.ambientLight = new pc.Color(0.2, 0.2, 0.2);\n\n            // create an entity with the statue\n            const entity = assets.statue.resource.instantiateRenderEntity();\n\n            app.root.addChild(entity);\n\n            // Create an Entity with a camera component\n            const camera = new pc.Entity();\n            camera.addComponent("camera", {\n                clearColor: new pc.Color(0.4, 0.45, 0.5)\n            });\n            camera.translate(0, 15, 35);\n            camera.rotate(-14, 0, 0);\n            app.root.addChild(camera);\n\n            // ground material\n            const material = createMaterial({\n                ambient: pc.Color.GRAY,\n                diffuse: pc.Color.GRAY\n            });\n\n            // Create an Entity for the ground\n            const ground = new pc.Entity();\n            ground.addComponent("render", {\n                type: "box",\n                material: material\n            });\n            ground.setLocalScale(70, 1, 70);\n            ground.setLocalPosition(0, -0.5, 0);\n            app.root.addChild(ground);\n\n            // setup light data\n            data.set(\'lights\', {\n                spot: {\n                    enabled: true,\n                    intensity: 0.8,\n                    cookieIntensity: 1,\n                    shadowIntensity: 1\n                },\n                omni: {\n                    enabled: true,\n                    intensity: 0.8,\n                    cookieIntensity: 1,\n                    shadowIntensity: 1\n                },\n                directional: {\n                    enabled: true,\n                    intensity: 0.8,\n                    shadowIntensity: 1\n                }\n            });\n\n            const lights: {[key: string]: pc.Entity } = {};\n\n            // Create an spot light\n            lights.spot = new pc.Entity();\n            lights.spot.addComponent("light", {\n                ...{\n                    type: "spot",\n                    color: pc.Color.WHITE,\n                    innerConeAngle: 30,\n                    outerConeAngle: 31,\n                    range: 100,\n                    castShadows: true,\n                    shadowBias: 0.05,\n                    normalOffsetBias: 0.03,\n                    shadowResolution: 2048,\n                    // heart texture\'s alpha channel as a cookie texture\n                    cookie: assets.heart.resource,\n                    cookieChannel: "a"\n                },\n                ...data.get(\'lights.spot\')\n            });\n\n            const cone = new pc.Entity();\n            cone.addComponent("render", {\n                type: "cone",\n                castShadows: false,\n                material: createMaterial({ emissive: pc.Color.WHITE })\n            });\n            lights.spot.addChild(cone);\n            app.root.addChild(lights.spot);\n\n            // construct the cubemap asset for the omni light cookie texture\n            // Note: the textures array could contain 6 texture asset names to load instead as well\n            const cubemapAsset = new pc.Asset(\'xmas_cubemap\', \'cubemap\', null, {\n                textures: [\n                    assets.xmas_posx.id, assets.xmas_negx.id,\n                    assets.xmas_posy.id, assets.xmas_negy.id,\n                    assets.xmas_posz.id, assets.xmas_negz.id\n                ]\n            });\n            cubemapAsset.loadFaces = true;\n            app.assets.add(cubemapAsset);\n\n            // Create a omni light\n            lights.omni = new pc.Entity();\n            lights.omni.addComponent("light", {\n                ...{\n                    type: "omni",\n                    color: pc.Color.YELLOW,\n                    castShadows: true,\n                    range: 111,\n                    cookieAsset: cubemapAsset,\n                    cookieChannel: "rgb"\n                },\n                ...data.get(\'lights.omni\')\n            });\n            lights.omni.addComponent("render", {\n                type: "sphere",\n                castShadows: false,\n                material: createMaterial({ diffuse: pc.Color.BLACK, emissive: pc.Color.YELLOW })\n            });\n            app.root.addChild(lights.omni);\n\n            // Create a directional light\n            lights.directional = new pc.Entity();\n            lights.directional.addComponent("light", {\n                ...{\n                    type: "directional",\n                    color: pc.Color.CYAN,\n                    range: 100,\n                    shadowDistance: 50,\n                    castShadows: true,\n                    shadowBias: 0.1,\n                    normalOffsetBias: 0.2\n                },\n                ...data.get(\'lights.directional\')\n            });\n            app.root.addChild(lights.directional);\n\n            // Allow user to toggle individual lights\n            app.keyboard.on("keydown", function (e) {\n                // if the user is editing an input field, ignore key presses\n                if (e.element.constructor.name === \'HTMLInputElement\') return;\n                switch (e.key) {\n                    case pc.KEY_1:\n                        data.set(\'lights.omni.enabled\', !data.get(\'lights.omni.enabled\'));\n                        break;\n                    case pc.KEY_2:\n                        data.set(\'lights.spot.enabled\', !data.get(\'lights.spot.enabled\'));\n                        break;\n                    case pc.KEY_3:\n                        data.set(\'lights.directional.enabled\', !data.get(\'lights.directional.enabled\'));\n                        break;\n                }\n            }, this);\n\n            // Simple update loop to rotate the light\n            let angleRad = 1;\n            app.on("update", function (dt) {\n                angleRad += 0.3 * dt;\n                if (entity) {\n\n                    lights.spot.lookAt(new pc.Vec3(0, -5, 0));\n                    lights.spot.rotateLocal(90, 0, 0);\n                    lights.spot.setLocalPosition(15 * Math.sin(angleRad), 25, 15 * Math.cos(angleRad));\n\n                    lights.omni.setLocalPosition(5 * Math.sin(-2 * angleRad), 10, 5 * Math.cos(-2 * angleRad));\n                    lights.omni.rotate(0, 50 * dt, 0);\n\n                    lights.directional.setLocalEulerAngles(45, -60 * angleRad, 0);\n                }\n            });\n\n            data.on(\'*:set\', (path: string, value: any) => {\n                const pathArray = path.split(\'.\');\n                if (pathArray[2] === \'enabled\') {\n                    lights[pathArray[1]].enabled = value;\n                } else {\n                    // @ts-ignore\n                    lights[pathArray[1]].light[pathArray[2]] = value;\n                }\n            });\n        });\n    });\n}',javaScriptFunction:'function example(canvas, deviceType, data) {\n    function createMaterial(colors) {\n        const material = new pc.StandardMaterial();\n        for (const param in colors) {\n            material[param] = colors[param];\n        }\n        material.update();\n        return material;\n    }\n\n    const assets = {\n        statue: new pc.Asset("statue", "container", {\n            url: "/static/assets/models/statue.glb",\n        }),\n        heart: new pc.Asset("heart", "texture", {\n            url: "/static/assets/textures/heart.png",\n        }),\n        xmas_negx: new pc.Asset("xmas_negx", "texture", {\n            url: "/static/assets/cubemaps/xmas_faces/xmas_negx.png",\n        }),\n        xmas_negy: new pc.Asset("xmas_negy", "texture", {\n            url: "/static/assets/cubemaps/xmas_faces/xmas_negy.png",\n        }),\n        xmas_negz: new pc.Asset("xmas_negz", "texture", {\n            url: "/static/assets/cubemaps/xmas_faces/xmas_negz.png",\n        }),\n        xmas_posx: new pc.Asset("xmas_posx", "texture", {\n            url: "/static/assets/cubemaps/xmas_faces/xmas_posx.png",\n        }),\n        xmas_posy: new pc.Asset("xmas_posy", "texture", {\n            url: "/static/assets/cubemaps/xmas_faces/xmas_posy.png",\n        }),\n        xmas_posz: new pc.Asset("xmas_posz", "texture", {\n            url: "/static/assets/cubemaps/xmas_faces/xmas_posz.png",\n        }),\n    };\n\n    const gfxOptions = {\n        deviceTypes: [deviceType],\n        glslangUrl: "/static/lib/glslang/glslang.js",\n        twgslUrl: "/static/lib/twgsl/twgsl.js",\n    };\n\n    pc.createGraphicsDevice(canvas, gfxOptions).then((device) => {\n        const createOptions = new pc.AppOptions();\n        createOptions.graphicsDevice = device;\n        createOptions.keyboard = new pc.Keyboard(document.body);\n\n        createOptions.componentSystems = [\n            // @ts-ignore\n            pc.RenderComponentSystem,\n            // @ts-ignore\n            pc.CameraComponentSystem,\n            // @ts-ignore\n            pc.LightComponentSystem,\n        ];\n\n        createOptions.resourceHandlers = [\n            // @ts-ignore\n            pc.TextureHandler,\n            // @ts-ignore\n            pc.ContainerHandler,\n            // @ts-ignore\n            pc.CubemapHandler,\n        ];\n\n        const app = new pc.AppBase(canvas);\n        app.init(createOptions);\n\n        // Set the canvas to fill the window and automatically change resolution to be the same as the canvas size\n        app.setCanvasFillMode(pc.FILLMODE_FILL_WINDOW);\n        app.setCanvasResolution(pc.RESOLUTION_AUTO);\n\n        const assetListLoader = new pc.AssetListLoader(\n            Object.values(assets),\n            app.assets\n        );\n        assetListLoader.load(() => {\n            app.start();\n\n            // enable cookies which are disabled by default for clustered lighting\n            app.scene.lighting.cookiesEnabled = true;\n\n            // ambient lighting\n            app.scene.ambientLight = new pc.Color(0.2, 0.2, 0.2);\n\n            // create an entity with the statue\n            const entity = assets.statue.resource.instantiateRenderEntity();\n\n            app.root.addChild(entity);\n\n            // Create an Entity with a camera component\n            const camera = new pc.Entity();\n            camera.addComponent("camera", {\n                clearColor: new pc.Color(0.4, 0.45, 0.5),\n            });\n            camera.translate(0, 15, 35);\n            camera.rotate(-14, 0, 0);\n            app.root.addChild(camera);\n\n            // ground material\n            const material = createMaterial({\n                ambient: pc.Color.GRAY,\n                diffuse: pc.Color.GRAY,\n            });\n\n            // Create an Entity for the ground\n            const ground = new pc.Entity();\n            ground.addComponent("render", {\n                type: "box",\n                material: material,\n            });\n            ground.setLocalScale(70, 1, 70);\n            ground.setLocalPosition(0, -0.5, 0);\n            app.root.addChild(ground);\n\n            // setup light data\n            data.set("lights", {\n                spot: {\n                    enabled: true,\n                    intensity: 0.8,\n                    cookieIntensity: 1,\n                    shadowIntensity: 1,\n                },\n                omni: {\n                    enabled: true,\n                    intensity: 0.8,\n                    cookieIntensity: 1,\n                    shadowIntensity: 1,\n                },\n                directional: {\n                    enabled: true,\n                    intensity: 0.8,\n                    shadowIntensity: 1,\n                },\n            });\n\n            const lights = {};\n\n            // Create an spot light\n            lights.spot = new pc.Entity();\n            lights.spot.addComponent("light", {\n                ...{\n                    type: "spot",\n                    color: pc.Color.WHITE,\n                    innerConeAngle: 30,\n                    outerConeAngle: 31,\n                    range: 100,\n                    castShadows: true,\n                    shadowBias: 0.05,\n                    normalOffsetBias: 0.03,\n                    shadowResolution: 2048,\n                    // heart texture\'s alpha channel as a cookie texture\n                    cookie: assets.heart.resource,\n                    cookieChannel: "a",\n                },\n                ...data.get("lights.spot"),\n            });\n\n            const cone = new pc.Entity();\n            cone.addComponent("render", {\n                type: "cone",\n                castShadows: false,\n                material: createMaterial({ emissive: pc.Color.WHITE }),\n            });\n            lights.spot.addChild(cone);\n            app.root.addChild(lights.spot);\n\n            // construct the cubemap asset for the omni light cookie texture\n            // Note: the textures array could contain 6 texture asset names to load instead as well\n            const cubemapAsset = new pc.Asset("xmas_cubemap", "cubemap", null, {\n                textures: [\n                    assets.xmas_posx.id,\n                    assets.xmas_negx.id,\n                    assets.xmas_posy.id,\n                    assets.xmas_negy.id,\n                    assets.xmas_posz.id,\n                    assets.xmas_negz.id,\n                ],\n            });\n            cubemapAsset.loadFaces = true;\n            app.assets.add(cubemapAsset);\n\n            // Create a omni light\n            lights.omni = new pc.Entity();\n            lights.omni.addComponent("light", {\n                ...{\n                    type: "omni",\n                    color: pc.Color.YELLOW,\n                    castShadows: true,\n                    range: 111,\n                    cookieAsset: cubemapAsset,\n                    cookieChannel: "rgb",\n                },\n                ...data.get("lights.omni"),\n            });\n            lights.omni.addComponent("render", {\n                type: "sphere",\n                castShadows: false,\n                material: createMaterial({\n                    diffuse: pc.Color.BLACK,\n                    emissive: pc.Color.YELLOW,\n                }),\n            });\n            app.root.addChild(lights.omni);\n\n            // Create a directional light\n            lights.directional = new pc.Entity();\n            lights.directional.addComponent("light", {\n                ...{\n                    type: "directional",\n                    color: pc.Color.CYAN,\n                    range: 100,\n                    shadowDistance: 50,\n                    castShadows: true,\n                    shadowBias: 0.1,\n                    normalOffsetBias: 0.2,\n                },\n                ...data.get("lights.directional"),\n            });\n            app.root.addChild(lights.directional);\n\n            // Allow user to toggle individual lights\n            app.keyboard.on(\n                "keydown",\n                function (e) {\n                    // if the user is editing an input field, ignore key presses\n                    if (e.element.constructor.name === "HTMLInputElement")\n                        return;\n                    switch (e.key) {\n                        case pc.KEY_1:\n                            data.set(\n                                "lights.omni.enabled",\n                                !data.get("lights.omni.enabled")\n                            );\n                            break;\n                        case pc.KEY_2:\n                            data.set(\n                                "lights.spot.enabled",\n                                !data.get("lights.spot.enabled")\n                            );\n                            break;\n                        case pc.KEY_3:\n                            data.set(\n                                "lights.directional.enabled",\n                                !data.get("lights.directional.enabled")\n                            );\n                            break;\n                    }\n                },\n                this\n            );\n\n            // Simple update loop to rotate the light\n            let angleRad = 1;\n            app.on("update", function (dt) {\n                angleRad += 0.3 * dt;\n                if (entity) {\n                    lights.spot.lookAt(new pc.Vec3(0, -5, 0));\n                    lights.spot.rotateLocal(90, 0, 0);\n                    lights.spot.setLocalPosition(\n                        15 * Math.sin(angleRad),\n                        25,\n                        15 * Math.cos(angleRad)\n                    );\n\n                    lights.omni.setLocalPosition(\n                        5 * Math.sin(-2 * angleRad),\n                        10,\n                        5 * Math.cos(-2 * angleRad)\n                    );\n                    lights.omni.rotate(0, 50 * dt, 0);\n\n                    lights.directional.setLocalEulerAngles(\n                        45,\n                        -60 * angleRad,\n                        0\n                    );\n                }\n            });\n\n            data.on("*:set", (path, value) => {\n                const pathArray = path.split(".");\n                if (pathArray[2] === "enabled") {\n                    lights[pathArray[1]].enabled = value;\n                } else {\n                    // @ts-ignore\n                    lights[pathArray[1]].light[pathArray[2]] = value;\n                }\n            });\n        });\n    });\n}\n',nameSlug:"lights",categorySlug:"graphics"},lines:{typeScriptFunction:'function example(canvas: HTMLCanvasElement, deviceType: string): void {\n\n    const assets = {\n        \'helipad\': new pc.Asset(\'helipad-env-atlas\', \'texture\', { url: \'/static/assets/cubemaps/helipad-env-atlas.png\' }, { type: pc.TEXTURETYPE_RGBP, mipmaps: false })\n    };\n\n    const gfxOptions = {\n        deviceTypes: [deviceType],\n        glslangUrl: \'/static/lib/glslang/glslang.js\',\n        twgslUrl: \'/static/lib/twgsl/twgsl.js\'\n    };\n\n    pc.createGraphicsDevice(canvas, gfxOptions).then((device: pc.GraphicsDevice) => {\n\n        const createOptions = new pc.AppOptions();\n        createOptions.graphicsDevice = device;\n\n        createOptions.componentSystems = [\n            // @ts-ignore\n            pc.RenderComponentSystem,\n            // @ts-ignore\n            pc.CameraComponentSystem,\n            // @ts-ignore\n            pc.LightComponentSystem\n        ];\n        createOptions.resourceHandlers = [\n            // @ts-ignore\n            pc.TextureHandler\n        ];\n\n        const app = new pc.AppBase(canvas);\n        app.init(createOptions);\n\n        // Set the canvas to fill the window and automatically change resolution to be the same as the canvas size\n        app.setCanvasFillMode(pc.FILLMODE_FILL_WINDOW);\n        app.setCanvasResolution(pc.RESOLUTION_AUTO);\n\n        const assetListLoader = new pc.AssetListLoader(Object.values(assets), app.assets);\n        assetListLoader.load(() => {\n\n            app.start();\n\n            // setup skydome\n            app.scene.skyboxMip = 2;\n            app.scene.exposure = 0.2;\n            app.scene.envAtlas = assets.helipad.resource;\n            app.scene.skyboxRotation = new pc.Quat().setFromEulerAngles(0, 30, 0);\n\n            // Create an Entity with a camera component\n            const camera = new pc.Entity();\n            camera.addComponent("camera", {\n                clearColor: new pc.Color(0.1, 0.1, 0.1)\n            });\n            camera.setLocalPosition(80, 40, 80);\n            camera.lookAt(new pc.Vec3(0, -35, 0));\n            app.root.addChild(camera);\n\n            // Create a directional light\n            const directionallight = new pc.Entity();\n            directionallight.addComponent("light", {\n                type: "directional",\n                color: pc.Color.WHITE,\n                castShadows: false\n            });\n            app.root.addChild(directionallight);\n\n            // create a circle of meshes\n            const meshes: Array<pc.Entity> = [];\n            const numMeshes = 10;\n            for (let i = 0; i < numMeshes; i++) {\n                const entity = new pc.Entity();\n                entity.setLocalScale(4, 4, 4);\n\n                // use material with random color\n                const material = new pc.StandardMaterial();\n                material.diffuse = new pc.Color(Math.random(), Math.random(), Math.random());\n                material.update();\n\n                // create render component\n                entity.addComponent("render", {\n                    type: (i % 2 ? "sphere" : "cylinder"),\n                    material: material,\n                    receiveShadows: false\n                });\n\n                if (!(i % 2)) {\n                    entity.setLocalScale(3, 5, 3);\n                }\n\n                // add entity for rendering\n                app.root.addChild(entity);\n                meshes.push(entity);\n            }\n\n            // helper function to generate elevation of a point with [x, y] coordinates\n            function groundElevation(time: number, x: number, z: number) {\n                return Math.sin(time + 0.2 * x) * 2 + Math.cos(time * 0.2 + 0.5 * z + 0.2 * x);\n            }\n\n            // helper function to generate a color for 3d point by lerping between green and red color\n            // based on its y coordinate\n            function groundColor(color: pc.Color, point: pc.Vec3) {\n                color.lerp(pc.Color.GREEN, pc.Color.RED, pc.math.clamp((point.y + 3) * 0.25, 0, 1));\n            }\n\n            // Set an update function on the app\'s update event\n            let time = 0;\n            app.on("update", function (dt) {\n                time += dt;\n\n                // generate grid of lines - store positions and colors as an arrays of numbers instead of\n                // Vec3s and Colors to improve performance\n                const positions = [];\n                const colors = [];\n\n                // temporary instances for calculations\n                const pt1 = new pc.Vec3();\n                const pt2 = new pc.Vec3();\n                const pt3 = new pc.Vec3();\n                const c1 = new pc.Color();\n                const c2 = new pc.Color();\n                const c3 = new pc.Color();\n\n                for (let x = 1; x < 60; x++) {\n                    for (let z = 1; z < 60; z++) {\n\n                        // generate 3 points: one start point, one along x and one along z axis\n                        pt1.set(x, groundElevation(time, x, z), z);\n                        pt2.set(x - 1, groundElevation(time, x - 1, z), z);\n                        pt3.set(x, groundElevation(time, x, z - 1), z - 1);\n\n                        // generate colors for the 3 points\n                        groundColor(c1, pt1);\n                        groundColor(c2, pt2);\n                        groundColor(c3, pt3);\n\n                        // add line connecting points along z axis\n                        if (x > 1) {\n                            positions.push(pt1.x, pt1.y, pt1.z, pt2.x, pt2.y, pt2.z);\n                            colors.push(c1.r, c1.g, c1.b, c1.a, c2.r, c2.g, c2.b, c2.a);\n                        }\n\n                        // add line connecting points along x axis\n                        if (z > 1) {\n                            positions.push(pt1.x, pt1.y, pt1.z, pt3.x, pt3.y, pt3.z);\n                            colors.push(c1.r, c1.g, c1.b, c1.a, c3.r, c3.g, c3.b, c3.a);\n                        }\n                    }\n                }\n\n                // submit the generated arrays of lines and colors for rendering\n                app.drawLineArrays(positions, colors);\n\n                // array of Vec3 and Color classes for different way to render lines\n                const grayLinePositions = [];\n                const grayLineColors = [];\n\n                // handle the array of meshes\n                for (let i = 0; i < numMeshes; i++) {\n\n                    // move them equally spaced out around in the circle\n                    const offset = i * Math.PI * 2 / numMeshes;\n                    const entity = meshes[i];\n                    entity.setLocalPosition(\n                        30 + 20 * Math.sin(time * 0.2 + offset),\n                        5 + 2 * Math.sin(time + 3 * i / numMeshes),\n                        30 + 20 * Math.cos(time * 0.2 + offset)\n                    );\n\n                    // rotate the meshes\n                    entity.rotate((i + 1) * dt, 4 * (i + 1) * dt, 6 * (i + 1) * dt);\n\n                    // draw a single magenta line from this mesh to the next mesh\n                    const nextEntity = meshes[(i + 1) % meshes.length];\n                    app.drawLine(entity.getPosition(), nextEntity.getPosition(), pc.Color.MAGENTA);\n\n                    // store positions and colors of lines connecting objects to a center point\n                    grayLinePositions.push(entity.getPosition(), new pc.Vec3(0, 10, 0));\n                    grayLineColors.push(pc.Color.GRAY, pc.Color.GRAY);\n                }\n\n                // render all gray lines\n                app.drawLines(grayLinePositions, grayLineColors);\n            });\n        });\n    });\n}',javaScriptFunction:'function example(canvas, deviceType) {\n    const assets = {\n        helipad: new pc.Asset(\n            "helipad-env-atlas",\n            "texture",\n            { url: "/static/assets/cubemaps/helipad-env-atlas.png" },\n            { type: pc.TEXTURETYPE_RGBP, mipmaps: false }\n        ),\n    };\n\n    const gfxOptions = {\n        deviceTypes: [deviceType],\n        glslangUrl: "/static/lib/glslang/glslang.js",\n        twgslUrl: "/static/lib/twgsl/twgsl.js",\n    };\n\n    pc.createGraphicsDevice(canvas, gfxOptions).then((device) => {\n        const createOptions = new pc.AppOptions();\n        createOptions.graphicsDevice = device;\n\n        createOptions.componentSystems = [\n            // @ts-ignore\n            pc.RenderComponentSystem,\n            // @ts-ignore\n            pc.CameraComponentSystem,\n            // @ts-ignore\n            pc.LightComponentSystem,\n        ];\n\n        createOptions.resourceHandlers = [\n            // @ts-ignore\n            pc.TextureHandler,\n        ];\n\n        const app = new pc.AppBase(canvas);\n        app.init(createOptions);\n\n        // Set the canvas to fill the window and automatically change resolution to be the same as the canvas size\n        app.setCanvasFillMode(pc.FILLMODE_FILL_WINDOW);\n        app.setCanvasResolution(pc.RESOLUTION_AUTO);\n\n        const assetListLoader = new pc.AssetListLoader(\n            Object.values(assets),\n            app.assets\n        );\n        assetListLoader.load(() => {\n            app.start();\n\n            // setup skydome\n            app.scene.skyboxMip = 2;\n            app.scene.exposure = 0.2;\n            app.scene.envAtlas = assets.helipad.resource;\n            app.scene.skyboxRotation = new pc.Quat().setFromEulerAngles(\n                0,\n                30,\n                0\n            );\n\n            // Create an Entity with a camera component\n            const camera = new pc.Entity();\n            camera.addComponent("camera", {\n                clearColor: new pc.Color(0.1, 0.1, 0.1),\n            });\n            camera.setLocalPosition(80, 40, 80);\n            camera.lookAt(new pc.Vec3(0, -35, 0));\n            app.root.addChild(camera);\n\n            // Create a directional light\n            const directionallight = new pc.Entity();\n            directionallight.addComponent("light", {\n                type: "directional",\n                color: pc.Color.WHITE,\n                castShadows: false,\n            });\n            app.root.addChild(directionallight);\n\n            // create a circle of meshes\n            const meshes = [];\n            const numMeshes = 10;\n            for (let i = 0; i < numMeshes; i++) {\n                const entity = new pc.Entity();\n                entity.setLocalScale(4, 4, 4);\n\n                // use material with random color\n                const material = new pc.StandardMaterial();\n                material.diffuse = new pc.Color(\n                    Math.random(),\n                    Math.random(),\n                    Math.random()\n                );\n                material.update();\n\n                // create render component\n                entity.addComponent("render", {\n                    type: i % 2 ? "sphere" : "cylinder",\n                    material: material,\n                    receiveShadows: false,\n                });\n\n                if (!(i % 2)) {\n                    entity.setLocalScale(3, 5, 3);\n                }\n\n                // add entity for rendering\n                app.root.addChild(entity);\n                meshes.push(entity);\n            }\n\n            // helper function to generate elevation of a point with [x, y] coordinates\n            function groundElevation(time, x, z) {\n                return (\n                    Math.sin(time + 0.2 * x) * 2 +\n                    Math.cos(time * 0.2 + 0.5 * z + 0.2 * x)\n                );\n            }\n\n            // helper function to generate a color for 3d point by lerping between green and red color\n            // based on its y coordinate\n            function groundColor(color, point) {\n                color.lerp(\n                    pc.Color.GREEN,\n                    pc.Color.RED,\n                    pc.math.clamp((point.y + 3) * 0.25, 0, 1)\n                );\n            }\n\n            // Set an update function on the app\'s update event\n            let time = 0;\n            app.on("update", function (dt) {\n                time += dt;\n\n                // generate grid of lines - store positions and colors as an arrays of numbers instead of\n                // Vec3s and Colors to improve performance\n                const positions = [];\n                const colors = [];\n\n                // temporary instances for calculations\n                const pt1 = new pc.Vec3();\n                const pt2 = new pc.Vec3();\n                const pt3 = new pc.Vec3();\n                const c1 = new pc.Color();\n                const c2 = new pc.Color();\n                const c3 = new pc.Color();\n\n                for (let x = 1; x < 60; x++) {\n                    for (let z = 1; z < 60; z++) {\n                        // generate 3 points: one start point, one along x and one along z axis\n                        pt1.set(x, groundElevation(time, x, z), z);\n                        pt2.set(x - 1, groundElevation(time, x - 1, z), z);\n                        pt3.set(x, groundElevation(time, x, z - 1), z - 1);\n\n                        // generate colors for the 3 points\n                        groundColor(c1, pt1);\n                        groundColor(c2, pt2);\n                        groundColor(c3, pt3);\n\n                        // add line connecting points along z axis\n                        if (x > 1) {\n                            positions.push(\n                                pt1.x,\n                                pt1.y,\n                                pt1.z,\n                                pt2.x,\n                                pt2.y,\n                                pt2.z\n                            );\n                            colors.push(\n                                c1.r,\n                                c1.g,\n                                c1.b,\n                                c1.a,\n                                c2.r,\n                                c2.g,\n                                c2.b,\n                                c2.a\n                            );\n                        }\n\n                        // add line connecting points along x axis\n                        if (z > 1) {\n                            positions.push(\n                                pt1.x,\n                                pt1.y,\n                                pt1.z,\n                                pt3.x,\n                                pt3.y,\n                                pt3.z\n                            );\n                            colors.push(\n                                c1.r,\n                                c1.g,\n                                c1.b,\n                                c1.a,\n                                c3.r,\n                                c3.g,\n                                c3.b,\n                                c3.a\n                            );\n                        }\n                    }\n                }\n\n                // submit the generated arrays of lines and colors for rendering\n                app.drawLineArrays(positions, colors);\n\n                // array of Vec3 and Color classes for different way to render lines\n                const grayLinePositions = [];\n                const grayLineColors = [];\n\n                // handle the array of meshes\n                for (let i = 0; i < numMeshes; i++) {\n                    // move them equally spaced out around in the circle\n                    const offset = (i * Math.PI * 2) / numMeshes;\n                    const entity = meshes[i];\n                    entity.setLocalPosition(\n                        30 + 20 * Math.sin(time * 0.2 + offset),\n                        5 + 2 * Math.sin(time + (3 * i) / numMeshes),\n                        30 + 20 * Math.cos(time * 0.2 + offset)\n                    );\n\n                    // rotate the meshes\n                    entity.rotate(\n                        (i + 1) * dt,\n                        4 * (i + 1) * dt,\n                        6 * (i + 1) * dt\n                    );\n\n                    // draw a single magenta line from this mesh to the next mesh\n                    const nextEntity = meshes[(i + 1) % meshes.length];\n                    app.drawLine(\n                        entity.getPosition(),\n                        nextEntity.getPosition(),\n                        pc.Color.MAGENTA\n                    );\n\n                    // store positions and colors of lines connecting objects to a center point\n                    grayLinePositions.push(\n                        entity.getPosition(),\n                        new pc.Vec3(0, 10, 0)\n                    );\n                    grayLineColors.push(pc.Color.GRAY, pc.Color.GRAY);\n                }\n\n                // render all gray lines\n                app.drawLines(grayLinePositions, grayLineColors);\n            });\n        });\n    });\n}\n',nameSlug:"lines",categorySlug:"graphics"},"material-anisotropic":{typeScriptFunction:"function example(canvas: HTMLCanvasElement, deviceType: string): void {\n\n    const assets = {\n        helipad: new pc.Asset('helipad-env-atlas', 'texture', { url: '/static/assets/cubemaps/helipad-env-atlas.png' }, { type: pc.TEXTURETYPE_RGBP, mipmaps: false }),\n        'font': new pc.Asset('font', 'font', { url: '/static/assets/fonts/arial.json' })\n    };\n\n    const gfxOptions = {\n        deviceTypes: [deviceType],\n        glslangUrl: '/static/lib/glslang/glslang.js',\n        twgslUrl: '/static/lib/twgsl/twgsl.js'\n    };\n\n    pc.createGraphicsDevice(canvas, gfxOptions).then((device: pc.GraphicsDevice) => {\n\n        const createOptions = new pc.AppOptions();\n        createOptions.graphicsDevice = device;\n        createOptions.mouse = new pc.Mouse(document.body);\n        createOptions.touch = new pc.TouchDevice(document.body);\n\n        createOptions.componentSystems = [\n            // @ts-ignore\n            pc.RenderComponentSystem,\n            // @ts-ignore\n            pc.CameraComponentSystem,\n            // @ts-ignore\n            pc.LightComponentSystem,\n            // @ts-ignore\n            pc.ElementComponentSystem\n        ];\n        createOptions.resourceHandlers = [\n            // @ts-ignore\n            pc.TextureHandler,\n            // @ts-ignore\n            pc.FontHandler\n        ];\n\n        const app = new pc.AppBase(canvas);\n        app.init(createOptions);\n\n        // Set the canvas to fill the window and automatically change resolution to be the same as the canvas size\n        app.setCanvasFillMode(pc.FILLMODE_FILL_WINDOW);\n        app.setCanvasResolution(pc.RESOLUTION_AUTO);\n\n        const assetListLoader = new pc.AssetListLoader(Object.values(assets), app.assets);\n        assetListLoader.load(() => {\n\n            app.start();\n\n            app.scene.toneMapping = pc.TONEMAP_ACES;\n            app.scene.skyboxMip = 1;\n            app.scene.envAtlas = assets.helipad.resource;\n\n            // Create an entity with a camera component\n            const camera = new pc.Entity();\n            camera.addComponent(\"camera\");\n            camera.translate(0, 6, 6);\n            camera.rotate(-48, 0, 0);\n            app.root.addChild(camera);\n\n            // Create an entity with a directional light component\n            const light = new pc.Entity();\n            light.addComponent(\"light\", {\n                type: \"directional\"\n            });\n            app.root.addChild(light);\n            const e = light.getLocalEulerAngles();\n            light.setLocalEulerAngles(e.x + 90, e.y - 75, e.z);\n\n            const NUM_SPHERES_X = 11;\n            const NUM_SPHERES_Z = 6;\n\n            const createSphere = function (x: number, y: number, z: number) {\n                const material = new pc.StandardMaterial();\n                material.metalness = 1.0;\n                material.gloss = z / (NUM_SPHERES_Z - 1);\n                material.useMetalness = true;\n                material.anisotropy = ((2 * x / (NUM_SPHERES_X - 1)) - 1.0) * -1.0;\n                material.enableGGXSpecular = true;\n                material.update();\n\n                const sphere = new pc.Entity();\n\n                sphere.addComponent(\"render\", {\n                    material: material,\n                    type: \"sphere\"\n                });\n                sphere.setLocalPosition(x - (NUM_SPHERES_X - 1) * 0.5, y, z - (NUM_SPHERES_Z - 1) * 0.5);\n                sphere.setLocalScale(0.7, 0.7, 0.7);\n                app.root.addChild(sphere);\n            };\n\n            const createText = function (fontAsset: pc.Asset, message: string, x: number, y: number, z: number, rotx: number, roty: number) {\n                // Create a text element-based entity\n                const text = new pc.Entity();\n                text.addComponent(\"element\", {\n                    anchor: [0.5, 0.5, 0.5, 0.5],\n                    fontAsset: fontAsset,\n                    fontSize: 0.5,\n                    pivot: [0.5, 0.5],\n                    text: message,\n                    type: pc.ELEMENTTYPE_TEXT\n                });\n                text.setLocalPosition(x, y, z);\n                text.setLocalEulerAngles(rotx, roty, 0);\n                app.root.addChild(text);\n            };\n\n            for (let i = 0; i < NUM_SPHERES_Z; i++) {\n                for (let j = 0; j < NUM_SPHERES_X; j++) {\n                    createSphere(j, 0, i);\n                }\n            }\n\n            createText(assets.font, 'Anisotropy', 0, 0, ((NUM_SPHERES_Z + 1) * 0.5), -90, 0);\n            createText(assets.font, 'Roughness', -(NUM_SPHERES_X + 1) * 0.5, 0, 0, -90, 90);\n        });\n    });\n}",javaScriptFunction:'function example(canvas, deviceType) {\n    const assets = {\n        helipad: new pc.Asset(\n            "helipad-env-atlas",\n            "texture",\n            { url: "/static/assets/cubemaps/helipad-env-atlas.png" },\n            { type: pc.TEXTURETYPE_RGBP, mipmaps: false }\n        ),\n        font: new pc.Asset("font", "font", {\n            url: "/static/assets/fonts/arial.json",\n        }),\n    };\n\n    const gfxOptions = {\n        deviceTypes: [deviceType],\n        glslangUrl: "/static/lib/glslang/glslang.js",\n        twgslUrl: "/static/lib/twgsl/twgsl.js",\n    };\n\n    pc.createGraphicsDevice(canvas, gfxOptions).then((device) => {\n        const createOptions = new pc.AppOptions();\n        createOptions.graphicsDevice = device;\n        createOptions.mouse = new pc.Mouse(document.body);\n        createOptions.touch = new pc.TouchDevice(document.body);\n\n        createOptions.componentSystems = [\n            // @ts-ignore\n            pc.RenderComponentSystem,\n            // @ts-ignore\n            pc.CameraComponentSystem,\n            // @ts-ignore\n            pc.LightComponentSystem,\n            // @ts-ignore\n            pc.ElementComponentSystem,\n        ];\n\n        createOptions.resourceHandlers = [\n            // @ts-ignore\n            pc.TextureHandler,\n            // @ts-ignore\n            pc.FontHandler,\n        ];\n\n        const app = new pc.AppBase(canvas);\n        app.init(createOptions);\n\n        // Set the canvas to fill the window and automatically change resolution to be the same as the canvas size\n        app.setCanvasFillMode(pc.FILLMODE_FILL_WINDOW);\n        app.setCanvasResolution(pc.RESOLUTION_AUTO);\n\n        const assetListLoader = new pc.AssetListLoader(\n            Object.values(assets),\n            app.assets\n        );\n        assetListLoader.load(() => {\n            app.start();\n\n            app.scene.toneMapping = pc.TONEMAP_ACES;\n            app.scene.skyboxMip = 1;\n            app.scene.envAtlas = assets.helipad.resource;\n\n            // Create an entity with a camera component\n            const camera = new pc.Entity();\n            camera.addComponent("camera");\n            camera.translate(0, 6, 6);\n            camera.rotate(-48, 0, 0);\n            app.root.addChild(camera);\n\n            // Create an entity with a directional light component\n            const light = new pc.Entity();\n            light.addComponent("light", {\n                type: "directional",\n            });\n            app.root.addChild(light);\n            const e = light.getLocalEulerAngles();\n            light.setLocalEulerAngles(e.x + 90, e.y - 75, e.z);\n\n            const NUM_SPHERES_X = 11;\n            const NUM_SPHERES_Z = 6;\n\n            const createSphere = function (x, y, z) {\n                const material = new pc.StandardMaterial();\n                material.metalness = 1.0;\n                material.gloss = z / (NUM_SPHERES_Z - 1);\n                material.useMetalness = true;\n                material.anisotropy =\n                    ((2 * x) / (NUM_SPHERES_X - 1) - 1.0) * -1.0;\n                material.enableGGXSpecular = true;\n                material.update();\n\n                const sphere = new pc.Entity();\n\n                sphere.addComponent("render", {\n                    material: material,\n                    type: "sphere",\n                });\n                sphere.setLocalPosition(\n                    x - (NUM_SPHERES_X - 1) * 0.5,\n                    y,\n                    z - (NUM_SPHERES_Z - 1) * 0.5\n                );\n                sphere.setLocalScale(0.7, 0.7, 0.7);\n                app.root.addChild(sphere);\n            };\n\n            const createText = function (\n                fontAsset,\n                message,\n                x,\n                y,\n                z,\n                rotx,\n                roty\n            ) {\n                // Create a text element-based entity\n                const text = new pc.Entity();\n                text.addComponent("element", {\n                    anchor: [0.5, 0.5, 0.5, 0.5],\n                    fontAsset: fontAsset,\n                    fontSize: 0.5,\n                    pivot: [0.5, 0.5],\n                    text: message,\n                    type: pc.ELEMENTTYPE_TEXT,\n                });\n                text.setLocalPosition(x, y, z);\n                text.setLocalEulerAngles(rotx, roty, 0);\n                app.root.addChild(text);\n            };\n\n            for (let i = 0; i < NUM_SPHERES_Z; i++) {\n                for (let j = 0; j < NUM_SPHERES_X; j++) {\n                    createSphere(j, 0, i);\n                }\n            }\n\n            createText(\n                assets.font,\n                "Anisotropy",\n                0,\n                0,\n                (NUM_SPHERES_Z + 1) * 0.5,\n                -90,\n                0\n            );\n            createText(\n                assets.font,\n                "Roughness",\n                -(NUM_SPHERES_X + 1) * 0.5,\n                0,\n                0,\n                -90,\n                90\n            );\n        });\n    });\n}\n',nameSlug:"material-anisotropic",categorySlug:"graphics"},"material-basic":{typeScriptFunction:"function example(canvas: HTMLCanvasElement, deviceType: string): void {\n\n    const assets = {\n        'font': new pc.Asset('font', 'font', { url: '/static/assets/fonts/arial.json' }),\n        'rocks': new pc.Asset(\"rocks\", \"texture\", { url: \"/static/assets/textures/seaside-rocks01-diffuse-alpha.png\" })\n    };\n\n    const gfxOptions = {\n        deviceTypes: [deviceType],\n        glslangUrl: '/static/lib/glslang/glslang.js',\n        twgslUrl: '/static/lib/twgsl/twgsl.js'\n    };\n\n    pc.createGraphicsDevice(canvas, gfxOptions).then((device: pc.GraphicsDevice) => {\n\n        const createOptions = new pc.AppOptions();\n        createOptions.graphicsDevice = device;\n\n        createOptions.componentSystems = [\n            // @ts-ignore\n            pc.RenderComponentSystem,\n            // @ts-ignore\n            pc.CameraComponentSystem,\n            // @ts-ignore\n            pc.ElementComponentSystem\n        ];\n        createOptions.resourceHandlers = [\n            // @ts-ignore\n            pc.TextureHandler,\n            // @ts-ignore\n            pc.FontHandler\n        ];\n\n        const app = new pc.AppBase(canvas);\n        app.init(createOptions);\n\n        // Set the canvas to fill the window and automatically change resolution to be the same as the canvas size\n        app.setCanvasFillMode(pc.FILLMODE_FILL_WINDOW);\n        app.setCanvasResolution(pc.RESOLUTION_AUTO);\n\n        const assetListLoader = new pc.AssetListLoader(Object.values(assets), app.assets);\n        assetListLoader.load(() => {\n\n            app.start();\n\n            // Create an entity with a camera component\n            const camera = new pc.Entity();\n            camera.addComponent(\"camera\", {\n                clearColor: new pc.Color(0.1, 0.1, 0.1, 1)\n            });\n            camera.translate(2, 1, 8);\n            camera.lookAt(new pc.Vec3(0, -0.3, 0));\n            app.root.addChild(camera);\n\n            const NUM_BOXES = 5;\n\n            // alpha blend modes for individual rows\n            const blendModes = [\n                pc.BLEND_ADDITIVE,\n                pc.BLEND_SUBTRACTIVE,\n                pc.BLEND_SCREEN,\n                pc.BLEND_NORMAL,\n                pc.BLEND_NONE\n            ];\n\n            const createPrimitive = function (x: number, y: number, z: number) : pc.Entity {\n\n                // a basic material, which does not have support for lighting\n                const material = new pc.BasicMaterial();\n\n                // diffuse color\n                material.color.set(x, y, 1 - y);\n\n                // diffuse texture with alpha channel for transparency\n                material.colorMap = assets.rocks.resource;\n\n                // disable culling to see back faces as well\n                material.cull = pc.CULLFACE_NONE;\n\n                // set up alpha test value\n                material.alphaTest = x / NUM_BOXES - 0.1;\n\n                // alpha blend mode\n                material.blendType = blendModes[y];\n\n                const box = new pc.Entity();\n                box.addComponent(\"render\", {\n                    material: material,\n                    type: \"box\",\n\n                    // Note: basic material cannot currently cast shadows, disable it\n                    castShadows: false\n                });\n                box.setLocalPosition(x - (NUM_BOXES - 1) * 0.5, y - (NUM_BOXES - 1) * 0.5, z);\n                box.setLocalScale(0.7, 0.7, 0.7);\n                app.root.addChild(box);\n\n                return box;\n            };\n\n            const boxes: Array<pc.Entity> = [];\n            for (let i = 0; i < NUM_BOXES; i++) {\n                for (let j = 0; j < NUM_BOXES; j++) {\n                    boxes.push(createPrimitive(j, i, 0));\n                }\n            }\n\n            const createText = function (fontAsset: pc.Asset, message: string, x: number, y: number, z: number, rot: number) {\n                // Create a text element-based entity\n                const text = new pc.Entity();\n                text.addComponent(\"element\", {\n                    anchor: [0.5, 0.5, 0.5, 0.5],\n                    fontAsset: fontAsset,\n                    fontSize: 0.5,\n                    pivot: [0.5, 0.5],\n                    text: message,\n                    type: pc.ELEMENTTYPE_TEXT\n                });\n                text.setLocalPosition(x, y, z);\n                text.setLocalEulerAngles(0, 0, rot);\n                app.root.addChild(text);\n            };\n\n            createText(assets.font, 'Alpha Test', 0, -(NUM_BOXES + 1) * 0.5, 0, 0);\n            createText(assets.font, 'Alpha Blend', -(NUM_BOXES + 1) * 0.5, 0, 0, 90);\n\n            // Set an update function on the app's update event\n            let time = 0;\n            const rot = new pc.Quat();\n            app.on(\"update\", function (dt: number) {\n                time += dt;\n\n                // rotate the boxes\n                rot.setFromEulerAngles(20 * time, 30 * time, 0);\n                boxes.forEach((box) => {\n                    box.setRotation(rot);\n                });\n            });\n        });\n    });\n}",javaScriptFunction:'function example(canvas, deviceType) {\n    const assets = {\n        font: new pc.Asset("font", "font", {\n            url: "/static/assets/fonts/arial.json",\n        }),\n        rocks: new pc.Asset("rocks", "texture", {\n            url: "/static/assets/textures/seaside-rocks01-diffuse-alpha.png",\n        }),\n    };\n\n    const gfxOptions = {\n        deviceTypes: [deviceType],\n        glslangUrl: "/static/lib/glslang/glslang.js",\n        twgslUrl: "/static/lib/twgsl/twgsl.js",\n    };\n\n    pc.createGraphicsDevice(canvas, gfxOptions).then((device) => {\n        const createOptions = new pc.AppOptions();\n        createOptions.graphicsDevice = device;\n\n        createOptions.componentSystems = [\n            // @ts-ignore\n            pc.RenderComponentSystem,\n            // @ts-ignore\n            pc.CameraComponentSystem,\n            // @ts-ignore\n            pc.ElementComponentSystem,\n        ];\n\n        createOptions.resourceHandlers = [\n            // @ts-ignore\n            pc.TextureHandler,\n            // @ts-ignore\n            pc.FontHandler,\n        ];\n\n        const app = new pc.AppBase(canvas);\n        app.init(createOptions);\n\n        // Set the canvas to fill the window and automatically change resolution to be the same as the canvas size\n        app.setCanvasFillMode(pc.FILLMODE_FILL_WINDOW);\n        app.setCanvasResolution(pc.RESOLUTION_AUTO);\n\n        const assetListLoader = new pc.AssetListLoader(\n            Object.values(assets),\n            app.assets\n        );\n        assetListLoader.load(() => {\n            app.start();\n\n            // Create an entity with a camera component\n            const camera = new pc.Entity();\n            camera.addComponent("camera", {\n                clearColor: new pc.Color(0.1, 0.1, 0.1, 1),\n            });\n            camera.translate(2, 1, 8);\n            camera.lookAt(new pc.Vec3(0, -0.3, 0));\n            app.root.addChild(camera);\n\n            const NUM_BOXES = 5;\n\n            // alpha blend modes for individual rows\n            const blendModes = [\n                pc.BLEND_ADDITIVE,\n                pc.BLEND_SUBTRACTIVE,\n                pc.BLEND_SCREEN,\n                pc.BLEND_NORMAL,\n                pc.BLEND_NONE,\n            ];\n\n            const createPrimitive = function (x, y, z) {\n                // a basic material, which does not have support for lighting\n                const material = new pc.BasicMaterial();\n\n                // diffuse color\n                material.color.set(x, y, 1 - y);\n\n                // diffuse texture with alpha channel for transparency\n                material.colorMap = assets.rocks.resource;\n\n                // disable culling to see back faces as well\n                material.cull = pc.CULLFACE_NONE;\n\n                // set up alpha test value\n                material.alphaTest = x / NUM_BOXES - 0.1;\n\n                // alpha blend mode\n                material.blendType = blendModes[y];\n\n                const box = new pc.Entity();\n                box.addComponent("render", {\n                    material: material,\n                    type: "box",\n\n                    // Note: basic material cannot currently cast shadows, disable it\n                    castShadows: false,\n                });\n                box.setLocalPosition(\n                    x - (NUM_BOXES - 1) * 0.5,\n                    y - (NUM_BOXES - 1) * 0.5,\n                    z\n                );\n                box.setLocalScale(0.7, 0.7, 0.7);\n                app.root.addChild(box);\n\n                return box;\n            };\n\n            const boxes = [];\n            for (let i = 0; i < NUM_BOXES; i++) {\n                for (let j = 0; j < NUM_BOXES; j++) {\n                    boxes.push(createPrimitive(j, i, 0));\n                }\n            }\n\n            const createText = function (fontAsset, message, x, y, z, rot) {\n                // Create a text element-based entity\n                const text = new pc.Entity();\n                text.addComponent("element", {\n                    anchor: [0.5, 0.5, 0.5, 0.5],\n                    fontAsset: fontAsset,\n                    fontSize: 0.5,\n                    pivot: [0.5, 0.5],\n                    text: message,\n                    type: pc.ELEMENTTYPE_TEXT,\n                });\n                text.setLocalPosition(x, y, z);\n                text.setLocalEulerAngles(0, 0, rot);\n                app.root.addChild(text);\n            };\n\n            createText(\n                assets.font,\n                "Alpha Test",\n                0,\n                -(NUM_BOXES + 1) * 0.5,\n                0,\n                0\n            );\n            createText(\n                assets.font,\n                "Alpha Blend",\n                -(NUM_BOXES + 1) * 0.5,\n                0,\n                0,\n                90\n            );\n\n            // Set an update function on the app\'s update event\n            let time = 0;\n            const rot = new pc.Quat();\n            app.on("update", function (dt) {\n                time += dt;\n\n                // rotate the boxes\n                rot.setFromEulerAngles(20 * time, 30 * time, 0);\n                boxes.forEach((box) => {\n                    box.setRotation(rot);\n                });\n            });\n        });\n    });\n}\n',nameSlug:"material-basic",categorySlug:"graphics"},"material-clear-coat":{typeScriptFunction:"function example(canvas: HTMLCanvasElement, deviceType: string): void {\n\n    const assets = {\n        helipad: new pc.Asset('helipad-env-atlas', 'texture', { url: '/static/assets/cubemaps/helipad-env-atlas.png' }, { type: pc.TEXTURETYPE_RGBP, mipmaps: false }),\n        'normal': new pc.Asset('normal', 'texture', { url: '/static/assets/textures/flakes5n.png' }),\n        'diffuse': new pc.Asset('diffuse', 'texture', { url: '/static/assets/textures/flakes5c.png' }),\n        'other': new pc.Asset('other', 'texture', { url: '/static/assets/textures/flakes5o.png' })\n    };\n\n    const gfxOptions = {\n        deviceTypes: [deviceType],\n        glslangUrl: '/static/lib/glslang/glslang.js',\n        twgslUrl: '/static/lib/twgsl/twgsl.js'\n    };\n\n    pc.createGraphicsDevice(canvas, gfxOptions).then((device: pc.GraphicsDevice) => {\n\n        const createOptions = new pc.AppOptions();\n        createOptions.graphicsDevice = device;\n        createOptions.mouse = new pc.Mouse(document.body);\n        createOptions.touch = new pc.TouchDevice(document.body);\n\n        createOptions.componentSystems = [\n            // @ts-ignore\n            pc.RenderComponentSystem,\n            // @ts-ignore\n            pc.CameraComponentSystem,\n            // @ts-ignore\n            pc.LightComponentSystem\n        ];\n        createOptions.resourceHandlers = [\n            // @ts-ignore\n            pc.TextureHandler\n        ];\n\n        const app = new pc.AppBase(canvas);\n        app.init(createOptions);\n\n        // Set the canvas to fill the window and automatically change resolution to be the same as the canvas size\n        app.setCanvasFillMode(pc.FILLMODE_FILL_WINDOW);\n        app.setCanvasResolution(pc.RESOLUTION_AUTO);\n\n        const assetListLoader = new pc.AssetListLoader(Object.values(assets), app.assets);\n        assetListLoader.load(() => {\n\n            app.start();\n\n            app.scene.toneMapping = pc.TONEMAP_ACES;\n            app.scene.envAtlas = assets.helipad.resource;\n            app.scene.skyboxMip = 1;\n\n            // Create an entity with a camera component\n            const camera = new pc.Entity();\n            camera.addComponent(\"camera\");\n            camera.translate(0, 0, 3);\n            app.root.addChild(camera);\n\n            // Create an entity with a directional light component\n            const light = new pc.Entity();\n            light.addComponent(\"light\", {\n                type: \"directional\",\n                color: new pc.Color(1, 0.8, 0.25)\n            });\n            app.root.addChild(light);\n            light.setLocalEulerAngles(85, -100, 0);\n\n            // function to create sphere\n            const createSphere = function (x: number, y: number, z: number, material: pc.Material) {\n                const sphere = new pc.Entity();\n\n                sphere.addComponent(\"render\", {\n                    material: material,\n                    type: \"sphere\"\n                });\n                sphere.setLocalPosition(x, y, z);\n                sphere.setLocalScale(0.7, 0.7, 0.7);\n                app.root.addChild(sphere);\n            };\n\n            const material = new pc.StandardMaterial();\n            material.diffuseMap = assets.diffuse.resource;\n            material.metalnessMap = assets.other.resource;\n            material.metalnessMapChannel = 'r';\n            material.glossMap = assets.other.resource;\n            material.glossMapChannel = 'g';\n            material.normalMap = assets.normal.resource;\n            material.diffuse = new pc.Color(0.6, 0.6, 0.9);\n            material.diffuseTint = true;\n            material.metalness = 1.0;\n            material.gloss = 0.9;\n            material.bumpiness = 0.7;\n            material.useMetalness = true;\n            material.update();\n\n            createSphere(-0.5, 0, 0, material);\n\n            const clearCoatMaterial = new pc.StandardMaterial();\n            clearCoatMaterial.diffuseMap = assets.diffuse.resource;\n            clearCoatMaterial.metalnessMap = assets.other.resource;\n            clearCoatMaterial.metalnessMapChannel = 'r';\n            clearCoatMaterial.glossMap = assets.other.resource;\n            clearCoatMaterial.glossMapChannel = 'g';\n            clearCoatMaterial.normalMap = assets.normal.resource;\n            clearCoatMaterial.diffuse = new pc.Color(0.6, 0.6, 0.9);\n            clearCoatMaterial.diffuseTint = true;\n            clearCoatMaterial.metalness = 1.0;\n            clearCoatMaterial.gloss = 0.9;\n            clearCoatMaterial.bumpiness = 0.7;\n            clearCoatMaterial.useMetalness = true;\n            clearCoatMaterial.clearCoat = 0.25;\n            clearCoatMaterial.clearCoatGloss = 0.9;\n            clearCoatMaterial.update();\n\n            createSphere(0.5, 0, 0, clearCoatMaterial);\n\n            // update things each frame\n            let time = 0;\n            app.on(\"update\", function (dt) {\n                // rotate camera around the objects\n                time += dt;\n                camera.setLocalPosition(3 * Math.sin(time * 0.5), 0, 3 * Math.cos(time * 0.5));\n                camera.lookAt(pc.Vec3.ZERO);\n            });\n        });\n    });\n}",javaScriptFunction:'function example(canvas, deviceType) {\n    const assets = {\n        helipad: new pc.Asset(\n            "helipad-env-atlas",\n            "texture",\n            { url: "/static/assets/cubemaps/helipad-env-atlas.png" },\n            { type: pc.TEXTURETYPE_RGBP, mipmaps: false }\n        ),\n        normal: new pc.Asset("normal", "texture", {\n            url: "/static/assets/textures/flakes5n.png",\n        }),\n        diffuse: new pc.Asset("diffuse", "texture", {\n            url: "/static/assets/textures/flakes5c.png",\n        }),\n        other: new pc.Asset("other", "texture", {\n            url: "/static/assets/textures/flakes5o.png",\n        }),\n    };\n\n    const gfxOptions = {\n        deviceTypes: [deviceType],\n        glslangUrl: "/static/lib/glslang/glslang.js",\n        twgslUrl: "/static/lib/twgsl/twgsl.js",\n    };\n\n    pc.createGraphicsDevice(canvas, gfxOptions).then((device) => {\n        const createOptions = new pc.AppOptions();\n        createOptions.graphicsDevice = device;\n        createOptions.mouse = new pc.Mouse(document.body);\n        createOptions.touch = new pc.TouchDevice(document.body);\n\n        createOptions.componentSystems = [\n            // @ts-ignore\n            pc.RenderComponentSystem,\n            // @ts-ignore\n            pc.CameraComponentSystem,\n            // @ts-ignore\n            pc.LightComponentSystem,\n        ];\n\n        createOptions.resourceHandlers = [\n            // @ts-ignore\n            pc.TextureHandler,\n        ];\n\n        const app = new pc.AppBase(canvas);\n        app.init(createOptions);\n\n        // Set the canvas to fill the window and automatically change resolution to be the same as the canvas size\n        app.setCanvasFillMode(pc.FILLMODE_FILL_WINDOW);\n        app.setCanvasResolution(pc.RESOLUTION_AUTO);\n\n        const assetListLoader = new pc.AssetListLoader(\n            Object.values(assets),\n            app.assets\n        );\n        assetListLoader.load(() => {\n            app.start();\n\n            app.scene.toneMapping = pc.TONEMAP_ACES;\n            app.scene.envAtlas = assets.helipad.resource;\n            app.scene.skyboxMip = 1;\n\n            // Create an entity with a camera component\n            const camera = new pc.Entity();\n            camera.addComponent("camera");\n            camera.translate(0, 0, 3);\n            app.root.addChild(camera);\n\n            // Create an entity with a directional light component\n            const light = new pc.Entity();\n            light.addComponent("light", {\n                type: "directional",\n                color: new pc.Color(1, 0.8, 0.25),\n            });\n            app.root.addChild(light);\n            light.setLocalEulerAngles(85, -100, 0);\n\n            // function to create sphere\n            const createSphere = function (x, y, z, material) {\n                const sphere = new pc.Entity();\n\n                sphere.addComponent("render", {\n                    material: material,\n                    type: "sphere",\n                });\n                sphere.setLocalPosition(x, y, z);\n                sphere.setLocalScale(0.7, 0.7, 0.7);\n                app.root.addChild(sphere);\n            };\n\n            const material = new pc.StandardMaterial();\n            material.diffuseMap = assets.diffuse.resource;\n            material.metalnessMap = assets.other.resource;\n            material.metalnessMapChannel = "r";\n            material.glossMap = assets.other.resource;\n            material.glossMapChannel = "g";\n            material.normalMap = assets.normal.resource;\n            material.diffuse = new pc.Color(0.6, 0.6, 0.9);\n            material.diffuseTint = true;\n            material.metalness = 1.0;\n            material.gloss = 0.9;\n            material.bumpiness = 0.7;\n            material.useMetalness = true;\n            material.update();\n\n            createSphere(-0.5, 0, 0, material);\n\n            const clearCoatMaterial = new pc.StandardMaterial();\n            clearCoatMaterial.diffuseMap = assets.diffuse.resource;\n            clearCoatMaterial.metalnessMap = assets.other.resource;\n            clearCoatMaterial.metalnessMapChannel = "r";\n            clearCoatMaterial.glossMap = assets.other.resource;\n            clearCoatMaterial.glossMapChannel = "g";\n            clearCoatMaterial.normalMap = assets.normal.resource;\n            clearCoatMaterial.diffuse = new pc.Color(0.6, 0.6, 0.9);\n            clearCoatMaterial.diffuseTint = true;\n            clearCoatMaterial.metalness = 1.0;\n            clearCoatMaterial.gloss = 0.9;\n            clearCoatMaterial.bumpiness = 0.7;\n            clearCoatMaterial.useMetalness = true;\n            clearCoatMaterial.clearCoat = 0.25;\n            clearCoatMaterial.clearCoatGloss = 0.9;\n            clearCoatMaterial.update();\n\n            createSphere(0.5, 0, 0, clearCoatMaterial);\n\n            // update things each frame\n            let time = 0;\n            app.on("update", function (dt) {\n                // rotate camera around the objects\n                time += dt;\n                camera.setLocalPosition(\n                    3 * Math.sin(time * 0.5),\n                    0,\n                    3 * Math.cos(time * 0.5)\n                );\n                camera.lookAt(pc.Vec3.ZERO);\n            });\n        });\n    });\n}\n',nameSlug:"material-clear-coat",categorySlug:"graphics"},"material-physical":{typeScriptFunction:"function example(canvas: HTMLCanvasElement, deviceType: string): void {\n\n    const assets = {\n        helipad: new pc.Asset('helipad-env-atlas', 'texture', { url: '/static/assets/cubemaps/helipad-env-atlas.png' }, { type: pc.TEXTURETYPE_RGBP, mipmaps: false }),\n        'font': new pc.Asset('font', 'font', { url: '/static/assets/fonts/arial.json' })\n    };\n\n    const gfxOptions = {\n        deviceTypes: [deviceType],\n        glslangUrl: '/static/lib/glslang/glslang.js',\n        twgslUrl: '/static/lib/twgsl/twgsl.js'\n    };\n\n    pc.createGraphicsDevice(canvas, gfxOptions).then((device: pc.GraphicsDevice) => {\n\n        const createOptions = new pc.AppOptions();\n        createOptions.graphicsDevice = device;\n\n        createOptions.componentSystems = [\n            // @ts-ignore\n            pc.RenderComponentSystem,\n            // @ts-ignore\n            pc.CameraComponentSystem,\n            // @ts-ignore\n            pc.ElementComponentSystem\n        ];\n        createOptions.resourceHandlers = [\n            // @ts-ignore\n            pc.TextureHandler,\n            // @ts-ignore\n            pc.FontHandler\n        ];\n\n        const app = new pc.AppBase(canvas);\n        app.init(createOptions);\n\n        // Set the canvas to fill the window and automatically change resolution to be the same as the canvas size\n        app.setCanvasFillMode(pc.FILLMODE_FILL_WINDOW);\n        app.setCanvasResolution(pc.RESOLUTION_AUTO);\n\n        const assetListLoader = new pc.AssetListLoader(Object.values(assets), app.assets);\n        assetListLoader.load(() => {\n            app.start();\n\n            app.scene.envAtlas = assets.helipad.resource;\n            app.scene.toneMapping = pc.TONEMAP_ACES;\n            app.scene.skyboxMip = 1;\n\n            // Create an entity with a camera component\n            const camera = new pc.Entity();\n            camera.addComponent(\"camera\");\n            camera.translate(0, 0, 9);\n            app.root.addChild(camera);\n\n            const NUM_SPHERES = 5;\n\n            const createSphere = function (x: number, y: number, z: number) {\n                const material = new pc.StandardMaterial();\n                material.metalness = y / (NUM_SPHERES - 1);\n                material.gloss = x / (NUM_SPHERES - 1);\n                material.useMetalness = true;\n                material.update();\n\n                const sphere = new pc.Entity();\n                sphere.addComponent(\"render\", {\n                    material: material,\n                    type: \"sphere\"\n                });\n                sphere.setLocalPosition(x - (NUM_SPHERES - 1) * 0.5, y - (NUM_SPHERES - 1) * 0.5, z);\n                sphere.setLocalScale(0.9, 0.9, 0.9);\n                app.root.addChild(sphere);\n            };\n\n            const createText = function (fontAsset: pc.Asset, message: string, x: number, y: number, z: number, rot: number) {\n                // Create a text element-based entity\n                const text = new pc.Entity();\n                text.addComponent(\"element\", {\n                    anchor: [0.5, 0.5, 0.5, 0.5],\n                    fontAsset: fontAsset,\n                    fontSize: 0.5,\n                    pivot: [0.5, 0.5],\n                    text: message,\n                    type: pc.ELEMENTTYPE_TEXT\n                });\n                text.setLocalPosition(x, y, z);\n                text.setLocalEulerAngles(0, 0, rot);\n                app.root.addChild(text);\n            };\n\n            for (let i = 0; i < NUM_SPHERES; i++) {\n                for (let j = 0; j < NUM_SPHERES; j++) {\n                    createSphere(j, i, 0);\n                }\n            }\n\n            createText(assets.font, 'Glossiness', 0, -(NUM_SPHERES + 1) * 0.5, 0, 0);\n            createText(assets.font, 'Metalness', -(NUM_SPHERES + 1) * 0.5, 0, 0, 90);\n\n            // rotate the skybox using mouse input\n            const mouse = new pc.Mouse(document.body);\n\n            let x = 0;\n            let y = 0;\n            const rot = new pc.Quat();\n\n            mouse.on('mousemove', function (event) {\n                if (event.buttons[pc.MOUSEBUTTON_LEFT]) {\n                    x += event.dx;\n                    y += event.dy;\n\n                    rot.setFromEulerAngles(0.2 * y, 0.2 * x, 0);\n                    app.scene.skyboxRotation = rot;\n                }\n            });\n        });\n    }).catch(console.error);\n}",javaScriptFunction:'function example(canvas, deviceType) {\n    const assets = {\n        helipad: new pc.Asset(\n            "helipad-env-atlas",\n            "texture",\n            { url: "/static/assets/cubemaps/helipad-env-atlas.png" },\n            { type: pc.TEXTURETYPE_RGBP, mipmaps: false }\n        ),\n        font: new pc.Asset("font", "font", {\n            url: "/static/assets/fonts/arial.json",\n        }),\n    };\n\n    const gfxOptions = {\n        deviceTypes: [deviceType],\n        glslangUrl: "/static/lib/glslang/glslang.js",\n        twgslUrl: "/static/lib/twgsl/twgsl.js",\n    };\n\n    pc.createGraphicsDevice(canvas, gfxOptions)\n        .then((device) => {\n            const createOptions = new pc.AppOptions();\n            createOptions.graphicsDevice = device;\n\n            createOptions.componentSystems = [\n                // @ts-ignore\n                pc.RenderComponentSystem,\n                // @ts-ignore\n                pc.CameraComponentSystem,\n                // @ts-ignore\n                pc.ElementComponentSystem,\n            ];\n\n            createOptions.resourceHandlers = [\n                // @ts-ignore\n                pc.TextureHandler,\n                // @ts-ignore\n                pc.FontHandler,\n            ];\n\n            const app = new pc.AppBase(canvas);\n            app.init(createOptions);\n\n            // Set the canvas to fill the window and automatically change resolution to be the same as the canvas size\n            app.setCanvasFillMode(pc.FILLMODE_FILL_WINDOW);\n            app.setCanvasResolution(pc.RESOLUTION_AUTO);\n\n            const assetListLoader = new pc.AssetListLoader(\n                Object.values(assets),\n                app.assets\n            );\n            assetListLoader.load(() => {\n                app.start();\n\n                app.scene.envAtlas = assets.helipad.resource;\n                app.scene.toneMapping = pc.TONEMAP_ACES;\n                app.scene.skyboxMip = 1;\n\n                // Create an entity with a camera component\n                const camera = new pc.Entity();\n                camera.addComponent("camera");\n                camera.translate(0, 0, 9);\n                app.root.addChild(camera);\n\n                const NUM_SPHERES = 5;\n\n                const createSphere = function (x, y, z) {\n                    const material = new pc.StandardMaterial();\n                    material.metalness = y / (NUM_SPHERES - 1);\n                    material.gloss = x / (NUM_SPHERES - 1);\n                    material.useMetalness = true;\n                    material.update();\n\n                    const sphere = new pc.Entity();\n                    sphere.addComponent("render", {\n                        material: material,\n                        type: "sphere",\n                    });\n                    sphere.setLocalPosition(\n                        x - (NUM_SPHERES - 1) * 0.5,\n                        y - (NUM_SPHERES - 1) * 0.5,\n                        z\n                    );\n                    sphere.setLocalScale(0.9, 0.9, 0.9);\n                    app.root.addChild(sphere);\n                };\n\n                const createText = function (fontAsset, message, x, y, z, rot) {\n                    // Create a text element-based entity\n                    const text = new pc.Entity();\n                    text.addComponent("element", {\n                        anchor: [0.5, 0.5, 0.5, 0.5],\n                        fontAsset: fontAsset,\n                        fontSize: 0.5,\n                        pivot: [0.5, 0.5],\n                        text: message,\n                        type: pc.ELEMENTTYPE_TEXT,\n                    });\n                    text.setLocalPosition(x, y, z);\n                    text.setLocalEulerAngles(0, 0, rot);\n                    app.root.addChild(text);\n                };\n\n                for (let i = 0; i < NUM_SPHERES; i++) {\n                    for (let j = 0; j < NUM_SPHERES; j++) {\n                        createSphere(j, i, 0);\n                    }\n                }\n\n                createText(\n                    assets.font,\n                    "Glossiness",\n                    0,\n                    -(NUM_SPHERES + 1) * 0.5,\n                    0,\n                    0\n                );\n                createText(\n                    assets.font,\n                    "Metalness",\n                    -(NUM_SPHERES + 1) * 0.5,\n                    0,\n                    0,\n                    90\n                );\n\n                // rotate the skybox using mouse input\n                const mouse = new pc.Mouse(document.body);\n\n                let x = 0;\n                let y = 0;\n                const rot = new pc.Quat();\n\n                mouse.on("mousemove", function (event) {\n                    if (event.buttons[pc.MOUSEBUTTON_LEFT]) {\n                        x += event.dx;\n                        y += event.dy;\n\n                        rot.setFromEulerAngles(0.2 * y, 0.2 * x, 0);\n                        app.scene.skyboxRotation = rot;\n                    }\n                });\n            });\n        })\n        .catch(console.error);\n}\n',nameSlug:"material-physical",categorySlug:"graphics"},"material-translucent-specular":{typeScriptFunction:"function example(canvas: HTMLCanvasElement, deviceType: string): void {\n\n    const assets = {\n        helipad: new pc.Asset('helipad-env-atlas', 'texture', { url: '/static/assets/cubemaps/helipad-env-atlas.png' }, { type: pc.TEXTURETYPE_RGBP, mipmaps: false }),\n        'font': new pc.Asset('font', 'font', { url: '/static/assets/fonts/arial.json' })\n    };\n\n    const gfxOptions = {\n        deviceTypes: [deviceType],\n        glslangUrl: '/static/lib/glslang/glslang.js',\n        twgslUrl: '/static/lib/twgsl/twgsl.js'\n    };\n\n    pc.createGraphicsDevice(canvas, gfxOptions).then((device: pc.GraphicsDevice) => {\n\n        const createOptions = new pc.AppOptions();\n        createOptions.graphicsDevice = device;\n\n        createOptions.componentSystems = [\n            // @ts-ignore\n            pc.RenderComponentSystem,\n            // @ts-ignore\n            pc.CameraComponentSystem,\n            // @ts-ignore\n            pc.LightComponentSystem,\n            // @ts-ignore\n            pc.ElementComponentSystem\n        ];\n        createOptions.resourceHandlers = [\n            // @ts-ignore\n            pc.TextureHandler,\n            // @ts-ignore\n            pc.FontHandler\n        ];\n\n        const app = new pc.AppBase(canvas);\n        app.init(createOptions);\n\n        // Set the canvas to fill the window and automatically change resolution to be the same as the canvas size\n        app.setCanvasFillMode(pc.FILLMODE_FILL_WINDOW);\n        app.setCanvasResolution(pc.RESOLUTION_AUTO);\n\n        const assetListLoader = new pc.AssetListLoader(Object.values(assets), app.assets);\n        assetListLoader.load(() => {\n            app.start();\n\n            app.scene.toneMapping = pc.TONEMAP_ACES;\n            app.scene.envAtlas = assets.helipad.resource;\n            app.scene.skyboxMip = 1;\n            app.scene.skyboxIntensity = 1;\n\n            // Create an entity with a camera component\n            const camera = new pc.Entity();\n            camera.addComponent(\"camera\");\n            camera.translate(0, 0, 8);\n            camera.rotate(0, 0, 0);\n            app.root.addChild(camera);\n\n            // Create an entities with a directional light components\n            for (let i = 0; i < 3; i++) {\n                const light = new pc.Entity();\n                light.addComponent(\"light\", {\n                    type: \"directional\"\n                });\n                app.root.addChild(light);\n                light.rotateLocal(60 + 10 * i, 30 + 90 * i, 0);\n            }\n\n            const NUM_SPHERES_X = 10;\n            const NUM_SPHERES_Z = 5;\n\n            const createSphere = function (x: number, y: number, z: number) {\n                const material = new pc.StandardMaterial();\n                material.diffuse = new pc.Color(0.7, 0.7, 0.7);\n                material.specular = new pc.Color(1, 1, 1);\n                material.metalness = 0.0;\n                material.gloss = ((z) / (NUM_SPHERES_Z - 1) * 0.5) + 0.5;\n                material.useMetalness = true;\n                material.blendType = pc.BLEND_NORMAL;\n                material.opacity = (x >= 5) ? ((x - 5) / 5 + 0.2) * ((x - 5) / 5 + 0.2) : (x / 5 + 0.2) * (x / 5 + 0.2);\n                material.opacityFadesSpecular = !(x >= 5);\n                material.alphaWrite = false;\n\n                material.update();\n\n                const sphere = new pc.Entity();\n\n                sphere.addComponent(\"render\", {\n                    material: material,\n                    type: \"sphere\"\n                });\n                sphere.setLocalPosition(x - (NUM_SPHERES_X - 1) * 0.5, z - (NUM_SPHERES_Z - 1) * 0.5, 0);\n                sphere.setLocalScale(0.7, 0.7, 0.7);\n                app.root.addChild(sphere);\n            };\n\n            const createText = function (fontAsset: pc.Asset, message: string, x: number, y: number, z: number, rotx: number, roty: number) {\n                // Create a text element-based entity\n                const text = new pc.Entity();\n                text.addComponent(\"element\", {\n                    anchor: [0.5, 0.5, 0.5, 0.5],\n                    fontAsset: fontAsset,\n                    fontSize: 0.5,\n                    pivot: [0.5, 0.5],\n                    text: message,\n                    type: pc.ELEMENTTYPE_TEXT\n                });\n                text.setLocalPosition(x, y, z);\n                text.setLocalEulerAngles(rotx, roty, 0);\n                app.root.addChild(text);\n            };\n\n            for (let i = 0; i < NUM_SPHERES_Z; i++) {\n                for (let j = 0; j < NUM_SPHERES_X; j++) {\n                    createSphere(j, 0, i);\n                }\n            }\n\n            createText(assets.font, 'Spec Fade On', -NUM_SPHERES_X * 0.25, ((NUM_SPHERES_Z + 1) * -0.5), 0, -0, 0);\n            createText(assets.font, 'Spec Fade Off', NUM_SPHERES_X * 0.25, ((NUM_SPHERES_Z + 1) * -0.5), 0, -0, 0);\n        });\n    });\n}",javaScriptFunction:'function example(canvas, deviceType) {\n    const assets = {\n        helipad: new pc.Asset(\n            "helipad-env-atlas",\n            "texture",\n            { url: "/static/assets/cubemaps/helipad-env-atlas.png" },\n            { type: pc.TEXTURETYPE_RGBP, mipmaps: false }\n        ),\n        font: new pc.Asset("font", "font", {\n            url: "/static/assets/fonts/arial.json",\n        }),\n    };\n\n    const gfxOptions = {\n        deviceTypes: [deviceType],\n        glslangUrl: "/static/lib/glslang/glslang.js",\n        twgslUrl: "/static/lib/twgsl/twgsl.js",\n    };\n\n    pc.createGraphicsDevice(canvas, gfxOptions).then((device) => {\n        const createOptions = new pc.AppOptions();\n        createOptions.graphicsDevice = device;\n\n        createOptions.componentSystems = [\n            // @ts-ignore\n            pc.RenderComponentSystem,\n            // @ts-ignore\n            pc.CameraComponentSystem,\n            // @ts-ignore\n            pc.LightComponentSystem,\n            // @ts-ignore\n            pc.ElementComponentSystem,\n        ];\n\n        createOptions.resourceHandlers = [\n            // @ts-ignore\n            pc.TextureHandler,\n            // @ts-ignore\n            pc.FontHandler,\n        ];\n\n        const app = new pc.AppBase(canvas);\n        app.init(createOptions);\n\n        // Set the canvas to fill the window and automatically change resolution to be the same as the canvas size\n        app.setCanvasFillMode(pc.FILLMODE_FILL_WINDOW);\n        app.setCanvasResolution(pc.RESOLUTION_AUTO);\n\n        const assetListLoader = new pc.AssetListLoader(\n            Object.values(assets),\n            app.assets\n        );\n        assetListLoader.load(() => {\n            app.start();\n\n            app.scene.toneMapping = pc.TONEMAP_ACES;\n            app.scene.envAtlas = assets.helipad.resource;\n            app.scene.skyboxMip = 1;\n            app.scene.skyboxIntensity = 1;\n\n            // Create an entity with a camera component\n            const camera = new pc.Entity();\n            camera.addComponent("camera");\n            camera.translate(0, 0, 8);\n            camera.rotate(0, 0, 0);\n            app.root.addChild(camera);\n\n            // Create an entities with a directional light components\n            for (let i = 0; i < 3; i++) {\n                const light = new pc.Entity();\n                light.addComponent("light", {\n                    type: "directional",\n                });\n                app.root.addChild(light);\n                light.rotateLocal(60 + 10 * i, 30 + 90 * i, 0);\n            }\n\n            const NUM_SPHERES_X = 10;\n            const NUM_SPHERES_Z = 5;\n\n            const createSphere = function (x, y, z) {\n                const material = new pc.StandardMaterial();\n                material.diffuse = new pc.Color(0.7, 0.7, 0.7);\n                material.specular = new pc.Color(1, 1, 1);\n                material.metalness = 0.0;\n                material.gloss = (z / (NUM_SPHERES_Z - 1)) * 0.5 + 0.5;\n                material.useMetalness = true;\n                material.blendType = pc.BLEND_NORMAL;\n                material.opacity =\n                    x >= 5\n                        ? ((x - 5) / 5 + 0.2) * ((x - 5) / 5 + 0.2)\n                        : (x / 5 + 0.2) * (x / 5 + 0.2);\n                material.opacityFadesSpecular = !(x >= 5);\n                material.alphaWrite = false;\n\n                material.update();\n\n                const sphere = new pc.Entity();\n\n                sphere.addComponent("render", {\n                    material: material,\n                    type: "sphere",\n                });\n                sphere.setLocalPosition(\n                    x - (NUM_SPHERES_X - 1) * 0.5,\n                    z - (NUM_SPHERES_Z - 1) * 0.5,\n                    0\n                );\n                sphere.setLocalScale(0.7, 0.7, 0.7);\n                app.root.addChild(sphere);\n            };\n\n            const createText = function (\n                fontAsset,\n                message,\n                x,\n                y,\n                z,\n                rotx,\n                roty\n            ) {\n                // Create a text element-based entity\n                const text = new pc.Entity();\n                text.addComponent("element", {\n                    anchor: [0.5, 0.5, 0.5, 0.5],\n                    fontAsset: fontAsset,\n                    fontSize: 0.5,\n                    pivot: [0.5, 0.5],\n                    text: message,\n                    type: pc.ELEMENTTYPE_TEXT,\n                });\n                text.setLocalPosition(x, y, z);\n                text.setLocalEulerAngles(rotx, roty, 0);\n                app.root.addChild(text);\n            };\n\n            for (let i = 0; i < NUM_SPHERES_Z; i++) {\n                for (let j = 0; j < NUM_SPHERES_X; j++) {\n                    createSphere(j, 0, i);\n                }\n            }\n\n            createText(\n                assets.font,\n                "Spec Fade On",\n                -NUM_SPHERES_X * 0.25,\n                (NUM_SPHERES_Z + 1) * -0.5,\n                0,\n                -0,\n                0\n            );\n            createText(\n                assets.font,\n                "Spec Fade Off",\n                NUM_SPHERES_X * 0.25,\n                (NUM_SPHERES_Z + 1) * -0.5,\n                0,\n                -0,\n                0\n            );\n        });\n    });\n}\n',nameSlug:"material-translucent-specular",categorySlug:"graphics"},"mesh-decals":{typeScriptFunction:"function example(canvas: HTMLCanvasElement, deviceType: string): void {\n\n    const assets = {\n        'spark': new pc.Asset('spark', 'texture', { url: '/static/assets/textures/spark.png' })\n    };\n\n    const gfxOptions = {\n        deviceTypes: [deviceType],\n        glslangUrl: '/static/lib/glslang/glslang.js',\n        twgslUrl: '/static/lib/twgsl/twgsl.js'\n    };\n\n    pc.createGraphicsDevice(canvas, gfxOptions).then((device: pc.GraphicsDevice) => {\n\n        const createOptions = new pc.AppOptions();\n        createOptions.graphicsDevice = device;\n\n        createOptions.componentSystems = [\n            // @ts-ignore\n            pc.RenderComponentSystem,\n            // @ts-ignore\n            pc.LightComponentSystem,\n            // @ts-ignore\n            pc.CameraComponentSystem\n        ];\n        createOptions.resourceHandlers = [\n            // @ts-ignore\n            pc.TextureHandler\n        ];\n\n        const app = new pc.AppBase(canvas);\n        app.init(createOptions);\n\n        // Set the canvas to fill the window and automatically change resolution to be the same as the canvas size\n        app.setCanvasFillMode(pc.FILLMODE_FILL_WINDOW);\n        app.setCanvasResolution(pc.RESOLUTION_AUTO);\n\n        const assetListLoader = new pc.AssetListLoader(Object.values(assets), app.assets);\n        assetListLoader.load(() => {\n            app.start();\n\n            app.scene.ambientLight = new pc.Color(0.2, 0.2, 0.2);\n\n            // create material for the plane\n            const planeMaterial = new pc.StandardMaterial();\n            planeMaterial.gloss = 0.6;\n            planeMaterial.metalness = 0.3;\n            planeMaterial.useMetalness = true;\n            planeMaterial.update();\n\n            // create plane primitive\n            const primitive = new pc.Entity();\n            primitive.addComponent('render', {\n                type: \"plane\",\n                material: planeMaterial\n            });\n\n            // set position and scale and add it to scene\n            primitive.setLocalScale(new pc.Vec3(20, 20, 20));\n            primitive.setLocalPosition(new pc.Vec3(0, -0.01, 0));\n            app.root.addChild(primitive);\n\n            // Create an Entity with a omni light component\n            const light = new pc.Entity();\n            light.addComponent(\"light\", {\n                type: \"omni\",\n                color: new pc.Color(0.2, 0.2, 0.2),\n                range: 30,\n                castShadows: true,\n                shadowBias: 0.1,\n                normalOffsetBias: 0.2\n            });\n            light.translate(0, 8, 0);\n            app.root.addChild(light);\n\n            // Create an Entity with a camera component\n            const camera = new pc.Entity();\n            camera.addComponent(\"camera\", {\n                clearColor: new pc.Color(0.2, 0.2, 0.2)\n            });\n\n            // Add the camera to the hierarchy\n            app.root.addChild(camera);\n\n            // Position the camera\n            camera.translate(0, 10, 20);\n            camera.lookAt(pc.Vec3.ZERO);\n\n            // Create bouncing ball model and add it to hierarchy\n            const ball = new pc.Entity();\n            ball.addComponent(\"render\", {\n                type: \"sphere\"\n            });\n            app.root.addChild(ball);\n\n            // Allocate space for decals. Each decal is a quad with 4 vertices\n            const numDecals = 500;\n            const numDecalVertices = 4 * numDecals;\n\n            // Allocate storage for vertex positions, vertex stores x, y and z\n            const positions = new Float32Array(3 * numDecalVertices);\n\n            // Allocate storage for colors, each vertex stores r, g, b and a\n            const colors = new Uint8ClampedArray(4 * numDecalVertices);\n\n            // Allocate storage for uvs, each vertex stores u and v. And fill them up to display whole texture\n            const uvs: any = [];\n            for (let i = 0; i < numDecals; i++)\n                uvs.push(0, 0, 0, 1, 1, 1, 1, 0);\n\n            // Allocate and generate indices. Each quad is representing using 2 triangles, and uses 4 vertices\n            const quadTriangles = [\n                0, 1, 2,\n                2, 3, 0\n            ];\n            const indices = new Uint16Array(6 * numDecals);\n            for (let i = 0; i < numDecals; i++) {\n                indices[6 * i + 0] = 4 * i + quadTriangles[0];\n                indices[6 * i + 1] = 4 * i + quadTriangles[1];\n                indices[6 * i + 2] = 4 * i + quadTriangles[2];\n                indices[6 * i + 3] = 4 * i + quadTriangles[3];\n                indices[6 * i + 4] = 4 * i + quadTriangles[4];\n                indices[6 * i + 5] = 4 * i + quadTriangles[5];\n            }\n\n            // Helper function to generate a decal with index i at position pos. It fills up information for all 4 vertices of a quad\n            function createDecal(i: number, pos: pc.Vec3) {\n\n                // random size and rotation angle\n                const size = 0.5 + Math.random();\n                let angle = Math.random() * Math.PI;\n\n                // random color\n                const r = Math.random() * 255;\n                const g = Math.random() * 255;\n                const b = Math.random() * 255;\n\n                for (let j = 0; j < 4; j++) {\n                    colors[i * 16 + j * 4 + 0] = r;\n                    colors[i * 16 + j * 4 + 1] = g;\n                    colors[i * 16 + j * 4 + 2] = b;\n                    colors[i * 16 + j * 4 + 3] = 0;    // alpha is not used by shader\n                }\n\n                // vertex positions to form a square quad with random rotation and size\n                positions[12 * i + 0] = pos.x + size * Math.sin(angle);\n                positions[12 * i + 1] = 0;\n                positions[12 * i + 2] = pos.z + size * Math.cos(angle); angle += Math.PI * 0.5;\n\n                positions[12 * i + 3] = pos.x + size * Math.sin(angle);\n                positions[12 * i + 4] = 0;\n                positions[12 * i + 5] = pos.z + size * Math.cos(angle); angle += Math.PI * 0.5;\n\n                positions[12 * i + 6] = pos.x + size * Math.sin(angle);\n                positions[12 * i + 7] = 0;\n                positions[12 * i + 8] = pos.z + size * Math.cos(angle); angle += Math.PI * 0.5;\n\n                positions[12 * i + 9] = pos.x + size * Math.sin(angle);\n                positions[12 * i + 10] = 0;\n                positions[12 * i + 11] = pos.z + size * Math.cos(angle); angle += Math.PI * 0.5;\n            }\n\n            // helper function to update required vertex streams\n            function updateMesh(mesh: pc.Mesh, updatePositions: any, updateColors: any, initAll?: boolean) {\n\n                // update positions when needed\n                if (updatePositions)\n                    mesh.setPositions(positions);\n\n                // update colors when needed\n                if (updateColors)\n                    mesh.setColors32(colors);\n\n                // update indices and uvs only one time, as they never change\n                if (initAll) {\n                    mesh.setIndices(indices);\n                    mesh.setUvs(0, uvs);\n                }\n\n                mesh.update(pc.PRIMITIVE_TRIANGLES);\n            }\n\n            // Create a mesh with dynamic vertex buffer and static index buffer\n            const mesh = new pc.Mesh(app.graphicsDevice);\n            mesh.clear(true, false);\n            updateMesh(mesh, true, true, true);\n\n            // create material\n            const material = new pc.StandardMaterial();\n            material.useLighting = false;      // turn off lighting - we use emissive texture only. Also, lighting needs normal maps which we don't generate\n            material.diffuse = new pc.Color(0, 0, 0);\n            material.emissiveVertexColor = true;\n            material.blendType = pc.BLEND_ADDITIVE;     // additive alpha blend\n            material.depthWrite = false;        // optimization - no need to write to depth buffer, as decals are part of the ground plane\n            material.emissiveMap = assets.spark.resource;\n            material.update();\n\n            // Create the mesh instance\n            const meshInstance = new pc.MeshInstance(mesh, material);\n\n            // Create Entity with a render component to render the mesh instance\n            const entity = new pc.Entity();\n            entity.addComponent(\"render\", {\n                type: 'asset',\n                meshInstances: [meshInstance],\n                castShadows: false\n            });\n            app.root.addChild(entity);\n\n            // Set an update function on the app's update event\n            let time = 0;\n            let decalIndex = 0;\n            app.on(\"update\", (dt: number) => {\n\n                const previousTime = time;\n                time += dt;\n\n                // Bounce the ball around in a circle with changing radius\n                const radius = Math.abs(Math.sin(time * 0.55) * 9);\n                const previousElevation = 2 * Math.cos(previousTime * 7);\n                const elevation = 2 * Math.cos(time * 7);\n                ball.setLocalPosition(new pc.Vec3(radius * Math.sin(time), 0.5 + Math.abs(elevation), radius * Math.cos(time)));\n\n                // When ball crossed the ground plane\n                let positionsUpdated = false;\n                let colorsUpdated = false;\n                if ((previousElevation < 0 && elevation >= 0) || (elevation < 0 && previousElevation >= 0)) {\n\n                    // create new decal at next index, and roll the index around if out of range\n                    createDecal(decalIndex, ball.getLocalPosition());\n                    decalIndex++;\n                    if (decalIndex >= numDecals)\n                        decalIndex = 0;\n\n                    // both position and color streams were updated\n                    positionsUpdated = true;\n                    colorsUpdated = true;\n                }\n\n                // fade out all vertex colors once a second\n                if (Math.round(time) !== Math.round(previousTime)) {\n                    for (let i = 0; i < colors.length; i++)\n                        colors[i] -= 2;\n\n                    // colors were updated\n                    colorsUpdated = true;\n                }\n\n                // update mesh with the streams that were updated\n                updateMesh(mesh, positionsUpdated, colorsUpdated);\n            });\n        });\n    });\n}",javaScriptFunction:'function example(canvas, deviceType) {\n    const assets = {\n        spark: new pc.Asset("spark", "texture", {\n            url: "/static/assets/textures/spark.png",\n        }),\n    };\n\n    const gfxOptions = {\n        deviceTypes: [deviceType],\n        glslangUrl: "/static/lib/glslang/glslang.js",\n        twgslUrl: "/static/lib/twgsl/twgsl.js",\n    };\n\n    pc.createGraphicsDevice(canvas, gfxOptions).then((device) => {\n        const createOptions = new pc.AppOptions();\n        createOptions.graphicsDevice = device;\n\n        createOptions.componentSystems = [\n            // @ts-ignore\n            pc.RenderComponentSystem,\n            // @ts-ignore\n            pc.LightComponentSystem,\n            // @ts-ignore\n            pc.CameraComponentSystem,\n        ];\n\n        createOptions.resourceHandlers = [\n            // @ts-ignore\n            pc.TextureHandler,\n        ];\n\n        const app = new pc.AppBase(canvas);\n        app.init(createOptions);\n\n        // Set the canvas to fill the window and automatically change resolution to be the same as the canvas size\n        app.setCanvasFillMode(pc.FILLMODE_FILL_WINDOW);\n        app.setCanvasResolution(pc.RESOLUTION_AUTO);\n\n        const assetListLoader = new pc.AssetListLoader(\n            Object.values(assets),\n            app.assets\n        );\n        assetListLoader.load(() => {\n            app.start();\n\n            app.scene.ambientLight = new pc.Color(0.2, 0.2, 0.2);\n\n            // create material for the plane\n            const planeMaterial = new pc.StandardMaterial();\n            planeMaterial.gloss = 0.6;\n            planeMaterial.metalness = 0.3;\n            planeMaterial.useMetalness = true;\n            planeMaterial.update();\n\n            // create plane primitive\n            const primitive = new pc.Entity();\n            primitive.addComponent("render", {\n                type: "plane",\n                material: planeMaterial,\n            });\n\n            // set position and scale and add it to scene\n            primitive.setLocalScale(new pc.Vec3(20, 20, 20));\n            primitive.setLocalPosition(new pc.Vec3(0, -0.01, 0));\n            app.root.addChild(primitive);\n\n            // Create an Entity with a omni light component\n            const light = new pc.Entity();\n            light.addComponent("light", {\n                type: "omni",\n                color: new pc.Color(0.2, 0.2, 0.2),\n                range: 30,\n                castShadows: true,\n                shadowBias: 0.1,\n                normalOffsetBias: 0.2,\n            });\n            light.translate(0, 8, 0);\n            app.root.addChild(light);\n\n            // Create an Entity with a camera component\n            const camera = new pc.Entity();\n            camera.addComponent("camera", {\n                clearColor: new pc.Color(0.2, 0.2, 0.2),\n            });\n\n            // Add the camera to the hierarchy\n            app.root.addChild(camera);\n\n            // Position the camera\n            camera.translate(0, 10, 20);\n            camera.lookAt(pc.Vec3.ZERO);\n\n            // Create bouncing ball model and add it to hierarchy\n            const ball = new pc.Entity();\n            ball.addComponent("render", {\n                type: "sphere",\n            });\n            app.root.addChild(ball);\n\n            // Allocate space for decals. Each decal is a quad with 4 vertices\n            const numDecals = 500;\n            const numDecalVertices = 4 * numDecals;\n\n            // Allocate storage for vertex positions, vertex stores x, y and z\n            const positions = new Float32Array(3 * numDecalVertices);\n\n            // Allocate storage for colors, each vertex stores r, g, b and a\n            const colors = new Uint8ClampedArray(4 * numDecalVertices);\n\n            // Allocate storage for uvs, each vertex stores u and v. And fill them up to display whole texture\n            const uvs = [];\n            for (let i = 0; i < numDecals; i++)\n                uvs.push(0, 0, 0, 1, 1, 1, 1, 0);\n\n            // Allocate and generate indices. Each quad is representing using 2 triangles, and uses 4 vertices\n            const quadTriangles = [0, 1, 2, 2, 3, 0];\n\n            const indices = new Uint16Array(6 * numDecals);\n            for (let i = 0; i < numDecals; i++) {\n                indices[6 * i + 0] = 4 * i + quadTriangles[0];\n                indices[6 * i + 1] = 4 * i + quadTriangles[1];\n                indices[6 * i + 2] = 4 * i + quadTriangles[2];\n                indices[6 * i + 3] = 4 * i + quadTriangles[3];\n                indices[6 * i + 4] = 4 * i + quadTriangles[4];\n                indices[6 * i + 5] = 4 * i + quadTriangles[5];\n            }\n\n            // Helper function to generate a decal with index i at position pos. It fills up information for all 4 vertices of a quad\n            function createDecal(i, pos) {\n                // random size and rotation angle\n                const size = 0.5 + Math.random();\n                let angle = Math.random() * Math.PI;\n\n                // random color\n                const r = Math.random() * 255;\n                const g = Math.random() * 255;\n                const b = Math.random() * 255;\n\n                for (let j = 0; j < 4; j++) {\n                    colors[i * 16 + j * 4 + 0] = r;\n                    colors[i * 16 + j * 4 + 1] = g;\n                    colors[i * 16 + j * 4 + 2] = b;\n                    colors[i * 16 + j * 4 + 3] = 0; // alpha is not used by shader\n                }\n\n                // vertex positions to form a square quad with random rotation and size\n                positions[12 * i + 0] = pos.x + size * Math.sin(angle);\n                positions[12 * i + 1] = 0;\n                positions[12 * i + 2] = pos.z + size * Math.cos(angle);\n                angle += Math.PI * 0.5;\n\n                positions[12 * i + 3] = pos.x + size * Math.sin(angle);\n                positions[12 * i + 4] = 0;\n                positions[12 * i + 5] = pos.z + size * Math.cos(angle);\n                angle += Math.PI * 0.5;\n\n                positions[12 * i + 6] = pos.x + size * Math.sin(angle);\n                positions[12 * i + 7] = 0;\n                positions[12 * i + 8] = pos.z + size * Math.cos(angle);\n                angle += Math.PI * 0.5;\n\n                positions[12 * i + 9] = pos.x + size * Math.sin(angle);\n                positions[12 * i + 10] = 0;\n                positions[12 * i + 11] = pos.z + size * Math.cos(angle);\n                angle += Math.PI * 0.5;\n            }\n\n            // helper function to update required vertex streams\n            function updateMesh(mesh, updatePositions, updateColors, initAll) {\n                // update positions when needed\n                if (updatePositions) mesh.setPositions(positions);\n\n                // update colors when needed\n                if (updateColors) mesh.setColors32(colors);\n\n                // update indices and uvs only one time, as they never change\n                if (initAll) {\n                    mesh.setIndices(indices);\n                    mesh.setUvs(0, uvs);\n                }\n\n                mesh.update(pc.PRIMITIVE_TRIANGLES);\n            }\n\n            // Create a mesh with dynamic vertex buffer and static index buffer\n            const mesh = new pc.Mesh(app.graphicsDevice);\n            mesh.clear(true, false);\n            updateMesh(mesh, true, true, true);\n\n            // create material\n            const material = new pc.StandardMaterial();\n            material.useLighting = false; // turn off lighting - we use emissive texture only. Also, lighting needs normal maps which we don\'t generate\n            material.diffuse = new pc.Color(0, 0, 0);\n            material.emissiveVertexColor = true;\n            material.blendType = pc.BLEND_ADDITIVE; // additive alpha blend\n            material.depthWrite = false; // optimization - no need to write to depth buffer, as decals are part of the ground plane\n            material.emissiveMap = assets.spark.resource;\n            material.update();\n\n            // Create the mesh instance\n            const meshInstance = new pc.MeshInstance(mesh, material);\n\n            // Create Entity with a render component to render the mesh instance\n            const entity = new pc.Entity();\n            entity.addComponent("render", {\n                type: "asset",\n                meshInstances: [meshInstance],\n                castShadows: false,\n            });\n            app.root.addChild(entity);\n\n            // Set an update function on the app\'s update event\n            let time = 0;\n            let decalIndex = 0;\n            app.on("update", (dt) => {\n                const previousTime = time;\n                time += dt;\n\n                // Bounce the ball around in a circle with changing radius\n                const radius = Math.abs(Math.sin(time * 0.55) * 9);\n                const previousElevation = 2 * Math.cos(previousTime * 7);\n                const elevation = 2 * Math.cos(time * 7);\n                ball.setLocalPosition(\n                    new pc.Vec3(\n                        radius * Math.sin(time),\n                        0.5 + Math.abs(elevation),\n                        radius * Math.cos(time)\n                    )\n                );\n\n                // When ball crossed the ground plane\n                let positionsUpdated = false;\n                let colorsUpdated = false;\n                if (\n                    (previousElevation < 0 && elevation >= 0) ||\n                    (elevation < 0 && previousElevation >= 0)\n                ) {\n                    // create new decal at next index, and roll the index around if out of range\n                    createDecal(decalIndex, ball.getLocalPosition());\n                    decalIndex++;\n                    if (decalIndex >= numDecals) decalIndex = 0;\n\n                    // both position and color streams were updated\n                    positionsUpdated = true;\n                    colorsUpdated = true;\n                }\n\n                // fade out all vertex colors once a second\n                if (Math.round(time) !== Math.round(previousTime)) {\n                    for (let i = 0; i < colors.length; i++) colors[i] -= 2;\n\n                    // colors were updated\n                    colorsUpdated = true;\n                }\n\n                // update mesh with the streams that were updated\n                updateMesh(mesh, positionsUpdated, colorsUpdated);\n            });\n        });\n    });\n}\n',nameSlug:"mesh-decals",categorySlug:"graphics"},"mesh-deformation":{typeScriptFunction:"function example(canvas: HTMLCanvasElement, deviceType: string): void {\n\n    const assets = {\n        'statue': new pc.Asset('statue', 'container', { url: '/static/assets/models/statue.glb' }),\n        'helipad': new pc.Asset('helipad-env-atlas', 'texture', { url: '/static/assets/cubemaps/helipad-env-atlas.png' }, { type: pc.TEXTURETYPE_RGBP, mipmaps: false })\n    };\n\n    const gfxOptions = {\n        deviceTypes: [deviceType],\n        glslangUrl: '/static/lib/glslang/glslang.js',\n        twgslUrl: '/static/lib/twgsl/twgsl.js'\n    };\n\n    pc.createGraphicsDevice(canvas, gfxOptions).then((device: pc.GraphicsDevice) => {\n\n        const createOptions = new pc.AppOptions();\n        createOptions.graphicsDevice = device;\n\n        createOptions.componentSystems = [\n            // @ts-ignore\n            pc.RenderComponentSystem,\n            // @ts-ignore\n            pc.CameraComponentSystem,\n            // @ts-ignore\n            pc.LightComponentSystem\n        ];\n        createOptions.resourceHandlers = [\n            // @ts-ignore\n            pc.TextureHandler,\n            // @ts-ignore\n            pc.ContainerHandler\n        ];\n\n        const app = new pc.AppBase(canvas);\n        app.init(createOptions);\n\n        // Set the canvas to fill the window and automatically change resolution to be the same as the canvas size\n        app.setCanvasFillMode(pc.FILLMODE_FILL_WINDOW);\n        app.setCanvasResolution(pc.RESOLUTION_AUTO);\n\n        const assetListLoader = new pc.AssetListLoader(Object.values(assets), app.assets);\n        assetListLoader.load(() => {\n\n            app.start();\n\n            // setup skydome\n            app.scene.skyboxMip = 2;\n            app.scene.exposure = 1;\n            app.scene.envAtlas = assets.helipad.resource;\n\n            // Create an Entity with a camera component\n            const camera = new pc.Entity();\n            camera.addComponent(\"camera\", {\n                clearColor: new pc.Color(0.4, 0.45, 0.5)\n            });\n            camera.translate(0, 7, 24);\n            app.root.addChild(camera);\n\n            // create a hierarchy of entities with render components, representing the statue model\n            const entity = assets.statue.resource.instantiateRenderEntity();\n            app.root.addChild(entity);\n\n            // collect positions from all mesh instances to work on\n            const allMeshes: any = [];\n            const renders: Array<pc.RenderComponent> = entity.findComponents(\"render\");\n            renders.forEach((render) => {\n\n                // collect positions from all mesh instances on this render component\n                const meshInstances = render.meshInstances;\n                for (let i = 0; i < meshInstances.length; i++) {\n                    const meshInstance = meshInstances[i];\n\n                    // get positions from the mesh\n                    const mesh = meshInstance.mesh;\n                    const srcPositions: any = [];\n                    mesh.getPositions(srcPositions);\n\n                    // store it\n                    allMeshes.push({\n                        mesh: mesh,\n                        srcPositions: srcPositions\n                    });\n                }\n            });\n\n            // temporary work array of positions to avoid per frame allocations\n            const tempPositions: any = [];\n\n            let time = 0;\n            app.on(\"update\", function (dt) {\n                time += dt;\n\n                if (entity) {\n\n                    // orbit the camera\n                    camera.setLocalPosition(25 * Math.sin(time * 0.2), 15, 25 * Math.cos(time * 0.2));\n                    camera.lookAt(new pc.Vec3(0, 7, 0));\n\n                    const strength = 50;\n\n                    // modify mesh positions on each frame\n                    for (let i = 0; i < allMeshes.length; i++) {\n                        tempPositions.length = 0;\n                        const srcPositions = allMeshes[i].srcPositions;\n\n                        // loop over all positions, and fill up tempPositions array with waved version of positions from srcPositions array\n                        // modify .x and .z components based on sin function, which uses .y component\n                        for (let k = 0; k < srcPositions.length; k += 3) {\n                            tempPositions[k] = srcPositions[k] + strength * Math.sin(time + srcPositions[k + 1] * 0.01);\n                            tempPositions[k + 1] = srcPositions[k + 1];\n                            tempPositions[k + 2] = srcPositions[k + 2] + strength * Math.sin(time + srcPositions[k + 1] * 0.01);\n                        }\n\n                        // set new positions on the mesh\n                        const mesh = allMeshes[i].mesh;\n                        mesh.setPositions(tempPositions);\n                        mesh.update();\n                    }\n                }\n            });\n        });\n    }).catch(console.error);\n}",javaScriptFunction:'function example(canvas, deviceType) {\n    const assets = {\n        statue: new pc.Asset("statue", "container", {\n            url: "/static/assets/models/statue.glb",\n        }),\n        helipad: new pc.Asset(\n            "helipad-env-atlas",\n            "texture",\n            { url: "/static/assets/cubemaps/helipad-env-atlas.png" },\n            { type: pc.TEXTURETYPE_RGBP, mipmaps: false }\n        ),\n    };\n\n    const gfxOptions = {\n        deviceTypes: [deviceType],\n        glslangUrl: "/static/lib/glslang/glslang.js",\n        twgslUrl: "/static/lib/twgsl/twgsl.js",\n    };\n\n    pc.createGraphicsDevice(canvas, gfxOptions)\n        .then((device) => {\n            const createOptions = new pc.AppOptions();\n            createOptions.graphicsDevice = device;\n\n            createOptions.componentSystems = [\n                // @ts-ignore\n                pc.RenderComponentSystem,\n                // @ts-ignore\n                pc.CameraComponentSystem,\n                // @ts-ignore\n                pc.LightComponentSystem,\n            ];\n\n            createOptions.resourceHandlers = [\n                // @ts-ignore\n                pc.TextureHandler,\n                // @ts-ignore\n                pc.ContainerHandler,\n            ];\n\n            const app = new pc.AppBase(canvas);\n            app.init(createOptions);\n\n            // Set the canvas to fill the window and automatically change resolution to be the same as the canvas size\n            app.setCanvasFillMode(pc.FILLMODE_FILL_WINDOW);\n            app.setCanvasResolution(pc.RESOLUTION_AUTO);\n\n            const assetListLoader = new pc.AssetListLoader(\n                Object.values(assets),\n                app.assets\n            );\n            assetListLoader.load(() => {\n                app.start();\n\n                // setup skydome\n                app.scene.skyboxMip = 2;\n                app.scene.exposure = 1;\n                app.scene.envAtlas = assets.helipad.resource;\n\n                // Create an Entity with a camera component\n                const camera = new pc.Entity();\n                camera.addComponent("camera", {\n                    clearColor: new pc.Color(0.4, 0.45, 0.5),\n                });\n                camera.translate(0, 7, 24);\n                app.root.addChild(camera);\n\n                // create a hierarchy of entities with render components, representing the statue model\n                const entity = assets.statue.resource.instantiateRenderEntity();\n                app.root.addChild(entity);\n\n                // collect positions from all mesh instances to work on\n                const allMeshes = [];\n                const renders = entity.findComponents("render");\n                renders.forEach((render) => {\n                    // collect positions from all mesh instances on this render component\n                    const meshInstances = render.meshInstances;\n                    for (let i = 0; i < meshInstances.length; i++) {\n                        const meshInstance = meshInstances[i];\n\n                        // get positions from the mesh\n                        const mesh = meshInstance.mesh;\n                        const srcPositions = [];\n                        mesh.getPositions(srcPositions);\n\n                        // store it\n                        allMeshes.push({\n                            mesh: mesh,\n                            srcPositions: srcPositions,\n                        });\n                    }\n                });\n\n                // temporary work array of positions to avoid per frame allocations\n                const tempPositions = [];\n\n                let time = 0;\n                app.on("update", function (dt) {\n                    time += dt;\n\n                    if (entity) {\n                        // orbit the camera\n                        camera.setLocalPosition(\n                            25 * Math.sin(time * 0.2),\n                            15,\n                            25 * Math.cos(time * 0.2)\n                        );\n                        camera.lookAt(new pc.Vec3(0, 7, 0));\n\n                        const strength = 50;\n\n                        // modify mesh positions on each frame\n                        for (let i = 0; i < allMeshes.length; i++) {\n                            tempPositions.length = 0;\n                            const srcPositions = allMeshes[i].srcPositions;\n\n                            // loop over all positions, and fill up tempPositions array with waved version of positions from srcPositions array\n                            // modify .x and .z components based on sin function, which uses .y component\n                            for (let k = 0; k < srcPositions.length; k += 3) {\n                                tempPositions[k] =\n                                    srcPositions[k] +\n                                    strength *\n                                        Math.sin(\n                                            time + srcPositions[k + 1] * 0.01\n                                        );\n                                tempPositions[k + 1] = srcPositions[k + 1];\n                                tempPositions[k + 2] =\n                                    srcPositions[k + 2] +\n                                    strength *\n                                        Math.sin(\n                                            time + srcPositions[k + 1] * 0.01\n                                        );\n                            }\n\n                            // set new positions on the mesh\n                            const mesh = allMeshes[i].mesh;\n                            mesh.setPositions(tempPositions);\n                            mesh.update();\n                        }\n                    }\n                });\n            });\n        })\n        .catch(console.error);\n}\n',nameSlug:"mesh-deformation",categorySlug:"graphics"},"mesh-generation":{typeScriptFunction:'function example(canvas: HTMLCanvasElement, deviceType: string): void {\n\n    const assets = {\n        \'playcanvasGrey\': new pc.Asset(\'playcanvasGrey\', \'texture\', { url: \'/static/assets/textures/playcanvas-grey.png\' })\n    };\n\n    const gfxOptions = {\n        deviceTypes: [deviceType],\n        glslangUrl: \'/static/lib/glslang/glslang.js\',\n        twgslUrl: \'/static/lib/twgsl/twgsl.js\'\n    };\n\n    pc.createGraphicsDevice(canvas, gfxOptions).then((device: pc.GraphicsDevice) => {\n\n        const createOptions = new pc.AppOptions();\n        createOptions.graphicsDevice = device;\n\n        createOptions.componentSystems = [\n            // @ts-ignore\n            pc.RenderComponentSystem,\n            // @ts-ignore\n            pc.CameraComponentSystem,\n            // @ts-ignore\n            pc.LightComponentSystem\n        ];\n        createOptions.resourceHandlers = [\n            // @ts-ignore\n            pc.TextureHandler\n        ];\n\n        const app = new pc.AppBase(canvas);\n        app.init(createOptions);\n\n        // Set the canvas to fill the window and automatically change resolution to be the same as the canvas size\n        app.setCanvasFillMode(pc.FILLMODE_FILL_WINDOW);\n        app.setCanvasResolution(pc.RESOLUTION_AUTO);\n\n        const assetListLoader = new pc.AssetListLoader(Object.values(assets), app.assets);\n        assetListLoader.load(() => {\n\n            app.start();\n\n            app.scene.ambientLight = new pc.Color(0.1, 0.1, 0.1);\n\n            // helper function to create a light\n            function createLight(color: pc.Color, scale: number) {\n\n                // Create an Entity with a omni light component, which is casting shadows (using rendering to cubemap)\n                const light = new pc.Entity();\n                light.addComponent("light", {\n                    type: "omni",\n                    color: color,\n                    radius: 10,\n                    castShadows: false\n                });\n\n                // create material of specified color\n                const material = new pc.StandardMaterial();\n                material.emissive = color;\n                material.update();\n\n                // add sphere at the position of light\n                light.addComponent("render", {\n                    type: "sphere",\n                    material: material\n                });\n\n                // Scale the sphere\n                light.setLocalScale(scale, scale, scale);\n\n                app.root.addChild(light);\n                return light;\n            }\n\n            // create 4 lights that will move in the scene and deform the mesh as well\n            const lights = [\n                { radius: 7, speed: 1.0, scale: 2.5, light: createLight(new pc.Color(0.3, 0.9, 0.6), 1.0) },\n                { radius: 3, speed: 1.2, scale: 3.0, light: createLight(new pc.Color(0.7, 0.2, 0.3), 1.3) },\n                { radius: 5, speed: -0.8, scale: 4.0, light: createLight(new pc.Color(0.2, 0.2, 0.9), 1.5) },\n                { radius: 4, speed: -0.3, scale: 5.5, light: createLight(new pc.Color(0.8, 0.9, 0.4), 1.7) }\n            ];\n\n            // Create an Entity with a camera component\n            const camera = new pc.Entity();\n            camera.addComponent("camera", {\n                clearColor: new pc.Color(0.2, 0.2, 0.2)\n            });\n\n            // Add the new Entity to the hierarchy\n            app.root.addChild(camera);\n\n            // Position the camera\n            camera.translate(0, 5, 20);\n            camera.lookAt(pc.Vec3.ZERO);\n\n            // Generate a 3D grid plane with world size of 20, and resolution of 60\n            const resolution = 60;\n            const extent = 20;\n            const scale = extent / resolution;\n\n            // Generate positions and uv coordinates for vertices, store them in Float32Arrays\n            const positions = new Float32Array(3 * resolution * resolution);\n            const uvs =  new Float32Array(2 * resolution * resolution);\n            let index = 0;\n            for (let x = 0; x < resolution; x++) {\n                for (let z = 0; z < resolution; z++) {\n                    positions[3 * index] = scale * (x - resolution * 0.5);\n                    positions[3 * index + 1] = 0;  // no elevation, flat grid\n                    positions[3 * index + 2] = scale * (z - resolution * 0.5);\n                    uvs[2 * index] = x / resolution;\n                    uvs[2 * index + 1] = 1 - z / resolution;\n                    index++;\n                }\n            }\n\n            // Generate array of indices to form triangle list - two triangles per grid square\n            const indexArray: any = [];\n            for (let x = 0; x < resolution - 1; x++) {\n                for (let y = 0; y < resolution - 1; y++) {\n                    indexArray.push(x * resolution + y + 1, (x + 1) * resolution + y, x * resolution + y,\n                                    (x + 1) * resolution + y, x * resolution + y + 1, (x + 1) * resolution + y + 1);\n                }\n            }\n\n            // helper function to update required vertex / index streams\n            function updateMesh(mesh: pc.Mesh, initAll?: boolean) {\n\n                // Set updated positions and normal each frame\n                mesh.setPositions(positions);\n                // @ts-ignore engine-tsd\n                mesh.setNormals(pc.calculateNormals(positions, indexArray));\n\n                // update mesh Uvs and Indices only one time, as they do not change each frame\n                if (initAll) {\n                    mesh.setUvs(0, uvs);\n                    mesh.setIndices(indexArray);\n                }\n\n                // Let mesh update Vertex and Index buffer as needed\n                mesh.update(pc.PRIMITIVE_TRIANGLES);\n            }\n\n            // Create a mesh with dynamic vertex buffer and static index buffer\n            const mesh = new pc.Mesh(app.graphicsDevice);\n            mesh.clear(true, false);\n            updateMesh(mesh, true);\n\n            // create material\n            const material = new pc.StandardMaterial();\n            material.diffuseMap = assets.playcanvasGrey.resource;\n            material.gloss = 0.5;\n            material.metalness = 0.3;\n            material.useMetalness = true;\n            material.update();\n\n            // Create the mesh instance\n            const meshInstance = new pc.MeshInstance(mesh, material);\n\n            // Create the entity with render component using meshInstances\n            const entity = new pc.Entity();\n            entity.addComponent("render", {\n                meshInstances: [meshInstance]\n            });\n            app.root.addChild(entity);\n\n            // Set an update function on the app\'s update event\n            let time = 0;\n            app.on("update", function (dt) {\n                time += dt;\n\n                // Move the lights along circles, also keep separate list of their position for faster update in next block of code\n                const lightPositions = [];\n                for (let l = 0; l < lights.length; l++) {\n                    const element = lights[l];\n                    const lightPos = new pc.Vec2(element.radius * Math.sin(time * element.speed), element.radius * Math.cos(time * element.speed));\n                    lightPositions.push(lightPos);\n                    element.light.setLocalPosition(lightPos.x, 3, lightPos.y);\n                }\n\n                // animate .y coordinate of grid vertices by moving them up when lights are close\n                let index = 0;\n                for (let x = 0; x < resolution; x++) {\n                    for (let z = 0; z < resolution; z++) {\n\n                        let elevation = 0;\n\n                        // Evaluate distance of grid vertex to each light position, and increase elevation if light is within the range\n                        for (let l = 0; l < lightPositions.length; l++) {\n                            const dx = positions[index] - lightPositions[l].x;\n                            const dz = positions[index + 2] - lightPositions[l].y;\n                            let dist = Math.sqrt(dx * dx + dz * dz);\n                            dist = pc.math.clamp(dist, 0, lights[l].scale);\n                            dist = pc.math.smoothstep(0, lights[l].scale, dist);\n                            elevation += (1 - dist);\n                        }\n\n                        // Store elevation in .y element\n                        positions[index + 1] = elevation;\n                        index += 3;\n                    }\n                }\n\n                // update the mesh\n                updateMesh(mesh);\n            });\n        });\n    });\n}',javaScriptFunction:'function example(canvas, deviceType) {\n    const assets = {\n        playcanvasGrey: new pc.Asset("playcanvasGrey", "texture", {\n            url: "/static/assets/textures/playcanvas-grey.png",\n        }),\n    };\n\n    const gfxOptions = {\n        deviceTypes: [deviceType],\n        glslangUrl: "/static/lib/glslang/glslang.js",\n        twgslUrl: "/static/lib/twgsl/twgsl.js",\n    };\n\n    pc.createGraphicsDevice(canvas, gfxOptions).then((device) => {\n        const createOptions = new pc.AppOptions();\n        createOptions.graphicsDevice = device;\n\n        createOptions.componentSystems = [\n            // @ts-ignore\n            pc.RenderComponentSystem,\n            // @ts-ignore\n            pc.CameraComponentSystem,\n            // @ts-ignore\n            pc.LightComponentSystem,\n        ];\n\n        createOptions.resourceHandlers = [\n            // @ts-ignore\n            pc.TextureHandler,\n        ];\n\n        const app = new pc.AppBase(canvas);\n        app.init(createOptions);\n\n        // Set the canvas to fill the window and automatically change resolution to be the same as the canvas size\n        app.setCanvasFillMode(pc.FILLMODE_FILL_WINDOW);\n        app.setCanvasResolution(pc.RESOLUTION_AUTO);\n\n        const assetListLoader = new pc.AssetListLoader(\n            Object.values(assets),\n            app.assets\n        );\n        assetListLoader.load(() => {\n            app.start();\n\n            app.scene.ambientLight = new pc.Color(0.1, 0.1, 0.1);\n\n            // helper function to create a light\n            function createLight(color, scale) {\n                // Create an Entity with a omni light component, which is casting shadows (using rendering to cubemap)\n                const light = new pc.Entity();\n                light.addComponent("light", {\n                    type: "omni",\n                    color: color,\n                    radius: 10,\n                    castShadows: false,\n                });\n\n                // create material of specified color\n                const material = new pc.StandardMaterial();\n                material.emissive = color;\n                material.update();\n\n                // add sphere at the position of light\n                light.addComponent("render", {\n                    type: "sphere",\n                    material: material,\n                });\n\n                // Scale the sphere\n                light.setLocalScale(scale, scale, scale);\n\n                app.root.addChild(light);\n                return light;\n            }\n\n            // create 4 lights that will move in the scene and deform the mesh as well\n            const lights = [\n                {\n                    radius: 7,\n                    speed: 1.0,\n                    scale: 2.5,\n                    light: createLight(new pc.Color(0.3, 0.9, 0.6), 1.0),\n                },\n                {\n                    radius: 3,\n                    speed: 1.2,\n                    scale: 3.0,\n                    light: createLight(new pc.Color(0.7, 0.2, 0.3), 1.3),\n                },\n                {\n                    radius: 5,\n                    speed: -0.8,\n                    scale: 4.0,\n                    light: createLight(new pc.Color(0.2, 0.2, 0.9), 1.5),\n                },\n                {\n                    radius: 4,\n                    speed: -0.3,\n                    scale: 5.5,\n                    light: createLight(new pc.Color(0.8, 0.9, 0.4), 1.7),\n                },\n            ];\n\n            // Create an Entity with a camera component\n            const camera = new pc.Entity();\n            camera.addComponent("camera", {\n                clearColor: new pc.Color(0.2, 0.2, 0.2),\n            });\n\n            // Add the new Entity to the hierarchy\n            app.root.addChild(camera);\n\n            // Position the camera\n            camera.translate(0, 5, 20);\n            camera.lookAt(pc.Vec3.ZERO);\n\n            // Generate a 3D grid plane with world size of 20, and resolution of 60\n            const resolution = 60;\n            const extent = 20;\n            const scale = extent / resolution;\n\n            // Generate positions and uv coordinates for vertices, store them in Float32Arrays\n            const positions = new Float32Array(3 * resolution * resolution);\n            const uvs = new Float32Array(2 * resolution * resolution);\n            let index = 0;\n            for (let x = 0; x < resolution; x++) {\n                for (let z = 0; z < resolution; z++) {\n                    positions[3 * index] = scale * (x - resolution * 0.5);\n                    positions[3 * index + 1] = 0; // no elevation, flat grid\n                    positions[3 * index + 2] = scale * (z - resolution * 0.5);\n                    uvs[2 * index] = x / resolution;\n                    uvs[2 * index + 1] = 1 - z / resolution;\n                    index++;\n                }\n            }\n\n            // Generate array of indices to form triangle list - two triangles per grid square\n            const indexArray = [];\n            for (let x = 0; x < resolution - 1; x++) {\n                for (let y = 0; y < resolution - 1; y++) {\n                    indexArray.push(\n                        x * resolution + y + 1,\n                        (x + 1) * resolution + y,\n                        x * resolution + y,\n                        (x + 1) * resolution + y,\n                        x * resolution + y + 1,\n                        (x + 1) * resolution + y + 1\n                    );\n                }\n            }\n\n            // helper function to update required vertex / index streams\n            function updateMesh(mesh, initAll) {\n                // Set updated positions and normal each frame\n                mesh.setPositions(positions);\n                // @ts-ignore engine-tsd\n                mesh.setNormals(pc.calculateNormals(positions, indexArray));\n\n                // update mesh Uvs and Indices only one time, as they do not change each frame\n                if (initAll) {\n                    mesh.setUvs(0, uvs);\n                    mesh.setIndices(indexArray);\n                }\n\n                // Let mesh update Vertex and Index buffer as needed\n                mesh.update(pc.PRIMITIVE_TRIANGLES);\n            }\n\n            // Create a mesh with dynamic vertex buffer and static index buffer\n            const mesh = new pc.Mesh(app.graphicsDevice);\n            mesh.clear(true, false);\n            updateMesh(mesh, true);\n\n            // create material\n            const material = new pc.StandardMaterial();\n            material.diffuseMap = assets.playcanvasGrey.resource;\n            material.gloss = 0.5;\n            material.metalness = 0.3;\n            material.useMetalness = true;\n            material.update();\n\n            // Create the mesh instance\n            const meshInstance = new pc.MeshInstance(mesh, material);\n\n            // Create the entity with render component using meshInstances\n            const entity = new pc.Entity();\n            entity.addComponent("render", {\n                meshInstances: [meshInstance],\n            });\n            app.root.addChild(entity);\n\n            // Set an update function on the app\'s update event\n            let time = 0;\n            app.on("update", function (dt) {\n                time += dt;\n\n                // Move the lights along circles, also keep separate list of their position for faster update in next block of code\n                const lightPositions = [];\n                for (let l = 0; l < lights.length; l++) {\n                    const element = lights[l];\n                    const lightPos = new pc.Vec2(\n                        element.radius * Math.sin(time * element.speed),\n                        element.radius * Math.cos(time * element.speed)\n                    );\n                    lightPositions.push(lightPos);\n                    element.light.setLocalPosition(lightPos.x, 3, lightPos.y);\n                }\n\n                // animate .y coordinate of grid vertices by moving them up when lights are close\n                let index = 0;\n                for (let x = 0; x < resolution; x++) {\n                    for (let z = 0; z < resolution; z++) {\n                        let elevation = 0;\n\n                        // Evaluate distance of grid vertex to each light position, and increase elevation if light is within the range\n                        for (let l = 0; l < lightPositions.length; l++) {\n                            const dx = positions[index] - lightPositions[l].x;\n                            const dz =\n                                positions[index + 2] - lightPositions[l].y;\n                            let dist = Math.sqrt(dx * dx + dz * dz);\n                            dist = pc.math.clamp(dist, 0, lights[l].scale);\n                            dist = pc.math.smoothstep(0, lights[l].scale, dist);\n                            elevation += 1 - dist;\n                        }\n\n                        // Store elevation in .y element\n                        positions[index + 1] = elevation;\n                        index += 3;\n                    }\n                }\n\n                // update the mesh\n                updateMesh(mesh);\n            });\n        });\n    });\n}\n',nameSlug:"mesh-generation",categorySlug:"graphics"},"mesh-morph-many":{typeScriptFunction:"function example(canvas: HTMLCanvasElement, deviceType: string): void {\n\n    const assets = {\n        helipad: new pc.Asset('helipad-env-atlas', 'texture', { url: '/static/assets/cubemaps/helipad-env-atlas.png' }, { type: pc.TEXTURETYPE_RGBP, mipmaps: false }),\n        morph: new pc.Asset('glb', 'container', { url: '/static/assets/models/morph-stress-test.glb' })\n    };\n\n    const gfxOptions = {\n        deviceTypes: [deviceType],\n        glslangUrl: '/static/lib/glslang/glslang.js',\n        twgslUrl: '/static/lib/twgsl/twgsl.js'\n    };\n\n    pc.createGraphicsDevice(canvas, gfxOptions).then((device: pc.GraphicsDevice) => {\n\n        const createOptions = new pc.AppOptions();\n        createOptions.graphicsDevice = device;\n        createOptions.mouse = new pc.Mouse(document.body);\n        createOptions.touch = new pc.TouchDevice(document.body);\n        createOptions.keyboard = new pc.Keyboard(document.body);\n\n        createOptions.componentSystems = [\n            // @ts-ignore\n            pc.RenderComponentSystem,\n            // @ts-ignore\n            pc.CameraComponentSystem,\n            // @ts-ignore\n            pc.LightComponentSystem\n        ];\n        createOptions.resourceHandlers = [\n            // @ts-ignore\n            pc.TextureHandler,\n            // @ts-ignore\n            pc.ContainerHandler\n        ];\n\n        const app = new pc.AppBase(canvas);\n        app.init(createOptions);\n\n        // Set the canvas to fill the window and automatically change resolution to be the same as the canvas size\n        app.setCanvasFillMode(pc.FILLMODE_FILL_WINDOW);\n        app.setCanvasResolution(pc.RESOLUTION_AUTO);\n\n        const assetListLoader = new pc.AssetListLoader(Object.values(assets), app.assets);\n        assetListLoader.load(() => {\n\n            app.start();\n\n            // setup skydome\n            app.scene.skyboxMip = 2;\n            app.scene.exposure = 1.2;\n            app.scene.envAtlas = assets.helipad.resource;\n\n            // create an instance of the morph target model\n            const morphEntity = assets.morph.resource.instantiateRenderEntity();\n            app.root.addChild(morphEntity);\n\n            // get the morph instance, which we apply the weights to\n            const morphInstance = morphEntity.render.meshInstances[1].morphInstance;\n\n            // Create an entity with a directional light component\n            const light = new pc.Entity();\n            light.addComponent(\"light\", {\n                type: \"directional\",\n                castShadows: true,\n                shadowBias: 0.5,\n                normalOffsetBias: 0.2,\n                shadowDistance: 25\n            });\n            app.root.addChild(light);\n            light.setLocalEulerAngles(45, 45, 0);\n\n            // Create an entity with a camera component\n            const camera = new pc.Entity();\n            camera.addComponent(\"camera\");\n            app.root.addChild(camera);\n\n            // position the camera\n            camera.setLocalPosition(0, 4, 9);\n            camera.lookAt(pc.Vec3.ZERO);\n\n            // update function called once per frame\n            let time = 0;\n            app.on(\"update\", function (dt) {\n                time += dt;\n\n                // modify weights of all morph targets along sin curve\n                const targetsCount = morphInstance.morph.targets.length;\n                for (let i = 0; i < targetsCount; i++) {\n                    morphInstance.setWeight(i, Math.abs(Math.sin(time + i * 0.4)));\n                }\n\n                // debug display the morph target textures blended together\n                if (morphInstance.texturePositions) {\n                    // @ts-ignore\n                    app.drawTexture(-0.7, -0.7, 0.4, 0.4, morphInstance.texturePositions);\n                }\n            });\n        });\n    });\n}",javaScriptFunction:'function example(canvas, deviceType) {\n    const assets = {\n        helipad: new pc.Asset(\n            "helipad-env-atlas",\n            "texture",\n            { url: "/static/assets/cubemaps/helipad-env-atlas.png" },\n            { type: pc.TEXTURETYPE_RGBP, mipmaps: false }\n        ),\n        morph: new pc.Asset("glb", "container", {\n            url: "/static/assets/models/morph-stress-test.glb",\n        }),\n    };\n\n    const gfxOptions = {\n        deviceTypes: [deviceType],\n        glslangUrl: "/static/lib/glslang/glslang.js",\n        twgslUrl: "/static/lib/twgsl/twgsl.js",\n    };\n\n    pc.createGraphicsDevice(canvas, gfxOptions).then((device) => {\n        const createOptions = new pc.AppOptions();\n        createOptions.graphicsDevice = device;\n        createOptions.mouse = new pc.Mouse(document.body);\n        createOptions.touch = new pc.TouchDevice(document.body);\n        createOptions.keyboard = new pc.Keyboard(document.body);\n\n        createOptions.componentSystems = [\n            // @ts-ignore\n            pc.RenderComponentSystem,\n            // @ts-ignore\n            pc.CameraComponentSystem,\n            // @ts-ignore\n            pc.LightComponentSystem,\n        ];\n\n        createOptions.resourceHandlers = [\n            // @ts-ignore\n            pc.TextureHandler,\n            // @ts-ignore\n            pc.ContainerHandler,\n        ];\n\n        const app = new pc.AppBase(canvas);\n        app.init(createOptions);\n\n        // Set the canvas to fill the window and automatically change resolution to be the same as the canvas size\n        app.setCanvasFillMode(pc.FILLMODE_FILL_WINDOW);\n        app.setCanvasResolution(pc.RESOLUTION_AUTO);\n\n        const assetListLoader = new pc.AssetListLoader(\n            Object.values(assets),\n            app.assets\n        );\n        assetListLoader.load(() => {\n            app.start();\n\n            // setup skydome\n            app.scene.skyboxMip = 2;\n            app.scene.exposure = 1.2;\n            app.scene.envAtlas = assets.helipad.resource;\n\n            // create an instance of the morph target model\n            const morphEntity = assets.morph.resource.instantiateRenderEntity();\n            app.root.addChild(morphEntity);\n\n            // get the morph instance, which we apply the weights to\n            const morphInstance =\n                morphEntity.render.meshInstances[1].morphInstance;\n\n            // Create an entity with a directional light component\n            const light = new pc.Entity();\n            light.addComponent("light", {\n                type: "directional",\n                castShadows: true,\n                shadowBias: 0.5,\n                normalOffsetBias: 0.2,\n                shadowDistance: 25,\n            });\n            app.root.addChild(light);\n            light.setLocalEulerAngles(45, 45, 0);\n\n            // Create an entity with a camera component\n            const camera = new pc.Entity();\n            camera.addComponent("camera");\n            app.root.addChild(camera);\n\n            // position the camera\n            camera.setLocalPosition(0, 4, 9);\n            camera.lookAt(pc.Vec3.ZERO);\n\n            // update function called once per frame\n            let time = 0;\n            app.on("update", function (dt) {\n                time += dt;\n\n                // modify weights of all morph targets along sin curve\n                const targetsCount = morphInstance.morph.targets.length;\n                for (let i = 0; i < targetsCount; i++) {\n                    morphInstance.setWeight(\n                        i,\n                        Math.abs(Math.sin(time + i * 0.4))\n                    );\n                }\n\n                // debug display the morph target textures blended together\n                if (morphInstance.texturePositions) {\n                    // @ts-ignore\n                    app.drawTexture(\n                        -0.7,\n                        -0.7,\n                        0.4,\n                        0.4,\n                        morphInstance.texturePositions\n                    );\n                }\n            });\n        });\n    });\n}\n',nameSlug:"mesh-morph-many",categorySlug:"graphics"},"mesh-morph":{typeScriptFunction:'function example(canvas: HTMLCanvasElement, deviceType: string): void {\n\n    const gfxOptions = {\n        deviceTypes: [deviceType],\n        glslangUrl: \'/static/lib/glslang/glslang.js\',\n        twgslUrl: \'/static/lib/twgsl/twgsl.js\'\n    };\n\n    pc.createGraphicsDevice(canvas, gfxOptions).then((device: pc.GraphicsDevice) => {\n\n        const createOptions = new pc.AppOptions();\n        createOptions.graphicsDevice = device;\n\n        createOptions.componentSystems = [\n            // @ts-ignore\n            pc.RenderComponentSystem,\n            // @ts-ignore\n            pc.CameraComponentSystem,\n            // @ts-ignore\n            pc.LightComponentSystem\n        ];\n\n        const app = new pc.AppBase(canvas);\n        app.init(createOptions);\n        app.start();\n\n        // Set the canvas to fill the window and automatically change resolution to be the same as the canvas size\n        app.setCanvasFillMode(pc.FILLMODE_FILL_WINDOW);\n        app.setCanvasResolution(pc.RESOLUTION_AUTO);\n\n        // Create an entity with a directional light component\n        const light = new pc.Entity();\n        light.addComponent("light", {\n            type: "directional"\n        });\n        app.root.addChild(light);\n        light.setLocalEulerAngles(45, 30, 0);\n\n        // Create an entity with a camera component\n        const camera = new pc.Entity();\n        camera.addComponent("camera", {\n            clearColor: new pc.Color(0.1, 0.1, 0.1)\n        });\n        app.root.addChild(camera);\n\n        // helper function to return the shortest distance from point [x, y, z] to a plane defined by [a, b, c] normal\n        const shortestDistance = function (x: number, y: number, z: number, a: number, b: number, c: number) {\n            const d = Math.abs(a * x + b * y + c * z);\n            const e = Math.sqrt(a * a + b * b + c * c);\n            return d / e;\n        };\n\n        // helper function that creates a morph target from original positions, normals and indices, and a plane normal [nx, ny, nz]\n        const createMorphTarget = function (positions: number[], normals: number[], indices: number[], nx: number, ny: number, nz: number) {\n\n            // modify vertices to separate array\n            const modifiedPositions = new Float32Array(positions.length);\n            let dist: number, i: number, displacement: number;\n            const limit = 0.2;\n            for (i = 0; i < positions.length; i += 3) {\n                // distance of the point to the specified plane\n                dist = shortestDistance(positions[i], positions[i + 1], positions[i + 2], nx, ny, nz);\n\n                // modify distance to displacement amount - displace nearby points more than distant points\n                displacement = pc.math.smoothstep(0, limit, dist);\n                displacement = 1 - displacement;\n\n                // generate new position by extruding vertex along normal by displacement\n                modifiedPositions[i] = positions[i] + normals[i] * displacement;\n                modifiedPositions[i + 1] = positions[i + 1] + normals[i + 1] * displacement;\n                modifiedPositions[i + 2] = positions[i + 2] + normals[i + 2] * displacement;\n            }\n\n            // generate normals based on modified positions and indices\n            // @ts-ignore engine-tsd\n            const modifiedNormals = new Float32Array(pc.calculateNormals(modifiedPositions, indices));\n\n            // generate delta positions and normals - as morph targets store delta between base position / normal and modified position / normal\n            for (i = 0; i < modifiedNormals.length; i++) {\n                modifiedPositions[i] -= positions[i];\n                modifiedNormals[i] -= normals[i];\n            }\n\n            // create a morph target\n            // @ts-ignore engine-tsd\n            return new pc.MorphTarget({\n                deltaPositions: modifiedPositions,\n                deltaNormals: modifiedNormals\n            });\n        };\n\n        const createMorphInstance = function (x: number, y: number, z: number) {\n            // create the base mesh - a sphere, with higher amount of vertices / triangles\n            const mesh = pc.createSphere(app.graphicsDevice, { latitudeBands: 200, longitudeBands: 200 });\n\n            // obtain base mesh vertex / index data\n            const srcPositions: number[] = [];\n            const srcNormals: number[] = [];\n            const indices: number[] = [];\n            mesh.getPositions(srcPositions);\n            mesh.getNormals(srcNormals);\n            mesh.getIndices(indices);\n\n            // build 3 targets by expanding a part of sphere along 3 planes, specified by the normal\n            const targets = [];\n            targets.push(createMorphTarget(srcPositions, srcNormals, indices, 1, 0, 0));\n            targets.push(createMorphTarget(srcPositions, srcNormals, indices, 0, 1, 0));\n            targets.push(createMorphTarget(srcPositions, srcNormals, indices, 0, 0, 1));\n\n            // create a morph using these 3 targets\n            mesh.morph = new pc.Morph(targets, app.graphicsDevice);\n\n            // Create the mesh instance\n            const material = new pc.StandardMaterial();\n            const meshInstance = new pc.MeshInstance(mesh, material);\n\n            // add morph instance - this is where currently set weights are stored\n            const morphInstance = new pc.MorphInstance(mesh.morph);\n            meshInstance.morphInstance = morphInstance;\n\n            // Create Entity and add it to the scene\n            const entity = new pc.Entity();\n            entity.setLocalPosition(x, y, z);\n            app.root.addChild(entity);\n\n            // Add a render component with meshInstance\n            entity.addComponent(\'render\', {\n                material: material,\n                meshInstances: [meshInstance]\n            });\n\n            return morphInstance;\n        };\n\n        // create 3 morph instances\n        const morphInstances: pc.MorphInstance[] = [];\n        for (let k = 0; k < 3; k++) {\n            morphInstances.push(createMorphInstance(Math.random() * 6 - 3, Math.random() * 6 - 3, Math.random() * 6 - 3));\n        }\n\n        // update function called once per frame\n        let time = 0;\n        app.on("update", function (dt) {\n            time += dt;\n\n            for (let m = 0; m < morphInstances.length; m++) {\n                // modify weights of all 3 morph targets along some sin curve with different frequency\n                morphInstances[m].setWeight(0, Math.abs(Math.sin(time + m)));\n                morphInstances[m].setWeight(1, Math.abs(Math.sin(time * 0.3 + m)));\n                morphInstances[m].setWeight(2, Math.abs(Math.sin(time * 0.7 + m)));\n            }\n\n            // orbit camera around\n            camera.setLocalPosition(16 * Math.sin(time * 0.2), 4, 16 * Math.cos(time * 0.2));\n            camera.lookAt(pc.Vec3.ZERO);\n\n            // debug display the morph target textures blended together\n            if (morphInstances[0].texturePositions) {\n                // @ts-ignore\n                app.drawTexture(-0.7, -0.7, 0.4, 0.4, morphInstances[0].texturePositions);\n            }\n\n            if (morphInstances[0].textureNormals) {\n                // @ts-ignore\n                app.drawTexture(0.7, -0.7, 0.4, 0.4, morphInstances[0].textureNormals);\n            }\n        });\n    });\n}',javaScriptFunction:'function example(canvas, deviceType) {\n    const gfxOptions = {\n        deviceTypes: [deviceType],\n        glslangUrl: "/static/lib/glslang/glslang.js",\n        twgslUrl: "/static/lib/twgsl/twgsl.js",\n    };\n\n    pc.createGraphicsDevice(canvas, gfxOptions).then((device) => {\n        const createOptions = new pc.AppOptions();\n        createOptions.graphicsDevice = device;\n\n        createOptions.componentSystems = [\n            // @ts-ignore\n            pc.RenderComponentSystem,\n            // @ts-ignore\n            pc.CameraComponentSystem,\n            // @ts-ignore\n            pc.LightComponentSystem,\n        ];\n\n        const app = new pc.AppBase(canvas);\n        app.init(createOptions);\n        app.start();\n\n        // Set the canvas to fill the window and automatically change resolution to be the same as the canvas size\n        app.setCanvasFillMode(pc.FILLMODE_FILL_WINDOW);\n        app.setCanvasResolution(pc.RESOLUTION_AUTO);\n\n        // Create an entity with a directional light component\n        const light = new pc.Entity();\n        light.addComponent("light", {\n            type: "directional",\n        });\n        app.root.addChild(light);\n        light.setLocalEulerAngles(45, 30, 0);\n\n        // Create an entity with a camera component\n        const camera = new pc.Entity();\n        camera.addComponent("camera", {\n            clearColor: new pc.Color(0.1, 0.1, 0.1),\n        });\n        app.root.addChild(camera);\n\n        // helper function to return the shortest distance from point [x, y, z] to a plane defined by [a, b, c] normal\n        const shortestDistance = function (x, y, z, a, b, c) {\n            const d = Math.abs(a * x + b * y + c * z);\n            const e = Math.sqrt(a * a + b * b + c * c);\n            return d / e;\n        };\n\n        // helper function that creates a morph target from original positions, normals and indices, and a plane normal [nx, ny, nz]\n        const createMorphTarget = function (\n            positions,\n            normals,\n            indices,\n            nx,\n            ny,\n            nz\n        ) {\n            // modify vertices to separate array\n            const modifiedPositions = new Float32Array(positions.length);\n            let dist, i, displacement;\n            const limit = 0.2;\n            for (i = 0; i < positions.length; i += 3) {\n                // distance of the point to the specified plane\n                dist = shortestDistance(\n                    positions[i],\n                    positions[i + 1],\n                    positions[i + 2],\n                    nx,\n                    ny,\n                    nz\n                );\n\n                // modify distance to displacement amount - displace nearby points more than distant points\n                displacement = pc.math.smoothstep(0, limit, dist);\n                displacement = 1 - displacement;\n\n                // generate new position by extruding vertex along normal by displacement\n                modifiedPositions[i] = positions[i] + normals[i] * displacement;\n                modifiedPositions[i + 1] =\n                    positions[i + 1] + normals[i + 1] * displacement;\n                modifiedPositions[i + 2] =\n                    positions[i + 2] + normals[i + 2] * displacement;\n            }\n\n            // generate normals based on modified positions and indices\n            // @ts-ignore engine-tsd\n            const modifiedNormals = new Float32Array(\n                pc.calculateNormals(modifiedPositions, indices)\n            );\n\n            // generate delta positions and normals - as morph targets store delta between base position / normal and modified position / normal\n            for (i = 0; i < modifiedNormals.length; i++) {\n                modifiedPositions[i] -= positions[i];\n                modifiedNormals[i] -= normals[i];\n            }\n\n            // create a morph target\n            // @ts-ignore engine-tsd\n            return new pc.MorphTarget({\n                deltaPositions: modifiedPositions,\n                deltaNormals: modifiedNormals,\n            });\n        };\n\n        const createMorphInstance = function (x, y, z) {\n            // create the base mesh - a sphere, with higher amount of vertices / triangles\n            const mesh = pc.createSphere(app.graphicsDevice, {\n                latitudeBands: 200,\n                longitudeBands: 200,\n            });\n\n            // obtain base mesh vertex / index data\n            const srcPositions = [];\n            const srcNormals = [];\n            const indices = [];\n            mesh.getPositions(srcPositions);\n            mesh.getNormals(srcNormals);\n            mesh.getIndices(indices);\n\n            // build 3 targets by expanding a part of sphere along 3 planes, specified by the normal\n            const targets = [];\n            targets.push(\n                createMorphTarget(srcPositions, srcNormals, indices, 1, 0, 0)\n            );\n            targets.push(\n                createMorphTarget(srcPositions, srcNormals, indices, 0, 1, 0)\n            );\n            targets.push(\n                createMorphTarget(srcPositions, srcNormals, indices, 0, 0, 1)\n            );\n\n            // create a morph using these 3 targets\n            mesh.morph = new pc.Morph(targets, app.graphicsDevice);\n\n            // Create the mesh instance\n            const material = new pc.StandardMaterial();\n            const meshInstance = new pc.MeshInstance(mesh, material);\n\n            // add morph instance - this is where currently set weights are stored\n            const morphInstance = new pc.MorphInstance(mesh.morph);\n            meshInstance.morphInstance = morphInstance;\n\n            // Create Entity and add it to the scene\n            const entity = new pc.Entity();\n            entity.setLocalPosition(x, y, z);\n            app.root.addChild(entity);\n\n            // Add a render component with meshInstance\n            entity.addComponent("render", {\n                material: material,\n                meshInstances: [meshInstance],\n            });\n\n            return morphInstance;\n        };\n\n        // create 3 morph instances\n        const morphInstances = [];\n        for (let k = 0; k < 3; k++) {\n            morphInstances.push(\n                createMorphInstance(\n                    Math.random() * 6 - 3,\n                    Math.random() * 6 - 3,\n                    Math.random() * 6 - 3\n                )\n            );\n        }\n\n        // update function called once per frame\n        let time = 0;\n        app.on("update", function (dt) {\n            time += dt;\n\n            for (let m = 0; m < morphInstances.length; m++) {\n                // modify weights of all 3 morph targets along some sin curve with different frequency\n                morphInstances[m].setWeight(0, Math.abs(Math.sin(time + m)));\n                morphInstances[m].setWeight(\n                    1,\n                    Math.abs(Math.sin(time * 0.3 + m))\n                );\n                morphInstances[m].setWeight(\n                    2,\n                    Math.abs(Math.sin(time * 0.7 + m))\n                );\n            }\n\n            // orbit camera around\n            camera.setLocalPosition(\n                16 * Math.sin(time * 0.2),\n                4,\n                16 * Math.cos(time * 0.2)\n            );\n            camera.lookAt(pc.Vec3.ZERO);\n\n            // debug display the morph target textures blended together\n            if (morphInstances[0].texturePositions) {\n                // @ts-ignore\n                app.drawTexture(\n                    -0.7,\n                    -0.7,\n                    0.4,\n                    0.4,\n                    morphInstances[0].texturePositions\n                );\n            }\n\n            if (morphInstances[0].textureNormals) {\n                // @ts-ignore\n                app.drawTexture(\n                    0.7,\n                    -0.7,\n                    0.4,\n                    0.4,\n                    morphInstances[0].textureNormals\n                );\n            }\n        });\n    });\n}\n',nameSlug:"mesh-morph",categorySlug:"graphics"},"model-asset":{typeScriptFunction:"function example(canvas: HTMLCanvasElement, deviceType: string): void {\n\n    const assets = {\n        'statue': new pc.Asset('statue', 'container', { url: '/static/assets/models/statue.glb' })\n    };\n\n    const gfxOptions = {\n        deviceTypes: [deviceType],\n        glslangUrl: '/static/lib/glslang/glslang.js',\n        twgslUrl: '/static/lib/twgsl/twgsl.js'\n    };\n\n    pc.createGraphicsDevice(canvas, gfxOptions).then((device: pc.GraphicsDevice) => {\n\n        const createOptions = new pc.AppOptions();\n        createOptions.graphicsDevice = device;\n\n        createOptions.componentSystems = [\n            // @ts-ignore\n            pc.ModelComponentSystem,\n            // @ts-ignore\n            pc.CameraComponentSystem,\n            // @ts-ignore\n            pc.LightComponentSystem\n        ];\n        createOptions.resourceHandlers = [\n            // @ts-ignore\n            pc.TextureHandler,\n            // @ts-ignore\n            pc.ContainerHandler\n        ];\n\n        const app = new pc.AppBase(canvas);\n        app.init(createOptions);\n\n        // Set the canvas to fill the window and automatically change resolution to be the same as the canvas size\n        app.setCanvasFillMode(pc.FILLMODE_FILL_WINDOW);\n        app.setCanvasResolution(pc.RESOLUTION_AUTO);\n\n        const assetListLoader = new pc.AssetListLoader(Object.values(assets), app.assets);\n        assetListLoader.load(() => {\n\n            app.start();\n\n            app.scene.ambientLight = new pc.Color(0.2, 0.2, 0.2);\n\n            // create an entity with render assets\n            const entity = assets.statue.resource.instantiateModelEntity({\n                castShadows: true\n            });\n\n            app.root.addChild(entity);\n\n            // clone a small version of the entity\n            const clone = entity.clone();\n            clone.setLocalScale(0.2, 0.2, 0.2);\n            clone.setLocalPosition(-4, 12, 0);\n            app.root.addChild(clone);\n\n            // Create an Entity with a camera component\n            const camera = new pc.Entity();\n            camera.addComponent(\"camera\", {\n                clearColor: new pc.Color(0.4, 0.45, 0.5)\n            });\n            camera.translate(0, 7, 24);\n            app.root.addChild(camera);\n\n            // Create an Entity with a omni light component\n            const light = new pc.Entity();\n            light.addComponent(\"light\", {\n                type: \"omni\",\n                color: new pc.Color(1, 1, 1),\n                range: 100,\n                castShadows: true\n            });\n            light.translate(5, 0, 15);\n            app.root.addChild(light);\n\n            app.on(\"update\", function (dt) {\n                if (entity) {\n                    entity.rotate(0, 10 * dt, 0);\n                }\n            });\n        });\n    });\n}",javaScriptFunction:'function example(canvas, deviceType) {\n    const assets = {\n        statue: new pc.Asset("statue", "container", {\n            url: "/static/assets/models/statue.glb",\n        }),\n    };\n\n    const gfxOptions = {\n        deviceTypes: [deviceType],\n        glslangUrl: "/static/lib/glslang/glslang.js",\n        twgslUrl: "/static/lib/twgsl/twgsl.js",\n    };\n\n    pc.createGraphicsDevice(canvas, gfxOptions).then((device) => {\n        const createOptions = new pc.AppOptions();\n        createOptions.graphicsDevice = device;\n\n        createOptions.componentSystems = [\n            // @ts-ignore\n            pc.ModelComponentSystem,\n            // @ts-ignore\n            pc.CameraComponentSystem,\n            // @ts-ignore\n            pc.LightComponentSystem,\n        ];\n\n        createOptions.resourceHandlers = [\n            // @ts-ignore\n            pc.TextureHandler,\n            // @ts-ignore\n            pc.ContainerHandler,\n        ];\n\n        const app = new pc.AppBase(canvas);\n        app.init(createOptions);\n\n        // Set the canvas to fill the window and automatically change resolution to be the same as the canvas size\n        app.setCanvasFillMode(pc.FILLMODE_FILL_WINDOW);\n        app.setCanvasResolution(pc.RESOLUTION_AUTO);\n\n        const assetListLoader = new pc.AssetListLoader(\n            Object.values(assets),\n            app.assets\n        );\n        assetListLoader.load(() => {\n            app.start();\n\n            app.scene.ambientLight = new pc.Color(0.2, 0.2, 0.2);\n\n            // create an entity with render assets\n            const entity = assets.statue.resource.instantiateModelEntity({\n                castShadows: true,\n            });\n\n            app.root.addChild(entity);\n\n            // clone a small version of the entity\n            const clone = entity.clone();\n            clone.setLocalScale(0.2, 0.2, 0.2);\n            clone.setLocalPosition(-4, 12, 0);\n            app.root.addChild(clone);\n\n            // Create an Entity with a camera component\n            const camera = new pc.Entity();\n            camera.addComponent("camera", {\n                clearColor: new pc.Color(0.4, 0.45, 0.5),\n            });\n            camera.translate(0, 7, 24);\n            app.root.addChild(camera);\n\n            // Create an Entity with a omni light component\n            const light = new pc.Entity();\n            light.addComponent("light", {\n                type: "omni",\n                color: new pc.Color(1, 1, 1),\n                range: 100,\n                castShadows: true,\n            });\n            light.translate(5, 0, 15);\n            app.root.addChild(light);\n\n            app.on("update", function (dt) {\n                if (entity) {\n                    entity.rotate(0, 10 * dt, 0);\n                }\n            });\n        });\n    });\n}\n',nameSlug:"model-asset",categorySlug:"graphics"},"model-outline":{typeScriptFunction:'function example(canvas: HTMLCanvasElement, deviceType: string): void {\n\n    const assets = {\n        \'outline\': new pc.Asset(\'outline\', \'script\', { url: \'/static/scripts/posteffects/posteffect-outline.js\' })\n    };\n\n    const gfxOptions = {\n        deviceTypes: [deviceType],\n        glslangUrl: \'/static/lib/glslang/glslang.js\',\n        twgslUrl: \'/static/lib/twgsl/twgsl.js\'\n    };\n\n    pc.createGraphicsDevice(canvas, gfxOptions).then((device: pc.GraphicsDevice) => {\n\n        const createOptions = new pc.AppOptions();\n        createOptions.graphicsDevice = device;\n        createOptions.mouse = new pc.Mouse(document.body);\n        createOptions.touch = new pc.TouchDevice(document.body);\n        createOptions.keyboard = new pc.Keyboard(document.body);\n\n        createOptions.componentSystems = [\n            // @ts-ignore\n            pc.RenderComponentSystem,\n            // @ts-ignore\n            pc.CameraComponentSystem,\n            // @ts-ignore\n            pc.LightComponentSystem,\n            // @ts-ignore\n            pc.ScriptComponentSystem\n        ];\n        createOptions.resourceHandlers = [\n            // @ts-ignore\n            pc.ScriptHandler\n        ];\n\n        const app = new pc.AppBase(canvas);\n        app.init(createOptions);\n\n        // Set the canvas to fill the window and automatically change resolution to be the same as the canvas size\n        app.setCanvasFillMode(pc.FILLMODE_FILL_WINDOW);\n        app.setCanvasResolution(pc.RESOLUTION_AUTO);\n\n        const assetListLoader = new pc.AssetListLoader(Object.values(assets), app.assets);\n        assetListLoader.load(() => {\n\n            app.start();\n\n            app.scene.ambientLight = new pc.Color(0.2, 0.2, 0.2);\n\n            // helper function to create a primitive with shape type, position, scale, color and layer\n            function createPrimitive(primitiveType: string, position: number | pc.Vec3, scale: number | pc.Vec3, color: pc.Color, layer: number[]) {\n                // create material of specified color\n                const material = new pc.StandardMaterial();\n                material.diffuse = color;\n                material.update();\n\n                // create primitive\n                const primitive = new pc.Entity();\n                primitive.addComponent(\'render\', {\n                    type: primitiveType,\n                    layers: layer,\n                    material: material\n                });\n\n                // set position and scale and add it to scene\n                primitive.setLocalPosition(position);\n                primitive.setLocalScale(scale);\n                app.root.addChild(primitive);\n\n                return primitive;\n            }\n\n            // create texture and render target for rendering into, including depth buffer\n            function createRenderTarget() {\n                const texture = new pc.Texture(app.graphicsDevice, {\n                    name: \'OutlineObjects\',\n                    width: app.graphicsDevice.width,\n                    height: app.graphicsDevice.height,\n                    format: pc.PIXELFORMAT_RGBA8,\n                    mipmaps: false,\n                    minFilter: pc.FILTER_LINEAR,\n                    magFilter: pc.FILTER_LINEAR\n                });\n                return new pc.RenderTarget({\n                    colorBuffer: texture,\n                    depth: true\n                });\n            }\n\n            let renderTarget = createRenderTarget();\n\n            // create a layer for rendering to texture, and add it to the beginning of layers to render into it first\n            const outlineLayer = new pc.Layer({ name: "OutlineLayer" });\n            app.scene.layers.insert(outlineLayer, 0);\n\n            // get existing layers\n            const worldLayer = app.scene.layers.getLayerByName("World");\n            const uiLayer = app.scene.layers.getLayerByName("UI");\n\n            // create ground plane and 3 primitives, visible in both layers\n            createPrimitive("plane", new pc.Vec3(0, 0, 0), new pc.Vec3(20, 20, 20), new pc.Color(0.3, 0.5, 0.3), [worldLayer.id]);\n            createPrimitive("sphere", new pc.Vec3(-2, 1, 0), new pc.Vec3(2, 2, 2), new pc.Color(1, 0, 0), [worldLayer.id]);\n            createPrimitive("box", new pc.Vec3(2, 1, 0), new pc.Vec3(2, 2, 2), new pc.Color(1, 1, 0), [worldLayer.id, outlineLayer.id]);\n            createPrimitive("cone", new pc.Vec3(0, 1, -2), new pc.Vec3(2, 2, 2), new pc.Color(0, 1, 1), [worldLayer.id]);\n\n            // Create main camera, which renders entities in world layer\n            const camera = new pc.Entity();\n            camera.addComponent("camera", {\n                clearColor: new pc.Color(0.2, 0.2, 0.4),\n                layers: [worldLayer.id, uiLayer.id]\n            });\n            camera.translate(0, 20, 25);\n            camera.lookAt(pc.Vec3.ZERO);\n\n            // Create outline camera, which renders entities in outline layer into the render target\n            const outlineCamera = new pc.Entity();\n            outlineCamera.addComponent("camera", {\n                clearColor: new pc.Color(0.0, 0.0, 0.0, 0.0),\n                layers: [outlineLayer.id],\n                renderTarget: renderTarget\n            });\n            app.root.addChild(outlineCamera);\n\n            // @ts-ignore engine-tsd\n            const outline = new OutlineEffect(app.graphicsDevice, 3);\n            outline.color = new pc.Color(0, 0.5, 1, 1);\n            outline.texture = renderTarget.colorBuffer;\n            camera.camera.postEffects.addEffect(outline);\n\n            app.root.addChild(camera);\n\n            // Create an Entity with a omni light component and add it to both layers\n            const light = new pc.Entity();\n            light.addComponent("light", {\n                type: "omni",\n                color: new pc.Color(1, 1, 1),\n                range: 20,\n                castShadows: true,\n                shadowBias: 0.05,\n                normalOffsetBias: 0.03,\n                layers: [worldLayer.id]\n            });\n            light.translate(0, 2, 5);\n            app.root.addChild(light);\n\n            // handle canvas resize\n            window.addEventListener("resize", function () {\n                app.resizeCanvas(canvas.width, canvas.height);\n\n                // re-create the render target for the outline camera\n                renderTarget.colorBuffer.destroy();\n                renderTarget.destroy();\n                renderTarget = createRenderTarget();\n                outlineCamera.camera.renderTarget = renderTarget;\n                outline.texture = renderTarget.colorBuffer;\n            });\n\n            // update things each frame\n            let time = 0;\n            app.on("update", function (dt) {\n                time += dt;\n\n                // rotate the camera around the objects\n                camera.setLocalPosition(12 * Math.sin(time), 5, 12 * Math.cos(time));\n                camera.lookAt(pc.Vec3.ZERO);\n\n                // outline camera needs to match the main camera\n                outlineCamera.setLocalPosition(camera.getLocalPosition());\n                outlineCamera.setLocalRotation(camera.getLocalRotation());\n            });\n        });\n    });\n}',javaScriptFunction:'function example(canvas, deviceType) {\n    const assets = {\n        outline: new pc.Asset("outline", "script", {\n            url: "/static/scripts/posteffects/posteffect-outline.js",\n        }),\n    };\n\n    const gfxOptions = {\n        deviceTypes: [deviceType],\n        glslangUrl: "/static/lib/glslang/glslang.js",\n        twgslUrl: "/static/lib/twgsl/twgsl.js",\n    };\n\n    pc.createGraphicsDevice(canvas, gfxOptions).then((device) => {\n        const createOptions = new pc.AppOptions();\n        createOptions.graphicsDevice = device;\n        createOptions.mouse = new pc.Mouse(document.body);\n        createOptions.touch = new pc.TouchDevice(document.body);\n        createOptions.keyboard = new pc.Keyboard(document.body);\n\n        createOptions.componentSystems = [\n            // @ts-ignore\n            pc.RenderComponentSystem,\n            // @ts-ignore\n            pc.CameraComponentSystem,\n            // @ts-ignore\n            pc.LightComponentSystem,\n            // @ts-ignore\n            pc.ScriptComponentSystem,\n        ];\n\n        createOptions.resourceHandlers = [\n            // @ts-ignore\n            pc.ScriptHandler,\n        ];\n\n        const app = new pc.AppBase(canvas);\n        app.init(createOptions);\n\n        // Set the canvas to fill the window and automatically change resolution to be the same as the canvas size\n        app.setCanvasFillMode(pc.FILLMODE_FILL_WINDOW);\n        app.setCanvasResolution(pc.RESOLUTION_AUTO);\n\n        const assetListLoader = new pc.AssetListLoader(\n            Object.values(assets),\n            app.assets\n        );\n        assetListLoader.load(() => {\n            app.start();\n\n            app.scene.ambientLight = new pc.Color(0.2, 0.2, 0.2);\n\n            // helper function to create a primitive with shape type, position, scale, color and layer\n            function createPrimitive(\n                primitiveType,\n                position,\n                scale,\n                color,\n                layer\n            ) {\n                // create material of specified color\n                const material = new pc.StandardMaterial();\n                material.diffuse = color;\n                material.update();\n\n                // create primitive\n                const primitive = new pc.Entity();\n                primitive.addComponent("render", {\n                    type: primitiveType,\n                    layers: layer,\n                    material: material,\n                });\n\n                // set position and scale and add it to scene\n                primitive.setLocalPosition(position);\n                primitive.setLocalScale(scale);\n                app.root.addChild(primitive);\n\n                return primitive;\n            }\n\n            // create texture and render target for rendering into, including depth buffer\n            function createRenderTarget() {\n                const texture = new pc.Texture(app.graphicsDevice, {\n                    name: "OutlineObjects",\n                    width: app.graphicsDevice.width,\n                    height: app.graphicsDevice.height,\n                    format: pc.PIXELFORMAT_RGBA8,\n                    mipmaps: false,\n                    minFilter: pc.FILTER_LINEAR,\n                    magFilter: pc.FILTER_LINEAR,\n                });\n                return new pc.RenderTarget({\n                    colorBuffer: texture,\n                    depth: true,\n                });\n            }\n\n            let renderTarget = createRenderTarget();\n\n            // create a layer for rendering to texture, and add it to the beginning of layers to render into it first\n            const outlineLayer = new pc.Layer({ name: "OutlineLayer" });\n            app.scene.layers.insert(outlineLayer, 0);\n\n            // get existing layers\n            const worldLayer = app.scene.layers.getLayerByName("World");\n            const uiLayer = app.scene.layers.getLayerByName("UI");\n\n            // create ground plane and 3 primitives, visible in both layers\n            createPrimitive(\n                "plane",\n                new pc.Vec3(0, 0, 0),\n                new pc.Vec3(20, 20, 20),\n                new pc.Color(0.3, 0.5, 0.3),\n                [worldLayer.id]\n            );\n            createPrimitive(\n                "sphere",\n                new pc.Vec3(-2, 1, 0),\n                new pc.Vec3(2, 2, 2),\n                new pc.Color(1, 0, 0),\n                [worldLayer.id]\n            );\n            createPrimitive(\n                "box",\n                new pc.Vec3(2, 1, 0),\n                new pc.Vec3(2, 2, 2),\n                new pc.Color(1, 1, 0),\n                [worldLayer.id, outlineLayer.id]\n            );\n            createPrimitive(\n                "cone",\n                new pc.Vec3(0, 1, -2),\n                new pc.Vec3(2, 2, 2),\n                new pc.Color(0, 1, 1),\n                [worldLayer.id]\n            );\n\n            // Create main camera, which renders entities in world layer\n            const camera = new pc.Entity();\n            camera.addComponent("camera", {\n                clearColor: new pc.Color(0.2, 0.2, 0.4),\n                layers: [worldLayer.id, uiLayer.id],\n            });\n            camera.translate(0, 20, 25);\n            camera.lookAt(pc.Vec3.ZERO);\n\n            // Create outline camera, which renders entities in outline layer into the render target\n            const outlineCamera = new pc.Entity();\n            outlineCamera.addComponent("camera", {\n                clearColor: new pc.Color(0.0, 0.0, 0.0, 0.0),\n                layers: [outlineLayer.id],\n                renderTarget: renderTarget,\n            });\n            app.root.addChild(outlineCamera);\n\n            // @ts-ignore engine-tsd\n            const outline = new OutlineEffect(app.graphicsDevice, 3);\n            outline.color = new pc.Color(0, 0.5, 1, 1);\n            outline.texture = renderTarget.colorBuffer;\n            camera.camera.postEffects.addEffect(outline);\n\n            app.root.addChild(camera);\n\n            // Create an Entity with a omni light component and add it to both layers\n            const light = new pc.Entity();\n            light.addComponent("light", {\n                type: "omni",\n                color: new pc.Color(1, 1, 1),\n                range: 20,\n                castShadows: true,\n                shadowBias: 0.05,\n                normalOffsetBias: 0.03,\n                layers: [worldLayer.id],\n            });\n            light.translate(0, 2, 5);\n            app.root.addChild(light);\n\n            // handle canvas resize\n            window.addEventListener("resize", function () {\n                app.resizeCanvas(canvas.width, canvas.height);\n\n                // re-create the render target for the outline camera\n                renderTarget.colorBuffer.destroy();\n                renderTarget.destroy();\n                renderTarget = createRenderTarget();\n                outlineCamera.camera.renderTarget = renderTarget;\n                outline.texture = renderTarget.colorBuffer;\n            });\n\n            // update things each frame\n            let time = 0;\n            app.on("update", function (dt) {\n                time += dt;\n\n                // rotate the camera around the objects\n                camera.setLocalPosition(\n                    12 * Math.sin(time),\n                    5,\n                    12 * Math.cos(time)\n                );\n                camera.lookAt(pc.Vec3.ZERO);\n\n                // outline camera needs to match the main camera\n                outlineCamera.setLocalPosition(camera.getLocalPosition());\n                outlineCamera.setLocalRotation(camera.getLocalRotation());\n            });\n        });\n    });\n}\n',nameSlug:"model-outline",categorySlug:"graphics"},"model-textured-box":{typeScriptFunction:'function example(canvas: HTMLCanvasElement, deviceType: string): void {\n\n    const assets = {\n        \'clouds\': new pc.Asset(\'clouds\', \'texture\', { url: \'/static/assets/textures/clouds.jpg\' })\n    };\n\n    const gfxOptions = {\n        deviceTypes: [deviceType],\n        glslangUrl: \'/static/lib/glslang/glslang.js\',\n        twgslUrl: \'/static/lib/twgsl/twgsl.js\'\n    };\n\n    pc.createGraphicsDevice(canvas, gfxOptions).then((device: pc.GraphicsDevice) => {\n\n        const createOptions = new pc.AppOptions();\n        createOptions.graphicsDevice = device;\n\n        createOptions.componentSystems = [\n            // @ts-ignore\n            pc.RenderComponentSystem,\n            // @ts-ignore\n            pc.CameraComponentSystem,\n            // @ts-ignore\n            pc.LightComponentSystem\n        ];\n        createOptions.resourceHandlers = [\n            // @ts-ignore\n            pc.TextureHandler\n        ];\n\n        const app = new pc.AppBase(canvas);\n        app.init(createOptions);\n\n        // Set the canvas to fill the window and automatically change resolution to be the same as the canvas size\n        app.setCanvasFillMode(pc.FILLMODE_FILL_WINDOW);\n        app.setCanvasResolution(pc.RESOLUTION_AUTO);\n\n        const assetListLoader = new pc.AssetListLoader(Object.values(assets), app.assets);\n        assetListLoader.load(() => {\n\n            app.start();\n\n            app.scene.ambientLight = new pc.Color(0.2, 0.2, 0.2);\n\n            // material with the diffuse texture\n            const material = new pc.StandardMaterial();\n            material.diffuseMap = assets.clouds.resource;\n            material.update();\n\n            // Create a Entity with a Box model component\n            const box = new pc.Entity();\n            box.addComponent("render", {\n                type: "box",\n                material: material\n            });\n\n            // Create an Entity with a omni light component and a sphere model component.\n            const light = new pc.Entity();\n            light.addComponent("light", {\n                type: "omni",\n                color: new pc.Color(1, 0, 0),\n                radius: 10\n            });\n            light.addComponent("render", {\n                type: "sphere"\n            });\n            // Scale the sphere down to 0.1m\n            light.setLocalScale(0.1, 0.1, 0.1);\n\n            // Create an Entity with a camera component\n            const camera = new pc.Entity();\n            camera.addComponent("camera", {\n                clearColor: new pc.Color(0.4, 0.45, 0.5)\n            });\n\n            // Add the new Entities to the hierarchy\n            app.root.addChild(box);\n            app.root.addChild(light);\n            app.root.addChild(camera);\n\n            // Move the camera 10m along the z-axis\n            camera.translate(0, 0, 10);\n\n            // Set an update function on the app\'s update event\n            let angle = 0;\n            app.on("update", function (dt) {\n                angle += dt;\n                if (angle > 360) {\n                    angle = 0;\n                }\n\n                // Move the light in a circle\n                light.setLocalPosition(3 * Math.sin(angle), 0, 3 * Math.cos(angle));\n\n                // Rotate the box\n                box.setEulerAngles(angle * 2, angle * 4, angle * 8);\n            });\n        });\n    });\n}',javaScriptFunction:'function example(canvas, deviceType) {\n    const assets = {\n        clouds: new pc.Asset("clouds", "texture", {\n            url: "/static/assets/textures/clouds.jpg",\n        }),\n    };\n\n    const gfxOptions = {\n        deviceTypes: [deviceType],\n        glslangUrl: "/static/lib/glslang/glslang.js",\n        twgslUrl: "/static/lib/twgsl/twgsl.js",\n    };\n\n    pc.createGraphicsDevice(canvas, gfxOptions).then((device) => {\n        const createOptions = new pc.AppOptions();\n        createOptions.graphicsDevice = device;\n\n        createOptions.componentSystems = [\n            // @ts-ignore\n            pc.RenderComponentSystem,\n            // @ts-ignore\n            pc.CameraComponentSystem,\n            // @ts-ignore\n            pc.LightComponentSystem,\n        ];\n\n        createOptions.resourceHandlers = [\n            // @ts-ignore\n            pc.TextureHandler,\n        ];\n\n        const app = new pc.AppBase(canvas);\n        app.init(createOptions);\n\n        // Set the canvas to fill the window and automatically change resolution to be the same as the canvas size\n        app.setCanvasFillMode(pc.FILLMODE_FILL_WINDOW);\n        app.setCanvasResolution(pc.RESOLUTION_AUTO);\n\n        const assetListLoader = new pc.AssetListLoader(\n            Object.values(assets),\n            app.assets\n        );\n        assetListLoader.load(() => {\n            app.start();\n\n            app.scene.ambientLight = new pc.Color(0.2, 0.2, 0.2);\n\n            // material with the diffuse texture\n            const material = new pc.StandardMaterial();\n            material.diffuseMap = assets.clouds.resource;\n            material.update();\n\n            // Create a Entity with a Box model component\n            const box = new pc.Entity();\n            box.addComponent("render", {\n                type: "box",\n                material: material,\n            });\n\n            // Create an Entity with a omni light component and a sphere model component.\n            const light = new pc.Entity();\n            light.addComponent("light", {\n                type: "omni",\n                color: new pc.Color(1, 0, 0),\n                radius: 10,\n            });\n            light.addComponent("render", {\n                type: "sphere",\n            });\n            // Scale the sphere down to 0.1m\n            light.setLocalScale(0.1, 0.1, 0.1);\n\n            // Create an Entity with a camera component\n            const camera = new pc.Entity();\n            camera.addComponent("camera", {\n                clearColor: new pc.Color(0.4, 0.45, 0.5),\n            });\n\n            // Add the new Entities to the hierarchy\n            app.root.addChild(box);\n            app.root.addChild(light);\n            app.root.addChild(camera);\n\n            // Move the camera 10m along the z-axis\n            camera.translate(0, 0, 10);\n\n            // Set an update function on the app\'s update event\n            let angle = 0;\n            app.on("update", function (dt) {\n                angle += dt;\n                if (angle > 360) {\n                    angle = 0;\n                }\n\n                // Move the light in a circle\n                light.setLocalPosition(\n                    3 * Math.sin(angle),\n                    0,\n                    3 * Math.cos(angle)\n                );\n\n                // Rotate the box\n                box.setEulerAngles(angle * 2, angle * 4, angle * 8);\n            });\n        });\n    });\n}\n',nameSlug:"model-textured-box",categorySlug:"graphics"},mrt:{typeScriptFunction:"function example(canvas: HTMLCanvasElement, deviceType: string, files: { 'output.frag': string, }): void {\n\n    // set up and load draco module, as the glb we load is draco compressed\n    pc.WasmModule.setConfig('DracoDecoderModule', {\n        glueUrl: '/static/lib/draco/draco.wasm.js',\n        wasmUrl: '/static/lib/draco/draco.wasm.wasm',\n        fallbackUrl: '/static/lib/draco/draco.js'\n    });\n\n    const assets = {\n        'board': new pc.Asset('statue', 'container', { url: '/static/assets/models/chess-board.glb' }),\n        helipad: new pc.Asset('helipad-env-atlas', 'texture', { url: '/static/assets/cubemaps/helipad-env-atlas.png' }, { type: pc.TEXTURETYPE_RGBP, mipmaps: false })\n    };\n\n    const gfxOptions = {\n        deviceTypes: [deviceType],\n        glslangUrl: '/static/lib/glslang/glslang.js',\n        twgslUrl: '/static/lib/twgsl/twgsl.js'\n    };\n\n    pc.createGraphicsDevice(canvas, gfxOptions).then((device: pc.GraphicsDevice) => {\n\n        const createOptions = new pc.AppOptions();\n        createOptions.graphicsDevice = device;\n        createOptions.keyboard = new pc.Keyboard(document.body);\n\n        createOptions.componentSystems = [\n            // @ts-ignore\n            pc.RenderComponentSystem,\n            // @ts-ignore\n            pc.CameraComponentSystem,\n            // @ts-ignore\n            pc.LightComponentSystem,\n            // @ts-ignore\n            pc.ScriptComponentSystem,\n            // @ts-ignore\n            pc.ScreenComponentSystem,\n            // @ts-ignore\n            pc.ElementComponentSystem\n        ];\n        createOptions.resourceHandlers = [\n            // @ts-ignore\n            pc.ScriptHandler,\n            // @ts-ignore\n            pc.TextureHandler,\n            // @ts-ignore\n            pc.ContainerHandler,\n            // @ts-ignore\n            pc.FontHandler\n        ];\n\n        const app = new pc.AppBase(canvas);\n        app.init(createOptions);\n\n        // Set the canvas to fill the window and automatically change resolution to be the same as the canvas size\n        app.setCanvasFillMode(pc.FILLMODE_FILL_WINDOW);\n        app.setCanvasResolution(pc.RESOLUTION_AUTO);\n\n        const assetListLoader = new pc.AssetListLoader(Object.values(assets), app.assets);\n        assetListLoader.load(() => {\n\n            app.start();\n\n            // setup skydome\n            app.scene.envAtlas = assets.helipad.resource;\n            app.scene.skyboxMip = 1;\n            app.scene.toneMapping = pc.TONEMAP_ACES;\n\n\n            // get existing layers\n            const worldLayer = app.scene.layers.getLayerByName(\"World\");\n            const skyboxLayer = app.scene.layers.getLayerByName(\"Skybox\");\n            const uiLayer = app.scene.layers.getLayerByName(\"UI\");\n\n            // create a layer for object that render into texture, add it right after the world layer\n            const rtLayer = new pc.Layer({ name: \"RTLayer\" });\n            app.scene.layers.insert(rtLayer, 1);\n\n            // helper function to create a texture to render to\n            const createTexture = (name: string, width: number, height: number) => {\n                return new pc.Texture(app.graphicsDevice, {\n                    name: name,\n                    width: width,\n                    height: height,\n                    format: pc.PIXELFORMAT_R8_G8_B8_A8,\n                    mipmaps: true,\n                    minFilter: pc.FILTER_LINEAR_MIPMAP_LINEAR,\n                    magFilter: pc.FILTER_LINEAR,\n                    addressU: pc.ADDRESS_CLAMP_TO_EDGE,\n                    addressV: pc.ADDRESS_CLAMP_TO_EDGE\n                });\n            };\n\n            // create textures and render target for rendering into, including depth buffer\n            const texture0 = createTexture('RT-texture-0', 512, 512);\n            const texture1 = createTexture('RT-texture-1', 512, 512);\n            const texture2 = createTexture('RT-texture-2', 512, 512);\n\n            // render to multiple targets if supported\n            const colorBuffers = app.graphicsDevice.supportsMrt ? [texture0, texture1, texture2] : [texture0];\n            const renderTarget = new pc.RenderTarget({\n                name: `MRT`,\n                colorBuffers: colorBuffers,\n                depth: true,\n                flipY: !app.graphicsDevice.isWebGPU,\n                samples: 2\n            });\n\n            // Create texture camera, which renders entities in RTLayer into the texture\n            const textureCamera = new pc.Entity(\"TextureCamera\");\n            textureCamera.addComponent(\"camera\", {\n                layers: [rtLayer.id],\n                farClip: 500,\n\n                // set the priority of textureCamera to lower number than the priority of the main camera (which is at default 0)\n                // to make it rendered first each frame\n                priority: -1,\n\n                // this camera renders into texture target\n                renderTarget: renderTarget\n            });\n            app.root.addChild(textureCamera);\n\n            // if MRT is supported, set the shader pass to use MRT output\n            if (app.graphicsDevice.supportsMrt) {\n                textureCamera.camera.setShaderPass('MyMRT');\n            }\n\n            // get the instance of the chess board. Render it into RTLayer only.\n            const boardEntity = assets.board.resource.instantiateRenderEntity({\n                layers: [rtLayer.id]\n            });\n            app.root.addChild(boardEntity);\n\n            // override output shader chunk for the material of the chess board, to inject our\n            // custom shader chunk which outputs to multiple render targets during our custom\n            // shader pass\n            const outputChunk = files['output.frag'];\n            const renders: Array<pc.RenderComponent> = boardEntity.findComponents(\"render\");\n            renders.forEach((render) => {\n\n                const meshInstances = render.meshInstances;\n                for (let i = 0; i < meshInstances.length; i++) {\n                    // @ts-ignore engine-tsd\n                    meshInstances[i].material.chunks.outputPS = outputChunk;\n                }\n            });\n\n            // Create an Entity with a camera component\n            const camera: any = new pc.Entity();\n            camera.addComponent(\"camera\", {\n                layers: [worldLayer.id, skyboxLayer.id, uiLayer.id]\n            });\n            app.root.addChild(camera);\n\n            // update things every frame\n            let angle = 1;\n            app.on(\"update\", function (dt: any) {\n                angle += dt;\n\n                // orbit the camera around\n                textureCamera.setLocalPosition(110 * Math.sin(angle * 0.2), 45, 110 * Math.cos(angle * 0.2));\n                textureCamera.lookAt(pc.Vec3.ZERO);\n\n                // debug draw the texture on the screen in the world layer of the main camera\n                // @ts-ignore engine-tsd\n                app.drawTexture(0, 0.4, 1, 1, texture0, null, worldLayer);\n\n                // @ts-ignore engine-tsd\n                app.drawTexture(-0.5, -0.5, 0.7, 0.7, texture1, null, worldLayer);\n\n                // @ts-ignore engine-tsd\n                app.drawTexture(0.5, -0.5, 0.7, 0.7, texture2, null, worldLayer);\n            });\n        });\n    });\n}",javaScriptFunction:'function example(canvas, deviceType, files) {\n    // set up and load draco module, as the glb we load is draco compressed\n    pc.WasmModule.setConfig("DracoDecoderModule", {\n        glueUrl: "/static/lib/draco/draco.wasm.js",\n        wasmUrl: "/static/lib/draco/draco.wasm.wasm",\n        fallbackUrl: "/static/lib/draco/draco.js",\n    });\n\n    const assets = {\n        board: new pc.Asset("statue", "container", {\n            url: "/static/assets/models/chess-board.glb",\n        }),\n        helipad: new pc.Asset(\n            "helipad-env-atlas",\n            "texture",\n            { url: "/static/assets/cubemaps/helipad-env-atlas.png" },\n            { type: pc.TEXTURETYPE_RGBP, mipmaps: false }\n        ),\n    };\n\n    const gfxOptions = {\n        deviceTypes: [deviceType],\n        glslangUrl: "/static/lib/glslang/glslang.js",\n        twgslUrl: "/static/lib/twgsl/twgsl.js",\n    };\n\n    pc.createGraphicsDevice(canvas, gfxOptions).then((device) => {\n        const createOptions = new pc.AppOptions();\n        createOptions.graphicsDevice = device;\n        createOptions.keyboard = new pc.Keyboard(document.body);\n\n        createOptions.componentSystems = [\n            // @ts-ignore\n            pc.RenderComponentSystem,\n            // @ts-ignore\n            pc.CameraComponentSystem,\n            // @ts-ignore\n            pc.LightComponentSystem,\n            // @ts-ignore\n            pc.ScriptComponentSystem,\n            // @ts-ignore\n            pc.ScreenComponentSystem,\n            // @ts-ignore\n            pc.ElementComponentSystem,\n        ];\n\n        createOptions.resourceHandlers = [\n            // @ts-ignore\n            pc.ScriptHandler,\n            // @ts-ignore\n            pc.TextureHandler,\n            // @ts-ignore\n            pc.ContainerHandler,\n            // @ts-ignore\n            pc.FontHandler,\n        ];\n\n        const app = new pc.AppBase(canvas);\n        app.init(createOptions);\n\n        // Set the canvas to fill the window and automatically change resolution to be the same as the canvas size\n        app.setCanvasFillMode(pc.FILLMODE_FILL_WINDOW);\n        app.setCanvasResolution(pc.RESOLUTION_AUTO);\n\n        const assetListLoader = new pc.AssetListLoader(\n            Object.values(assets),\n            app.assets\n        );\n        assetListLoader.load(() => {\n            app.start();\n\n            // setup skydome\n            app.scene.envAtlas = assets.helipad.resource;\n            app.scene.skyboxMip = 1;\n            app.scene.toneMapping = pc.TONEMAP_ACES;\n\n            // get existing layers\n            const worldLayer = app.scene.layers.getLayerByName("World");\n            const skyboxLayer = app.scene.layers.getLayerByName("Skybox");\n            const uiLayer = app.scene.layers.getLayerByName("UI");\n\n            // create a layer for object that render into texture, add it right after the world layer\n            const rtLayer = new pc.Layer({ name: "RTLayer" });\n            app.scene.layers.insert(rtLayer, 1);\n\n            // helper function to create a texture to render to\n            const createTexture = (name, width, height) => {\n                return new pc.Texture(app.graphicsDevice, {\n                    name: name,\n                    width: width,\n                    height: height,\n                    format: pc.PIXELFORMAT_R8_G8_B8_A8,\n                    mipmaps: true,\n                    minFilter: pc.FILTER_LINEAR_MIPMAP_LINEAR,\n                    magFilter: pc.FILTER_LINEAR,\n                    addressU: pc.ADDRESS_CLAMP_TO_EDGE,\n                    addressV: pc.ADDRESS_CLAMP_TO_EDGE,\n                });\n            };\n\n            // create textures and render target for rendering into, including depth buffer\n            const texture0 = createTexture("RT-texture-0", 512, 512);\n            const texture1 = createTexture("RT-texture-1", 512, 512);\n            const texture2 = createTexture("RT-texture-2", 512, 512);\n\n            // render to multiple targets if supported\n            const colorBuffers = app.graphicsDevice.supportsMrt\n                ? [texture0, texture1, texture2]\n                : [texture0];\n            const renderTarget = new pc.RenderTarget({\n                name: `MRT`,\n                colorBuffers: colorBuffers,\n                depth: true,\n                flipY: !app.graphicsDevice.isWebGPU,\n                samples: 2,\n            });\n\n            // Create texture camera, which renders entities in RTLayer into the texture\n            const textureCamera = new pc.Entity("TextureCamera");\n            textureCamera.addComponent("camera", {\n                layers: [rtLayer.id],\n                farClip: 500,\n\n                // set the priority of textureCamera to lower number than the priority of the main camera (which is at default 0)\n                // to make it rendered first each frame\n                priority: -1,\n\n                // this camera renders into texture target\n                renderTarget: renderTarget,\n            });\n            app.root.addChild(textureCamera);\n\n            // if MRT is supported, set the shader pass to use MRT output\n            if (app.graphicsDevice.supportsMrt) {\n                textureCamera.camera.setShaderPass("MyMRT");\n            }\n\n            // get the instance of the chess board. Render it into RTLayer only.\n            const boardEntity = assets.board.resource.instantiateRenderEntity({\n                layers: [rtLayer.id],\n            });\n            app.root.addChild(boardEntity);\n\n            // override output shader chunk for the material of the chess board, to inject our\n            // custom shader chunk which outputs to multiple render targets during our custom\n            // shader pass\n            const outputChunk = files["output.frag"];\n            const renders = boardEntity.findComponents("render");\n            renders.forEach((render) => {\n                const meshInstances = render.meshInstances;\n                for (let i = 0; i < meshInstances.length; i++) {\n                    // @ts-ignore engine-tsd\n                    meshInstances[i].material.chunks.outputPS = outputChunk;\n                }\n            });\n\n            // Create an Entity with a camera component\n            const camera = new pc.Entity();\n            camera.addComponent("camera", {\n                layers: [worldLayer.id, skyboxLayer.id, uiLayer.id],\n            });\n            app.root.addChild(camera);\n\n            // update things every frame\n            let angle = 1;\n            app.on("update", function (dt) {\n                angle += dt;\n\n                // orbit the camera around\n                textureCamera.setLocalPosition(\n                    110 * Math.sin(angle * 0.2),\n                    45,\n                    110 * Math.cos(angle * 0.2)\n                );\n                textureCamera.lookAt(pc.Vec3.ZERO);\n\n                // debug draw the texture on the screen in the world layer of the main camera\n                // @ts-ignore engine-tsd\n                app.drawTexture(0, 0.4, 1, 1, texture0, null, worldLayer);\n\n                // @ts-ignore engine-tsd\n                app.drawTexture(\n                    -0.5,\n                    -0.5,\n                    0.7,\n                    0.7,\n                    texture1,\n                    null,\n                    worldLayer\n                );\n\n                // @ts-ignore engine-tsd\n                app.drawTexture(\n                    0.5,\n                    -0.5,\n                    0.7,\n                    0.7,\n                    texture2,\n                    null,\n                    worldLayer\n                );\n            });\n        });\n    });\n}\n',nameSlug:"mrt",categorySlug:"graphics",files:{"output.frag":"\n            #ifdef MYMRT_PASS\n                // output world normal to target 1\n                pcFragColor1 = vec4(litArgs_worldNormal * 0.5 + 0.5, 1.0);\n\n                // output gloss to target 2\n                pcFragColor2 = vec4(vec3(litArgs_gloss) , 1.0);\n            #endif\n        "}},"multi-view":{typeScriptFunction:"function example(canvas: HTMLCanvasElement, deviceType: string, data: any): void {\n\n    // set up and load draco module, as the glb we load is draco compressed\n    pc.WasmModule.setConfig('DracoDecoderModule', {\n        glueUrl: '/static/lib/draco/draco.wasm.js',\n        wasmUrl: '/static/lib/draco/draco.wasm.wasm',\n        fallbackUrl: '/static/lib/draco/draco.js'\n    });\n\n    pc.WasmModule.getInstance('DracoDecoderModule', demo);\n\n    function demo() {\n        const assets = {\n            'script': new pc.Asset('script', 'script', { url: '/static/scripts/camera/orbit-camera.js' }),\n            'helipad': new pc.Asset('helipad-env-atlas', 'texture', { url: '/static/assets/cubemaps/helipad-env-atlas.png' }, { type: pc.TEXTURETYPE_RGBP, mipmaps: false }),\n            'board': new pc.Asset('statue', 'container', { url: '/static/assets/models/chess-board.glb' })\n        };\n\n        const gfxOptions = {\n            deviceTypes: [deviceType],\n            glslangUrl: '/static/lib/glslang/glslang.js',\n            twgslUrl: '/static/lib/twgsl/twgsl.js'\n        };\n\n        pc.createGraphicsDevice(canvas, gfxOptions).then((device: pc.GraphicsDevice) => {\n\n            const createOptions = new pc.AppOptions();\n            createOptions.graphicsDevice = device;\n            createOptions.mouse = new pc.Mouse(document.body);\n            createOptions.touch = new pc.TouchDevice(document.body);\n\n            createOptions.componentSystems = [\n                // @ts-ignore\n                pc.RenderComponentSystem,\n                // @ts-ignore\n                pc.CameraComponentSystem,\n                // @ts-ignore\n                pc.LightComponentSystem,\n                // @ts-ignore\n                pc.ScriptComponentSystem\n            ];\n            createOptions.resourceHandlers = [\n                // @ts-ignore\n                pc.TextureHandler,\n                // @ts-ignore\n                pc.ContainerHandler,\n                // @ts-ignore\n                pc.ScriptHandler\n            ];\n\n            const app = new pc.AppBase(canvas);\n            app.init(createOptions);\n\n            // Set the canvas to fill the window and automatically change resolution to be the same as the canvas size\n            app.setCanvasFillMode(pc.FILLMODE_FILL_WINDOW);\n            app.setCanvasResolution(pc.RESOLUTION_AUTO);\n\n            const assetListLoader = new pc.AssetListLoader(Object.values(assets), app.assets);\n            assetListLoader.load(() => {\n\n                app.start();\n\n                data.set('settings', {\n                    shaderPassName: pc.SHADERPASS_FORWARD\n                });\n\n                // get few existing layers and create a new layer for the spot light\n                const worldLayer = app.scene.layers.getLayerByName(\"World\");\n                const skyboxLayer = app.scene.layers.getLayerByName(\"Skybox\");\n                const spotLightLayer = new pc.Layer({ name: \"SpotLightLayer\" });\n                app.scene.layers.insert(spotLightLayer, 0);\n\n                // get the instance of the chess board and set up with render component\n                const boardEntity = assets.board.resource.instantiateRenderEntity({\n                    castShadows: true,\n                    receiveShadows: true,\n\n                    // add it to both layers with lights, as we want it to lit by directional light and spot light,\n                    // depending on the camera\n                    layers: [worldLayer.id, spotLightLayer.id]\n                });\n                app.root.addChild(boardEntity);\n\n                // Create left camera, using default layers (including the World)\n                const cameraLeft = new pc.Entity('LeftCamera');\n                cameraLeft.addComponent(\"camera\", {\n                    farClip: 500,\n                    rect: new pc.Vec4(0, 0, 0.5, 0.5)\n                });\n                app.root.addChild(cameraLeft);\n\n                // Create right orthographic camera, using spot light layer and skybox layer,\n                // so that it receives the light from the spot light but not from the directional light\n                const cameraRight = new pc.Entity('RightCamera');\n                cameraRight.addComponent(\"camera\", {\n                    layers: [spotLightLayer.id, skyboxLayer.id],\n                    farClip: 500,\n                    rect: new pc.Vec4(0.5, 0, 0.5, 0.5),\n                    projection: pc.PROJECTION_ORTHOGRAPHIC,\n                    orthoHeight: 150\n                });\n                cameraRight.translate(0, 150, 0);\n                cameraRight.lookAt(pc.Vec3.ZERO, pc.Vec3.RIGHT);\n                app.root.addChild(cameraRight);\n\n                // Create top camera, using default layers (including the World)\n                const cameraTop = new pc.Entity('TopCamera');\n                cameraTop.addComponent(\"camera\", {\n                    farClip: 500,\n                    rect: new pc.Vec4(0, 0.5, 1, 0.5)\n                });\n                cameraTop.translate(-100, 75, 100);\n                cameraTop.lookAt(0, 7, 0);\n                app.root.addChild(cameraTop);\n\n                // add orbit camera script with a mouse and a touch support\n                cameraTop.addComponent(\"script\");\n                cameraTop.script.create(\"orbitCamera\", {\n                    attributes: {\n                        inertiaFactor: 0.2,\n                        focusEntity: app.root,\n                        distanceMax: 300,\n                        frameOnStart: false\n                    }\n                });\n                cameraTop.script.create(\"orbitCameraInputMouse\");\n                cameraTop.script.create(\"orbitCameraInputTouch\");\n\n                // Create a directional light which casts shadows\n                const dirLight = new pc.Entity();\n                dirLight.addComponent(\"light\", {\n                    type: \"directional\",\n                    layers: [worldLayer.id],\n                    color: pc.Color.WHITE,\n                    intensity: 5,\n                    range: 500,\n                    shadowDistance: 500,\n                    castShadows: true,\n                    shadowBias: 0.2,\n                    normalOffsetBias: 0.05\n                });\n                app.root.addChild(dirLight);\n                dirLight.setLocalEulerAngles(45, 0, 30);\n\n                // Create a single directional light which casts shadows\n                const spotLight = new pc.Entity();\n                spotLight.addComponent(\"light\", {\n                    type: \"spot\",\n                    layers: [spotLightLayer.id],\n                    color: pc.Color.YELLOW,\n                    intensity: 7,\n                    innerConeAngle: 20,\n                    outerConeAngle: 80,\n                    range: 200,\n                    shadowDistance: 200,\n                    castShadows: true,\n                    shadowBias: 0.2,\n                    normalOffsetBias: 0.05\n                });\n                app.root.addChild(spotLight);\n\n                // set skybox - this DDS file was 'prefiltered' in the PlayCanvas Editor and then downloaded.\n                app.scene.envAtlas = assets.helipad.resource;\n                app.scene.toneMapping = pc.TONEMAP_ACES;\n                app.scene.skyboxMip = 1;\n\n                // handle HUD changes - update the debug mode for the top and right cameras\n                data.on('*:set', (path: string, value: any) => {\n                    cameraTop.camera.setShaderPass(value);\n                    cameraRight.camera.setShaderPass(value);\n                });\n\n                // update function called once per frame\n                let time = 0;\n                app.on(\"update\", function (dt) {\n                    time += dt;\n\n                    // orbit camera left around\n                    cameraLeft.setLocalPosition(100 * Math.sin(time * 0.2), 35, 100 * Math.cos(time * 0.2));\n                    cameraLeft.lookAt(pc.Vec3.ZERO);\n\n                    // move the spot light around\n                    spotLight.setLocalPosition(40 * Math.sin(time * 0.5), 60, 40 * Math.cos(time * 0.5));\n\n                    // zoom in and out the orthographic camera\n                    cameraRight.camera.orthoHeight = 90 + Math.sin(time * 0.3) * 60;\n                });\n            });\n        });\n    }\n}",javaScriptFunction:'function example(canvas, deviceType, data) {\n    // set up and load draco module, as the glb we load is draco compressed\n    pc.WasmModule.setConfig("DracoDecoderModule", {\n        glueUrl: "/static/lib/draco/draco.wasm.js",\n        wasmUrl: "/static/lib/draco/draco.wasm.wasm",\n        fallbackUrl: "/static/lib/draco/draco.js",\n    });\n\n    pc.WasmModule.getInstance("DracoDecoderModule", demo);\n\n    function demo() {\n        const assets = {\n            script: new pc.Asset("script", "script", {\n                url: "/static/scripts/camera/orbit-camera.js",\n            }),\n            helipad: new pc.Asset(\n                "helipad-env-atlas",\n                "texture",\n                { url: "/static/assets/cubemaps/helipad-env-atlas.png" },\n                { type: pc.TEXTURETYPE_RGBP, mipmaps: false }\n            ),\n            board: new pc.Asset("statue", "container", {\n                url: "/static/assets/models/chess-board.glb",\n            }),\n        };\n\n        const gfxOptions = {\n            deviceTypes: [deviceType],\n            glslangUrl: "/static/lib/glslang/glslang.js",\n            twgslUrl: "/static/lib/twgsl/twgsl.js",\n        };\n\n        pc.createGraphicsDevice(canvas, gfxOptions).then((device) => {\n            const createOptions = new pc.AppOptions();\n            createOptions.graphicsDevice = device;\n            createOptions.mouse = new pc.Mouse(document.body);\n            createOptions.touch = new pc.TouchDevice(document.body);\n\n            createOptions.componentSystems = [\n                // @ts-ignore\n                pc.RenderComponentSystem,\n                // @ts-ignore\n                pc.CameraComponentSystem,\n                // @ts-ignore\n                pc.LightComponentSystem,\n                // @ts-ignore\n                pc.ScriptComponentSystem,\n            ];\n\n            createOptions.resourceHandlers = [\n                // @ts-ignore\n                pc.TextureHandler,\n                // @ts-ignore\n                pc.ContainerHandler,\n                // @ts-ignore\n                pc.ScriptHandler,\n            ];\n\n            const app = new pc.AppBase(canvas);\n            app.init(createOptions);\n\n            // Set the canvas to fill the window and automatically change resolution to be the same as the canvas size\n            app.setCanvasFillMode(pc.FILLMODE_FILL_WINDOW);\n            app.setCanvasResolution(pc.RESOLUTION_AUTO);\n\n            const assetListLoader = new pc.AssetListLoader(\n                Object.values(assets),\n                app.assets\n            );\n            assetListLoader.load(() => {\n                app.start();\n\n                data.set("settings", {\n                    shaderPassName: pc.SHADERPASS_FORWARD,\n                });\n\n                // get few existing layers and create a new layer for the spot light\n                const worldLayer = app.scene.layers.getLayerByName("World");\n                const skyboxLayer = app.scene.layers.getLayerByName("Skybox");\n                const spotLightLayer = new pc.Layer({ name: "SpotLightLayer" });\n                app.scene.layers.insert(spotLightLayer, 0);\n\n                // get the instance of the chess board and set up with render component\n                const boardEntity =\n                    assets.board.resource.instantiateRenderEntity({\n                        castShadows: true,\n                        receiveShadows: true,\n\n                        // add it to both layers with lights, as we want it to lit by directional light and spot light,\n                        // depending on the camera\n                        layers: [worldLayer.id, spotLightLayer.id],\n                    });\n                app.root.addChild(boardEntity);\n\n                // Create left camera, using default layers (including the World)\n                const cameraLeft = new pc.Entity("LeftCamera");\n                cameraLeft.addComponent("camera", {\n                    farClip: 500,\n                    rect: new pc.Vec4(0, 0, 0.5, 0.5),\n                });\n                app.root.addChild(cameraLeft);\n\n                // Create right orthographic camera, using spot light layer and skybox layer,\n                // so that it receives the light from the spot light but not from the directional light\n                const cameraRight = new pc.Entity("RightCamera");\n                cameraRight.addComponent("camera", {\n                    layers: [spotLightLayer.id, skyboxLayer.id],\n                    farClip: 500,\n                    rect: new pc.Vec4(0.5, 0, 0.5, 0.5),\n                    projection: pc.PROJECTION_ORTHOGRAPHIC,\n                    orthoHeight: 150,\n                });\n                cameraRight.translate(0, 150, 0);\n                cameraRight.lookAt(pc.Vec3.ZERO, pc.Vec3.RIGHT);\n                app.root.addChild(cameraRight);\n\n                // Create top camera, using default layers (including the World)\n                const cameraTop = new pc.Entity("TopCamera");\n                cameraTop.addComponent("camera", {\n                    farClip: 500,\n                    rect: new pc.Vec4(0, 0.5, 1, 0.5),\n                });\n                cameraTop.translate(-100, 75, 100);\n                cameraTop.lookAt(0, 7, 0);\n                app.root.addChild(cameraTop);\n\n                // add orbit camera script with a mouse and a touch support\n                cameraTop.addComponent("script");\n                cameraTop.script.create("orbitCamera", {\n                    attributes: {\n                        inertiaFactor: 0.2,\n                        focusEntity: app.root,\n                        distanceMax: 300,\n                        frameOnStart: false,\n                    },\n                });\n                cameraTop.script.create("orbitCameraInputMouse");\n                cameraTop.script.create("orbitCameraInputTouch");\n\n                // Create a directional light which casts shadows\n                const dirLight = new pc.Entity();\n                dirLight.addComponent("light", {\n                    type: "directional",\n                    layers: [worldLayer.id],\n                    color: pc.Color.WHITE,\n                    intensity: 5,\n                    range: 500,\n                    shadowDistance: 500,\n                    castShadows: true,\n                    shadowBias: 0.2,\n                    normalOffsetBias: 0.05,\n                });\n                app.root.addChild(dirLight);\n                dirLight.setLocalEulerAngles(45, 0, 30);\n\n                // Create a single directional light which casts shadows\n                const spotLight = new pc.Entity();\n                spotLight.addComponent("light", {\n                    type: "spot",\n                    layers: [spotLightLayer.id],\n                    color: pc.Color.YELLOW,\n                    intensity: 7,\n                    innerConeAngle: 20,\n                    outerConeAngle: 80,\n                    range: 200,\n                    shadowDistance: 200,\n                    castShadows: true,\n                    shadowBias: 0.2,\n                    normalOffsetBias: 0.05,\n                });\n                app.root.addChild(spotLight);\n\n                // set skybox - this DDS file was \'prefiltered\' in the PlayCanvas Editor and then downloaded.\n                app.scene.envAtlas = assets.helipad.resource;\n                app.scene.toneMapping = pc.TONEMAP_ACES;\n                app.scene.skyboxMip = 1;\n\n                // handle HUD changes - update the debug mode for the top and right cameras\n                data.on("*:set", (path, value) => {\n                    cameraTop.camera.setShaderPass(value);\n                    cameraRight.camera.setShaderPass(value);\n                });\n\n                // update function called once per frame\n                let time = 0;\n                app.on("update", function (dt) {\n                    time += dt;\n\n                    // orbit camera left around\n                    cameraLeft.setLocalPosition(\n                        100 * Math.sin(time * 0.2),\n                        35,\n                        100 * Math.cos(time * 0.2)\n                    );\n                    cameraLeft.lookAt(pc.Vec3.ZERO);\n\n                    // move the spot light around\n                    spotLight.setLocalPosition(\n                        40 * Math.sin(time * 0.5),\n                        60,\n                        40 * Math.cos(time * 0.5)\n                    );\n\n                    // zoom in and out the orthographic camera\n                    cameraRight.camera.orthoHeight =\n                        90 + Math.sin(time * 0.3) * 60;\n                });\n            });\n        });\n    }\n}\n',nameSlug:"multi-view",categorySlug:"graphics"},"paint-mesh":{typeScriptFunction:"function example(canvas: HTMLCanvasElement, deviceType: string, files: { 'shader.vert': string, 'shader.frag': string }): void {\n\n    // Create the app and start the update loop\n    const app = new pc.Application(canvas);\n\n    // load the textures\n    const assets = {\n        'helipad': new pc.Asset('helipad.dds', 'cubemap', { url: '/static/assets/cubemaps/helipad.dds' }, { type: pc.TEXTURETYPE_RGBM }),\n        'color': new pc.Asset('color', 'texture', { url: '/static/assets/textures/seaside-rocks01-color.jpg' }),\n        'decal': new pc.Asset('color', 'texture', { url: '/static/assets/textures/heart.png' })\n    };\n\n    const assetListLoader = new pc.AssetListLoader(Object.values(assets), app.assets);\n    assetListLoader.load(() => {\n\n        app.start();\n\n        // Set the canvas to fill the window and automatically change resolution to be the same as the canvas size\n        app.setCanvasFillMode(pc.FILLMODE_FILL_WINDOW);\n        app.setCanvasResolution(pc.RESOLUTION_AUTO);\n\n        app.scene.setSkybox(assets.helipad.resources);\n        app.scene.toneMapping = pc.TONEMAP_ACES;\n        app.scene.skyboxIntensity = 1;\n        app.scene.skyboxMip = 2;\n\n        // helper function to create high polygon version of a sphere and sets up an entity to allow it to be added to the scene\n        const createHighQualitySphere = function (material: pc.Material, layer: number[]) {\n\n            // Create Entity and add it to the scene\n            const entity = new pc.Entity(\"HighResSphere\");\n            app.root.addChild(entity);\n\n            // create hight resolution sphere\n            const mesh = pc.createSphere(app.graphicsDevice, { latitudeBands: 200, longitudeBands: 200 });\n\n            // Add a render component with the mesh\n            entity.addComponent('render', {\n                type: 'asset',\n                layers: layer,\n                meshInstances: [new pc.MeshInstance(mesh, material)]\n            });\n\n            return entity;\n        };\n\n        // We render decals to a texture, so create a render target for it. Note that the texture needs\n        // to be of renderable format here, and so it cannot be compressed.\n        const texture = assets.color.resource;\n        const renderTarget = new pc.RenderTarget({\n            colorBuffer: texture,\n            depth: false\n        });\n\n        // create a layer for rendering to decals\n        const decalLayer = new pc.Layer({ name: \"decalLayer\" });\n        app.scene.layers.insert(decalLayer, 0);\n\n        // Create a camera, which renders decals using a decalLayer, and renders before the main camera\n        // Note that this camera does not need its position set, as it's only used to trigger\n        // the rendering, but the camera matrix is not used for the rendering (our custom shader\n        // does not need it).\n        const decalCamera = new pc.Entity('DecalCamera');\n        decalCamera.addComponent(\"camera\", {\n            clearColorBuffer: false,\n            layers: [decalLayer.id],\n            renderTarget: renderTarget,\n            priority: -1\n        });\n        app.root.addChild(decalCamera);\n\n        // Create main camera, which renders entities in world layer - this is where we show mesh with decals\n        const camera = new pc.Entity('MainCamera');\n        camera.addComponent(\"camera\", {\n            clearColor: new pc.Color(0.1, 0.1, 0.1, 1)\n        });\n        camera.translate(20, 10, 40);\n        camera.lookAt(new pc.Vec3(0, -7, 0));\n        app.root.addChild(camera);\n\n        // material used on the sphere\n        const material = new pc.StandardMaterial();\n        material.diffuseMap = texture;\n        material.gloss = 0.6;\n        material.metalness = 0.4;\n        material.useMetalness = true;\n        material.update();\n\n        // sphere with the texture\n        const worldLayer = app.scene.layers.getLayerByName(\"World\");\n        const meshEntity = createHighQualitySphere(material, [worldLayer.id]);\n        meshEntity.setLocalScale(15, 15, 15);\n\n        // Create the shader definition and shader from the vertex and fragment shaders\n        const shaderDefinition = {\n            attributes: {\n                aPosition: pc.SEMANTIC_POSITION,\n                aUv0: pc.SEMANTIC_TEXCOORD0\n            },\n            vshader: files['shader.vert'],\n            fshader: files['shader.frag']\n        };\n        const shader = new pc.Shader(app.graphicsDevice, shaderDefinition);\n\n        // Create a decal material with the new shader\n        const decalMaterial = new pc.Material();\n        decalMaterial.cull = pc.CULLFACE_NONE;\n        decalMaterial.shader = shader;\n        decalMaterial.blendType = pc.BLEND_NORMAL;\n        decalMaterial.setParameter('uDecalMap', assets.decal.resource);\n\n        // To render into uv space of the mesh, we need to render the mesh using our custom shader into\n        // the texture. In order to do this, we creates a new entity, containing the same mesh instances,\n        // but using our custom shader. We make it a child of the original entity, to use its transform.\n        const meshInstances = meshEntity.render.meshInstances.map((srcMeshInstance: pc.MeshInstance) => {\n            return new pc.MeshInstance(srcMeshInstance.mesh, decalMaterial);\n        });\n        const cloneEntity = new pc.Entity('cloneEntity');\n        cloneEntity.addComponent('render', {\n            meshInstances: meshInstances,\n            layers: [decalLayer.id],\n            castShadows: false,\n            receiveShadows: false\n        });\n        meshEntity.addChild(cloneEntity);\n\n        // Create an entity with a directional light component\n        const light = new pc.Entity();\n        light.addComponent(\"light\", {\n            type: \"directional\",\n            intensity: 3\n        });\n        app.root.addChild(light);\n        light.setLocalEulerAngles(45, 90, 0);\n\n        // update things each frame\n        let time = 0;\n        let decalTime = 0;\n        const decalFrequency = 0.5;\n        app.on(\"update\", function (dt) {\n            time += dt * 0.7;\n\n            // a decal projection box is an orthographic projection from some position. We calculate position\n            // here to be in an orbit around the sphere. Draw a line showing the projection point and direction.\n            const decalProjectionPos = new pc.Vec3(8 * Math.cos(time), 8 * Math.cos(time * 0.3), 8 * Math.sin(time));\n            app.drawLine(decalProjectionPos, pc.Vec3.ZERO, pc.Color.WHITE);\n\n            // render recal every half a second\n            decalTime += dt;\n            if (decalTime > decalFrequency) {\n                decalTime -= decalFrequency;\n\n                // enable decal camera, which renders the decal\n                decalCamera.enabled = true;\n\n                // construct a view matrix, looking from the decal position to the center of the sphere\n                const viewMatrix = new pc.Mat4().setLookAt(decalProjectionPos, pc.Vec3.ZERO, pc.Vec3.UP);\n                viewMatrix.invert();\n\n                // ortographics projection matrix - this defines the size of the decal, but also its depth range (0..5)\n                const projMatrix = new pc.Mat4().setOrtho(-1, 1, -1, 1, 0, 5);\n\n                // final matrix is a combination of view and projection matrix. Make it available to the shader.\n                const viewProj = new pc.Mat4();\n                viewProj.mul2(projMatrix, viewMatrix);\n                decalMaterial.setParameter('matrix_decal_viewProj', viewProj.data);\n            } else {\n                // otherwise the decal camera is disabled\n                decalCamera.enabled = false;\n            }\n\n            // draw the texture we render decals to for demonstration purposes\n            // @ts-ignore engine-tsd\n            app.drawTexture(0, -0.6, 1.4, 0.6, texture);\n\n        });\n    });\n}",javaScriptFunction:'function example(canvas, deviceType, files) {\n    // Create the app and start the update loop\n    const app = new pc.Application(canvas);\n\n    // load the textures\n    const assets = {\n        helipad: new pc.Asset(\n            "helipad.dds",\n            "cubemap",\n            { url: "/static/assets/cubemaps/helipad.dds" },\n            { type: pc.TEXTURETYPE_RGBM }\n        ),\n        color: new pc.Asset("color", "texture", {\n            url: "/static/assets/textures/seaside-rocks01-color.jpg",\n        }),\n        decal: new pc.Asset("color", "texture", {\n            url: "/static/assets/textures/heart.png",\n        }),\n    };\n\n    const assetListLoader = new pc.AssetListLoader(\n        Object.values(assets),\n        app.assets\n    );\n    assetListLoader.load(() => {\n        app.start();\n\n        // Set the canvas to fill the window and automatically change resolution to be the same as the canvas size\n        app.setCanvasFillMode(pc.FILLMODE_FILL_WINDOW);\n        app.setCanvasResolution(pc.RESOLUTION_AUTO);\n\n        app.scene.setSkybox(assets.helipad.resources);\n        app.scene.toneMapping = pc.TONEMAP_ACES;\n        app.scene.skyboxIntensity = 1;\n        app.scene.skyboxMip = 2;\n\n        // helper function to create high polygon version of a sphere and sets up an entity to allow it to be added to the scene\n        const createHighQualitySphere = function (material, layer) {\n            // Create Entity and add it to the scene\n            const entity = new pc.Entity("HighResSphere");\n            app.root.addChild(entity);\n\n            // create hight resolution sphere\n            const mesh = pc.createSphere(app.graphicsDevice, {\n                latitudeBands: 200,\n                longitudeBands: 200,\n            });\n\n            // Add a render component with the mesh\n            entity.addComponent("render", {\n                type: "asset",\n                layers: layer,\n                meshInstances: [new pc.MeshInstance(mesh, material)],\n            });\n\n            return entity;\n        };\n\n        // We render decals to a texture, so create a render target for it. Note that the texture needs\n        // to be of renderable format here, and so it cannot be compressed.\n        const texture = assets.color.resource;\n        const renderTarget = new pc.RenderTarget({\n            colorBuffer: texture,\n            depth: false,\n        });\n\n        // create a layer for rendering to decals\n        const decalLayer = new pc.Layer({ name: "decalLayer" });\n        app.scene.layers.insert(decalLayer, 0);\n\n        // Create a camera, which renders decals using a decalLayer, and renders before the main camera\n        // Note that this camera does not need its position set, as it\'s only used to trigger\n        // the rendering, but the camera matrix is not used for the rendering (our custom shader\n        // does not need it).\n        const decalCamera = new pc.Entity("DecalCamera");\n        decalCamera.addComponent("camera", {\n            clearColorBuffer: false,\n            layers: [decalLayer.id],\n            renderTarget: renderTarget,\n            priority: -1,\n        });\n        app.root.addChild(decalCamera);\n\n        // Create main camera, which renders entities in world layer - this is where we show mesh with decals\n        const camera = new pc.Entity("MainCamera");\n        camera.addComponent("camera", {\n            clearColor: new pc.Color(0.1, 0.1, 0.1, 1),\n        });\n        camera.translate(20, 10, 40);\n        camera.lookAt(new pc.Vec3(0, -7, 0));\n        app.root.addChild(camera);\n\n        // material used on the sphere\n        const material = new pc.StandardMaterial();\n        material.diffuseMap = texture;\n        material.gloss = 0.6;\n        material.metalness = 0.4;\n        material.useMetalness = true;\n        material.update();\n\n        // sphere with the texture\n        const worldLayer = app.scene.layers.getLayerByName("World");\n        const meshEntity = createHighQualitySphere(material, [worldLayer.id]);\n        meshEntity.setLocalScale(15, 15, 15);\n\n        // Create the shader definition and shader from the vertex and fragment shaders\n        const shaderDefinition = {\n            attributes: {\n                aPosition: pc.SEMANTIC_POSITION,\n                aUv0: pc.SEMANTIC_TEXCOORD0,\n            },\n            vshader: files["shader.vert"],\n            fshader: files["shader.frag"],\n        };\n        const shader = new pc.Shader(app.graphicsDevice, shaderDefinition);\n\n        // Create a decal material with the new shader\n        const decalMaterial = new pc.Material();\n        decalMaterial.cull = pc.CULLFACE_NONE;\n        decalMaterial.shader = shader;\n        decalMaterial.blendType = pc.BLEND_NORMAL;\n        decalMaterial.setParameter("uDecalMap", assets.decal.resource);\n\n        // To render into uv space of the mesh, we need to render the mesh using our custom shader into\n        // the texture. In order to do this, we creates a new entity, containing the same mesh instances,\n        // but using our custom shader. We make it a child of the original entity, to use its transform.\n        const meshInstances = meshEntity.render.meshInstances.map(\n            (srcMeshInstance) => {\n                return new pc.MeshInstance(srcMeshInstance.mesh, decalMaterial);\n            }\n        );\n        const cloneEntity = new pc.Entity("cloneEntity");\n        cloneEntity.addComponent("render", {\n            meshInstances: meshInstances,\n            layers: [decalLayer.id],\n            castShadows: false,\n            receiveShadows: false,\n        });\n        meshEntity.addChild(cloneEntity);\n\n        // Create an entity with a directional light component\n        const light = new pc.Entity();\n        light.addComponent("light", {\n            type: "directional",\n            intensity: 3,\n        });\n        app.root.addChild(light);\n        light.setLocalEulerAngles(45, 90, 0);\n\n        // update things each frame\n        let time = 0;\n        let decalTime = 0;\n        const decalFrequency = 0.5;\n        app.on("update", function (dt) {\n            time += dt * 0.7;\n\n            // a decal projection box is an orthographic projection from some position. We calculate position\n            // here to be in an orbit around the sphere. Draw a line showing the projection point and direction.\n            const decalProjectionPos = new pc.Vec3(\n                8 * Math.cos(time),\n                8 * Math.cos(time * 0.3),\n                8 * Math.sin(time)\n            );\n            app.drawLine(decalProjectionPos, pc.Vec3.ZERO, pc.Color.WHITE);\n\n            // render recal every half a second\n            decalTime += dt;\n            if (decalTime > decalFrequency) {\n                decalTime -= decalFrequency;\n\n                // enable decal camera, which renders the decal\n                decalCamera.enabled = true;\n\n                // construct a view matrix, looking from the decal position to the center of the sphere\n                const viewMatrix = new pc.Mat4().setLookAt(\n                    decalProjectionPos,\n                    pc.Vec3.ZERO,\n                    pc.Vec3.UP\n                );\n                viewMatrix.invert();\n\n                // ortographics projection matrix - this defines the size of the decal, but also its depth range (0..5)\n                const projMatrix = new pc.Mat4().setOrtho(-1, 1, -1, 1, 0, 5);\n\n                // final matrix is a combination of view and projection matrix. Make it available to the shader.\n                const viewProj = new pc.Mat4();\n                viewProj.mul2(projMatrix, viewMatrix);\n                decalMaterial.setParameter(\n                    "matrix_decal_viewProj",\n                    viewProj.data\n                );\n            } else {\n                // otherwise the decal camera is disabled\n                decalCamera.enabled = false;\n            }\n\n            // draw the texture we render decals to for demonstration purposes\n            // @ts-ignore engine-tsd\n            app.drawTexture(0, -0.6, 1.4, 0.6, texture);\n        });\n    });\n}\n',nameSlug:"paint-mesh",categorySlug:"graphics",files:{"shader.vert":"\n            // Attributes per vertex: position and uv\n            attribute vec4 aPosition;\n            attribute vec2 aUv0;\n        \n            // model matrix of the mesh\n            uniform mat4 matrix_model;\n\n            // decal view-projection matrix (orthographic)\n            uniform mat4 matrix_decal_viewProj;\n\n            // decal projected position to fragment program\n            varying vec4 decalPos;\n\n            void main(void)\n            {\n                // We render in texture space, so a position of this fragment is its uv-coordinates.\n                // Changes the range of uv coordinates from 0..1 to projection space -1 to 1.\n                gl_Position = vec4(aUv0.x * 2.0 - 1.0, aUv0.y * 2.0 - 1.0, 0, 1.0);\n\n                // transform the vertex position to world space and then to decal space, and pass it\n                // to the fragment shader to sample the decal texture\n                vec4 worldPos = matrix_model * aPosition;\n                decalPos = matrix_decal_viewProj * worldPos;\n            }","shader.frag":"\n            precision lowp float;\n            varying vec4 decalPos;\n            uniform sampler2D uDecalMap;\n\n            void main(void)\n            {\n                // decal space position from -1..1 range, to texture space range 0..1\n                vec4 p = decalPos * 0.5 + 0.5;\n \n                // if the position is outside out 0..1 projection box, ignore the pixel\n                if (p.x < 0.0 || p.x > 1.0 || p.y < 0.0 || p.y > 1.0 || p.z < 0.0 || p.z > 1.0)\n                    discard;\n\n                gl_FragColor = texture2D(uDecalMap, p.xy);\n            }"}},painter:{typeScriptFunction:'function example(canvas: HTMLCanvasElement, deviceType: string): void {\n\n    const gfxOptions = {\n        deviceTypes: [deviceType],\n        glslangUrl: \'/static/lib/glslang/glslang.js\',\n        twgslUrl: \'/static/lib/twgsl/twgsl.js\'\n    };\n\n    pc.createGraphicsDevice(canvas, gfxOptions).then((device: pc.GraphicsDevice) => {\n\n        const createOptions = new pc.AppOptions();\n        createOptions.graphicsDevice = device;\n        createOptions.mouse = new pc.Mouse(document.body);\n        createOptions.touch = new pc.TouchDevice(document.body);\n        createOptions.keyboard = new pc.Keyboard(document.body);\n\n        createOptions.componentSystems = [\n            // @ts-ignore\n            pc.RenderComponentSystem,\n            // @ts-ignore\n            pc.CameraComponentSystem,\n            // @ts-ignore\n            pc.LightComponentSystem,\n            // @ts-ignore\n            pc.ScriptComponentSystem,\n            // @ts-ignore\n            pc.ParticleSystemComponentSystem\n        ];\n        createOptions.resourceHandlers = [\n            // @ts-ignore\n            pc.TextureHandler,\n            // @ts-ignore\n            pc.ScriptHandler\n        ];\n\n        const app = new pc.AppBase(canvas);\n        app.init(createOptions);\n        app.start();\n\n        // Set the canvas to fill the window and automatically change resolution to be the same as the canvas size\n        app.setCanvasFillMode(pc.FILLMODE_FILL_WINDOW);\n        app.setCanvasResolution(pc.RESOLUTION_AUTO);\n\n        // helper function to create a primitive with shape type, position, scale, color and layer\n        function createPrimitive(primitiveType: string, position: number | pc.Vec3, scale: number | pc.Vec3, layer: number[], material: pc.StandardMaterial) {\n\n            // create primitive\n            const primitive = new pc.Entity();\n            primitive.addComponent(\'render\', {\n                type: primitiveType,\n                layers: layer,\n                material: material,\n                castShadows: false,\n                receiveShadows: false\n            });\n\n            // set position and scale and add it to scene\n            primitive.setLocalPosition(position);\n            primitive.setLocalScale(scale);\n            app.root.addChild(primitive);\n\n            return primitive;\n        }\n\n        // create texture and render target for rendering into\n        const texture = new pc.Texture(app.graphicsDevice, {\n            width: 1024,\n            height: 1024,\n            format: pc.PIXELFORMAT_RGB8,\n            mipmaps: false,\n            minFilter: pc.FILTER_LINEAR,\n            magFilter: pc.FILTER_LINEAR\n        });\n        const renderTarget = new pc.RenderTarget({\n            colorBuffer: texture,\n            depth: false\n        });\n\n        // create a layer for rendering to texture, and add it to the beginning of layers to render into it first\n        const paintLayer = new pc.Layer({ name: "paintLayer" });\n        app.scene.layers.insert(paintLayer, 0);\n\n        // create a material we use for the paint brush - it uses emissive color to control its color, which is assigned later\n        const brushMaterial = new pc.StandardMaterial();\n        brushMaterial.emissiveTint = true;\n        brushMaterial.useLighting = false;\n        brushMaterial.update();\n\n        // we render multiple brush imprints each frame to make smooth lines, and set up pool to reuse them each frame\n        const brushes: any[] = [];\n        function getBrush() {\n            let brush: pc.Entity;\n            if (brushes.length === 0) {\n                // create new brush - use sphere primitive, but could use plane with a texture as well\n                // Note: plane would need to be rotated by -90 degrees along x-axis to face camera and be visible\n                brush = createPrimitive("sphere", new pc.Vec3(2, 1, 0), new pc.Vec3(1, 1, 1), [paintLayer.id], brushMaterial);\n            } else {\n                // reuse already allocated brush\n                brush = brushes.pop();\n                brush.enabled = true;\n            }\n            return brush;\n        }\n\n        // Create orthographic camera, which renders brushes in paintLayer, and renders before the main camera\n        const paintCamera = new pc.Entity();\n        paintCamera.addComponent("camera", {\n            clearColorBuffer: false,\n            projection: pc.PROJECTION_ORTHOGRAPHIC,\n            layers: [paintLayer.id],\n            renderTarget: renderTarget,\n            priority: -1\n        });\n\n        // make it look at the center of the render target, some distance away\n        paintCamera.setLocalPosition(0, 0, -10);\n        paintCamera.lookAt(pc.Vec3.ZERO);\n        app.root.addChild(paintCamera);\n\n        // Create main camera, which renders entities in world layer - this is where we show the render target on the box\n        const camera = new pc.Entity();\n        camera.addComponent("camera", {\n            clearColor: new pc.Color(0.2, 0.2, 0.2)\n        });\n        camera.translate(0, 0, 30);\n        camera.lookAt(pc.Vec3.ZERO);\n        app.root.addChild(camera);\n\n        // material used to add render target into the world\n        const material = new pc.StandardMaterial();\n        material.emissiveMap = texture;\n        material.useLighting = false;\n        material.update();\n\n        // create a box which we use to display rendered texture in the world layer\n        const worldLayer = app.scene.layers.getLayerByName("World");\n        const box = createPrimitive("box", new pc.Vec3(0, 0, 0), new pc.Vec3(15, 15, 15), [worldLayer.id], material);\n\n        let progress = 1;\n        let scale: number;\n        let startPos: pc.Vec3, endPos: pc.Vec3;\n        const pos = new pc.Vec3();\n        const usedBrushes: any[] = [];\n\n        // update things each frame\n        app.on("update", function (dt) {\n\n            // if the last brush stroke is finished, generate new random one\n            if (progress >= 1) {\n                progress = 0;\n\n                // generate start and end position for the stroke\n                startPos = new pc.Vec3(Math.random() * 20 - 10, Math.random() * 20 - 10, 0);\n                endPos = new pc.Vec3(Math.random() * 20 - 10, Math.random() * 20 - 10, 0);\n\n                // random width (scale)\n                scale = 0.1 + Math.random();\n\n                // assign random color to the brush\n                brushMaterial.emissive = new pc.Color(Math.random(), Math.random(), Math.random());\n                brushMaterial.update();\n            }\n\n            // disable brushes from the previous frame and return them to the free pool\n            while (usedBrushes.length > 0) {\n                const brush = usedBrushes.pop();\n                brush.enabled = false;\n                brushes.push(brush);\n            }\n\n            // step along the brush line multiple times each frame to make the line smooth\n            const stepCount = 30;\n            const stepProgress = 0.005;\n\n            // in each step\n            for (let i = 0; i < stepCount; i++) {\n\n                // move position little bit\n                pos.lerp(startPos, endPos, progress);\n\n                // setup brush to be rendered this frame\n                const activeBrush = getBrush();\n                activeBrush.setLocalPosition(pos);\n                activeBrush.setLocalScale(scale, scale, scale);\n                usedBrushes.push(activeBrush);\n\n                // progress for the next step\n                progress += stepProgress;\n            }\n\n            // rotate the box in the world\n            box.rotate(5 * dt, 10 * dt, 15 * dt);\n        });\n    });\n}',javaScriptFunction:'function example(canvas, deviceType) {\n    const gfxOptions = {\n        deviceTypes: [deviceType],\n        glslangUrl: "/static/lib/glslang/glslang.js",\n        twgslUrl: "/static/lib/twgsl/twgsl.js",\n    };\n\n    pc.createGraphicsDevice(canvas, gfxOptions).then((device) => {\n        const createOptions = new pc.AppOptions();\n        createOptions.graphicsDevice = device;\n        createOptions.mouse = new pc.Mouse(document.body);\n        createOptions.touch = new pc.TouchDevice(document.body);\n        createOptions.keyboard = new pc.Keyboard(document.body);\n\n        createOptions.componentSystems = [\n            // @ts-ignore\n            pc.RenderComponentSystem,\n            // @ts-ignore\n            pc.CameraComponentSystem,\n            // @ts-ignore\n            pc.LightComponentSystem,\n            // @ts-ignore\n            pc.ScriptComponentSystem,\n            // @ts-ignore\n            pc.ParticleSystemComponentSystem,\n        ];\n\n        createOptions.resourceHandlers = [\n            // @ts-ignore\n            pc.TextureHandler,\n            // @ts-ignore\n            pc.ScriptHandler,\n        ];\n\n        const app = new pc.AppBase(canvas);\n        app.init(createOptions);\n        app.start();\n\n        // Set the canvas to fill the window and automatically change resolution to be the same as the canvas size\n        app.setCanvasFillMode(pc.FILLMODE_FILL_WINDOW);\n        app.setCanvasResolution(pc.RESOLUTION_AUTO);\n\n        // helper function to create a primitive with shape type, position, scale, color and layer\n        function createPrimitive(\n            primitiveType,\n            position,\n            scale,\n            layer,\n            material\n        ) {\n            // create primitive\n            const primitive = new pc.Entity();\n            primitive.addComponent("render", {\n                type: primitiveType,\n                layers: layer,\n                material: material,\n                castShadows: false,\n                receiveShadows: false,\n            });\n\n            // set position and scale and add it to scene\n            primitive.setLocalPosition(position);\n            primitive.setLocalScale(scale);\n            app.root.addChild(primitive);\n\n            return primitive;\n        }\n\n        // create texture and render target for rendering into\n        const texture = new pc.Texture(app.graphicsDevice, {\n            width: 1024,\n            height: 1024,\n            format: pc.PIXELFORMAT_RGB8,\n            mipmaps: false,\n            minFilter: pc.FILTER_LINEAR,\n            magFilter: pc.FILTER_LINEAR,\n        });\n        const renderTarget = new pc.RenderTarget({\n            colorBuffer: texture,\n            depth: false,\n        });\n\n        // create a layer for rendering to texture, and add it to the beginning of layers to render into it first\n        const paintLayer = new pc.Layer({ name: "paintLayer" });\n        app.scene.layers.insert(paintLayer, 0);\n\n        // create a material we use for the paint brush - it uses emissive color to control its color, which is assigned later\n        const brushMaterial = new pc.StandardMaterial();\n        brushMaterial.emissiveTint = true;\n        brushMaterial.useLighting = false;\n        brushMaterial.update();\n\n        // we render multiple brush imprints each frame to make smooth lines, and set up pool to reuse them each frame\n        const brushes = [];\n        function getBrush() {\n            let brush;\n            if (brushes.length === 0) {\n                // create new brush - use sphere primitive, but could use plane with a texture as well\n                // Note: plane would need to be rotated by -90 degrees along x-axis to face camera and be visible\n                brush = createPrimitive(\n                    "sphere",\n                    new pc.Vec3(2, 1, 0),\n                    new pc.Vec3(1, 1, 1),\n                    [paintLayer.id],\n                    brushMaterial\n                );\n            } else {\n                // reuse already allocated brush\n                brush = brushes.pop();\n                brush.enabled = true;\n            }\n            return brush;\n        }\n\n        // Create orthographic camera, which renders brushes in paintLayer, and renders before the main camera\n        const paintCamera = new pc.Entity();\n        paintCamera.addComponent("camera", {\n            clearColorBuffer: false,\n            projection: pc.PROJECTION_ORTHOGRAPHIC,\n            layers: [paintLayer.id],\n            renderTarget: renderTarget,\n            priority: -1,\n        });\n\n        // make it look at the center of the render target, some distance away\n        paintCamera.setLocalPosition(0, 0, -10);\n        paintCamera.lookAt(pc.Vec3.ZERO);\n        app.root.addChild(paintCamera);\n\n        // Create main camera, which renders entities in world layer - this is where we show the render target on the box\n        const camera = new pc.Entity();\n        camera.addComponent("camera", {\n            clearColor: new pc.Color(0.2, 0.2, 0.2),\n        });\n        camera.translate(0, 0, 30);\n        camera.lookAt(pc.Vec3.ZERO);\n        app.root.addChild(camera);\n\n        // material used to add render target into the world\n        const material = new pc.StandardMaterial();\n        material.emissiveMap = texture;\n        material.useLighting = false;\n        material.update();\n\n        // create a box which we use to display rendered texture in the world layer\n        const worldLayer = app.scene.layers.getLayerByName("World");\n        const box = createPrimitive(\n            "box",\n            new pc.Vec3(0, 0, 0),\n            new pc.Vec3(15, 15, 15),\n            [worldLayer.id],\n            material\n        );\n\n        let progress = 1;\n        let scale;\n        let startPos, endPos;\n        const pos = new pc.Vec3();\n        const usedBrushes = [];\n\n        // update things each frame\n        app.on("update", function (dt) {\n            // if the last brush stroke is finished, generate new random one\n            if (progress >= 1) {\n                progress = 0;\n\n                // generate start and end position for the stroke\n                startPos = new pc.Vec3(\n                    Math.random() * 20 - 10,\n                    Math.random() * 20 - 10,\n                    0\n                );\n                endPos = new pc.Vec3(\n                    Math.random() * 20 - 10,\n                    Math.random() * 20 - 10,\n                    0\n                );\n\n                // random width (scale)\n                scale = 0.1 + Math.random();\n\n                // assign random color to the brush\n                brushMaterial.emissive = new pc.Color(\n                    Math.random(),\n                    Math.random(),\n                    Math.random()\n                );\n                brushMaterial.update();\n            }\n\n            // disable brushes from the previous frame and return them to the free pool\n            while (usedBrushes.length > 0) {\n                const brush = usedBrushes.pop();\n                brush.enabled = false;\n                brushes.push(brush);\n            }\n\n            // step along the brush line multiple times each frame to make the line smooth\n            const stepCount = 30;\n            const stepProgress = 0.005;\n\n            // in each step\n            for (let i = 0; i < stepCount; i++) {\n                // move position little bit\n                pos.lerp(startPos, endPos, progress);\n\n                // setup brush to be rendered this frame\n                const activeBrush = getBrush();\n                activeBrush.setLocalPosition(pos);\n                activeBrush.setLocalScale(scale, scale, scale);\n                usedBrushes.push(activeBrush);\n\n                // progress for the next step\n                progress += stepProgress;\n            }\n\n            // rotate the box in the world\n            box.rotate(5 * dt, 10 * dt, 15 * dt);\n        });\n    });\n}\n',nameSlug:"painter",categorySlug:"graphics"},"particles-anim-index":{typeScriptFunction:'function example(canvas: HTMLCanvasElement, deviceType: string): void {\n\n    // Create the application and start the update loop\n    const app = new pc.Application(canvas, {});\n\n    const assets = {\n        \'particlesNumbers\': new pc.Asset(\'particlesNumbers\', \'texture\', { url: \'/static/assets/textures/particles-numbers.png\' })\n    };\n\n    const assetListLoader = new pc.AssetListLoader(Object.values(assets), app.assets);\n    assetListLoader.load(() => {\n\n        // Set the canvas to fill the window and automatically change resolution to be the same as the canvas size\n        app.setCanvasFillMode(pc.FILLMODE_FILL_WINDOW);\n        app.setCanvasResolution(pc.RESOLUTION_AUTO);\n\n        // Create an Entity with a camera component\n        const cameraEntity = new pc.Entity();\n        cameraEntity.addComponent("camera", {\n            clearColor: new pc.Color(0.75, 0.75, 0.75)\n        });\n        cameraEntity.rotateLocal(0, 0, 0);\n        cameraEntity.translateLocal(0, 0, 20);\n\n        // Create a directional light\n        const lightDirEntity = new pc.Entity();\n        lightDirEntity.addComponent("light", {\n            type: "directional",\n            color: new pc.Color(1, 1, 1),\n            intensity: 1\n        });\n        lightDirEntity.setLocalEulerAngles(45, 0, 0);\n\n        // Create a screen to display the particle texture\n        const screenEntity = new pc.Entity();\n        screenEntity.addComponent("screen", { resolution: new pc.Vec2(640, 480), screenSpace: true });\n        screenEntity.screen.scaleMode = "blend";\n        screenEntity.screen.referenceResolution = new pc.Vec2(1280, 720);\n\n        // Create a panel to display the full particle texture\n        const panel = new pc.Entity();\n        screenEntity.addChild(panel);\n\n        // Add Entities into the scene hierarchy\n        app.root.addChild(cameraEntity);\n        app.root.addChild(lightDirEntity);\n        app.root.addChild(screenEntity);\n\n        // Create entity for first particle system\n        const particleEntity1 = new pc.Entity();\n        app.root.addChild(particleEntity1);\n        particleEntity1.setLocalPosition(-3, 3, 0);\n\n        // Create entity for second particle system\n        const particleEntity2 = new pc.Entity();\n        app.root.addChild(particleEntity2);\n        particleEntity2.setLocalPosition(3, 3, 0);\n\n        // Create entity for third particle system\n        const particleEntity3 = new pc.Entity();\n        app.root.addChild(particleEntity3);\n        particleEntity3.setLocalPosition(-3, -3, 0);\n\n        // Create entity for fourth particle system\n        const particleEntity4 = new pc.Entity();\n        app.root.addChild(particleEntity4);\n        particleEntity4.setLocalPosition(3, -3, 0);\n\n        // when the texture is loaded add particlesystem components to particle entities\n\n        // gradually make sparks bigger\n        const scaleCurve = new pc.Curve(\n            [0, 0, 1, 1]\n        );\n\n        const particleSystemConfiguration = {\n            numParticles: 8,\n            lifetime: 4,\n            rate: 0.5,\n            colorMap: assets.particlesNumbers.resource,\n            initialVelocity: 0.25,\n            emitterShape: pc.EMITTERSHAPE_SPHERE,\n            emitterRadius: 0.1,\n            animLoop: true,\n            animTilesX: 4,\n            animTilesY: 4,\n            animSpeed: 1,\n            autoPlay: true,\n            scaleGraph: scaleCurve\n        };\n\n        let options;\n\n        options = Object.assign(particleSystemConfiguration, {\n            // states that each animation in the sprite sheet has 4 frames\n            animNumFrames: 4,\n            // set the animation index of the first particle system to 0\n            animIndex: 0\n        });\n        particleEntity1.addComponent("particlesystem", options);\n\n        options = Object.assign(particleSystemConfiguration, {\n            // states that each animation in the sprite sheet has 4 frames\n            animNumFrames: 4,\n            // set the animation index of the second particle system to 1\n            animIndex: 1\n        });\n        particleEntity2.addComponent("particlesystem", options);\n\n        options = Object.assign(particleSystemConfiguration, {\n            // states that each animation in the sprite sheet has 4 frames\n            animNumFrames: 4,\n            // set the animation index of the third particle system to 2\n            animIndex: 2\n        });\n        particleEntity3.addComponent("particlesystem", options);\n\n        options = Object.assign(particleSystemConfiguration, {\n            // states that each animation in the sprite sheet has 4 frames\n            animNumFrames: 4,\n            // set the animation index of the fourth particle system to 3\n            animIndex: 3\n        });\n        particleEntity4.addComponent("particlesystem", options);\n\n        // add the full particle texture to the panel\n        panel.addComponent(\'element\', {\n            anchor: new pc.Vec4(0.5, 0.5, 0.5, 0.5),\n            pivot: new pc.Vec2(0.5, 0.5),\n            width: 100,\n            height: 100,\n            type: "image",\n            textureAsset: assets.particlesNumbers\n        });\n\n        app.start();\n    });\n}',javaScriptFunction:'function example(canvas, deviceType) {\n    // Create the application and start the update loop\n    const app = new pc.Application(canvas, {});\n\n    const assets = {\n        particlesNumbers: new pc.Asset("particlesNumbers", "texture", {\n            url: "/static/assets/textures/particles-numbers.png",\n        }),\n    };\n\n    const assetListLoader = new pc.AssetListLoader(\n        Object.values(assets),\n        app.assets\n    );\n    assetListLoader.load(() => {\n        // Set the canvas to fill the window and automatically change resolution to be the same as the canvas size\n        app.setCanvasFillMode(pc.FILLMODE_FILL_WINDOW);\n        app.setCanvasResolution(pc.RESOLUTION_AUTO);\n\n        // Create an Entity with a camera component\n        const cameraEntity = new pc.Entity();\n        cameraEntity.addComponent("camera", {\n            clearColor: new pc.Color(0.75, 0.75, 0.75),\n        });\n        cameraEntity.rotateLocal(0, 0, 0);\n        cameraEntity.translateLocal(0, 0, 20);\n\n        // Create a directional light\n        const lightDirEntity = new pc.Entity();\n        lightDirEntity.addComponent("light", {\n            type: "directional",\n            color: new pc.Color(1, 1, 1),\n            intensity: 1,\n        });\n        lightDirEntity.setLocalEulerAngles(45, 0, 0);\n\n        // Create a screen to display the particle texture\n        const screenEntity = new pc.Entity();\n        screenEntity.addComponent("screen", {\n            resolution: new pc.Vec2(640, 480),\n            screenSpace: true,\n        });\n        screenEntity.screen.scaleMode = "blend";\n        screenEntity.screen.referenceResolution = new pc.Vec2(1280, 720);\n\n        // Create a panel to display the full particle texture\n        const panel = new pc.Entity();\n        screenEntity.addChild(panel);\n\n        // Add Entities into the scene hierarchy\n        app.root.addChild(cameraEntity);\n        app.root.addChild(lightDirEntity);\n        app.root.addChild(screenEntity);\n\n        // Create entity for first particle system\n        const particleEntity1 = new pc.Entity();\n        app.root.addChild(particleEntity1);\n        particleEntity1.setLocalPosition(-3, 3, 0);\n\n        // Create entity for second particle system\n        const particleEntity2 = new pc.Entity();\n        app.root.addChild(particleEntity2);\n        particleEntity2.setLocalPosition(3, 3, 0);\n\n        // Create entity for third particle system\n        const particleEntity3 = new pc.Entity();\n        app.root.addChild(particleEntity3);\n        particleEntity3.setLocalPosition(-3, -3, 0);\n\n        // Create entity for fourth particle system\n        const particleEntity4 = new pc.Entity();\n        app.root.addChild(particleEntity4);\n        particleEntity4.setLocalPosition(3, -3, 0);\n\n        // when the texture is loaded add particlesystem components to particle entities\n\n        // gradually make sparks bigger\n        const scaleCurve = new pc.Curve([0, 0, 1, 1]);\n\n        const particleSystemConfiguration = {\n            numParticles: 8,\n            lifetime: 4,\n            rate: 0.5,\n            colorMap: assets.particlesNumbers.resource,\n            initialVelocity: 0.25,\n            emitterShape: pc.EMITTERSHAPE_SPHERE,\n            emitterRadius: 0.1,\n            animLoop: true,\n            animTilesX: 4,\n            animTilesY: 4,\n            animSpeed: 1,\n            autoPlay: true,\n            scaleGraph: scaleCurve,\n        };\n\n        let options;\n\n        options = Object.assign(particleSystemConfiguration, {\n            // states that each animation in the sprite sheet has 4 frames\n            animNumFrames: 4,\n            // set the animation index of the first particle system to 0\n            animIndex: 0,\n        });\n        particleEntity1.addComponent("particlesystem", options);\n\n        options = Object.assign(particleSystemConfiguration, {\n            // states that each animation in the sprite sheet has 4 frames\n            animNumFrames: 4,\n            // set the animation index of the second particle system to 1\n            animIndex: 1,\n        });\n        particleEntity2.addComponent("particlesystem", options);\n\n        options = Object.assign(particleSystemConfiguration, {\n            // states that each animation in the sprite sheet has 4 frames\n            animNumFrames: 4,\n            // set the animation index of the third particle system to 2\n            animIndex: 2,\n        });\n        particleEntity3.addComponent("particlesystem", options);\n\n        options = Object.assign(particleSystemConfiguration, {\n            // states that each animation in the sprite sheet has 4 frames\n            animNumFrames: 4,\n            // set the animation index of the fourth particle system to 3\n            animIndex: 3,\n        });\n        particleEntity4.addComponent("particlesystem", options);\n\n        // add the full particle texture to the panel\n        panel.addComponent("element", {\n            anchor: new pc.Vec4(0.5, 0.5, 0.5, 0.5),\n            pivot: new pc.Vec2(0.5, 0.5),\n            width: 100,\n            height: 100,\n            type: "image",\n            textureAsset: assets.particlesNumbers,\n        });\n\n        app.start();\n    });\n}\n',nameSlug:"particles-anim-index",categorySlug:"graphics"},"particles-random-sprites":{typeScriptFunction:"function example(canvas: HTMLCanvasElement, deviceType: string): void {\n\n    const app = new pc.Application(canvas, {\n        mouse: new pc.Mouse(document.body),\n        touch: new pc.TouchDevice(document.body),\n        elementInput: new pc.ElementInput(canvas)\n    });\n\n    const assets = {\n        'particlesCoinsTexture': new pc.Asset('particlesCoinsTexture', 'texture', { url: '/static/assets/textures/particles-coins.png' }),\n        'particlesBonusTexture': new pc.Asset('particlesBonusTexture', 'texture', { url: '/static/assets/textures/particles-bonus.png' })\n    };\n\n    const assetListLoader = new pc.AssetListLoader(Object.values(assets), app.assets);\n    assetListLoader.load(() => {\n        // Create an Entity with a camera component\n        const cameraEntity = new pc.Entity();\n        cameraEntity.addComponent(\"camera\", {\n            clearColor: new pc.Color(0.23, 0.5, 0.75)\n        });\n        cameraEntity.rotateLocal(0, 0, 0);\n        cameraEntity.translateLocal(0, 0, 20);\n\n        // Create a directional light\n        const lightDirEntity = new pc.Entity();\n        lightDirEntity.addComponent(\"light\", {\n            type: \"directional\",\n            color: new pc.Color(1, 1, 1),\n            intensity: 1\n        });\n        lightDirEntity.setLocalEulerAngles(45, 0, 0);\n\n        // Create a screen to display the particle systems textures\n        const screenEntity = new pc.Entity();\n        screenEntity.addComponent(\"screen\", { resolution: new pc.Vec2(640, 480), screenSpace: true });\n        screenEntity.screen.scaleMode = \"blend\";\n        screenEntity.screen.referenceResolution = new pc.Vec2(1280, 720);\n\n        // Create a panel to display the full particle textures\n        const panel = new pc.Entity();\n        screenEntity.addChild(panel);\n        const panel2 = new pc.Entity();\n        screenEntity.addChild(panel2);\n\n        // Add Entities into the scene hierarchy\n        app.root.addChild(cameraEntity);\n        app.root.addChild(lightDirEntity);\n        app.root.addChild(screenEntity);\n\n        // Create entity for first particle system\n        const particleEntity1 = new pc.Entity();\n        app.root.addChild(particleEntity1);\n        particleEntity1.setLocalPosition(-3, 3, 0);\n\n        // Create entity for second particle system\n        const particleEntity2 = new pc.Entity();\n        app.root.addChild(particleEntity2);\n        particleEntity2.setLocalPosition(3, 3, 0);\n\n        // gradually make particles bigger\n        const scaleCurve = new pc.Curve(\n            [0, 0.1, 1, 0.5]\n        );\n\n        // make particles fade in and out\n        const alphaCurve = new pc.Curve(\n            [0, 0, 0.5, 1, 1, 0]\n        );\n\n        const particleSystemConfiguration = function (asset: any, animTilesX: any, animTilesY: any) {\n            return {\n                numParticles: 32,\n                lifetime: 2,\n                rate: 0.2,\n                colorMap: asset.resource,\n                initialVelocity: 0.125,\n                emitterShape: pc.EMITTERSHAPE_SPHERE,\n                emitterRadius: 2.0,\n                animLoop: true,\n                animTilesX: animTilesX,\n                animTilesY: animTilesY,\n                animSpeed: 4,\n                autoPlay: true,\n                alphaGraph: alphaCurve,\n                scaleGraph: scaleCurve\n            };\n        };\n\n        // add particlesystem component to particle entity\n        particleEntity1.addComponent(\"particlesystem\", Object.assign(particleSystemConfiguration(assets.particlesCoinsTexture, 4, 6), {\n            // set the number of animations in the sprite sheet to 4\n            animNumAnimations: 4,\n            // set the number of frames in each animation to 6\n            animNumFrames: 6,\n            // set the particle system to randomly select a different animation for each particle\n            randomizeAnimIndex: true\n        }));\n\n        // display the full coin texture to the left of the panel\n        panel.addComponent('element', {\n            anchor: new pc.Vec4(0.5, 0.5, 0.5, 0.5),\n            pivot: new pc.Vec2(1.75, 1.0),\n            width: 150,\n            height: 225,\n            type: \"image\",\n            textureAsset: assets.particlesCoinsTexture\n        });\n\n        // add particlesystem component to particle entity\n        particleEntity2.addComponent(\"particlesystem\", Object.assign(particleSystemConfiguration(assets.particlesBonusTexture, 4, 2), {\n            // set the number of animations in the sprite sheet to 7\n            animNumAnimations: 7,\n            // set the number of frames in each animation to 1\n            animNumFrames: 1,\n            // set the particle system to randomly select a different animation for each particle\n            randomizeAnimIndex: true\n        }));\n\n        // display the full bonus item texture to the left of the panel\n        panel2.addComponent('element', {\n            anchor: new pc.Vec4(0.5, 0.5, 0.5, 0.5),\n            pivot: new pc.Vec2(-0.5, 1.0),\n            width: 200,\n            height: 100,\n            type: \"image\",\n            textureAsset: assets.particlesBonusTexture\n        });\n\n        app.start();\n    });\n}",javaScriptFunction:'function example(canvas, deviceType) {\n    const app = new pc.Application(canvas, {\n        mouse: new pc.Mouse(document.body),\n        touch: new pc.TouchDevice(document.body),\n        elementInput: new pc.ElementInput(canvas),\n    });\n\n    const assets = {\n        particlesCoinsTexture: new pc.Asset(\n            "particlesCoinsTexture",\n            "texture",\n            { url: "/static/assets/textures/particles-coins.png" }\n        ),\n        particlesBonusTexture: new pc.Asset(\n            "particlesBonusTexture",\n            "texture",\n            { url: "/static/assets/textures/particles-bonus.png" }\n        ),\n    };\n\n    const assetListLoader = new pc.AssetListLoader(\n        Object.values(assets),\n        app.assets\n    );\n    assetListLoader.load(() => {\n        // Create an Entity with a camera component\n        const cameraEntity = new pc.Entity();\n        cameraEntity.addComponent("camera", {\n            clearColor: new pc.Color(0.23, 0.5, 0.75),\n        });\n        cameraEntity.rotateLocal(0, 0, 0);\n        cameraEntity.translateLocal(0, 0, 20);\n\n        // Create a directional light\n        const lightDirEntity = new pc.Entity();\n        lightDirEntity.addComponent("light", {\n            type: "directional",\n            color: new pc.Color(1, 1, 1),\n            intensity: 1,\n        });\n        lightDirEntity.setLocalEulerAngles(45, 0, 0);\n\n        // Create a screen to display the particle systems textures\n        const screenEntity = new pc.Entity();\n        screenEntity.addComponent("screen", {\n            resolution: new pc.Vec2(640, 480),\n            screenSpace: true,\n        });\n        screenEntity.screen.scaleMode = "blend";\n        screenEntity.screen.referenceResolution = new pc.Vec2(1280, 720);\n\n        // Create a panel to display the full particle textures\n        const panel = new pc.Entity();\n        screenEntity.addChild(panel);\n        const panel2 = new pc.Entity();\n        screenEntity.addChild(panel2);\n\n        // Add Entities into the scene hierarchy\n        app.root.addChild(cameraEntity);\n        app.root.addChild(lightDirEntity);\n        app.root.addChild(screenEntity);\n\n        // Create entity for first particle system\n        const particleEntity1 = new pc.Entity();\n        app.root.addChild(particleEntity1);\n        particleEntity1.setLocalPosition(-3, 3, 0);\n\n        // Create entity for second particle system\n        const particleEntity2 = new pc.Entity();\n        app.root.addChild(particleEntity2);\n        particleEntity2.setLocalPosition(3, 3, 0);\n\n        // gradually make particles bigger\n        const scaleCurve = new pc.Curve([0, 0.1, 1, 0.5]);\n\n        // make particles fade in and out\n        const alphaCurve = new pc.Curve([0, 0, 0.5, 1, 1, 0]);\n\n        const particleSystemConfiguration = function (\n            asset,\n            animTilesX,\n            animTilesY\n        ) {\n            return {\n                numParticles: 32,\n                lifetime: 2,\n                rate: 0.2,\n                colorMap: asset.resource,\n                initialVelocity: 0.125,\n                emitterShape: pc.EMITTERSHAPE_SPHERE,\n                emitterRadius: 2.0,\n                animLoop: true,\n                animTilesX: animTilesX,\n                animTilesY: animTilesY,\n                animSpeed: 4,\n                autoPlay: true,\n                alphaGraph: alphaCurve,\n                scaleGraph: scaleCurve,\n            };\n        };\n\n        // add particlesystem component to particle entity\n        particleEntity1.addComponent(\n            "particlesystem",\n            Object.assign(\n                particleSystemConfiguration(assets.particlesCoinsTexture, 4, 6),\n                {\n                    // set the number of animations in the sprite sheet to 4\n                    animNumAnimations: 4,\n                    // set the number of frames in each animation to 6\n                    animNumFrames: 6,\n                    // set the particle system to randomly select a different animation for each particle\n                    randomizeAnimIndex: true,\n                }\n            )\n        );\n\n        // display the full coin texture to the left of the panel\n        panel.addComponent("element", {\n            anchor: new pc.Vec4(0.5, 0.5, 0.5, 0.5),\n            pivot: new pc.Vec2(1.75, 1.0),\n            width: 150,\n            height: 225,\n            type: "image",\n            textureAsset: assets.particlesCoinsTexture,\n        });\n\n        // add particlesystem component to particle entity\n        particleEntity2.addComponent(\n            "particlesystem",\n            Object.assign(\n                particleSystemConfiguration(assets.particlesBonusTexture, 4, 2),\n                {\n                    // set the number of animations in the sprite sheet to 7\n                    animNumAnimations: 7,\n                    // set the number of frames in each animation to 1\n                    animNumFrames: 1,\n                    // set the particle system to randomly select a different animation for each particle\n                    randomizeAnimIndex: true,\n                }\n            )\n        );\n\n        // display the full bonus item texture to the left of the panel\n        panel2.addComponent("element", {\n            anchor: new pc.Vec4(0.5, 0.5, 0.5, 0.5),\n            pivot: new pc.Vec2(-0.5, 1.0),\n            width: 200,\n            height: 100,\n            type: "image",\n            textureAsset: assets.particlesBonusTexture,\n        });\n\n        app.start();\n    });\n}\n',nameSlug:"particles-random-sprites",categorySlug:"graphics"},"particles-snow":{typeScriptFunction:"function example(canvas: HTMLCanvasElement, deviceType: string): void {\n\n    // Create the application and start the update loop\n    const app = new pc.Application(canvas, {});\n\n    const assets = {\n        'snowflake': new pc.Asset('snowflake', 'texture', { url: '/static/assets/textures/snowflake.png' })\n    };\n\n    const assetListLoader = new pc.AssetListLoader(Object.values(assets), app.assets);\n    assetListLoader.load(() => {\n        app.start();\n\n        // Set the canvas to fill the window and automatically change resolution to be the same as the canvas size\n        app.setCanvasFillMode(pc.FILLMODE_FILL_WINDOW);\n        app.setCanvasResolution(pc.RESOLUTION_AUTO);\n\n        // Create an Entity with a camera component\n        const cameraEntity = new pc.Entity();\n        cameraEntity.addComponent(\"camera\", {\n            clearColor: new pc.Color(0, 0, 0)\n        });\n        cameraEntity.rotateLocal(0, 0, 0);\n        cameraEntity.translateLocal(0, 0, 10);\n\n        // Create a directional light\n        const lightDirEntity = new pc.Entity();\n        lightDirEntity.addComponent(\"light\", {\n            type: \"directional\",\n            color: new pc.Color(1, 1, 1),\n            intensity: 1\n        });\n        lightDirEntity.setLocalEulerAngles(45, 0, 0);\n\n        // Add Entities into the scene hierarchy\n        app.root.addChild(cameraEntity);\n        app.root.addChild(lightDirEntity);\n\n\n        // set up random downwards velocity from -0.4 to -0.7\n        const velocityCurve = new pc.CurveSet([\n            [0, 0],     // x\n            [0, -0.7],  // y\n            [0, 0]      // z\n        ]);\n        const velocityCurve2 = new pc.CurveSet([\n            [0, 0],   // x\n            [0, -0.4], // y\n            [0, 0]    // z\n        ]);\n\n        // set up random rotation speed from -100 to 100 degrees per second\n        const rotCurve = new pc.Curve([0, 100]);\n        const rotCurve2 = new pc.Curve([0, -100]);\n\n        // scale is constant at 0.1\n        const scaleCurve = new pc.Curve([0, 0.1]);\n\n        // Create entity for particle system\n        const entity = new pc.Entity();\n        app.root.addChild(entity);\n        entity.setLocalPosition(0, 3, 0);\n\n        // load snowflake texture\n        app.assets.loadFromUrl('/static/assets/textures/snowflake.png', 'texture', function () {\n            // when texture is loaded add particlesystem component to entity\n            entity.addComponent(\"particlesystem\", {\n                numParticles: 100,\n                lifetime: 10,\n                rate: 0.1,\n                startAngle: 360,\n                startAngle2: -360,\n                emitterExtents: new pc.Vec3(5, 0, 0),\n                velocityGraph: velocityCurve,\n                velocityGraph2: velocityCurve2,\n                scaleGraph: scaleCurve,\n                rotationSpeedGraph: rotCurve,\n                rotationSpeedGraph2: rotCurve2,\n                colorMap: assets.snowflake.resource\n            });\n        });\n    });\n}",javaScriptFunction:'function example(canvas, deviceType) {\n    // Create the application and start the update loop\n    const app = new pc.Application(canvas, {});\n\n    const assets = {\n        snowflake: new pc.Asset("snowflake", "texture", {\n            url: "/static/assets/textures/snowflake.png",\n        }),\n    };\n\n    const assetListLoader = new pc.AssetListLoader(\n        Object.values(assets),\n        app.assets\n    );\n    assetListLoader.load(() => {\n        app.start();\n\n        // Set the canvas to fill the window and automatically change resolution to be the same as the canvas size\n        app.setCanvasFillMode(pc.FILLMODE_FILL_WINDOW);\n        app.setCanvasResolution(pc.RESOLUTION_AUTO);\n\n        // Create an Entity with a camera component\n        const cameraEntity = new pc.Entity();\n        cameraEntity.addComponent("camera", {\n            clearColor: new pc.Color(0, 0, 0),\n        });\n        cameraEntity.rotateLocal(0, 0, 0);\n        cameraEntity.translateLocal(0, 0, 10);\n\n        // Create a directional light\n        const lightDirEntity = new pc.Entity();\n        lightDirEntity.addComponent("light", {\n            type: "directional",\n            color: new pc.Color(1, 1, 1),\n            intensity: 1,\n        });\n        lightDirEntity.setLocalEulerAngles(45, 0, 0);\n\n        // Add Entities into the scene hierarchy\n        app.root.addChild(cameraEntity);\n        app.root.addChild(lightDirEntity);\n\n        // set up random downwards velocity from -0.4 to -0.7\n        const velocityCurve = new pc.CurveSet([\n            [0, 0], // x\n            [0, -0.7], // y\n            [0, 0], // z\n        ]);\n        const velocityCurve2 = new pc.CurveSet([\n            [0, 0], // x\n            [0, -0.4], // y\n            [0, 0], // z\n        ]);\n\n        // set up random rotation speed from -100 to 100 degrees per second\n        const rotCurve = new pc.Curve([0, 100]);\n        const rotCurve2 = new pc.Curve([0, -100]);\n\n        // scale is constant at 0.1\n        const scaleCurve = new pc.Curve([0, 0.1]);\n\n        // Create entity for particle system\n        const entity = new pc.Entity();\n        app.root.addChild(entity);\n        entity.setLocalPosition(0, 3, 0);\n\n        // load snowflake texture\n        app.assets.loadFromUrl(\n            "/static/assets/textures/snowflake.png",\n            "texture",\n            function () {\n                // when texture is loaded add particlesystem component to entity\n                entity.addComponent("particlesystem", {\n                    numParticles: 100,\n                    lifetime: 10,\n                    rate: 0.1,\n                    startAngle: 360,\n                    startAngle2: -360,\n                    emitterExtents: new pc.Vec3(5, 0, 0),\n                    velocityGraph: velocityCurve,\n                    velocityGraph2: velocityCurve2,\n                    scaleGraph: scaleCurve,\n                    rotationSpeedGraph: rotCurve,\n                    rotationSpeedGraph2: rotCurve2,\n                    colorMap: assets.snowflake.resource,\n                });\n            }\n        );\n    });\n}\n',nameSlug:"particles-snow",categorySlug:"graphics"},"particles-spark":{typeScriptFunction:"function example(canvas: HTMLCanvasElement, deviceType: string): void {\n\n    const assets = {\n        'spark': new pc.Asset('spark', 'texture', { url: '/static/assets/textures/spark.png' })\n    };\n\n    const gfxOptions = {\n        deviceTypes: [deviceType],\n        glslangUrl: '/static/lib/glslang/glslang.js',\n        twgslUrl: '/static/lib/twgsl/twgsl.js'\n    };\n\n    pc.createGraphicsDevice(canvas, gfxOptions).then((device: pc.GraphicsDevice) => {\n\n        const createOptions = new pc.AppOptions();\n        createOptions.graphicsDevice = device;\n\n        createOptions.componentSystems = [\n            // @ts-ignore\n            pc.RenderComponentSystem,\n            // @ts-ignore\n            pc.CameraComponentSystem,\n            // @ts-ignore\n            pc.LightComponentSystem,\n            // @ts-ignore\n            pc.ParticleSystemComponentSystem\n        ];\n        createOptions.resourceHandlers = [\n            // @ts-ignore\n            pc.TextureHandler\n        ];\n\n        const app = new pc.AppBase(canvas);\n        app.init(createOptions);\n\n        // Set the canvas to fill the window and automatically change resolution to be the same as the canvas size\n        app.setCanvasFillMode(pc.FILLMODE_FILL_WINDOW);\n        app.setCanvasResolution(pc.RESOLUTION_AUTO);\n\n        const assetListLoader = new pc.AssetListLoader(Object.values(assets), app.assets);\n        assetListLoader.load(() => {\n\n            app.start();\n\n            // Create an Entity with a camera component\n            const cameraEntity = new pc.Entity();\n            cameraEntity.addComponent(\"camera\", {\n                clearColor: new pc.Color(0, 0, 0.05)\n            });\n            cameraEntity.rotateLocal(0, 0, 0);\n            cameraEntity.translateLocal(0, 0, 10);\n\n            // Create a directional light\n            const lightDirEntity = new pc.Entity();\n            lightDirEntity.addComponent(\"light\", {\n                type: \"directional\",\n                color: new pc.Color(1, 1, 1),\n                intensity: 1\n            });\n            lightDirEntity.setLocalEulerAngles(45, 0, 0);\n\n            // Add Entities into the scene hierarchy\n            app.root.addChild(cameraEntity);\n            app.root.addChild(lightDirEntity);\n\n\n            // Offset position\n            const localPosCurve = new pc.CurveSet([\n                [0, 0, 1, 4],\n                [0, 0, 1, 3],\n                [0, 0, 1, 0]\n            ]);\n            localPosCurve.type = pc.CURVE_LINEAR;\n\n            // make particles move in different directions\n            const localVelocityCurve = new pc.CurveSet([\n                [0, 0, 1, 8],\n                [0, 0, 1, 6],\n                [0, 0, 1, 0]\n            ]);\n            const localVelocityCurve2 = new pc.CurveSet([\n                [0, 0, 1, -8],\n                [0, 0, 1, -6],\n                [0, 0, 1, 0]\n            ]);\n\n            // increasing gravity\n            const worldVelocityCurve = new pc.CurveSet([\n                [0, 0],\n                [0, 0, 0.2, 6, 1, -48],\n                [0, 0]\n            ]);\n\n            // gradually make sparks bigger\n            const scaleCurve = new pc.Curve(\n                [0, 0, 0.5, 0.3, 0.8, 0.2, 1, 0.1]\n            );\n\n            // rotate sparks 360 degrees per second\n            const angleCurve = new pc.Curve(\n                [0, 360]\n            );\n\n            // color changes throughout lifetime\n            const colorCurve = new pc.CurveSet([\n                [0, 1, 0.25, 1, 0.375, 0.5, 0.5, 0],\n                [0, 0, 0.125, 0.25, 0.25, 0.5, 0.375, 0.75, 0.5, 1],\n                [0, 0, 1, 0]\n            ]);\n\n            // Create entity for particle system\n            const entity = new pc.Entity('Sparks');\n            app.root.addChild(entity);\n            entity.setLocalPosition(0, 0, 0);\n\n            // when texture is loaded add particlesystem component to entity\n            entity.addComponent(\"particlesystem\", {\n                numParticles: 200,\n                lifetime: 2,\n                rate: 0.01,\n                scaleGraph: scaleCurve,\n                rotationSpeedGraph: angleCurve,\n                colorGraph: colorCurve,\n                colorMap: assets.spark.resource,\n                velocityGraph: worldVelocityCurve,\n                localVelocityGraph: localVelocityCurve,\n                localVelocityGraph2: localVelocityCurve2\n            });\n        });\n    });\n}",javaScriptFunction:'function example(canvas, deviceType) {\n    const assets = {\n        spark: new pc.Asset("spark", "texture", {\n            url: "/static/assets/textures/spark.png",\n        }),\n    };\n\n    const gfxOptions = {\n        deviceTypes: [deviceType],\n        glslangUrl: "/static/lib/glslang/glslang.js",\n        twgslUrl: "/static/lib/twgsl/twgsl.js",\n    };\n\n    pc.createGraphicsDevice(canvas, gfxOptions).then((device) => {\n        const createOptions = new pc.AppOptions();\n        createOptions.graphicsDevice = device;\n\n        createOptions.componentSystems = [\n            // @ts-ignore\n            pc.RenderComponentSystem,\n            // @ts-ignore\n            pc.CameraComponentSystem,\n            // @ts-ignore\n            pc.LightComponentSystem,\n            // @ts-ignore\n            pc.ParticleSystemComponentSystem,\n        ];\n\n        createOptions.resourceHandlers = [\n            // @ts-ignore\n            pc.TextureHandler,\n        ];\n\n        const app = new pc.AppBase(canvas);\n        app.init(createOptions);\n\n        // Set the canvas to fill the window and automatically change resolution to be the same as the canvas size\n        app.setCanvasFillMode(pc.FILLMODE_FILL_WINDOW);\n        app.setCanvasResolution(pc.RESOLUTION_AUTO);\n\n        const assetListLoader = new pc.AssetListLoader(\n            Object.values(assets),\n            app.assets\n        );\n        assetListLoader.load(() => {\n            app.start();\n\n            // Create an Entity with a camera component\n            const cameraEntity = new pc.Entity();\n            cameraEntity.addComponent("camera", {\n                clearColor: new pc.Color(0, 0, 0.05),\n            });\n            cameraEntity.rotateLocal(0, 0, 0);\n            cameraEntity.translateLocal(0, 0, 10);\n\n            // Create a directional light\n            const lightDirEntity = new pc.Entity();\n            lightDirEntity.addComponent("light", {\n                type: "directional",\n                color: new pc.Color(1, 1, 1),\n                intensity: 1,\n            });\n            lightDirEntity.setLocalEulerAngles(45, 0, 0);\n\n            // Add Entities into the scene hierarchy\n            app.root.addChild(cameraEntity);\n            app.root.addChild(lightDirEntity);\n\n            // Offset position\n            const localPosCurve = new pc.CurveSet([\n                [0, 0, 1, 4],\n                [0, 0, 1, 3],\n                [0, 0, 1, 0],\n            ]);\n            localPosCurve.type = pc.CURVE_LINEAR;\n\n            // make particles move in different directions\n            const localVelocityCurve = new pc.CurveSet([\n                [0, 0, 1, 8],\n                [0, 0, 1, 6],\n                [0, 0, 1, 0],\n            ]);\n            const localVelocityCurve2 = new pc.CurveSet([\n                [0, 0, 1, -8],\n                [0, 0, 1, -6],\n                [0, 0, 1, 0],\n            ]);\n\n            // increasing gravity\n            const worldVelocityCurve = new pc.CurveSet([\n                [0, 0],\n                [0, 0, 0.2, 6, 1, -48],\n                [0, 0],\n            ]);\n\n            // gradually make sparks bigger\n            const scaleCurve = new pc.Curve([0, 0, 0.5, 0.3, 0.8, 0.2, 1, 0.1]);\n\n            // rotate sparks 360 degrees per second\n            const angleCurve = new pc.Curve([0, 360]);\n\n            // color changes throughout lifetime\n            const colorCurve = new pc.CurveSet([\n                [0, 1, 0.25, 1, 0.375, 0.5, 0.5, 0],\n                [0, 0, 0.125, 0.25, 0.25, 0.5, 0.375, 0.75, 0.5, 1],\n                [0, 0, 1, 0],\n            ]);\n\n            // Create entity for particle system\n            const entity = new pc.Entity("Sparks");\n            app.root.addChild(entity);\n            entity.setLocalPosition(0, 0, 0);\n\n            // when texture is loaded add particlesystem component to entity\n            entity.addComponent("particlesystem", {\n                numParticles: 200,\n                lifetime: 2,\n                rate: 0.01,\n                scaleGraph: scaleCurve,\n                rotationSpeedGraph: angleCurve,\n                colorGraph: colorCurve,\n                colorMap: assets.spark.resource,\n                velocityGraph: worldVelocityCurve,\n                localVelocityGraph: localVelocityCurve,\n                localVelocityGraph2: localVelocityCurve2,\n            });\n        });\n    });\n}\n',nameSlug:"particles-spark",categorySlug:"graphics"},"point-cloud-simulation":{typeScriptFunction:"function example(canvas: HTMLCanvasElement, deviceType: string, files: { 'shader.vert': string, 'shader.frag': string }): void {\n    // Create the application and start the update loop\n    const app = new pc.Application(canvas, {});\n    app.start();\n\n    // Set the canvas to fill the window and automatically change resolution to be the same as the canvas size\n    app.setCanvasFillMode(pc.FILLMODE_FILL_WINDOW);\n    app.setCanvasResolution(pc.RESOLUTION_AUTO);\n\n    // Create an Entity with a camera component\n    const camera = new pc.Entity();\n    camera.addComponent(\"camera\", {\n        clearColor: new pc.Color(0, 0, 0)\n    });\n\n    // Add entity into scene hierarchy\n    app.root.addChild(camera);\n\n    // allocate two buffers to store positions of particles\n    const maxNumPoints = 100000;\n    let visiblePoints = 10000;\n    const positions = new Float32Array(3 * maxNumPoints);\n    const oldPositions = new Float32Array(3 * maxNumPoints);\n\n    // generate random positions and old positions within small cube (delta between them represents velocity)\n    for (let i = 0; i < 3 * maxNumPoints; i++) {\n        positions[i] = Math.random() * 2 - 1;\n        oldPositions[i] = positions[i] + Math.random() * 0.04 - 0.01;\n    }\n\n    // helper function to update vertex of the mesh\n    function updateMesh(mesh: pc.Mesh) {\n\n        // Set current positions on mesh - this reallocates vertex buffer if more space is needed to test it.\n        // For best performance, we could preallocate enough space using mesh.Clear.\n        // Also turn off bounding box generation, as we set up large box manually\n        mesh.setPositions(positions, 3, visiblePoints);\n        mesh.update(pc.PRIMITIVE_POINTS, false);\n    }\n\n    // Create a mesh with dynamic vertex buffer (index buffer is not needed)\n    const mesh = new pc.Mesh(app.graphicsDevice);\n    mesh.clear(true);\n    updateMesh(mesh);\n\n    // set large bounding box so we don't need to update it each frame\n    mesh.aabb = new pc.BoundingBox(new pc.Vec3(0, 0, 0), new pc.Vec3(15, 15, 15));\n\n    // Create the shader from the vertex and fragment shaders\n    const shader = new pc.Shader(app.graphicsDevice, {\n        attributes: { aPosition: pc.SEMANTIC_POSITION },\n        vshader: files['shader.vert'],\n        fshader: files['shader.frag']\n    });\n\n    // Create a new material with the new shader and additive alpha blending\n    const material = new pc.Material();\n    material.shader = shader;\n    material.blendType = pc.BLEND_ADDITIVEALPHA;\n    material.depthWrite = false;\n\n    // Create the mesh instance\n    const meshInstance = new pc.MeshInstance(mesh, material);\n\n    // Create Entity to render the mesh instances using a render component\n    const entity = new pc.Entity();\n    entity.addComponent(\"render\", {\n        type: 'asset',\n        meshInstances: [meshInstance],\n        material: material,\n        castShadows: false\n    });\n    app.root.addChild(entity);\n\n    // Set an update function on the app's update event\n    let time = 0, previousTime;\n    app.on(\"update\", function (dt) {\n        previousTime = time;\n        time += dt;\n\n        // update particle positions using simple Verlet integration, and keep them inside a sphere boundary\n        let dist;\n        const pos = new pc.Vec3();\n        const old = new pc.Vec3();\n        const delta = new pc.Vec3();\n        const next = new pc.Vec3();\n        for (let i = 0; i < maxNumPoints; i++) {\n\n            // read positions from buffers\n            old.set(oldPositions[i * 3], oldPositions[i * 3 + 1], oldPositions[i * 3 + 2]);\n            pos.set(positions[i * 3], positions[i * 3 + 1], positions[i * 3 + 2]);\n\n            // verlet integration to move them\n            delta.sub2(pos, old);\n            next.add2(pos, delta);\n\n            // boundary collision to keep them inside a sphere. If outside, simply move them in opposite direction\n            dist = next.length();\n            if (dist > 15)\n                next.copy(old);\n\n            // write out changed positions\n            positions[i * 3] = next.x;\n            positions[i * 3 + 1] = next.y;\n            positions[i * 3 + 2] = next.z;\n\n            oldPositions[i * 3] = pos.x;\n            oldPositions[i * 3 + 1] = pos.y;\n            oldPositions[i * 3 + 2] = pos.z;\n        }\n\n        // once a second change how many points are visible\n        if (Math.round(time) !== Math.round(previousTime))\n            visiblePoints = Math.floor(50000 + Math.random() * maxNumPoints - 50000);\n\n        // update mesh vertices\n        updateMesh(mesh);\n\n        // Rotate the camera around\n        const cameraTime = time * 0.2;\n        const cameraPos = new pc.Vec3(20 * Math.sin(cameraTime), 10, 20 * Math.cos(cameraTime));\n        camera.setLocalPosition(cameraPos);\n        camera.lookAt(pc.Vec3.ZERO);\n    });\n}",javaScriptFunction:'function example(canvas, deviceType, files) {\n    // Create the application and start the update loop\n    const app = new pc.Application(canvas, {});\n    app.start();\n\n    // Set the canvas to fill the window and automatically change resolution to be the same as the canvas size\n    app.setCanvasFillMode(pc.FILLMODE_FILL_WINDOW);\n    app.setCanvasResolution(pc.RESOLUTION_AUTO);\n\n    // Create an Entity with a camera component\n    const camera = new pc.Entity();\n    camera.addComponent("camera", {\n        clearColor: new pc.Color(0, 0, 0),\n    });\n\n    // Add entity into scene hierarchy\n    app.root.addChild(camera);\n\n    // allocate two buffers to store positions of particles\n    const maxNumPoints = 100000;\n    let visiblePoints = 10000;\n    const positions = new Float32Array(3 * maxNumPoints);\n    const oldPositions = new Float32Array(3 * maxNumPoints);\n\n    // generate random positions and old positions within small cube (delta between them represents velocity)\n    for (let i = 0; i < 3 * maxNumPoints; i++) {\n        positions[i] = Math.random() * 2 - 1;\n        oldPositions[i] = positions[i] + Math.random() * 0.04 - 0.01;\n    }\n\n    // helper function to update vertex of the mesh\n    function updateMesh(mesh) {\n        // Set current positions on mesh - this reallocates vertex buffer if more space is needed to test it.\n        // For best performance, we could preallocate enough space using mesh.Clear.\n        // Also turn off bounding box generation, as we set up large box manually\n        mesh.setPositions(positions, 3, visiblePoints);\n        mesh.update(pc.PRIMITIVE_POINTS, false);\n    }\n\n    // Create a mesh with dynamic vertex buffer (index buffer is not needed)\n    const mesh = new pc.Mesh(app.graphicsDevice);\n    mesh.clear(true);\n    updateMesh(mesh);\n\n    // set large bounding box so we don\'t need to update it each frame\n    mesh.aabb = new pc.BoundingBox(\n        new pc.Vec3(0, 0, 0),\n        new pc.Vec3(15, 15, 15)\n    );\n\n    // Create the shader from the vertex and fragment shaders\n    const shader = new pc.Shader(app.graphicsDevice, {\n        attributes: { aPosition: pc.SEMANTIC_POSITION },\n        vshader: files["shader.vert"],\n        fshader: files["shader.frag"],\n    });\n\n    // Create a new material with the new shader and additive alpha blending\n    const material = new pc.Material();\n    material.shader = shader;\n    material.blendType = pc.BLEND_ADDITIVEALPHA;\n    material.depthWrite = false;\n\n    // Create the mesh instance\n    const meshInstance = new pc.MeshInstance(mesh, material);\n\n    // Create Entity to render the mesh instances using a render component\n    const entity = new pc.Entity();\n    entity.addComponent("render", {\n        type: "asset",\n        meshInstances: [meshInstance],\n        material: material,\n        castShadows: false,\n    });\n    app.root.addChild(entity);\n\n    // Set an update function on the app\'s update event\n    let time = 0,\n        previousTime;\n    app.on("update", function (dt) {\n        previousTime = time;\n        time += dt;\n\n        // update particle positions using simple Verlet integration, and keep them inside a sphere boundary\n        let dist;\n        const pos = new pc.Vec3();\n        const old = new pc.Vec3();\n        const delta = new pc.Vec3();\n        const next = new pc.Vec3();\n        for (let i = 0; i < maxNumPoints; i++) {\n            // read positions from buffers\n            old.set(\n                oldPositions[i * 3],\n                oldPositions[i * 3 + 1],\n                oldPositions[i * 3 + 2]\n            );\n            pos.set(\n                positions[i * 3],\n                positions[i * 3 + 1],\n                positions[i * 3 + 2]\n            );\n\n            // verlet integration to move them\n            delta.sub2(pos, old);\n            next.add2(pos, delta);\n\n            // boundary collision to keep them inside a sphere. If outside, simply move them in opposite direction\n            dist = next.length();\n            if (dist > 15) next.copy(old);\n\n            // write out changed positions\n            positions[i * 3] = next.x;\n            positions[i * 3 + 1] = next.y;\n            positions[i * 3 + 2] = next.z;\n\n            oldPositions[i * 3] = pos.x;\n            oldPositions[i * 3 + 1] = pos.y;\n            oldPositions[i * 3 + 2] = pos.z;\n        }\n\n        // once a second change how many points are visible\n        if (Math.round(time) !== Math.round(previousTime))\n            visiblePoints = Math.floor(\n                50000 + Math.random() * maxNumPoints - 50000\n            );\n\n        // update mesh vertices\n        updateMesh(mesh);\n\n        // Rotate the camera around\n        const cameraTime = time * 0.2;\n        const cameraPos = new pc.Vec3(\n            20 * Math.sin(cameraTime),\n            10,\n            20 * Math.cos(cameraTime)\n        );\n        camera.setLocalPosition(cameraPos);\n        camera.lookAt(pc.Vec3.ZERO);\n    });\n}\n',nameSlug:"point-cloud-simulation",categorySlug:"graphics",files:{"shader.vert":"\n// Attributes per vertex: position\nattribute vec4 aPosition;\n\nuniform mat4   matrix_viewProjection;\nuniform mat4   matrix_model;\n\n// position of the camera\nuniform vec3 view_position;\n\n// Color to fragment program\nvarying vec4 outColor;\n\nvoid main(void)\n{\n    // Transform the geometry\n    mat4 modelViewProj = matrix_viewProjection * matrix_model;\n    gl_Position = modelViewProj * aPosition;\n\n    // vertex in world space\n    vec4 vertexWorld = matrix_model * aPosition;\n\n    // point sprite size depends on its distance to camera\n    float dist = 25.0 - length(vertexWorld.xyz - view_position);\n    gl_PointSize = clamp(dist * 2.0 - 1.0, 1.0, 15.0);\n\n    // color depends on position of particle\n    outColor = vec4(vertexWorld.y * 0.1, 0.1, vertexWorld.z * 0.1, 1);\n}","shader.frag":"\nprecision mediump float;\nvarying vec4 outColor;\n\nvoid main(void)\n{\n    // color supplied by vertex shader\n    gl_FragColor = outColor;\n\n    // make point round instead of square - make pixels outside of the circle black, using provided gl_PointCoord\n    vec2 dist = gl_PointCoord.xy - vec2(0.5, 0.5);\n    gl_FragColor.a = 1.0 - smoothstep(0.4, 0.5, sqrt(dot(dist, dist)));\n\n}"}},"point-cloud":{typeScriptFunction:"function example(canvas: HTMLCanvasElement, deviceType: string, files: { 'shader.vert': string, 'shader.frag': string }): void {\n    // Create the application and start the update loop\n    const app = new pc.Application(canvas, {});\n\n    const assets = {\n        'statue': new pc.Asset('statue', 'container', { url: '/static/assets/models/statue.glb' })\n    };\n\n    const assetListLoader = new pc.AssetListLoader(Object.values(assets), app.assets);\n    assetListLoader.load(() => {\n\n        // Set the canvas to fill the window and automatically change resolution to be the same as the canvas size\n        app.setCanvasFillMode(pc.FILLMODE_FILL_WINDOW);\n        app.setCanvasResolution(pc.RESOLUTION_AUTO);\n\n        // Create an Entity with a camera component\n        const camera = new pc.Entity();\n        camera.addComponent(\"camera\", {\n            clearColor: new pc.Color(0.1, 0.1, 0.1)\n        });\n        camera.translate(0, 7, 24);\n\n        // Add entity into scene hierarchy\n        app.root.addChild(camera);\n        app.start();\n\n        // Create a new Entity\n        const entity = assets.statue.resource.instantiateRenderEntity();\n        app.root.addChild(entity);\n\n        // Create the shader definition and shader from the vertex and fragment shaders\n        const shaderDefinition = {\n            attributes: {\n                aPosition: pc.SEMANTIC_POSITION\n            },\n            vshader: files['shader.vert'],\n            fshader: files['shader.frag']\n        };\n        const shader = new pc.Shader(app.graphicsDevice, shaderDefinition);\n\n        // Create a new material with the new shader\n        const material = new pc.Material();\n        material.shader = shader;\n\n        // find all render components\n        const renderComponents = entity.findComponents('render');\n\n        // for all render components\n        renderComponents.forEach(function (render: any) {\n\n            // For all meshes in the render component, assign new material\n            render.meshInstances.forEach(function (meshInstance: pc.MeshInstance) {\n                meshInstance.material = material;\n            });\n\n            // set it to render as points\n            render.renderStyle = pc.RENDERSTYLE_POINTS;\n        });\n\n        let currentTime = 0;\n        app.on(\"update\", function (dt) {\n\n            // Update the time and pass it to shader\n            currentTime += dt;\n            material.setParameter('uTime', currentTime);\n\n            // Rotate the model\n            entity.rotate(0, 15 * dt, 0);\n        });\n    });\n}",javaScriptFunction:'function example(canvas, deviceType, files) {\n    // Create the application and start the update loop\n    const app = new pc.Application(canvas, {});\n\n    const assets = {\n        statue: new pc.Asset("statue", "container", {\n            url: "/static/assets/models/statue.glb",\n        }),\n    };\n\n    const assetListLoader = new pc.AssetListLoader(\n        Object.values(assets),\n        app.assets\n    );\n    assetListLoader.load(() => {\n        // Set the canvas to fill the window and automatically change resolution to be the same as the canvas size\n        app.setCanvasFillMode(pc.FILLMODE_FILL_WINDOW);\n        app.setCanvasResolution(pc.RESOLUTION_AUTO);\n\n        // Create an Entity with a camera component\n        const camera = new pc.Entity();\n        camera.addComponent("camera", {\n            clearColor: new pc.Color(0.1, 0.1, 0.1),\n        });\n        camera.translate(0, 7, 24);\n\n        // Add entity into scene hierarchy\n        app.root.addChild(camera);\n        app.start();\n\n        // Create a new Entity\n        const entity = assets.statue.resource.instantiateRenderEntity();\n        app.root.addChild(entity);\n\n        // Create the shader definition and shader from the vertex and fragment shaders\n        const shaderDefinition = {\n            attributes: {\n                aPosition: pc.SEMANTIC_POSITION,\n            },\n            vshader: files["shader.vert"],\n            fshader: files["shader.frag"],\n        };\n        const shader = new pc.Shader(app.graphicsDevice, shaderDefinition);\n\n        // Create a new material with the new shader\n        const material = new pc.Material();\n        material.shader = shader;\n\n        // find all render components\n        const renderComponents = entity.findComponents("render");\n\n        // for all render components\n        renderComponents.forEach(function (render) {\n            // For all meshes in the render component, assign new material\n            render.meshInstances.forEach(function (meshInstance) {\n                meshInstance.material = material;\n            });\n\n            // set it to render as points\n            render.renderStyle = pc.RENDERSTYLE_POINTS;\n        });\n\n        let currentTime = 0;\n        app.on("update", function (dt) {\n            // Update the time and pass it to shader\n            currentTime += dt;\n            material.setParameter("uTime", currentTime);\n\n            // Rotate the model\n            entity.rotate(0, 15 * dt, 0);\n        });\n    });\n}\n',nameSlug:"point-cloud",categorySlug:"graphics",files:{"shader.vert":"\n// Attributes per vertex: position\nattribute vec4 aPosition;\n\nuniform mat4   matrix_viewProjection;\nuniform mat4   matrix_model;\nuniform mat4   matrix_view;\n\n// time\nuniform float uTime;\n\n// Color to fragment program\nvarying vec4 outColor;\n\nvoid main(void)\n{\n    // Transform the geometry\n    mat4 modelView = matrix_view * matrix_model;\n    mat4 modelViewProj = matrix_viewProjection * matrix_model;\n    gl_Position = modelViewProj * aPosition;\n\n    // vertex in world space\n    vec4 vertexWorld = matrix_model * aPosition;\n\n    // use sine way to generate intensity value based on time and also y-coordinate of model\n    float intensity = abs(sin(0.6 * vertexWorld.y + uTime * 1.0));\n\n    // intensity smoothly drops to zero for smaller values than 0.9\n    intensity = smoothstep(0.9, 1.0, intensity);\n\n    // point size depends on intensity\n    gl_PointSize = clamp(12.0 * intensity, 1.0, 64.0);\n\n    // color mixes red and yellow based on intensity\n    outColor = mix(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.9, 0.0, 0.0, 1.0), intensity);\n}","shader.frag":"\nprecision lowp float;\nvarying vec4 outColor;\n\nvoid main(void)\n{\n    // just output color supplied by vertex shader\n    gl_FragColor = outColor;\n}"}},portal:{typeScriptFunction:"function example(canvas: HTMLCanvasElement, deviceType: string): void {\n\n    const assets = {\n        'helipad': new pc.Asset('helipad-env-atlas', 'texture', { url: '/static/assets/cubemaps/helipad-env-atlas.png' }, { type: pc.TEXTURETYPE_RGBP, mipmaps: false }),\n        'portal': new pc.Asset('portal', 'container', { url: '/static/assets/models/portal.glb' }),\n        'statue': new pc.Asset('statue', 'container', { url: '/static/assets/models/statue.glb' }),\n        'bitmoji': new pc.Asset('bitmoji', 'container', { url: '/static/assets/models/bitmoji.glb' })\n    };\n\n    const gfxOptions = {\n        deviceTypes: [deviceType],\n        glslangUrl: '/static/lib/glslang/glslang.js',\n        twgslUrl: '/static/lib/twgsl/twgsl.js'\n    };\n\n    pc.createGraphicsDevice(canvas, gfxOptions).then((device: pc.GraphicsDevice) => {\n\n        const createOptions = new pc.AppOptions();\n        createOptions.graphicsDevice = device;\n\n        createOptions.componentSystems = [\n            // @ts-ignore\n            pc.RenderComponentSystem,\n            // @ts-ignore\n            pc.CameraComponentSystem,\n            // @ts-ignore\n            pc.LightComponentSystem,\n            // @ts-ignore\n            pc.ScriptComponentSystem\n        ];\n        createOptions.resourceHandlers = [\n            // @ts-ignore\n            pc.TextureHandler,\n            // @ts-ignore\n            pc.ContainerHandler,\n            // @ts-ignore\n            pc.ScriptHandler\n        ];\n\n        const app = new pc.AppBase(canvas);\n        app.init(createOptions);\n\n        // Set the canvas to fill the window and automatically change resolution to be the same as the canvas size\n        app.setCanvasFillMode(pc.FILLMODE_FILL_WINDOW);\n        app.setCanvasResolution(pc.RESOLUTION_AUTO);\n\n        const assetListLoader = new pc.AssetListLoader(Object.values(assets), app.assets);\n        assetListLoader.load(() => {\n\n            app.start();\n\n            // set skybox - this DDS file was 'prefiltered' in the PlayCanvas Editor and then downloaded.\n            app.scene.envAtlas = assets.helipad.resource;\n            app.scene.toneMapping = pc.TONEMAP_ACES;\n            app.scene.skyboxMip = 1;\n            app.scene.skyboxIntensity = 0.7;\n\n            ////////////////////////////////\n            // Script to rotate the scene //\n            ////////////////////////////////\n            const Rotator = pc.createScript('rotator');\n\n            let t = 0;\n\n            Rotator.prototype.update = function (dt: number) {\n                t += dt;\n                this.entity.setEulerAngles(0, Math.sin(t) * 40, 0);\n            };\n\n            //////////////////////////////////////////////////\n            // Script to set up rendering the portal itself //\n            //////////////////////////////////////////////////\n            const Portal = pc.createScript('portal');\n\n            // initialize code called once per entity\n            Portal.prototype.initialize = function () {\n\n                // increment value in stencil (from 0 to 1) for stencil geometry\n                const stencil = new pc.StencilParameters({\n                    zpass: pc.STENCILOP_INCREMENT\n                });\n\n                // set the stencil and other parameters on all materials\n                const renders: Array<pc.RenderComponent> = this.entity.findComponents(\"render\");\n                renders.forEach((render) => {\n                    for (const meshInstance of render.meshInstances) {\n                        const mat = meshInstance.material;\n                        mat.stencilBack = mat.stencilFront = stencil;\n\n                        // We only want to write to the stencil buffer\n                        mat.depthWrite = false;\n                        mat.redWrite = mat.greenWrite = mat.blueWrite = mat.alphaWrite = false;\n                        mat.update();\n                    }\n                });\n            };\n\n            /////////////////////////////////////////////////////////////////////////////\n            // Script to set stencil options for entities inside or outside the portal //\n            /////////////////////////////////////////////////////////////////////////////\n\n            const PortalGeometry = pc.createScript('portalGeometry');\n\n            PortalGeometry.attributes.add('inside', {\n                type: 'boolean',\n                default: true,\n                title: 'True indicating the geometry is inside the portal, false for outside'\n            });\n\n            PortalGeometry.prototype.initialize = function () {\n\n                // based on value in the stencil buffer (0 outside, 1 inside), either render\n                // the geometry when the value is equal, or not equal to zero.\n                const stencil = new pc.StencilParameters({\n                    func: this.inside ? pc.FUNC_NOTEQUAL : pc.FUNC_EQUAL,\n                    ref: 0\n                });\n\n                // set the stencil parameters on all materials\n                const renders: Array<pc.RenderComponent> = this.entity.findComponents(\"render\");\n                renders.forEach((render) => {\n                    for (const meshInstance of render.meshInstances) {\n                        meshInstance.material.stencilBack = meshInstance.material.stencilFront = stencil;\n                    }\n                });\n            };\n\n            /////////////////////////////////////////////////////////////////////////////\n\n            // find world layer - majority of objects render to this layer\n            const worldLayer = app.scene.layers.getLayerByName(\"World\");\n\n            // find skybox layer - to enable it for the camera\n            const skyboxLayer = app.scene.layers.getLayerByName(\"Skybox\");\n\n            const uiLayer = app.scene.layers.getLayerByName(\"UI\");\n\n            // portal layer - this is where the portal geometry is written to the stencil\n            // buffer, and this needs to render first, so insert it before the world layer\n            const portalLayer = new pc.Layer({ name: \"Portal\" });\n            app.scene.layers.insert(portalLayer, 0);\n\n            // Create an Entity with a camera component\n            // this camera renders both world and portal layers\n            const camera = new pc.Entity();\n            camera.addComponent('camera', {\n                layers: [worldLayer.id, portalLayer.id, skyboxLayer.id, uiLayer.id]\n            });\n            camera.setLocalPosition(7, 5.5, 7.1);\n            camera.setLocalEulerAngles(-27, 45, 0);\n            app.root.addChild(camera);\n\n            // Create an Entity with a directional light component\n            const light = new pc.Entity();\n            light.addComponent('light', {\n                type: 'directional',\n                color: new pc.Color(1, 1, 1)\n            });\n            light.setEulerAngles(45, 35, 0);\n            app.root.addChild(light);\n\n            // Create a root for the graphical scene\n            const group = new pc.Entity();\n            group.addComponent('script');\n            group.script.create('rotator');\n            app.root.addChild(group);\n\n            // Create the portal entity - this plane is written to stencil buffer,\n            // which is then used to test for inside / outside. This needs to render\n            // before all elements requiring stencil buffer, so add to to a portalLayer.\n            // This is the plane that fills the inside of the portal geometry.\n            const portal = new pc.Entity(\"Portal\");\n            portal.addComponent('render', {\n                type: 'plane',\n                material: new pc.StandardMaterial(),\n                layers: [portalLayer.id]\n            });\n            portal.addComponent('script');\n            portal.script.create('portal'); // comment out this line to see the geometry\n            portal.setLocalPosition(0, 0.4, -0.3);\n            portal.setLocalEulerAngles(90, 0, 0);\n            portal.setLocalScale(3.7, 1, 6.7);\n            group.addChild(portal);\n\n            // Create the portal visual geometry\n            const portalEntity = assets.portal.resource.instantiateRenderEntity();\n            portalEntity.setLocalPosition(0, -3, 0);\n            portalEntity.setLocalScale(0.02, 0.02, 0.02);\n            group.addChild(portalEntity);\n\n            // Create a statue entity, whic is visible inside the portal only\n            const statue = assets.statue.resource.instantiateRenderEntity();\n            statue.addComponent('script');\n            statue.script.create('portalGeometry', {\n                attributes: {\n                    inside: true\n                }\n            });\n            statue.setLocalPosition(0, -1, -2);\n            statue.setLocalScale(0.25, 0.25, 0.25);\n            group.addChild(statue);\n\n            // Create a bitmoji entity, whic is visible outside the portal only\n            const bitmoji = assets.bitmoji.resource.instantiateRenderEntity();\n            bitmoji.addComponent('script');\n            bitmoji.script.create('portalGeometry', {\n                attributes: {\n                    inside: false\n                }\n            });\n            bitmoji.setLocalPosition(0, -1, -2);\n            bitmoji.setLocalScale(2.5, 2.5, 2.5);\n            group.addChild(bitmoji);\n        });\n    });\n}",javaScriptFunction:'function example(canvas, deviceType) {\n    const assets = {\n        helipad: new pc.Asset(\n            "helipad-env-atlas",\n            "texture",\n            { url: "/static/assets/cubemaps/helipad-env-atlas.png" },\n            { type: pc.TEXTURETYPE_RGBP, mipmaps: false }\n        ),\n        portal: new pc.Asset("portal", "container", {\n            url: "/static/assets/models/portal.glb",\n        }),\n        statue: new pc.Asset("statue", "container", {\n            url: "/static/assets/models/statue.glb",\n        }),\n        bitmoji: new pc.Asset("bitmoji", "container", {\n            url: "/static/assets/models/bitmoji.glb",\n        }),\n    };\n\n    const gfxOptions = {\n        deviceTypes: [deviceType],\n        glslangUrl: "/static/lib/glslang/glslang.js",\n        twgslUrl: "/static/lib/twgsl/twgsl.js",\n    };\n\n    pc.createGraphicsDevice(canvas, gfxOptions).then((device) => {\n        const createOptions = new pc.AppOptions();\n        createOptions.graphicsDevice = device;\n\n        createOptions.componentSystems = [\n            // @ts-ignore\n            pc.RenderComponentSystem,\n            // @ts-ignore\n            pc.CameraComponentSystem,\n            // @ts-ignore\n            pc.LightComponentSystem,\n            // @ts-ignore\n            pc.ScriptComponentSystem,\n        ];\n\n        createOptions.resourceHandlers = [\n            // @ts-ignore\n            pc.TextureHandler,\n            // @ts-ignore\n            pc.ContainerHandler,\n            // @ts-ignore\n            pc.ScriptHandler,\n        ];\n\n        const app = new pc.AppBase(canvas);\n        app.init(createOptions);\n\n        // Set the canvas to fill the window and automatically change resolution to be the same as the canvas size\n        app.setCanvasFillMode(pc.FILLMODE_FILL_WINDOW);\n        app.setCanvasResolution(pc.RESOLUTION_AUTO);\n\n        const assetListLoader = new pc.AssetListLoader(\n            Object.values(assets),\n            app.assets\n        );\n        assetListLoader.load(() => {\n            app.start();\n\n            // set skybox - this DDS file was \'prefiltered\' in the PlayCanvas Editor and then downloaded.\n            app.scene.envAtlas = assets.helipad.resource;\n            app.scene.toneMapping = pc.TONEMAP_ACES;\n            app.scene.skyboxMip = 1;\n            app.scene.skyboxIntensity = 0.7;\n\n            ////////////////////////////////\n            // Script to rotate the scene //\n            ////////////////////////////////\n            const Rotator = pc.createScript("rotator");\n\n            let t = 0;\n\n            Rotator.prototype.update = function (dt) {\n                t += dt;\n                this.entity.setEulerAngles(0, Math.sin(t) * 40, 0);\n            };\n\n            //////////////////////////////////////////////////\n            // Script to set up rendering the portal itself //\n            //////////////////////////////////////////////////\n            const Portal = pc.createScript("portal");\n\n            // initialize code called once per entity\n            Portal.prototype.initialize = function () {\n                // increment value in stencil (from 0 to 1) for stencil geometry\n                const stencil = new pc.StencilParameters({\n                    zpass: pc.STENCILOP_INCREMENT,\n                });\n\n                // set the stencil and other parameters on all materials\n                const renders = this.entity.findComponents("render");\n                renders.forEach((render) => {\n                    for (const meshInstance of render.meshInstances) {\n                        const mat = meshInstance.material;\n                        mat.stencilBack = mat.stencilFront = stencil;\n\n                        // We only want to write to the stencil buffer\n                        mat.depthWrite = false;\n                        mat.redWrite =\n                            mat.greenWrite =\n                            mat.blueWrite =\n                            mat.alphaWrite =\n                                false;\n                        mat.update();\n                    }\n                });\n            };\n\n            /////////////////////////////////////////////////////////////////////////////\n            // Script to set stencil options for entities inside or outside the portal //\n            /////////////////////////////////////////////////////////////////////////////\n\n            const PortalGeometry = pc.createScript("portalGeometry");\n\n            PortalGeometry.attributes.add("inside", {\n                type: "boolean",\n                default: true,\n                title: "True indicating the geometry is inside the portal, false for outside",\n            });\n\n            PortalGeometry.prototype.initialize = function () {\n                // based on value in the stencil buffer (0 outside, 1 inside), either render\n                // the geometry when the value is equal, or not equal to zero.\n                const stencil = new pc.StencilParameters({\n                    func: this.inside ? pc.FUNC_NOTEQUAL : pc.FUNC_EQUAL,\n                    ref: 0,\n                });\n\n                // set the stencil parameters on all materials\n                const renders = this.entity.findComponents("render");\n                renders.forEach((render) => {\n                    for (const meshInstance of render.meshInstances) {\n                        meshInstance.material.stencilBack =\n                            meshInstance.material.stencilFront = stencil;\n                    }\n                });\n            };\n\n            /////////////////////////////////////////////////////////////////////////////\n\n            // find world layer - majority of objects render to this layer\n            const worldLayer = app.scene.layers.getLayerByName("World");\n\n            // find skybox layer - to enable it for the camera\n            const skyboxLayer = app.scene.layers.getLayerByName("Skybox");\n\n            const uiLayer = app.scene.layers.getLayerByName("UI");\n\n            // portal layer - this is where the portal geometry is written to the stencil\n            // buffer, and this needs to render first, so insert it before the world layer\n            const portalLayer = new pc.Layer({ name: "Portal" });\n            app.scene.layers.insert(portalLayer, 0);\n\n            // Create an Entity with a camera component\n            // this camera renders both world and portal layers\n            const camera = new pc.Entity();\n            camera.addComponent("camera", {\n                layers: [\n                    worldLayer.id,\n                    portalLayer.id,\n                    skyboxLayer.id,\n                    uiLayer.id,\n                ],\n            });\n            camera.setLocalPosition(7, 5.5, 7.1);\n            camera.setLocalEulerAngles(-27, 45, 0);\n            app.root.addChild(camera);\n\n            // Create an Entity with a directional light component\n            const light = new pc.Entity();\n            light.addComponent("light", {\n                type: "directional",\n                color: new pc.Color(1, 1, 1),\n            });\n            light.setEulerAngles(45, 35, 0);\n            app.root.addChild(light);\n\n            // Create a root for the graphical scene\n            const group = new pc.Entity();\n            group.addComponent("script");\n            group.script.create("rotator");\n            app.root.addChild(group);\n\n            // Create the portal entity - this plane is written to stencil buffer,\n            // which is then used to test for inside / outside. This needs to render\n            // before all elements requiring stencil buffer, so add to to a portalLayer.\n            // This is the plane that fills the inside of the portal geometry.\n            const portal = new pc.Entity("Portal");\n            portal.addComponent("render", {\n                type: "plane",\n                material: new pc.StandardMaterial(),\n                layers: [portalLayer.id],\n            });\n            portal.addComponent("script");\n            portal.script.create("portal"); // comment out this line to see the geometry\n            portal.setLocalPosition(0, 0.4, -0.3);\n            portal.setLocalEulerAngles(90, 0, 0);\n            portal.setLocalScale(3.7, 1, 6.7);\n            group.addChild(portal);\n\n            // Create the portal visual geometry\n            const portalEntity =\n                assets.portal.resource.instantiateRenderEntity();\n            portalEntity.setLocalPosition(0, -3, 0);\n            portalEntity.setLocalScale(0.02, 0.02, 0.02);\n            group.addChild(portalEntity);\n\n            // Create a statue entity, whic is visible inside the portal only\n            const statue = assets.statue.resource.instantiateRenderEntity();\n            statue.addComponent("script");\n            statue.script.create("portalGeometry", {\n                attributes: {\n                    inside: true,\n                },\n            });\n            statue.setLocalPosition(0, -1, -2);\n            statue.setLocalScale(0.25, 0.25, 0.25);\n            group.addChild(statue);\n\n            // Create a bitmoji entity, whic is visible outside the portal only\n            const bitmoji = assets.bitmoji.resource.instantiateRenderEntity();\n            bitmoji.addComponent("script");\n            bitmoji.script.create("portalGeometry", {\n                attributes: {\n                    inside: false,\n                },\n            });\n            bitmoji.setLocalPosition(0, -1, -2);\n            bitmoji.setLocalScale(2.5, 2.5, 2.5);\n            group.addChild(bitmoji);\n        });\n    });\n}\n',nameSlug:"portal",categorySlug:"graphics"},"post-effects":{typeScriptFunction:"function example(canvas: HTMLCanvasElement, deviceType: string, data: any): void {\n\n    // set up and load draco module, as the glb we load is draco compressed\n    pc.WasmModule.setConfig('DracoDecoderModule', {\n        glueUrl: '/static/lib/draco/draco.wasm.js',\n        wasmUrl: '/static/lib/draco/draco.wasm.wasm',\n        fallbackUrl: '/static/lib/draco/draco.js'\n    });\n\n    const assets = {\n        'board': new pc.Asset('statue', 'container', { url: '/static/assets/models/chess-board.glb' }),\n        'bloom': new pc.Asset('bloom', 'script', { url: '/static/scripts/posteffects/posteffect-bloom.js' }),\n        'bokeh': new pc.Asset('bokeh', 'script', { url: '/static/scripts/posteffects/posteffect-bokeh.js' }),\n        'sepia': new pc.Asset('sepia', 'script', { url: '/static/scripts/posteffects/posteffect-sepia.js' }),\n        'vignette': new pc.Asset('vignette', 'script', { url: '/static/scripts/posteffects/posteffect-vignette.js' }),\n        'ssao': new pc.Asset('ssao', 'script', { url: '/static/scripts/posteffects/posteffect-ssao.js' }),\n        'font': new pc.Asset('font', 'font', { url: '/static/assets/fonts/arial.json' }),\n        helipad: new pc.Asset('helipad-env-atlas', 'texture', { url: '/static/assets/cubemaps/helipad-env-atlas.png' }, { type: pc.TEXTURETYPE_RGBP, mipmaps: false })\n    };\n\n    const gfxOptions = {\n        deviceTypes: [deviceType],\n        glslangUrl: '/static/lib/glslang/glslang.js',\n        twgslUrl: '/static/lib/twgsl/twgsl.js',\n\n        // WebGPU does not currently support antialiased depth resolve, disable it till we implement a shader resolve solution\n        antialias: false\n    };\n\n    pc.createGraphicsDevice(canvas, gfxOptions).then((device: pc.GraphicsDevice) => {\n\n        const createOptions = new pc.AppOptions();\n        createOptions.graphicsDevice = device;\n        createOptions.keyboard = new pc.Keyboard(document.body);\n\n        createOptions.componentSystems = [\n            // @ts-ignore\n            pc.RenderComponentSystem,\n            // @ts-ignore\n            pc.CameraComponentSystem,\n            // @ts-ignore\n            pc.LightComponentSystem,\n            // @ts-ignore\n            pc.ScriptComponentSystem,\n            // @ts-ignore\n            pc.ScreenComponentSystem,\n            // @ts-ignore\n            pc.ElementComponentSystem\n        ];\n        createOptions.resourceHandlers = [\n            // @ts-ignore\n            pc.ScriptHandler,\n            // @ts-ignore\n            pc.TextureHandler,\n            // @ts-ignore\n            pc.ContainerHandler,\n            // @ts-ignore\n            pc.FontHandler\n        ];\n\n        const app = new pc.AppBase(canvas);\n        app.init(createOptions);\n\n        // Set the canvas to fill the window and automatically change resolution to be the same as the canvas size\n        app.setCanvasFillMode(pc.FILLMODE_FILL_WINDOW);\n        app.setCanvasResolution(pc.RESOLUTION_AUTO);\n\n        const assetListLoader = new pc.AssetListLoader(Object.values(assets), app.assets);\n        assetListLoader.load(() => {\n\n            app.start();\n\n            // setup skydome\n            app.scene.envAtlas = assets.helipad.resource;\n            app.scene.skyboxMip = 2;\n            app.scene.exposure = 1;\n\n            // helper function to create a 3d primitive including its material\n            function createPrimitive(primitiveType: string, position: pc.Vec3, scale: pc.Vec3, brightness: number, allowEmissive = true) {\n\n                // create a material\n                const material = new pc.StandardMaterial();\n                material.gloss = 0.4;\n                material.metalness = 0.6;\n                material.useMetalness = true;\n                material.emissive = pc.Color.YELLOW;\n                material.update();\n\n                // create the primitive using the material\n                const primitive = new pc.Entity();\n                primitive.addComponent('render', {\n                    type: primitiveType,\n                    material: material,\n                    castShadows: false,\n                    receiveShadows: false\n                });\n\n                // set scale and add it to scene\n                primitive.setLocalScale(scale);\n                app.root.addChild(primitive);\n\n                return primitive;\n            }\n\n            // get the instance of the chess board and set up with render component\n            const boardEntity = assets.board.resource.instantiateRenderEntity({\n                castShadows: true,\n                receiveShadows: true\n            });\n            app.root.addChild(boardEntity);\n\n            // create a sphere which represents the point of focus for the bokeh filter\n            const focusPrimitive = createPrimitive(\"sphere\", pc.Vec3.ZERO, new pc.Vec3(3, 3, 3), 1.5, false);\n\n            // add an omni light as a child of this sphere\n            const light = new pc.Entity();\n            light.addComponent(\"light\", {\n                type: \"omni\",\n                color: pc.Color.YELLOW,\n                intensity: 2,\n                range: 150,\n                shadowDistance: 150,\n                castShadows: true\n            });\n            focusPrimitive.addChild(light);\n\n            // Create an Entity with a camera component, and attach postprocessing effects scripts on it\n            const camera: any = new pc.Entity();\n            camera.addComponent(\"camera\", {\n                clearColor: new pc.Color(0.4, 0.45, 0.5),\n                farClip: 500\n            });\n            camera.addComponent(\"script\");\n            data.set('scripts', {\n                ssao: {\n                    enabled: true,\n                    radius: 5,\n                    samples: 16,\n                    brightness: 0,\n                    downscale: 1\n                },\n                bloom: {\n                    enabled: true,\n                    bloomIntensity: 0.8,\n                    bloomThreshold: 0.7,\n                    blurAmount: 15\n                },\n                sepia: {\n                    enabled: true,\n                    amount: 0.4\n                },\n                vignette: {\n                    enabled: true,\n                    darkness: 1,\n                    offset: 1.2\n                },\n                bokeh: {\n                    enabled: true,\n                    aperture: 0.1,\n                    maxBlur: 0.02\n                }\n            });\n\n            Object.keys(data.get('scripts')).forEach((key) => {\n                camera.script.create(key, {\n                    attributes: data.get(`scripts.${key}`)\n                });\n            });\n\n            // position the camera in the world\n            camera.setLocalPosition(0, 30, -60);\n            camera.lookAt(0, 0, 100);\n            app.root.addChild(camera);\n\n            // Allow user to toggle individual post effects\n            app.keyboard.on(\"keydown\", function (e: any) {\n                // if the user is editing an input field, ignore key presses\n                if (e.element.constructor.name === 'HTMLInputElement') return;\n                switch (e.key) {\n                    case pc.KEY_1:\n                        data.set('scripts.bloom.enabled', !data.get('scripts.bloom.enabled'));\n                        break;\n                    case pc.KEY_2:\n                        data.set('scripts.sepia.enabled', !data.get('scripts.sepia.enabled'));\n                        break;\n                    case pc.KEY_3:\n                        data.set('scripts.vignette.enabled', !data.get('scripts.vignette.enabled'));\n                        break;\n                    case pc.KEY_4:\n                        data.set('scripts.bokeh.enabled', !data.get('scripts.bokeh.enabled'));\n                        break;\n                    case pc.KEY_5:\n                        data.set('scripts.ssao.enabled', !data.get('scripts.ssao.enabled'));\n                        break;\n                    case pc.KEY_6:\n                        data.set('data.postProcessUI.enabled', !data.get('data.postProcessUI.enabled'));\n                        break;\n                }\n            }, this);\n\n            // Create a 2D screen to place UI on\n            const screen = new pc.Entity();\n            screen.addComponent(\"screen\", {\n                referenceResolution: new pc.Vec2(1280, 720),\n                scaleBlend: 0.5,\n                scaleMode: pc.SCALEMODE_BLEND,\n                screenSpace: true\n            });\n            app.root.addChild(screen);\n\n            // create a text element to show which effects are enabled\n            const text = new pc.Entity();\n            text.addComponent(\"element\", {\n                anchor: new pc.Vec4(0.1, 0.1, 0.5, 0.5),\n                fontAsset: assets.font,\n                fontSize: 28,\n                pivot: new pc.Vec2(0.5, 0.1),\n                type: pc.ELEMENTTYPE_TEXT,\n                alignment: pc.Vec2.ZERO\n            });\n            screen.addChild(text);\n\n            // Display some UI text which the post processing can be tested against\n            text.element.text = 'Test UI Text';\n\n            // update things every frame\n            let angle = 0;\n            app.on(\"update\", function (dt: any) {\n                angle += dt;\n\n                // rotate the skydome\n                app.scene.skyboxRotation = new pc.Quat().setFromEulerAngles(0, angle * 20, 0);\n\n                // move the focus sphere in the world\n                const focusPosition = new pc.Vec3(0, 30, Math.sin(1 + angle * 0.3) * 90);\n                focusPrimitive.setPosition(focusPosition);\n\n                // set the focus distance to the bokeh effect\n                // - it's a negative distance between the camera and the focus sphere\n                camera.script.bokeh.focus = -focusPosition.sub(camera.getPosition()).length();\n\n                // orbit the camera around\n                camera.setLocalPosition(110 * Math.sin(angle * 0.2), 45, 110 * Math.cos(angle * 0.2));\n                focusPosition.y -= 20;\n                camera.lookAt(focusPosition);\n\n                // display the depth texture if it was rendered\n                if (data.get('scripts.bokeh.enabled') || data.get('scripts.ssao.enabled')) {\n                    // @ts-ignore engine-tsd\n                    app.drawDepthTexture(0.7, -0.7, 0.5, -0.5);\n                }\n            });\n\n            data.on('*:set', (path: string, value: any) => {\n                const pathArray = path.split('.');\n                if (pathArray[0] === 'scripts') {\n                    camera.script[pathArray[1]][pathArray[2]] = value;\n                } else {\n                    camera.camera.disablePostEffectsLayer = camera.camera.disablePostEffectsLayer === pc.LAYERID_UI ? undefined : pc.LAYERID_UI;\n                }\n            });\n        });\n    });\n}",javaScriptFunction:'function example(canvas, deviceType, data) {\n    // set up and load draco module, as the glb we load is draco compressed\n    pc.WasmModule.setConfig("DracoDecoderModule", {\n        glueUrl: "/static/lib/draco/draco.wasm.js",\n        wasmUrl: "/static/lib/draco/draco.wasm.wasm",\n        fallbackUrl: "/static/lib/draco/draco.js",\n    });\n\n    const assets = {\n        board: new pc.Asset("statue", "container", {\n            url: "/static/assets/models/chess-board.glb",\n        }),\n        bloom: new pc.Asset("bloom", "script", {\n            url: "/static/scripts/posteffects/posteffect-bloom.js",\n        }),\n        bokeh: new pc.Asset("bokeh", "script", {\n            url: "/static/scripts/posteffects/posteffect-bokeh.js",\n        }),\n        sepia: new pc.Asset("sepia", "script", {\n            url: "/static/scripts/posteffects/posteffect-sepia.js",\n        }),\n        vignette: new pc.Asset("vignette", "script", {\n            url: "/static/scripts/posteffects/posteffect-vignette.js",\n        }),\n        ssao: new pc.Asset("ssao", "script", {\n            url: "/static/scripts/posteffects/posteffect-ssao.js",\n        }),\n        font: new pc.Asset("font", "font", {\n            url: "/static/assets/fonts/arial.json",\n        }),\n        helipad: new pc.Asset(\n            "helipad-env-atlas",\n            "texture",\n            { url: "/static/assets/cubemaps/helipad-env-atlas.png" },\n            { type: pc.TEXTURETYPE_RGBP, mipmaps: false }\n        ),\n    };\n\n    const gfxOptions = {\n        deviceTypes: [deviceType],\n        glslangUrl: "/static/lib/glslang/glslang.js",\n        twgslUrl: "/static/lib/twgsl/twgsl.js",\n\n        // WebGPU does not currently support antialiased depth resolve, disable it till we implement a shader resolve solution\n        antialias: false,\n    };\n\n    pc.createGraphicsDevice(canvas, gfxOptions).then((device) => {\n        const createOptions = new pc.AppOptions();\n        createOptions.graphicsDevice = device;\n        createOptions.keyboard = new pc.Keyboard(document.body);\n\n        createOptions.componentSystems = [\n            // @ts-ignore\n            pc.RenderComponentSystem,\n            // @ts-ignore\n            pc.CameraComponentSystem,\n            // @ts-ignore\n            pc.LightComponentSystem,\n            // @ts-ignore\n            pc.ScriptComponentSystem,\n            // @ts-ignore\n            pc.ScreenComponentSystem,\n            // @ts-ignore\n            pc.ElementComponentSystem,\n        ];\n\n        createOptions.resourceHandlers = [\n            // @ts-ignore\n            pc.ScriptHandler,\n            // @ts-ignore\n            pc.TextureHandler,\n            // @ts-ignore\n            pc.ContainerHandler,\n            // @ts-ignore\n            pc.FontHandler,\n        ];\n\n        const app = new pc.AppBase(canvas);\n        app.init(createOptions);\n\n        // Set the canvas to fill the window and automatically change resolution to be the same as the canvas size\n        app.setCanvasFillMode(pc.FILLMODE_FILL_WINDOW);\n        app.setCanvasResolution(pc.RESOLUTION_AUTO);\n\n        const assetListLoader = new pc.AssetListLoader(\n            Object.values(assets),\n            app.assets\n        );\n        assetListLoader.load(() => {\n            app.start();\n\n            // setup skydome\n            app.scene.envAtlas = assets.helipad.resource;\n            app.scene.skyboxMip = 2;\n            app.scene.exposure = 1;\n\n            // helper function to create a 3d primitive including its material\n            function createPrimitive(\n                primitiveType,\n                position,\n                scale,\n                brightness,\n                allowEmissive = true\n            ) {\n                // create a material\n                const material = new pc.StandardMaterial();\n                material.gloss = 0.4;\n                material.metalness = 0.6;\n                material.useMetalness = true;\n                material.emissive = pc.Color.YELLOW;\n                material.update();\n\n                // create the primitive using the material\n                const primitive = new pc.Entity();\n                primitive.addComponent("render", {\n                    type: primitiveType,\n                    material: material,\n                    castShadows: false,\n                    receiveShadows: false,\n                });\n\n                // set scale and add it to scene\n                primitive.setLocalScale(scale);\n                app.root.addChild(primitive);\n\n                return primitive;\n            }\n\n            // get the instance of the chess board and set up with render component\n            const boardEntity = assets.board.resource.instantiateRenderEntity({\n                castShadows: true,\n                receiveShadows: true,\n            });\n            app.root.addChild(boardEntity);\n\n            // create a sphere which represents the point of focus for the bokeh filter\n            const focusPrimitive = createPrimitive(\n                "sphere",\n                pc.Vec3.ZERO,\n                new pc.Vec3(3, 3, 3),\n                1.5,\n                false\n            );\n\n            // add an omni light as a child of this sphere\n            const light = new pc.Entity();\n            light.addComponent("light", {\n                type: "omni",\n                color: pc.Color.YELLOW,\n                intensity: 2,\n                range: 150,\n                shadowDistance: 150,\n                castShadows: true,\n            });\n            focusPrimitive.addChild(light);\n\n            // Create an Entity with a camera component, and attach postprocessing effects scripts on it\n            const camera = new pc.Entity();\n            camera.addComponent("camera", {\n                clearColor: new pc.Color(0.4, 0.45, 0.5),\n                farClip: 500,\n            });\n            camera.addComponent("script");\n            data.set("scripts", {\n                ssao: {\n                    enabled: true,\n                    radius: 5,\n                    samples: 16,\n                    brightness: 0,\n                    downscale: 1,\n                },\n                bloom: {\n                    enabled: true,\n                    bloomIntensity: 0.8,\n                    bloomThreshold: 0.7,\n                    blurAmount: 15,\n                },\n                sepia: {\n                    enabled: true,\n                    amount: 0.4,\n                },\n                vignette: {\n                    enabled: true,\n                    darkness: 1,\n                    offset: 1.2,\n                },\n                bokeh: {\n                    enabled: true,\n                    aperture: 0.1,\n                    maxBlur: 0.02,\n                },\n            });\n\n            Object.keys(data.get("scripts")).forEach((key) => {\n                camera.script.create(key, {\n                    attributes: data.get(`scripts.${key}`),\n                });\n            });\n\n            // position the camera in the world\n            camera.setLocalPosition(0, 30, -60);\n            camera.lookAt(0, 0, 100);\n            app.root.addChild(camera);\n\n            // Allow user to toggle individual post effects\n            app.keyboard.on(\n                "keydown",\n                function (e) {\n                    // if the user is editing an input field, ignore key presses\n                    if (e.element.constructor.name === "HTMLInputElement")\n                        return;\n                    switch (e.key) {\n                        case pc.KEY_1:\n                            data.set(\n                                "scripts.bloom.enabled",\n                                !data.get("scripts.bloom.enabled")\n                            );\n                            break;\n                        case pc.KEY_2:\n                            data.set(\n                                "scripts.sepia.enabled",\n                                !data.get("scripts.sepia.enabled")\n                            );\n                            break;\n                        case pc.KEY_3:\n                            data.set(\n                                "scripts.vignette.enabled",\n                                !data.get("scripts.vignette.enabled")\n                            );\n                            break;\n                        case pc.KEY_4:\n                            data.set(\n                                "scripts.bokeh.enabled",\n                                !data.get("scripts.bokeh.enabled")\n                            );\n                            break;\n                        case pc.KEY_5:\n                            data.set(\n                                "scripts.ssao.enabled",\n                                !data.get("scripts.ssao.enabled")\n                            );\n                            break;\n                        case pc.KEY_6:\n                            data.set(\n                                "data.postProcessUI.enabled",\n                                !data.get("data.postProcessUI.enabled")\n                            );\n                            break;\n                    }\n                },\n                this\n            );\n\n            // Create a 2D screen to place UI on\n            const screen = new pc.Entity();\n            screen.addComponent("screen", {\n                referenceResolution: new pc.Vec2(1280, 720),\n                scaleBlend: 0.5,\n                scaleMode: pc.SCALEMODE_BLEND,\n                screenSpace: true,\n            });\n            app.root.addChild(screen);\n\n            // create a text element to show which effects are enabled\n            const text = new pc.Entity();\n            text.addComponent("element", {\n                anchor: new pc.Vec4(0.1, 0.1, 0.5, 0.5),\n                fontAsset: assets.font,\n                fontSize: 28,\n                pivot: new pc.Vec2(0.5, 0.1),\n                type: pc.ELEMENTTYPE_TEXT,\n                alignment: pc.Vec2.ZERO,\n            });\n            screen.addChild(text);\n\n            // Display some UI text which the post processing can be tested against\n            text.element.text = "Test UI Text";\n\n            // update things every frame\n            let angle = 0;\n            app.on("update", function (dt) {\n                angle += dt;\n\n                // rotate the skydome\n                app.scene.skyboxRotation = new pc.Quat().setFromEulerAngles(\n                    0,\n                    angle * 20,\n                    0\n                );\n\n                // move the focus sphere in the world\n                const focusPosition = new pc.Vec3(\n                    0,\n                    30,\n                    Math.sin(1 + angle * 0.3) * 90\n                );\n                focusPrimitive.setPosition(focusPosition);\n\n                // set the focus distance to the bokeh effect\n                // - it\'s a negative distance between the camera and the focus sphere\n                camera.script.bokeh.focus = -focusPosition\n                    .sub(camera.getPosition())\n                    .length();\n\n                // orbit the camera around\n                camera.setLocalPosition(\n                    110 * Math.sin(angle * 0.2),\n                    45,\n                    110 * Math.cos(angle * 0.2)\n                );\n                focusPosition.y -= 20;\n                camera.lookAt(focusPosition);\n\n                // display the depth texture if it was rendered\n                if (\n                    data.get("scripts.bokeh.enabled") ||\n                    data.get("scripts.ssao.enabled")\n                ) {\n                    // @ts-ignore engine-tsd\n                    app.drawDepthTexture(0.7, -0.7, 0.5, -0.5);\n                }\n            });\n\n            data.on("*:set", (path, value) => {\n                const pathArray = path.split(".");\n                if (pathArray[0] === "scripts") {\n                    camera.script[pathArray[1]][pathArray[2]] = value;\n                } else {\n                    camera.camera.disablePostEffectsLayer =\n                        camera.camera.disablePostEffectsLayer === pc.LAYERID_UI\n                            ? undefined\n                            : pc.LAYERID_UI;\n                }\n            });\n        });\n    });\n}\n',nameSlug:"post-effects",categorySlug:"graphics"},"reflection-box":{typeScriptFunction:"function example(canvas: HTMLCanvasElement, deviceType: string, data: any): void {\n\n    const assets = {\n        'script1': new pc.Asset('script', 'script', { url: '/static/scripts/camera/orbit-camera.js' }),\n        'script2': new pc.Asset('script', 'script', { url: '/static/scripts/utils/cubemap-renderer.js' }),\n        'normal': new pc.Asset('normal', 'texture', { url: '/static/assets/textures/normal-map.png' })\n    };\n\n    const gfxOptions = {\n        deviceTypes: [deviceType],\n        glslangUrl: '/static/lib/glslang/glslang.js',\n        twgslUrl: '/static/lib/twgsl/twgsl.js'\n    };\n\n    pc.createGraphicsDevice(canvas, gfxOptions).then((device: pc.GraphicsDevice) => {\n\n        const createOptions = new pc.AppOptions();\n        createOptions.graphicsDevice = device;\n        createOptions.mouse = new pc.Mouse(document.body);\n        createOptions.touch = new pc.TouchDevice(document.body);\n\n        createOptions.componentSystems = [\n            // @ts-ignore\n            pc.RenderComponentSystem,\n            // @ts-ignore\n            pc.CameraComponentSystem,\n            // @ts-ignore\n            pc.LightComponentSystem,\n            // @ts-ignore\n            pc.ScriptComponentSystem\n        ];\n        createOptions.resourceHandlers = [\n            // @ts-ignore\n            pc.ScriptHandler,\n            // @ts-ignore\n            pc.TextureHandler,\n            // @ts-ignore\n            pc.ContainerHandler\n        ];\n\n        const app = new pc.AppBase(canvas);\n        app.init(createOptions);\n\n        // Set the canvas to fill the window and automatically change resolution to be the same as the canvas size\n        app.setCanvasFillMode(pc.FILLMODE_FILL_WINDOW);\n        app.setCanvasResolution(pc.RESOLUTION_AUTO);\n\n        const assetListLoader = new pc.AssetListLoader(Object.values(assets), app.assets);\n        assetListLoader.load(() => {\n\n            app.start();\n\n            data.set('settings', {\n                updateFrequency: 10,\n                gloss: 0.8,\n                metalness: 0.9,\n                bumpiness: 0.2,\n                reflectivity: 0.5\n            });\n\n            // get existing layers\n            const worldLayer = app.scene.layers.getLayerByName(\"World\");\n            const uiLayer = app.scene.layers.getLayerByName(\"UI\");\n\n            // create a layer for object that do not render into reflection cubemap\n            const excludedLayer = new pc.Layer({ name: \"Excluded\" });\n            app.scene.layers.insert(excludedLayer, app.scene.layers.getTransparentIndex(worldLayer) + 1);\n\n            // create an envAtlas texture, which will hold a prefiltered lighting generated from the cubemap.\n            // This represents a reflection prefiltered for different levels of roughness\n            const envAtlas = new pc.Texture(app.graphicsDevice, {\n                width: 512,\n                height: 512,\n                format: pc.PIXELFORMAT_RGBA8,\n                type: pc.TEXTURETYPE_RGBM,\n                projection: pc.TEXTUREPROJECTION_EQUIRECT,\n                addressU: pc.ADDRESS_CLAMP_TO_EDGE,\n                addressV: pc.ADDRESS_CLAMP_TO_EDGE,\n                mipmaps: false\n            });\n\n            // material for the walls\n            const roomMaterial = new pc.StandardMaterial();\n            roomMaterial.useMetalness = true;\n            roomMaterial.diffuse = pc.Color.WHITE;\n            roomMaterial.normalMap = assets.normal.resource;\n            roomMaterial.normalMapTiling.set(5, 5);\n            roomMaterial.bumpiness = 0.1;\n            roomMaterial.gloss = 0.9;\n            roomMaterial.reflectivity = 0.3;\n            // @ts-ignore\n            roomMaterial.envAtlas = envAtlas; // use reflection from env atlas\n            roomMaterial.metalness = 0.5;\n\n            // the material uses box projected cubemap for reflections. Set its bounding box the the size of the room\n            // so that the reflections line up\n            roomMaterial.cubeMapProjection = pc.CUBEPROJ_BOX;\n            roomMaterial.cubeMapProjectionBox = new pc.BoundingBox(new pc.Vec3(0, 200, 0), new pc.Vec3(400, 200, 400));\n            roomMaterial.update();\n\n            // material for the magenta emissive beams\n            const emissiveMaterial = new pc.StandardMaterial();\n            emissiveMaterial.emissive = pc.Color.MAGENTA;\n            emissiveMaterial.diffuse = pc.Color.BLACK;\n            emissiveMaterial.update();\n\n            // material for the white sphere representing an omni light\n            const lightMaterial = new pc.StandardMaterial();\n            lightMaterial.emissive = pc.Color.WHITE;\n            lightMaterial.diffuse = pc.Color.BLACK;\n            lightMaterial.update();\n\n            // material for the reflective sphere in the center\n            const sphereMaterial = new pc.StandardMaterial();\n            sphereMaterial.useMetalness = true;\n            sphereMaterial.diffuse = pc.Color.WHITE;\n            sphereMaterial.normalMap = assets.normal.resource;\n            sphereMaterial.normalMapTiling.set(5, 5);\n            sphereMaterial.bumpiness = 0.7;\n            sphereMaterial.gloss = 0.3;\n            sphereMaterial.metalness = 0.7;\n            sphereMaterial.reflectivity = 0.3;\n            // @ts-ignore\n            sphereMaterial.envAtlas = envAtlas; // use reflection from env atlas\n            sphereMaterial.update();\n\n            let videoTexture : pc.Texture;\n            if (!app.graphicsDevice.isWebGPU) {\n                // set up video playback into a texture\n                videoTexture = new pc.Texture(app.graphicsDevice, {\n                    format: pc.PIXELFORMAT_RGB565,\n                    mipmaps: false,\n                    minFilter: pc.FILTER_LINEAR,\n                    magFilter: pc.FILTER_LINEAR,\n                    addressU: pc.ADDRESS_CLAMP_TO_EDGE,\n                    addressV: pc.ADDRESS_CLAMP_TO_EDGE\n                });\n\n                // create a HTML element with the video\n                const video: HTMLVideoElement = document.createElement('video');\n                video.id = 'vid';\n                video.loop = true;\n                video.muted = true;\n                video.autoplay = true;\n                video.playsInline = true;\n                video.crossOrigin = \"anonymous\";\n                video.setAttribute('style', 'display: block; width: 1px; height: 1px; position: absolute; opacity: 0; z-index: -1000; top: 0px; pointer-events: none');\n                video.src = '/static/assets/video/SampleVideo_1280x720_1mb.mp4';\n                document.body.append(video);\n                video.addEventListener('canplaythrough', function () {\n                    videoTexture.setSource(video);\n                });\n            }\n\n            // materials used on the TV screen to display the video texture\n            const screenMaterial = new pc.StandardMaterial();\n            screenMaterial.useLighting = false;\n            screenMaterial.emissiveMap = videoTexture;\n            screenMaterial.update();\n\n            // helper function to create a 3d primitive including its material\n            function createPrimitive(primitiveType: string, position: pc.Vec3, scale: pc.Vec3, material: pc.Material) {\n\n                // create the primitive using the material\n                const primitive = new pc.Entity();\n                primitive.addComponent('render', {\n                    type: primitiveType,\n                    material: material,\n                    layers: [worldLayer.id, excludedLayer.id],\n                    castShadows: false,\n                    receiveShadows: false\n                });\n\n                // set position and scale and add it to scene\n                primitive.setLocalPosition(position);\n                primitive.setLocalScale(scale);\n                app.root.addChild(primitive);\n            }\n\n            // create the ground plane from the boxes\n            createPrimitive(\"box\", new pc.Vec3(0, 0, 0), new pc.Vec3(800, 2, 800), roomMaterial);\n            createPrimitive(\"box\", new pc.Vec3(0, 400, 0), new pc.Vec3(800, 2, 800), roomMaterial);\n\n            // walls\n            createPrimitive(\"box\", new pc.Vec3(400, 200, 0), new pc.Vec3(2, 400, 800), roomMaterial);\n            createPrimitive(\"box\", new pc.Vec3(-400, 200, 0), new pc.Vec3(2, 400, 800), roomMaterial);\n            createPrimitive(\"box\", new pc.Vec3(0, 200, -400), new pc.Vec3(800, 400, 0), roomMaterial);\n            createPrimitive(\"box\", new pc.Vec3(0, 200, 400), new pc.Vec3(800, 400, 0), roomMaterial);\n\n            // emissive pillars\n            createPrimitive(\"box\", new pc.Vec3(400, 200, -50), new pc.Vec3(20, 400, 20), emissiveMaterial);\n            createPrimitive(\"box\", new pc.Vec3(400, 200, 50), new pc.Vec3(20, 400, 20), emissiveMaterial);\n            createPrimitive(\"box\", new pc.Vec3(-400, 200, 50), new pc.Vec3(20, 400, 20), emissiveMaterial);\n            createPrimitive(\"box\", new pc.Vec3(-400, 200, -50), new pc.Vec3(20, 400, 20), emissiveMaterial);\n            createPrimitive(\"box\", new pc.Vec3(0, 400, 50), new pc.Vec3(800, 20, 20), emissiveMaterial);\n            createPrimitive(\"box\", new pc.Vec3(0, 400, -50), new pc.Vec3(800, 20, 20), emissiveMaterial);\n\n            // screen\n            createPrimitive(\"box\", new pc.Vec3(0, 200, 400), new pc.Vec3(500, 250, 5), screenMaterial);\n\n            // shiny sphere\n            const sphereEntity: pc.Entity = new pc.Entity();\n            sphereEntity.addComponent(\"render\", {\n                type: \"sphere\",\n                material: sphereMaterial,\n                castShadows: false,\n                receiveShadows: false\n            });\n            sphereEntity.setLocalScale(300, 300, 300);\n            sphereEntity.setLocalPosition(0, 150, 0);\n            app.root.addChild(sphereEntity);\n\n            // create an omni light white orbits the room to avoid it being completely dark\n            const lightOmni = new pc.Entity();\n            lightOmni.addComponent(\"light\", {\n                type: \"omni\",\n                layers: [excludedLayer.id], // add it to excluded layer, we don't want the light captured in the reflection\n                castShadows: false,\n                color: pc.Color.WHITE,\n                intensity: 0.2,\n                range: 1000\n            });\n\n            // add a white sphere to light so that we can see where it is. This sphere is excluded from the reflections.\n            lightOmni.addComponent(\"render\", {\n                type: \"sphere\",\n                layers: [excludedLayer.id],\n                material: lightMaterial,\n                castShadows: false,\n                receiveShadows: false\n            });\n            lightOmni.setLocalScale(20, 20, 20);\n            app.root.addChild(lightOmni);\n\n            // create an Entity with a camera component\n            const camera = new pc.Entity(\"MainCamera\");\n            camera.addComponent(\"camera\", {\n                fov: 100,\n                layers: [worldLayer.id, excludedLayer.id, uiLayer.id],\n                farClip: 1500\n            });\n            camera.setLocalPosition(270, 90, -260);\n\n            // add orbit camera script with a mouse and a touch support\n            camera.addComponent(\"script\");\n            camera.script.create(\"orbitCamera\", {\n                attributes: {\n                    inertiaFactor: 0.2,\n                    distanceMax: 390,\n                    frameOnStart: false\n                }\n            });\n            camera.script.create(\"orbitCameraInputMouse\");\n            camera.script.create(\"orbitCameraInputTouch\");\n            app.root.addChild(camera);\n\n            // create a probe object with cubemapRenderer script which takes care of rendering dynamic cubemap\n            const probe = new pc.Entity('probeCamera');\n            probe.addComponent('script');\n\n            // add camera component to the probe - this defines camera properties for cubemap rendering\n            probe.addComponent('camera', {\n\n                // optimization - no need to clear as all pixels get overwritten\n                clearColorBuffer: false,\n\n                // priority - render before world camera\n                priority: -1,\n\n                // only render meshes on the worldLayer (and not excluded layer)\n                layers: [worldLayer.id],\n\n                // disable as this is not a camera that renders cube map but only a container for properties for cube map rendering\n                enabled: false,\n\n                nearClip: 1,\n                farClip: 500\n            });\n\n            // Add a cubemap renderer script, which renders to a cubemap of size 128 with mipmaps, which is directly useable\n            // as a lighting source for envAtlas generation\n            // Position it in the center of the room.\n            probe.script.create('cubemapRenderer', {\n                attributes: {\n                    resolution: 128,\n                    mipmaps: true,\n                    depth: true\n                }\n            });\n            probe.setPosition(0, 200, 0);\n            app.root.addChild(probe);\n\n            // handle onCubemapPostRender event fired by the cubemapRenderer when all faces of the cubemap are done rendering\n            probe.on('onCubemapPostRender', () => {\n\n                // prefilter just rendered cubemap into envAtlas, so that it can be used for reflection during the rest of the frame\n                // @ts-ignore\n                pc.EnvLighting.generateAtlas(probe.script.cubemapRenderer.cubeMap, {\n                    target: envAtlas\n                });\n            });\n\n            // Set an update function on the app's update event\n            let time = 0;\n            let updateProbeCount = 1;\n            let updateVideo = true;\n            app.on(\"update\", function (dt: number) {\n                time += dt * 0.3;\n\n                // Update the video data to the texture every other frame\n                if (updateVideo && videoTexture) {\n                    videoTexture.upload();\n                }\n                updateVideo = !updateVideo;\n\n                // move the light around\n                lightOmni.setLocalPosition(300 * Math.sin(time), 300, 300 * Math.cos(time));\n\n                // update the reflection probe as needed\n                const updateFrequency = data.get('settings.updateFrequency');\n                updateProbeCount--;\n                if (updateFrequency === 0)\n                    updateProbeCount = 1;\n\n                if (updateProbeCount <= 0) {\n                    // enable probe rendering\n                    probe.enabled = true;\n                    updateProbeCount = updateFrequency;\n                } else {\n                    probe.enabled = false;\n                }\n\n                // update material properties based on settings\n                const gloss = data.get('settings.gloss');\n                const metalness = data.get('settings.metalness');\n                const bumpiness = data.get('settings.bumpiness');\n                const reflectivity = data.get('settings.reflectivity');\n\n                roomMaterial.gloss = gloss;\n                roomMaterial.metalness = metalness;\n                roomMaterial.bumpiness = bumpiness;\n                roomMaterial.reflectivity = reflectivity;\n                roomMaterial.update();\n\n                sphereMaterial.gloss = gloss;\n                sphereMaterial.metalness = metalness;\n                sphereMaterial.bumpiness = bumpiness;\n                sphereMaterial.reflectivity = reflectivity;\n                sphereMaterial.update();\n            });\n        });\n    });\n}",javaScriptFunction:'function example(canvas, deviceType, data) {\n    const assets = {\n        script1: new pc.Asset("script", "script", {\n            url: "/static/scripts/camera/orbit-camera.js",\n        }),\n        script2: new pc.Asset("script", "script", {\n            url: "/static/scripts/utils/cubemap-renderer.js",\n        }),\n        normal: new pc.Asset("normal", "texture", {\n            url: "/static/assets/textures/normal-map.png",\n        }),\n    };\n\n    const gfxOptions = {\n        deviceTypes: [deviceType],\n        glslangUrl: "/static/lib/glslang/glslang.js",\n        twgslUrl: "/static/lib/twgsl/twgsl.js",\n    };\n\n    pc.createGraphicsDevice(canvas, gfxOptions).then((device) => {\n        const createOptions = new pc.AppOptions();\n        createOptions.graphicsDevice = device;\n        createOptions.mouse = new pc.Mouse(document.body);\n        createOptions.touch = new pc.TouchDevice(document.body);\n\n        createOptions.componentSystems = [\n            // @ts-ignore\n            pc.RenderComponentSystem,\n            // @ts-ignore\n            pc.CameraComponentSystem,\n            // @ts-ignore\n            pc.LightComponentSystem,\n            // @ts-ignore\n            pc.ScriptComponentSystem,\n        ];\n\n        createOptions.resourceHandlers = [\n            // @ts-ignore\n            pc.ScriptHandler,\n            // @ts-ignore\n            pc.TextureHandler,\n            // @ts-ignore\n            pc.ContainerHandler,\n        ];\n\n        const app = new pc.AppBase(canvas);\n        app.init(createOptions);\n\n        // Set the canvas to fill the window and automatically change resolution to be the same as the canvas size\n        app.setCanvasFillMode(pc.FILLMODE_FILL_WINDOW);\n        app.setCanvasResolution(pc.RESOLUTION_AUTO);\n\n        const assetListLoader = new pc.AssetListLoader(\n            Object.values(assets),\n            app.assets\n        );\n        assetListLoader.load(() => {\n            app.start();\n\n            data.set("settings", {\n                updateFrequency: 10,\n                gloss: 0.8,\n                metalness: 0.9,\n                bumpiness: 0.2,\n                reflectivity: 0.5,\n            });\n\n            // get existing layers\n            const worldLayer = app.scene.layers.getLayerByName("World");\n            const uiLayer = app.scene.layers.getLayerByName("UI");\n\n            // create a layer for object that do not render into reflection cubemap\n            const excludedLayer = new pc.Layer({ name: "Excluded" });\n            app.scene.layers.insert(\n                excludedLayer,\n                app.scene.layers.getTransparentIndex(worldLayer) + 1\n            );\n\n            // create an envAtlas texture, which will hold a prefiltered lighting generated from the cubemap.\n            // This represents a reflection prefiltered for different levels of roughness\n            const envAtlas = new pc.Texture(app.graphicsDevice, {\n                width: 512,\n                height: 512,\n                format: pc.PIXELFORMAT_RGBA8,\n                type: pc.TEXTURETYPE_RGBM,\n                projection: pc.TEXTUREPROJECTION_EQUIRECT,\n                addressU: pc.ADDRESS_CLAMP_TO_EDGE,\n                addressV: pc.ADDRESS_CLAMP_TO_EDGE,\n                mipmaps: false,\n            });\n\n            // material for the walls\n            const roomMaterial = new pc.StandardMaterial();\n            roomMaterial.useMetalness = true;\n            roomMaterial.diffuse = pc.Color.WHITE;\n            roomMaterial.normalMap = assets.normal.resource;\n            roomMaterial.normalMapTiling.set(5, 5);\n            roomMaterial.bumpiness = 0.1;\n            roomMaterial.gloss = 0.9;\n            roomMaterial.reflectivity = 0.3;\n            // @ts-ignore\n            roomMaterial.envAtlas = envAtlas; // use reflection from env atlas\n            roomMaterial.metalness = 0.5;\n\n            // the material uses box projected cubemap for reflections. Set its bounding box the the size of the room\n            // so that the reflections line up\n            roomMaterial.cubeMapProjection = pc.CUBEPROJ_BOX;\n            roomMaterial.cubeMapProjectionBox = new pc.BoundingBox(\n                new pc.Vec3(0, 200, 0),\n                new pc.Vec3(400, 200, 400)\n            );\n            roomMaterial.update();\n\n            // material for the magenta emissive beams\n            const emissiveMaterial = new pc.StandardMaterial();\n            emissiveMaterial.emissive = pc.Color.MAGENTA;\n            emissiveMaterial.diffuse = pc.Color.BLACK;\n            emissiveMaterial.update();\n\n            // material for the white sphere representing an omni light\n            const lightMaterial = new pc.StandardMaterial();\n            lightMaterial.emissive = pc.Color.WHITE;\n            lightMaterial.diffuse = pc.Color.BLACK;\n            lightMaterial.update();\n\n            // material for the reflective sphere in the center\n            const sphereMaterial = new pc.StandardMaterial();\n            sphereMaterial.useMetalness = true;\n            sphereMaterial.diffuse = pc.Color.WHITE;\n            sphereMaterial.normalMap = assets.normal.resource;\n            sphereMaterial.normalMapTiling.set(5, 5);\n            sphereMaterial.bumpiness = 0.7;\n            sphereMaterial.gloss = 0.3;\n            sphereMaterial.metalness = 0.7;\n            sphereMaterial.reflectivity = 0.3;\n            // @ts-ignore\n            sphereMaterial.envAtlas = envAtlas; // use reflection from env atlas\n            sphereMaterial.update();\n\n            let videoTexture;\n            if (!app.graphicsDevice.isWebGPU) {\n                // set up video playback into a texture\n                videoTexture = new pc.Texture(app.graphicsDevice, {\n                    format: pc.PIXELFORMAT_RGB565,\n                    mipmaps: false,\n                    minFilter: pc.FILTER_LINEAR,\n                    magFilter: pc.FILTER_LINEAR,\n                    addressU: pc.ADDRESS_CLAMP_TO_EDGE,\n                    addressV: pc.ADDRESS_CLAMP_TO_EDGE,\n                });\n\n                // create a HTML element with the video\n                const video = document.createElement("video");\n                video.id = "vid";\n                video.loop = true;\n                video.muted = true;\n                video.autoplay = true;\n                video.playsInline = true;\n                video.crossOrigin = "anonymous";\n                video.setAttribute(\n                    "style",\n                    "display: block; width: 1px; height: 1px; position: absolute; opacity: 0; z-index: -1000; top: 0px; pointer-events: none"\n                );\n                video.src = "/static/assets/video/SampleVideo_1280x720_1mb.mp4";\n                document.body.append(video);\n                video.addEventListener("canplaythrough", function () {\n                    videoTexture.setSource(video);\n                });\n            }\n\n            // materials used on the TV screen to display the video texture\n            const screenMaterial = new pc.StandardMaterial();\n            screenMaterial.useLighting = false;\n            screenMaterial.emissiveMap = videoTexture;\n            screenMaterial.update();\n\n            // helper function to create a 3d primitive including its material\n            function createPrimitive(primitiveType, position, scale, material) {\n                // create the primitive using the material\n                const primitive = new pc.Entity();\n                primitive.addComponent("render", {\n                    type: primitiveType,\n                    material: material,\n                    layers: [worldLayer.id, excludedLayer.id],\n                    castShadows: false,\n                    receiveShadows: false,\n                });\n\n                // set position and scale and add it to scene\n                primitive.setLocalPosition(position);\n                primitive.setLocalScale(scale);\n                app.root.addChild(primitive);\n            }\n\n            // create the ground plane from the boxes\n            createPrimitive(\n                "box",\n                new pc.Vec3(0, 0, 0),\n                new pc.Vec3(800, 2, 800),\n                roomMaterial\n            );\n            createPrimitive(\n                "box",\n                new pc.Vec3(0, 400, 0),\n                new pc.Vec3(800, 2, 800),\n                roomMaterial\n            );\n\n            // walls\n            createPrimitive(\n                "box",\n                new pc.Vec3(400, 200, 0),\n                new pc.Vec3(2, 400, 800),\n                roomMaterial\n            );\n            createPrimitive(\n                "box",\n                new pc.Vec3(-400, 200, 0),\n                new pc.Vec3(2, 400, 800),\n                roomMaterial\n            );\n            createPrimitive(\n                "box",\n                new pc.Vec3(0, 200, -400),\n                new pc.Vec3(800, 400, 0),\n                roomMaterial\n            );\n            createPrimitive(\n                "box",\n                new pc.Vec3(0, 200, 400),\n                new pc.Vec3(800, 400, 0),\n                roomMaterial\n            );\n\n            // emissive pillars\n            createPrimitive(\n                "box",\n                new pc.Vec3(400, 200, -50),\n                new pc.Vec3(20, 400, 20),\n                emissiveMaterial\n            );\n            createPrimitive(\n                "box",\n                new pc.Vec3(400, 200, 50),\n                new pc.Vec3(20, 400, 20),\n                emissiveMaterial\n            );\n            createPrimitive(\n                "box",\n                new pc.Vec3(-400, 200, 50),\n                new pc.Vec3(20, 400, 20),\n                emissiveMaterial\n            );\n            createPrimitive(\n                "box",\n                new pc.Vec3(-400, 200, -50),\n                new pc.Vec3(20, 400, 20),\n                emissiveMaterial\n            );\n            createPrimitive(\n                "box",\n                new pc.Vec3(0, 400, 50),\n                new pc.Vec3(800, 20, 20),\n                emissiveMaterial\n            );\n            createPrimitive(\n                "box",\n                new pc.Vec3(0, 400, -50),\n                new pc.Vec3(800, 20, 20),\n                emissiveMaterial\n            );\n\n            // screen\n            createPrimitive(\n                "box",\n                new pc.Vec3(0, 200, 400),\n                new pc.Vec3(500, 250, 5),\n                screenMaterial\n            );\n\n            // shiny sphere\n            const sphereEntity = new pc.Entity();\n            sphereEntity.addComponent("render", {\n                type: "sphere",\n                material: sphereMaterial,\n                castShadows: false,\n                receiveShadows: false,\n            });\n            sphereEntity.setLocalScale(300, 300, 300);\n            sphereEntity.setLocalPosition(0, 150, 0);\n            app.root.addChild(sphereEntity);\n\n            // create an omni light white orbits the room to avoid it being completely dark\n            const lightOmni = new pc.Entity();\n            lightOmni.addComponent("light", {\n                type: "omni",\n                layers: [excludedLayer.id], // add it to excluded layer, we don\'t want the light captured in the reflection\n                castShadows: false,\n                color: pc.Color.WHITE,\n                intensity: 0.2,\n                range: 1000,\n            });\n\n            // add a white sphere to light so that we can see where it is. This sphere is excluded from the reflections.\n            lightOmni.addComponent("render", {\n                type: "sphere",\n                layers: [excludedLayer.id],\n                material: lightMaterial,\n                castShadows: false,\n                receiveShadows: false,\n            });\n            lightOmni.setLocalScale(20, 20, 20);\n            app.root.addChild(lightOmni);\n\n            // create an Entity with a camera component\n            const camera = new pc.Entity("MainCamera");\n            camera.addComponent("camera", {\n                fov: 100,\n                layers: [worldLayer.id, excludedLayer.id, uiLayer.id],\n                farClip: 1500,\n            });\n            camera.setLocalPosition(270, 90, -260);\n\n            // add orbit camera script with a mouse and a touch support\n            camera.addComponent("script");\n            camera.script.create("orbitCamera", {\n                attributes: {\n                    inertiaFactor: 0.2,\n                    distanceMax: 390,\n                    frameOnStart: false,\n                },\n            });\n            camera.script.create("orbitCameraInputMouse");\n            camera.script.create("orbitCameraInputTouch");\n            app.root.addChild(camera);\n\n            // create a probe object with cubemapRenderer script which takes care of rendering dynamic cubemap\n            const probe = new pc.Entity("probeCamera");\n            probe.addComponent("script");\n\n            // add camera component to the probe - this defines camera properties for cubemap rendering\n            probe.addComponent("camera", {\n                // optimization - no need to clear as all pixels get overwritten\n                clearColorBuffer: false,\n\n                // priority - render before world camera\n                priority: -1,\n\n                // only render meshes on the worldLayer (and not excluded layer)\n                layers: [worldLayer.id],\n\n                // disable as this is not a camera that renders cube map but only a container for properties for cube map rendering\n                enabled: false,\n\n                nearClip: 1,\n                farClip: 500,\n            });\n\n            // Add a cubemap renderer script, which renders to a cubemap of size 128 with mipmaps, which is directly useable\n            // as a lighting source for envAtlas generation\n            // Position it in the center of the room.\n            probe.script.create("cubemapRenderer", {\n                attributes: {\n                    resolution: 128,\n                    mipmaps: true,\n                    depth: true,\n                },\n            });\n            probe.setPosition(0, 200, 0);\n            app.root.addChild(probe);\n\n            // handle onCubemapPostRender event fired by the cubemapRenderer when all faces of the cubemap are done rendering\n            probe.on("onCubemapPostRender", () => {\n                // prefilter just rendered cubemap into envAtlas, so that it can be used for reflection during the rest of the frame\n                // @ts-ignore\n                pc.EnvLighting.generateAtlas(\n                    probe.script.cubemapRenderer.cubeMap,\n                    {\n                        target: envAtlas,\n                    }\n                );\n            });\n\n            // Set an update function on the app\'s update event\n            let time = 0;\n            let updateProbeCount = 1;\n            let updateVideo = true;\n            app.on("update", function (dt) {\n                time += dt * 0.3;\n\n                // Update the video data to the texture every other frame\n                if (updateVideo && videoTexture) {\n                    videoTexture.upload();\n                }\n                updateVideo = !updateVideo;\n\n                // move the light around\n                lightOmni.setLocalPosition(\n                    300 * Math.sin(time),\n                    300,\n                    300 * Math.cos(time)\n                );\n\n                // update the reflection probe as needed\n                const updateFrequency = data.get("settings.updateFrequency");\n                updateProbeCount--;\n                if (updateFrequency === 0) updateProbeCount = 1;\n\n                if (updateProbeCount <= 0) {\n                    // enable probe rendering\n                    probe.enabled = true;\n                    updateProbeCount = updateFrequency;\n                } else {\n                    probe.enabled = false;\n                }\n\n                // update material properties based on settings\n                const gloss = data.get("settings.gloss");\n                const metalness = data.get("settings.metalness");\n                const bumpiness = data.get("settings.bumpiness");\n                const reflectivity = data.get("settings.reflectivity");\n\n                roomMaterial.gloss = gloss;\n                roomMaterial.metalness = metalness;\n                roomMaterial.bumpiness = bumpiness;\n                roomMaterial.reflectivity = reflectivity;\n                roomMaterial.update();\n\n                sphereMaterial.gloss = gloss;\n                sphereMaterial.metalness = metalness;\n                sphereMaterial.bumpiness = bumpiness;\n                sphereMaterial.reflectivity = reflectivity;\n                sphereMaterial.update();\n            });\n        });\n    });\n}\n',nameSlug:"reflection-box",categorySlug:"graphics"},"reflection-cubemap":{typeScriptFunction:'function example(canvas: HTMLCanvasElement, deviceType: string): void {\n\n    const assets = {\n        helipad: new pc.Asset(\'helipad-env-atlas\', \'texture\', { url: \'/static/assets/cubemaps/helipad-env-atlas.png\' }, { type: pc.TEXTURETYPE_RGBP, mipmaps: false }),\n        \'script\': new pc.Asset(\'script\', \'script\', { url: \'/static/scripts/utils/cubemap-renderer.js\' })\n    };\n\n    const gfxOptions = {\n        deviceTypes: [deviceType],\n        glslangUrl: \'/static/lib/glslang/glslang.js\',\n        twgslUrl: \'/static/lib/twgsl/twgsl.js\'\n    };\n\n    pc.createGraphicsDevice(canvas, gfxOptions).then((device: pc.GraphicsDevice) => {\n\n        const createOptions = new pc.AppOptions();\n        createOptions.graphicsDevice = device;\n\n        createOptions.componentSystems = [\n            // @ts-ignore\n            pc.RenderComponentSystem,\n            // @ts-ignore\n            pc.CameraComponentSystem,\n            // @ts-ignore\n            pc.LightComponentSystem,\n            // @ts-ignore\n            pc.ScriptComponentSystem\n        ];\n        createOptions.resourceHandlers = [\n            // @ts-ignore\n            pc.TextureHandler,\n            // @ts-ignore\n            pc.ScriptHandler\n        ];\n\n        const app = new pc.AppBase(canvas);\n        app.init(createOptions);\n\n        // Set the canvas to fill the window and automatically change resolution to be the same as the canvas size\n        app.setCanvasFillMode(pc.FILLMODE_FILL_WINDOW);\n        app.setCanvasResolution(pc.RESOLUTION_AUTO);\n\n        const assetListLoader = new pc.AssetListLoader(Object.values(assets), app.assets);\n        assetListLoader.load(() => {\n\n            app.start();\n\n            // set up some general scene rendering properties\n            app.scene.toneMapping = pc.TONEMAP_ACES;\n\n            // setup skydome\n            app.scene.envAtlas = assets.helipad.resource;\n            app.scene.skyboxMip = 0;        // use top mipmap level of cubemap (full resolution)\n            app.scene.skyboxIntensity = 2;  // make it brighter\n\n            // helper function to create high polygon version of a sphere and sets up an entity to allow it to be added to the scene\n            const createHighQualitySphere = function (material: pc.Material, layer: number[]) {\n\n                // Create Entity and add it to the scene\n                const entity = new pc.Entity("ShinyBall");\n                app.root.addChild(entity);\n\n                // create hight resolution sphere\n                const mesh = pc.createSphere(app.graphicsDevice, { latitudeBands: 200, longitudeBands: 200 });\n\n                // Add a render component with the mesh\n                entity.addComponent(\'render\', {\n                    type: \'asset\',\n                    layers: layer,\n                    meshInstances: [new pc.MeshInstance(mesh, material)]\n                });\n\n                return entity;\n            };\n\n            // helper function to create a primitive with shape type, position, scale, color and layer\n            function createPrimitive(primitiveType: string, position: number | pc.Vec3, scale: number | pc.Vec3, color: pc.Color, layer: number[]) {\n                // create material of specified color\n                const material = new pc.StandardMaterial();\n                material.diffuse = color;\n                material.gloss = 0.6;\n                material.metalness = 0.7;\n                material.useMetalness = true;\n                material.update();\n\n                // create primitive\n                const primitive = new pc.Entity();\n                primitive.addComponent(\'render\', {\n                    type: primitiveType,\n                    layers: layer,\n                    material: material\n                });\n\n                // set position and scale and add it to scene\n                primitive.setLocalPosition(position);\n                primitive.setLocalScale(scale);\n                app.root.addChild(primitive);\n\n                return primitive;\n            }\n\n            // get existing layers\n            const worldLayer = app.scene.layers.getLayerByName("World");\n            const skyboxLayer = app.scene.layers.getLayerByName("Skybox");\n            const immediateLayer = app.scene.layers.getLayerByName("Immediate");\n            const uiLayer = app.scene.layers.getLayerByName("UI");\n\n            // create a layer for object that do not render into texture\n            const excludedLayer = new pc.Layer({ name: "Excluded" });\n            app.scene.layers.push(excludedLayer);\n\n            // create material for the shiny ball\n            const shinyMat = new pc.StandardMaterial();\n\n            // create shiny ball mesh - this is on excluded layer as it does not render to cubemap\n            const shinyBall = createHighQualitySphere(shinyMat, [excludedLayer.id]);\n            shinyBall.setLocalPosition(0, 0, 0);\n            shinyBall.setLocalScale(10, 10, 10);\n\n            // add camera component to shiny ball - this defines camera properties for cubemap rendering\n            shinyBall.addComponent(\'camera\', {\n\n                // optimization - clear the surface even though all pixels are overwritten,\n                // as this has performance benefits on tiled architectures\n                clearColorBuffer: true,\n\n                // cubemap camera will render objects on world layer and also skybox\n                layers: [worldLayer.id, skyboxLayer.id],\n\n                // priority - render before world camera\n                priority: -1,\n\n                // disable as this is not a camera that renders cube map but only a container for properties for cube map rendering\n                enabled: false\n            });\n\n            // add cubemapRenderer script component which takes care of rendering dynamic cubemap\n            shinyBall.addComponent(\'script\');\n            shinyBall.script.create(\'cubemapRenderer\', {\n                attributes: {\n                    resolution: 256,\n                    mipmaps: true,\n                    depth: true\n                }\n            });\n\n            // finish set up of shiny material - make reflection a bit darker\n            shinyMat.diffuse = new pc.Color(0.6, 0.6, 0.6);\n\n            // use cubemap which is generated by cubemapRenderer instead of global skybox cubemap\n            shinyMat.useSkybox = false;\n            // @ts-ignore engine-tsd\n            shinyMat.cubeMap = shinyBall.script.cubemapRenderer.cubeMap;\n\n            // make it shiny without diffuse component\n            shinyMat.metalness = 1;\n            shinyMat.useMetalness = true;\n            shinyMat.update();\n\n            // create few random primitives in the world layer\n            const entities: pc.Entity[] = [];\n            const shapes = ["box", "cone", "cylinder", "sphere", "capsule"];\n            for (let i = 0; i < 6; i++) {\n                const shapeName = shapes[Math.floor(Math.random() * shapes.length)];\n                const color = new pc.Color(Math.random(), Math.random(), Math.random());\n                entities.push(createPrimitive(shapeName, pc.Vec3.ZERO, new pc.Vec3(3, 3, 3), color, [worldLayer.id]));\n            }\n\n            // create green plane as a base to cast shadows on\n            createPrimitive("plane", new pc.Vec3(0, -8, 0), new pc.Vec3(20, 20, 20), new pc.Color(0.3, 0.5, 0.3), [worldLayer.id]);\n\n            // Create main camera, which renders entities in world, excluded and skybox layers\n            const camera = new pc.Entity("MainCamera");\n            camera.addComponent("camera", {\n                fov: 60,\n                layers: [worldLayer.id, excludedLayer.id, skyboxLayer.id, immediateLayer.id, uiLayer.id]\n            });\n            app.root.addChild(camera);\n\n            // Create an Entity with a directional light component\n            const light = new pc.Entity();\n            light.addComponent("light", {\n                type: "directional",\n                color: pc.Color.YELLOW,\n                range: 40,\n                castShadows: true,\n                layers: [worldLayer.id],\n                shadowBias: 0.2,\n                shadowResolution: 1024,\n                normalOffsetBias: 0.05,\n                shadowDistance: 40\n            });\n            app.root.addChild(light);\n\n            // helper function to create a texture that can be used to project cubemap to\n            function createReprojectionTexture(projection: string, size: number) {\n                return new pc.Texture(app.graphicsDevice, {\n                    width: size,\n                    height: size,\n                    format: pc.PIXELFORMAT_RGB8,\n                    mipmaps: false,\n                    minFilter: pc.FILTER_LINEAR,\n                    magFilter: pc.FILTER_LINEAR,\n                    addressU: pc.ADDRESS_CLAMP_TO_EDGE,\n                    addressV: pc.ADDRESS_CLAMP_TO_EDGE,\n                    projection: projection\n                });\n            }\n\n            // create 2 uqirect and 2 octahedral textures\n            const textureEqui = createReprojectionTexture(pc.TEXTUREPROJECTION_EQUIRECT, 256);\n            const textureEqui2 = createReprojectionTexture(pc.TEXTUREPROJECTION_EQUIRECT, 256);\n            const textureOcta = createReprojectionTexture(pc.TEXTUREPROJECTION_OCTAHEDRAL, 64);\n            const textureOcta2 = createReprojectionTexture(pc.TEXTUREPROJECTION_OCTAHEDRAL, 32);\n\n            // create one envAtlas texture\n            const textureAtlas = createReprojectionTexture(pc.TEXTUREPROJECTION_OCTAHEDRAL, 512);\n\n            // update things each frame\n            let time = 0;\n            app.on("update", function (dt) {\n                time += dt;\n\n                // rotate primitives around their center and also orbit them around the shiny sphere\n                for (let e = 0; e < entities.length; e++) {\n                    const scale = (e + 1) / entities.length;\n                    const offset = time + e * 200;\n                    entities[e].setLocalPosition(7 * Math.sin(offset), 2 * (e - 3), 7 * Math.cos(offset));\n                    entities[e].rotate(1 * scale, 2 * scale, 3 * scale);\n                }\n\n                // slowly orbit camera around\n                camera.setLocalPosition(20 * Math.cos(time * 0.2), 2, 20 * Math.sin(time * 0.2));\n                camera.lookAt(pc.Vec3.ZERO);\n\n                // project textures, and display them on the screen\n                // @ts-ignore engine-tsd\n                const srcCube = shinyBall.script.cubemapRenderer.cubeMap;\n\n                // cube -> equi1\n                pc.reprojectTexture(srcCube, textureEqui, {\n                    numSamples: 1\n                });\n                // @ts-ignore engine-tsd\n                app.drawTexture(-0.6, 0.7, 0.6, 0.3, textureEqui);\n\n                // cube -> octa1\n                pc.reprojectTexture(srcCube, textureOcta, {\n                    numSamples: 1\n                });\n                // @ts-ignore engine-tsd\n                app.drawTexture(0.7, 0.7, 0.4, 0.4, textureOcta);\n\n                // equi1 -> octa2\n                pc.reprojectTexture(textureEqui, textureOcta2, {\n                    specularPower: 32,\n                    numSamples: 1024\n                });\n                // @ts-ignore engine-tsd\n                app.drawTexture(-0.7, -0.7, 0.4, 0.4, textureOcta2);\n\n                // octa1 -> equi2\n                pc.reprojectTexture(textureOcta, textureEqui2, {\n                    specularPower: 16,\n                    numSamples: 512\n                });\n                // @ts-ignore engine-tsd\n                app.drawTexture(0.6, -0.7, 0.6, 0.3, textureEqui2);\n\n                // cube -> envAtlas\n                pc.EnvLighting.generateAtlas(srcCube, {\n                    target: textureAtlas\n                });\n                // @ts-ignore engine-tsd\n                app.drawTexture(0, -0.7, 0.5, 0.4, textureAtlas);\n            });\n        });\n    });\n}',javaScriptFunction:'function example(canvas, deviceType) {\n    const assets = {\n        helipad: new pc.Asset(\n            "helipad-env-atlas",\n            "texture",\n            { url: "/static/assets/cubemaps/helipad-env-atlas.png" },\n            { type: pc.TEXTURETYPE_RGBP, mipmaps: false }\n        ),\n        script: new pc.Asset("script", "script", {\n            url: "/static/scripts/utils/cubemap-renderer.js",\n        }),\n    };\n\n    const gfxOptions = {\n        deviceTypes: [deviceType],\n        glslangUrl: "/static/lib/glslang/glslang.js",\n        twgslUrl: "/static/lib/twgsl/twgsl.js",\n    };\n\n    pc.createGraphicsDevice(canvas, gfxOptions).then((device) => {\n        const createOptions = new pc.AppOptions();\n        createOptions.graphicsDevice = device;\n\n        createOptions.componentSystems = [\n            // @ts-ignore\n            pc.RenderComponentSystem,\n            // @ts-ignore\n            pc.CameraComponentSystem,\n            // @ts-ignore\n            pc.LightComponentSystem,\n            // @ts-ignore\n            pc.ScriptComponentSystem,\n        ];\n\n        createOptions.resourceHandlers = [\n            // @ts-ignore\n            pc.TextureHandler,\n            // @ts-ignore\n            pc.ScriptHandler,\n        ];\n\n        const app = new pc.AppBase(canvas);\n        app.init(createOptions);\n\n        // Set the canvas to fill the window and automatically change resolution to be the same as the canvas size\n        app.setCanvasFillMode(pc.FILLMODE_FILL_WINDOW);\n        app.setCanvasResolution(pc.RESOLUTION_AUTO);\n\n        const assetListLoader = new pc.AssetListLoader(\n            Object.values(assets),\n            app.assets\n        );\n        assetListLoader.load(() => {\n            app.start();\n\n            // set up some general scene rendering properties\n            app.scene.toneMapping = pc.TONEMAP_ACES;\n\n            // setup skydome\n            app.scene.envAtlas = assets.helipad.resource;\n            app.scene.skyboxMip = 0; // use top mipmap level of cubemap (full resolution)\n            app.scene.skyboxIntensity = 2; // make it brighter\n\n            // helper function to create high polygon version of a sphere and sets up an entity to allow it to be added to the scene\n            const createHighQualitySphere = function (material, layer) {\n                // Create Entity and add it to the scene\n                const entity = new pc.Entity("ShinyBall");\n                app.root.addChild(entity);\n\n                // create hight resolution sphere\n                const mesh = pc.createSphere(app.graphicsDevice, {\n                    latitudeBands: 200,\n                    longitudeBands: 200,\n                });\n\n                // Add a render component with the mesh\n                entity.addComponent("render", {\n                    type: "asset",\n                    layers: layer,\n                    meshInstances: [new pc.MeshInstance(mesh, material)],\n                });\n\n                return entity;\n            };\n\n            // helper function to create a primitive with shape type, position, scale, color and layer\n            function createPrimitive(\n                primitiveType,\n                position,\n                scale,\n                color,\n                layer\n            ) {\n                // create material of specified color\n                const material = new pc.StandardMaterial();\n                material.diffuse = color;\n                material.gloss = 0.6;\n                material.metalness = 0.7;\n                material.useMetalness = true;\n                material.update();\n\n                // create primitive\n                const primitive = new pc.Entity();\n                primitive.addComponent("render", {\n                    type: primitiveType,\n                    layers: layer,\n                    material: material,\n                });\n\n                // set position and scale and add it to scene\n                primitive.setLocalPosition(position);\n                primitive.setLocalScale(scale);\n                app.root.addChild(primitive);\n\n                return primitive;\n            }\n\n            // get existing layers\n            const worldLayer = app.scene.layers.getLayerByName("World");\n            const skyboxLayer = app.scene.layers.getLayerByName("Skybox");\n            const immediateLayer = app.scene.layers.getLayerByName("Immediate");\n            const uiLayer = app.scene.layers.getLayerByName("UI");\n\n            // create a layer for object that do not render into texture\n            const excludedLayer = new pc.Layer({ name: "Excluded" });\n            app.scene.layers.push(excludedLayer);\n\n            // create material for the shiny ball\n            const shinyMat = new pc.StandardMaterial();\n\n            // create shiny ball mesh - this is on excluded layer as it does not render to cubemap\n            const shinyBall = createHighQualitySphere(shinyMat, [\n                excludedLayer.id,\n            ]);\n            shinyBall.setLocalPosition(0, 0, 0);\n            shinyBall.setLocalScale(10, 10, 10);\n\n            // add camera component to shiny ball - this defines camera properties for cubemap rendering\n            shinyBall.addComponent("camera", {\n                // optimization - clear the surface even though all pixels are overwritten,\n                // as this has performance benefits on tiled architectures\n                clearColorBuffer: true,\n\n                // cubemap camera will render objects on world layer and also skybox\n                layers: [worldLayer.id, skyboxLayer.id],\n\n                // priority - render before world camera\n                priority: -1,\n\n                // disable as this is not a camera that renders cube map but only a container for properties for cube map rendering\n                enabled: false,\n            });\n\n            // add cubemapRenderer script component which takes care of rendering dynamic cubemap\n            shinyBall.addComponent("script");\n            shinyBall.script.create("cubemapRenderer", {\n                attributes: {\n                    resolution: 256,\n                    mipmaps: true,\n                    depth: true,\n                },\n            });\n\n            // finish set up of shiny material - make reflection a bit darker\n            shinyMat.diffuse = new pc.Color(0.6, 0.6, 0.6);\n\n            // use cubemap which is generated by cubemapRenderer instead of global skybox cubemap\n            shinyMat.useSkybox = false;\n            // @ts-ignore engine-tsd\n            shinyMat.cubeMap = shinyBall.script.cubemapRenderer.cubeMap;\n\n            // make it shiny without diffuse component\n            shinyMat.metalness = 1;\n            shinyMat.useMetalness = true;\n            shinyMat.update();\n\n            // create few random primitives in the world layer\n            const entities = [];\n            const shapes = ["box", "cone", "cylinder", "sphere", "capsule"];\n            for (let i = 0; i < 6; i++) {\n                const shapeName =\n                    shapes[Math.floor(Math.random() * shapes.length)];\n                const color = new pc.Color(\n                    Math.random(),\n                    Math.random(),\n                    Math.random()\n                );\n                entities.push(\n                    createPrimitive(\n                        shapeName,\n                        pc.Vec3.ZERO,\n                        new pc.Vec3(3, 3, 3),\n                        color,\n                        [worldLayer.id]\n                    )\n                );\n            }\n\n            // create green plane as a base to cast shadows on\n            createPrimitive(\n                "plane",\n                new pc.Vec3(0, -8, 0),\n                new pc.Vec3(20, 20, 20),\n                new pc.Color(0.3, 0.5, 0.3),\n                [worldLayer.id]\n            );\n\n            // Create main camera, which renders entities in world, excluded and skybox layers\n            const camera = new pc.Entity("MainCamera");\n            camera.addComponent("camera", {\n                fov: 60,\n                layers: [\n                    worldLayer.id,\n                    excludedLayer.id,\n                    skyboxLayer.id,\n                    immediateLayer.id,\n                    uiLayer.id,\n                ],\n            });\n            app.root.addChild(camera);\n\n            // Create an Entity with a directional light component\n            const light = new pc.Entity();\n            light.addComponent("light", {\n                type: "directional",\n                color: pc.Color.YELLOW,\n                range: 40,\n                castShadows: true,\n                layers: [worldLayer.id],\n                shadowBias: 0.2,\n                shadowResolution: 1024,\n                normalOffsetBias: 0.05,\n                shadowDistance: 40,\n            });\n            app.root.addChild(light);\n\n            // helper function to create a texture that can be used to project cubemap to\n            function createReprojectionTexture(projection, size) {\n                return new pc.Texture(app.graphicsDevice, {\n                    width: size,\n                    height: size,\n                    format: pc.PIXELFORMAT_RGB8,\n                    mipmaps: false,\n                    minFilter: pc.FILTER_LINEAR,\n                    magFilter: pc.FILTER_LINEAR,\n                    addressU: pc.ADDRESS_CLAMP_TO_EDGE,\n                    addressV: pc.ADDRESS_CLAMP_TO_EDGE,\n                    projection: projection,\n                });\n            }\n\n            // create 2 uqirect and 2 octahedral textures\n            const textureEqui = createReprojectionTexture(\n                pc.TEXTUREPROJECTION_EQUIRECT,\n                256\n            );\n            const textureEqui2 = createReprojectionTexture(\n                pc.TEXTUREPROJECTION_EQUIRECT,\n                256\n            );\n            const textureOcta = createReprojectionTexture(\n                pc.TEXTUREPROJECTION_OCTAHEDRAL,\n                64\n            );\n            const textureOcta2 = createReprojectionTexture(\n                pc.TEXTUREPROJECTION_OCTAHEDRAL,\n                32\n            );\n\n            // create one envAtlas texture\n            const textureAtlas = createReprojectionTexture(\n                pc.TEXTUREPROJECTION_OCTAHEDRAL,\n                512\n            );\n\n            // update things each frame\n            let time = 0;\n            app.on("update", function (dt) {\n                time += dt;\n\n                // rotate primitives around their center and also orbit them around the shiny sphere\n                for (let e = 0; e < entities.length; e++) {\n                    const scale = (e + 1) / entities.length;\n                    const offset = time + e * 200;\n                    entities[e].setLocalPosition(\n                        7 * Math.sin(offset),\n                        2 * (e - 3),\n                        7 * Math.cos(offset)\n                    );\n                    entities[e].rotate(1 * scale, 2 * scale, 3 * scale);\n                }\n\n                // slowly orbit camera around\n                camera.setLocalPosition(\n                    20 * Math.cos(time * 0.2),\n                    2,\n                    20 * Math.sin(time * 0.2)\n                );\n                camera.lookAt(pc.Vec3.ZERO);\n\n                // project textures, and display them on the screen\n                // @ts-ignore engine-tsd\n                const srcCube = shinyBall.script.cubemapRenderer.cubeMap;\n\n                // cube -> equi1\n                pc.reprojectTexture(srcCube, textureEqui, {\n                    numSamples: 1,\n                });\n                // @ts-ignore engine-tsd\n                app.drawTexture(-0.6, 0.7, 0.6, 0.3, textureEqui);\n\n                // cube -> octa1\n                pc.reprojectTexture(srcCube, textureOcta, {\n                    numSamples: 1,\n                });\n                // @ts-ignore engine-tsd\n                app.drawTexture(0.7, 0.7, 0.4, 0.4, textureOcta);\n\n                // equi1 -> octa2\n                pc.reprojectTexture(textureEqui, textureOcta2, {\n                    specularPower: 32,\n                    numSamples: 1024,\n                });\n                // @ts-ignore engine-tsd\n                app.drawTexture(-0.7, -0.7, 0.4, 0.4, textureOcta2);\n\n                // octa1 -> equi2\n                pc.reprojectTexture(textureOcta, textureEqui2, {\n                    specularPower: 16,\n                    numSamples: 512,\n                });\n                // @ts-ignore engine-tsd\n                app.drawTexture(0.6, -0.7, 0.6, 0.3, textureEqui2);\n\n                // cube -> envAtlas\n                pc.EnvLighting.generateAtlas(srcCube, {\n                    target: textureAtlas,\n                });\n                // @ts-ignore engine-tsd\n                app.drawTexture(0, -0.7, 0.5, 0.4, textureAtlas);\n            });\n        });\n    });\n}\n',nameSlug:"reflection-cubemap",categorySlug:"graphics"},"reflection-planar":{typeScriptFunction:"function example(canvas: HTMLCanvasElement, deviceType: string, files: { 'shader.vert': string, 'shader.frag': string }): void {\n\n    const assets = {\n        envatlas: new pc.Asset('helipad-env-atlas', 'texture', { url: '/static/assets/cubemaps/helipad-env-atlas.png' }, { type: pc.TEXTURETYPE_RGBP, mipmaps: false }),\n        'statue': new pc.Asset('statue', 'container', { url: '/static/assets/models/statue.glb' }),\n        'script': new pc.Asset('script', 'script', { url: '/static/scripts/utils/planar-renderer.js' })\n    };\n\n    const gfxOptions = {\n        deviceTypes: [deviceType],\n        glslangUrl: '/static/lib/glslang/glslang.js',\n        twgslUrl: '/static/lib/twgsl/twgsl.js'\n    };\n\n    pc.createGraphicsDevice(canvas, gfxOptions).then((device: pc.GraphicsDevice) => {\n\n        const createOptions = new pc.AppOptions();\n        createOptions.graphicsDevice = device;\n\n        createOptions.componentSystems = [\n            // @ts-ignore\n            pc.RenderComponentSystem,\n            // @ts-ignore\n            pc.CameraComponentSystem,\n            // @ts-ignore\n            pc.ScriptComponentSystem\n        ];\n        createOptions.resourceHandlers = [\n            // @ts-ignore\n            pc.TextureHandler,\n            // @ts-ignore\n            pc.ScriptHandler,\n            // @ts-ignore\n            pc.ContainerHandler\n        ];\n\n        const app = new pc.AppBase(canvas);\n        app.init(createOptions);\n\n        // Set the canvas to fill the window and automatically change resolution to be the same as the canvas size\n        app.setCanvasFillMode(pc.FILLMODE_FILL_WINDOW);\n        app.setCanvasResolution(pc.RESOLUTION_AUTO);\n\n        const assetListLoader = new pc.AssetListLoader(Object.values(assets), app.assets);\n        assetListLoader.load(() => {\n\n            app.start();\n\n            // set up some general scene rendering properties\n            app.scene.toneMapping = pc.TONEMAP_ACES;\n\n            // setup skydome\n            app.scene.envAtlas = assets.envatlas.resource;\n            app.scene.skyboxMip = 1;\n            app.scene.skyboxIntensity = 1.7;  // make it brighter\n\n            // helper function to create a primitive with shape type, position, scale, color and layer\n            function createPrimitive(primitiveType: string, position: pc.Vec3, scale: pc.Vec3, color: pc.Color, layer: number[], material: pc.Material | pc.StandardMaterial = null) {\n\n                // create material of specified color\n                if (!material) {\n                    const standardMaterial = new pc.StandardMaterial();\n                    standardMaterial.diffuse = color;\n                    standardMaterial.gloss = 0.6;\n                    standardMaterial.metalness = 0.7;\n                    standardMaterial.useMetalness = true;\n                    standardMaterial.update();\n                    material = standardMaterial;\n                }\n\n                // create primitive\n                const primitive = new pc.Entity();\n                primitive.addComponent('render', {\n                    type: primitiveType,\n                    layers: layer,\n                    material: material\n                });\n\n                // set position and scale and add it to scene\n                primitive.setLocalPosition(position);\n                primitive.setLocalScale(scale);\n                app.root.addChild(primitive);\n\n                return primitive;\n            }\n\n            // get existing layers\n            const worldLayer = app.scene.layers.getLayerByName(\"World\");\n            const skyboxLayer = app.scene.layers.getLayerByName(\"Skybox\");\n            const uiLayer = app.scene.layers.getLayerByName(\"UI\");\n\n            // create a layer for objects that do not render into texture\n            const excludedLayer = new pc.Layer({ name: \"Excluded\" });\n            app.scene.layers.insert(excludedLayer, app.scene.layers.getTransparentIndex(worldLayer) + 1);\n\n            // Create the shader from the vertex and fragment shaders\n            const shader = pc.createShaderFromCode(app.graphicsDevice, files['shader.vert'], files['shader.frag'], 'myShader', {\n                aPosition: pc.SEMANTIC_POSITION,\n                aUv0: pc.SEMANTIC_TEXCOORD0\n            });\n\n            // reflective ground\n            // This is in the excluded layer so it does not render into reflection texture\n            const groundMaterial = new pc.Material();\n            groundMaterial.shader = shader;\n            createPrimitive(\"plane\", new pc.Vec3(0, 0, 0), new pc.Vec3(40, 1, 40), new pc.Color(0.5, 0.5, 0.5), [excludedLayer.id], groundMaterial);\n\n            // get the instance of the statue and set up with render component\n            const statueEntity = assets.statue.resource.instantiateRenderEntity();\n            app.root.addChild(statueEntity);\n\n            // create few random primitives in the world layer\n            const entities: pc.Entity[] = [];\n            const shapes = [\"box\", \"cone\", \"cylinder\", \"sphere\", \"capsule\"];\n            for (let i = 0; i < 6; i++) {\n                const shapeName = shapes[Math.floor(Math.random() * shapes.length)];\n                const color = new pc.Color(Math.random(), Math.random(), Math.random());\n                entities.push(createPrimitive(shapeName, pc.Vec3.ZERO, new pc.Vec3(3, 3, 3), color, [worldLayer.id]));\n            }\n\n            // Create main camera, which renders entities in world, excluded and skybox layers\n            const camera = new pc.Entity(\"MainCamera\");\n            camera.addComponent(\"camera\", {\n                fov: 60,\n                layers: [worldLayer.id, excludedLayer.id, skyboxLayer.id, uiLayer.id]\n            });\n            app.root.addChild(camera);\n\n            // create reflection camera, which renders entities in world and skybox layers only\n            const reflectionCamera = new pc.Entity(\"ReflectionCamera\");\n            reflectionCamera.addComponent(\"camera\", {\n                fov: 60,\n                layers: [worldLayer.id, skyboxLayer.id],\n                priority: -1    // render reflections before the main camera\n            });\n\n            // add planarRenderer script which renders the reflection texture\n            reflectionCamera.addComponent('script');\n            reflectionCamera.script.create('planarRenderer', {\n                attributes: {\n                    sceneCameraEntity: camera,\n                    scale: 1,\n                    mipmaps: false,\n                    depth: true,\n                    planePoint: pc.Vec3.ZERO,\n                    planeNormal: pc.Vec3.UP\n                }\n            });\n            app.root.addChild(reflectionCamera);\n\n            // update things each frame\n            let time = 0;\n            app.on(\"update\", function (dt) {\n                time += dt;\n\n                // rotate primitives around their center and also orbit them around the shiny sphere\n                for (let e = 0; e < entities.length; e++) {\n                    const scale = (e + 1) / entities.length;\n                    const offset = time + e * 200;\n                    entities[e].setLocalPosition(7 * Math.sin(offset), e + 5, 7 * Math.cos(offset));\n                    entities[e].rotate(1 * scale, 2 * scale, 3 * scale);\n                }\n\n                // slowly orbit camera around\n                camera.setLocalPosition(30 * Math.cos(time * 0.2), 10, 30 * Math.sin(time * 0.2));\n                camera.lookAt(pc.Vec3.ZERO);\n\n                // animate FOV\n                camera.camera.fov = 60 + 20 * Math.sin(time * 0.5);\n\n                // trigger reflection camera update (must be called after all parameters of the main camera are updated)\n                // @ts-ignore engine-tsd\n                const reflectionTexture = reflectionCamera.script.planarRenderer.frameUpdate();\n                groundMaterial.setParameter('uDiffuseMap', reflectionTexture);\n                groundMaterial.update();\n            });\n        });\n    });\n}",javaScriptFunction:'function example(canvas, deviceType, files) {\n    const assets = {\n        envatlas: new pc.Asset(\n            "helipad-env-atlas",\n            "texture",\n            { url: "/static/assets/cubemaps/helipad-env-atlas.png" },\n            { type: pc.TEXTURETYPE_RGBP, mipmaps: false }\n        ),\n        statue: new pc.Asset("statue", "container", {\n            url: "/static/assets/models/statue.glb",\n        }),\n        script: new pc.Asset("script", "script", {\n            url: "/static/scripts/utils/planar-renderer.js",\n        }),\n    };\n\n    const gfxOptions = {\n        deviceTypes: [deviceType],\n        glslangUrl: "/static/lib/glslang/glslang.js",\n        twgslUrl: "/static/lib/twgsl/twgsl.js",\n    };\n\n    pc.createGraphicsDevice(canvas, gfxOptions).then((device) => {\n        const createOptions = new pc.AppOptions();\n        createOptions.graphicsDevice = device;\n\n        createOptions.componentSystems = [\n            // @ts-ignore\n            pc.RenderComponentSystem,\n            // @ts-ignore\n            pc.CameraComponentSystem,\n            // @ts-ignore\n            pc.ScriptComponentSystem,\n        ];\n\n        createOptions.resourceHandlers = [\n            // @ts-ignore\n            pc.TextureHandler,\n            // @ts-ignore\n            pc.ScriptHandler,\n            // @ts-ignore\n            pc.ContainerHandler,\n        ];\n\n        const app = new pc.AppBase(canvas);\n        app.init(createOptions);\n\n        // Set the canvas to fill the window and automatically change resolution to be the same as the canvas size\n        app.setCanvasFillMode(pc.FILLMODE_FILL_WINDOW);\n        app.setCanvasResolution(pc.RESOLUTION_AUTO);\n\n        const assetListLoader = new pc.AssetListLoader(\n            Object.values(assets),\n            app.assets\n        );\n        assetListLoader.load(() => {\n            app.start();\n\n            // set up some general scene rendering properties\n            app.scene.toneMapping = pc.TONEMAP_ACES;\n\n            // setup skydome\n            app.scene.envAtlas = assets.envatlas.resource;\n            app.scene.skyboxMip = 1;\n            app.scene.skyboxIntensity = 1.7; // make it brighter\n\n            // helper function to create a primitive with shape type, position, scale, color and layer\n            function createPrimitive(\n                primitiveType,\n                position,\n                scale,\n                color,\n                layer,\n                material = null\n            ) {\n                // create material of specified color\n                if (!material) {\n                    const standardMaterial = new pc.StandardMaterial();\n                    standardMaterial.diffuse = color;\n                    standardMaterial.gloss = 0.6;\n                    standardMaterial.metalness = 0.7;\n                    standardMaterial.useMetalness = true;\n                    standardMaterial.update();\n                    material = standardMaterial;\n                }\n\n                // create primitive\n                const primitive = new pc.Entity();\n                primitive.addComponent("render", {\n                    type: primitiveType,\n                    layers: layer,\n                    material: material,\n                });\n\n                // set position and scale and add it to scene\n                primitive.setLocalPosition(position);\n                primitive.setLocalScale(scale);\n                app.root.addChild(primitive);\n\n                return primitive;\n            }\n\n            // get existing layers\n            const worldLayer = app.scene.layers.getLayerByName("World");\n            const skyboxLayer = app.scene.layers.getLayerByName("Skybox");\n            const uiLayer = app.scene.layers.getLayerByName("UI");\n\n            // create a layer for objects that do not render into texture\n            const excludedLayer = new pc.Layer({ name: "Excluded" });\n            app.scene.layers.insert(\n                excludedLayer,\n                app.scene.layers.getTransparentIndex(worldLayer) + 1\n            );\n\n            // Create the shader from the vertex and fragment shaders\n            const shader = pc.createShaderFromCode(\n                app.graphicsDevice,\n                files["shader.vert"],\n                files["shader.frag"],\n                "myShader",\n                {\n                    aPosition: pc.SEMANTIC_POSITION,\n                    aUv0: pc.SEMANTIC_TEXCOORD0,\n                }\n            );\n\n            // reflective ground\n            // This is in the excluded layer so it does not render into reflection texture\n            const groundMaterial = new pc.Material();\n            groundMaterial.shader = shader;\n            createPrimitive(\n                "plane",\n                new pc.Vec3(0, 0, 0),\n                new pc.Vec3(40, 1, 40),\n                new pc.Color(0.5, 0.5, 0.5),\n                [excludedLayer.id],\n                groundMaterial\n            );\n\n            // get the instance of the statue and set up with render component\n            const statueEntity =\n                assets.statue.resource.instantiateRenderEntity();\n            app.root.addChild(statueEntity);\n\n            // create few random primitives in the world layer\n            const entities = [];\n            const shapes = ["box", "cone", "cylinder", "sphere", "capsule"];\n            for (let i = 0; i < 6; i++) {\n                const shapeName =\n                    shapes[Math.floor(Math.random() * shapes.length)];\n                const color = new pc.Color(\n                    Math.random(),\n                    Math.random(),\n                    Math.random()\n                );\n                entities.push(\n                    createPrimitive(\n                        shapeName,\n                        pc.Vec3.ZERO,\n                        new pc.Vec3(3, 3, 3),\n                        color,\n                        [worldLayer.id]\n                    )\n                );\n            }\n\n            // Create main camera, which renders entities in world, excluded and skybox layers\n            const camera = new pc.Entity("MainCamera");\n            camera.addComponent("camera", {\n                fov: 60,\n                layers: [\n                    worldLayer.id,\n                    excludedLayer.id,\n                    skyboxLayer.id,\n                    uiLayer.id,\n                ],\n            });\n            app.root.addChild(camera);\n\n            // create reflection camera, which renders entities in world and skybox layers only\n            const reflectionCamera = new pc.Entity("ReflectionCamera");\n            reflectionCamera.addComponent("camera", {\n                fov: 60,\n                layers: [worldLayer.id, skyboxLayer.id],\n                priority: -1, // render reflections before the main camera\n            });\n\n            // add planarRenderer script which renders the reflection texture\n            reflectionCamera.addComponent("script");\n            reflectionCamera.script.create("planarRenderer", {\n                attributes: {\n                    sceneCameraEntity: camera,\n                    scale: 1,\n                    mipmaps: false,\n                    depth: true,\n                    planePoint: pc.Vec3.ZERO,\n                    planeNormal: pc.Vec3.UP,\n                },\n            });\n            app.root.addChild(reflectionCamera);\n\n            // update things each frame\n            let time = 0;\n            app.on("update", function (dt) {\n                time += dt;\n\n                // rotate primitives around their center and also orbit them around the shiny sphere\n                for (let e = 0; e < entities.length; e++) {\n                    const scale = (e + 1) / entities.length;\n                    const offset = time + e * 200;\n                    entities[e].setLocalPosition(\n                        7 * Math.sin(offset),\n                        e + 5,\n                        7 * Math.cos(offset)\n                    );\n                    entities[e].rotate(1 * scale, 2 * scale, 3 * scale);\n                }\n\n                // slowly orbit camera around\n                camera.setLocalPosition(\n                    30 * Math.cos(time * 0.2),\n                    10,\n                    30 * Math.sin(time * 0.2)\n                );\n                camera.lookAt(pc.Vec3.ZERO);\n\n                // animate FOV\n                camera.camera.fov = 60 + 20 * Math.sin(time * 0.5);\n\n                // trigger reflection camera update (must be called after all parameters of the main camera are updated)\n                // @ts-ignore engine-tsd\n                const reflectionTexture =\n                    reflectionCamera.script.planarRenderer.frameUpdate();\n                groundMaterial.setParameter("uDiffuseMap", reflectionTexture);\n                groundMaterial.update();\n            });\n        });\n    });\n}\n',nameSlug:"reflection-planar",categorySlug:"graphics",files:{"shader.vert":"\n            attribute vec3 aPosition;\n            attribute vec2 aUv0;\n\n            uniform mat4 matrix_model;\n            uniform mat4 matrix_viewProjection;\n\n            void main(void)\n            {\n                gl_Position = matrix_viewProjection * matrix_model * vec4(aPosition, 1.0);;\n            }","shader.frag":"\n\n            // engine built-in constant storing render target size in .xy and inverse size in .zw\n            uniform vec4 uScreenSize;\n\n            // reflection texture\n            uniform sampler2D uDiffuseMap;\n\n            void main(void)\n            {\n                // sample reflection texture\n                vec2 coord = gl_FragCoord.xy * uScreenSize.zw;\n                coord.y = 1.0 - coord.y;\n                vec4 reflection = texture2D(uDiffuseMap, coord);\n\n                gl_FragColor = vec4(reflection.xyz * 0.7, 1);\n            }"}},"render-asset":{typeScriptFunction:"function example(canvas: HTMLCanvasElement, deviceType: string): void {\n\n    const assets = {\n        'helipad': new pc.Asset('helipad-env-atlas', 'texture', { url: '/static/assets/cubemaps/helipad-env-atlas.png' }, { type: pc.TEXTURETYPE_RGBP, mipmaps: false }),\n        'statue': new pc.Asset('statue', 'container', { url: '/static/assets/models/statue.glb' }),\n        'cube': new pc.Asset('cube', 'container', { url: '/static/assets/models/playcanvas-cube.glb' })\n    };\n\n    const gfxOptions = {\n        deviceTypes: [deviceType],\n        glslangUrl: '/static/lib/glslang/glslang.js',\n        twgslUrl: '/static/lib/twgsl/twgsl.js'\n    };\n\n    pc.createGraphicsDevice(canvas, gfxOptions).then((device: pc.GraphicsDevice) => {\n\n        const createOptions = new pc.AppOptions();\n        createOptions.graphicsDevice = device;\n\n        createOptions.componentSystems = [\n            // @ts-ignore\n            pc.RenderComponentSystem,\n            // @ts-ignore\n            pc.CameraComponentSystem,\n            // @ts-ignore\n            pc.LightComponentSystem\n        ];\n        createOptions.resourceHandlers = [\n            // @ts-ignore\n            pc.TextureHandler,\n            // @ts-ignore\n            pc.ContainerHandler\n        ];\n\n        const app = new pc.AppBase(canvas);\n        app.init(createOptions);\n\n        // Set the canvas to fill the window and automatically change resolution to be the same as the canvas size\n        app.setCanvasFillMode(pc.FILLMODE_FILL_WINDOW);\n        app.setCanvasResolution(pc.RESOLUTION_AUTO);\n\n        const assetListLoader = new pc.AssetListLoader(Object.values(assets), app.assets);\n        assetListLoader.load(() => {\n\n            app.start();\n\n            const cubeEntities: pc.Entity[] = [];\n\n            // get the instance of the cube it set up with render component and add it to scene\n            cubeEntities[0] = assets.cube.resource.instantiateRenderEntity();\n            cubeEntities[0].setLocalPosition(7, 12, 0);\n            cubeEntities[0].setLocalScale(3, 3, 3);\n            app.root.addChild(cubeEntities[0]);\n\n            // clone another copy of it and add it to scene\n            cubeEntities[1] = cubeEntities[0].clone() as pc.Entity;\n            cubeEntities[1].setLocalPosition(-7, 12, 0);\n            cubeEntities[1].setLocalScale(3, 3, 3);\n            app.root.addChild(cubeEntities[1]);\n\n            // get the instance of the statue and set up with render component\n            const statueEntity = assets.statue.resource.instantiateRenderEntity();\n            app.root.addChild(statueEntity);\n\n            // Create an Entity with a camera component\n            const camera = new pc.Entity();\n            camera.addComponent(\"camera\", {\n                clearColor: new pc.Color(0.2, 0.1, 0.1),\n                farClip: 100\n            });\n            camera.translate(-20, 15, 20);\n            camera.lookAt(0, 7, 0);\n            app.root.addChild(camera);\n\n            // set skybox\n            app.scene.envAtlas = assets.helipad.resource;\n            app.scene.toneMapping = pc.TONEMAP_ACES;\n            app.scene.skyboxMip = 1;\n\n            // spin the meshes\n            app.on(\"update\", function (dt) {\n\n                if (cubeEntities[0]) {\n                    cubeEntities[0].rotate(3 * dt, 10 * dt, 6 * dt);\n                }\n\n                if (cubeEntities[1]) {\n                    cubeEntities[1].rotate(-7 * dt, 5 * dt, -2 * dt);\n                }\n\n                if (statueEntity) {\n                    statueEntity.rotate(0, -12 * dt, 0);\n                }\n\n            });\n        });\n    }).catch(console.error);\n}",javaScriptFunction:'function example(canvas, deviceType) {\n    const assets = {\n        helipad: new pc.Asset(\n            "helipad-env-atlas",\n            "texture",\n            { url: "/static/assets/cubemaps/helipad-env-atlas.png" },\n            { type: pc.TEXTURETYPE_RGBP, mipmaps: false }\n        ),\n        statue: new pc.Asset("statue", "container", {\n            url: "/static/assets/models/statue.glb",\n        }),\n        cube: new pc.Asset("cube", "container", {\n            url: "/static/assets/models/playcanvas-cube.glb",\n        }),\n    };\n\n    const gfxOptions = {\n        deviceTypes: [deviceType],\n        glslangUrl: "/static/lib/glslang/glslang.js",\n        twgslUrl: "/static/lib/twgsl/twgsl.js",\n    };\n\n    pc.createGraphicsDevice(canvas, gfxOptions)\n        .then((device) => {\n            const createOptions = new pc.AppOptions();\n            createOptions.graphicsDevice = device;\n\n            createOptions.componentSystems = [\n                // @ts-ignore\n                pc.RenderComponentSystem,\n                // @ts-ignore\n                pc.CameraComponentSystem,\n                // @ts-ignore\n                pc.LightComponentSystem,\n            ];\n\n            createOptions.resourceHandlers = [\n                // @ts-ignore\n                pc.TextureHandler,\n                // @ts-ignore\n                pc.ContainerHandler,\n            ];\n\n            const app = new pc.AppBase(canvas);\n            app.init(createOptions);\n\n            // Set the canvas to fill the window and automatically change resolution to be the same as the canvas size\n            app.setCanvasFillMode(pc.FILLMODE_FILL_WINDOW);\n            app.setCanvasResolution(pc.RESOLUTION_AUTO);\n\n            const assetListLoader = new pc.AssetListLoader(\n                Object.values(assets),\n                app.assets\n            );\n            assetListLoader.load(() => {\n                app.start();\n\n                const cubeEntities = [];\n\n                // get the instance of the cube it set up with render component and add it to scene\n                cubeEntities[0] =\n                    assets.cube.resource.instantiateRenderEntity();\n                cubeEntities[0].setLocalPosition(7, 12, 0);\n                cubeEntities[0].setLocalScale(3, 3, 3);\n                app.root.addChild(cubeEntities[0]);\n\n                // clone another copy of it and add it to scene\n                cubeEntities[1] = cubeEntities[0].clone();\n                cubeEntities[1].setLocalPosition(-7, 12, 0);\n                cubeEntities[1].setLocalScale(3, 3, 3);\n                app.root.addChild(cubeEntities[1]);\n\n                // get the instance of the statue and set up with render component\n                const statueEntity =\n                    assets.statue.resource.instantiateRenderEntity();\n                app.root.addChild(statueEntity);\n\n                // Create an Entity with a camera component\n                const camera = new pc.Entity();\n                camera.addComponent("camera", {\n                    clearColor: new pc.Color(0.2, 0.1, 0.1),\n                    farClip: 100,\n                });\n                camera.translate(-20, 15, 20);\n                camera.lookAt(0, 7, 0);\n                app.root.addChild(camera);\n\n                // set skybox\n                app.scene.envAtlas = assets.helipad.resource;\n                app.scene.toneMapping = pc.TONEMAP_ACES;\n                app.scene.skyboxMip = 1;\n\n                // spin the meshes\n                app.on("update", function (dt) {\n                    if (cubeEntities[0]) {\n                        cubeEntities[0].rotate(3 * dt, 10 * dt, 6 * dt);\n                    }\n\n                    if (cubeEntities[1]) {\n                        cubeEntities[1].rotate(-7 * dt, 5 * dt, -2 * dt);\n                    }\n\n                    if (statueEntity) {\n                        statueEntity.rotate(0, -12 * dt, 0);\n                    }\n                });\n            });\n        })\n        .catch(console.error);\n}\n',nameSlug:"render-asset",categorySlug:"graphics"},"render-to-texture":{typeScriptFunction:'function example(canvas: HTMLCanvasElement, deviceType: string): void {\n\n    // Overview:\n    // There are 3 layers used:\n    // - worldLayer - it contains objects that render into main camera and also into texture\n    // - excludedLayer - it contains objects that are excluded from rendering into texture and so render only into main camera\n    // - skyboxLayer - it contains skybox and renders into both main and texture camera\n    // There are two cameras:\n    // - textureCamera - this camera renders into texture, objects from World and also Skybox layers\n    // - camera - this camera renders into main framebuffer, objects from World, Excluded and also Skybox layers\n\n    const assets = {\n        helipad: new pc.Asset(\'helipad-env-atlas\', \'texture\', { url: \'/static/assets/cubemaps/helipad-env-atlas.png\' }, { type: pc.TEXTURETYPE_RGBP, mipmaps: false }),\n        checkerboard: new pc.Asset(\'checkerboard\', \'texture\', { url: \'/static/assets/textures/checkboard.png\' }),\n        \'script\': new pc.Asset(\'script\', \'script\', { url: \'/static/scripts/camera/orbit-camera.js\' })\n    };\n\n    const gfxOptions = {\n        deviceTypes: [deviceType],\n        glslangUrl: \'/static/lib/glslang/glslang.js\',\n        twgslUrl: \'/static/lib/twgsl/twgsl.js\'\n    };\n\n    pc.createGraphicsDevice(canvas, gfxOptions).then((device: pc.GraphicsDevice) => {\n\n        const createOptions = new pc.AppOptions();\n        createOptions.graphicsDevice = device;\n        createOptions.mouse = new pc.Mouse(document.body);\n        createOptions.touch = new pc.TouchDevice(document.body);\n        createOptions.keyboard = new pc.Keyboard(document.body);\n\n        createOptions.componentSystems = [\n            // @ts-ignore\n            pc.RenderComponentSystem,\n            // @ts-ignore\n            pc.CameraComponentSystem,\n            // @ts-ignore\n            pc.LightComponentSystem,\n            // @ts-ignore\n            pc.ScriptComponentSystem,\n            // @ts-ignore\n            pc.ParticleSystemComponentSystem\n        ];\n        createOptions.resourceHandlers = [\n            // @ts-ignore\n            pc.TextureHandler,\n            // @ts-ignore\n            pc.ScriptHandler\n        ];\n\n        const app = new pc.AppBase(canvas);\n        app.init(createOptions);\n\n        // Set the canvas to fill the window and automatically change resolution to be the same as the canvas size\n        app.setCanvasFillMode(pc.FILLMODE_FILL_WINDOW);\n        app.setCanvasResolution(pc.RESOLUTION_AUTO);\n\n        const assetListLoader = new pc.AssetListLoader(Object.values(assets), app.assets);\n        assetListLoader.load(() => {\n\n            app.start();\n\n            // helper function to create a primitive with shape type, position, scale, color and layer\n            function createPrimitive(primitiveType: string, position: number | pc.Vec3, scale: number | pc.Vec3, color: pc.Color, layer: number[]) {\n                // create material of specified color\n                const material = new pc.StandardMaterial();\n                material.diffuse = color;\n                material.update();\n\n                // create primitive\n                const primitive = new pc.Entity();\n                primitive.addComponent(\'render\', {\n                    type: primitiveType,\n                    layers: layer,\n                    material: material\n                });\n\n                // set position and scale and add it to scene\n                primitive.setLocalPosition(position);\n                primitive.setLocalScale(scale);\n                app.root.addChild(primitive);\n\n                return primitive;\n            }\n\n            // helper function to create a basic particle system\n            function createParticleSystem(position: pc.Vec3) {\n\n                // make particles move in different directions\n                const localVelocityCurve = new pc.CurveSet([\n                    [0, 0, 0.5, 8],\n                    [0, 0, 0.5, 8],\n                    [0, 0, 0.5, 8]\n                ]);\n                const localVelocityCurve2 = new pc.CurveSet([\n                    [0, 0, 0.5, -8],\n                    [0, 0, 0.5, -8],\n                    [0, 0, 0.5, -8]\n                ]);\n\n                // increasing gravity\n                const worldVelocityCurve = new pc.CurveSet([\n                    [0, 0],\n                    [0, 0, 0.2, 6, 1, -48],\n                    [0, 0]\n                ]);\n\n                // Create entity for particle system\n                const entity = new pc.Entity();\n                app.root.addChild(entity);\n                entity.setLocalPosition(position);\n\n                // add particlesystem component to entity\n                entity.addComponent("particlesystem", {\n                    numParticles: 200,\n                    lifetime: 1,\n                    rate: 0.01,\n                    scaleGraph: new pc.Curve([0, 0.5]),\n                    velocityGraph: worldVelocityCurve,\n                    localVelocityGraph: localVelocityCurve,\n                    localVelocityGraph2: localVelocityCurve2\n                });\n            }\n\n            // create texture and render target for rendering into, including depth buffer\n            const texture = new pc.Texture(app.graphicsDevice, {\n                width: 512,\n                height: 256,\n                format: pc.PIXELFORMAT_RGB8,\n                mipmaps: true,\n                minFilter: pc.FILTER_LINEAR,\n                magFilter: pc.FILTER_LINEAR,\n                addressU: pc.ADDRESS_CLAMP_TO_EDGE,\n                addressV: pc.ADDRESS_CLAMP_TO_EDGE\n            });\n            const renderTarget = new pc.RenderTarget({\n                name: `RT`,\n                colorBuffer: texture,\n                depth: true,\n                flipY: !app.graphicsDevice.isWebGPU,\n                samples: 2\n            });\n\n            // create a layer for object that do not render into texture, add it right after the world layer\n            const excludedLayer = new pc.Layer({ name: "Excluded" });\n            app.scene.layers.insert(excludedLayer, 1);\n\n            // get existing layers\n            const worldLayer = app.scene.layers.getLayerByName("World");\n            const skyboxLayer = app.scene.layers.getLayerByName("Skybox");\n            const uiLayer = app.scene.layers.getLayerByName("UI");\n\n            // create ground plane and 3 primitives, visible in world layer\n            const plane = createPrimitive("plane", new pc.Vec3(0, 0, 0), new pc.Vec3(20, 20, 20), new pc.Color(3, 4, 2), [worldLayer.id]);\n            const planeMaterial: pc.StandardMaterial = plane.render.meshInstances[0].material as pc.StandardMaterial;\n\n            // make the texture tiles and use anisotropic filtering to prevent blurring\n            planeMaterial.diffuseMap = assets.checkerboard.resource;\n            planeMaterial.diffuseTint = true;\n            planeMaterial.diffuseMapTiling.set(10, 10);\n            planeMaterial.anisotropy = 16;\n\n            createPrimitive("sphere", new pc.Vec3(-2, 1, 0), new pc.Vec3(2, 2, 2), pc.Color.RED, [worldLayer.id]);\n            createPrimitive("cone", new pc.Vec3(0, 1, -2), new pc.Vec3(2, 2, 2), pc.Color.CYAN, [worldLayer.id]);\n            createPrimitive("box", new pc.Vec3(2, 1, 0), new pc.Vec3(2, 2, 2), pc.Color.YELLOW, [worldLayer.id]);\n\n            // particle system\n            createParticleSystem(new pc.Vec3(2, 3, 0));\n\n            // Create main camera, which renders entities in world, excluded and skybox layers\n            const camera = new pc.Entity("Camera");\n            camera.addComponent("camera", {\n                fov: 100,\n                layers: [worldLayer.id, excludedLayer.id, skyboxLayer.id, uiLayer.id]\n            });\n            camera.translate(0, 9, 15);\n            camera.lookAt(1, 4, 0);\n            app.root.addChild(camera);\n\n            // add orbit camera script with a mouse and a touch support\n            camera.addComponent("script");\n            camera.script.create("orbitCamera", {\n                attributes: {\n                    inertiaFactor: 0.2,\n                    focusEntity: plane,\n                    distanceMax: 20,\n                    frameOnStart: false\n                }\n            });\n            camera.script.create("orbitCameraInputMouse");\n            camera.script.create("orbitCameraInputTouch");\n\n            // Create texture camera, which renders entities in world and skybox layers into the texture\n            const textureCamera = new pc.Entity("TextureCamera");\n            textureCamera.addComponent("camera", {\n                layers: [worldLayer.id, skyboxLayer.id],\n\n                // set the priority of textureCamera to lower number than the priority of the main camera (which is at default 0)\n                // to make it rendered first each frame\n                priority: -1,\n\n                // this camera renders into texture target\n                renderTarget: renderTarget\n            });\n\n            // add sphere at the position of this camera to see it in the world\n            textureCamera.addComponent("render", {\n                type: "sphere"\n            });\n            app.root.addChild(textureCamera);\n\n            // Create an Entity with a omni light component and add it to world layer (and so used by both cameras)\n            const light = new pc.Entity();\n            light.addComponent("light", {\n                type: "omni",\n                color: pc.Color.WHITE,\n                range: 200,\n                castShadows: true,\n                layers: [worldLayer.id]\n            });\n            light.translate(0, 2, 5);\n            app.root.addChild(light);\n\n            // create a plane called tv which we use to display rendered texture\n            // this is only added to excluded Layer, so it does not render into texture\n            const tv = createPrimitive("plane", new pc.Vec3(6, 8, -5), new pc.Vec3(20, 10, 10), pc.Color.BLACK, [excludedLayer.id]);\n            tv.setLocalEulerAngles(90, 0, 0);\n            tv.render.castShadows = false;\n            tv.render.receiveShadows = false;\n            const material = tv.render.material as pc.StandardMaterial;\n            material.emissiveMap = texture;     // assign the rendered texture as an emissive texture\n            material.update();\n\n            // setup skydome, use top mipmap level of cubemap (full resolution)\n            app.scene.skyboxMip = 0;\n            app.scene.envAtlas = assets.helipad.resource;\n\n            app.scene.toneMapping = pc.TONEMAP_ACES;\n\n            // update things each frame\n            let time = 0;\n            let switchTime = 0;\n            app.on("update", function (dt) {\n                // rotate texture camera around the objects\n                time += dt;\n                textureCamera.setLocalPosition(12 * Math.sin(time), 3, 12 * Math.cos(time));\n                textureCamera.lookAt(pc.Vec3.ZERO);\n\n                // every 5 seconds switch texture camera between perspective and orthographic projection\n                switchTime += dt;\n                if (switchTime > 5) {\n                    switchTime = 0;\n                    if (textureCamera.camera.projection === pc.PROJECTION_ORTHOGRAPHIC) {\n                        textureCamera.camera.projection = pc.PROJECTION_PERSPECTIVE;\n                    } else {\n                        textureCamera.camera.projection = pc.PROJECTION_ORTHOGRAPHIC;\n                        textureCamera.camera.orthoHeight = 5;\n                    }\n                }\n\n                // debug draw the texture on the screen in the excludedLayer layer of the main camera\n                // @ts-ignore engine-tsd\n                app.drawTexture(0.7, -0.7, 0.5, 0.5, texture, null, excludedLayer);\n\n            });\n        });\n    });\n}',javaScriptFunction:'function example(canvas, deviceType) {\n    // Overview:\n    // There are 3 layers used:\n    // - worldLayer - it contains objects that render into main camera and also into texture\n    // - excludedLayer - it contains objects that are excluded from rendering into texture and so render only into main camera\n    // - skyboxLayer - it contains skybox and renders into both main and texture camera\n    // There are two cameras:\n    // - textureCamera - this camera renders into texture, objects from World and also Skybox layers\n    // - camera - this camera renders into main framebuffer, objects from World, Excluded and also Skybox layers\n\n    const assets = {\n        helipad: new pc.Asset(\n            "helipad-env-atlas",\n            "texture",\n            { url: "/static/assets/cubemaps/helipad-env-atlas.png" },\n            { type: pc.TEXTURETYPE_RGBP, mipmaps: false }\n        ),\n        checkerboard: new pc.Asset("checkerboard", "texture", {\n            url: "/static/assets/textures/checkboard.png",\n        }),\n        script: new pc.Asset("script", "script", {\n            url: "/static/scripts/camera/orbit-camera.js",\n        }),\n    };\n\n    const gfxOptions = {\n        deviceTypes: [deviceType],\n        glslangUrl: "/static/lib/glslang/glslang.js",\n        twgslUrl: "/static/lib/twgsl/twgsl.js",\n    };\n\n    pc.createGraphicsDevice(canvas, gfxOptions).then((device) => {\n        const createOptions = new pc.AppOptions();\n        createOptions.graphicsDevice = device;\n        createOptions.mouse = new pc.Mouse(document.body);\n        createOptions.touch = new pc.TouchDevice(document.body);\n        createOptions.keyboard = new pc.Keyboard(document.body);\n\n        createOptions.componentSystems = [\n            // @ts-ignore\n            pc.RenderComponentSystem,\n            // @ts-ignore\n            pc.CameraComponentSystem,\n            // @ts-ignore\n            pc.LightComponentSystem,\n            // @ts-ignore\n            pc.ScriptComponentSystem,\n            // @ts-ignore\n            pc.ParticleSystemComponentSystem,\n        ];\n\n        createOptions.resourceHandlers = [\n            // @ts-ignore\n            pc.TextureHandler,\n            // @ts-ignore\n            pc.ScriptHandler,\n        ];\n\n        const app = new pc.AppBase(canvas);\n        app.init(createOptions);\n\n        // Set the canvas to fill the window and automatically change resolution to be the same as the canvas size\n        app.setCanvasFillMode(pc.FILLMODE_FILL_WINDOW);\n        app.setCanvasResolution(pc.RESOLUTION_AUTO);\n\n        const assetListLoader = new pc.AssetListLoader(\n            Object.values(assets),\n            app.assets\n        );\n        assetListLoader.load(() => {\n            app.start();\n\n            // helper function to create a primitive with shape type, position, scale, color and layer\n            function createPrimitive(\n                primitiveType,\n                position,\n                scale,\n                color,\n                layer\n            ) {\n                // create material of specified color\n                const material = new pc.StandardMaterial();\n                material.diffuse = color;\n                material.update();\n\n                // create primitive\n                const primitive = new pc.Entity();\n                primitive.addComponent("render", {\n                    type: primitiveType,\n                    layers: layer,\n                    material: material,\n                });\n\n                // set position and scale and add it to scene\n                primitive.setLocalPosition(position);\n                primitive.setLocalScale(scale);\n                app.root.addChild(primitive);\n\n                return primitive;\n            }\n\n            // helper function to create a basic particle system\n            function createParticleSystem(position) {\n                // make particles move in different directions\n                const localVelocityCurve = new pc.CurveSet([\n                    [0, 0, 0.5, 8],\n                    [0, 0, 0.5, 8],\n                    [0, 0, 0.5, 8],\n                ]);\n                const localVelocityCurve2 = new pc.CurveSet([\n                    [0, 0, 0.5, -8],\n                    [0, 0, 0.5, -8],\n                    [0, 0, 0.5, -8],\n                ]);\n\n                // increasing gravity\n                const worldVelocityCurve = new pc.CurveSet([\n                    [0, 0],\n                    [0, 0, 0.2, 6, 1, -48],\n                    [0, 0],\n                ]);\n\n                // Create entity for particle system\n                const entity = new pc.Entity();\n                app.root.addChild(entity);\n                entity.setLocalPosition(position);\n\n                // add particlesystem component to entity\n                entity.addComponent("particlesystem", {\n                    numParticles: 200,\n                    lifetime: 1,\n                    rate: 0.01,\n                    scaleGraph: new pc.Curve([0, 0.5]),\n                    velocityGraph: worldVelocityCurve,\n                    localVelocityGraph: localVelocityCurve,\n                    localVelocityGraph2: localVelocityCurve2,\n                });\n            }\n\n            // create texture and render target for rendering into, including depth buffer\n            const texture = new pc.Texture(app.graphicsDevice, {\n                width: 512,\n                height: 256,\n                format: pc.PIXELFORMAT_RGB8,\n                mipmaps: true,\n                minFilter: pc.FILTER_LINEAR,\n                magFilter: pc.FILTER_LINEAR,\n                addressU: pc.ADDRESS_CLAMP_TO_EDGE,\n                addressV: pc.ADDRESS_CLAMP_TO_EDGE,\n            });\n            const renderTarget = new pc.RenderTarget({\n                name: `RT`,\n                colorBuffer: texture,\n                depth: true,\n                flipY: !app.graphicsDevice.isWebGPU,\n                samples: 2,\n            });\n\n            // create a layer for object that do not render into texture, add it right after the world layer\n            const excludedLayer = new pc.Layer({ name: "Excluded" });\n            app.scene.layers.insert(excludedLayer, 1);\n\n            // get existing layers\n            const worldLayer = app.scene.layers.getLayerByName("World");\n            const skyboxLayer = app.scene.layers.getLayerByName("Skybox");\n            const uiLayer = app.scene.layers.getLayerByName("UI");\n\n            // create ground plane and 3 primitives, visible in world layer\n            const plane = createPrimitive(\n                "plane",\n                new pc.Vec3(0, 0, 0),\n                new pc.Vec3(20, 20, 20),\n                new pc.Color(3, 4, 2),\n                [worldLayer.id]\n            );\n            const planeMaterial = plane.render.meshInstances[0].material;\n\n            // make the texture tiles and use anisotropic filtering to prevent blurring\n            planeMaterial.diffuseMap = assets.checkerboard.resource;\n            planeMaterial.diffuseTint = true;\n            planeMaterial.diffuseMapTiling.set(10, 10);\n            planeMaterial.anisotropy = 16;\n\n            createPrimitive(\n                "sphere",\n                new pc.Vec3(-2, 1, 0),\n                new pc.Vec3(2, 2, 2),\n                pc.Color.RED,\n                [worldLayer.id]\n            );\n            createPrimitive(\n                "cone",\n                new pc.Vec3(0, 1, -2),\n                new pc.Vec3(2, 2, 2),\n                pc.Color.CYAN,\n                [worldLayer.id]\n            );\n            createPrimitive(\n                "box",\n                new pc.Vec3(2, 1, 0),\n                new pc.Vec3(2, 2, 2),\n                pc.Color.YELLOW,\n                [worldLayer.id]\n            );\n\n            // particle system\n            createParticleSystem(new pc.Vec3(2, 3, 0));\n\n            // Create main camera, which renders entities in world, excluded and skybox layers\n            const camera = new pc.Entity("Camera");\n            camera.addComponent("camera", {\n                fov: 100,\n                layers: [\n                    worldLayer.id,\n                    excludedLayer.id,\n                    skyboxLayer.id,\n                    uiLayer.id,\n                ],\n            });\n            camera.translate(0, 9, 15);\n            camera.lookAt(1, 4, 0);\n            app.root.addChild(camera);\n\n            // add orbit camera script with a mouse and a touch support\n            camera.addComponent("script");\n            camera.script.create("orbitCamera", {\n                attributes: {\n                    inertiaFactor: 0.2,\n                    focusEntity: plane,\n                    distanceMax: 20,\n                    frameOnStart: false,\n                },\n            });\n            camera.script.create("orbitCameraInputMouse");\n            camera.script.create("orbitCameraInputTouch");\n\n            // Create texture camera, which renders entities in world and skybox layers into the texture\n            const textureCamera = new pc.Entity("TextureCamera");\n            textureCamera.addComponent("camera", {\n                layers: [worldLayer.id, skyboxLayer.id],\n\n                // set the priority of textureCamera to lower number than the priority of the main camera (which is at default 0)\n                // to make it rendered first each frame\n                priority: -1,\n\n                // this camera renders into texture target\n                renderTarget: renderTarget,\n            });\n\n            // add sphere at the position of this camera to see it in the world\n            textureCamera.addComponent("render", {\n                type: "sphere",\n            });\n            app.root.addChild(textureCamera);\n\n            // Create an Entity with a omni light component and add it to world layer (and so used by both cameras)\n            const light = new pc.Entity();\n            light.addComponent("light", {\n                type: "omni",\n                color: pc.Color.WHITE,\n                range: 200,\n                castShadows: true,\n                layers: [worldLayer.id],\n            });\n            light.translate(0, 2, 5);\n            app.root.addChild(light);\n\n            // create a plane called tv which we use to display rendered texture\n            // this is only added to excluded Layer, so it does not render into texture\n            const tv = createPrimitive(\n                "plane",\n                new pc.Vec3(6, 8, -5),\n                new pc.Vec3(20, 10, 10),\n                pc.Color.BLACK,\n                [excludedLayer.id]\n            );\n            tv.setLocalEulerAngles(90, 0, 0);\n            tv.render.castShadows = false;\n            tv.render.receiveShadows = false;\n            const material = tv.render.material;\n            material.emissiveMap = texture; // assign the rendered texture as an emissive texture\n            material.update();\n\n            // setup skydome, use top mipmap level of cubemap (full resolution)\n            app.scene.skyboxMip = 0;\n            app.scene.envAtlas = assets.helipad.resource;\n\n            app.scene.toneMapping = pc.TONEMAP_ACES;\n\n            // update things each frame\n            let time = 0;\n            let switchTime = 0;\n            app.on("update", function (dt) {\n                // rotate texture camera around the objects\n                time += dt;\n                textureCamera.setLocalPosition(\n                    12 * Math.sin(time),\n                    3,\n                    12 * Math.cos(time)\n                );\n                textureCamera.lookAt(pc.Vec3.ZERO);\n\n                // every 5 seconds switch texture camera between perspective and orthographic projection\n                switchTime += dt;\n                if (switchTime > 5) {\n                    switchTime = 0;\n                    if (\n                        textureCamera.camera.projection ===\n                        pc.PROJECTION_ORTHOGRAPHIC\n                    ) {\n                        textureCamera.camera.projection =\n                            pc.PROJECTION_PERSPECTIVE;\n                    } else {\n                        textureCamera.camera.projection =\n                            pc.PROJECTION_ORTHOGRAPHIC;\n                        textureCamera.camera.orthoHeight = 5;\n                    }\n                }\n\n                // debug draw the texture on the screen in the excludedLayer layer of the main camera\n                // @ts-ignore engine-tsd\n                app.drawTexture(\n                    0.7,\n                    -0.7,\n                    0.5,\n                    0.5,\n                    texture,\n                    null,\n                    excludedLayer\n                );\n            });\n        });\n    });\n}\n',nameSlug:"render-to-texture",categorySlug:"graphics"},"shader-burn":{typeScriptFunction:"function example(canvas: HTMLCanvasElement, deviceType: string, files: { 'shader.vert': string, 'shader.frag': string }): void {\n\n    const assets = {\n        'statue': new pc.Asset('statue', 'container', { url: '/static/assets/models/statue.glb' }),\n        'clouds': new pc.Asset('clouds', 'texture', { url: '/static/assets/textures/clouds.jpg' })\n    };\n\n    const gfxOptions = {\n        deviceTypes: [deviceType],\n        glslangUrl: '/static/lib/glslang/glslang.js',\n        twgslUrl: '/static/lib/twgsl/twgsl.js'\n    };\n\n    pc.createGraphicsDevice(canvas, gfxOptions).then((device: pc.GraphicsDevice) => {\n\n        const createOptions = new pc.AppOptions();\n        createOptions.graphicsDevice = device;\n        createOptions.mouse = new pc.Mouse(document.body);\n        createOptions.touch = new pc.TouchDevice(document.body);\n        createOptions.keyboard = new pc.Keyboard(document.body);\n\n        createOptions.componentSystems = [\n            // @ts-ignore\n            pc.RenderComponentSystem,\n            // @ts-ignore\n            pc.CameraComponentSystem,\n            // @ts-ignore\n            pc.LightComponentSystem\n        ];\n        createOptions.resourceHandlers = [\n            // @ts-ignore\n            pc.TextureHandler,\n            // @ts-ignore\n            pc.ContainerHandler\n        ];\n\n        const app = new pc.AppBase(canvas);\n        app.init(createOptions);\n\n        // Set the canvas to fill the window and automatically change resolution to be the same as the canvas size\n        app.setCanvasFillMode(pc.FILLMODE_FILL_WINDOW);\n        app.setCanvasResolution(pc.RESOLUTION_AUTO);\n\n        const assetListLoader = new pc.AssetListLoader(Object.values(assets), app.assets);\n        assetListLoader.load(() => {\n\n            app.start();\n\n            app.scene.ambientLight = new pc.Color(0.2, 0.2, 0.2);\n\n            // Create an Entity with a camera component\n            const camera = new pc.Entity();\n            camera.addComponent(\"camera\", {\n                clearColor: new pc.Color(0.4, 0.45, 0.5)\n            });\n            camera.translate(0, 7, 24);\n\n            // Create an Entity with a omni light component and a sphere model component.\n            const light = new pc.Entity();\n            light.addComponent(\"light\", {\n                type: \"omni\",\n                color: new pc.Color(1, 1, 1),\n                radius: 10\n            });\n            light.translate(0, 1, 0);\n\n            // Add entities into scene hierarchy\n            app.root.addChild(camera);\n            app.root.addChild(light);\n\n            // Create the shader from the vertex and fragment shaders\n            const shader = pc.createShaderFromCode(app.graphicsDevice, files['shader.vert'], files['shader.frag'], 'myShader', {\n                aPosition: pc.SEMANTIC_POSITION,\n                aUv0: pc.SEMANTIC_TEXCOORD0\n            });\n\n            // Create a new material with the new shader\n            const material = new pc.Material();\n            material.shader = shader;\n            material.setParameter('uHeightMap', assets.clouds.resource);\n\n            // create a hierarchy of entities with render components, representing the statue model\n            const entity = assets.statue.resource.instantiateRenderEntity();\n            app.root.addChild(entity);\n\n            // Set the new material on all meshes in the model, and use original texture from the model on the new material\n            let originalTexture:pc.Texture = null;\n            const renders: Array<pc.RenderComponent> = entity.findComponents(\"render\");\n            renders.forEach((render) => {\n                const meshInstances = render.meshInstances;\n                for (let i = 0; i < meshInstances.length; i++) {\n                    const meshInstance = meshInstances[i];\n                    if (!originalTexture) {\n                        const originalMaterial = meshInstance.material as pc.StandardMaterial;\n                        originalTexture = originalMaterial.diffuseMap;\n                    }\n                    meshInstance.material = material;\n                }\n            });\n\n            // material is set up, update it\n            material.setParameter('uDiffuseMap', originalTexture);\n            material.update();\n\n            let time = 0;\n            app.on(\"update\", function (dt) {\n                time += 0.2 * dt;\n\n                // reverse time\n                let t = time % 2;\n                if (t > 1) {\n                    t = 1 - (t - 1);\n                }\n\n                // set time parameter for the shader\n                material.setParameter('uTime', t);\n                material.update();\n            });\n        });\n    });\n}",javaScriptFunction:'function example(canvas, deviceType, files) {\n    const assets = {\n        statue: new pc.Asset("statue", "container", {\n            url: "/static/assets/models/statue.glb",\n        }),\n        clouds: new pc.Asset("clouds", "texture", {\n            url: "/static/assets/textures/clouds.jpg",\n        }),\n    };\n\n    const gfxOptions = {\n        deviceTypes: [deviceType],\n        glslangUrl: "/static/lib/glslang/glslang.js",\n        twgslUrl: "/static/lib/twgsl/twgsl.js",\n    };\n\n    pc.createGraphicsDevice(canvas, gfxOptions).then((device) => {\n        const createOptions = new pc.AppOptions();\n        createOptions.graphicsDevice = device;\n        createOptions.mouse = new pc.Mouse(document.body);\n        createOptions.touch = new pc.TouchDevice(document.body);\n        createOptions.keyboard = new pc.Keyboard(document.body);\n\n        createOptions.componentSystems = [\n            // @ts-ignore\n            pc.RenderComponentSystem,\n            // @ts-ignore\n            pc.CameraComponentSystem,\n            // @ts-ignore\n            pc.LightComponentSystem,\n        ];\n\n        createOptions.resourceHandlers = [\n            // @ts-ignore\n            pc.TextureHandler,\n            // @ts-ignore\n            pc.ContainerHandler,\n        ];\n\n        const app = new pc.AppBase(canvas);\n        app.init(createOptions);\n\n        // Set the canvas to fill the window and automatically change resolution to be the same as the canvas size\n        app.setCanvasFillMode(pc.FILLMODE_FILL_WINDOW);\n        app.setCanvasResolution(pc.RESOLUTION_AUTO);\n\n        const assetListLoader = new pc.AssetListLoader(\n            Object.values(assets),\n            app.assets\n        );\n        assetListLoader.load(() => {\n            app.start();\n\n            app.scene.ambientLight = new pc.Color(0.2, 0.2, 0.2);\n\n            // Create an Entity with a camera component\n            const camera = new pc.Entity();\n            camera.addComponent("camera", {\n                clearColor: new pc.Color(0.4, 0.45, 0.5),\n            });\n            camera.translate(0, 7, 24);\n\n            // Create an Entity with a omni light component and a sphere model component.\n            const light = new pc.Entity();\n            light.addComponent("light", {\n                type: "omni",\n                color: new pc.Color(1, 1, 1),\n                radius: 10,\n            });\n            light.translate(0, 1, 0);\n\n            // Add entities into scene hierarchy\n            app.root.addChild(camera);\n            app.root.addChild(light);\n\n            // Create the shader from the vertex and fragment shaders\n            const shader = pc.createShaderFromCode(\n                app.graphicsDevice,\n                files["shader.vert"],\n                files["shader.frag"],\n                "myShader",\n                {\n                    aPosition: pc.SEMANTIC_POSITION,\n                    aUv0: pc.SEMANTIC_TEXCOORD0,\n                }\n            );\n\n            // Create a new material with the new shader\n            const material = new pc.Material();\n            material.shader = shader;\n            material.setParameter("uHeightMap", assets.clouds.resource);\n\n            // create a hierarchy of entities with render components, representing the statue model\n            const entity = assets.statue.resource.instantiateRenderEntity();\n            app.root.addChild(entity);\n\n            // Set the new material on all meshes in the model, and use original texture from the model on the new material\n            let originalTexture = null;\n            const renders = entity.findComponents("render");\n            renders.forEach((render) => {\n                const meshInstances = render.meshInstances;\n                for (let i = 0; i < meshInstances.length; i++) {\n                    const meshInstance = meshInstances[i];\n                    if (!originalTexture) {\n                        const originalMaterial = meshInstance.material;\n                        originalTexture = originalMaterial.diffuseMap;\n                    }\n                    meshInstance.material = material;\n                }\n            });\n\n            // material is set up, update it\n            material.setParameter("uDiffuseMap", originalTexture);\n            material.update();\n\n            let time = 0;\n            app.on("update", function (dt) {\n                time += 0.2 * dt;\n\n                // reverse time\n                let t = time % 2;\n                if (t > 1) {\n                    t = 1 - (t - 1);\n                }\n\n                // set time parameter for the shader\n                material.setParameter("uTime", t);\n                material.update();\n            });\n        });\n    });\n}\n',nameSlug:"shader-burn",categorySlug:"graphics",files:{"shader.vert":"\nattribute vec3 aPosition;\nattribute vec2 aUv0;\n\nuniform mat4 matrix_model;\nuniform mat4 matrix_viewProjection;\n\nvarying vec2 vUv0;\n\nvoid main(void)\n{\n    vUv0 = aUv0;\n    gl_Position = matrix_viewProjection * matrix_model * vec4(aPosition, 1.0);\n}","shader.frag":"\nprecision mediump float;\n\nvarying vec2 vUv0;\n\nuniform sampler2D uDiffuseMap;\nuniform sampler2D uHeightMap;\nuniform float uTime;\n\nvoid main(void)\n{\n    float height = texture2D(uHeightMap, vUv0).r;\n    vec4 color = texture2D(uDiffuseMap, vUv0);\n    if (height < uTime) {\n    discard;\n    }\n    if (height < (uTime + uTime * 0.1)) {\n    color = vec4(1.0, 0.2, 0.0, 1.0);\n    }\n    gl_FragColor = color;\n}"}},"shader-compile":{typeScriptFunction:"function example(canvas: HTMLCanvasElement, deviceType: string): void {\n\n    // This example serves as a test framework for large shader compilation speed test. Enable tracking for it.\n    pc.Tracing.set(pc.TRACEID_SHADER_COMPILE, true);\n\n    const assets = {\n        'color': new pc.Asset('color', 'texture', { url: '/static/assets/textures/seaside-rocks01-color.jpg' }),\n        'normal': new pc.Asset('normal', 'texture', { url: '/static/assets/textures/seaside-rocks01-normal.jpg' }),\n        'gloss': new pc.Asset('gloss', 'texture', { url: '/static/assets/textures/seaside-rocks01-gloss.jpg' }),\n        'luts': new pc.Asset('luts', 'json', { url: '/static/assets/json/area-light-luts.json' }),\n        helipad: new pc.Asset('helipad-env-atlas', 'texture', { url: '/static/assets/cubemaps/helipad-env-atlas.png' }, { type: pc.TEXTURETYPE_RGBP, mipmaps: false })\n    };\n\n    const gfxOptions = {\n        deviceTypes: [deviceType],\n        glslangUrl: '/static/lib/glslang/glslang.js',\n        twgslUrl: '/static/lib/twgsl/twgsl.js'\n    };\n\n    pc.createGraphicsDevice(canvas, gfxOptions).then((device: pc.GraphicsDevice) => {\n\n        const createOptions = new pc.AppOptions();\n        createOptions.graphicsDevice = device;\n        createOptions.mouse = new pc.Mouse(document.body);\n        createOptions.touch = new pc.TouchDevice(document.body);\n        createOptions.keyboard = new pc.Keyboard(document.body);\n\n        createOptions.componentSystems = [\n            // @ts-ignore\n            pc.RenderComponentSystem,\n            // @ts-ignore\n            pc.CameraComponentSystem,\n            // @ts-ignore\n            pc.LightComponentSystem\n        ];\n        createOptions.resourceHandlers = [\n            // @ts-ignore\n            pc.TextureHandler,\n            // @ts-ignore\n            pc.ContainerHandler,\n            // @ts-ignore\n            pc.JsonHandler\n        ];\n\n        const app = new pc.AppBase(canvas);\n        app.init(createOptions);\n\n        // Set the canvas to fill the window and automatically change resolution to be the same as the canvas size\n        app.setCanvasFillMode(pc.FILLMODE_FILL_WINDOW);\n        app.setCanvasResolution(pc.RESOLUTION_AUTO);\n\n        const assetListLoader = new pc.AssetListLoader(Object.values(assets), app.assets);\n        assetListLoader.load(() => {\n\n            app.start();\n\n            // helper function to create a primitive with shape type, position, scale, color\n            function createPrimitive(primitiveType: string, position: pc.Vec3, scale: pc.Vec3, color: pc.Color, assetManifest: any, id: boolean = false) {\n\n                // create material of specified color\n                const material = new pc.StandardMaterial();\n                material.diffuse = color;\n                material.gloss = 0.4;\n                material.useMetalness = true;\n\n                material.diffuseMap = assetManifest.color.resource;\n                material.normalMap = assetManifest.normal.resource;\n                material.glossMap = assetManifest.gloss.resource;\n                material.metalness = 0.4;\n\n                material.diffuseMapTiling.set(7, 7);\n                material.normalMapTiling.set(7, 7);\n                material.glossMapTiling.set(7, 7);\n\n                // do a small update to a chunk to generate unique shader each time, to avoid any shader compilation caching\n                if (id) {\n                    material.chunks.viewDirPS = `\n                        void getViewDir() {\n                            dViewDirW = normalize(view_position - vPositionW);\n                            dViewDirW.x += 0.00001 * ${Math.random()};\n                        }\n                    `;\n                }\n\n                material.update();\n\n                // create primitive\n                const primitive = new pc.Entity();\n                primitive.addComponent('render', {\n                    type: primitiveType,\n                    material: material\n                });\n\n                // set position and scale and add it to scene\n                primitive.setLocalPosition(position);\n                primitive.setLocalScale(scale);\n                app.root.addChild(primitive);\n\n                return primitive;\n            }\n\n            // enable area lights which are disabled by default for clustered lighting\n            app.scene.lighting.areaLightsEnabled = true;\n\n            // set the loaded area light LUT data\n            const luts = assets.luts.resource;\n            app.setAreaLightLuts(luts.LTC_MAT_1, luts.LTC_MAT_2);\n\n            // set up some general scene rendering properties\n            app.scene.toneMapping = pc.TONEMAP_ACES;\n\n            // setup skydome\n            app.scene.skyboxMip = 1;\n            app.scene.skyboxIntensity = 0.7;\n            app.scene.envAtlas = assets.helipad.resource;\n\n            // create ground plane\n            createPrimitive(\"plane\", new pc.Vec3(0, 0, 0), new pc.Vec3(20, 20, 20), new pc.Color(0.3, 0.3, 0.3), assets);\n\n            // Create the camera, which renders entities\n            const camera = new pc.Entity();\n            camera.addComponent(\"camera\", {\n                clearColor: new pc.Color(0.2, 0.2, 0.2),\n                fov: 60,\n                farClip: 100000\n            });\n            app.root.addChild(camera);\n            camera.setLocalPosition(0, 15, 40);\n            camera.lookAt(0, 0, 0);\n\n            // generate a grid of spheres, each with a unique material / shader\n            for (let x = -10; x <= 10; x += 6) {\n                for (let y = -10; y <= 10; y += 6) {\n                    const pos = new pc.Vec3(x, 0.6, y);\n                    const color = new pc.Color(0.3 + Math.random() * 0.7, 0.3 + Math.random() * 0.7, 0.3 + Math.random() * 0.7);\n                    createPrimitive(\"sphere\", pos, new pc.Vec3(1, 1, 1), color, assets, true);\n                }\n            }\n\n            // create some omni lights\n            const count = 10;\n            const lights: Array<pc.Entity> = [];\n            for (let i = 0; i < count; i++) {\n                const color = new pc.Color(Math.random(), Math.random(), Math.random(), 1);\n                const light = new pc.Entity();\n                light.addComponent(\"light\", {\n                    type: \"spot\",\n                    color: color,\n                    intensity: 4,\n                    range: 16,\n                    castShadows: false\n                });\n\n                // attach a render component with a small cone to each light\n                const material = new pc.StandardMaterial();\n                material.emissive = color;\n                material.update();\n\n                light.addComponent('render', {\n                    type: \"sphere\",\n                    material: material\n                });\n                light.setLocalScale(0.5, 0.5, 0.5);\n\n                app.root.addChild(light);\n                lights.push(light);\n            }\n\n            // update things each frame\n            let time = 0;\n            app.on(\"update\", function (dt: number) {\n                time += dt;\n\n                // orbit spot lights around\n                lights.forEach(function (light, i) {\n                    const angle = (i / lights.length) * Math.PI * 2;\n                    light.setLocalPosition(8 * Math.sin(time + angle), 4, 8 * Math.cos(time + angle));\n                });\n            });\n        });\n    });\n}",javaScriptFunction:'function example(canvas, deviceType) {\n    // This example serves as a test framework for large shader compilation speed test. Enable tracking for it.\n    pc.Tracing.set(pc.TRACEID_SHADER_COMPILE, true);\n\n    const assets = {\n        color: new pc.Asset("color", "texture", {\n            url: "/static/assets/textures/seaside-rocks01-color.jpg",\n        }),\n        normal: new pc.Asset("normal", "texture", {\n            url: "/static/assets/textures/seaside-rocks01-normal.jpg",\n        }),\n        gloss: new pc.Asset("gloss", "texture", {\n            url: "/static/assets/textures/seaside-rocks01-gloss.jpg",\n        }),\n        luts: new pc.Asset("luts", "json", {\n            url: "/static/assets/json/area-light-luts.json",\n        }),\n        helipad: new pc.Asset(\n            "helipad-env-atlas",\n            "texture",\n            { url: "/static/assets/cubemaps/helipad-env-atlas.png" },\n            { type: pc.TEXTURETYPE_RGBP, mipmaps: false }\n        ),\n    };\n\n    const gfxOptions = {\n        deviceTypes: [deviceType],\n        glslangUrl: "/static/lib/glslang/glslang.js",\n        twgslUrl: "/static/lib/twgsl/twgsl.js",\n    };\n\n    pc.createGraphicsDevice(canvas, gfxOptions).then((device) => {\n        const createOptions = new pc.AppOptions();\n        createOptions.graphicsDevice = device;\n        createOptions.mouse = new pc.Mouse(document.body);\n        createOptions.touch = new pc.TouchDevice(document.body);\n        createOptions.keyboard = new pc.Keyboard(document.body);\n\n        createOptions.componentSystems = [\n            // @ts-ignore\n            pc.RenderComponentSystem,\n            // @ts-ignore\n            pc.CameraComponentSystem,\n            // @ts-ignore\n            pc.LightComponentSystem,\n        ];\n\n        createOptions.resourceHandlers = [\n            // @ts-ignore\n            pc.TextureHandler,\n            // @ts-ignore\n            pc.ContainerHandler,\n            // @ts-ignore\n            pc.JsonHandler,\n        ];\n\n        const app = new pc.AppBase(canvas);\n        app.init(createOptions);\n\n        // Set the canvas to fill the window and automatically change resolution to be the same as the canvas size\n        app.setCanvasFillMode(pc.FILLMODE_FILL_WINDOW);\n        app.setCanvasResolution(pc.RESOLUTION_AUTO);\n\n        const assetListLoader = new pc.AssetListLoader(\n            Object.values(assets),\n            app.assets\n        );\n        assetListLoader.load(() => {\n            app.start();\n\n            // helper function to create a primitive with shape type, position, scale, color\n            function createPrimitive(\n                primitiveType,\n                position,\n                scale,\n                color,\n                assetManifest,\n                id = false\n            ) {\n                // create material of specified color\n                const material = new pc.StandardMaterial();\n                material.diffuse = color;\n                material.gloss = 0.4;\n                material.useMetalness = true;\n\n                material.diffuseMap = assetManifest.color.resource;\n                material.normalMap = assetManifest.normal.resource;\n                material.glossMap = assetManifest.gloss.resource;\n                material.metalness = 0.4;\n\n                material.diffuseMapTiling.set(7, 7);\n                material.normalMapTiling.set(7, 7);\n                material.glossMapTiling.set(7, 7);\n\n                // do a small update to a chunk to generate unique shader each time, to avoid any shader compilation caching\n                if (id) {\n                    material.chunks.viewDirPS = `\n                        void getViewDir() {\n                            dViewDirW = normalize(view_position - vPositionW);\n                            dViewDirW.x += 0.00001 * ${Math.random()};\n                        }\n                    `;\n                }\n\n                material.update();\n\n                // create primitive\n                const primitive = new pc.Entity();\n                primitive.addComponent("render", {\n                    type: primitiveType,\n                    material: material,\n                });\n\n                // set position and scale and add it to scene\n                primitive.setLocalPosition(position);\n                primitive.setLocalScale(scale);\n                app.root.addChild(primitive);\n\n                return primitive;\n            }\n\n            // enable area lights which are disabled by default for clustered lighting\n            app.scene.lighting.areaLightsEnabled = true;\n\n            // set the loaded area light LUT data\n            const luts = assets.luts.resource;\n            app.setAreaLightLuts(luts.LTC_MAT_1, luts.LTC_MAT_2);\n\n            // set up some general scene rendering properties\n            app.scene.toneMapping = pc.TONEMAP_ACES;\n\n            // setup skydome\n            app.scene.skyboxMip = 1;\n            app.scene.skyboxIntensity = 0.7;\n            app.scene.envAtlas = assets.helipad.resource;\n\n            // create ground plane\n            createPrimitive(\n                "plane",\n                new pc.Vec3(0, 0, 0),\n                new pc.Vec3(20, 20, 20),\n                new pc.Color(0.3, 0.3, 0.3),\n                assets\n            );\n\n            // Create the camera, which renders entities\n            const camera = new pc.Entity();\n            camera.addComponent("camera", {\n                clearColor: new pc.Color(0.2, 0.2, 0.2),\n                fov: 60,\n                farClip: 100000,\n            });\n            app.root.addChild(camera);\n            camera.setLocalPosition(0, 15, 40);\n            camera.lookAt(0, 0, 0);\n\n            // generate a grid of spheres, each with a unique material / shader\n            for (let x = -10; x <= 10; x += 6) {\n                for (let y = -10; y <= 10; y += 6) {\n                    const pos = new pc.Vec3(x, 0.6, y);\n                    const color = new pc.Color(\n                        0.3 + Math.random() * 0.7,\n                        0.3 + Math.random() * 0.7,\n                        0.3 + Math.random() * 0.7\n                    );\n                    createPrimitive(\n                        "sphere",\n                        pos,\n                        new pc.Vec3(1, 1, 1),\n                        color,\n                        assets,\n                        true\n                    );\n                }\n            }\n\n            // create some omni lights\n            const count = 10;\n            const lights = [];\n            for (let i = 0; i < count; i++) {\n                const color = new pc.Color(\n                    Math.random(),\n                    Math.random(),\n                    Math.random(),\n                    1\n                );\n                const light = new pc.Entity();\n                light.addComponent("light", {\n                    type: "spot",\n                    color: color,\n                    intensity: 4,\n                    range: 16,\n                    castShadows: false,\n                });\n\n                // attach a render component with a small cone to each light\n                const material = new pc.StandardMaterial();\n                material.emissive = color;\n                material.update();\n\n                light.addComponent("render", {\n                    type: "sphere",\n                    material: material,\n                });\n                light.setLocalScale(0.5, 0.5, 0.5);\n\n                app.root.addChild(light);\n                lights.push(light);\n            }\n\n            // update things each frame\n            let time = 0;\n            app.on("update", function (dt) {\n                time += dt;\n\n                // orbit spot lights around\n                lights.forEach(function (light, i) {\n                    const angle = (i / lights.length) * Math.PI * 2;\n                    light.setLocalPosition(\n                        8 * Math.sin(time + angle),\n                        4,\n                        8 * Math.cos(time + angle)\n                    );\n                });\n            });\n        });\n    });\n}\n',nameSlug:"shader-compile",categorySlug:"graphics"},"shader-toon":{typeScriptFunction:"function example(canvas: HTMLCanvasElement, deviceType: string, files: { 'shader.vert': string, 'shader.frag': string }): void {\n\n    const assets = {\n        'statue': new pc.Asset('statue', 'container', { url: '/static/assets/models/statue.glb' })\n    };\n\n    const gfxOptions = {\n        deviceTypes: [deviceType],\n        glslangUrl: '/static/lib/glslang/glslang.js',\n        twgslUrl: '/static/lib/twgsl/twgsl.js'\n    };\n\n    pc.createGraphicsDevice(canvas, gfxOptions).then((device: pc.GraphicsDevice) => {\n\n        const createOptions = new pc.AppOptions();\n        createOptions.graphicsDevice = device;\n        createOptions.mouse = new pc.Mouse(document.body);\n        createOptions.touch = new pc.TouchDevice(document.body);\n        createOptions.keyboard = new pc.Keyboard(document.body);\n\n        createOptions.componentSystems = [\n            // @ts-ignore\n            pc.RenderComponentSystem,\n            // @ts-ignore\n            pc.CameraComponentSystem,\n            // @ts-ignore\n            pc.LightComponentSystem\n        ];\n        createOptions.resourceHandlers = [\n            // @ts-ignore\n            pc.TextureHandler,\n            // @ts-ignore\n            pc.ContainerHandler\n        ];\n\n        const app = new pc.AppBase(canvas);\n        app.init(createOptions);\n\n        // Set the canvas to fill the window and automatically change resolution to be the same as the canvas size\n        app.setCanvasFillMode(pc.FILLMODE_FILL_WINDOW);\n        app.setCanvasResolution(pc.RESOLUTION_AUTO);\n\n        const assetListLoader = new pc.AssetListLoader(Object.values(assets), app.assets);\n        assetListLoader.load(() => {\n\n            app.start();\n\n            app.scene.ambientLight = new pc.Color(0.2, 0.2, 0.2);\n\n            // Create an Entity with a camera component\n            const camera = new pc.Entity();\n            camera.addComponent(\"camera\", {\n                clearColor: new pc.Color(0.4, 0.45, 0.5)\n            });\n            camera.translate(0, 7, 24);\n\n            // Create an Entity with a omni light component and a sphere model component.\n            const light = new pc.Entity();\n            light.addComponent(\"light\", {\n                type: \"omni\",\n                color: new pc.Color(1, 1, 1),\n                radius: 10\n            });\n            light.translate(0, 1, 0);\n\n            // Add entities into scene hierarchy\n            app.root.addChild(camera);\n            app.root.addChild(light);\n\n            // Create the shader from the vertex and fragment shaders\n            const shader = pc.createShaderFromCode(app.graphicsDevice, files['shader.vert'], files['shader.frag'], 'myShader', {\n                aPosition: pc.SEMANTIC_POSITION,\n                aNormal: pc.SEMANTIC_NORMAL,\n                aUv: pc.SEMANTIC_TEXCOORD0\n            });\n\n            // Create a new material with the new shader\n            const material = new pc.Material();\n            material.shader = shader;\n\n            // create a hierarchy of entities with render components, representing the statue model\n            const entity = assets.statue.resource.instantiateRenderEntity();\n            app.root.addChild(entity);\n\n            // Set the new material on all meshes in the model, and use original texture from the model on the new material\n            let originalTexture:pc.Texture = null;\n            const renders: Array<pc.RenderComponent> = entity.findComponents(\"render\");\n            renders.forEach((render) => {\n                const meshInstances = render.meshInstances;\n                for (let i = 0; i < meshInstances.length; i++) {\n                    const meshInstance = meshInstances[i];\n                    if (!originalTexture) {\n                        const originalMaterial = meshInstance.material as pc.StandardMaterial;\n                        originalTexture = originalMaterial.diffuseMap;\n                    }\n                    meshInstance.material = material;\n                }\n            });\n\n            // material parameters\n            const lightPosArray = [light.getPosition().x, light.getPosition().y, light.getPosition().z];\n            material.setParameter('uLightPos', lightPosArray);\n            material.setParameter('uTexture', originalTexture);\n            material.update();\n\n            // rotate the statue\n            app.on(\"update\", function (dt) {\n                entity.rotate(0, 60 * dt, 0);\n            });\n        });\n    });\n}",javaScriptFunction:'function example(canvas, deviceType, files) {\n    const assets = {\n        statue: new pc.Asset("statue", "container", {\n            url: "/static/assets/models/statue.glb",\n        }),\n    };\n\n    const gfxOptions = {\n        deviceTypes: [deviceType],\n        glslangUrl: "/static/lib/glslang/glslang.js",\n        twgslUrl: "/static/lib/twgsl/twgsl.js",\n    };\n\n    pc.createGraphicsDevice(canvas, gfxOptions).then((device) => {\n        const createOptions = new pc.AppOptions();\n        createOptions.graphicsDevice = device;\n        createOptions.mouse = new pc.Mouse(document.body);\n        createOptions.touch = new pc.TouchDevice(document.body);\n        createOptions.keyboard = new pc.Keyboard(document.body);\n\n        createOptions.componentSystems = [\n            // @ts-ignore\n            pc.RenderComponentSystem,\n            // @ts-ignore\n            pc.CameraComponentSystem,\n            // @ts-ignore\n            pc.LightComponentSystem,\n        ];\n\n        createOptions.resourceHandlers = [\n            // @ts-ignore\n            pc.TextureHandler,\n            // @ts-ignore\n            pc.ContainerHandler,\n        ];\n\n        const app = new pc.AppBase(canvas);\n        app.init(createOptions);\n\n        // Set the canvas to fill the window and automatically change resolution to be the same as the canvas size\n        app.setCanvasFillMode(pc.FILLMODE_FILL_WINDOW);\n        app.setCanvasResolution(pc.RESOLUTION_AUTO);\n\n        const assetListLoader = new pc.AssetListLoader(\n            Object.values(assets),\n            app.assets\n        );\n        assetListLoader.load(() => {\n            app.start();\n\n            app.scene.ambientLight = new pc.Color(0.2, 0.2, 0.2);\n\n            // Create an Entity with a camera component\n            const camera = new pc.Entity();\n            camera.addComponent("camera", {\n                clearColor: new pc.Color(0.4, 0.45, 0.5),\n            });\n            camera.translate(0, 7, 24);\n\n            // Create an Entity with a omni light component and a sphere model component.\n            const light = new pc.Entity();\n            light.addComponent("light", {\n                type: "omni",\n                color: new pc.Color(1, 1, 1),\n                radius: 10,\n            });\n            light.translate(0, 1, 0);\n\n            // Add entities into scene hierarchy\n            app.root.addChild(camera);\n            app.root.addChild(light);\n\n            // Create the shader from the vertex and fragment shaders\n            const shader = pc.createShaderFromCode(\n                app.graphicsDevice,\n                files["shader.vert"],\n                files["shader.frag"],\n                "myShader",\n                {\n                    aPosition: pc.SEMANTIC_POSITION,\n                    aNormal: pc.SEMANTIC_NORMAL,\n                    aUv: pc.SEMANTIC_TEXCOORD0,\n                }\n            );\n\n            // Create a new material with the new shader\n            const material = new pc.Material();\n            material.shader = shader;\n\n            // create a hierarchy of entities with render components, representing the statue model\n            const entity = assets.statue.resource.instantiateRenderEntity();\n            app.root.addChild(entity);\n\n            // Set the new material on all meshes in the model, and use original texture from the model on the new material\n            let originalTexture = null;\n            const renders = entity.findComponents("render");\n            renders.forEach((render) => {\n                const meshInstances = render.meshInstances;\n                for (let i = 0; i < meshInstances.length; i++) {\n                    const meshInstance = meshInstances[i];\n                    if (!originalTexture) {\n                        const originalMaterial = meshInstance.material;\n                        originalTexture = originalMaterial.diffuseMap;\n                    }\n                    meshInstance.material = material;\n                }\n            });\n\n            // material parameters\n            const lightPosArray = [\n                light.getPosition().x,\n                light.getPosition().y,\n                light.getPosition().z,\n            ];\n            material.setParameter("uLightPos", lightPosArray);\n            material.setParameter("uTexture", originalTexture);\n            material.update();\n\n            // rotate the statue\n            app.on("update", function (dt) {\n                entity.rotate(0, 60 * dt, 0);\n            });\n        });\n    });\n}\n',nameSlug:"shader-toon",categorySlug:"graphics",files:{"shader.vert":"\n// Attributes per vertex: position, normal and texture coordinates\nattribute vec4 aPosition;\nattribute vec3 aNormal;\nattribute vec2 aUv;\n\nuniform mat4   matrix_viewProjection;\nuniform mat4   matrix_model;\nuniform mat4   matrix_view;\nuniform mat3   matrix_normal;\nuniform vec3   uLightPos;\n\n// Color to fragment program\nvarying float vertOutTexCoord;\nvarying vec2 texCoord;\n\nvoid main(void)\n{\n    mat4 modelView = matrix_view * matrix_model;\n    mat4 modelViewProj = matrix_viewProjection * matrix_model;\n\n    // Get surface normal in eye coordinates\n    vec3 eyeNormal = normalize(matrix_normal * aNormal);\n\n    // Get vertex position in eye coordinates\n    vec4 vertexPos = modelView * aPosition;\n    vec3 vertexEyePos = vertexPos.xyz / vertexPos.w;\n\n    // Get vector to light source\n    vec3 lightDir = normalize(uLightPos - vertexEyePos);\n\n    // Dot product gives us diffuse intensity. The diffuse intensity will be\n    // used as the 1D color texture coordinate to look for the color of the\n    // resulting fragment (see fragment shader).\n    vertOutTexCoord = max(0.0, dot(eyeNormal, lightDir));\n    texCoord = aUv;\n\n    // Transform the geometry\n    gl_Position = modelViewProj * aPosition;\n}","shader.frag":"\nprecision mediump float;\nuniform sampler2D uTexture;\nvarying float vertOutTexCoord;\nvarying vec2 texCoord;\nvoid main(void)\n{\n    float v = vertOutTexCoord;\n    v = float(int(v * 6.0)) / 6.0;\n    // vec4 color = texture2D (uTexture, texCoord); // try this to use the diffuse color.\n    vec4 color = vec4(0.5, 0.47, 0.43, 1.0);\n    gl_FragColor = color * vec4(v, v, v, 1.0);\n}\n"}},"shader-wobble":{typeScriptFunction:"function example(canvas: HTMLCanvasElement, deviceType: string, files: { 'shader.vert': string, 'shader.frag': string }): void {\n\n    const assets = {\n        'statue': new pc.Asset('statue', 'container', { url: '/static/assets/models/statue.glb' })\n    };\n\n    const gfxOptions = {\n        deviceTypes: [deviceType],\n        glslangUrl: '/static/lib/glslang/glslang.js',\n        twgslUrl: '/static/lib/twgsl/twgsl.js'\n    };\n\n    pc.createGraphicsDevice(canvas, gfxOptions).then((device: pc.GraphicsDevice) => {\n\n        const createOptions = new pc.AppOptions();\n        createOptions.graphicsDevice = device;\n        createOptions.mouse = new pc.Mouse(document.body);\n        createOptions.touch = new pc.TouchDevice(document.body);\n        createOptions.keyboard = new pc.Keyboard(document.body);\n\n        createOptions.componentSystems = [\n            // @ts-ignore\n            pc.RenderComponentSystem,\n            // @ts-ignore\n            pc.CameraComponentSystem,\n            // @ts-ignore\n            pc.LightComponentSystem\n        ];\n        createOptions.resourceHandlers = [\n            // @ts-ignore\n            pc.TextureHandler,\n            // @ts-ignore\n            pc.ContainerHandler\n        ];\n\n        const app = new pc.AppBase(canvas);\n        app.init(createOptions);\n\n        // Set the canvas to fill the window and automatically change resolution to be the same as the canvas size\n        app.setCanvasFillMode(pc.FILLMODE_FILL_WINDOW);\n        app.setCanvasResolution(pc.RESOLUTION_AUTO);\n\n        const assetListLoader = new pc.AssetListLoader(Object.values(assets), app.assets);\n        assetListLoader.load(() => {\n\n            app.start();\n\n            app.scene.ambientLight = new pc.Color(0.2, 0.2, 0.2);\n\n            // Create an Entity with a camera component\n            const camera = new pc.Entity();\n            camera.addComponent(\"camera\", {\n                clearColor: new pc.Color(0.4, 0.45, 0.5)\n            });\n            camera.translate(0, 7, 25);\n\n            // Create an Entity with a omni light component and a sphere model component.\n            const light = new pc.Entity();\n            light.addComponent(\"light\", {\n                type: \"omni\",\n                color: new pc.Color(1, 1, 1),\n                radius: 10\n            });\n            light.translate(0, 1, 0);\n\n            // Add entities into scene hierarchy\n            app.root.addChild(camera);\n            app.root.addChild(light);\n\n            // Create the shader from the vertex and fragment shaders\n            const shader = pc.createShaderFromCode(app.graphicsDevice, files['shader.vert'], files['shader.frag'], 'myShader', {\n                aPosition: pc.SEMANTIC_POSITION,\n                aUv0: pc.SEMANTIC_TEXCOORD0\n            });\n\n            // Create a new material with the new shader\n            const material = new pc.Material();\n            material.shader = shader;\n\n            // create a hierarchy of entities with render components, representing the statue model\n            const entity = assets.statue.resource.instantiateRenderEntity();\n            app.root.addChild(entity);\n\n            // Set the new material on all meshes in the model, and use original texture from the model on the new material\n            let originalTexture: pc.Texture = null;\n            const renders: Array<pc.RenderComponent> = entity.findComponents(\"render\");\n            renders.forEach((render) => {\n                const meshInstances = render.meshInstances;\n                for (let i = 0; i < meshInstances.length; i++) {\n                    const meshInstance = meshInstances[i];\n                    if (!originalTexture) {\n                        const originalMaterial = meshInstance.material as pc.StandardMaterial;\n                        originalTexture = originalMaterial.diffuseMap;\n                    }\n                    meshInstance.material = material;\n                }\n            });\n\n            // material is set up, update it\n            material.setParameter('uDiffuseMap', originalTexture);\n            material.update();\n\n            let time = 0;\n            app.on(\"update\", function (dt) {\n                time += dt;\n\n                // set time parameter for the shader\n                material.setParameter('uTime', time);\n                material.update();\n            });\n        });\n    });\n}",javaScriptFunction:'function example(canvas, deviceType, files) {\n    const assets = {\n        statue: new pc.Asset("statue", "container", {\n            url: "/static/assets/models/statue.glb",\n        }),\n    };\n\n    const gfxOptions = {\n        deviceTypes: [deviceType],\n        glslangUrl: "/static/lib/glslang/glslang.js",\n        twgslUrl: "/static/lib/twgsl/twgsl.js",\n    };\n\n    pc.createGraphicsDevice(canvas, gfxOptions).then((device) => {\n        const createOptions = new pc.AppOptions();\n        createOptions.graphicsDevice = device;\n        createOptions.mouse = new pc.Mouse(document.body);\n        createOptions.touch = new pc.TouchDevice(document.body);\n        createOptions.keyboard = new pc.Keyboard(document.body);\n\n        createOptions.componentSystems = [\n            // @ts-ignore\n            pc.RenderComponentSystem,\n            // @ts-ignore\n            pc.CameraComponentSystem,\n            // @ts-ignore\n            pc.LightComponentSystem,\n        ];\n\n        createOptions.resourceHandlers = [\n            // @ts-ignore\n            pc.TextureHandler,\n            // @ts-ignore\n            pc.ContainerHandler,\n        ];\n\n        const app = new pc.AppBase(canvas);\n        app.init(createOptions);\n\n        // Set the canvas to fill the window and automatically change resolution to be the same as the canvas size\n        app.setCanvasFillMode(pc.FILLMODE_FILL_WINDOW);\n        app.setCanvasResolution(pc.RESOLUTION_AUTO);\n\n        const assetListLoader = new pc.AssetListLoader(\n            Object.values(assets),\n            app.assets\n        );\n        assetListLoader.load(() => {\n            app.start();\n\n            app.scene.ambientLight = new pc.Color(0.2, 0.2, 0.2);\n\n            // Create an Entity with a camera component\n            const camera = new pc.Entity();\n            camera.addComponent("camera", {\n                clearColor: new pc.Color(0.4, 0.45, 0.5),\n            });\n            camera.translate(0, 7, 25);\n\n            // Create an Entity with a omni light component and a sphere model component.\n            const light = new pc.Entity();\n            light.addComponent("light", {\n                type: "omni",\n                color: new pc.Color(1, 1, 1),\n                radius: 10,\n            });\n            light.translate(0, 1, 0);\n\n            // Add entities into scene hierarchy\n            app.root.addChild(camera);\n            app.root.addChild(light);\n\n            // Create the shader from the vertex and fragment shaders\n            const shader = pc.createShaderFromCode(\n                app.graphicsDevice,\n                files["shader.vert"],\n                files["shader.frag"],\n                "myShader",\n                {\n                    aPosition: pc.SEMANTIC_POSITION,\n                    aUv0: pc.SEMANTIC_TEXCOORD0,\n                }\n            );\n\n            // Create a new material with the new shader\n            const material = new pc.Material();\n            material.shader = shader;\n\n            // create a hierarchy of entities with render components, representing the statue model\n            const entity = assets.statue.resource.instantiateRenderEntity();\n            app.root.addChild(entity);\n\n            // Set the new material on all meshes in the model, and use original texture from the model on the new material\n            let originalTexture = null;\n            const renders = entity.findComponents("render");\n            renders.forEach((render) => {\n                const meshInstances = render.meshInstances;\n                for (let i = 0; i < meshInstances.length; i++) {\n                    const meshInstance = meshInstances[i];\n                    if (!originalTexture) {\n                        const originalMaterial = meshInstance.material;\n                        originalTexture = originalMaterial.diffuseMap;\n                    }\n                    meshInstance.material = material;\n                }\n            });\n\n            // material is set up, update it\n            material.setParameter("uDiffuseMap", originalTexture);\n            material.update();\n\n            let time = 0;\n            app.on("update", function (dt) {\n                time += dt;\n\n                // set time parameter for the shader\n                material.setParameter("uTime", time);\n                material.update();\n            });\n        });\n    });\n}\n',nameSlug:"shader-wobble",categorySlug:"graphics",files:{"shader.vert":"\nattribute vec3 aPosition;\nattribute vec2 aUv0;\n\nuniform mat4 matrix_model;\nuniform mat4 matrix_viewProjection;\nuniform float uTime;\n\nvarying vec2 vUv0;\n\nvoid main(void)\n{\n    vec4 pos = matrix_model * vec4(aPosition, 1.0);\n    pos.x += sin(uTime + pos.y * 4.0) * 0.1;\n    pos.y += cos(uTime + pos.x * 4.0) * 0.1;\n    vUv0 = aUv0;\n    gl_Position = matrix_viewProjection * pos;\n}","shader.frag":"\nprecision mediump float;\n\nuniform sampler2D uDiffuseMap;\n\nvarying vec2 vUv0;\n\nvoid main(void)\n{\n    gl_FragColor = texture2D(uDiffuseMap, vUv0);\n}"}},"shadow-cascades":{typeScriptFunction:"function example(canvas: HTMLCanvasElement, deviceType: string, data: any): void {\n\n    const assets = {\n        'script': new pc.Asset('script', 'script', { url: '/static/scripts/camera/orbit-camera.js' }),\n        'terrain': new pc.Asset('terrain', 'container', { url: '/static/assets/models/terrain.glb' }),\n        helipad: new pc.Asset('helipad-env-atlas', 'texture', { url: '/static/assets/cubemaps/helipad-env-atlas.png' }, { type: pc.TEXTURETYPE_RGBP, mipmaps: false })\n    };\n\n    const gfxOptions = {\n        deviceTypes: [deviceType],\n        glslangUrl: '/static/lib/glslang/glslang.js',\n        twgslUrl: '/static/lib/twgsl/twgsl.js'\n    };\n\n    pc.createGraphicsDevice(canvas, gfxOptions).then((device: pc.GraphicsDevice) => {\n\n        const createOptions = new pc.AppOptions();\n        createOptions.graphicsDevice = device;\n        createOptions.mouse = new pc.Mouse(document.body);\n        createOptions.touch = new pc.TouchDevice(document.body);\n\n        createOptions.componentSystems = [\n            // @ts-ignore\n            pc.RenderComponentSystem,\n            // @ts-ignore\n            pc.CameraComponentSystem,\n            // @ts-ignore\n            pc.LightComponentSystem,\n            // @ts-ignore\n            pc.ScriptComponentSystem\n        ];\n        createOptions.resourceHandlers = [\n            // @ts-ignore\n            pc.TextureHandler,\n            // @ts-ignore\n            pc.ContainerHandler,\n            // @ts-ignore\n            pc.ScriptHandler\n        ];\n\n        const app = new pc.AppBase(canvas);\n        app.init(createOptions);\n\n        const assetListLoader = new pc.AssetListLoader(Object.values(assets), app.assets);\n        assetListLoader.load(() => {\n\n            app.start();\n\n            data.set('settings', {\n                light: {\n                    numCascades: 4,             // number of cascades\n                    shadowResolution: 2048,     // shadow map resolution storing 4 cascades\n                    cascadeDistribution: 0.5,   // distribution of cascade distances to prefer sharpness closer to the camera\n                    shadowType: pc.SHADOW_PCF3, // shadow filter type\n                    vsmBlurSize: 11,            // shader filter blur size for VSM shadows\n                    everyFrame: true            // true if all cascades update every frame\n                }\n            });\n\n            // Set the canvas to fill the window and automatically change resolution to be the same as the canvas size\n            app.setCanvasFillMode(pc.FILLMODE_FILL_WINDOW);\n            app.setCanvasResolution(pc.RESOLUTION_AUTO);\n\n            window.addEventListener(\"resize\", function () {\n                app.resizeCanvas(canvas.width, canvas.height);\n            });\n\n            // setup skydome\n            app.scene.skyboxMip = 3;\n            app.scene.envAtlas = assets.helipad.resource;\n            app.scene.skyboxRotation = new pc.Quat().setFromEulerAngles(0, -70, 0);\n            app.scene.toneMapping = pc.TONEMAP_ACES;\n\n            // instantiate the terrain\n            const terrain: pc.Entity = assets.terrain.resource.instantiateRenderEntity();\n            terrain.setLocalScale(30, 30, 30);\n            app.root.addChild(terrain);\n\n            // get the clouds so that we can animate them\n            // @ts-ignore\n            const srcClouds : Array<pc.Entity> = terrain.find((node: pc.GraphNode) => {\n\n                const isCloud = node.name.includes('Icosphere');\n\n                if (isCloud) {\n                    // no shadow receiving for clouds\n                    (node as pc.Entity).render.receiveShadows = false;\n                }\n\n                return isCloud;\n            });\n\n            // clone some additional clouds\n            const clouds : Array<pc.Entity> = [];\n            srcClouds.forEach((cloud) => {\n                clouds.push(cloud);\n\n                for (let i = 0; i < 3; i++) {\n                    const clone = cloud.clone() as pc.Entity;\n                    cloud.parent.addChild(clone);\n                    clouds.push(clone);\n                }\n            });\n\n            // shuffle the array to give clouds random order\n            clouds.sort(() => Math.random() - 0.5);\n\n            // find a tree in the middle to use as a focus point\n            // @ts-ignore\n            const tree = terrain.findOne(\"name\", \"Arbol 2.002\");\n\n            // create an Entity with a camera component\n            const camera = new pc.Entity();\n            camera.addComponent(\"camera\", {\n                clearColor: new pc.Color(0.9, 0.9, 0.9),\n                farClip: 1000\n            });\n\n            // and position it in the world\n            camera.setLocalPosition(300, 160, 25);\n\n            // add orbit camera script with a mouse and a touch support\n            camera.addComponent(\"script\");\n            camera.script.create(\"orbitCamera\", {\n                attributes: {\n                    inertiaFactor: 0.2,\n                    focusEntity: tree,\n                    distanceMax: 600\n                }\n            });\n            camera.script.create(\"orbitCameraInputMouse\");\n            camera.script.create(\"orbitCameraInputTouch\");\n            app.root.addChild(camera);\n\n            // Create a directional light casting cascaded shadows\n            const dirLight = new pc.Entity();\n            dirLight.addComponent(\"light\", {\n                ...{\n                    type: \"directional\",\n                    color: pc.Color.WHITE,\n                    shadowBias: 0.3,\n                    normalOffsetBias: 0.2,\n                    intensity: 1.0,\n\n                    // enable shadow casting\n                    castShadows: true,\n                    shadowDistance: 1000\n                },\n                ...data.get('settings.light')\n            });\n            app.root.addChild(dirLight);\n            dirLight.setLocalEulerAngles(45, 350, 20);\n\n            // update mode of cascades\n            let updateEveryFrame = true;\n\n            // handle HUD changes - update properties on the light\n            data.on('*:set', (path: string, value: any) => {\n                const pathArray = path.split('.');\n\n                if (pathArray[2] === 'everyFrame') {\n                    updateEveryFrame = value;\n                } else {\n                    // @ts-ignore\n                    dirLight.light[pathArray[2]] = value;\n                }\n            });\n\n            const cloudSpeed = 0.2;\n            let frameNumber = 0;\n            let time = 0;\n            app.on(\"update\", function (dt: number) {\n\n                time += dt;\n\n                // on the first frame, when camera is updated, move it further away from the focus tree\n                if (frameNumber === 0) {\n                    // @ts-ignore engine-tsd\n                    camera.script.orbitCamera.distance = 470;\n                }\n\n                if (updateEveryFrame) {\n\n                    // no per cascade rendering control\n                    dirLight.light.shadowUpdateOverrides = null;\n\n                } else {\n\n                    // set up shadow update overrides, nearest cascade updates each frame, then next one every 5 and so on\n                    dirLight.light.shadowUpdateOverrides = [\n                        pc.SHADOWUPDATE_THISFRAME,\n                        (frameNumber % 5) === 0 ? pc.SHADOWUPDATE_THISFRAME : pc.SHADOWUPDATE_NONE,\n                        (frameNumber % 10) === 0 ? pc.SHADOWUPDATE_THISFRAME : pc.SHADOWUPDATE_NONE,\n                        (frameNumber % 15) === 0 ? pc.SHADOWUPDATE_THISFRAME : pc.SHADOWUPDATE_NONE\n                    ];\n                }\n\n                // move the clouds around\n                clouds.forEach((cloud, index: number) => {\n                    const redialOffset = (index / clouds.length) * (6.24 / cloudSpeed);\n                    const radius = 9 + 4 * Math.sin(redialOffset);\n                    const cloudTime = time + redialOffset;\n                    cloud.setLocalPosition(2 + radius * Math.sin(cloudTime * cloudSpeed), 4, -5 + radius * Math.cos(cloudTime * cloudSpeed));\n                });\n\n                frameNumber++;\n            });\n        });\n    });\n}",javaScriptFunction:'function example(canvas, deviceType, data) {\n    const assets = {\n        script: new pc.Asset("script", "script", {\n            url: "/static/scripts/camera/orbit-camera.js",\n        }),\n        terrain: new pc.Asset("terrain", "container", {\n            url: "/static/assets/models/terrain.glb",\n        }),\n        helipad: new pc.Asset(\n            "helipad-env-atlas",\n            "texture",\n            { url: "/static/assets/cubemaps/helipad-env-atlas.png" },\n            { type: pc.TEXTURETYPE_RGBP, mipmaps: false }\n        ),\n    };\n\n    const gfxOptions = {\n        deviceTypes: [deviceType],\n        glslangUrl: "/static/lib/glslang/glslang.js",\n        twgslUrl: "/static/lib/twgsl/twgsl.js",\n    };\n\n    pc.createGraphicsDevice(canvas, gfxOptions).then((device) => {\n        const createOptions = new pc.AppOptions();\n        createOptions.graphicsDevice = device;\n        createOptions.mouse = new pc.Mouse(document.body);\n        createOptions.touch = new pc.TouchDevice(document.body);\n\n        createOptions.componentSystems = [\n            // @ts-ignore\n            pc.RenderComponentSystem,\n            // @ts-ignore\n            pc.CameraComponentSystem,\n            // @ts-ignore\n            pc.LightComponentSystem,\n            // @ts-ignore\n            pc.ScriptComponentSystem,\n        ];\n\n        createOptions.resourceHandlers = [\n            // @ts-ignore\n            pc.TextureHandler,\n            // @ts-ignore\n            pc.ContainerHandler,\n            // @ts-ignore\n            pc.ScriptHandler,\n        ];\n\n        const app = new pc.AppBase(canvas);\n        app.init(createOptions);\n\n        const assetListLoader = new pc.AssetListLoader(\n            Object.values(assets),\n            app.assets\n        );\n        assetListLoader.load(() => {\n            app.start();\n\n            data.set("settings", {\n                light: {\n                    numCascades: 4, // number of cascades\n                    shadowResolution: 2048, // shadow map resolution storing 4 cascades\n                    cascadeDistribution: 0.5, // distribution of cascade distances to prefer sharpness closer to the camera\n                    shadowType: pc.SHADOW_PCF3, // shadow filter type\n                    vsmBlurSize: 11, // shader filter blur size for VSM shadows\n                    everyFrame: true, // true if all cascades update every frame\n                },\n            });\n\n            // Set the canvas to fill the window and automatically change resolution to be the same as the canvas size\n            app.setCanvasFillMode(pc.FILLMODE_FILL_WINDOW);\n            app.setCanvasResolution(pc.RESOLUTION_AUTO);\n\n            window.addEventListener("resize", function () {\n                app.resizeCanvas(canvas.width, canvas.height);\n            });\n\n            // setup skydome\n            app.scene.skyboxMip = 3;\n            app.scene.envAtlas = assets.helipad.resource;\n            app.scene.skyboxRotation = new pc.Quat().setFromEulerAngles(\n                0,\n                -70,\n                0\n            );\n            app.scene.toneMapping = pc.TONEMAP_ACES;\n\n            // instantiate the terrain\n            const terrain = assets.terrain.resource.instantiateRenderEntity();\n            terrain.setLocalScale(30, 30, 30);\n            app.root.addChild(terrain);\n\n            // get the clouds so that we can animate them\n            // @ts-ignore\n            const srcClouds = terrain.find((node) => {\n                const isCloud = node.name.includes("Icosphere");\n\n                if (isCloud) {\n                    // no shadow receiving for clouds\n                    node.render.receiveShadows = false;\n                }\n\n                return isCloud;\n            });\n\n            // clone some additional clouds\n            const clouds = [];\n            srcClouds.forEach((cloud) => {\n                clouds.push(cloud);\n\n                for (let i = 0; i < 3; i++) {\n                    const clone = cloud.clone();\n                    cloud.parent.addChild(clone);\n                    clouds.push(clone);\n                }\n            });\n\n            // shuffle the array to give clouds random order\n            clouds.sort(() => Math.random() - 0.5);\n\n            // find a tree in the middle to use as a focus point\n            // @ts-ignore\n            const tree = terrain.findOne("name", "Arbol 2.002");\n\n            // create an Entity with a camera component\n            const camera = new pc.Entity();\n            camera.addComponent("camera", {\n                clearColor: new pc.Color(0.9, 0.9, 0.9),\n                farClip: 1000,\n            });\n\n            // and position it in the world\n            camera.setLocalPosition(300, 160, 25);\n\n            // add orbit camera script with a mouse and a touch support\n            camera.addComponent("script");\n            camera.script.create("orbitCamera", {\n                attributes: {\n                    inertiaFactor: 0.2,\n                    focusEntity: tree,\n                    distanceMax: 600,\n                },\n            });\n            camera.script.create("orbitCameraInputMouse");\n            camera.script.create("orbitCameraInputTouch");\n            app.root.addChild(camera);\n\n            // Create a directional light casting cascaded shadows\n            const dirLight = new pc.Entity();\n            dirLight.addComponent("light", {\n                ...{\n                    type: "directional",\n                    color: pc.Color.WHITE,\n                    shadowBias: 0.3,\n                    normalOffsetBias: 0.2,\n                    intensity: 1.0,\n\n                    // enable shadow casting\n                    castShadows: true,\n                    shadowDistance: 1000,\n                },\n                ...data.get("settings.light"),\n            });\n            app.root.addChild(dirLight);\n            dirLight.setLocalEulerAngles(45, 350, 20);\n\n            // update mode of cascades\n            let updateEveryFrame = true;\n\n            // handle HUD changes - update properties on the light\n            data.on("*:set", (path, value) => {\n                const pathArray = path.split(".");\n\n                if (pathArray[2] === "everyFrame") {\n                    updateEveryFrame = value;\n                } else {\n                    // @ts-ignore\n                    dirLight.light[pathArray[2]] = value;\n                }\n            });\n\n            const cloudSpeed = 0.2;\n            let frameNumber = 0;\n            let time = 0;\n            app.on("update", function (dt) {\n                time += dt;\n\n                // on the first frame, when camera is updated, move it further away from the focus tree\n                if (frameNumber === 0) {\n                    // @ts-ignore engine-tsd\n                    camera.script.orbitCamera.distance = 470;\n                }\n\n                if (updateEveryFrame) {\n                    // no per cascade rendering control\n                    dirLight.light.shadowUpdateOverrides = null;\n                } else {\n                    // set up shadow update overrides, nearest cascade updates each frame, then next one every 5 and so on\n                    dirLight.light.shadowUpdateOverrides = [\n                        pc.SHADOWUPDATE_THISFRAME,\n                        frameNumber % 5 === 0\n                            ? pc.SHADOWUPDATE_THISFRAME\n                            : pc.SHADOWUPDATE_NONE,\n                        frameNumber % 10 === 0\n                            ? pc.SHADOWUPDATE_THISFRAME\n                            : pc.SHADOWUPDATE_NONE,\n                        frameNumber % 15 === 0\n                            ? pc.SHADOWUPDATE_THISFRAME\n                            : pc.SHADOWUPDATE_NONE,\n                    ];\n                }\n\n                // move the clouds around\n                clouds.forEach((cloud, index) => {\n                    const redialOffset =\n                        (index / clouds.length) * (6.24 / cloudSpeed);\n                    const radius = 9 + 4 * Math.sin(redialOffset);\n                    const cloudTime = time + redialOffset;\n                    cloud.setLocalPosition(\n                        2 + radius * Math.sin(cloudTime * cloudSpeed),\n                        4,\n                        -5 + radius * Math.cos(cloudTime * cloudSpeed)\n                    );\n                });\n\n                frameNumber++;\n            });\n        });\n    });\n}\n',nameSlug:"shadow-cascades",categorySlug:"graphics"},shapes:{typeScriptFunction:'function example(canvas: HTMLCanvasElement, deviceType: string): void {\n\n    const gfxOptions = {\n        deviceTypes: [deviceType],\n        glslangUrl: \'/static/lib/glslang/glslang.js\',\n        twgslUrl: \'/static/lib/twgsl/twgsl.js\'\n    };\n\n    pc.createGraphicsDevice(canvas, gfxOptions).then((device: pc.GraphicsDevice) => {\n\n        const createOptions = new pc.AppOptions();\n        createOptions.graphicsDevice = device;\n\n        createOptions.componentSystems = [\n            // @ts-ignore\n            pc.RenderComponentSystem,\n            // @ts-ignore\n            pc.CameraComponentSystem,\n            // @ts-ignore\n            pc.LightComponentSystem\n        ];\n        createOptions.resourceHandlers = [\n            // @ts-ignore\n            pc.TextureHandler,\n            // @ts-ignore\n            pc.ContainerHandler\n        ];\n\n        const app = new pc.AppBase(canvas);\n        app.init(createOptions);\n\n        app.start();\n\n        // Set the canvas to fill the window and automatically change resolution to be the same as the canvas size\n        app.setCanvasFillMode(pc.FILLMODE_FILL_WINDOW);\n        app.setCanvasResolution(pc.RESOLUTION_AUTO);\n\n        app.scene.ambientLight = new pc.Color(0.2, 0.2, 0.2);\n\n        app.scene.lighting.shadowsEnabled = false;\n\n        // All render component primitive shape types\n        const shapes = ["box", "plane", "cone", "cylinder", "sphere", "capsule"];\n        let x = -1, y = -1;\n\n        shapes.forEach(function (shape) {\n            // Create an entity with a render component\n            const entity = new pc.Entity();\n            entity.addComponent("render", {\n                type: shape\n            });\n            app.root.addChild(entity);\n\n            // Lay out the 6 primitives in two rows, 3 per row\n            entity.setLocalPosition(x * 1.2, y, 0);\n            if (x++ === 1) {\n                x = -1;\n                y = 1;\n            }\n        });\n\n        // Create an entity with a directional light component\n        const light = new pc.Entity();\n        light.addComponent("light", {\n            type: "directional",\n            castShadows: false\n        });\n        app.root.addChild(light);\n        light.setLocalEulerAngles(45, 30, 0);\n\n        // Create an entity with a camera component\n        const camera = new pc.Entity();\n        camera.addComponent("camera", {\n            clearColor: new pc.Color(0.4, 0.45, 0.5)\n        });\n        app.root.addChild(camera);\n        camera.setLocalPosition(0, 0, 5);\n\n    }).catch(console.error);\n}',javaScriptFunction:'function example(canvas, deviceType) {\n    const gfxOptions = {\n        deviceTypes: [deviceType],\n        glslangUrl: "/static/lib/glslang/glslang.js",\n        twgslUrl: "/static/lib/twgsl/twgsl.js",\n    };\n\n    pc.createGraphicsDevice(canvas, gfxOptions)\n        .then((device) => {\n            const createOptions = new pc.AppOptions();\n            createOptions.graphicsDevice = device;\n\n            createOptions.componentSystems = [\n                // @ts-ignore\n                pc.RenderComponentSystem,\n                // @ts-ignore\n                pc.CameraComponentSystem,\n                // @ts-ignore\n                pc.LightComponentSystem,\n            ];\n\n            createOptions.resourceHandlers = [\n                // @ts-ignore\n                pc.TextureHandler,\n                // @ts-ignore\n                pc.ContainerHandler,\n            ];\n\n            const app = new pc.AppBase(canvas);\n            app.init(createOptions);\n\n            app.start();\n\n            // Set the canvas to fill the window and automatically change resolution to be the same as the canvas size\n            app.setCanvasFillMode(pc.FILLMODE_FILL_WINDOW);\n            app.setCanvasResolution(pc.RESOLUTION_AUTO);\n\n            app.scene.ambientLight = new pc.Color(0.2, 0.2, 0.2);\n\n            app.scene.lighting.shadowsEnabled = false;\n\n            // All render component primitive shape types\n            const shapes = [\n                "box",\n                "plane",\n                "cone",\n                "cylinder",\n                "sphere",\n                "capsule",\n            ];\n            let x = -1,\n                y = -1;\n\n            shapes.forEach(function (shape) {\n                // Create an entity with a render component\n                const entity = new pc.Entity();\n                entity.addComponent("render", {\n                    type: shape,\n                });\n                app.root.addChild(entity);\n\n                // Lay out the 6 primitives in two rows, 3 per row\n                entity.setLocalPosition(x * 1.2, y, 0);\n                if (x++ === 1) {\n                    x = -1;\n                    y = 1;\n                }\n            });\n\n            // Create an entity with a directional light component\n            const light = new pc.Entity();\n            light.addComponent("light", {\n                type: "directional",\n                castShadows: false,\n            });\n            app.root.addChild(light);\n            light.setLocalEulerAngles(45, 30, 0);\n\n            // Create an entity with a camera component\n            const camera = new pc.Entity();\n            camera.addComponent("camera", {\n                clearColor: new pc.Color(0.4, 0.45, 0.5),\n            });\n            app.root.addChild(camera);\n            camera.setLocalPosition(0, 0, 5);\n        })\n        .catch(console.error);\n}\n',nameSlug:"shapes",categorySlug:"graphics"},"texture-basis":{typeScriptFunction:"function example(canvas: HTMLCanvasElement, deviceType: string): void {\n\n    // initialize basis\n    pc.basisInitialize({\n        glueUrl: '/static/lib/basis/basis.wasm.js',\n        wasmUrl: '/static/lib/basis/basis.wasm.wasm',\n        fallbackUrl: '/static/lib/basis/basis.js'\n    });\n\n    const assets = {\n        'color': new pc.Asset('color', 'texture', { url: '/static/assets/textures/seaside-rocks01-color.basis' }),\n        'gloss': new pc.Asset('gloss', 'texture', { url: '/static/assets/textures/seaside-rocks01-gloss.basis' }),\n        'normal': new pc.Asset('normal', 'texture', { url: '/static/assets/textures/seaside-rocks01-normal.basis' }, { type: pc.TEXTURETYPE_SWIZZLEGGGR }),\n        'helipad': new pc.Asset('helipad-env-atlas', 'texture', { url: '/static/assets/cubemaps/helipad-env-atlas.png' }, { type: pc.TEXTURETYPE_RGBP, mipmaps: false })\n    };\n\n    const gfxOptions = {\n        deviceTypes: [deviceType],\n        glslangUrl: '/static/lib/glslang/glslang.js',\n        twgslUrl: '/static/lib/twgsl/twgsl.js'\n    };\n\n    pc.createGraphicsDevice(canvas, gfxOptions).then((device: pc.GraphicsDevice) => {\n\n        const createOptions = new pc.AppOptions();\n        createOptions.graphicsDevice = device;\n\n        createOptions.componentSystems = [\n            // @ts-ignore\n            pc.RenderComponentSystem,\n            // @ts-ignore\n            pc.CameraComponentSystem,\n            // @ts-ignore\n            pc.LightComponentSystem\n        ];\n        createOptions.resourceHandlers = [\n            // @ts-ignore\n            pc.TextureHandler,\n            // @ts-ignore\n            pc.ContainerHandler\n        ];\n\n        const app = new pc.AppBase(canvas);\n        app.init(createOptions);\n\n        // Set the canvas to fill the window and automatically change resolution to be the same as the canvas size\n        app.setCanvasFillMode(pc.FILLMODE_FILL_WINDOW);\n        app.setCanvasResolution(pc.RESOLUTION_AUTO);\n\n        const assetListLoader = new pc.AssetListLoader(Object.values(assets), app.assets);\n        assetListLoader.load(() => {\n\n            app.start();\n\n            // Set skybox\n            app.scene.toneMapping = pc.TONEMAP_ACES;\n            app.scene.skyboxMip = 1;\n            app.scene.skyboxIntensity = 1.4;\n            app.scene.envAtlas = assets.helipad.resource;\n\n            // Create directional light\n            const light = new pc.Entity();\n            light.addComponent('light', {\n                type: 'directional'\n            });\n            light.setLocalEulerAngles(45, 0, 45);\n\n            // Construct material\n            const material = new pc.StandardMaterial();\n            material.useMetalness = true;\n            material.diffuse = new pc.Color(0.3, 0.3, 0.3);\n            material.gloss = 0.8;\n            material.metalness = 0.7;\n            material.diffuseMap = assets.color.resource;\n            material.normalMap = assets.normal.resource;\n            material.glossMap = assets.gloss.resource;\n            material.diffuseMapTiling.set(7, 7);\n            material.normalMapTiling.set(7, 7);\n            material.glossMapTiling.set(7, 7);\n            material.update();\n\n            // Create a torus shape\n            const torus = pc.createTorus(app.graphicsDevice, {\n                tubeRadius: 0.2,\n                ringRadius: 0.3,\n                segments: 50,\n                sides: 40\n            });\n            const shape = new pc.Entity();\n            shape.addComponent('render', {\n                material: material,\n                meshInstances: [new pc.MeshInstance(torus, material)]\n            });\n            shape.setPosition(0, 0, 0);\n            shape.setLocalScale(2, 2, 2);\n\n            // Create an Entity with a camera component\n            const camera = new pc.Entity();\n            camera.addComponent(\"camera\", {\n                clearColor: new pc.Color(0.4, 0.45, 0.5)\n            });\n\n            // Adjust the camera position\n            camera.translate(0, 0, 4);\n\n            // Add the new Entities to the hierarchy\n            app.root.addChild(light);\n            app.root.addChild(shape);\n            app.root.addChild(camera);\n\n            // Set an update function on the app's update event\n            let angle = 0;\n            app.on(\"update\", function (dt) {\n                angle = (angle + dt * 10) % 360;\n\n                // Rotate the boxes\n                shape.setEulerAngles(angle, angle * 2, angle * 4);\n            });\n        });\n    });\n}",javaScriptFunction:'function example(canvas, deviceType) {\n    // initialize basis\n    pc.basisInitialize({\n        glueUrl: "/static/lib/basis/basis.wasm.js",\n        wasmUrl: "/static/lib/basis/basis.wasm.wasm",\n        fallbackUrl: "/static/lib/basis/basis.js",\n    });\n\n    const assets = {\n        color: new pc.Asset("color", "texture", {\n            url: "/static/assets/textures/seaside-rocks01-color.basis",\n        }),\n        gloss: new pc.Asset("gloss", "texture", {\n            url: "/static/assets/textures/seaside-rocks01-gloss.basis",\n        }),\n        normal: new pc.Asset(\n            "normal",\n            "texture",\n            { url: "/static/assets/textures/seaside-rocks01-normal.basis" },\n            { type: pc.TEXTURETYPE_SWIZZLEGGGR }\n        ),\n        helipad: new pc.Asset(\n            "helipad-env-atlas",\n            "texture",\n            { url: "/static/assets/cubemaps/helipad-env-atlas.png" },\n            { type: pc.TEXTURETYPE_RGBP, mipmaps: false }\n        ),\n    };\n\n    const gfxOptions = {\n        deviceTypes: [deviceType],\n        glslangUrl: "/static/lib/glslang/glslang.js",\n        twgslUrl: "/static/lib/twgsl/twgsl.js",\n    };\n\n    pc.createGraphicsDevice(canvas, gfxOptions).then((device) => {\n        const createOptions = new pc.AppOptions();\n        createOptions.graphicsDevice = device;\n\n        createOptions.componentSystems = [\n            // @ts-ignore\n            pc.RenderComponentSystem,\n            // @ts-ignore\n            pc.CameraComponentSystem,\n            // @ts-ignore\n            pc.LightComponentSystem,\n        ];\n\n        createOptions.resourceHandlers = [\n            // @ts-ignore\n            pc.TextureHandler,\n            // @ts-ignore\n            pc.ContainerHandler,\n        ];\n\n        const app = new pc.AppBase(canvas);\n        app.init(createOptions);\n\n        // Set the canvas to fill the window and automatically change resolution to be the same as the canvas size\n        app.setCanvasFillMode(pc.FILLMODE_FILL_WINDOW);\n        app.setCanvasResolution(pc.RESOLUTION_AUTO);\n\n        const assetListLoader = new pc.AssetListLoader(\n            Object.values(assets),\n            app.assets\n        );\n        assetListLoader.load(() => {\n            app.start();\n\n            // Set skybox\n            app.scene.toneMapping = pc.TONEMAP_ACES;\n            app.scene.skyboxMip = 1;\n            app.scene.skyboxIntensity = 1.4;\n            app.scene.envAtlas = assets.helipad.resource;\n\n            // Create directional light\n            const light = new pc.Entity();\n            light.addComponent("light", {\n                type: "directional",\n            });\n            light.setLocalEulerAngles(45, 0, 45);\n\n            // Construct material\n            const material = new pc.StandardMaterial();\n            material.useMetalness = true;\n            material.diffuse = new pc.Color(0.3, 0.3, 0.3);\n            material.gloss = 0.8;\n            material.metalness = 0.7;\n            material.diffuseMap = assets.color.resource;\n            material.normalMap = assets.normal.resource;\n            material.glossMap = assets.gloss.resource;\n            material.diffuseMapTiling.set(7, 7);\n            material.normalMapTiling.set(7, 7);\n            material.glossMapTiling.set(7, 7);\n            material.update();\n\n            // Create a torus shape\n            const torus = pc.createTorus(app.graphicsDevice, {\n                tubeRadius: 0.2,\n                ringRadius: 0.3,\n                segments: 50,\n                sides: 40,\n            });\n            const shape = new pc.Entity();\n            shape.addComponent("render", {\n                material: material,\n                meshInstances: [new pc.MeshInstance(torus, material)],\n            });\n            shape.setPosition(0, 0, 0);\n            shape.setLocalScale(2, 2, 2);\n\n            // Create an Entity with a camera component\n            const camera = new pc.Entity();\n            camera.addComponent("camera", {\n                clearColor: new pc.Color(0.4, 0.45, 0.5),\n            });\n\n            // Adjust the camera position\n            camera.translate(0, 0, 4);\n\n            // Add the new Entities to the hierarchy\n            app.root.addChild(light);\n            app.root.addChild(shape);\n            app.root.addChild(camera);\n\n            // Set an update function on the app\'s update event\n            let angle = 0;\n            app.on("update", function (dt) {\n                angle = (angle + dt * 10) % 360;\n\n                // Rotate the boxes\n                shape.setEulerAngles(angle, angle * 2, angle * 4);\n            });\n        });\n    });\n}\n',nameSlug:"texture-basis",categorySlug:"graphics"},"transform-feedback":{typeScriptFunction:"function example(canvas: HTMLCanvasElement, deviceType: string, files: { 'shaderFeedback.vert': string, 'shaderCloud.vert': string, 'shaderCloud.frag': string }): void {\n    // Create the app and start the update loop\n    const app = new pc.Application(canvas, {});\n\n    const assets = {\n        'statue': new pc.Asset('statue', 'container', { url: '/static/assets/models/statue.glb' })\n    };\n\n    const assetListLoader = new pc.AssetListLoader(Object.values(assets), app.assets);\n    assetListLoader.load(() => {\n        app.start();\n\n        // Set the canvas to fill the window and automatically change resolution to be the same as the canvas size\n        app.setCanvasFillMode(pc.FILLMODE_FILL_WINDOW);\n        app.setCanvasResolution(pc.RESOLUTION_AUTO);\n\n        app.scene.ambientLight = new pc.Color(0.2, 0.2, 0.2);\n\n        // create small 2D texture representing movement direction (wind)\n        const textureResolution = 10;\n        const textureData = new Uint8ClampedArray(textureResolution * textureResolution * 4);\n\n        for (let i = 0; i < textureResolution * textureResolution; i++) {\n\n            // rgb store biased movement direction\n            textureData[i * 4] = 127 + Math.random() * 50 - 25;\n            textureData[i * 4 + 1] = 127 + Math.random() * 50 - 25;\n            textureData[i * 4 + 2] = 127 + Math.random() * 50 - 25;\n\n            // set alpha to 255 for debugging purposes\n            textureData[i * 4 + 3] = 255;\n        }\n\n        // create texture\n        const texture = new pc.Texture(app.graphicsDevice, {\n            width: textureResolution,\n            height: textureResolution,\n            format: pc.PIXELFORMAT_RGBA8,\n            cubemap: false,\n            mipmaps: false,\n            minFilter: pc.FILTER_LINEAR,\n            magFilter: pc.FILTER_LINEAR,\n            addressU: pc.ADDRESS_CLAMP_TO_EDGE,\n            addressV: pc.ADDRESS_CLAMP_TO_EDGE\n        });\n\n        // initialize it with data\n        const pixels = texture.lock();\n        pixels.set(textureData);\n        texture.unlock();\n\n        // Create main camera, which renders the world\n        const camera = new pc.Entity();\n        camera.addComponent(\"camera\", {\n            clearColor: new pc.Color(0.1, 0.1, 0.1)\n        });\n        app.root.addChild(camera);\n\n        // set up texture transform part, on webgl2 devices only\n        let tf: any;\n        let shader: any;\n        const areaSize = 30;\n\n        // resolve parameters to simulation shader parameters\n        const areaSizeUniform = app.graphicsDevice.scope.resolve(\"areaSize\");\n        const deltaTimeUniform = app.graphicsDevice.scope.resolve(\"deltaTime\");\n        const directionSampler = app.graphicsDevice.scope.resolve(\"directionSampler\");\n\n        // @ts-ignore engine-tsd\n        if (app.graphicsDevice.isWebGL2) {\n\n            // simulated particles\n            const maxNumPoints = 200000;\n            const positions = new Float32Array(4 * maxNumPoints);\n\n            // generate random data, these are used as seeds to generate particles in vertex shader\n            for (let i = 0; i < maxNumPoints; i++) {\n                positions[i * 4] = Math.random();\n                positions[i * 4 + 1] = Math.random();\n                positions[i * 4 + 2] = Math.random();\n\n                // set life time to 0 which triggers particle restart in shader\n                positions[i * 4 + 3] = 0;\n            }\n\n            // store these in a vertex buffer of a mesh\n            const mesh = new pc.Mesh(app.graphicsDevice);\n            mesh.setPositions(positions, 4);\n            mesh.update(pc.PRIMITIVE_POINTS, false);\n\n            // set large bounding box so we don't need to update it each frame\n            mesh.aabb = new pc.BoundingBox(new pc.Vec3(0, 0, 0), new pc.Vec3(100, 100, 100));\n\n            // Create the shader from the vertex and fragment shaders which is used to render point sprites\n            shader = new pc.Shader(app.graphicsDevice, {\n                attributes: { aPosition: pc.SEMANTIC_POSITION },\n                vshader: files['shaderCloud.vert'],\n                fshader: files['shaderCloud.frag']\n            });\n\n            // Create a new material with the new shader and additive alpha blending\n            const material = new pc.Material();\n            material.shader = shader;\n            material.blendType = pc.BLEND_ADDITIVEALPHA;\n            material.depthWrite = false;\n\n            // Create the mesh instance\n            const meshInstance = new pc.MeshInstance(mesh, material);\n\n            // create an entity used to render the mesh instance using a render component\n            const entity = new pc.Entity();\n            entity.addComponent(\"render\", {\n                type: 'asset',\n                meshInstances: [meshInstance]\n            });\n            app.root.addChild(entity);\n\n            // set up transform feedback. This creates a clone of the vertex buffer, and sets up rendering to ping pong between them\n            tf = new pc.TransformFeedback(mesh.vertexBuffer);\n            shader = pc.TransformFeedback.createShader(app.graphicsDevice, files['shaderFeedback.vert'], \"transformShaderExample\");\n        }\n\n        // update things each frame\n        let time = 0;\n        app.on(\"update\", function (dt) {\n\n            // rotate camera around\n            time += dt;\n            camera.setLocalPosition(9 * Math.sin(time * 0.2), 6, 25 * Math.cos(time * 0.2));\n            camera.lookAt(new pc.Vec3(0, 3, 0));\n\n            // if transform feedback was initialized\n            if (tf) {\n\n                // set up simulation parameters\n                areaSizeUniform.setValue(areaSize);\n                deltaTimeUniform.setValue(dt);\n                directionSampler.setValue(texture);\n\n                // execute simulation\n                tf.process(shader);\n            }\n        });\n    });\n}",javaScriptFunction:'function example(canvas, deviceType, files) {\n    // Create the app and start the update loop\n    const app = new pc.Application(canvas, {});\n\n    const assets = {\n        statue: new pc.Asset("statue", "container", {\n            url: "/static/assets/models/statue.glb",\n        }),\n    };\n\n    const assetListLoader = new pc.AssetListLoader(\n        Object.values(assets),\n        app.assets\n    );\n    assetListLoader.load(() => {\n        app.start();\n\n        // Set the canvas to fill the window and automatically change resolution to be the same as the canvas size\n        app.setCanvasFillMode(pc.FILLMODE_FILL_WINDOW);\n        app.setCanvasResolution(pc.RESOLUTION_AUTO);\n\n        app.scene.ambientLight = new pc.Color(0.2, 0.2, 0.2);\n\n        // create small 2D texture representing movement direction (wind)\n        const textureResolution = 10;\n        const textureData = new Uint8ClampedArray(\n            textureResolution * textureResolution * 4\n        );\n\n        for (let i = 0; i < textureResolution * textureResolution; i++) {\n            // rgb store biased movement direction\n            textureData[i * 4] = 127 + Math.random() * 50 - 25;\n            textureData[i * 4 + 1] = 127 + Math.random() * 50 - 25;\n            textureData[i * 4 + 2] = 127 + Math.random() * 50 - 25;\n\n            // set alpha to 255 for debugging purposes\n            textureData[i * 4 + 3] = 255;\n        }\n\n        // create texture\n        const texture = new pc.Texture(app.graphicsDevice, {\n            width: textureResolution,\n            height: textureResolution,\n            format: pc.PIXELFORMAT_RGBA8,\n            cubemap: false,\n            mipmaps: false,\n            minFilter: pc.FILTER_LINEAR,\n            magFilter: pc.FILTER_LINEAR,\n            addressU: pc.ADDRESS_CLAMP_TO_EDGE,\n            addressV: pc.ADDRESS_CLAMP_TO_EDGE,\n        });\n\n        // initialize it with data\n        const pixels = texture.lock();\n        pixels.set(textureData);\n        texture.unlock();\n\n        // Create main camera, which renders the world\n        const camera = new pc.Entity();\n        camera.addComponent("camera", {\n            clearColor: new pc.Color(0.1, 0.1, 0.1),\n        });\n        app.root.addChild(camera);\n\n        // set up texture transform part, on webgl2 devices only\n        let tf;\n        let shader;\n        const areaSize = 30;\n\n        // resolve parameters to simulation shader parameters\n        const areaSizeUniform = app.graphicsDevice.scope.resolve("areaSize");\n        const deltaTimeUniform = app.graphicsDevice.scope.resolve("deltaTime");\n        const directionSampler =\n            app.graphicsDevice.scope.resolve("directionSampler");\n\n        // @ts-ignore engine-tsd\n        if (app.graphicsDevice.isWebGL2) {\n            // simulated particles\n            const maxNumPoints = 200000;\n            const positions = new Float32Array(4 * maxNumPoints);\n\n            // generate random data, these are used as seeds to generate particles in vertex shader\n            for (let i = 0; i < maxNumPoints; i++) {\n                positions[i * 4] = Math.random();\n                positions[i * 4 + 1] = Math.random();\n                positions[i * 4 + 2] = Math.random();\n\n                // set life time to 0 which triggers particle restart in shader\n                positions[i * 4 + 3] = 0;\n            }\n\n            // store these in a vertex buffer of a mesh\n            const mesh = new pc.Mesh(app.graphicsDevice);\n            mesh.setPositions(positions, 4);\n            mesh.update(pc.PRIMITIVE_POINTS, false);\n\n            // set large bounding box so we don\'t need to update it each frame\n            mesh.aabb = new pc.BoundingBox(\n                new pc.Vec3(0, 0, 0),\n                new pc.Vec3(100, 100, 100)\n            );\n\n            // Create the shader from the vertex and fragment shaders which is used to render point sprites\n            shader = new pc.Shader(app.graphicsDevice, {\n                attributes: { aPosition: pc.SEMANTIC_POSITION },\n                vshader: files["shaderCloud.vert"],\n                fshader: files["shaderCloud.frag"],\n            });\n\n            // Create a new material with the new shader and additive alpha blending\n            const material = new pc.Material();\n            material.shader = shader;\n            material.blendType = pc.BLEND_ADDITIVEALPHA;\n            material.depthWrite = false;\n\n            // Create the mesh instance\n            const meshInstance = new pc.MeshInstance(mesh, material);\n\n            // create an entity used to render the mesh instance using a render component\n            const entity = new pc.Entity();\n            entity.addComponent("render", {\n                type: "asset",\n                meshInstances: [meshInstance],\n            });\n            app.root.addChild(entity);\n\n            // set up transform feedback. This creates a clone of the vertex buffer, and sets up rendering to ping pong between them\n            tf = new pc.TransformFeedback(mesh.vertexBuffer);\n            shader = pc.TransformFeedback.createShader(\n                app.graphicsDevice,\n                files["shaderFeedback.vert"],\n                "transformShaderExample"\n            );\n        }\n\n        // update things each frame\n        let time = 0;\n        app.on("update", function (dt) {\n            // rotate camera around\n            time += dt;\n            camera.setLocalPosition(\n                9 * Math.sin(time * 0.2),\n                6,\n                25 * Math.cos(time * 0.2)\n            );\n            camera.lookAt(new pc.Vec3(0, 3, 0));\n\n            // if transform feedback was initialized\n            if (tf) {\n                // set up simulation parameters\n                areaSizeUniform.setValue(areaSize);\n                deltaTimeUniform.setValue(dt);\n                directionSampler.setValue(texture);\n\n                // execute simulation\n                tf.process(shader);\n            }\n        });\n    });\n}\n',nameSlug:"transform-feedback",categorySlug:"graphics",files:{"shaderFeedback.vert":"\n// vertex shader used to move particles during transform-feedback simulation step\n\n// input and output is vec4, containing position in .xyz and lifetime in .w\nattribute vec4 vertex_position;\nvarying vec4 out_vertex_position;\n\n// parameters controlling simulation\nuniform float deltaTime;\nuniform float areaSize;\n\n// texture storing random direction vectors\nuniform sampler2D directionSampler;\n\n// function returning random number based on vec2 seed parameter\nfloat rand(vec2 co) {\n    return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);\n}\n\nvoid main(void) {\n\n    // texture contains direction of particle movement - read it based on particle's position\n    vec2 texCoord = vertex_position.xz / areaSize + 0.5;\n    vec3 dir = texture2D(directionSampler, texCoord).xyz;\n    dir = dir * 2.0 - 1.0;\n\n    // move particle along direction with some speed\n    float speed = 20.0 * deltaTime;\n    vec3 pos = vertex_position.xyz + dir * speed;\n\n    // age the particle\n    float liveTime = vertex_position.w;\n    liveTime -= deltaTime;\n\n    // if particle is too old, regenerate it\n    if (liveTime <= 0.0) {\n\n        // random life time\n        liveTime = rand(pos.xy) * 2.0;\n\n        // random position\n        pos.x = rand(pos.xz) * areaSize - 0.5 * areaSize;\n        pos.y = rand(pos.xy) * 4.0;\n        pos.z = rand(pos.yz) * areaSize - 0.5 * areaSize;\n    }\n\n    // write out updated particle\n    out_vertex_position = vec4(pos, liveTime);\n}","shaderCloud.vert":"\n// vertex shader used to render point sprite particles\n\n// Attributes per vertex: position\nattribute vec4 aPosition;\n\nuniform mat4   matrix_viewProjection;\n\n// Color to fragment program\nvarying vec4 outColor;\n\nvoid main(void)\n{\n    // Transform the geometry (ignore life time which is stored in .w of position)\n    vec4 worldPosition = vec4(aPosition.xyz, 1);\n    gl_Position = matrix_viewProjection * worldPosition;\n\n    // point sprite size\n    gl_PointSize = 2.0;\n\n    // color depends on position of particle\n    outColor = vec4(worldPosition.y * 0.25, 0.1, worldPosition.z * 0.2, 1);\n}","shaderCloud.frag":"\n// fragment shader used to render point sprite particles\nprecision mediump float;\nvarying vec4 outColor;\n\nvoid main(void)\n{\n    // color supplied by vertex shader\n    gl_FragColor = outColor;\n}"}},"video-texture":{typeScriptFunction:"function example(canvas: HTMLCanvasElement, deviceType: string): void {\n\n    // Create the application and start the update loop\n    const app = new pc.Application(canvas, {});\n\n    const assets = {\n        'tv': new pc.Asset('tv', 'container', { url: '/static/assets/models/tv.glb' })\n    };\n\n    const assetListLoader = new pc.AssetListLoader(Object.values(assets), app.assets);\n    assetListLoader.load(() => {\n        app.start();\n\n        // Set the canvas to fill the window and automatically change resolution to be the same as the canvas size\n        app.setCanvasFillMode(pc.FILLMODE_FILL_WINDOW);\n        app.setCanvasResolution(pc.RESOLUTION_AUTO);\n\n        app.scene.ambientLight = new pc.Color(0.2, 0.2, 0.2);\n\n        // Create an Entity with a camera component\n        const camera = new pc.Entity();\n        camera.addComponent(\"camera\", {\n            clearColor: new pc.Color(0.4, 0.45, 0.5)\n        });\n        camera.translate(0, 0, 15);\n\n        // Create an Entity with a omni light\n        const light = new pc.Entity();\n        light.addComponent(\"light\", {\n            type: \"omni\",\n            color: new pc.Color(1, 1, 1),\n            range: 30\n        });\n        light.translate(5, 5, 10);\n\n        app.root.addChild(camera);\n        app.root.addChild(light);\n\n        // Create a texture to hold the video frame data\n        const videoTexture = new pc.Texture(app.graphicsDevice, {\n            format: pc.PIXELFORMAT_RGB565,\n            mipmaps: false,\n            minFilter: pc.FILTER_LINEAR,\n            magFilter: pc.FILTER_LINEAR,\n            addressU: pc.ADDRESS_CLAMP_TO_EDGE,\n            addressV: pc.ADDRESS_CLAMP_TO_EDGE\n        });\n\n        // Create our HTML element with the video\n        const video: HTMLVideoElement = document.createElement('video');\n        video.id = 'vid';\n        video.loop = true;\n\n        // Muted so that we can autoplay\n        video.muted = true;\n        video.autoplay = true;\n\n        // Inline needed for iOS otherwise it plays at fullscreen\n        video.playsInline = true;\n\n        video.crossOrigin = \"anonymous\";\n\n        // Make sure that the video is in view on the page otherwise it doesn't\n        // load on some browsers, especially mobile\n        video.setAttribute('style', 'display: block; width: 1px; height: 1px; position: absolute; opacity: 0; z-index: -1000; top: 0px; pointer-events: none');\n\n        video.src = '/static/assets/video/SampleVideo_1280x720_1mb.mp4';\n        document.body.append(video);\n\n        video.addEventListener('canplaythrough', function () {\n            videoTexture.setSource(video);\n        });\n\n        // create an entity to render the tv mesh\n        const entity = assets.tv.resource.instantiateRenderEntity();\n        app.root.addChild(entity);\n\n        // Create a material that will use our video texture\n        const material = new pc.StandardMaterial();\n        material.useLighting = false;\n        material.emissiveMap = videoTexture;\n        material.update();\n\n        // set the material on the screen mesh\n        entity.render.meshInstances[1].material = material;\n\n        video.load();\n\n        const mouse = new pc.Mouse(document.body);\n        mouse.on('mousedown', function (event) {\n            if (entity && event.buttons[pc.MOUSEBUTTON_LEFT]) {\n                video.muted = !video.muted;\n            }\n        });\n\n        let upload = false;\n        let time = 0;\n        app.on('update', function (dt) {\n            time += dt;\n\n            // rotate the tv object\n            entity.setLocalEulerAngles(100 + Math.sin(time) * 50, 0, -90);\n\n            // Upload the video data to the texture every other frame\n            upload = !upload;\n            if (upload) {\n                videoTexture.upload();\n            }\n        });\n    });\n}",javaScriptFunction:'function example(canvas, deviceType) {\n    // Create the application and start the update loop\n    const app = new pc.Application(canvas, {});\n\n    const assets = {\n        tv: new pc.Asset("tv", "container", {\n            url: "/static/assets/models/tv.glb",\n        }),\n    };\n\n    const assetListLoader = new pc.AssetListLoader(\n        Object.values(assets),\n        app.assets\n    );\n    assetListLoader.load(() => {\n        app.start();\n\n        // Set the canvas to fill the window and automatically change resolution to be the same as the canvas size\n        app.setCanvasFillMode(pc.FILLMODE_FILL_WINDOW);\n        app.setCanvasResolution(pc.RESOLUTION_AUTO);\n\n        app.scene.ambientLight = new pc.Color(0.2, 0.2, 0.2);\n\n        // Create an Entity with a camera component\n        const camera = new pc.Entity();\n        camera.addComponent("camera", {\n            clearColor: new pc.Color(0.4, 0.45, 0.5),\n        });\n        camera.translate(0, 0, 15);\n\n        // Create an Entity with a omni light\n        const light = new pc.Entity();\n        light.addComponent("light", {\n            type: "omni",\n            color: new pc.Color(1, 1, 1),\n            range: 30,\n        });\n        light.translate(5, 5, 10);\n\n        app.root.addChild(camera);\n        app.root.addChild(light);\n\n        // Create a texture to hold the video frame data\n        const videoTexture = new pc.Texture(app.graphicsDevice, {\n            format: pc.PIXELFORMAT_RGB565,\n            mipmaps: false,\n            minFilter: pc.FILTER_LINEAR,\n            magFilter: pc.FILTER_LINEAR,\n            addressU: pc.ADDRESS_CLAMP_TO_EDGE,\n            addressV: pc.ADDRESS_CLAMP_TO_EDGE,\n        });\n\n        // Create our HTML element with the video\n        const video = document.createElement("video");\n        video.id = "vid";\n        video.loop = true;\n\n        // Muted so that we can autoplay\n        video.muted = true;\n        video.autoplay = true;\n\n        // Inline needed for iOS otherwise it plays at fullscreen\n        video.playsInline = true;\n\n        video.crossOrigin = "anonymous";\n\n        // Make sure that the video is in view on the page otherwise it doesn\'t\n        // load on some browsers, especially mobile\n        video.setAttribute(\n            "style",\n            "display: block; width: 1px; height: 1px; position: absolute; opacity: 0; z-index: -1000; top: 0px; pointer-events: none"\n        );\n\n        video.src = "/static/assets/video/SampleVideo_1280x720_1mb.mp4";\n        document.body.append(video);\n\n        video.addEventListener("canplaythrough", function () {\n            videoTexture.setSource(video);\n        });\n\n        // create an entity to render the tv mesh\n        const entity = assets.tv.resource.instantiateRenderEntity();\n        app.root.addChild(entity);\n\n        // Create a material that will use our video texture\n        const material = new pc.StandardMaterial();\n        material.useLighting = false;\n        material.emissiveMap = videoTexture;\n        material.update();\n\n        // set the material on the screen mesh\n        entity.render.meshInstances[1].material = material;\n\n        video.load();\n\n        const mouse = new pc.Mouse(document.body);\n        mouse.on("mousedown", function (event) {\n            if (entity && event.buttons[pc.MOUSEBUTTON_LEFT]) {\n                video.muted = !video.muted;\n            }\n        });\n\n        let upload = false;\n        let time = 0;\n        app.on("update", function (dt) {\n            time += dt;\n\n            // rotate the tv object\n            entity.setLocalEulerAngles(100 + Math.sin(time) * 50, 0, -90);\n\n            // Upload the video data to the texture every other frame\n            upload = !upload;\n            if (upload) {\n                videoTexture.upload();\n            }\n        });\n    });\n}\n',nameSlug:"video-texture",categorySlug:"graphics"}},input:{gamepad:{typeScriptFunction:"function example(canvas: HTMLCanvasElement, deviceType: string): void {\n    // Create the application and start the update loop\n\n    const assets = {\n        'helipad': new pc.Asset('helipad-env-atlas', 'texture', { url: '/static/assets/cubemaps/helipad-env-atlas.png' }, { type: pc.TEXTURETYPE_RGBP, mipmaps: false }),\n        'statue': new pc.Asset('statue', 'container', { url: '/static/assets/models/statue.glb' })\n    };\n\n    const gfxOptions = {\n        deviceTypes: [deviceType],\n        glslangUrl: '/static/lib/glslang/glslang.js',\n        twgslUrl: '/static/lib/twgsl/twgsl.js'\n    };\n\n    pc.createGraphicsDevice(canvas, gfxOptions).then((device: pc.GraphicsDevice) => {\n\n        const createOptions = new pc.AppOptions();\n        createOptions.graphicsDevice = device;\n\n        createOptions.componentSystems = [\n            // @ts-ignore\n            pc.RenderComponentSystem,\n            // @ts-ignore\n            pc.CameraComponentSystem\n        ];\n        createOptions.resourceHandlers = [\n            // @ts-ignore\n            pc.TextureHandler,\n            // @ts-ignore\n            pc.ContainerHandler\n        ];\n\n        const app = new pc.AppBase(canvas);\n        app.init(createOptions);\n\n        // Set the canvas to fill the window and automatically change resolution to be the same as the canvas size\n        app.setCanvasFillMode(pc.FILLMODE_FILL_WINDOW);\n        app.setCanvasResolution(pc.RESOLUTION_AUTO);\n\n        const assetListLoader = new pc.AssetListLoader(Object.values(assets), app.assets);\n        assetListLoader.load(() => {\n\n            app.start();\n\n            // set skybox\n            app.scene.envAtlas = assets.helipad.resource;\n            app.scene.toneMapping = pc.TONEMAP_ACES;\n            app.scene.exposure = 1.6;\n            app.scene.skyboxMip = 1;\n\n            // Create an Entity with a camera component\n            const camera = new pc.Entity();\n            camera.addComponent(\"camera\", {\n                clearColor: new pc.Color(0.4, 0.45, 0.5)\n            });\n            camera.translate(0, 7, 25);\n            app.root.addChild(camera);\n\n            const entity = assets.statue.resource.instantiateRenderEntity();\n            app.root.addChild(entity);\n\n            const gamepads = new pc.GamePads();\n            app.on(\"update\", function () {\n                gamepads.update();\n                if (gamepads.isPressed(pc.PAD_1, pc.PAD_LEFT)) {\n                    entity.rotate(0, -1, 0);\n                }\n                if (gamepads.isPressed(pc.PAD_1, pc.PAD_RIGHT)) {\n                    entity.rotate(0, 1, 0);\n                }\n                if (gamepads.wasPressed(pc.PAD_1, pc.PAD_UP)) {\n                    entity.rotate(-1, 0, 0);\n                }\n                if (gamepads.wasPressed(pc.PAD_1, pc.PAD_DOWN)) {\n                    entity.rotate(1, 0, 0);\n                }\n            });\n        });\n    });\n}",javaScriptFunction:'function example(canvas, deviceType) {\n    // Create the application and start the update loop\n\n    const assets = {\n        helipad: new pc.Asset(\n            "helipad-env-atlas",\n            "texture",\n            { url: "/static/assets/cubemaps/helipad-env-atlas.png" },\n            { type: pc.TEXTURETYPE_RGBP, mipmaps: false }\n        ),\n        statue: new pc.Asset("statue", "container", {\n            url: "/static/assets/models/statue.glb",\n        }),\n    };\n\n    const gfxOptions = {\n        deviceTypes: [deviceType],\n        glslangUrl: "/static/lib/glslang/glslang.js",\n        twgslUrl: "/static/lib/twgsl/twgsl.js",\n    };\n\n    pc.createGraphicsDevice(canvas, gfxOptions).then((device) => {\n        const createOptions = new pc.AppOptions();\n        createOptions.graphicsDevice = device;\n\n        createOptions.componentSystems = [\n            // @ts-ignore\n            pc.RenderComponentSystem,\n            // @ts-ignore\n            pc.CameraComponentSystem,\n        ];\n\n        createOptions.resourceHandlers = [\n            // @ts-ignore\n            pc.TextureHandler,\n            // @ts-ignore\n            pc.ContainerHandler,\n        ];\n\n        const app = new pc.AppBase(canvas);\n        app.init(createOptions);\n\n        // Set the canvas to fill the window and automatically change resolution to be the same as the canvas size\n        app.setCanvasFillMode(pc.FILLMODE_FILL_WINDOW);\n        app.setCanvasResolution(pc.RESOLUTION_AUTO);\n\n        const assetListLoader = new pc.AssetListLoader(\n            Object.values(assets),\n            app.assets\n        );\n        assetListLoader.load(() => {\n            app.start();\n\n            // set skybox\n            app.scene.envAtlas = assets.helipad.resource;\n            app.scene.toneMapping = pc.TONEMAP_ACES;\n            app.scene.exposure = 1.6;\n            app.scene.skyboxMip = 1;\n\n            // Create an Entity with a camera component\n            const camera = new pc.Entity();\n            camera.addComponent("camera", {\n                clearColor: new pc.Color(0.4, 0.45, 0.5),\n            });\n            camera.translate(0, 7, 25);\n            app.root.addChild(camera);\n\n            const entity = assets.statue.resource.instantiateRenderEntity();\n            app.root.addChild(entity);\n\n            const gamepads = new pc.GamePads();\n            app.on("update", function () {\n                gamepads.update();\n                if (gamepads.isPressed(pc.PAD_1, pc.PAD_LEFT)) {\n                    entity.rotate(0, -1, 0);\n                }\n                if (gamepads.isPressed(pc.PAD_1, pc.PAD_RIGHT)) {\n                    entity.rotate(0, 1, 0);\n                }\n                if (gamepads.wasPressed(pc.PAD_1, pc.PAD_UP)) {\n                    entity.rotate(-1, 0, 0);\n                }\n                if (gamepads.wasPressed(pc.PAD_1, pc.PAD_DOWN)) {\n                    entity.rotate(1, 0, 0);\n                }\n            });\n        });\n    });\n}\n',nameSlug:"gamepad",categorySlug:"input"},keyboard:{typeScriptFunction:"function example(canvas: HTMLCanvasElement, deviceType: string): void {\n\n    const assets = {\n        'helipad': new pc.Asset('helipad-env-atlas', 'texture', { url: '/static/assets/cubemaps/helipad-env-atlas.png' }, { type: pc.TEXTURETYPE_RGBP, mipmaps: false }),\n        'statue': new pc.Asset('statue', 'container', { url: '/static/assets/models/statue.glb' })\n    };\n\n    const gfxOptions = {\n        deviceTypes: [deviceType],\n        glslangUrl: '/static/lib/glslang/glslang.js',\n        twgslUrl: '/static/lib/twgsl/twgsl.js'\n    };\n\n    pc.createGraphicsDevice(canvas, gfxOptions).then((device: pc.GraphicsDevice) => {\n\n        const createOptions = new pc.AppOptions();\n        createOptions.graphicsDevice = device;\n\n        createOptions.componentSystems = [\n            // @ts-ignore\n            pc.RenderComponentSystem,\n            // @ts-ignore\n            pc.CameraComponentSystem\n        ];\n        createOptions.resourceHandlers = [\n            // @ts-ignore\n            pc.TextureHandler,\n            // @ts-ignore\n            pc.ContainerHandler\n        ];\n\n        const app = new pc.AppBase(canvas);\n        app.init(createOptions);\n\n        // Set the canvas to fill the window and automatically change resolution to be the same as the canvas size\n        app.setCanvasFillMode(pc.FILLMODE_FILL_WINDOW);\n        app.setCanvasResolution(pc.RESOLUTION_AUTO);\n\n        const assetListLoader = new pc.AssetListLoader(Object.values(assets), app.assets);\n        assetListLoader.load(() => {\n\n            app.start();\n\n            // set skybox\n            app.scene.envAtlas = assets.helipad.resource;\n            app.scene.toneMapping = pc.TONEMAP_ACES;\n            app.scene.exposure = 1.6;\n            app.scene.skyboxMip = 1;\n\n            // Create an Entity with a camera component\n            const camera = new pc.Entity();\n            camera.addComponent(\"camera\", {\n                clearColor: new pc.Color(0.4, 0.45, 0.5)\n            });\n            camera.translate(0, 7, 25);\n            app.root.addChild(camera);\n\n            const entity = assets.statue.resource.instantiateRenderEntity();\n            app.root.addChild(entity);\n\n            const keyboard = new pc.Keyboard(document.body);\n            app.on(\"update\", function () {\n                if (keyboard.isPressed(pc.KEY_LEFT)) {\n                    entity.rotate(0, -1, 0);\n                }\n                if (keyboard.isPressed(pc.KEY_RIGHT)) {\n                    entity.rotate(0, 1, 0);\n                }\n            });\n        });\n    });\n}",javaScriptFunction:'function example(canvas, deviceType) {\n    const assets = {\n        helipad: new pc.Asset(\n            "helipad-env-atlas",\n            "texture",\n            { url: "/static/assets/cubemaps/helipad-env-atlas.png" },\n            { type: pc.TEXTURETYPE_RGBP, mipmaps: false }\n        ),\n        statue: new pc.Asset("statue", "container", {\n            url: "/static/assets/models/statue.glb",\n        }),\n    };\n\n    const gfxOptions = {\n        deviceTypes: [deviceType],\n        glslangUrl: "/static/lib/glslang/glslang.js",\n        twgslUrl: "/static/lib/twgsl/twgsl.js",\n    };\n\n    pc.createGraphicsDevice(canvas, gfxOptions).then((device) => {\n        const createOptions = new pc.AppOptions();\n        createOptions.graphicsDevice = device;\n\n        createOptions.componentSystems = [\n            // @ts-ignore\n            pc.RenderComponentSystem,\n            // @ts-ignore\n            pc.CameraComponentSystem,\n        ];\n\n        createOptions.resourceHandlers = [\n            // @ts-ignore\n            pc.TextureHandler,\n            // @ts-ignore\n            pc.ContainerHandler,\n        ];\n\n        const app = new pc.AppBase(canvas);\n        app.init(createOptions);\n\n        // Set the canvas to fill the window and automatically change resolution to be the same as the canvas size\n        app.setCanvasFillMode(pc.FILLMODE_FILL_WINDOW);\n        app.setCanvasResolution(pc.RESOLUTION_AUTO);\n\n        const assetListLoader = new pc.AssetListLoader(\n            Object.values(assets),\n            app.assets\n        );\n        assetListLoader.load(() => {\n            app.start();\n\n            // set skybox\n            app.scene.envAtlas = assets.helipad.resource;\n            app.scene.toneMapping = pc.TONEMAP_ACES;\n            app.scene.exposure = 1.6;\n            app.scene.skyboxMip = 1;\n\n            // Create an Entity with a camera component\n            const camera = new pc.Entity();\n            camera.addComponent("camera", {\n                clearColor: new pc.Color(0.4, 0.45, 0.5),\n            });\n            camera.translate(0, 7, 25);\n            app.root.addChild(camera);\n\n            const entity = assets.statue.resource.instantiateRenderEntity();\n            app.root.addChild(entity);\n\n            const keyboard = new pc.Keyboard(document.body);\n            app.on("update", function () {\n                if (keyboard.isPressed(pc.KEY_LEFT)) {\n                    entity.rotate(0, -1, 0);\n                }\n                if (keyboard.isPressed(pc.KEY_RIGHT)) {\n                    entity.rotate(0, 1, 0);\n                }\n            });\n        });\n    });\n}\n',nameSlug:"keyboard",categorySlug:"input"},mouse:{typeScriptFunction:"function example(canvas: HTMLCanvasElement, deviceType: string): void {\n    const assets = {\n        'helipad': new pc.Asset('helipad-env-atlas', 'texture', { url: '/static/assets/cubemaps/helipad-env-atlas.png' }, { type: pc.TEXTURETYPE_RGBP, mipmaps: false }),\n        'statue': new pc.Asset('statue', 'container', { url: '/static/assets/models/statue.glb' })\n    };\n\n    const gfxOptions = {\n        deviceTypes: [deviceType],\n        glslangUrl: '/static/lib/glslang/glslang.js',\n        twgslUrl: '/static/lib/twgsl/twgsl.js'\n    };\n\n    pc.createGraphicsDevice(canvas, gfxOptions).then((device: pc.GraphicsDevice) => {\n\n        const createOptions = new pc.AppOptions();\n        createOptions.graphicsDevice = device;\n\n        createOptions.componentSystems = [\n            // @ts-ignore\n            pc.RenderComponentSystem,\n            // @ts-ignore\n            pc.CameraComponentSystem\n        ];\n        createOptions.resourceHandlers = [\n            // @ts-ignore\n            pc.TextureHandler,\n            // @ts-ignore\n            pc.ContainerHandler\n        ];\n\n        const app = new pc.AppBase(canvas);\n        app.init(createOptions);\n\n        // Set the canvas to fill the window and automatically change resolution to be the same as the canvas size\n        app.setCanvasFillMode(pc.FILLMODE_FILL_WINDOW);\n        app.setCanvasResolution(pc.RESOLUTION_AUTO);\n\n        const assetListLoader = new pc.AssetListLoader(Object.values(assets), app.assets);\n        assetListLoader.load(() => {\n\n            app.start();\n\n            // set skybox\n            app.scene.envAtlas = assets.helipad.resource;\n            app.scene.toneMapping = pc.TONEMAP_ACES;\n            app.scene.exposure = 1.6;\n            app.scene.skyboxMip = 1;\n\n            // Create an Entity with a camera component\n            const camera = new pc.Entity();\n            camera.addComponent(\"camera\", {\n                clearColor: new pc.Color(0.4, 0.45, 0.5)\n            });\n            camera.translate(0, 7, 25);\n            app.root.addChild(camera);\n\n            const entity = assets.statue.resource.instantiateRenderEntity();\n            app.root.addChild(entity);\n\n            const mouse = new pc.Mouse(document.body);\n\n            let x = 0;\n            const y = 0;\n\n            mouse.on('mousemove', function (event) {\n                if (event.buttons[pc.MOUSEBUTTON_LEFT]) {\n                    x += event.dx;\n\n                    entity.setLocalEulerAngles(0.2 * y, 0.2 * x, 0);\n                }\n            });\n        });\n    });\n}",javaScriptFunction:'function example(canvas, deviceType) {\n    const assets = {\n        helipad: new pc.Asset(\n            "helipad-env-atlas",\n            "texture",\n            { url: "/static/assets/cubemaps/helipad-env-atlas.png" },\n            { type: pc.TEXTURETYPE_RGBP, mipmaps: false }\n        ),\n        statue: new pc.Asset("statue", "container", {\n            url: "/static/assets/models/statue.glb",\n        }),\n    };\n\n    const gfxOptions = {\n        deviceTypes: [deviceType],\n        glslangUrl: "/static/lib/glslang/glslang.js",\n        twgslUrl: "/static/lib/twgsl/twgsl.js",\n    };\n\n    pc.createGraphicsDevice(canvas, gfxOptions).then((device) => {\n        const createOptions = new pc.AppOptions();\n        createOptions.graphicsDevice = device;\n\n        createOptions.componentSystems = [\n            // @ts-ignore\n            pc.RenderComponentSystem,\n            // @ts-ignore\n            pc.CameraComponentSystem,\n        ];\n\n        createOptions.resourceHandlers = [\n            // @ts-ignore\n            pc.TextureHandler,\n            // @ts-ignore\n            pc.ContainerHandler,\n        ];\n\n        const app = new pc.AppBase(canvas);\n        app.init(createOptions);\n\n        // Set the canvas to fill the window and automatically change resolution to be the same as the canvas size\n        app.setCanvasFillMode(pc.FILLMODE_FILL_WINDOW);\n        app.setCanvasResolution(pc.RESOLUTION_AUTO);\n\n        const assetListLoader = new pc.AssetListLoader(\n            Object.values(assets),\n            app.assets\n        );\n        assetListLoader.load(() => {\n            app.start();\n\n            // set skybox\n            app.scene.envAtlas = assets.helipad.resource;\n            app.scene.toneMapping = pc.TONEMAP_ACES;\n            app.scene.exposure = 1.6;\n            app.scene.skyboxMip = 1;\n\n            // Create an Entity with a camera component\n            const camera = new pc.Entity();\n            camera.addComponent("camera", {\n                clearColor: new pc.Color(0.4, 0.45, 0.5),\n            });\n            camera.translate(0, 7, 25);\n            app.root.addChild(camera);\n\n            const entity = assets.statue.resource.instantiateRenderEntity();\n            app.root.addChild(entity);\n\n            const mouse = new pc.Mouse(document.body);\n\n            let x = 0;\n            const y = 0;\n\n            mouse.on("mousemove", function (event) {\n                if (event.buttons[pc.MOUSEBUTTON_LEFT]) {\n                    x += event.dx;\n\n                    entity.setLocalEulerAngles(0.2 * y, 0.2 * x, 0);\n                }\n            });\n        });\n    });\n}\n',nameSlug:"mouse",categorySlug:"input"}},loaders:{"draco-glb":{typeScriptFunction:"function example(canvas: HTMLCanvasElement, deviceType: string): void {\n\n    pc.WasmModule.setConfig('DracoDecoderModule', {\n        glueUrl: '/static/lib/draco/draco.wasm.js',\n        wasmUrl: '/static/lib/draco/draco.wasm.wasm',\n        fallbackUrl: '/static/lib/draco/draco.js'\n    });\n\n    pc.WasmModule.getInstance('DracoDecoderModule', demo);\n\n    function demo() {\n\n        const gfxOptions = {\n            deviceTypes: [deviceType],\n            glslangUrl: '/static/lib/glslang/glslang.js',\n            twgslUrl: '/static/lib/twgsl/twgsl.js'\n        };\n\n        pc.createGraphicsDevice(canvas, gfxOptions).then((device: pc.GraphicsDevice) => {\n\n            const createOptions = new pc.AppOptions();\n            createOptions.graphicsDevice = device;\n\n            createOptions.componentSystems = [\n                // @ts-ignore\n                pc.RenderComponentSystem,\n                // @ts-ignore\n                pc.CameraComponentSystem,\n                // @ts-ignore\n                pc.LightComponentSystem\n            ];\n            createOptions.resourceHandlers = [\n                // @ts-ignore\n                pc.TextureHandler,\n                // @ts-ignore\n                pc.ContainerHandler\n            ];\n\n            const app = new pc.AppBase(canvas);\n            app.init(createOptions);\n\n            // Set the canvas to fill the window and automatically change resolution to be the same as the canvas size\n            app.setCanvasFillMode(pc.FILLMODE_FILL_WINDOW);\n            app.setCanvasResolution(pc.RESOLUTION_AUTO);\n\n            const assets = {\n                heart: new pc.Asset('heart', 'container', { url: '/static/assets/models/heart_draco.glb' })\n            };\n\n            const assetListLoader = new pc.AssetListLoader(Object.values(assets), app.assets);\n            assetListLoader.load(() => {\n\n                app.start();\n\n                app.scene.ambientLight = new pc.Color(0.2, 0.2, 0.2);\n\n                // create an instance using render component\n                const entity = assets.heart.resource.instantiateRenderEntity({\n                    receiveShadows: false\n                });\n                app.root.addChild(entity);\n                entity.setLocalScale(20, 20, 20);\n\n                // Create an Entity with a camera component\n                const camera = new pc.Entity();\n                camera.addComponent(\"camera\", {\n                    clearColor: new pc.Color(0.2, 0.2, 0.2)\n                });\n                camera.translate(0, 0.5, 4);\n                app.root.addChild(camera);\n\n                // Create an entity with a omni light component\n                const light = new pc.Entity();\n                light.addComponent(\"light\", {\n                    type: \"omni\",\n                    intensity: 3\n                });\n                light.setLocalPosition(1, 1, 5);\n                app.root.addChild(light);\n\n                app.on(\"update\", function (dt) {\n                    if (entity) {\n                        entity.rotate(4 * dt, -20 * dt, 0);\n                    }\n                });\n            });\n        });\n    }\n}",javaScriptFunction:'function example(canvas, deviceType) {\n    pc.WasmModule.setConfig("DracoDecoderModule", {\n        glueUrl: "/static/lib/draco/draco.wasm.js",\n        wasmUrl: "/static/lib/draco/draco.wasm.wasm",\n        fallbackUrl: "/static/lib/draco/draco.js",\n    });\n\n    pc.WasmModule.getInstance("DracoDecoderModule", demo);\n\n    function demo() {\n        const gfxOptions = {\n            deviceTypes: [deviceType],\n            glslangUrl: "/static/lib/glslang/glslang.js",\n            twgslUrl: "/static/lib/twgsl/twgsl.js",\n        };\n\n        pc.createGraphicsDevice(canvas, gfxOptions).then((device) => {\n            const createOptions = new pc.AppOptions();\n            createOptions.graphicsDevice = device;\n\n            createOptions.componentSystems = [\n                // @ts-ignore\n                pc.RenderComponentSystem,\n                // @ts-ignore\n                pc.CameraComponentSystem,\n                // @ts-ignore\n                pc.LightComponentSystem,\n            ];\n\n            createOptions.resourceHandlers = [\n                // @ts-ignore\n                pc.TextureHandler,\n                // @ts-ignore\n                pc.ContainerHandler,\n            ];\n\n            const app = new pc.AppBase(canvas);\n            app.init(createOptions);\n\n            // Set the canvas to fill the window and automatically change resolution to be the same as the canvas size\n            app.setCanvasFillMode(pc.FILLMODE_FILL_WINDOW);\n            app.setCanvasResolution(pc.RESOLUTION_AUTO);\n\n            const assets = {\n                heart: new pc.Asset("heart", "container", {\n                    url: "/static/assets/models/heart_draco.glb",\n                }),\n            };\n\n            const assetListLoader = new pc.AssetListLoader(\n                Object.values(assets),\n                app.assets\n            );\n            assetListLoader.load(() => {\n                app.start();\n\n                app.scene.ambientLight = new pc.Color(0.2, 0.2, 0.2);\n\n                // create an instance using render component\n                const entity = assets.heart.resource.instantiateRenderEntity({\n                    receiveShadows: false,\n                });\n                app.root.addChild(entity);\n                entity.setLocalScale(20, 20, 20);\n\n                // Create an Entity with a camera component\n                const camera = new pc.Entity();\n                camera.addComponent("camera", {\n                    clearColor: new pc.Color(0.2, 0.2, 0.2),\n                });\n                camera.translate(0, 0.5, 4);\n                app.root.addChild(camera);\n\n                // Create an entity with a omni light component\n                const light = new pc.Entity();\n                light.addComponent("light", {\n                    type: "omni",\n                    intensity: 3,\n                });\n                light.setLocalPosition(1, 1, 5);\n                app.root.addChild(light);\n\n                app.on("update", function (dt) {\n                    if (entity) {\n                        entity.rotate(4 * dt, -20 * dt, 0);\n                    }\n                });\n            });\n        });\n    }\n}\n',nameSlug:"draco-glb",categorySlug:"loaders"},glb:{typeScriptFunction:"function example(canvas: HTMLCanvasElement, deviceType: string): void {\n\n    // The example demonstrates loading of glb file, which contains meshes,\n    // lights and cameras, and switches between the cameras every 2 seconds.\n\n    const assets = {\n        'scene': new pc.Asset('scene', 'container', { url: '/static/assets/models/geometry-camera-light.glb' })\n    };\n\n    const gfxOptions = {\n        deviceTypes: [deviceType],\n        glslangUrl: '/static/lib/glslang/glslang.js',\n        twgslUrl: '/static/lib/twgsl/twgsl.js'\n    };\n\n    pc.createGraphicsDevice(canvas, gfxOptions).then((device: pc.GraphicsDevice) => {\n\n        const createOptions = new pc.AppOptions();\n        createOptions.graphicsDevice = device;\n\n        createOptions.componentSystems = [\n            // @ts-ignore\n            pc.RenderComponentSystem,\n            // @ts-ignore\n            pc.CameraComponentSystem,\n            // @ts-ignore\n            pc.LightComponentSystem\n        ];\n        createOptions.resourceHandlers = [\n            // @ts-ignore\n            pc.TextureHandler,\n            // @ts-ignore\n            pc.ContainerHandler\n        ];\n\n        const app = new pc.AppBase(canvas);\n        app.init(createOptions);\n\n        // Set the canvas to fill the window and automatically change resolution to be the same as the canvas size\n        app.setCanvasFillMode(pc.FILLMODE_FILL_WINDOW);\n        app.setCanvasResolution(pc.RESOLUTION_AUTO);\n\n        const assetListLoader = new pc.AssetListLoader(Object.values(assets), app.assets);\n        assetListLoader.load(() => {\n\n            app.start();\n\n            // the array will store loaded cameras\n            let camerasComponents: Array<pc.CameraComponent> = null;\n\n            // glb lights use physical units\n            app.scene.physicalUnits = true;\n\n            // create an instance using render component\n            const entity = assets.scene.resource.instantiateRenderEntity({\n            });\n            app.root.addChild(entity);\n\n            // find all cameras - by default they are disabled\n            camerasComponents = entity.findComponents(\"camera\");\n            camerasComponents.forEach((component) => {\n\n                // set the aspect ratio to automatic to work with any window size\n                component.aspectRatioMode = pc.ASPECT_AUTO;\n\n                // set up exposure for physical units\n                component.aperture = 4;\n                component.shutter = 1 / 100;\n                component.sensitivity = 500;\n            });\n\n            // enable all lights from the glb\n            const lightComponents: Array<pc.LightComponent> = entity.findComponents(\"light\");\n            lightComponents.forEach((component) => {\n                component.enabled = true;\n            });\n\n            let time = 0;\n            let activeCamera = 0;\n            app.on(\"update\", function (dt) {\n                time -= dt;\n\n                // change the camera every few seconds\n                if (time <= 0) {\n                    time = 2;\n\n                    // disable current camera\n                    camerasComponents[activeCamera].enabled = false;\n\n                    // activate next camera\n                    activeCamera = (activeCamera + 1) % camerasComponents.length;\n                    camerasComponents[activeCamera].enabled = true;\n                }\n            });\n        });\n    });\n}",javaScriptFunction:'function example(canvas, deviceType) {\n    // The example demonstrates loading of glb file, which contains meshes,\n    // lights and cameras, and switches between the cameras every 2 seconds.\n\n    const assets = {\n        scene: new pc.Asset("scene", "container", {\n            url: "/static/assets/models/geometry-camera-light.glb",\n        }),\n    };\n\n    const gfxOptions = {\n        deviceTypes: [deviceType],\n        glslangUrl: "/static/lib/glslang/glslang.js",\n        twgslUrl: "/static/lib/twgsl/twgsl.js",\n    };\n\n    pc.createGraphicsDevice(canvas, gfxOptions).then((device) => {\n        const createOptions = new pc.AppOptions();\n        createOptions.graphicsDevice = device;\n\n        createOptions.componentSystems = [\n            // @ts-ignore\n            pc.RenderComponentSystem,\n            // @ts-ignore\n            pc.CameraComponentSystem,\n            // @ts-ignore\n            pc.LightComponentSystem,\n        ];\n\n        createOptions.resourceHandlers = [\n            // @ts-ignore\n            pc.TextureHandler,\n            // @ts-ignore\n            pc.ContainerHandler,\n        ];\n\n        const app = new pc.AppBase(canvas);\n        app.init(createOptions);\n\n        // Set the canvas to fill the window and automatically change resolution to be the same as the canvas size\n        app.setCanvasFillMode(pc.FILLMODE_FILL_WINDOW);\n        app.setCanvasResolution(pc.RESOLUTION_AUTO);\n\n        const assetListLoader = new pc.AssetListLoader(\n            Object.values(assets),\n            app.assets\n        );\n        assetListLoader.load(() => {\n            app.start();\n\n            // the array will store loaded cameras\n            let camerasComponents = null;\n\n            // glb lights use physical units\n            app.scene.physicalUnits = true;\n\n            // create an instance using render component\n            const entity = assets.scene.resource.instantiateRenderEntity({});\n            app.root.addChild(entity);\n\n            // find all cameras - by default they are disabled\n            camerasComponents = entity.findComponents("camera");\n            camerasComponents.forEach((component) => {\n                // set the aspect ratio to automatic to work with any window size\n                component.aspectRatioMode = pc.ASPECT_AUTO;\n\n                // set up exposure for physical units\n                component.aperture = 4;\n                component.shutter = 1 / 100;\n                component.sensitivity = 500;\n            });\n\n            // enable all lights from the glb\n            const lightComponents = entity.findComponents("light");\n            lightComponents.forEach((component) => {\n                component.enabled = true;\n            });\n\n            let time = 0;\n            let activeCamera = 0;\n            app.on("update", function (dt) {\n                time -= dt;\n\n                // change the camera every few seconds\n                if (time <= 0) {\n                    time = 2;\n\n                    // disable current camera\n                    camerasComponents[activeCamera].enabled = false;\n\n                    // activate next camera\n                    activeCamera =\n                        (activeCamera + 1) % camerasComponents.length;\n                    camerasComponents[activeCamera].enabled = true;\n                }\n            });\n        });\n    });\n}\n',nameSlug:"glb",categorySlug:"loaders"},"gltf-export":{typeScriptFunction:"function example(canvas: HTMLCanvasElement, deviceType: string, pcx: any, data: any): void {\n\n    // set up and load draco module, as the glb we load is draco compressed\n    pc.WasmModule.setConfig('DracoDecoderModule', {\n        glueUrl: '/static/lib/draco/draco.wasm.js',\n        wasmUrl: '/static/lib/draco/draco.wasm.wasm',\n        fallbackUrl: '/static/lib/draco/draco.js'\n    });\n\n    pc.WasmModule.getInstance('DracoDecoderModule', demo);\n\n    function demo() {\n\n        const assets = {\n            'helipad': new pc.Asset('helipad-env-atlas', 'texture', { url: '/static/assets/cubemaps/helipad-env-atlas.png' }, { type: pc.TEXTURETYPE_RGBP, mipmaps: false }),\n            'bench': new pc.Asset('bench', 'container', { url: '/static/assets/models/bench_wooden_01.glb' }),\n            'model': new pc.Asset('model', 'container', { url: '/static/assets/models/bitmoji.glb' }),\n            'board': new pc.Asset('statue', 'container', { url: '/static/assets/models/chess-board.glb' }),\n            'color': new pc.Asset('color', 'texture', { url: '/static/assets/textures/seaside-rocks01-color.jpg' })\n        };\n\n        const gfxOptions = {\n            deviceTypes: [deviceType],\n            glslangUrl: '/static/lib/glslang/glslang.js',\n            twgslUrl: '/static/lib/twgsl/twgsl.js'\n        };\n\n        pc.createGraphicsDevice(canvas, gfxOptions).then((device: pc.GraphicsDevice) => {\n\n            const createOptions = new pc.AppOptions();\n            createOptions.graphicsDevice = device;\n\n            createOptions.componentSystems = [\n                // @ts-ignore\n                pc.RenderComponentSystem,\n                // @ts-ignore\n                pc.CameraComponentSystem,\n                // @ts-ignore\n                pc.LightComponentSystem\n            ];\n            createOptions.resourceHandlers = [\n                // @ts-ignore\n                pc.TextureHandler,\n                // @ts-ignore\n                pc.ContainerHandler\n            ];\n\n            const app = new pc.AppBase(canvas);\n            app.init(createOptions);\n\n            // Set the canvas to fill the window and automatically change resolution to be the same as the canvas size\n            app.setCanvasFillMode(pc.FILLMODE_FILL_WINDOW);\n            app.setCanvasResolution(pc.RESOLUTION_AUTO);\n\n            const assetListLoader = new pc.AssetListLoader(Object.values(assets), app.assets);\n            assetListLoader.load(() => {\n\n                app.start();\n\n                // get the instance of the bench and set up with render component\n                const entity1 = assets.bench.resource.instantiateRenderEntity();\n                entity1.setLocalPosition(0, 0, -1.5);\n                app.root.addChild(entity1);\n\n                // the character\n                const entity2 = assets.model.resource.instantiateRenderEntity();\n                app.root.addChild(entity2);\n\n                // chess board\n                const entity3 = assets.board.resource.instantiateRenderEntity();\n                entity3.setLocalScale(0.01, 0.01, 0.01);\n                app.root.addChild(entity3);\n\n                // a render component with a sphere and cone primitives\n                const material = new pc.StandardMaterial();\n                material.diffuse = pc.Color.RED;\n                material.update();\n\n                const entity = new pc.Entity(\"TwoMeshInstances\");\n                entity.addComponent('render', {\n                    type: 'asset',\n                    meshInstances: [\n                        new pc.MeshInstance(pc.createSphere(app.graphicsDevice), material),\n                        new pc.MeshInstance(pc.createCone(app.graphicsDevice), material)\n                    ]\n                });\n                app.root.addChild(entity);\n                entity.setLocalPosition(0, 1.5, -1.5);\n\n                // mesh with a basic material\n                const basicMaterial = new pc.BasicMaterial();\n                basicMaterial.color.set(0.5, 1.0, 0.7);\n                basicMaterial.colorMap = assets.color.resource;\n\n                const capsule = new pc.Entity('capsule');\n                capsule.addComponent('render', {\n                    material: basicMaterial,\n                    type: 'capsule'\n                });\n                capsule.setLocalPosition(0.5, 2.0, -0.5);\n                app.root.addChild(capsule);\n\n                // Create an Entity with a camera component\n                const camera = new pc.Entity();\n                camera.addComponent(\"camera\", {\n                    clearColor: new pc.Color(0.2, 0.1, 0.1),\n                    farClip: 100\n                });\n                camera.translate(-3, 1, 2);\n                camera.lookAt(0, 0.5, 0);\n                app.root.addChild(camera);\n\n                // set skybox\n                app.scene.envAtlas = assets.helipad.resource;\n                app.scene.toneMapping = pc.TONEMAP_ACES;\n                app.scene.skyboxMip = 1;\n                app.scene.exposure = 1.5;\n\n                // a link element, created in the html part of the examples.\n                const link = document.getElementById('ar-link');\n\n                // export the whole scene into a glb format\n                const options = {\n                    maxTextureSize: 1024\n                };\n\n                new pcx.GltfExporter().build(app.root, options).then((arrayBuffer: any) => {\n\n                    const blob = new Blob([arrayBuffer], { type: 'application/octet-stream' });\n\n                    // @ts-ignore\n                    link.download = \"scene.glb\";\n\n                    // @ts-ignore\n                    link.href = URL.createObjectURL(blob);\n                }).catch(console.error);\n\n                // when clicking on the download UI button, trigger the download\n                data.on('download', function () {\n                    link.click();\n                });\n            });\n        });\n    }\n}",javaScriptFunction:'function example(canvas, deviceType, pcx, data) {\n    // set up and load draco module, as the glb we load is draco compressed\n    pc.WasmModule.setConfig("DracoDecoderModule", {\n        glueUrl: "/static/lib/draco/draco.wasm.js",\n        wasmUrl: "/static/lib/draco/draco.wasm.wasm",\n        fallbackUrl: "/static/lib/draco/draco.js",\n    });\n\n    pc.WasmModule.getInstance("DracoDecoderModule", demo);\n\n    function demo() {\n        const assets = {\n            helipad: new pc.Asset(\n                "helipad-env-atlas",\n                "texture",\n                { url: "/static/assets/cubemaps/helipad-env-atlas.png" },\n                { type: pc.TEXTURETYPE_RGBP, mipmaps: false }\n            ),\n            bench: new pc.Asset("bench", "container", {\n                url: "/static/assets/models/bench_wooden_01.glb",\n            }),\n            model: new pc.Asset("model", "container", {\n                url: "/static/assets/models/bitmoji.glb",\n            }),\n            board: new pc.Asset("statue", "container", {\n                url: "/static/assets/models/chess-board.glb",\n            }),\n            color: new pc.Asset("color", "texture", {\n                url: "/static/assets/textures/seaside-rocks01-color.jpg",\n            }),\n        };\n\n        const gfxOptions = {\n            deviceTypes: [deviceType],\n            glslangUrl: "/static/lib/glslang/glslang.js",\n            twgslUrl: "/static/lib/twgsl/twgsl.js",\n        };\n\n        pc.createGraphicsDevice(canvas, gfxOptions).then((device) => {\n            const createOptions = new pc.AppOptions();\n            createOptions.graphicsDevice = device;\n\n            createOptions.componentSystems = [\n                // @ts-ignore\n                pc.RenderComponentSystem,\n                // @ts-ignore\n                pc.CameraComponentSystem,\n                // @ts-ignore\n                pc.LightComponentSystem,\n            ];\n\n            createOptions.resourceHandlers = [\n                // @ts-ignore\n                pc.TextureHandler,\n                // @ts-ignore\n                pc.ContainerHandler,\n            ];\n\n            const app = new pc.AppBase(canvas);\n            app.init(createOptions);\n\n            // Set the canvas to fill the window and automatically change resolution to be the same as the canvas size\n            app.setCanvasFillMode(pc.FILLMODE_FILL_WINDOW);\n            app.setCanvasResolution(pc.RESOLUTION_AUTO);\n\n            const assetListLoader = new pc.AssetListLoader(\n                Object.values(assets),\n                app.assets\n            );\n            assetListLoader.load(() => {\n                app.start();\n\n                // get the instance of the bench and set up with render component\n                const entity1 = assets.bench.resource.instantiateRenderEntity();\n                entity1.setLocalPosition(0, 0, -1.5);\n                app.root.addChild(entity1);\n\n                // the character\n                const entity2 = assets.model.resource.instantiateRenderEntity();\n                app.root.addChild(entity2);\n\n                // chess board\n                const entity3 = assets.board.resource.instantiateRenderEntity();\n                entity3.setLocalScale(0.01, 0.01, 0.01);\n                app.root.addChild(entity3);\n\n                // a render component with a sphere and cone primitives\n                const material = new pc.StandardMaterial();\n                material.diffuse = pc.Color.RED;\n                material.update();\n\n                const entity = new pc.Entity("TwoMeshInstances");\n                entity.addComponent("render", {\n                    type: "asset",\n                    meshInstances: [\n                        new pc.MeshInstance(\n                            pc.createSphere(app.graphicsDevice),\n                            material\n                        ),\n                        new pc.MeshInstance(\n                            pc.createCone(app.graphicsDevice),\n                            material\n                        ),\n                    ],\n                });\n                app.root.addChild(entity);\n                entity.setLocalPosition(0, 1.5, -1.5);\n\n                // mesh with a basic material\n                const basicMaterial = new pc.BasicMaterial();\n                basicMaterial.color.set(0.5, 1.0, 0.7);\n                basicMaterial.colorMap = assets.color.resource;\n\n                const capsule = new pc.Entity("capsule");\n                capsule.addComponent("render", {\n                    material: basicMaterial,\n                    type: "capsule",\n                });\n                capsule.setLocalPosition(0.5, 2.0, -0.5);\n                app.root.addChild(capsule);\n\n                // Create an Entity with a camera component\n                const camera = new pc.Entity();\n                camera.addComponent("camera", {\n                    clearColor: new pc.Color(0.2, 0.1, 0.1),\n                    farClip: 100,\n                });\n                camera.translate(-3, 1, 2);\n                camera.lookAt(0, 0.5, 0);\n                app.root.addChild(camera);\n\n                // set skybox\n                app.scene.envAtlas = assets.helipad.resource;\n                app.scene.toneMapping = pc.TONEMAP_ACES;\n                app.scene.skyboxMip = 1;\n                app.scene.exposure = 1.5;\n\n                // a link element, created in the html part of the examples.\n                const link = document.getElementById("ar-link");\n\n                // export the whole scene into a glb format\n                const options = {\n                    maxTextureSize: 1024,\n                };\n\n                new pcx.GltfExporter()\n                    .build(app.root, options)\n                    .then((arrayBuffer) => {\n                        const blob = new Blob([arrayBuffer], {\n                            type: "application/octet-stream",\n                        });\n\n                        // @ts-ignore\n                        link.download = "scene.glb";\n\n                        // @ts-ignore\n                        link.href = URL.createObjectURL(blob);\n                    })\n                    .catch(console.error);\n\n                // when clicking on the download UI button, trigger the download\n                data.on("download", function () {\n                    link.click();\n                });\n            });\n        });\n    }\n}\n',nameSlug:"gltf-export",categorySlug:"loaders"},"loaders-gl":{typeScriptFunction:"function example(canvas: HTMLCanvasElement, deviceType: string, files: { 'shader.vert': string, 'shader.frag': string }): void {\n    // This example uses draco point cloud loader library from https://loaders.gl/\n    // Note that many additional formats are supported by the library and can be used.\n\n    // Create the app\n    const app = new pc.Application(canvas, {});\n    async function loadModel(url:string) {\n\n        // load the url using the draco format loader\n        // @ts-ignore: cannot find CORE and DRACO\n        const modelData = await CORE.load(url, DRACO.DracoLoader);\n\n        // loaded colors only contain RGB, convert it to an array of RGBA with alpha of 255\n        const srcColors = modelData.attributes.COLOR_0.value;\n        const numVertices = srcColors.length / modelData.attributes.COLOR_0.size;\n        const colors32 = new Uint8Array(numVertices * 4);\n        for (let i = 0; i < numVertices; i++) {\n            colors32[i * 4 + 0] = srcColors[i * 3 + 0];\n            colors32[i * 4 + 1] = srcColors[i * 3 + 1];\n            colors32[i * 4 + 2] = srcColors[i * 3 + 2];\n            colors32[i * 4 + 3] = 255;\n        }\n\n        // based on the loaded data, create the mesh with position and color vertex data\n        const mesh = new pc.Mesh(app.graphicsDevice);\n        mesh.clear(true, false);\n        mesh.setPositions(modelData.attributes.POSITION.value, modelData.attributes.POSITION.size);\n        mesh.setColors32(colors32);\n        mesh.update(pc.PRIMITIVE_POINTS);\n\n        // Create shader to render mesh as circular points with color\n        const shaderDefinition = {\n            attributes: {\n                aPosition: pc.SEMANTIC_POSITION,\n                aColor: pc.SEMANTIC_COLOR\n            },\n            vshader: files['shader.vert'],\n            fshader: files['shader.frag']\n        };\n        const shader = new pc.Shader(app.graphicsDevice, shaderDefinition);\n\n        // create material using the shader\n        const material = new pc.Material();\n        material.shader = shader;\n        material.blendType = pc.BLENDMODE_ONE_MINUS_DST_ALPHA;\n        material.cull = pc.CULLFACE_NONE;\n\n        // Add an entity with a render component to render the mesh\n        const entity = new pc.Entity();\n        entity.addComponent('render', {\n            material: material,\n            meshInstances: [new pc.MeshInstance(mesh, material)]\n        });\n\n        app.root.addChild(entity);\n    }\n\n    // Create an Entity with a camera component\n    const camera = new pc.Entity();\n    camera.addComponent(\"camera\", {\n        clearColor: new pc.Color(0.1, 0.1, 0.1),\n        farClip: 100\n    });\n    camera.translate(-20, 15, 20);\n    camera.lookAt(0, 7, 0);\n    app.root.addChild(camera);\n\n    // load the draco model, and then start the application\n    loadModel(\"/static/assets/models/park_points.drc\").then(() => {\n        app.start();\n    });\n\n    // update things each frame\n    let time = 0;\n    app.on(\"update\", function (dt) {\n        time += dt;\n\n        // orbit the camera\n        if (camera) {\n            camera.setLocalPosition(40 * Math.sin(time * 0.5), 10, 20 * Math.cos(time * 0.5));\n            camera.lookAt(pc.Vec3.ZERO);\n        }\n    });\n}",javaScriptFunction:'function example(canvas, deviceType, files) {\n    // This example uses draco point cloud loader library from https://loaders.gl/\n    // Note that many additional formats are supported by the library and can be used.\n\n    // Create the app\n    const app = new pc.Application(canvas, {});\n    async function loadModel(url) {\n        // load the url using the draco format loader\n        // @ts-ignore: cannot find CORE and DRACO\n        const modelData = await CORE.load(url, DRACO.DracoLoader);\n\n        // loaded colors only contain RGB, convert it to an array of RGBA with alpha of 255\n        const srcColors = modelData.attributes.COLOR_0.value;\n        const numVertices =\n            srcColors.length / modelData.attributes.COLOR_0.size;\n        const colors32 = new Uint8Array(numVertices * 4);\n        for (let i = 0; i < numVertices; i++) {\n            colors32[i * 4 + 0] = srcColors[i * 3 + 0];\n            colors32[i * 4 + 1] = srcColors[i * 3 + 1];\n            colors32[i * 4 + 2] = srcColors[i * 3 + 2];\n            colors32[i * 4 + 3] = 255;\n        }\n\n        // based on the loaded data, create the mesh with position and color vertex data\n        const mesh = new pc.Mesh(app.graphicsDevice);\n        mesh.clear(true, false);\n        mesh.setPositions(\n            modelData.attributes.POSITION.value,\n            modelData.attributes.POSITION.size\n        );\n        mesh.setColors32(colors32);\n        mesh.update(pc.PRIMITIVE_POINTS);\n\n        // Create shader to render mesh as circular points with color\n        const shaderDefinition = {\n            attributes: {\n                aPosition: pc.SEMANTIC_POSITION,\n                aColor: pc.SEMANTIC_COLOR,\n            },\n            vshader: files["shader.vert"],\n            fshader: files["shader.frag"],\n        };\n        const shader = new pc.Shader(app.graphicsDevice, shaderDefinition);\n\n        // create material using the shader\n        const material = new pc.Material();\n        material.shader = shader;\n        material.blendType = pc.BLENDMODE_ONE_MINUS_DST_ALPHA;\n        material.cull = pc.CULLFACE_NONE;\n\n        // Add an entity with a render component to render the mesh\n        const entity = new pc.Entity();\n        entity.addComponent("render", {\n            material: material,\n            meshInstances: [new pc.MeshInstance(mesh, material)],\n        });\n\n        app.root.addChild(entity);\n    }\n\n    // Create an Entity with a camera component\n    const camera = new pc.Entity();\n    camera.addComponent("camera", {\n        clearColor: new pc.Color(0.1, 0.1, 0.1),\n        farClip: 100,\n    });\n    camera.translate(-20, 15, 20);\n    camera.lookAt(0, 7, 0);\n    app.root.addChild(camera);\n\n    // load the draco model, and then start the application\n    loadModel("/static/assets/models/park_points.drc").then(() => {\n        app.start();\n    });\n\n    // update things each frame\n    let time = 0;\n    app.on("update", function (dt) {\n        time += dt;\n\n        // orbit the camera\n        if (camera) {\n            camera.setLocalPosition(\n                40 * Math.sin(time * 0.5),\n                10,\n                20 * Math.cos(time * 0.5)\n            );\n            camera.lookAt(pc.Vec3.ZERO);\n        }\n    });\n}\n',nameSlug:"loaders-gl",categorySlug:"loaders",files:{"shader.vert":"\n// Attributes per vertex: position\nattribute vec4 aPosition;\nattribute vec4 aColor;\n\nuniform mat4   matrix_viewProjection;\nuniform mat4   matrix_model;\n\n// Color to fragment program\nvarying vec4 outColor;\n\nvoid main(void)\n{\n    mat4 modelViewProj = matrix_viewProjection * matrix_model;\n    gl_Position = modelViewProj * aPosition;\n\n    gl_PointSize = 1.5;\n    outColor = aColor;\n}","shader.frag":"\nprecision lowp float;\nvarying vec4 outColor;\n\nvoid main(void)\n{\n    // just output color supplied by vertex shader\n    gl_FragColor = outColor;\n}"}},obj:{typeScriptFunction:'function example(canvas: HTMLCanvasElement, deviceType: string): void {\n\n    // Create the app and start the update loop\n    const app = new pc.Application(canvas, {});\n\n    app.scene.ambientLight = new pc.Color(0.2, 0.2, 0.2);\n\n    const objurl = "/static/assets/models/monkey.obj";\n    const scripturl = "/static/scripts/parsers/obj-model.js";\n\n    let entity: pc.Entity;\n    app.assets.loadFromUrl(scripturl, "script", function () {\n\n        // OBJ Parser is not enabled by default in engine. Add the parser to the model resource handler\n        // set up obj parser\n        // @ts-ignore globally loaded ObjModelParser\n        app.loader.getHandler("model").addParser(new ObjModelParser(app.graphicsDevice), function (url) {\n            return (pc.path.getExtension(url) === \'.obj\');\n        });\n\n        app.assets.loadFromUrl(objurl, "model", function (err, asset) {\n\n            app.start();\n\n            entity = new pc.Entity();\n            entity.addComponent("model");\n            entity.model.model = asset.resource;\n            app.root.addChild(entity);\n\n            // add a randomly generated material to all mesh instances\n            const mis = entity.model.meshInstances;\n            for (let i = 0; i < mis.length; i++) {\n                const material = new pc.StandardMaterial();\n                material.diffuse = new pc.Color(pc.math.random(0, 1), pc.math.random(0, 1), pc.math.random(0, 1));\n                material.update();\n                mis[i].material = material;\n            }\n        });\n    });\n\n    // Create an Entity with a camera component\n    const camera = new pc.Entity();\n    camera.addComponent("camera", {\n        clearColor: new pc.Color(0.4, 0.45, 0.5)\n    });\n    camera.translate(0, 0, 5);\n    app.root.addChild(camera);\n\n    // Create an Entity with a omni light component\n    const light = new pc.Entity();\n    light.addComponent("light", {\n        type: "omni",\n        color: new pc.Color(1, 1, 1),\n        range: 100\n    });\n    light.translate(5, 0, 15);\n    app.root.addChild(light);\n\n    app.on("update", function (dt) {\n        if (entity) {\n            entity.rotate(0, 100 * dt, 0);\n        }\n    });\n}',javaScriptFunction:'function example(canvas, deviceType) {\n    // Create the app and start the update loop\n    const app = new pc.Application(canvas, {});\n\n    app.scene.ambientLight = new pc.Color(0.2, 0.2, 0.2);\n\n    const objurl = "/static/assets/models/monkey.obj";\n    const scripturl = "/static/scripts/parsers/obj-model.js";\n\n    let entity;\n    app.assets.loadFromUrl(scripturl, "script", function () {\n        // OBJ Parser is not enabled by default in engine. Add the parser to the model resource handler\n        // set up obj parser\n        // @ts-ignore globally loaded ObjModelParser\n        app.loader\n            .getHandler("model")\n            .addParser(new ObjModelParser(app.graphicsDevice), function (url) {\n                return pc.path.getExtension(url) === ".obj";\n            });\n\n        app.assets.loadFromUrl(objurl, "model", function (err, asset) {\n            app.start();\n\n            entity = new pc.Entity();\n            entity.addComponent("model");\n            entity.model.model = asset.resource;\n            app.root.addChild(entity);\n\n            // add a randomly generated material to all mesh instances\n            const mis = entity.model.meshInstances;\n            for (let i = 0; i < mis.length; i++) {\n                const material = new pc.StandardMaterial();\n                material.diffuse = new pc.Color(\n                    pc.math.random(0, 1),\n                    pc.math.random(0, 1),\n                    pc.math.random(0, 1)\n                );\n                material.update();\n                mis[i].material = material;\n            }\n        });\n    });\n\n    // Create an Entity with a camera component\n    const camera = new pc.Entity();\n    camera.addComponent("camera", {\n        clearColor: new pc.Color(0.4, 0.45, 0.5),\n    });\n    camera.translate(0, 0, 5);\n    app.root.addChild(camera);\n\n    // Create an Entity with a omni light component\n    const light = new pc.Entity();\n    light.addComponent("light", {\n        type: "omni",\n        color: new pc.Color(1, 1, 1),\n        range: 100,\n    });\n    light.translate(5, 0, 15);\n    app.root.addChild(light);\n\n    app.on("update", function (dt) {\n        if (entity) {\n            entity.rotate(0, 100 * dt, 0);\n        }\n    });\n}\n',nameSlug:"obj",categorySlug:"loaders"},"usdz-export":{typeScriptFunction:"function example(canvas: HTMLCanvasElement, deviceType: string, pcx: any, data: any): void {\n\n    const assets = {\n        'helipad': new pc.Asset('helipad-env-atlas', 'texture', { url: '/static/assets/cubemaps/helipad-env-atlas.png' }, { type: pc.TEXTURETYPE_RGBP, mipmaps: false }),\n        'bench': new pc.Asset('bench', 'container', { url: '/static/assets/models/bench_wooden_01.glb' })\n    };\n\n    const gfxOptions = {\n        deviceTypes: [deviceType],\n        glslangUrl: '/static/lib/glslang/glslang.js',\n        twgslUrl: '/static/lib/twgsl/twgsl.js'\n    };\n\n    pc.createGraphicsDevice(canvas, gfxOptions).then((device: pc.GraphicsDevice) => {\n\n        const createOptions = new pc.AppOptions();\n        createOptions.graphicsDevice = device;\n\n        createOptions.componentSystems = [\n            // @ts-ignore\n            pc.RenderComponentSystem,\n            // @ts-ignore\n            pc.CameraComponentSystem,\n            // @ts-ignore\n            pc.LightComponentSystem\n        ];\n        createOptions.resourceHandlers = [\n            // @ts-ignore\n            pc.TextureHandler,\n            // @ts-ignore\n            pc.ContainerHandler\n        ];\n\n        const app = new pc.AppBase(canvas);\n        app.init(createOptions);\n\n        // Set the canvas to fill the window and automatically change resolution to be the same as the canvas size\n        app.setCanvasFillMode(pc.FILLMODE_FILL_WINDOW);\n        app.setCanvasResolution(pc.RESOLUTION_AUTO);\n\n        const assetListLoader = new pc.AssetListLoader(Object.values(assets), app.assets);\n        assetListLoader.load(() => {\n\n            app.start();\n\n\n            // get the instance of the bench and set up with render component\n            const entity = assets.bench.resource.instantiateRenderEntity();\n            app.root.addChild(entity);\n\n            // Create an Entity with a camera component\n            const camera = new pc.Entity();\n            camera.addComponent(\"camera\", {\n                clearColor: new pc.Color(0.2, 0.1, 0.1),\n                farClip: 100\n            });\n            camera.translate(-3, 1, 2);\n            camera.lookAt(0, 0.5, 0);\n            app.root.addChild(camera);\n\n            // set skybox\n            app.scene.envAtlas = assets.helipad.resource;\n            app.scene.toneMapping = pc.TONEMAP_ACES;\n            app.scene.skyboxMip = 1;\n\n            // a link element, created in the html part of the examples.\n            const link = document.getElementById('ar-link');\n\n            // convert the loaded entity into asdz file\n            const options = {\n                maxTextureSize: 1024\n            };\n\n            new pcx.UsdzExporter().build(entity, options).then((arrayBuffer: any) => {\n                const blob = new Blob([arrayBuffer], { type: 'application/octet-stream' });\n\n                // On iPhone Safari, this link creates a clickable AR link on the screen. When this is clicked,\n                // the download of the .asdz file triggers its opening in QuickLook AT mode.\n                // In other browsers, this simply downloads the generated .asdz file.\n\n                // @ts-ignore\n                link.download = \"bench.usdz\";\n\n                // @ts-ignore\n                link.href = URL.createObjectURL(blob);\n            }).catch(console.error);\n\n            // when clicking on the download UI button, trigger the download\n            data.on('download', function () {\n                link.click();\n            });\n\n            // spin the meshe\n            app.on(\"update\", function (dt) {\n                if (entity) {\n                    entity.rotate(0, -12 * dt, 0);\n                }\n            });\n        });\n    });\n}",javaScriptFunction:'function example(canvas, deviceType, pcx, data) {\n    const assets = {\n        helipad: new pc.Asset(\n            "helipad-env-atlas",\n            "texture",\n            { url: "/static/assets/cubemaps/helipad-env-atlas.png" },\n            { type: pc.TEXTURETYPE_RGBP, mipmaps: false }\n        ),\n        bench: new pc.Asset("bench", "container", {\n            url: "/static/assets/models/bench_wooden_01.glb",\n        }),\n    };\n\n    const gfxOptions = {\n        deviceTypes: [deviceType],\n        glslangUrl: "/static/lib/glslang/glslang.js",\n        twgslUrl: "/static/lib/twgsl/twgsl.js",\n    };\n\n    pc.createGraphicsDevice(canvas, gfxOptions).then((device) => {\n        const createOptions = new pc.AppOptions();\n        createOptions.graphicsDevice = device;\n\n        createOptions.componentSystems = [\n            // @ts-ignore\n            pc.RenderComponentSystem,\n            // @ts-ignore\n            pc.CameraComponentSystem,\n            // @ts-ignore\n            pc.LightComponentSystem,\n        ];\n\n        createOptions.resourceHandlers = [\n            // @ts-ignore\n            pc.TextureHandler,\n            // @ts-ignore\n            pc.ContainerHandler,\n        ];\n\n        const app = new pc.AppBase(canvas);\n        app.init(createOptions);\n\n        // Set the canvas to fill the window and automatically change resolution to be the same as the canvas size\n        app.setCanvasFillMode(pc.FILLMODE_FILL_WINDOW);\n        app.setCanvasResolution(pc.RESOLUTION_AUTO);\n\n        const assetListLoader = new pc.AssetListLoader(\n            Object.values(assets),\n            app.assets\n        );\n        assetListLoader.load(() => {\n            app.start();\n\n            // get the instance of the bench and set up with render component\n            const entity = assets.bench.resource.instantiateRenderEntity();\n            app.root.addChild(entity);\n\n            // Create an Entity with a camera component\n            const camera = new pc.Entity();\n            camera.addComponent("camera", {\n                clearColor: new pc.Color(0.2, 0.1, 0.1),\n                farClip: 100,\n            });\n            camera.translate(-3, 1, 2);\n            camera.lookAt(0, 0.5, 0);\n            app.root.addChild(camera);\n\n            // set skybox\n            app.scene.envAtlas = assets.helipad.resource;\n            app.scene.toneMapping = pc.TONEMAP_ACES;\n            app.scene.skyboxMip = 1;\n\n            // a link element, created in the html part of the examples.\n            const link = document.getElementById("ar-link");\n\n            // convert the loaded entity into asdz file\n            const options = {\n                maxTextureSize: 1024,\n            };\n\n            new pcx.UsdzExporter()\n                .build(entity, options)\n                .then((arrayBuffer) => {\n                    const blob = new Blob([arrayBuffer], {\n                        type: "application/octet-stream",\n                    });\n\n                    // On iPhone Safari, this link creates a clickable AR link on the screen. When this is clicked,\n                    // the download of the .asdz file triggers its opening in QuickLook AT mode.\n                    // In other browsers, this simply downloads the generated .asdz file.\n\n                    // @ts-ignore\n                    link.download = "bench.usdz";\n\n                    // @ts-ignore\n                    link.href = URL.createObjectURL(blob);\n                })\n                .catch(console.error);\n\n            // when clicking on the download UI button, trigger the download\n            data.on("download", function () {\n                link.click();\n            });\n\n            // spin the meshe\n            app.on("update", function (dt) {\n                if (entity) {\n                    entity.rotate(0, -12 * dt, 0);\n                }\n            });\n        });\n    });\n}\n',nameSlug:"usdz-export",categorySlug:"loaders"}},misc:{"hello-world":{typeScriptFunction:"function example(canvas: HTMLCanvasElement, deviceType: string): void {\n\n    const gfxOptions = {\n        deviceTypes: [deviceType],\n        glslangUrl: '/static/lib/glslang/glslang.js',\n        twgslUrl: '/static/lib/twgsl/twgsl.js'\n    };\n\n    pc.createGraphicsDevice(canvas, gfxOptions).then((device: pc.GraphicsDevice) => {\n\n        const createOptions = new pc.AppOptions();\n        createOptions.graphicsDevice = device;\n\n        createOptions.componentSystems = [\n            // @ts-ignore\n            pc.RenderComponentSystem,\n            // @ts-ignore\n            pc.CameraComponentSystem,\n            // @ts-ignore\n            pc.LightComponentSystem\n        ];\n        createOptions.resourceHandlers = [\n            // @ts-ignore\n            pc.TextureHandler,\n            // @ts-ignore\n            pc.ContainerHandler\n        ];\n\n        const app = new pc.AppBase(canvas);\n        app.init(createOptions);\n        app.start();\n\n        // Set the canvas to fill the window and automatically change resolution to be the same as the canvas size\n        app.setCanvasFillMode(pc.FILLMODE_FILL_WINDOW);\n        app.setCanvasResolution(pc.RESOLUTION_AUTO);\n\n        // create box entity\n        const box = new pc.Entity('cube');\n        box.addComponent('render', {\n            type: 'box'\n        });\n        app.root.addChild(box);\n\n        // create camera entity\n        const camera = new pc.Entity('camera');\n        camera.addComponent('camera', {\n            clearColor: new pc.Color(0.5, 0.6, 0.9)\n        });\n        app.root.addChild(camera);\n        camera.setPosition(0, 0, 3);\n\n        // create directional light entity\n        const light = new pc.Entity('light');\n        light.addComponent('light');\n        app.root.addChild(light);\n        light.setEulerAngles(45, 0, 0);\n\n        // rotate the box according to the delta time since the last frame\n        app.on('update', (dt: number) => box.rotate(10 * dt, 20 * dt, 30 * dt));\n    });\n}",javaScriptFunction:'function example(canvas, deviceType) {\n    const gfxOptions = {\n        deviceTypes: [deviceType],\n        glslangUrl: "/static/lib/glslang/glslang.js",\n        twgslUrl: "/static/lib/twgsl/twgsl.js",\n    };\n\n    pc.createGraphicsDevice(canvas, gfxOptions).then((device) => {\n        const createOptions = new pc.AppOptions();\n        createOptions.graphicsDevice = device;\n\n        createOptions.componentSystems = [\n            // @ts-ignore\n            pc.RenderComponentSystem,\n            // @ts-ignore\n            pc.CameraComponentSystem,\n            // @ts-ignore\n            pc.LightComponentSystem,\n        ];\n\n        createOptions.resourceHandlers = [\n            // @ts-ignore\n            pc.TextureHandler,\n            // @ts-ignore\n            pc.ContainerHandler,\n        ];\n\n        const app = new pc.AppBase(canvas);\n        app.init(createOptions);\n        app.start();\n\n        // Set the canvas to fill the window and automatically change resolution to be the same as the canvas size\n        app.setCanvasFillMode(pc.FILLMODE_FILL_WINDOW);\n        app.setCanvasResolution(pc.RESOLUTION_AUTO);\n\n        // create box entity\n        const box = new pc.Entity("cube");\n        box.addComponent("render", {\n            type: "box",\n        });\n        app.root.addChild(box);\n\n        // create camera entity\n        const camera = new pc.Entity("camera");\n        camera.addComponent("camera", {\n            clearColor: new pc.Color(0.5, 0.6, 0.9),\n        });\n        app.root.addChild(camera);\n        camera.setPosition(0, 0, 3);\n\n        // create directional light entity\n        const light = new pc.Entity("light");\n        light.addComponent("light");\n        app.root.addChild(light);\n        light.setEulerAngles(45, 0, 0);\n\n        // rotate the box according to the delta time since the last frame\n        app.on("update", (dt) => box.rotate(10 * dt, 20 * dt, 30 * dt));\n    });\n}\n',nameSlug:"hello-world",categorySlug:"misc"},"mini-stats":{typeScriptFunction:'function example(canvas: HTMLCanvasElement, deviceType: string, pcx: any): void {\n    // Create the application and start the update loop\n    const app = new pc.Application(canvas, {});\n    app.start();\n\n    // Set the canvas to fill the window and automatically change resolution to be the same as the canvas size\n    app.setCanvasFillMode(pc.FILLMODE_FILL_WINDOW);\n    app.setCanvasResolution(pc.RESOLUTION_AUTO);\n\n    window.addEventListener("resize", function () {\n        app.resizeCanvas(canvas.width, canvas.height);\n    });\n\n    // set up options for mini-stats, start with the default options\n    const options = pcx.MiniStats.getDefaultOptions();\n\n    // configure sizes\n    options.sizes = [\n        { width: 128, height: 16, spacing: 0, graphs: false },\n        { width: 256, height: 32, spacing: 2, graphs: true },\n        { width: 500, height: 64, spacing: 2, graphs: true }\n    ];\n\n    // when the application starts, use the largest size\n    options.startSizeIndex = 2;\n\n    // display additional counters\n    // Note: for most of these to report values, either debug or profiling engine build needs to be used.\n    options.stats = [\n\n        // frame update time in ms\n        {\n            name: "Update",\n            stats: ["frame.updateTime"],\n            decimalPlaces: 1,\n            unitsName: "ms",\n            watermark: 33\n        },\n\n        // total number of draw calls\n        {\n            name: "DrawCalls",\n            stats: ["drawCalls.total"],\n            watermark: 2000\n        },\n\n        // total number of triangles, in 1000s\n        {\n            name: "triCount",\n            stats: ["frame.triangles"],\n            decimalPlaces: 1,\n            multiplier: 1 / 1000,\n            unitsName: "k",\n            watermark: 500\n        },\n\n        // number of materials used in a frame\n        {\n            name: "materials",\n            stats: ["frame.materials"],\n            watermark: 2000\n        },\n\n        // frame time it took to do frustum culling\n        {\n            name: "cull",\n            stats: ["frame.cullTime"],\n            decimalPlaces: 1,\n            watermark: 1,\n            unitsName: "ms"\n        },\n\n        // used VRAM, displayed using 2 colors - red for textures, green for geometry\n        {\n            name: "VRAM",\n            stats: ["vram.tex", "vram.geom"],\n            decimalPlaces: 1,\n            multiplier: 1 / (1024 * 1024),\n            unitsName: "MB",\n            watermark: 100\n        },\n\n        // frames per second\n        {\n            name: "FPS",\n            stats: ["frame.fps"],\n            watermark: 60\n        },\n\n        // delta time\n        {\n            name: "Frame",\n            stats: ["frame.ms"],\n            decimalPlaces: 1,\n            unitsName: "ms",\n            watermark: 33\n        }\n    ];\n\n    // create mini-stats system\n    const miniStats = new pcx.MiniStats(app, options);\n\n    // add directional lights to the scene\n    const light = new pc.Entity();\n    light.addComponent("light", {\n        type: "directional"\n    });\n    app.root.addChild(light);\n    light.setLocalEulerAngles(45, 30, 0);\n\n    // Create an entity with a camera component\n    const camera = new pc.Entity();\n    camera.addComponent("camera", {\n        clearColor: new pc.Color(0.1, 0.1, 0.1)\n    });\n    app.root.addChild(camera);\n    camera.setLocalPosition(20, 10, 10);\n    camera.lookAt(pc.Vec3.ZERO);\n\n    // helper function to create a primitive with shape type, position, scale\n    function createPrimitive(primitiveType: string, position: number | pc.Vec3, scale: number | pc.Vec3) {\n        // create material of random color\n        const material = new pc.StandardMaterial();\n        material.diffuse = new pc.Color(Math.random(), Math.random(), Math.random());\n        material.update();\n\n        // create primitive\n        const primitive = new pc.Entity();\n        primitive.addComponent(\'model\', {\n            type: primitiveType\n        });\n        primitive.model.material = material;\n\n        // set position and scale\n        primitive.setLocalPosition(position);\n        primitive.setLocalScale(scale);\n\n        return primitive;\n    }\n\n    // list of all created engine resources\n    const entities: any[] = [];\n    const vertexBuffers: any[] = [];\n    const textures: any[] = [];\n\n    // update function called every frame\n    let adding = true;\n    const step = 10, max = 2000;\n    let entity: pc.GraphNode, vertexBuffer: pc.VertexBuffer, texture: { destroy: () => void; };\n    app.on("update", function () {\n\n        // execute some tasks multiple times per frame\n        for (let i = 0; i < step; i++) {\n\n            // allocating resources\n            if (adding) {\n\n                // add entity (they used shared geometry internally, and we create individual material for each)\n                const shape = Math.random() < 0.5 ? "box" : "sphere";\n                const position = new pc.Vec3(Math.random() * 10, Math.random() * 10, Math.random() * 10);\n                const scale = 0.5 + Math.random();\n                entity = createPrimitive(shape, position, new pc.Vec3(scale, scale, scale));\n                entities.push(entity);\n                app.root.addChild(entity);\n\n                // if allocation reached the max limit, switch to removing mode\n                if (entities.length >= max) {\n                    adding = false;\n                }\n\n                // add vertex buffer\n                const vertexCount = 500;\n                const data = new Float32Array(vertexCount * 16);\n                vertexBuffer = new pc.VertexBuffer(app.graphicsDevice, pc.VertexFormat.getDefaultInstancingFormat(app.graphicsDevice),\n                                                   vertexCount, pc.BUFFER_STATIC, data);\n                vertexBuffers.push(vertexBuffer);\n\n                // allocate texture\n                const texture = new pc.Texture(app.graphicsDevice, {\n                    width: 64,\n                    height: 64,\n                    format: pc.PIXELFORMAT_RGB8,\n                    mipmaps: false\n                });\n                textures.push(texture);\n\n                // ensure texture is uploaded (actual VRAM is allocated)\n                texture.lock();\n                texture.unlock();\n                // @ts-ignore engine-tsd\n                app.graphicsDevice.setTexture(texture, 0);\n\n            } else {    // de-allocating resources\n\n                if (entities.length > 0) {\n\n                    // destroy entities\n                    entity = entities[entities.length - 1];\n                    // @ts-ignore engine-tsd\n                    entity.destroy();\n                    entities.length--;\n\n                    // destroy vertex buffer\n                    vertexBuffer = vertexBuffers[vertexBuffers.length - 1];\n                    vertexBuffer.destroy();\n                    vertexBuffers.length--;\n\n                    // destroy texture\n                    texture = textures[textures.length - 1];\n                    texture.destroy();\n                    textures.length--;\n                } else {\n                    adding = true;\n                }\n            }\n        }\n    });\n}',javaScriptFunction:'function example(canvas, deviceType, pcx) {\n    // Create the application and start the update loop\n    const app = new pc.Application(canvas, {});\n    app.start();\n\n    // Set the canvas to fill the window and automatically change resolution to be the same as the canvas size\n    app.setCanvasFillMode(pc.FILLMODE_FILL_WINDOW);\n    app.setCanvasResolution(pc.RESOLUTION_AUTO);\n\n    window.addEventListener("resize", function () {\n        app.resizeCanvas(canvas.width, canvas.height);\n    });\n\n    // set up options for mini-stats, start with the default options\n    const options = pcx.MiniStats.getDefaultOptions();\n\n    // configure sizes\n    options.sizes = [\n        { width: 128, height: 16, spacing: 0, graphs: false },\n        { width: 256, height: 32, spacing: 2, graphs: true },\n        { width: 500, height: 64, spacing: 2, graphs: true },\n    ];\n\n    // when the application starts, use the largest size\n    options.startSizeIndex = 2;\n\n    // display additional counters\n    // Note: for most of these to report values, either debug or profiling engine build needs to be used.\n    options.stats = [\n        // frame update time in ms\n        {\n            name: "Update",\n            stats: ["frame.updateTime"],\n            decimalPlaces: 1,\n            unitsName: "ms",\n            watermark: 33,\n        },\n\n        // total number of draw calls\n        {\n            name: "DrawCalls",\n            stats: ["drawCalls.total"],\n            watermark: 2000,\n        },\n\n        // total number of triangles, in 1000s\n        {\n            name: "triCount",\n            stats: ["frame.triangles"],\n            decimalPlaces: 1,\n            multiplier: 1 / 1000,\n            unitsName: "k",\n            watermark: 500,\n        },\n\n        // number of materials used in a frame\n        {\n            name: "materials",\n            stats: ["frame.materials"],\n            watermark: 2000,\n        },\n\n        // frame time it took to do frustum culling\n        {\n            name: "cull",\n            stats: ["frame.cullTime"],\n            decimalPlaces: 1,\n            watermark: 1,\n            unitsName: "ms",\n        },\n\n        // used VRAM, displayed using 2 colors - red for textures, green for geometry\n        {\n            name: "VRAM",\n            stats: ["vram.tex", "vram.geom"],\n            decimalPlaces: 1,\n            multiplier: 1 / (1024 * 1024),\n            unitsName: "MB",\n            watermark: 100,\n        },\n\n        // frames per second\n        {\n            name: "FPS",\n            stats: ["frame.fps"],\n            watermark: 60,\n        },\n\n        // delta time\n        {\n            name: "Frame",\n            stats: ["frame.ms"],\n            decimalPlaces: 1,\n            unitsName: "ms",\n            watermark: 33,\n        },\n    ];\n\n    // create mini-stats system\n    const miniStats = new pcx.MiniStats(app, options);\n\n    // add directional lights to the scene\n    const light = new pc.Entity();\n    light.addComponent("light", {\n        type: "directional",\n    });\n    app.root.addChild(light);\n    light.setLocalEulerAngles(45, 30, 0);\n\n    // Create an entity with a camera component\n    const camera = new pc.Entity();\n    camera.addComponent("camera", {\n        clearColor: new pc.Color(0.1, 0.1, 0.1),\n    });\n    app.root.addChild(camera);\n    camera.setLocalPosition(20, 10, 10);\n    camera.lookAt(pc.Vec3.ZERO);\n\n    // helper function to create a primitive with shape type, position, scale\n    function createPrimitive(primitiveType, position, scale) {\n        // create material of random color\n        const material = new pc.StandardMaterial();\n        material.diffuse = new pc.Color(\n            Math.random(),\n            Math.random(),\n            Math.random()\n        );\n        material.update();\n\n        // create primitive\n        const primitive = new pc.Entity();\n        primitive.addComponent("model", {\n            type: primitiveType,\n        });\n        primitive.model.material = material;\n\n        // set position and scale\n        primitive.setLocalPosition(position);\n        primitive.setLocalScale(scale);\n\n        return primitive;\n    }\n\n    // list of all created engine resources\n    const entities = [];\n    const vertexBuffers = [];\n    const textures = [];\n\n    // update function called every frame\n    let adding = true;\n    const step = 10,\n        max = 2000;\n    let entity, vertexBuffer, texture;\n    app.on("update", function () {\n        // execute some tasks multiple times per frame\n        for (let i = 0; i < step; i++) {\n            // allocating resources\n            if (adding) {\n                // add entity (they used shared geometry internally, and we create individual material for each)\n                const shape = Math.random() < 0.5 ? "box" : "sphere";\n                const position = new pc.Vec3(\n                    Math.random() * 10,\n                    Math.random() * 10,\n                    Math.random() * 10\n                );\n                const scale = 0.5 + Math.random();\n                entity = createPrimitive(\n                    shape,\n                    position,\n                    new pc.Vec3(scale, scale, scale)\n                );\n                entities.push(entity);\n                app.root.addChild(entity);\n\n                // if allocation reached the max limit, switch to removing mode\n                if (entities.length >= max) {\n                    adding = false;\n                }\n\n                // add vertex buffer\n                const vertexCount = 500;\n                const data = new Float32Array(vertexCount * 16);\n                vertexBuffer = new pc.VertexBuffer(\n                    app.graphicsDevice,\n                    pc.VertexFormat.getDefaultInstancingFormat(\n                        app.graphicsDevice\n                    ),\n                    vertexCount,\n                    pc.BUFFER_STATIC,\n                    data\n                );\n                vertexBuffers.push(vertexBuffer);\n\n                // allocate texture\n                const texture = new pc.Texture(app.graphicsDevice, {\n                    width: 64,\n                    height: 64,\n                    format: pc.PIXELFORMAT_RGB8,\n                    mipmaps: false,\n                });\n                textures.push(texture);\n\n                // ensure texture is uploaded (actual VRAM is allocated)\n                texture.lock();\n                texture.unlock();\n                // @ts-ignore engine-tsd\n                app.graphicsDevice.setTexture(texture, 0);\n            } else {\n                // de-allocating resources\n\n                if (entities.length > 0) {\n                    // destroy entities\n                    entity = entities[entities.length - 1];\n                    // @ts-ignore engine-tsd\n                    entity.destroy();\n                    entities.length--;\n\n                    // destroy vertex buffer\n                    vertexBuffer = vertexBuffers[vertexBuffers.length - 1];\n                    vertexBuffer.destroy();\n                    vertexBuffers.length--;\n\n                    // destroy texture\n                    texture = textures[textures.length - 1];\n                    texture.destroy();\n                    textures.length--;\n                } else {\n                    adding = true;\n                }\n            }\n        }\n    });\n}\n',nameSlug:"mini-stats",categorySlug:"misc"},spineboy:{typeScriptFunction:"function example(canvas: HTMLCanvasElement, deviceType: string): void {\n\n    const assets = {\n        'skeleton': new pc.Asset('skeleton', 'json', { url: '/static/assets/spine/spineboy-pro.json' }),\n        'atlas': new pc.Asset('atlas', 'text', { url: '/static/assets/spine/spineboy-pro.atlas' }),\n        'texture': new pc.Asset('spineboy-pro.png', 'texture', { url: '/static/assets/spine/spineboy-pro.png' }),\n        'spinescript': new pc.Asset('spinescript', 'script', { url: '/static/scripts/spine/playcanvas-spine.3.8.js' })\n    };\n\n    const gfxOptions = {\n        deviceTypes: [deviceType],\n        glslangUrl: '/static/lib/glslang/glslang.js',\n        twgslUrl: '/static/lib/twgsl/twgsl.js'\n    };\n\n    pc.createGraphicsDevice(canvas, gfxOptions).then((device: pc.GraphicsDevice) => {\n\n        const createOptions = new pc.AppOptions();\n        createOptions.graphicsDevice = device;\n\n        createOptions.componentSystems = [\n            // @ts-ignore\n            pc.CameraComponentSystem,\n            // @ts-ignore\n            pc.ScriptComponentSystem\n        ];\n        createOptions.resourceHandlers = [\n            // @ts-ignore\n            pc.TextureHandler,\n            // @ts-ignore\n            pc.ScriptHandler,\n            // @ts-ignore\n            pc.JsonHandler,\n            // @ts-ignore\n            pc.TextHandler\n        ];\n\n        const app = new pc.AppBase(canvas);\n        app.init(createOptions);\n\n        // Set the canvas to fill the window and automatically change resolution to be the same as the canvas size\n        app.setCanvasFillMode(pc.FILLMODE_FILL_WINDOW);\n        app.setCanvasResolution(pc.RESOLUTION_AUTO);\n\n        const assetListLoader = new pc.AssetListLoader(Object.values(assets), app.assets);\n        assetListLoader.load(() => {\n\n            app.start();\n\n            // create camera entity\n            const camera = new pc.Entity('camera');\n            camera.addComponent('camera', {\n                clearColor: new pc.Color(0.5, 0.6, 0.9)\n            });\n            app.root.addChild(camera);\n            camera.translateLocal(0, 7, 20);\n\n            const createSpineInstance = (position: pc.Vec3, scale: pc.Vec3, timeScale: number) => {\n\n                const spineEntity = new pc.Entity();\n                spineEntity.addComponent(\"spine\", {\n                    atlasAsset: assets.atlas.id,\n                    skeletonAsset: assets.skeleton.id,\n                    textureAssets: [assets.texture.id]\n                });\n                spineEntity.setLocalPosition(position);\n                spineEntity.setLocalScale(scale);\n                app.root.addChild(spineEntity);\n\n                // play spine animation\n                // @ts-ignore\n                spineEntity.spine.state.setAnimation(0, \"portal\", true);\n\n                // @ts-ignore\n                spineEntity.spine.state.timeScale = timeScale;\n            };\n\n            // create spine entity 1\n            createSpineInstance(new pc.Vec3(2, 2, 0), new pc.Vec3(1, 1, 1), 1);\n\n            // create spine entity 2\n            createSpineInstance(new pc.Vec3(2, 10, 0), new pc.Vec3(-0.5, 0.5, 0.5), 0.5);\n        });\n    });\n}",javaScriptFunction:'function example(canvas, deviceType) {\n    const assets = {\n        skeleton: new pc.Asset("skeleton", "json", {\n            url: "/static/assets/spine/spineboy-pro.json",\n        }),\n        atlas: new pc.Asset("atlas", "text", {\n            url: "/static/assets/spine/spineboy-pro.atlas",\n        }),\n        texture: new pc.Asset("spineboy-pro.png", "texture", {\n            url: "/static/assets/spine/spineboy-pro.png",\n        }),\n        spinescript: new pc.Asset("spinescript", "script", {\n            url: "/static/scripts/spine/playcanvas-spine.3.8.js",\n        }),\n    };\n\n    const gfxOptions = {\n        deviceTypes: [deviceType],\n        glslangUrl: "/static/lib/glslang/glslang.js",\n        twgslUrl: "/static/lib/twgsl/twgsl.js",\n    };\n\n    pc.createGraphicsDevice(canvas, gfxOptions).then((device) => {\n        const createOptions = new pc.AppOptions();\n        createOptions.graphicsDevice = device;\n\n        createOptions.componentSystems = [\n            // @ts-ignore\n            pc.CameraComponentSystem,\n            // @ts-ignore\n            pc.ScriptComponentSystem,\n        ];\n\n        createOptions.resourceHandlers = [\n            // @ts-ignore\n            pc.TextureHandler,\n            // @ts-ignore\n            pc.ScriptHandler,\n            // @ts-ignore\n            pc.JsonHandler,\n            // @ts-ignore\n            pc.TextHandler,\n        ];\n\n        const app = new pc.AppBase(canvas);\n        app.init(createOptions);\n\n        // Set the canvas to fill the window and automatically change resolution to be the same as the canvas size\n        app.setCanvasFillMode(pc.FILLMODE_FILL_WINDOW);\n        app.setCanvasResolution(pc.RESOLUTION_AUTO);\n\n        const assetListLoader = new pc.AssetListLoader(\n            Object.values(assets),\n            app.assets\n        );\n        assetListLoader.load(() => {\n            app.start();\n\n            // create camera entity\n            const camera = new pc.Entity("camera");\n            camera.addComponent("camera", {\n                clearColor: new pc.Color(0.5, 0.6, 0.9),\n            });\n            app.root.addChild(camera);\n            camera.translateLocal(0, 7, 20);\n\n            const createSpineInstance = (position, scale, timeScale) => {\n                const spineEntity = new pc.Entity();\n                spineEntity.addComponent("spine", {\n                    atlasAsset: assets.atlas.id,\n                    skeletonAsset: assets.skeleton.id,\n                    textureAssets: [assets.texture.id],\n                });\n                spineEntity.setLocalPosition(position);\n                spineEntity.setLocalScale(scale);\n                app.root.addChild(spineEntity);\n\n                // play spine animation\n                // @ts-ignore\n                spineEntity.spine.state.setAnimation(0, "portal", true);\n\n                // @ts-ignore\n                spineEntity.spine.state.timeScale = timeScale;\n            };\n\n            // create spine entity 1\n            createSpineInstance(new pc.Vec3(2, 2, 0), new pc.Vec3(1, 1, 1), 1);\n\n            // create spine entity 2\n            createSpineInstance(\n                new pc.Vec3(2, 10, 0),\n                new pc.Vec3(-0.5, 0.5, 0.5),\n                0.5\n            );\n        });\n    });\n}\n',nameSlug:"spineboy",categorySlug:"misc"}},physics:{"compound-collision":{typeScriptFunction:"function example(canvas: HTMLCanvasElement, deviceType: string): void {\n\n    pc.WasmModule.setConfig('Ammo', {\n        glueUrl: '/static/lib/ammo/ammo.wasm.js',\n        wasmUrl: '/static/lib/ammo/ammo.wasm.wasm',\n        fallbackUrl: '/static/lib/ammo/ammo.js'\n    });\n\n    pc.WasmModule.getInstance('Ammo', demo);\n\n    function demo() {\n\n        const gfxOptions = {\n            deviceTypes: [deviceType],\n            glslangUrl: '/static/lib/glslang/glslang.js',\n            twgslUrl: '/static/lib/twgsl/twgsl.js'\n        };\n\n        pc.createGraphicsDevice(canvas, gfxOptions).then((device: pc.GraphicsDevice) => {\n\n            const createOptions = new pc.AppOptions();\n            createOptions.graphicsDevice = device;\n            createOptions.keyboard = new pc.Keyboard(document.body);\n\n            createOptions.componentSystems = [\n                // @ts-ignore\n                pc.RenderComponentSystem,\n                // @ts-ignore\n                pc.CameraComponentSystem,\n                // @ts-ignore\n                pc.LightComponentSystem,\n                // @ts-ignore\n                pc.ScriptComponentSystem,\n                // @ts-ignore\n                pc.CollisionComponentSystem,\n                // @ts-ignore\n                pc.RigidBodyComponentSystem,\n                // @ts-ignore\n                pc.ElementComponentSystem\n            ];\n            createOptions.resourceHandlers = [\n                // @ts-ignore\n                pc.TextureHandler,\n                // @ts-ignore\n                pc.ContainerHandler,\n                // @ts-ignore\n                pc.ScriptHandler,\n                // @ts-ignore\n                pc.JsonHandler,\n                // @ts-ignore\n                pc.FontHandler\n            ];\n\n            const app = new pc.AppBase(canvas);\n            app.init(createOptions);\n            app.start();\n\n            // Set the canvas to fill the window and automatically change resolution to be the same as the canvas size\n            app.setCanvasFillMode(pc.FILLMODE_FILL_WINDOW);\n            app.setCanvasResolution(pc.RESOLUTION_AUTO);\n\n            app.scene.ambientLight = new pc.Color(0.2, 0.2, 0.2);\n\n            function createMaterial(color: pc.Color) {\n                const material = new pc.StandardMaterial();\n                material.diffuse = color;\n                material.update();\n\n                return material;\n            }\n\n            // Create a couple of materials for our objects\n            const red = createMaterial(new pc.Color(0.7, 0.3, 0.3));\n            const gray = createMaterial(new pc.Color(0.7, 0.7, 0.7));\n\n            // Define a scene hierarchy in JSON format. This is loaded/parsed in\n            // the parseScene function below\n            const scene = [\n                {\n                    // The Chair entity has a collision component of type 'compound' and a\n                    // rigidbody component. This means that any descendent entity with a\n                    // collision component is added to a compound collision shape on the\n                    // Chair entity. You can use compound collision shapes to define\n                    // complex, rigid shapes.\n                    name: 'Chair',\n                    pos: [0, 1, 0],\n                    components: [\n                        {\n                            type: 'collision',\n                            options: {\n                                type: 'compound'\n                            }\n                        }, {\n                            type: 'rigidbody',\n                            options: {\n                                type: 'dynamic',\n                                friction: 0.5,\n                                mass: 10,\n                                restitution: 0.5\n                            }\n                        }\n                    ],\n                    children: [\n                        {\n                            name: 'Seat',\n                            components: [\n                                {\n                                    type: 'collision',\n                                    options: {\n                                        type: 'box',\n                                        halfExtents: [0.25, 0.025, 0.25]\n                                    }\n                                }\n                            ],\n                            children: [\n                                {\n                                    name: 'Seat Model',\n                                    scl: [0.5, 0.05, 0.5],\n                                    components: [\n                                        {\n                                            type: 'render',\n                                            options: {\n                                                type: 'box',\n                                                material: gray\n                                            }\n                                        }\n                                    ]\n                                }\n                            ]\n                        }, {\n                            name: 'Seat Back',\n                            pos: [0, 0.3, -0.2],\n                            components: [\n                                {\n                                    type: 'collision',\n                                    options: {\n                                        type: 'box',\n                                        halfExtents: [0.25, 0.2, 0.025]\n                                    }\n                                }\n                            ],\n                            children: [\n                                {\n                                    name: 'Seat Back Model',\n                                    scl: [0.5, 0.4, 0.05],\n                                    components: [\n                                        {\n                                            type: 'render',\n                                            options: {\n                                                type: 'box',\n                                                material: gray\n                                            }\n                                        }\n                                    ]\n                                }\n                            ]\n                        }, {\n                            name: 'Leg 1',\n                            pos: [0.2, -0.25, 0.2],\n                            components: [\n                                {\n                                    type: 'collision',\n                                    options: {\n                                        type: 'cylinder',\n                                        height: 0.5,\n                                        radius: 0.025\n                                    }\n                                }\n                            ],\n                            children: [\n                                {\n                                    name: 'Leg 1 Model',\n                                    scl: [0.05, 0.5, 0.05],\n                                    components: [\n                                        {\n                                            type: 'render',\n                                            options: {\n                                                type: 'cylinder',\n                                                material: gray\n                                            }\n                                        }\n                                    ]\n                                }\n                            ]\n                        }, {\n                            name: 'Leg 2',\n                            pos: [-0.2, -0.25, 0.2],\n                            components: [\n                                {\n                                    type: 'collision',\n                                    options: {\n                                        type: 'cylinder',\n                                        height: 0.5,\n                                        radius: 0.025\n                                    }\n                                }\n                            ],\n                            children: [\n                                {\n                                    name: 'Leg 2 Model',\n                                    scl: [0.05, 0.5, 0.05],\n                                    components: [\n                                        {\n                                            type: 'render',\n                                            options: {\n                                                type: 'cylinder',\n                                                material: gray\n                                            }\n                                        }\n                                    ]\n                                }\n                            ]\n                        }, {\n                            name: 'Leg 3',\n                            pos: [0.2, 0, -0.2],\n                            components: [\n                                {\n                                    type: 'collision',\n                                    options: {\n                                        type: 'cylinder',\n                                        height: 1,\n                                        radius: 0.025\n                                    }\n                                }\n                            ],\n                            children: [\n                                {\n                                    name: 'Leg 3 Model',\n                                    scl: [0.05, 1, 0.05],\n                                    components: [\n                                        {\n                                            type: 'render',\n                                            options: {\n                                                type: 'cylinder',\n                                                material: gray\n                                            }\n                                        }\n                                    ]\n                                }\n                            ]\n                        }, {\n                            name: 'Leg 4',\n                            pos: [-0.2, 0, -0.2],\n                            components: [\n                                {\n                                    type: 'collision',\n                                    options: {\n                                        type: 'cylinder',\n                                        height: 1,\n                                        radius: 0.025\n                                    }\n                                }\n                            ],\n                            children: [\n                                {\n                                    name: 'Leg 4 Model',\n                                    scl: [0.05, 1, 0.05],\n                                    components: [\n                                        {\n                                            type: 'render',\n                                            options: {\n                                                type: 'cylinder',\n                                                material: gray\n                                            }\n                                        }\n                                    ]\n                                }\n                            ]\n                        }\n                    ]\n                }, {\n                    name: 'Ground',\n                    pos: [0, -0.5, 0],\n                    components: [\n                        {\n                            type: 'collision',\n                            options: {\n                                type: 'box',\n                                halfExtents: [5, 0.5, 5]\n                            }\n                        }, {\n                            type: 'rigidbody',\n                            options: {\n                                type: 'static',\n                                restitution: 0.5\n                            }\n                        }\n                    ],\n                    children: [\n                        {\n                            name: 'Ground Model',\n                            scl: [10, 1, 10],\n                            components: [\n                                {\n                                    type: 'render',\n                                    options: {\n                                        type: 'box',\n                                        material: gray\n                                    }\n                                }\n                            ]\n                        }\n                    ]\n                }, {\n                    name: 'Directional Light',\n                    rot: [45, 130, 0],\n                    components: [\n                        {\n                            type: 'light',\n                            options: {\n                                type: 'directional',\n                                castShadows: true,\n                                shadowDistance: 8,\n                                shadowBias: 0.1,\n                                intensity: 1,\n                                normalOffsetBias: 0.05\n                            }\n                        }\n                    ]\n                }, {\n                    name: 'Camera',\n                    pos: [0, 4, 7],\n                    rot: [-30, 0, 0],\n                    components: [\n                        {\n                            type: 'camera',\n                            options: {\n                                color: [0.5, 0.5, 0.5]\n                            }\n                        }\n                    ]\n                }\n            ];\n\n            // Convert an entity definition in the structure above to a pc.Entity object\n            function parseEntity(e: any) {\n                const entity = new pc.Entity(e.name);\n\n                if (e.pos) {\n                    entity.setLocalPosition(e.pos[0], e.pos[1], e.pos[2]);\n                }\n                if (e.rot) {\n                    entity.setLocalEulerAngles(e.rot[0], e.rot[1], e.rot[2]);\n                }\n                if (e.scl) {\n                    entity.setLocalScale(e.scl[0], e.scl[1], e.scl[2]);\n                }\n\n                if (e.components) {\n                    e.components.forEach(function (c: any) {\n                        entity.addComponent(c.type, c.options);\n                    });\n                }\n\n                if (e.children) {\n                    e.children.forEach(function (child: pc.Entity) {\n                        entity.addChild(parseEntity(child));\n                    });\n                }\n\n                return entity;\n            }\n\n            // Parse the scene data above into entities and add them to the scene's root entity\n            function parseScene(s: any) {\n                s.forEach(function (e: any) {\n                    app.root.addChild(parseEntity(e));\n                });\n            }\n\n            parseScene(scene);\n\n            let numChairs = 0;\n\n            // Clone the chair entity hierarchy and add it to the scene root\n            function spawnChair() {\n                const chair: pc.Entity = app.root.findByName('Chair') as pc.Entity;\n                const clone = chair.clone();\n                clone.setLocalPosition(Math.random() * 1 - 0.5, Math.random() * 2 + 1, Math.random() * 1 - 0.5);\n                app.root.addChild(clone);\n                numChairs++;\n            }\n\n            // Set an update function on the application's update event\n            let time = 0;\n            app.on(\"update\", function (dt) {\n                // Add a new chair every 250 ms\n                time += dt;\n                if (time > 0.25 && numChairs < 20) {\n                    spawnChair();\n                    time = 0;\n                }\n\n                // Show active bodies in red and frozen bodies in gray\n                app.root.findComponents('rigidbody').forEach(function (body: pc.RigidBodyComponent) {\n                    body.entity.findComponents('render').forEach(function (render: pc.RenderComponent) {\n                        render.material = body.isActive() ? red : gray;\n                    });\n                });\n            });\n        });\n    }\n}",javaScriptFunction:'function example(canvas, deviceType) {\n    pc.WasmModule.setConfig("Ammo", {\n        glueUrl: "/static/lib/ammo/ammo.wasm.js",\n        wasmUrl: "/static/lib/ammo/ammo.wasm.wasm",\n        fallbackUrl: "/static/lib/ammo/ammo.js",\n    });\n\n    pc.WasmModule.getInstance("Ammo", demo);\n\n    function demo() {\n        const gfxOptions = {\n            deviceTypes: [deviceType],\n            glslangUrl: "/static/lib/glslang/glslang.js",\n            twgslUrl: "/static/lib/twgsl/twgsl.js",\n        };\n\n        pc.createGraphicsDevice(canvas, gfxOptions).then((device) => {\n            const createOptions = new pc.AppOptions();\n            createOptions.graphicsDevice = device;\n            createOptions.keyboard = new pc.Keyboard(document.body);\n\n            createOptions.componentSystems = [\n                // @ts-ignore\n                pc.RenderComponentSystem,\n                // @ts-ignore\n                pc.CameraComponentSystem,\n                // @ts-ignore\n                pc.LightComponentSystem,\n                // @ts-ignore\n                pc.ScriptComponentSystem,\n                // @ts-ignore\n                pc.CollisionComponentSystem,\n                // @ts-ignore\n                pc.RigidBodyComponentSystem,\n                // @ts-ignore\n                pc.ElementComponentSystem,\n            ];\n\n            createOptions.resourceHandlers = [\n                // @ts-ignore\n                pc.TextureHandler,\n                // @ts-ignore\n                pc.ContainerHandler,\n                // @ts-ignore\n                pc.ScriptHandler,\n                // @ts-ignore\n                pc.JsonHandler,\n                // @ts-ignore\n                pc.FontHandler,\n            ];\n\n            const app = new pc.AppBase(canvas);\n            app.init(createOptions);\n            app.start();\n\n            // Set the canvas to fill the window and automatically change resolution to be the same as the canvas size\n            app.setCanvasFillMode(pc.FILLMODE_FILL_WINDOW);\n            app.setCanvasResolution(pc.RESOLUTION_AUTO);\n\n            app.scene.ambientLight = new pc.Color(0.2, 0.2, 0.2);\n\n            function createMaterial(color) {\n                const material = new pc.StandardMaterial();\n                material.diffuse = color;\n                material.update();\n\n                return material;\n            }\n\n            // Create a couple of materials for our objects\n            const red = createMaterial(new pc.Color(0.7, 0.3, 0.3));\n            const gray = createMaterial(new pc.Color(0.7, 0.7, 0.7));\n\n            // Define a scene hierarchy in JSON format. This is loaded/parsed in\n            // the parseScene function below\n            const scene = [\n                {\n                    // The Chair entity has a collision component of type \'compound\' and a\n                    // rigidbody component. This means that any descendent entity with a\n                    // collision component is added to a compound collision shape on the\n                    // Chair entity. You can use compound collision shapes to define\n                    // complex, rigid shapes.\n                    name: "Chair",\n                    pos: [0, 1, 0],\n                    components: [\n                        {\n                            type: "collision",\n                            options: {\n                                type: "compound",\n                            },\n                        },\n                        {\n                            type: "rigidbody",\n                            options: {\n                                type: "dynamic",\n                                friction: 0.5,\n                                mass: 10,\n                                restitution: 0.5,\n                            },\n                        },\n                    ],\n\n                    children: [\n                        {\n                            name: "Seat",\n                            components: [\n                                {\n                                    type: "collision",\n                                    options: {\n                                        type: "box",\n                                        halfExtents: [0.25, 0.025, 0.25],\n                                    },\n                                },\n                            ],\n\n                            children: [\n                                {\n                                    name: "Seat Model",\n                                    scl: [0.5, 0.05, 0.5],\n                                    components: [\n                                        {\n                                            type: "render",\n                                            options: {\n                                                type: "box",\n                                                material: gray,\n                                            },\n                                        },\n                                    ],\n                                },\n                            ],\n                        },\n                        {\n                            name: "Seat Back",\n                            pos: [0, 0.3, -0.2],\n                            components: [\n                                {\n                                    type: "collision",\n                                    options: {\n                                        type: "box",\n                                        halfExtents: [0.25, 0.2, 0.025],\n                                    },\n                                },\n                            ],\n\n                            children: [\n                                {\n                                    name: "Seat Back Model",\n                                    scl: [0.5, 0.4, 0.05],\n                                    components: [\n                                        {\n                                            type: "render",\n                                            options: {\n                                                type: "box",\n                                                material: gray,\n                                            },\n                                        },\n                                    ],\n                                },\n                            ],\n                        },\n                        {\n                            name: "Leg 1",\n                            pos: [0.2, -0.25, 0.2],\n                            components: [\n                                {\n                                    type: "collision",\n                                    options: {\n                                        type: "cylinder",\n                                        height: 0.5,\n                                        radius: 0.025,\n                                    },\n                                },\n                            ],\n\n                            children: [\n                                {\n                                    name: "Leg 1 Model",\n                                    scl: [0.05, 0.5, 0.05],\n                                    components: [\n                                        {\n                                            type: "render",\n                                            options: {\n                                                type: "cylinder",\n                                                material: gray,\n                                            },\n                                        },\n                                    ],\n                                },\n                            ],\n                        },\n                        {\n                            name: "Leg 2",\n                            pos: [-0.2, -0.25, 0.2],\n                            components: [\n                                {\n                                    type: "collision",\n                                    options: {\n                                        type: "cylinder",\n                                        height: 0.5,\n                                        radius: 0.025,\n                                    },\n                                },\n                            ],\n\n                            children: [\n                                {\n                                    name: "Leg 2 Model",\n                                    scl: [0.05, 0.5, 0.05],\n                                    components: [\n                                        {\n                                            type: "render",\n                                            options: {\n                                                type: "cylinder",\n                                                material: gray,\n                                            },\n                                        },\n                                    ],\n                                },\n                            ],\n                        },\n                        {\n                            name: "Leg 3",\n                            pos: [0.2, 0, -0.2],\n                            components: [\n                                {\n                                    type: "collision",\n                                    options: {\n                                        type: "cylinder",\n                                        height: 1,\n                                        radius: 0.025,\n                                    },\n                                },\n                            ],\n\n                            children: [\n                                {\n                                    name: "Leg 3 Model",\n                                    scl: [0.05, 1, 0.05],\n                                    components: [\n                                        {\n                                            type: "render",\n                                            options: {\n                                                type: "cylinder",\n                                                material: gray,\n                                            },\n                                        },\n                                    ],\n                                },\n                            ],\n                        },\n                        {\n                            name: "Leg 4",\n                            pos: [-0.2, 0, -0.2],\n                            components: [\n                                {\n                                    type: "collision",\n                                    options: {\n                                        type: "cylinder",\n                                        height: 1,\n                                        radius: 0.025,\n                                    },\n                                },\n                            ],\n\n                            children: [\n                                {\n                                    name: "Leg 4 Model",\n                                    scl: [0.05, 1, 0.05],\n                                    components: [\n                                        {\n                                            type: "render",\n                                            options: {\n                                                type: "cylinder",\n                                                material: gray,\n                                            },\n                                        },\n                                    ],\n                                },\n                            ],\n                        },\n                    ],\n                },\n                {\n                    name: "Ground",\n                    pos: [0, -0.5, 0],\n                    components: [\n                        {\n                            type: "collision",\n                            options: {\n                                type: "box",\n                                halfExtents: [5, 0.5, 5],\n                            },\n                        },\n                        {\n                            type: "rigidbody",\n                            options: {\n                                type: "static",\n                                restitution: 0.5,\n                            },\n                        },\n                    ],\n\n                    children: [\n                        {\n                            name: "Ground Model",\n                            scl: [10, 1, 10],\n                            components: [\n                                {\n                                    type: "render",\n                                    options: {\n                                        type: "box",\n                                        material: gray,\n                                    },\n                                },\n                            ],\n                        },\n                    ],\n                },\n                {\n                    name: "Directional Light",\n                    rot: [45, 130, 0],\n                    components: [\n                        {\n                            type: "light",\n                            options: {\n                                type: "directional",\n                                castShadows: true,\n                                shadowDistance: 8,\n                                shadowBias: 0.1,\n                                intensity: 1,\n                                normalOffsetBias: 0.05,\n                            },\n                        },\n                    ],\n                },\n                {\n                    name: "Camera",\n                    pos: [0, 4, 7],\n                    rot: [-30, 0, 0],\n                    components: [\n                        {\n                            type: "camera",\n                            options: {\n                                color: [0.5, 0.5, 0.5],\n                            },\n                        },\n                    ],\n                },\n            ];\n\n            // Convert an entity definition in the structure above to a pc.Entity object\n            function parseEntity(e) {\n                const entity = new pc.Entity(e.name);\n\n                if (e.pos) {\n                    entity.setLocalPosition(e.pos[0], e.pos[1], e.pos[2]);\n                }\n                if (e.rot) {\n                    entity.setLocalEulerAngles(e.rot[0], e.rot[1], e.rot[2]);\n                }\n                if (e.scl) {\n                    entity.setLocalScale(e.scl[0], e.scl[1], e.scl[2]);\n                }\n\n                if (e.components) {\n                    e.components.forEach(function (c) {\n                        entity.addComponent(c.type, c.options);\n                    });\n                }\n\n                if (e.children) {\n                    e.children.forEach(function (child) {\n                        entity.addChild(parseEntity(child));\n                    });\n                }\n\n                return entity;\n            }\n\n            // Parse the scene data above into entities and add them to the scene\'s root entity\n            function parseScene(s) {\n                s.forEach(function (e) {\n                    app.root.addChild(parseEntity(e));\n                });\n            }\n\n            parseScene(scene);\n\n            let numChairs = 0;\n\n            // Clone the chair entity hierarchy and add it to the scene root\n            function spawnChair() {\n                const chair = app.root.findByName("Chair");\n                const clone = chair.clone();\n                clone.setLocalPosition(\n                    Math.random() * 1 - 0.5,\n                    Math.random() * 2 + 1,\n                    Math.random() * 1 - 0.5\n                );\n                app.root.addChild(clone);\n                numChairs++;\n            }\n\n            // Set an update function on the application\'s update event\n            let time = 0;\n            app.on("update", function (dt) {\n                // Add a new chair every 250 ms\n                time += dt;\n                if (time > 0.25 && numChairs < 20) {\n                    spawnChair();\n                    time = 0;\n                }\n\n                // Show active bodies in red and frozen bodies in gray\n                app.root.findComponents("rigidbody").forEach(function (body) {\n                    body.entity\n                        .findComponents("render")\n                        .forEach(function (render) {\n                            render.material = body.isActive() ? red : gray;\n                        });\n                });\n            });\n        });\n    }\n}\n',nameSlug:"compound-collision",categorySlug:"physics"},"falling-shapes":{typeScriptFunction:'function example(canvas: HTMLCanvasElement, deviceType: string): void {\n\n    pc.WasmModule.setConfig(\'Ammo\', {\n        glueUrl: \'/static/lib/ammo/ammo.wasm.js\',\n        wasmUrl: \'/static/lib/ammo/ammo.wasm.wasm\',\n        fallbackUrl: \'/static/lib/ammo/ammo.js\'\n    });\n    pc.WasmModule.getInstance(\'Ammo\', demo);\n\n    function demo() {\n\n        const assets = {\n            \'torus\': new pc.Asset(\'torus\', \'container\', { url: \'/static/assets/models/torus.glb\' })\n        };\n\n        const gfxOptions = {\n            deviceTypes: [deviceType],\n            glslangUrl: \'/static/lib/glslang/glslang.js\',\n            twgslUrl: \'/static/lib/twgsl/twgsl.js\'\n        };\n\n        pc.createGraphicsDevice(canvas, gfxOptions).then((device: pc.GraphicsDevice) => {\n\n            const createOptions = new pc.AppOptions();\n            createOptions.graphicsDevice = device;\n            createOptions.keyboard = new pc.Keyboard(document.body);\n\n            createOptions.componentSystems = [\n                // @ts-ignore\n                pc.RenderComponentSystem,\n                // @ts-ignore\n                pc.CameraComponentSystem,\n                // @ts-ignore\n                pc.LightComponentSystem,\n                // @ts-ignore\n                pc.ScriptComponentSystem,\n                // @ts-ignore\n                pc.CollisionComponentSystem,\n                // @ts-ignore\n                pc.RigidBodyComponentSystem,\n                // @ts-ignore\n                pc.ElementComponentSystem\n            ];\n            createOptions.resourceHandlers = [\n                // @ts-ignore\n                pc.TextureHandler,\n                // @ts-ignore\n                pc.ContainerHandler,\n                // @ts-ignore\n                pc.ScriptHandler,\n                // @ts-ignore\n                pc.JsonHandler,\n                // @ts-ignore\n                pc.FontHandler\n            ];\n\n            const app = new pc.AppBase(canvas);\n            app.init(createOptions);\n\n            // Set the canvas to fill the window and automatically change resolution to be the same as the canvas size\n            app.setCanvasFillMode(pc.FILLMODE_FILL_WINDOW);\n            app.setCanvasResolution(pc.RESOLUTION_AUTO);\n\n            const assetListLoader = new pc.AssetListLoader(Object.values(assets), app.assets);\n            assetListLoader.load(() => {\n\n                app.start();\n\n                app.scene.ambientLight = new pc.Color(0.2, 0.2, 0.2);\n\n                // Set the gravity for our rigid bodies\n                app.systems.rigidbody.gravity.set(0, -9.81, 0);\n\n                function createMaterial(color: pc.Color) {\n                    const material = new pc.StandardMaterial();\n                    material.diffuse = color;\n                    // we need to call material.update when we change its properties\n                    material.update();\n                    return material;\n                }\n\n                // create a few materials for our objects\n                const red = createMaterial(new pc.Color(1, 0.3, 0.3));\n                const gray = createMaterial(new pc.Color(0.7, 0.7, 0.7));\n\n                // ***********    Create our floor   *******************\n\n                const floor = new pc.Entity();\n                floor.addComponent("render", {\n                    type: "box",\n                    material: gray\n                });\n\n                // scale it\n                floor.setLocalScale(10, 1, 10);\n\n                // add a rigidbody component so that other objects collide with it\n                floor.addComponent("rigidbody", {\n                    type: "static",\n                    restitution: 0.5\n                });\n\n                // add a collision component\n                floor.addComponent("collision", {\n                    type: "box",\n                    halfExtents: new pc.Vec3(5, 0.5, 5)\n                });\n\n                // add the floor to the hierarchy\n                app.root.addChild(floor);\n\n                // ***********    Create lights   *******************\n\n                // make our scene prettier by adding a directional light\n                const light = new pc.Entity();\n                light.addComponent("light", {\n                    type: "directional",\n                    color: new pc.Color(1, 1, 1),\n                    castShadows: true,\n                    shadowBias: 0.2,\n                    shadowDistance: 25,\n                    normalOffsetBias: 0.05,\n                    shadowResolution: 2048\n                });\n\n                // set the direction for our light\n                light.setLocalEulerAngles(45, 30, 0);\n\n                // Add the light to the hierarchy\n                app.root.addChild(light);\n\n                // ***********    Create camera    *******************\n\n                // Create an Entity with a camera component\n                const camera = new pc.Entity();\n                camera.addComponent("camera", {\n                    clearColor: new pc.Color(0.5, 0.5, 0.8),\n                    farClip: 50\n                });\n\n                // add the camera to the hierarchy\n                app.root.addChild(camera);\n\n                // Move the camera a little further away\n                camera.translate(0, 10, 15);\n                camera.lookAt(0, 2, 0);\n\n                // helper function which creates a template for a collider\n                const createTemplate = function (type: any, collisionOptions: any, template?: any) {\n\n                    // add a render component (visible mesh)\n                    if (!template) {\n                        template = new pc.Entity();\n                        template.addComponent("render", {\n                            type: type\n                        });\n                    }\n\n                    // ...a rigidbody component of type \'dynamic\' so that it is simulated by the physics engine...\n                    template.addComponent("rigidbody", {\n                        type: "dynamic",\n                        mass: 50,\n                        restitution: 0.5\n                    });\n\n                    // ... and a collision component\n                    template.addComponent("collision", collisionOptions);\n\n                    return template;\n                };\n\n                // ***********    Create templates    *******************\n\n                // Create a template for a falling box\n                const boxTemplate = createTemplate("box", {\n                    type: "box",\n                    halfExtents: new pc.Vec3(0.5, 0.5, 0.5)\n                });\n\n                // A sphere...\n                const sphereTemplate = createTemplate("sphere", {\n                    type: "sphere",\n                    radius: 0.5\n                });\n\n                // A capsule...\n                const capsuleTemplate = createTemplate("capsule", {\n                    type: "capsule",\n                    radius: 0.5,\n                    height: 2\n                });\n\n                // A cylinder...\n                const cylinderTemplate = createTemplate("cylinder", {\n                    type: "cylinder",\n                    radius: 0.5,\n                    height: 1\n                });\n\n                // A torus mesh...\n                const container = assets.torus.resource;\n                const meshTemplate = container.instantiateRenderEntity();\n\n                createTemplate(null, {\n                    type: \'mesh\',\n                    renderAsset: container.renders[0]\n                }, meshTemplate);\n\n                // add all the templates to an array so that\n                // we can randomly spawn them\n                const templates = [boxTemplate, sphereTemplate, capsuleTemplate, cylinderTemplate, meshTemplate];\n\n                // disable the templates because we don\'t want them to be visible\n                // we\'ll just use them to clone other Entities\n                templates.forEach(function (template) {\n                    template.enabled = false;\n                });\n\n                // ***********    Update Function   *******************\n\n                // initialize variables for our update function\n                let timer = 0;\n                let count = 40;\n\n                // Set an update function on the application\'s update event\n                app.on("update", function (dt) {\n                    // create a falling box every 0.2 seconds\n                    if (count > 0) {\n                        timer -= dt;\n                        if (timer <= 0) {\n                            count--;\n                            timer = 0.2;\n\n                            // Clone a random template and position it above the floor\n                            const template = templates[Math.floor(Math.random() * templates.length)];\n                            const clone = template.clone();\n                            // enable the clone because the template is disabled\n                            clone.enabled = true;\n\n                            app.root.addChild(clone);\n\n                            clone.rigidbody.teleport(pc.math.random(-1, 1), 10, pc.math.random(-1, 1));\n                            clone.rigidbody.angularVelocity = new pc.Vec3(Math.random() * 10 - 5, Math.random() * 10 - 5, Math.random() * 10 - 5);\n                        }\n                    }\n\n                    // Show active bodies in red and frozen bodies in gray\n                    app.root.findComponents(\'rigidbody\').forEach(function (body: pc.RigidBodyComponent) {\n                        body.entity.render.meshInstances[0].material = body.isActive() ? red : gray;\n                    });\n                });\n            });\n        });\n    }\n}',javaScriptFunction:'function example(canvas, deviceType) {\n    pc.WasmModule.setConfig("Ammo", {\n        glueUrl: "/static/lib/ammo/ammo.wasm.js",\n        wasmUrl: "/static/lib/ammo/ammo.wasm.wasm",\n        fallbackUrl: "/static/lib/ammo/ammo.js",\n    });\n    pc.WasmModule.getInstance("Ammo", demo);\n\n    function demo() {\n        const assets = {\n            torus: new pc.Asset("torus", "container", {\n                url: "/static/assets/models/torus.glb",\n            }),\n        };\n\n        const gfxOptions = {\n            deviceTypes: [deviceType],\n            glslangUrl: "/static/lib/glslang/glslang.js",\n            twgslUrl: "/static/lib/twgsl/twgsl.js",\n        };\n\n        pc.createGraphicsDevice(canvas, gfxOptions).then((device) => {\n            const createOptions = new pc.AppOptions();\n            createOptions.graphicsDevice = device;\n            createOptions.keyboard = new pc.Keyboard(document.body);\n\n            createOptions.componentSystems = [\n                // @ts-ignore\n                pc.RenderComponentSystem,\n                // @ts-ignore\n                pc.CameraComponentSystem,\n                // @ts-ignore\n                pc.LightComponentSystem,\n                // @ts-ignore\n                pc.ScriptComponentSystem,\n                // @ts-ignore\n                pc.CollisionComponentSystem,\n                // @ts-ignore\n                pc.RigidBodyComponentSystem,\n                // @ts-ignore\n                pc.ElementComponentSystem,\n            ];\n\n            createOptions.resourceHandlers = [\n                // @ts-ignore\n                pc.TextureHandler,\n                // @ts-ignore\n                pc.ContainerHandler,\n                // @ts-ignore\n                pc.ScriptHandler,\n                // @ts-ignore\n                pc.JsonHandler,\n                // @ts-ignore\n                pc.FontHandler,\n            ];\n\n            const app = new pc.AppBase(canvas);\n            app.init(createOptions);\n\n            // Set the canvas to fill the window and automatically change resolution to be the same as the canvas size\n            app.setCanvasFillMode(pc.FILLMODE_FILL_WINDOW);\n            app.setCanvasResolution(pc.RESOLUTION_AUTO);\n\n            const assetListLoader = new pc.AssetListLoader(\n                Object.values(assets),\n                app.assets\n            );\n            assetListLoader.load(() => {\n                app.start();\n\n                app.scene.ambientLight = new pc.Color(0.2, 0.2, 0.2);\n\n                // Set the gravity for our rigid bodies\n                app.systems.rigidbody.gravity.set(0, -9.81, 0);\n\n                function createMaterial(color) {\n                    const material = new pc.StandardMaterial();\n                    material.diffuse = color;\n                    // we need to call material.update when we change its properties\n                    material.update();\n                    return material;\n                }\n\n                // create a few materials for our objects\n                const red = createMaterial(new pc.Color(1, 0.3, 0.3));\n                const gray = createMaterial(new pc.Color(0.7, 0.7, 0.7));\n\n                // ***********    Create our floor   *******************\n\n                const floor = new pc.Entity();\n                floor.addComponent("render", {\n                    type: "box",\n                    material: gray,\n                });\n\n                // scale it\n                floor.setLocalScale(10, 1, 10);\n\n                // add a rigidbody component so that other objects collide with it\n                floor.addComponent("rigidbody", {\n                    type: "static",\n                    restitution: 0.5,\n                });\n\n                // add a collision component\n                floor.addComponent("collision", {\n                    type: "box",\n                    halfExtents: new pc.Vec3(5, 0.5, 5),\n                });\n\n                // add the floor to the hierarchy\n                app.root.addChild(floor);\n\n                // ***********    Create lights   *******************\n\n                // make our scene prettier by adding a directional light\n                const light = new pc.Entity();\n                light.addComponent("light", {\n                    type: "directional",\n                    color: new pc.Color(1, 1, 1),\n                    castShadows: true,\n                    shadowBias: 0.2,\n                    shadowDistance: 25,\n                    normalOffsetBias: 0.05,\n                    shadowResolution: 2048,\n                });\n\n                // set the direction for our light\n                light.setLocalEulerAngles(45, 30, 0);\n\n                // Add the light to the hierarchy\n                app.root.addChild(light);\n\n                // ***********    Create camera    *******************\n\n                // Create an Entity with a camera component\n                const camera = new pc.Entity();\n                camera.addComponent("camera", {\n                    clearColor: new pc.Color(0.5, 0.5, 0.8),\n                    farClip: 50,\n                });\n\n                // add the camera to the hierarchy\n                app.root.addChild(camera);\n\n                // Move the camera a little further away\n                camera.translate(0, 10, 15);\n                camera.lookAt(0, 2, 0);\n\n                // helper function which creates a template for a collider\n                const createTemplate = function (\n                    type,\n                    collisionOptions,\n                    template\n                ) {\n                    // add a render component (visible mesh)\n                    if (!template) {\n                        template = new pc.Entity();\n                        template.addComponent("render", {\n                            type: type,\n                        });\n                    }\n\n                    // ...a rigidbody component of type \'dynamic\' so that it is simulated by the physics engine...\n                    template.addComponent("rigidbody", {\n                        type: "dynamic",\n                        mass: 50,\n                        restitution: 0.5,\n                    });\n\n                    // ... and a collision component\n                    template.addComponent("collision", collisionOptions);\n\n                    return template;\n                };\n\n                // ***********    Create templates    *******************\n\n                // Create a template for a falling box\n                const boxTemplate = createTemplate("box", {\n                    type: "box",\n                    halfExtents: new pc.Vec3(0.5, 0.5, 0.5),\n                });\n\n                // A sphere...\n                const sphereTemplate = createTemplate("sphere", {\n                    type: "sphere",\n                    radius: 0.5,\n                });\n\n                // A capsule...\n                const capsuleTemplate = createTemplate("capsule", {\n                    type: "capsule",\n                    radius: 0.5,\n                    height: 2,\n                });\n\n                // A cylinder...\n                const cylinderTemplate = createTemplate("cylinder", {\n                    type: "cylinder",\n                    radius: 0.5,\n                    height: 1,\n                });\n\n                // A torus mesh...\n                const container = assets.torus.resource;\n                const meshTemplate = container.instantiateRenderEntity();\n\n                createTemplate(\n                    null,\n                    {\n                        type: "mesh",\n                        renderAsset: container.renders[0],\n                    },\n                    meshTemplate\n                );\n\n                // add all the templates to an array so that\n                // we can randomly spawn them\n                const templates = [\n                    boxTemplate,\n                    sphereTemplate,\n                    capsuleTemplate,\n                    cylinderTemplate,\n                    meshTemplate,\n                ];\n\n                // disable the templates because we don\'t want them to be visible\n                // we\'ll just use them to clone other Entities\n                templates.forEach(function (template) {\n                    template.enabled = false;\n                });\n\n                // ***********    Update Function   *******************\n\n                // initialize variables for our update function\n                let timer = 0;\n                let count = 40;\n\n                // Set an update function on the application\'s update event\n                app.on("update", function (dt) {\n                    // create a falling box every 0.2 seconds\n                    if (count > 0) {\n                        timer -= dt;\n                        if (timer <= 0) {\n                            count--;\n                            timer = 0.2;\n\n                            // Clone a random template and position it above the floor\n                            const template =\n                                templates[\n                                    Math.floor(Math.random() * templates.length)\n                                ];\n                            const clone = template.clone();\n                            // enable the clone because the template is disabled\n                            clone.enabled = true;\n\n                            app.root.addChild(clone);\n\n                            clone.rigidbody.teleport(\n                                pc.math.random(-1, 1),\n                                10,\n                                pc.math.random(-1, 1)\n                            );\n                            clone.rigidbody.angularVelocity = new pc.Vec3(\n                                Math.random() * 10 - 5,\n                                Math.random() * 10 - 5,\n                                Math.random() * 10 - 5\n                            );\n                        }\n                    }\n\n                    // Show active bodies in red and frozen bodies in gray\n                    app.root\n                        .findComponents("rigidbody")\n                        .forEach(function (body) {\n                            body.entity.render.meshInstances[0].material =\n                                body.isActive() ? red : gray;\n                        });\n                });\n            });\n        });\n    }\n}\n',nameSlug:"falling-shapes",categorySlug:"physics"},"offset-collision":{typeScriptFunction:'function example(canvas: HTMLCanvasElement, deviceType: string, data: any): void {\n\n    pc.WasmModule.setConfig(\'Ammo\', {\n        glueUrl: \'/static/lib/ammo/ammo.wasm.js\',\n        wasmUrl: \'/static/lib/ammo/ammo.wasm.wasm\',\n        fallbackUrl: \'/static/lib/ammo/ammo.js\'\n    });\n\n    pc.WasmModule.getInstance(\'Ammo\', demo);\n\n    function demo() {\n\n        const assets = {\n            \'model\': new pc.Asset(\'model\', \'container\', { url: \'/static/assets/models/bitmoji.glb\' }),\n            \'idleAnim\': new pc.Asset(\'idleAnim\', \'container\', { url: \'/static/assets/animations/bitmoji/idle.glb\' }),\n            helipad: new pc.Asset(\'helipad-env-atlas\', \'texture\', { url: \'/static/assets/cubemaps/helipad-env-atlas.png\' }, { type: pc.TEXTURETYPE_RGBP, mipmaps: false })\n        };\n\n        const gfxOptions = {\n            deviceTypes: [deviceType],\n            glslangUrl: \'/static/lib/glslang/glslang.js\',\n            twgslUrl: \'/static/lib/twgsl/twgsl.js\'\n        };\n\n        pc.createGraphicsDevice(canvas, gfxOptions).then((device: pc.GraphicsDevice) => {\n\n            const createOptions = new pc.AppOptions();\n            createOptions.graphicsDevice = device;\n            createOptions.keyboard = new pc.Keyboard(document.body);\n\n            createOptions.componentSystems = [\n                // @ts-ignore\n                pc.RenderComponentSystem,\n                // @ts-ignore\n                pc.CameraComponentSystem,\n                // @ts-ignore\n                pc.LightComponentSystem,\n                // @ts-ignore\n                pc.ScriptComponentSystem,\n                // @ts-ignore\n                pc.CollisionComponentSystem,\n                // @ts-ignore\n                pc.RigidBodyComponentSystem,\n                // @ts-ignore\n                pc.AnimComponentSystem\n            ];\n            createOptions.resourceHandlers = [\n                // @ts-ignore\n                pc.TextureHandler,\n                // @ts-ignore\n                pc.ContainerHandler,\n                // @ts-ignore\n                pc.ScriptHandler,\n                // @ts-ignore\n                pc.AnimClipHandler,\n                // @ts-ignore\n                pc.AnimStateGraphHandler\n            ];\n\n            const app = new pc.AppBase(canvas);\n            app.init(createOptions);\n\n            // Set the canvas to fill the window and automatically change resolution to be the same as the canvas size\n            app.setCanvasFillMode(pc.FILLMODE_FILL_WINDOW);\n            app.setCanvasResolution(pc.RESOLUTION_AUTO);\n\n            const assetListLoader = new pc.AssetListLoader(Object.values(assets), app.assets);\n            assetListLoader.load(() => {\n\n                app.start();\n\n                // setup skydome\n                app.scene.exposure = 2;\n                app.scene.skyboxMip = 2;\n                app.scene.envAtlas = assets.helipad.resource;\n\n                // Create an entity with a light component\n                const lightEntity = new pc.Entity();\n                lightEntity.addComponent("light", {\n                    castShadows: true,\n                    intensity: 1.5,\n                    normalOffsetBias: 0.2,\n                    shadowType: pc.SHADOW_PCF5,\n                    shadowDistance: 12,\n                    shadowResolution: 4096,\n                    shadowBias: 0.2\n                });\n                app.root.addChild(lightEntity);\n                lightEntity.setLocalEulerAngles(45, 30, 0);\n\n                // Set the gravity for our rigid bodies\n                app.systems.rigidbody.gravity.set(0, -9.81, 0);\n\n                function createMaterial(color: pc.Color) {\n                    const material = new pc.StandardMaterial();\n                    material.diffuse = color;\n                    // we need to call material.update when we change its properties\n                    material.update();\n                    return material;\n                }\n\n                // create a few materials for our objects\n                const red = createMaterial(new pc.Color(1, 0.3, 0.3));\n                const gray = createMaterial(new pc.Color(0.7, 0.7, 0.7));\n\n                const floor = new pc.Entity();\n                floor.addComponent("render", {\n                    type: "box",\n                    material: gray\n                });\n\n                // Scale it and move it so that the top is at 0 on the y axis\n                floor.setLocalScale(10, 1, 10);\n                floor.translateLocal(0, -0.5, 0);\n\n                // Add a rigidbody component so that other objects collide with it\n                floor.addComponent("rigidbody", {\n                    type: "static",\n                    restitution: 0.5\n                });\n\n                // Add a collision component\n                floor.addComponent("collision", {\n                    type: "box",\n                    halfExtents: new pc.Vec3(5, 0.5, 5)\n                });\n\n                // Add the floor to the hierarchy\n                app.root.addChild(floor);\n\n                // Create an entity from the loaded model using the render component\n                const modelEntity = assets.model.resource.instantiateRenderEntity({\n                    castShadows: true\n                });\n\n                // Add an anim component to the entity\n                modelEntity.addComponent(\'anim\', {\n                    activate: true\n                });\n\n                // create an anim state graph\n                const animStateGraphData = {\n                    "layers": [\n                        {\n                            "name": "characterState",\n                            "states": [\n                                {\n                                    "name": "START"\n                                },\n                                {\n                                    "name": "Idle",\n                                    "speed": 1.0,\n                                    "loop": true\n                                }\n                            ],\n                            "transitions": [\n                                {\n                                    "from": "START",\n                                    "to": "Idle"\n                                }\n                            ]\n                        }\n                    ],\n                    "parameters": {}\n                };\n\n                // load the state graph into the anim component\n                modelEntity.anim.loadStateGraph(animStateGraphData);\n\n                // Add a rigid body and collision for the head with offset as the model\'s origin is\n                // at the feet on the floor\n                modelEntity.addComponent("rigidbody", {\n                    type: "static",\n                    restitution: 0.5\n                });\n\n                modelEntity.addComponent("collision", {\n                    type: "sphere",\n                    radius: 0.3,\n                    linearOffset: [0, 1.25, 0]\n                });\n\n                // load the state graph asset resource into the anim component\n                const characterStateLayer = modelEntity.anim.baseLayer;\n                characterStateLayer.assignAnimation(\'Idle\', assets.idleAnim.resource.animations[0].resource);\n\n                app.root.addChild(modelEntity);\n\n                // Create an Entity with a camera component\n                const cameraEntity = new pc.Entity();\n                cameraEntity.addComponent("camera");\n                cameraEntity.translate(0, 2, 5);\n                const lookAtPosition = modelEntity.getPosition();\n                cameraEntity.lookAt(lookAtPosition.x, lookAtPosition.y + 0.75, lookAtPosition.z);\n\n                app.root.addChild(cameraEntity);\n\n                // create a ball template that we can clone in the update loop\n                const ball = new pc.Entity();\n                ball.tags.add(\'shape\');\n                ball.setLocalScale(0.4, 0.4, 0.4);\n                ball.addComponent("render", {\n                    type: "sphere"\n                });\n\n                ball.addComponent("rigidbody", {\n                    type: "dynamic",\n                    mass: 50,\n                    restitution: 0.5\n                });\n\n                ball.addComponent("collision", {\n                    type: "sphere",\n                    radius: 0.2\n                });\n\n                ball.enabled = false;\n\n                // initialize variables for our update function\n                let timer = 0;\n                let count = 40;\n\n                // Set an update function on the application\'s update event\n                app.on("update", function (dt) {\n                    // create a falling box every 0.2 seconds\n                    if (count > 0) {\n                        timer -= dt;\n                        if (timer <= 0) {\n                            count--;\n                            timer = 0.5;\n\n                            // Create a new ball to drop\n                            const clone = ball.clone();\n                            clone.rigidbody.teleport(pc.math.random(-0.25, 0.25), 5, pc.math.random(-0.25, 0.25));\n\n                            app.root.addChild(clone);\n                            clone.enabled = true;\n                        }\n                    }\n\n                    // Show active bodies in red and frozen bodies in gray\n                    app.root.findByTag("shape").forEach(function (entity: pc.Entity) {\n                        entity.render.meshInstances[0].material = entity.rigidbody.isActive() ? red : gray;\n                    });\n\n                    // Render the offset collision\n                    app.scene.immediate.drawWireSphere(\n                        modelEntity.collision.getShapePosition(),\n                        0.3,\n                        pc.Color.GREEN,\n                        16,\n                        true,\n                        app.scene.layers.getLayerByName("World")\n                    );\n                });\n            });\n        });\n    }\n}',javaScriptFunction:'function example(canvas, deviceType, data) {\n    pc.WasmModule.setConfig("Ammo", {\n        glueUrl: "/static/lib/ammo/ammo.wasm.js",\n        wasmUrl: "/static/lib/ammo/ammo.wasm.wasm",\n        fallbackUrl: "/static/lib/ammo/ammo.js",\n    });\n\n    pc.WasmModule.getInstance("Ammo", demo);\n\n    function demo() {\n        const assets = {\n            model: new pc.Asset("model", "container", {\n                url: "/static/assets/models/bitmoji.glb",\n            }),\n            idleAnim: new pc.Asset("idleAnim", "container", {\n                url: "/static/assets/animations/bitmoji/idle.glb",\n            }),\n            helipad: new pc.Asset(\n                "helipad-env-atlas",\n                "texture",\n                { url: "/static/assets/cubemaps/helipad-env-atlas.png" },\n                { type: pc.TEXTURETYPE_RGBP, mipmaps: false }\n            ),\n        };\n\n        const gfxOptions = {\n            deviceTypes: [deviceType],\n            glslangUrl: "/static/lib/glslang/glslang.js",\n            twgslUrl: "/static/lib/twgsl/twgsl.js",\n        };\n\n        pc.createGraphicsDevice(canvas, gfxOptions).then((device) => {\n            const createOptions = new pc.AppOptions();\n            createOptions.graphicsDevice = device;\n            createOptions.keyboard = new pc.Keyboard(document.body);\n\n            createOptions.componentSystems = [\n                // @ts-ignore\n                pc.RenderComponentSystem,\n                // @ts-ignore\n                pc.CameraComponentSystem,\n                // @ts-ignore\n                pc.LightComponentSystem,\n                // @ts-ignore\n                pc.ScriptComponentSystem,\n                // @ts-ignore\n                pc.CollisionComponentSystem,\n                // @ts-ignore\n                pc.RigidBodyComponentSystem,\n                // @ts-ignore\n                pc.AnimComponentSystem,\n            ];\n\n            createOptions.resourceHandlers = [\n                // @ts-ignore\n                pc.TextureHandler,\n                // @ts-ignore\n                pc.ContainerHandler,\n                // @ts-ignore\n                pc.ScriptHandler,\n                // @ts-ignore\n                pc.AnimClipHandler,\n                // @ts-ignore\n                pc.AnimStateGraphHandler,\n            ];\n\n            const app = new pc.AppBase(canvas);\n            app.init(createOptions);\n\n            // Set the canvas to fill the window and automatically change resolution to be the same as the canvas size\n            app.setCanvasFillMode(pc.FILLMODE_FILL_WINDOW);\n            app.setCanvasResolution(pc.RESOLUTION_AUTO);\n\n            const assetListLoader = new pc.AssetListLoader(\n                Object.values(assets),\n                app.assets\n            );\n            assetListLoader.load(() => {\n                app.start();\n\n                // setup skydome\n                app.scene.exposure = 2;\n                app.scene.skyboxMip = 2;\n                app.scene.envAtlas = assets.helipad.resource;\n\n                // Create an entity with a light component\n                const lightEntity = new pc.Entity();\n                lightEntity.addComponent("light", {\n                    castShadows: true,\n                    intensity: 1.5,\n                    normalOffsetBias: 0.2,\n                    shadowType: pc.SHADOW_PCF5,\n                    shadowDistance: 12,\n                    shadowResolution: 4096,\n                    shadowBias: 0.2,\n                });\n                app.root.addChild(lightEntity);\n                lightEntity.setLocalEulerAngles(45, 30, 0);\n\n                // Set the gravity for our rigid bodies\n                app.systems.rigidbody.gravity.set(0, -9.81, 0);\n\n                function createMaterial(color) {\n                    const material = new pc.StandardMaterial();\n                    material.diffuse = color;\n                    // we need to call material.update when we change its properties\n                    material.update();\n                    return material;\n                }\n\n                // create a few materials for our objects\n                const red = createMaterial(new pc.Color(1, 0.3, 0.3));\n                const gray = createMaterial(new pc.Color(0.7, 0.7, 0.7));\n\n                const floor = new pc.Entity();\n                floor.addComponent("render", {\n                    type: "box",\n                    material: gray,\n                });\n\n                // Scale it and move it so that the top is at 0 on the y axis\n                floor.setLocalScale(10, 1, 10);\n                floor.translateLocal(0, -0.5, 0);\n\n                // Add a rigidbody component so that other objects collide with it\n                floor.addComponent("rigidbody", {\n                    type: "static",\n                    restitution: 0.5,\n                });\n\n                // Add a collision component\n                floor.addComponent("collision", {\n                    type: "box",\n                    halfExtents: new pc.Vec3(5, 0.5, 5),\n                });\n\n                // Add the floor to the hierarchy\n                app.root.addChild(floor);\n\n                // Create an entity from the loaded model using the render component\n                const modelEntity =\n                    assets.model.resource.instantiateRenderEntity({\n                        castShadows: true,\n                    });\n\n                // Add an anim component to the entity\n                modelEntity.addComponent("anim", {\n                    activate: true,\n                });\n\n                // create an anim state graph\n                const animStateGraphData = {\n                    layers: [\n                        {\n                            name: "characterState",\n                            states: [\n                                {\n                                    name: "START",\n                                },\n                                {\n                                    name: "Idle",\n                                    speed: 1.0,\n                                    loop: true,\n                                },\n                            ],\n\n                            transitions: [\n                                {\n                                    from: "START",\n                                    to: "Idle",\n                                },\n                            ],\n                        },\n                    ],\n\n                    parameters: {},\n                };\n\n                // load the state graph into the anim component\n                modelEntity.anim.loadStateGraph(animStateGraphData);\n\n                // Add a rigid body and collision for the head with offset as the model\'s origin is\n                // at the feet on the floor\n                modelEntity.addComponent("rigidbody", {\n                    type: "static",\n                    restitution: 0.5,\n                });\n\n                modelEntity.addComponent("collision", {\n                    type: "sphere",\n                    radius: 0.3,\n                    linearOffset: [0, 1.25, 0],\n                });\n\n                // load the state graph asset resource into the anim component\n                const characterStateLayer = modelEntity.anim.baseLayer;\n                characterStateLayer.assignAnimation(\n                    "Idle",\n                    assets.idleAnim.resource.animations[0].resource\n                );\n\n                app.root.addChild(modelEntity);\n\n                // Create an Entity with a camera component\n                const cameraEntity = new pc.Entity();\n                cameraEntity.addComponent("camera");\n                cameraEntity.translate(0, 2, 5);\n                const lookAtPosition = modelEntity.getPosition();\n                cameraEntity.lookAt(\n                    lookAtPosition.x,\n                    lookAtPosition.y + 0.75,\n                    lookAtPosition.z\n                );\n\n                app.root.addChild(cameraEntity);\n\n                // create a ball template that we can clone in the update loop\n                const ball = new pc.Entity();\n                ball.tags.add("shape");\n                ball.setLocalScale(0.4, 0.4, 0.4);\n                ball.addComponent("render", {\n                    type: "sphere",\n                });\n\n                ball.addComponent("rigidbody", {\n                    type: "dynamic",\n                    mass: 50,\n                    restitution: 0.5,\n                });\n\n                ball.addComponent("collision", {\n                    type: "sphere",\n                    radius: 0.2,\n                });\n\n                ball.enabled = false;\n\n                // initialize variables for our update function\n                let timer = 0;\n                let count = 40;\n\n                // Set an update function on the application\'s update event\n                app.on("update", function (dt) {\n                    // create a falling box every 0.2 seconds\n                    if (count > 0) {\n                        timer -= dt;\n                        if (timer <= 0) {\n                            count--;\n                            timer = 0.5;\n\n                            // Create a new ball to drop\n                            const clone = ball.clone();\n                            clone.rigidbody.teleport(\n                                pc.math.random(-0.25, 0.25),\n                                5,\n                                pc.math.random(-0.25, 0.25)\n                            );\n\n                            app.root.addChild(clone);\n                            clone.enabled = true;\n                        }\n                    }\n\n                    // Show active bodies in red and frozen bodies in gray\n                    app.root.findByTag("shape").forEach(function (entity) {\n                        entity.render.meshInstances[0].material =\n                            entity.rigidbody.isActive() ? red : gray;\n                    });\n\n                    // Render the offset collision\n                    app.scene.immediate.drawWireSphere(\n                        modelEntity.collision.getShapePosition(),\n                        0.3,\n                        pc.Color.GREEN,\n                        16,\n                        true,\n                        app.scene.layers.getLayerByName("World")\n                    );\n                });\n            });\n        });\n    }\n}\n',nameSlug:"offset-collision",categorySlug:"physics"},raycast:{typeScriptFunction:"function example(canvas: HTMLCanvasElement, deviceType: string): void {\n\n    pc.WasmModule.setConfig('Ammo', {\n        glueUrl: '/static/lib/ammo/ammo.wasm.js',\n        wasmUrl: '/static/lib/ammo/ammo.wasm.wasm',\n        fallbackUrl: '/static/lib/ammo/ammo.js'\n    });\n\n    pc.WasmModule.getInstance('Ammo', demo);\n\n    function demo() {\n\n        const assets = {\n            'font': new pc.Asset('font', 'font', { url: '/static/assets/fonts/arial.json' })\n        };\n\n        const gfxOptions = {\n            deviceTypes: [deviceType],\n            glslangUrl: '/static/lib/glslang/glslang.js',\n            twgslUrl: '/static/lib/twgsl/twgsl.js'\n        };\n\n        pc.createGraphicsDevice(canvas, gfxOptions).then((device: pc.GraphicsDevice) => {\n\n            const createOptions = new pc.AppOptions();\n            createOptions.graphicsDevice = device;\n            createOptions.keyboard = new pc.Keyboard(document.body);\n\n            createOptions.componentSystems = [\n                // @ts-ignore\n                pc.RenderComponentSystem,\n                // @ts-ignore\n                pc.CameraComponentSystem,\n                // @ts-ignore\n                pc.LightComponentSystem,\n                // @ts-ignore\n                pc.ScriptComponentSystem,\n                // @ts-ignore\n                pc.CollisionComponentSystem,\n                // @ts-ignore\n                pc.RigidBodyComponentSystem,\n                // @ts-ignore\n                pc.ElementComponentSystem\n            ];\n            createOptions.resourceHandlers = [\n                // @ts-ignore\n                pc.TextureHandler,\n                // @ts-ignore\n                pc.ContainerHandler,\n                // @ts-ignore\n                pc.ScriptHandler,\n                // @ts-ignore\n                pc.JsonHandler,\n                // @ts-ignore\n                pc.FontHandler\n            ];\n\n            const app = new pc.AppBase(canvas);\n            app.init(createOptions);\n\n            // Set the canvas to fill the window and automatically change resolution to be the same as the canvas size\n            app.setCanvasFillMode(pc.FILLMODE_FILL_WINDOW);\n            app.setCanvasResolution(pc.RESOLUTION_AUTO);\n\n            const assetListLoader = new pc.AssetListLoader(Object.values(assets), app.assets);\n            assetListLoader.load(() => {\n\n                app.start();\n\n                app.scene.ambientLight = new pc.Color(0.2, 0.2, 0.2);\n\n                function createMaterial(color: pc.Color) {\n                    const material = new pc.StandardMaterial();\n                    material.diffuse = color;\n                    material.update();\n\n                    return material;\n                }\n\n                // Create a couple of materials\n                const red = createMaterial(new pc.Color(1, 0, 0));\n                const green = createMaterial(new pc.Color(0, 1, 0));\n\n                // Create light\n                const light = new pc.Entity();\n                light.addComponent(\"light\", {\n                    type: \"directional\"\n                });\n\n                app.root.addChild(light);\n                light.setEulerAngles(45, 30, 0);\n\n                // Create camera\n                const camera = new pc.Entity();\n                camera.addComponent(\"camera\", {\n                    clearColor: new pc.Color(0.5, 0.5, 0.8)\n                });\n\n                app.root.addChild(camera);\n                camera.setPosition(5, 0, 15);\n\n                function createPhysicalShape(type: string, material: pc.Material, x: number, y: number, z: number) {\n                    const e = new pc.Entity();\n\n                    // Have to set the position of the entity before adding the static rigidbody\n                    // component because static bodies cannot be moved after creation\n                    app.root.addChild(e);\n                    e.setPosition(x, y, z);\n\n                    e.addComponent(\"render\", {\n                        type: type,\n                        material: material\n                    });\n                    e.addComponent(\"rigidbody\", {\n                        type: \"static\"\n                    });\n                    e.addComponent(\"collision\", {\n                        type: type,\n                        height: type === 'capsule' ? 2 : 1\n                    });\n\n                    return e;\n                }\n\n                // Create two rows of physical geometric shapes\n                const types = ['box', 'capsule', 'cone', 'cylinder', 'sphere'];\n                types.forEach(function (type, idx) {\n                    createPhysicalShape(type, green, idx * 2 + 1, 2, 0);\n                });\n                types.forEach(function (type, idx) {\n                    createPhysicalShape(type, green, idx * 2 + 1, -2, 0);\n                });\n\n                // Allocate some colors\n                const white = new pc.Color(1, 1, 1);\n                const blue = new pc.Color(0, 0, 1);\n\n                // Allocate some vectors\n                const start = new pc.Vec3();\n                const end = new pc.Vec3();\n                const temp = new pc.Vec3();\n\n                // Set an update function on the application's update event\n                let time = 0;\n                let y = 0;\n                app.on(\"update\", function (dt) {\n                    time += dt;\n\n                    // Reset all shapes to green\n                    app.root.findComponents('render').forEach(function (render: pc.RenderComponent) {\n                        render.material = green;\n                    });\n\n                    y = 2 + 1.2 * Math.sin(time);\n                    start.set(0, y, 0);\n                    end.set(10, y, 0);\n\n                    // Render the ray used in the raycast\n                    app.drawLine(start, end, white);\n\n                    const result = app.systems.rigidbody.raycastFirst(start, end);\n                    if (result) {\n                        result.entity.render.material = red;\n\n                        // Render the normal on the surface from the hit point\n                        temp.copy(result.normal).mulScalar(0.3).add(result.point);\n                        app.drawLine(result.point, temp, blue);\n                    }\n\n                    y = -2 + 1.2 * Math.sin(time);\n                    start.set(0, y, 0);\n                    end.set(10, y, 0);\n\n                    // Render the ray used in the raycast\n                    app.drawLine(start, end, white);\n\n                    const results = app.systems.rigidbody.raycastAll(start, end);\n                    results.forEach(function (result: pc.RaycastResult) {\n                        result.entity.render.material = red;\n\n                        // Render the normal on the surface from the hit point\n                        temp.copy(result.normal).mulScalar(0.3).add(result.point);\n                        app.drawLine(result.point, temp, blue);\n                    }, this);\n                });\n\n                const createText = function (fontAsset: pc.Asset, message: string, x: number, y: number, z: number, rot: number) {\n                    // Create a text element-based entity\n                    const text = new pc.Entity();\n                    text.addComponent(\"element\", {\n                        anchor: [0.5, 0.5, 0.5, 0.5],\n                        fontAsset: fontAsset,\n                        fontSize: 0.5,\n                        pivot: [0, 0.5],\n                        text: message,\n                        type: pc.ELEMENTTYPE_TEXT\n                    });\n                    text.setLocalPosition(x, y, z);\n                    text.setLocalEulerAngles(0, 0, rot);\n                    app.root.addChild(text);\n                };\n\n                createText(assets.font, 'raycastFirst', 0.5, 3.75, 0, 0);\n                createText(assets.font, 'raycastAll', 0.5, -0.25, 0, 0);\n            });\n        });\n    }\n}",javaScriptFunction:'function example(canvas, deviceType) {\n    pc.WasmModule.setConfig("Ammo", {\n        glueUrl: "/static/lib/ammo/ammo.wasm.js",\n        wasmUrl: "/static/lib/ammo/ammo.wasm.wasm",\n        fallbackUrl: "/static/lib/ammo/ammo.js",\n    });\n\n    pc.WasmModule.getInstance("Ammo", demo);\n\n    function demo() {\n        const assets = {\n            font: new pc.Asset("font", "font", {\n                url: "/static/assets/fonts/arial.json",\n            }),\n        };\n\n        const gfxOptions = {\n            deviceTypes: [deviceType],\n            glslangUrl: "/static/lib/glslang/glslang.js",\n            twgslUrl: "/static/lib/twgsl/twgsl.js",\n        };\n\n        pc.createGraphicsDevice(canvas, gfxOptions).then((device) => {\n            const createOptions = new pc.AppOptions();\n            createOptions.graphicsDevice = device;\n            createOptions.keyboard = new pc.Keyboard(document.body);\n\n            createOptions.componentSystems = [\n                // @ts-ignore\n                pc.RenderComponentSystem,\n                // @ts-ignore\n                pc.CameraComponentSystem,\n                // @ts-ignore\n                pc.LightComponentSystem,\n                // @ts-ignore\n                pc.ScriptComponentSystem,\n                // @ts-ignore\n                pc.CollisionComponentSystem,\n                // @ts-ignore\n                pc.RigidBodyComponentSystem,\n                // @ts-ignore\n                pc.ElementComponentSystem,\n            ];\n\n            createOptions.resourceHandlers = [\n                // @ts-ignore\n                pc.TextureHandler,\n                // @ts-ignore\n                pc.ContainerHandler,\n                // @ts-ignore\n                pc.ScriptHandler,\n                // @ts-ignore\n                pc.JsonHandler,\n                // @ts-ignore\n                pc.FontHandler,\n            ];\n\n            const app = new pc.AppBase(canvas);\n            app.init(createOptions);\n\n            // Set the canvas to fill the window and automatically change resolution to be the same as the canvas size\n            app.setCanvasFillMode(pc.FILLMODE_FILL_WINDOW);\n            app.setCanvasResolution(pc.RESOLUTION_AUTO);\n\n            const assetListLoader = new pc.AssetListLoader(\n                Object.values(assets),\n                app.assets\n            );\n            assetListLoader.load(() => {\n                app.start();\n\n                app.scene.ambientLight = new pc.Color(0.2, 0.2, 0.2);\n\n                function createMaterial(color) {\n                    const material = new pc.StandardMaterial();\n                    material.diffuse = color;\n                    material.update();\n\n                    return material;\n                }\n\n                // Create a couple of materials\n                const red = createMaterial(new pc.Color(1, 0, 0));\n                const green = createMaterial(new pc.Color(0, 1, 0));\n\n                // Create light\n                const light = new pc.Entity();\n                light.addComponent("light", {\n                    type: "directional",\n                });\n\n                app.root.addChild(light);\n                light.setEulerAngles(45, 30, 0);\n\n                // Create camera\n                const camera = new pc.Entity();\n                camera.addComponent("camera", {\n                    clearColor: new pc.Color(0.5, 0.5, 0.8),\n                });\n\n                app.root.addChild(camera);\n                camera.setPosition(5, 0, 15);\n\n                function createPhysicalShape(type, material, x, y, z) {\n                    const e = new pc.Entity();\n\n                    // Have to set the position of the entity before adding the static rigidbody\n                    // component because static bodies cannot be moved after creation\n                    app.root.addChild(e);\n                    e.setPosition(x, y, z);\n\n                    e.addComponent("render", {\n                        type: type,\n                        material: material,\n                    });\n                    e.addComponent("rigidbody", {\n                        type: "static",\n                    });\n                    e.addComponent("collision", {\n                        type: type,\n                        height: type === "capsule" ? 2 : 1,\n                    });\n\n                    return e;\n                }\n\n                // Create two rows of physical geometric shapes\n                const types = ["box", "capsule", "cone", "cylinder", "sphere"];\n                types.forEach(function (type, idx) {\n                    createPhysicalShape(type, green, idx * 2 + 1, 2, 0);\n                });\n                types.forEach(function (type, idx) {\n                    createPhysicalShape(type, green, idx * 2 + 1, -2, 0);\n                });\n\n                // Allocate some colors\n                const white = new pc.Color(1, 1, 1);\n                const blue = new pc.Color(0, 0, 1);\n\n                // Allocate some vectors\n                const start = new pc.Vec3();\n                const end = new pc.Vec3();\n                const temp = new pc.Vec3();\n\n                // Set an update function on the application\'s update event\n                let time = 0;\n                let y = 0;\n                app.on("update", function (dt) {\n                    time += dt;\n\n                    // Reset all shapes to green\n                    app.root\n                        .findComponents("render")\n                        .forEach(function (render) {\n                            render.material = green;\n                        });\n\n                    y = 2 + 1.2 * Math.sin(time);\n                    start.set(0, y, 0);\n                    end.set(10, y, 0);\n\n                    // Render the ray used in the raycast\n                    app.drawLine(start, end, white);\n\n                    const result = app.systems.rigidbody.raycastFirst(\n                        start,\n                        end\n                    );\n                    if (result) {\n                        result.entity.render.material = red;\n\n                        // Render the normal on the surface from the hit point\n                        temp.copy(result.normal)\n                            .mulScalar(0.3)\n                            .add(result.point);\n                        app.drawLine(result.point, temp, blue);\n                    }\n\n                    y = -2 + 1.2 * Math.sin(time);\n                    start.set(0, y, 0);\n                    end.set(10, y, 0);\n\n                    // Render the ray used in the raycast\n                    app.drawLine(start, end, white);\n\n                    const results = app.systems.rigidbody.raycastAll(\n                        start,\n                        end\n                    );\n                    results.forEach(function (result) {\n                        result.entity.render.material = red;\n\n                        // Render the normal on the surface from the hit point\n                        temp.copy(result.normal)\n                            .mulScalar(0.3)\n                            .add(result.point);\n                        app.drawLine(result.point, temp, blue);\n                    }, this);\n                });\n\n                const createText = function (fontAsset, message, x, y, z, rot) {\n                    // Create a text element-based entity\n                    const text = new pc.Entity();\n                    text.addComponent("element", {\n                        anchor: [0.5, 0.5, 0.5, 0.5],\n                        fontAsset: fontAsset,\n                        fontSize: 0.5,\n                        pivot: [0, 0.5],\n                        text: message,\n                        type: pc.ELEMENTTYPE_TEXT,\n                    });\n                    text.setLocalPosition(x, y, z);\n                    text.setLocalEulerAngles(0, 0, rot);\n                    app.root.addChild(text);\n                };\n\n                createText(assets.font, "raycastFirst", 0.5, 3.75, 0, 0);\n                createText(assets.font, "raycastAll", 0.5, -0.25, 0, 0);\n            });\n        });\n    }\n}\n',nameSlug:"raycast",categorySlug:"physics"},vehicle:{typeScriptFunction:"function example(canvas: HTMLCanvasElement, deviceType: string): void {\n\n    pc.WasmModule.setConfig('Ammo', {\n        glueUrl: '/static/lib/ammo/ammo.wasm.js',\n        wasmUrl: '/static/lib/ammo/ammo.wasm.wasm',\n        fallbackUrl: '/static/lib/ammo/ammo.js'\n    });\n\n    pc.WasmModule.getInstance('Ammo', demo);\n\n    function demo() {\n\n        const assets = {\n            helipad: new pc.Asset('helipad-env-atlas', 'texture', { url: '/static/assets/cubemaps/helipad-env-atlas.png' }, { type: pc.TEXTURETYPE_RGBP, mipmaps: false }),\n            'script1': new pc.Asset('script1', 'script', { url: '/static/scripts/camera/tracking-camera.js' }),\n            'script2': new pc.Asset('script2', 'script', { url: '/static/scripts/physics/render-physics.js' }),\n            'script3': new pc.Asset('script3', 'script', { url: '/static/scripts/physics/action-physics-reset.js' }),\n            'script4': new pc.Asset('script4', 'script', { url: '/static/scripts/physics/vehicle.js' })\n        };\n\n        const gfxOptions = {\n            deviceTypes: [deviceType],\n            glslangUrl: '/static/lib/glslang/glslang.js',\n            twgslUrl: '/static/lib/twgsl/twgsl.js'\n        };\n\n        pc.createGraphicsDevice(canvas, gfxOptions).then((device: pc.GraphicsDevice) => {\n\n            const createOptions = new pc.AppOptions();\n            createOptions.graphicsDevice = device;\n            createOptions.keyboard = new pc.Keyboard(document.body);\n\n            createOptions.componentSystems = [\n                // @ts-ignore\n                pc.ModelComponentSystem,\n                // @ts-ignore\n                pc.CameraComponentSystem,\n                // @ts-ignore\n                pc.LightComponentSystem,\n                // @ts-ignore\n                pc.ScriptComponentSystem,\n                // @ts-ignore\n                pc.CollisionComponentSystem,\n                // @ts-ignore\n                pc.RigidBodyComponentSystem\n            ];\n            createOptions.resourceHandlers = [\n                // @ts-ignore\n                pc.TextureHandler,\n                // @ts-ignore\n                pc.ContainerHandler,\n                // @ts-ignore\n                pc.ScriptHandler,\n                // @ts-ignore\n                pc.JsonHandler\n            ];\n\n            const app = new pc.AppBase(canvas);\n            app.init(createOptions);\n\n            // Set the canvas to fill the window and automatically change resolution to be the same as the canvas size\n            app.setCanvasFillMode(pc.FILLMODE_FILL_WINDOW);\n            app.setCanvasResolution(pc.RESOLUTION_AUTO);\n\n            const assetListLoader = new pc.AssetListLoader(Object.values(assets), app.assets);\n            assetListLoader.load(() => {\n\n                app.start();\n\n                // setup skydome\n                app.scene.skyboxMip = 2;\n                app.scene.exposure = 0.3;\n                app.scene.envAtlas = assets.helipad.resource;\n\n                const lighting = app.scene.lighting;\n                lighting.shadowsEnabled = false;\n\n                // Create a static ground shape for our car to drive on\n                const ground = new pc.Entity('Ground');\n                ground.addComponent('rigidbody', {\n                    type: 'static'\n                });\n                ground.addComponent('collision', {\n                    type: 'box',\n                    halfExtents: new pc.Vec3(50, 0.5, 50)\n                });\n                ground.setLocalPosition(0, -0.5, 0);\n                app.root.addChild(ground);\n\n                // Create 4 wheels for our vehicle\n                const wheels: any = [];\n                [\n                    { name: 'Front Left Wheel', pos: new pc.Vec3(0.8, 0.4, 1.2), front: true },\n                    { name: 'Front Right Wheel', pos: new pc.Vec3(-0.8, 0.4, 1.2), front: true },\n                    { name: 'Back Left Wheel', pos: new pc.Vec3(0.8, 0.4, -1.2), front: false },\n                    { name: 'Back Right Wheel', pos: new pc.Vec3(-0.8, 0.4, -1.2), front: false }\n                ].forEach(function (wheelDef) {\n                    // Create a wheel\n                    const wheel = new pc.Entity(wheelDef.name);\n                    wheel.addComponent('script');\n                    wheel.script.create('vehicleWheel', {\n                        attributes: {\n                            debugRender: true,\n                            isFront: wheelDef.front\n                        }\n                    });\n                    wheel.setLocalPosition(wheelDef.pos);\n                    wheels.push(wheel);\n                });\n\n                // Create a physical vehicle\n                const vehicle = new pc.Entity('Vehicle');\n                vehicle.addComponent('rigidbody', {\n                    mass: 800,\n                    type: 'dynamic'\n                });\n                vehicle.addComponent('collision', {\n                    type: 'compound'\n                });\n                vehicle.addComponent('script');\n                vehicle.script.create('vehicle', {\n                    attributes: {\n                        wheels: wheels\n                    }\n                });\n                vehicle.script.create('vehicleControls');\n                vehicle.script.create('actionPhysicsReset', {\n                    attributes: {\n                        event: 'reset'\n                    }\n                });\n                vehicle.setLocalPosition(0, 2, 0);\n\n                // Create the car chassis, offset upwards in Y from the compound body\n                const chassis = new pc.Entity('Chassis');\n                chassis.addComponent('collision', {\n                    type: 'box',\n                    halfExtents: [0.6, 0.35, 1.65]\n                });\n                chassis.setLocalPosition(0, 0.65, 0);\n\n                // Create the car chassis, offset upwards in Y from the compound body\n                const cab = new pc.Entity('Cab');\n                cab.addComponent('collision', {\n                    type: 'box',\n                    halfExtents: [0.5, 0.2, 1]\n                });\n                cab.setLocalPosition(0, 1.2, -0.25);\n\n                // Add the vehicle to the hierarchy\n                wheels.forEach(function (wheel: pc.Entity) {\n                    vehicle.addChild(wheel);\n                });\n                vehicle.addChild(chassis);\n                vehicle.addChild(cab);\n                app.root.addChild(vehicle);\n\n                // Build a wall of blocks for the car to smash through\n                for (let i = 0; i < 10; i++) {\n                    for (let j = 0; j < 5; j++) {\n                        const block = new pc.Entity('Block');\n                        block.addComponent('rigidbody', {\n                            type: 'dynamic'\n                        });\n                        block.addComponent('collision', {\n                            type: 'box'\n                        });\n                        block.addComponent('script');\n                        block.script.create('actionPhysicsReset', {\n                            attributes: {\n                                event: 'reset'\n                            }\n                        });\n                        block.setLocalPosition(i - 4.5, j + 0.5, -10);\n                        app.root.addChild(block);\n                    }\n                }\n\n                // Create a directional light source\n                const light = new pc.Entity('Directional Light');\n                light.addComponent(\"light\", {\n                    type: \"directional\",\n                    color: new pc.Color(1, 1, 1),\n                    castShadows: true,\n                    shadowBias: 0.2,\n                    shadowDistance: 40,\n                    normalOffsetBias: 0.05,\n                    shadowResolution: 2048\n                });\n                light.setLocalEulerAngles(45, 30, 0);\n                app.root.addChild(light);\n\n                // Create a camera to render the scene\n                const camera = new pc.Entity('Camera');\n                camera.addComponent(\"camera\");\n                camera.addComponent('script');\n                camera.script.create('trackingCamera', {\n                    attributes: {\n                        target: vehicle\n                    }\n                });\n                camera.translate(0, 10, 15);\n                camera.lookAt(0, 0, 0);\n                app.root.addChild(camera);\n\n                // Enable rendering and resetting of all rigid bodies in the scene\n                app.root.addComponent('script');\n                app.root.script.create('renderPhysics', {\n                    attributes: {\n                        drawShapes: true,\n                        opacity: 1\n                    }\n                });\n\n                app.keyboard.on(pc.EVENT_KEYDOWN, function (e) {\n                    if (e.key === pc.KEY_R) {\n                        app.fire('reset');\n                    }\n                });\n            });\n        });\n    }\n}",javaScriptFunction:'function example(canvas, deviceType) {\n    pc.WasmModule.setConfig("Ammo", {\n        glueUrl: "/static/lib/ammo/ammo.wasm.js",\n        wasmUrl: "/static/lib/ammo/ammo.wasm.wasm",\n        fallbackUrl: "/static/lib/ammo/ammo.js",\n    });\n\n    pc.WasmModule.getInstance("Ammo", demo);\n\n    function demo() {\n        const assets = {\n            helipad: new pc.Asset(\n                "helipad-env-atlas",\n                "texture",\n                { url: "/static/assets/cubemaps/helipad-env-atlas.png" },\n                { type: pc.TEXTURETYPE_RGBP, mipmaps: false }\n            ),\n            script1: new pc.Asset("script1", "script", {\n                url: "/static/scripts/camera/tracking-camera.js",\n            }),\n            script2: new pc.Asset("script2", "script", {\n                url: "/static/scripts/physics/render-physics.js",\n            }),\n            script3: new pc.Asset("script3", "script", {\n                url: "/static/scripts/physics/action-physics-reset.js",\n            }),\n            script4: new pc.Asset("script4", "script", {\n                url: "/static/scripts/physics/vehicle.js",\n            }),\n        };\n\n        const gfxOptions = {\n            deviceTypes: [deviceType],\n            glslangUrl: "/static/lib/glslang/glslang.js",\n            twgslUrl: "/static/lib/twgsl/twgsl.js",\n        };\n\n        pc.createGraphicsDevice(canvas, gfxOptions).then((device) => {\n            const createOptions = new pc.AppOptions();\n            createOptions.graphicsDevice = device;\n            createOptions.keyboard = new pc.Keyboard(document.body);\n\n            createOptions.componentSystems = [\n                // @ts-ignore\n                pc.ModelComponentSystem,\n                // @ts-ignore\n                pc.CameraComponentSystem,\n                // @ts-ignore\n                pc.LightComponentSystem,\n                // @ts-ignore\n                pc.ScriptComponentSystem,\n                // @ts-ignore\n                pc.CollisionComponentSystem,\n                // @ts-ignore\n                pc.RigidBodyComponentSystem,\n            ];\n\n            createOptions.resourceHandlers = [\n                // @ts-ignore\n                pc.TextureHandler,\n                // @ts-ignore\n                pc.ContainerHandler,\n                // @ts-ignore\n                pc.ScriptHandler,\n                // @ts-ignore\n                pc.JsonHandler,\n            ];\n\n            const app = new pc.AppBase(canvas);\n            app.init(createOptions);\n\n            // Set the canvas to fill the window and automatically change resolution to be the same as the canvas size\n            app.setCanvasFillMode(pc.FILLMODE_FILL_WINDOW);\n            app.setCanvasResolution(pc.RESOLUTION_AUTO);\n\n            const assetListLoader = new pc.AssetListLoader(\n                Object.values(assets),\n                app.assets\n            );\n            assetListLoader.load(() => {\n                app.start();\n\n                // setup skydome\n                app.scene.skyboxMip = 2;\n                app.scene.exposure = 0.3;\n                app.scene.envAtlas = assets.helipad.resource;\n\n                const lighting = app.scene.lighting;\n                lighting.shadowsEnabled = false;\n\n                // Create a static ground shape for our car to drive on\n                const ground = new pc.Entity("Ground");\n                ground.addComponent("rigidbody", {\n                    type: "static",\n                });\n                ground.addComponent("collision", {\n                    type: "box",\n                    halfExtents: new pc.Vec3(50, 0.5, 50),\n                });\n                ground.setLocalPosition(0, -0.5, 0);\n                app.root.addChild(ground);\n\n                // Create 4 wheels for our vehicle\n                const wheels = [];\n                [\n                    {\n                        name: "Front Left Wheel",\n                        pos: new pc.Vec3(0.8, 0.4, 1.2),\n                        front: true,\n                    },\n                    {\n                        name: "Front Right Wheel",\n                        pos: new pc.Vec3(-0.8, 0.4, 1.2),\n                        front: true,\n                    },\n                    {\n                        name: "Back Left Wheel",\n                        pos: new pc.Vec3(0.8, 0.4, -1.2),\n                        front: false,\n                    },\n                    {\n                        name: "Back Right Wheel",\n                        pos: new pc.Vec3(-0.8, 0.4, -1.2),\n                        front: false,\n                    },\n                ].forEach(function (wheelDef) {\n                    // Create a wheel\n                    const wheel = new pc.Entity(wheelDef.name);\n                    wheel.addComponent("script");\n                    wheel.script.create("vehicleWheel", {\n                        attributes: {\n                            debugRender: true,\n                            isFront: wheelDef.front,\n                        },\n                    });\n                    wheel.setLocalPosition(wheelDef.pos);\n                    wheels.push(wheel);\n                });\n\n                // Create a physical vehicle\n                const vehicle = new pc.Entity("Vehicle");\n                vehicle.addComponent("rigidbody", {\n                    mass: 800,\n                    type: "dynamic",\n                });\n                vehicle.addComponent("collision", {\n                    type: "compound",\n                });\n                vehicle.addComponent("script");\n                vehicle.script.create("vehicle", {\n                    attributes: {\n                        wheels: wheels,\n                    },\n                });\n                vehicle.script.create("vehicleControls");\n                vehicle.script.create("actionPhysicsReset", {\n                    attributes: {\n                        event: "reset",\n                    },\n                });\n                vehicle.setLocalPosition(0, 2, 0);\n\n                // Create the car chassis, offset upwards in Y from the compound body\n                const chassis = new pc.Entity("Chassis");\n                chassis.addComponent("collision", {\n                    type: "box",\n                    halfExtents: [0.6, 0.35, 1.65],\n                });\n                chassis.setLocalPosition(0, 0.65, 0);\n\n                // Create the car chassis, offset upwards in Y from the compound body\n                const cab = new pc.Entity("Cab");\n                cab.addComponent("collision", {\n                    type: "box",\n                    halfExtents: [0.5, 0.2, 1],\n                });\n                cab.setLocalPosition(0, 1.2, -0.25);\n\n                // Add the vehicle to the hierarchy\n                wheels.forEach(function (wheel) {\n                    vehicle.addChild(wheel);\n                });\n                vehicle.addChild(chassis);\n                vehicle.addChild(cab);\n                app.root.addChild(vehicle);\n\n                // Build a wall of blocks for the car to smash through\n                for (let i = 0; i < 10; i++) {\n                    for (let j = 0; j < 5; j++) {\n                        const block = new pc.Entity("Block");\n                        block.addComponent("rigidbody", {\n                            type: "dynamic",\n                        });\n                        block.addComponent("collision", {\n                            type: "box",\n                        });\n                        block.addComponent("script");\n                        block.script.create("actionPhysicsReset", {\n                            attributes: {\n                                event: "reset",\n                            },\n                        });\n                        block.setLocalPosition(i - 4.5, j + 0.5, -10);\n                        app.root.addChild(block);\n                    }\n                }\n\n                // Create a directional light source\n                const light = new pc.Entity("Directional Light");\n                light.addComponent("light", {\n                    type: "directional",\n                    color: new pc.Color(1, 1, 1),\n                    castShadows: true,\n                    shadowBias: 0.2,\n                    shadowDistance: 40,\n                    normalOffsetBias: 0.05,\n                    shadowResolution: 2048,\n                });\n                light.setLocalEulerAngles(45, 30, 0);\n                app.root.addChild(light);\n\n                // Create a camera to render the scene\n                const camera = new pc.Entity("Camera");\n                camera.addComponent("camera");\n                camera.addComponent("script");\n                camera.script.create("trackingCamera", {\n                    attributes: {\n                        target: vehicle,\n                    },\n                });\n                camera.translate(0, 10, 15);\n                camera.lookAt(0, 0, 0);\n                app.root.addChild(camera);\n\n                // Enable rendering and resetting of all rigid bodies in the scene\n                app.root.addComponent("script");\n                app.root.script.create("renderPhysics", {\n                    attributes: {\n                        drawShapes: true,\n                        opacity: 1,\n                    },\n                });\n\n                app.keyboard.on(pc.EVENT_KEYDOWN, function (e) {\n                    if (e.key === pc.KEY_R) {\n                        app.fire("reset");\n                    }\n                });\n            });\n        });\n    }\n}\n',nameSlug:"vehicle",categorySlug:"physics"}},sound:{positional:{typeScriptFunction:"function example(canvas: HTMLCanvasElement, deviceType: string): void {\n\n    // Create the application and start the update loop\n    const app = new pc.Application(canvas, {});\n\n    const assets = {\n        'model': new pc.Asset('model', 'model', { url: '/static/assets/models/playbot/playbot.json' }),\n        'runAnim': new pc.Asset('runAnim', 'animation', { url: '/static/assets/animations/playbot/playbot-run.json' }),\n        'gravel': new pc.Asset('gravel', 'audio', { url: '/static/assets/sounds/footsteps.mp3' })\n    };\n\n    const assetListLoader = new pc.AssetListLoader(Object.values(assets), app.assets);\n    assetListLoader.load(() => {\n\n        // Create an Entity with a camera component\n        const camera = new pc.Entity();\n        camera.addComponent(\"camera\", {\n            clearColor: new pc.Color(1, 0, 0)\n        });\n        camera.addComponent(\"audiolistener\");\n        camera.rotateLocal(-30, 0, 0);\n        camera.translateLocal(0, 0, 5);\n        app.root.addChild(camera);\n\n        // Create an Entity for the ground\n        const material = new pc.StandardMaterial();\n        material.diffuse = pc.Color.GRAY;\n        material.update();\n\n        const ground = new pc.Entity();\n        ground.addComponent(\"render\", {\n            type: \"box\",\n            material: material\n        });\n        ground.setLocalScale(50, 1, 50);\n        ground.setLocalPosition(0, -0.5, 0);\n        app.root.addChild(ground);\n\n        // Create an entity with a light component\n        const light = new pc.Entity();\n        light.addComponent(\"light\", {\n            type: \"directional\",\n            color: new pc.Color(1, 1, 1),\n            castShadows: true,\n            intensity: 2,\n            shadowBias: 0.2,\n            shadowDistance: 16,\n            normalOffsetBias: 0.05,\n            shadowResolution: 2048\n        });\n        light.setLocalEulerAngles(45, 30, 0);\n        app.root.addChild(light);\n\n        app.start();\n\n        // Create walking dude\n        const entity = new pc.Entity();\n\n        // add sound component\n        entity.addComponent('sound');\n\n        // add footsteps slot\n        entity.sound.addSlot('footsteps', {\n            asset: assets.gravel.id,\n            pitch: 1.7,\n            loop: true,\n            autoPlay: true\n        });\n\n        // add model\n        entity.addComponent(\"model\", {\n            type: \"asset\",\n            asset: assets.model,\n            castShadows: true\n        });\n\n        // add animation\n        entity.addComponent(\"animation\", {\n            assets: [assets.runAnim],\n            speed: 0.8\n        });\n\n        // add entity in the hierarchy\n        app.root.addChild(entity);\n\n        let angle = 135;\n        const radius = 3;\n        const height = 0;// 1.1;\n        app.on(\"update\", function (dt) {\n            angle += 30 * dt;\n            if (angle > 360) {\n                angle -= 360;\n            }\n            entity.setLocalPosition(radius * Math.sin(angle * pc.math.DEG_TO_RAD), height, radius * Math.cos(angle * pc.math.DEG_TO_RAD));\n            entity.setLocalEulerAngles(0, angle + 90, 0);\n        });\n    });\n}",javaScriptFunction:'function example(canvas, deviceType) {\n    // Create the application and start the update loop\n    const app = new pc.Application(canvas, {});\n\n    const assets = {\n        model: new pc.Asset("model", "model", {\n            url: "/static/assets/models/playbot/playbot.json",\n        }),\n        runAnim: new pc.Asset("runAnim", "animation", {\n            url: "/static/assets/animations/playbot/playbot-run.json",\n        }),\n        gravel: new pc.Asset("gravel", "audio", {\n            url: "/static/assets/sounds/footsteps.mp3",\n        }),\n    };\n\n    const assetListLoader = new pc.AssetListLoader(\n        Object.values(assets),\n        app.assets\n    );\n    assetListLoader.load(() => {\n        // Create an Entity with a camera component\n        const camera = new pc.Entity();\n        camera.addComponent("camera", {\n            clearColor: new pc.Color(1, 0, 0),\n        });\n        camera.addComponent("audiolistener");\n        camera.rotateLocal(-30, 0, 0);\n        camera.translateLocal(0, 0, 5);\n        app.root.addChild(camera);\n\n        // Create an Entity for the ground\n        const material = new pc.StandardMaterial();\n        material.diffuse = pc.Color.GRAY;\n        material.update();\n\n        const ground = new pc.Entity();\n        ground.addComponent("render", {\n            type: "box",\n            material: material,\n        });\n        ground.setLocalScale(50, 1, 50);\n        ground.setLocalPosition(0, -0.5, 0);\n        app.root.addChild(ground);\n\n        // Create an entity with a light component\n        const light = new pc.Entity();\n        light.addComponent("light", {\n            type: "directional",\n            color: new pc.Color(1, 1, 1),\n            castShadows: true,\n            intensity: 2,\n            shadowBias: 0.2,\n            shadowDistance: 16,\n            normalOffsetBias: 0.05,\n            shadowResolution: 2048,\n        });\n        light.setLocalEulerAngles(45, 30, 0);\n        app.root.addChild(light);\n\n        app.start();\n\n        // Create walking dude\n        const entity = new pc.Entity();\n\n        // add sound component\n        entity.addComponent("sound");\n\n        // add footsteps slot\n        entity.sound.addSlot("footsteps", {\n            asset: assets.gravel.id,\n            pitch: 1.7,\n            loop: true,\n            autoPlay: true,\n        });\n\n        // add model\n        entity.addComponent("model", {\n            type: "asset",\n            asset: assets.model,\n            castShadows: true,\n        });\n\n        // add animation\n        entity.addComponent("animation", {\n            assets: [assets.runAnim],\n            speed: 0.8,\n        });\n\n        // add entity in the hierarchy\n        app.root.addChild(entity);\n\n        let angle = 135;\n        const radius = 3;\n        const height = 0; // 1.1;\n        app.on("update", function (dt) {\n            angle += 30 * dt;\n            if (angle > 360) {\n                angle -= 360;\n            }\n            entity.setLocalPosition(\n                radius * Math.sin(angle * pc.math.DEG_TO_RAD),\n                height,\n                radius * Math.cos(angle * pc.math.DEG_TO_RAD)\n            );\n            entity.setLocalEulerAngles(0, angle + 90, 0);\n        });\n    });\n}\n',nameSlug:"positional",categorySlug:"sound"}},"user-interface":{"button-basic":{typeScriptFunction:"function example(canvas: HTMLCanvasElement, deviceType: string): void {\n\n    const assets = {\n        'font': new pc.Asset('font', 'font', { url: '/static/assets/fonts/courier.json' })\n    };\n\n    const gfxOptions = {\n        deviceTypes: [deviceType],\n        glslangUrl: '/static/lib/glslang/glslang.js',\n        twgslUrl: '/static/lib/twgsl/twgsl.js'\n    };\n\n    pc.createGraphicsDevice(canvas, gfxOptions).then((device: pc.GraphicsDevice) => {\n\n        const createOptions = new pc.AppOptions();\n        createOptions.graphicsDevice = device;\n        createOptions.mouse = new pc.Mouse(document.body);\n        createOptions.touch = new pc.TouchDevice(document.body);\n        createOptions.elementInput = new pc.ElementInput(canvas);\n\n        createOptions.componentSystems = [\n            // @ts-ignore\n            pc.RenderComponentSystem,\n            // @ts-ignore\n            pc.CameraComponentSystem,\n            // @ts-ignore\n            pc.ScreenComponentSystem,\n            // @ts-ignore\n            pc.ButtonComponentSystem,\n            // @ts-ignore\n            pc.ElementComponentSystem\n        ];\n        createOptions.resourceHandlers = [\n            // @ts-ignore\n            pc.TextureHandler,\n            // @ts-ignore\n            pc.FontHandler\n        ];\n\n        const app = new pc.AppBase(canvas);\n        app.init(createOptions);\n\n        // Set the canvas to fill the window and automatically change resolution to be the same as the canvas size\n        app.setCanvasFillMode(pc.FILLMODE_FILL_WINDOW);\n        app.setCanvasResolution(pc.RESOLUTION_AUTO);\n\n        const assetListLoader = new pc.AssetListLoader(Object.values(assets), app.assets);\n        assetListLoader.load(() => {\n\n            app.start();\n\n            window.addEventListener(\"resize\", function () {\n                app.resizeCanvas(canvas.width, canvas.height);\n            });\n\n            // Create a camera\n            const camera = new pc.Entity();\n            camera.addComponent(\"camera\", {\n                clearColor: new pc.Color(30 / 255, 30 / 255, 30 / 255)\n            });\n            app.root.addChild(camera);\n\n            // Create a 2D screen\n            const screen = new pc.Entity();\n            screen.addComponent(\"screen\", {\n                referenceResolution: new pc.Vec2(1280, 720),\n                scaleBlend: 0.5,\n                scaleMode: pc.SCALEMODE_BLEND,\n                screenSpace: true\n            });\n            app.root.addChild(screen);\n\n            // Button\n            const button = new pc.Entity();\n            button.addComponent(\"button\");\n            button.addComponent(\"element\", {\n                anchor: [0.5, 0.5, 0.5, 0.5],\n                height: 40,\n                pivot: [0.5, 0.5],\n                type: pc.ELEMENTTYPE_IMAGE,\n                width: 175,\n                useInput: true\n            });\n            screen.addChild(button);\n\n            // Create a label for the button\n            const label = new pc.Entity();\n            label.addComponent(\"element\", {\n                anchor: [0.5, 0.5, 0.5, 0.5],\n                color: new pc.Color(0, 0, 0),\n                fontAsset: assets.font.id,\n                fontSize: 32,\n                height: 64,\n                pivot: [0.5, 0.5],\n                text: \"CLICK ME\",\n                type: pc.ELEMENTTYPE_TEXT,\n                width: 128,\n                wrapLines: true\n            });\n            button.addChild(label);\n\n            // Change the background color every time the button is clicked\n            button.button.on('click', function () {\n                camera.camera.clearColor = new pc.Color(Math.random(), Math.random(), Math.random());\n            });\n        });\n    });\n}",javaScriptFunction:'function example(canvas, deviceType) {\n    const assets = {\n        font: new pc.Asset("font", "font", {\n            url: "/static/assets/fonts/courier.json",\n        }),\n    };\n\n    const gfxOptions = {\n        deviceTypes: [deviceType],\n        glslangUrl: "/static/lib/glslang/glslang.js",\n        twgslUrl: "/static/lib/twgsl/twgsl.js",\n    };\n\n    pc.createGraphicsDevice(canvas, gfxOptions).then((device) => {\n        const createOptions = new pc.AppOptions();\n        createOptions.graphicsDevice = device;\n        createOptions.mouse = new pc.Mouse(document.body);\n        createOptions.touch = new pc.TouchDevice(document.body);\n        createOptions.elementInput = new pc.ElementInput(canvas);\n\n        createOptions.componentSystems = [\n            // @ts-ignore\n            pc.RenderComponentSystem,\n            // @ts-ignore\n            pc.CameraComponentSystem,\n            // @ts-ignore\n            pc.ScreenComponentSystem,\n            // @ts-ignore\n            pc.ButtonComponentSystem,\n            // @ts-ignore\n            pc.ElementComponentSystem,\n        ];\n\n        createOptions.resourceHandlers = [\n            // @ts-ignore\n            pc.TextureHandler,\n            // @ts-ignore\n            pc.FontHandler,\n        ];\n\n        const app = new pc.AppBase(canvas);\n        app.init(createOptions);\n\n        // Set the canvas to fill the window and automatically change resolution to be the same as the canvas size\n        app.setCanvasFillMode(pc.FILLMODE_FILL_WINDOW);\n        app.setCanvasResolution(pc.RESOLUTION_AUTO);\n\n        const assetListLoader = new pc.AssetListLoader(\n            Object.values(assets),\n            app.assets\n        );\n        assetListLoader.load(() => {\n            app.start();\n\n            window.addEventListener("resize", function () {\n                app.resizeCanvas(canvas.width, canvas.height);\n            });\n\n            // Create a camera\n            const camera = new pc.Entity();\n            camera.addComponent("camera", {\n                clearColor: new pc.Color(30 / 255, 30 / 255, 30 / 255),\n            });\n            app.root.addChild(camera);\n\n            // Create a 2D screen\n            const screen = new pc.Entity();\n            screen.addComponent("screen", {\n                referenceResolution: new pc.Vec2(1280, 720),\n                scaleBlend: 0.5,\n                scaleMode: pc.SCALEMODE_BLEND,\n                screenSpace: true,\n            });\n            app.root.addChild(screen);\n\n            // Button\n            const button = new pc.Entity();\n            button.addComponent("button");\n            button.addComponent("element", {\n                anchor: [0.5, 0.5, 0.5, 0.5],\n                height: 40,\n                pivot: [0.5, 0.5],\n                type: pc.ELEMENTTYPE_IMAGE,\n                width: 175,\n                useInput: true,\n            });\n            screen.addChild(button);\n\n            // Create a label for the button\n            const label = new pc.Entity();\n            label.addComponent("element", {\n                anchor: [0.5, 0.5, 0.5, 0.5],\n                color: new pc.Color(0, 0, 0),\n                fontAsset: assets.font.id,\n                fontSize: 32,\n                height: 64,\n                pivot: [0.5, 0.5],\n                text: "CLICK ME",\n                type: pc.ELEMENTTYPE_TEXT,\n                width: 128,\n                wrapLines: true,\n            });\n            button.addChild(label);\n\n            // Change the background color every time the button is clicked\n            button.button.on("click", function () {\n                camera.camera.clearColor = new pc.Color(\n                    Math.random(),\n                    Math.random(),\n                    Math.random()\n                );\n            });\n        });\n    });\n}\n',nameSlug:"button-basic",categorySlug:"user-interface"},"button-sprite":{typeScriptFunction:"function example(canvas: HTMLCanvasElement, deviceType: string): void {\n\n    const assets = {\n        'font': new pc.Asset('font', 'font', { url: '/static/assets/fonts/courier.json' }),\n        'red_button_atlas': new pc.Asset('red_button_atlas', 'texture', { url: '/static/assets/button/red_button_atlas.png' })\n    };\n\n    const gfxOptions = {\n        deviceTypes: [deviceType],\n        glslangUrl: '/static/lib/glslang/glslang.js',\n        twgslUrl: '/static/lib/twgsl/twgsl.js'\n    };\n\n    pc.createGraphicsDevice(canvas, gfxOptions).then((device: pc.GraphicsDevice) => {\n\n        const createOptions = new pc.AppOptions();\n        createOptions.graphicsDevice = device;\n        createOptions.mouse = new pc.Mouse(document.body);\n        createOptions.touch = new pc.TouchDevice(document.body);\n        createOptions.elementInput = new pc.ElementInput(canvas);\n\n        createOptions.componentSystems = [\n            // @ts-ignore\n            pc.RenderComponentSystem,\n            // @ts-ignore\n            pc.CameraComponentSystem,\n            // @ts-ignore\n            pc.ScreenComponentSystem,\n            // @ts-ignore\n            pc.ButtonComponentSystem,\n            // @ts-ignore\n            pc.ElementComponentSystem\n        ];\n        createOptions.resourceHandlers = [\n            // @ts-ignore\n            pc.TextureHandler,\n            // @ts-ignore\n            pc.FontHandler\n        ];\n\n        const app = new pc.AppBase(canvas);\n        app.init(createOptions);\n\n        // Set the canvas to fill the window and automatically change resolution to be the same as the canvas size\n        app.setCanvasFillMode(pc.FILLMODE_FILL_WINDOW);\n        app.setCanvasResolution(pc.RESOLUTION_AUTO);\n\n        const assetListLoader = new pc.AssetListLoader(Object.values(assets), app.assets);\n        assetListLoader.load(() => {\n\n            app.start();\n\n            // Create a camera\n            const camera = new pc.Entity();\n            camera.addComponent(\"camera\", {\n                clearColor: new pc.Color(30 / 255, 30 / 255, 30 / 255)\n            });\n            app.root.addChild(camera);\n\n            // Create a 2D screen\n            const screen = new pc.Entity();\n            screen.addComponent(\"screen\", {\n                referenceResolution: new pc.Vec2(1280, 720),\n                scaleBlend: 0.5,\n                scaleMode: pc.SCALEMODE_BLEND,\n                screenSpace: true\n            });\n            app.root.addChild(screen);\n\n            // Create a simple button\n            const button = new pc.Entity();\n            button.addComponent(\"button\", {\n                active: true,\n                transitionMode: pc.BUTTON_TRANSITION_MODE_SPRITE_CHANGE\n            });\n            button.addComponent(\"element\", {\n                anchor: [0.5, 0.5, 0.5, 0.5],\n                height: 64,\n                pivot: [0.5, 0.5],\n                type: pc.ELEMENTTYPE_IMAGE,\n                width: 175,\n                useInput: true\n            });\n            screen.addChild(button);\n\n            // Create a label for the button\n            const label = new pc.Entity();\n            label.addComponent(\"element\", {\n                anchor: [0.5, 0.5, 0.5, 0.5],\n                color: new pc.Color(1, 1, 1),\n                fontAsset: assets.font.id,\n                fontSize: 32,\n                height: 64,\n                opacity: 0.5,\n                pivot: [0.5, 0.5],\n                text: \"CLICK ME\",\n                type: pc.ELEMENTTYPE_TEXT,\n                width: 128,\n                wrapLines: true\n            });\n            button.addChild(label);\n\n            // Change the background color every time the button is clicked\n            button.button.on('click', function () {\n                const r = Math.random();\n                camera.camera.clearColor = new pc.Color(r, r, r);\n            });\n\n            // Move the button's label with the animation of the sprite\n            button.button.on('pressedstart', function () {\n                label.translateLocal(0, -4, 0);\n            });\n            button.button.on('pressedend', function () {\n                label.translateLocal(0, 4, 0);\n            });\n\n            // Apply the font to the text element\n            const texture = assets.red_button_atlas.resource;\n            texture.addressU = pc.ADDRESS_CLAMP_TO_EDGE;\n            texture.addressV = pc.ADDRESS_CLAMP_TO_EDGE;\n            texture.minFilter = pc.FILTER_NEAREST;\n            texture.magFilter = pc.FILTER_NEAREST;\n\n            const atlas = new pc.TextureAtlas();\n            atlas.frames = {\n                \"0\": {\n                    rect: new pc.Vec4(0, 147, 190, 49),\n                    pivot: new pc.Vec2(0.5, 0.5),\n                    border: new pc.Vec4(7, 11, 7, 7)\n                },\n                \"1\": {\n                    rect: new pc.Vec4(0, 98, 190, 49),\n                    pivot: new pc.Vec2(0.5, 0.5),\n                    border: new pc.Vec4(7, 11, 7, 7)\n                },\n                \"2\": {\n                    rect: new pc.Vec4(0, 49, 190, 49),\n                    pivot: new pc.Vec2(0.5, 0.5),\n                    border: new pc.Vec4(7, 11, 7, 7)\n                },\n                \"3\": {\n                    rect: new pc.Vec4(0, 0, 190, 49),\n                    pivot: new pc.Vec2(0.5, 0.5),\n                    border: new pc.Vec4(7, 11, 7, 7)\n                }\n            };\n            atlas.texture = texture;\n\n            const createSpriteAsset = function (frame: string) {\n                const sprite = new pc.Sprite(app.graphicsDevice, {\n                    atlas: atlas,\n                    frameKeys: [frame],\n                    pixelsPerUnit: 1,\n                    renderMode: pc.SPRITE_RENDERMODE_SIMPLE\n                });\n\n                const spriteAsset = new pc.Asset('sprite', 'sprite', { url: '' });\n                spriteAsset.resource = sprite;\n                spriteAsset.loaded = true;\n                app.assets.add(spriteAsset);\n                return spriteAsset;\n            };\n\n            button.element.spriteAsset = createSpriteAsset('0').id;\n            button.button.hoverSpriteAsset = createSpriteAsset('1');\n            button.button.pressedSpriteAsset = createSpriteAsset('2');\n            button.button.inactiveSpriteAsset = createSpriteAsset('3');\n        });\n    });\n}",javaScriptFunction:'function example(canvas, deviceType) {\n    const assets = {\n        font: new pc.Asset("font", "font", {\n            url: "/static/assets/fonts/courier.json",\n        }),\n        red_button_atlas: new pc.Asset("red_button_atlas", "texture", {\n            url: "/static/assets/button/red_button_atlas.png",\n        }),\n    };\n\n    const gfxOptions = {\n        deviceTypes: [deviceType],\n        glslangUrl: "/static/lib/glslang/glslang.js",\n        twgslUrl: "/static/lib/twgsl/twgsl.js",\n    };\n\n    pc.createGraphicsDevice(canvas, gfxOptions).then((device) => {\n        const createOptions = new pc.AppOptions();\n        createOptions.graphicsDevice = device;\n        createOptions.mouse = new pc.Mouse(document.body);\n        createOptions.touch = new pc.TouchDevice(document.body);\n        createOptions.elementInput = new pc.ElementInput(canvas);\n\n        createOptions.componentSystems = [\n            // @ts-ignore\n            pc.RenderComponentSystem,\n            // @ts-ignore\n            pc.CameraComponentSystem,\n            // @ts-ignore\n            pc.ScreenComponentSystem,\n            // @ts-ignore\n            pc.ButtonComponentSystem,\n            // @ts-ignore\n            pc.ElementComponentSystem,\n        ];\n\n        createOptions.resourceHandlers = [\n            // @ts-ignore\n            pc.TextureHandler,\n            // @ts-ignore\n            pc.FontHandler,\n        ];\n\n        const app = new pc.AppBase(canvas);\n        app.init(createOptions);\n\n        // Set the canvas to fill the window and automatically change resolution to be the same as the canvas size\n        app.setCanvasFillMode(pc.FILLMODE_FILL_WINDOW);\n        app.setCanvasResolution(pc.RESOLUTION_AUTO);\n\n        const assetListLoader = new pc.AssetListLoader(\n            Object.values(assets),\n            app.assets\n        );\n        assetListLoader.load(() => {\n            app.start();\n\n            // Create a camera\n            const camera = new pc.Entity();\n            camera.addComponent("camera", {\n                clearColor: new pc.Color(30 / 255, 30 / 255, 30 / 255),\n            });\n            app.root.addChild(camera);\n\n            // Create a 2D screen\n            const screen = new pc.Entity();\n            screen.addComponent("screen", {\n                referenceResolution: new pc.Vec2(1280, 720),\n                scaleBlend: 0.5,\n                scaleMode: pc.SCALEMODE_BLEND,\n                screenSpace: true,\n            });\n            app.root.addChild(screen);\n\n            // Create a simple button\n            const button = new pc.Entity();\n            button.addComponent("button", {\n                active: true,\n                transitionMode: pc.BUTTON_TRANSITION_MODE_SPRITE_CHANGE,\n            });\n            button.addComponent("element", {\n                anchor: [0.5, 0.5, 0.5, 0.5],\n                height: 64,\n                pivot: [0.5, 0.5],\n                type: pc.ELEMENTTYPE_IMAGE,\n                width: 175,\n                useInput: true,\n            });\n            screen.addChild(button);\n\n            // Create a label for the button\n            const label = new pc.Entity();\n            label.addComponent("element", {\n                anchor: [0.5, 0.5, 0.5, 0.5],\n                color: new pc.Color(1, 1, 1),\n                fontAsset: assets.font.id,\n                fontSize: 32,\n                height: 64,\n                opacity: 0.5,\n                pivot: [0.5, 0.5],\n                text: "CLICK ME",\n                type: pc.ELEMENTTYPE_TEXT,\n                width: 128,\n                wrapLines: true,\n            });\n            button.addChild(label);\n\n            // Change the background color every time the button is clicked\n            button.button.on("click", function () {\n                const r = Math.random();\n                camera.camera.clearColor = new pc.Color(r, r, r);\n            });\n\n            // Move the button\'s label with the animation of the sprite\n            button.button.on("pressedstart", function () {\n                label.translateLocal(0, -4, 0);\n            });\n            button.button.on("pressedend", function () {\n                label.translateLocal(0, 4, 0);\n            });\n\n            // Apply the font to the text element\n            const texture = assets.red_button_atlas.resource;\n            texture.addressU = pc.ADDRESS_CLAMP_TO_EDGE;\n            texture.addressV = pc.ADDRESS_CLAMP_TO_EDGE;\n            texture.minFilter = pc.FILTER_NEAREST;\n            texture.magFilter = pc.FILTER_NEAREST;\n\n            const atlas = new pc.TextureAtlas();\n            atlas.frames = {\n                "0": {\n                    rect: new pc.Vec4(0, 147, 190, 49),\n                    pivot: new pc.Vec2(0.5, 0.5),\n                    border: new pc.Vec4(7, 11, 7, 7),\n                },\n                "1": {\n                    rect: new pc.Vec4(0, 98, 190, 49),\n                    pivot: new pc.Vec2(0.5, 0.5),\n                    border: new pc.Vec4(7, 11, 7, 7),\n                },\n                "2": {\n                    rect: new pc.Vec4(0, 49, 190, 49),\n                    pivot: new pc.Vec2(0.5, 0.5),\n                    border: new pc.Vec4(7, 11, 7, 7),\n                },\n                "3": {\n                    rect: new pc.Vec4(0, 0, 190, 49),\n                    pivot: new pc.Vec2(0.5, 0.5),\n                    border: new pc.Vec4(7, 11, 7, 7),\n                },\n            };\n            atlas.texture = texture;\n\n            const createSpriteAsset = function (frame) {\n                const sprite = new pc.Sprite(app.graphicsDevice, {\n                    atlas: atlas,\n                    frameKeys: [frame],\n                    pixelsPerUnit: 1,\n                    renderMode: pc.SPRITE_RENDERMODE_SIMPLE,\n                });\n\n                const spriteAsset = new pc.Asset("sprite", "sprite", {\n                    url: "",\n                });\n                spriteAsset.resource = sprite;\n                spriteAsset.loaded = true;\n                app.assets.add(spriteAsset);\n                return spriteAsset;\n            };\n\n            button.element.spriteAsset = createSpriteAsset("0").id;\n            button.button.hoverSpriteAsset = createSpriteAsset("1");\n            button.button.pressedSpriteAsset = createSpriteAsset("2");\n            button.button.inactiveSpriteAsset = createSpriteAsset("3");\n        });\n    });\n}\n',nameSlug:"button-sprite",categorySlug:"user-interface"},"custom-shader":{typeScriptFunction:'function example(canvas: HTMLCanvasElement, deviceType: string, files: { \'shader.vert\': string, \'shader.frag\': string }): void {\n\n    const assets = {\n        "playcanvas": new pc.Asset("playcanvas", "texture", { url: "/static/assets/textures/playcanvas.png" })\n    };\n\n    const gfxOptions = {\n        deviceTypes: [deviceType],\n        glslangUrl: \'/static/lib/glslang/glslang.js\',\n        twgslUrl: \'/static/lib/twgsl/twgsl.js\'\n    };\n\n    pc.createGraphicsDevice(canvas, gfxOptions).then((device: pc.GraphicsDevice) => {\n\n        const createOptions = new pc.AppOptions();\n        createOptions.graphicsDevice = device;\n        createOptions.mouse = new pc.Mouse(document.body);\n        createOptions.touch = new pc.TouchDevice(document.body);\n        createOptions.elementInput = new pc.ElementInput(canvas);\n\n        createOptions.componentSystems = [\n            // @ts-ignore\n            pc.RenderComponentSystem,\n            // @ts-ignore\n            pc.CameraComponentSystem,\n            // @ts-ignore\n            pc.ScreenComponentSystem,\n            // @ts-ignore\n            pc.ButtonComponentSystem,\n            // @ts-ignore\n            pc.ElementComponentSystem\n        ];\n        createOptions.resourceHandlers = [\n            // @ts-ignore\n            pc.TextureHandler,\n            // @ts-ignore\n            pc.FontHandler\n        ];\n\n        const app = new pc.AppBase(canvas);\n        app.init(createOptions);\n\n        // Set the canvas to fill the window and automatically change resolution to be the same as the canvas size\n        app.setCanvasFillMode(pc.FILLMODE_FILL_WINDOW);\n        app.setCanvasResolution(pc.RESOLUTION_AUTO);\n\n        const assetListLoader = new pc.AssetListLoader(Object.values(assets), app.assets);\n        assetListLoader.load(() => {\n\n            app.start();\n\n            window.addEventListener("resize", function () {\n                app.resizeCanvas(canvas.width, canvas.height);\n            });\n\n            // Create a camera\n            const camera = new pc.Entity();\n            camera.addComponent("camera", {\n                clearColor: new pc.Color(30 / 255, 30 / 255, 30 / 255)\n            });\n            app.root.addChild(camera);\n\n            // Create a 2D screen\n            const screen = new pc.Entity();\n            screen.addComponent("screen", {\n                referenceResolution: new pc.Vec2(1280, 720),\n                scaleBlend: 0.5,\n                scaleMode: pc.SCALEMODE_BLEND,\n                screenSpace: true\n            });\n            app.root.addChild(screen);\n\n            // Create the shader from the vertex and fragment shader\n            const shader = pc.createShaderFromCode(app.graphicsDevice, files[\'shader.vert\'], files[\'shader.frag\'], \'myUIShader\', {\n                vertex_position: pc.SEMANTIC_POSITION,\n                vertex_texCoord0: pc.SEMANTIC_TEXCOORD0\n            });\n\n            // Create a new material with the new shader and additive alpha blending\n            const material = new pc.Material();\n            material.shader = shader;\n            material.blendType = pc.BLEND_ADDITIVEALPHA;\n            material.depthWrite = true;\n            material.setParameter("uDiffuseMap", assets.playcanvas.resource);\n            material.update();\n\n            // Create the UI image element with the custom material\n            const entity = new pc.Entity();\n            entity.addComponent("element", {\n                pivot: new pc.Vec2(0.5, 0.5),\n                anchor: new pc.Vec4(0.5, 0.5, 0.5, 0.5),\n                width: 350,\n                height: 350,\n                type: pc.ELEMENTTYPE_IMAGE\n            });\n            entity.element.material = material;\n            screen.addChild(entity);\n\n            // update the material\'s \'amount\' parameter to animate the inverse effect\n            let time = 0;\n            app.on(\'update\', (dt) => {\n                time += dt;\n                // animate the amount as a sine wave varying from 0 to 1\n                material.setParameter("amount", (Math.sin(time * 4) + 1) * 0.5);\n            });\n        });\n    });\n}',javaScriptFunction:'function example(canvas, deviceType, files) {\n    const assets = {\n        playcanvas: new pc.Asset("playcanvas", "texture", {\n            url: "/static/assets/textures/playcanvas.png",\n        }),\n    };\n\n    const gfxOptions = {\n        deviceTypes: [deviceType],\n        glslangUrl: "/static/lib/glslang/glslang.js",\n        twgslUrl: "/static/lib/twgsl/twgsl.js",\n    };\n\n    pc.createGraphicsDevice(canvas, gfxOptions).then((device) => {\n        const createOptions = new pc.AppOptions();\n        createOptions.graphicsDevice = device;\n        createOptions.mouse = new pc.Mouse(document.body);\n        createOptions.touch = new pc.TouchDevice(document.body);\n        createOptions.elementInput = new pc.ElementInput(canvas);\n\n        createOptions.componentSystems = [\n            // @ts-ignore\n            pc.RenderComponentSystem,\n            // @ts-ignore\n            pc.CameraComponentSystem,\n            // @ts-ignore\n            pc.ScreenComponentSystem,\n            // @ts-ignore\n            pc.ButtonComponentSystem,\n            // @ts-ignore\n            pc.ElementComponentSystem,\n        ];\n\n        createOptions.resourceHandlers = [\n            // @ts-ignore\n            pc.TextureHandler,\n            // @ts-ignore\n            pc.FontHandler,\n        ];\n\n        const app = new pc.AppBase(canvas);\n        app.init(createOptions);\n\n        // Set the canvas to fill the window and automatically change resolution to be the same as the canvas size\n        app.setCanvasFillMode(pc.FILLMODE_FILL_WINDOW);\n        app.setCanvasResolution(pc.RESOLUTION_AUTO);\n\n        const assetListLoader = new pc.AssetListLoader(\n            Object.values(assets),\n            app.assets\n        );\n        assetListLoader.load(() => {\n            app.start();\n\n            window.addEventListener("resize", function () {\n                app.resizeCanvas(canvas.width, canvas.height);\n            });\n\n            // Create a camera\n            const camera = new pc.Entity();\n            camera.addComponent("camera", {\n                clearColor: new pc.Color(30 / 255, 30 / 255, 30 / 255),\n            });\n            app.root.addChild(camera);\n\n            // Create a 2D screen\n            const screen = new pc.Entity();\n            screen.addComponent("screen", {\n                referenceResolution: new pc.Vec2(1280, 720),\n                scaleBlend: 0.5,\n                scaleMode: pc.SCALEMODE_BLEND,\n                screenSpace: true,\n            });\n            app.root.addChild(screen);\n\n            // Create the shader from the vertex and fragment shader\n            const shader = pc.createShaderFromCode(\n                app.graphicsDevice,\n                files["shader.vert"],\n                files["shader.frag"],\n                "myUIShader",\n                {\n                    vertex_position: pc.SEMANTIC_POSITION,\n                    vertex_texCoord0: pc.SEMANTIC_TEXCOORD0,\n                }\n            );\n\n            // Create a new material with the new shader and additive alpha blending\n            const material = new pc.Material();\n            material.shader = shader;\n            material.blendType = pc.BLEND_ADDITIVEALPHA;\n            material.depthWrite = true;\n            material.setParameter("uDiffuseMap", assets.playcanvas.resource);\n            material.update();\n\n            // Create the UI image element with the custom material\n            const entity = new pc.Entity();\n            entity.addComponent("element", {\n                pivot: new pc.Vec2(0.5, 0.5),\n                anchor: new pc.Vec4(0.5, 0.5, 0.5, 0.5),\n                width: 350,\n                height: 350,\n                type: pc.ELEMENTTYPE_IMAGE,\n            });\n            entity.element.material = material;\n            screen.addChild(entity);\n\n            // update the material\'s \'amount\' parameter to animate the inverse effect\n            let time = 0;\n            app.on("update", (dt) => {\n                time += dt;\n                // animate the amount as a sine wave varying from 0 to 1\n                material.setParameter("amount", (Math.sin(time * 4) + 1) * 0.5);\n            });\n        });\n    });\n}\n',nameSlug:"custom-shader",categorySlug:"user-interface",files:{"shader.vert":"\n/**\n * Simple Screen-Space Vertex Shader with one UV coordinate.\n * This shader is useful for simple UI shaders.\n * \n * Usage: the following attributes must be configured when creating a new pc.Shader:\n *   vertex_position: pc.SEMANTIC_POSITION\n *   vertex_texCoord0: pc.SEMANTIC_TEXCOORD0\n */\n\n// Default PlayCanvas uniforms\nuniform mat4 matrix_viewProjection;\nuniform mat4 matrix_model;\n\n// Additional inputs\nattribute vec3 vertex_position;\nattribute vec2 vertex_texCoord0;\n\n// Additional shader outputs\nvarying vec2 vUv0;\n\nvoid main(void) {\n    // UV is simply passed along as varying\n    vUv0 = vertex_texCoord0;\n\n    // Position for screen-space\n    gl_Position = matrix_model * vec4(vertex_position, 1.0);\n    gl_Position.zw = vec2(0.0, 1.0);\n}","shader.frag":"\n/**\n * Simple Color-Inverse Fragment Shader with intensity control.\n * \n * Usage: the following parameters must be set:\n *   uDiffuseMap: image texture.\n *   amount: float that controls the amount of the inverse-color effect. 0 means none (normal color), while 1 means full inverse.\n *\n * Additionally, the Vertex shader that is paired with this Fragment shader must specify:\n *   varying vec2 vUv0: for the UV.\n */\n\n// The following line is for setting the shader precision for floats. It is commented out because, ideally, it must be configured\n// on a per-device basis before loading the Shader. Please check the accompanying TypeScript code and look for 'app.graphicsDevice.precision'.\n\n// precision mediump float;\n\n// Additional varying from vertex shader\nvarying vec2 vUv0;\n\n// Custom Parameters (must be set from code via material.setParameter())\nuniform sampler2D uDiffuseMap;\nuniform float amount;\n\nvoid main(void)\n{\n    vec4 color = texture2D(uDiffuseMap, vUv0);\n    vec3 roloc = 1.0 - color.rgb;\n    gl_FragColor = vec4(mix(color.rgb, roloc, amount), color.a);\n}"}},"layout-group":{typeScriptFunction:"function example(canvas: HTMLCanvasElement, deviceType: string): void {\n\n    const assets = {\n        'font': new pc.Asset('font', 'font', { url: '/static/assets/fonts/courier.json' })\n    };\n\n    const gfxOptions = {\n        deviceTypes: [deviceType],\n        glslangUrl: '/static/lib/glslang/glslang.js',\n        twgslUrl: '/static/lib/twgsl/twgsl.js'\n    };\n\n    pc.createGraphicsDevice(canvas, gfxOptions).then((device: pc.GraphicsDevice) => {\n\n        const createOptions = new pc.AppOptions();\n        createOptions.graphicsDevice = device;\n        createOptions.mouse = new pc.Mouse(document.body);\n        createOptions.touch = new pc.TouchDevice(document.body);\n        createOptions.elementInput = new pc.ElementInput(canvas);\n\n        createOptions.componentSystems = [\n            // @ts-ignore\n            pc.RenderComponentSystem,\n            // @ts-ignore\n            pc.CameraComponentSystem,\n            // @ts-ignore\n            pc.ScreenComponentSystem,\n            // @ts-ignore\n            pc.ButtonComponentSystem,\n            // @ts-ignore\n            pc.ElementComponentSystem,\n            // @ts-ignore\n            pc.LayoutGroupComponentSystem,\n            // @ts-ignore\n            pc.LayoutChildComponentSystem\n        ];\n        createOptions.resourceHandlers = [\n            // @ts-ignore\n            pc.TextureHandler,\n            // @ts-ignore\n            pc.FontHandler\n        ];\n\n        const app = new pc.AppBase(canvas);\n        app.init(createOptions);\n\n        // Set the canvas to fill the window and automatically change resolution to be the same as the canvas size\n        app.setCanvasFillMode(pc.FILLMODE_FILL_WINDOW);\n        app.setCanvasResolution(pc.RESOLUTION_AUTO);\n\n        const assetListLoader = new pc.AssetListLoader(Object.values(assets), app.assets);\n        assetListLoader.load(() => {\n\n            app.start();\n\n            window.addEventListener(\"resize\", function () {\n                app.resizeCanvas(canvas.width, canvas.height);\n            });\n\n            // Create a camera\n            const camera = new pc.Entity();\n            camera.addComponent(\"camera\", {\n                clearColor: new pc.Color(30 / 255, 30 / 255, 30 / 255)\n            });\n            app.root.addChild(camera);\n\n            // Create a 2D screen\n            const screen = new pc.Entity();\n            screen.addComponent(\"screen\", {\n                referenceResolution: new pc.Vec2(1280, 720),\n                scaleBlend: 0.5,\n                scaleMode: pc.SCALEMODE_BLEND,\n                screenSpace: true\n            });\n            app.root.addChild(screen);\n\n            // Create Layout Group Entity\n            const group = new pc.Entity();\n            group.addComponent(\"element\", {\n                // a Layout Group needs a 'group' element component\n                type: pc.ELEMENTTYPE_GROUP,\n                anchor: [0.5, 0.5, 0.5, 0.5],\n                pivot: [0.5, 0.5],\n                // the element's width and height dictate the group's bounds\n                width: 350,\n                height: 150\n            });\n            group.addComponent(\"layoutgroup\", {\n                orientation: pc.ORIENTATION_HORIZONTAL,\n                spacing: new pc.Vec2(10, 10),\n                // fit_both for width and height, making all child elements take the entire space\n                widthFitting: pc.FITTING_BOTH,\n                heightFitting: pc.FITTING_BOTH,\n                // wrap children\n                wrap: true\n            });\n            screen.addChild(group);\n\n            // create 15 children to show off the layout group\n            for (let i = 0; i < 15; ++i) {\n                // create a random-colored panel\n                const child = new pc.Entity();\n                child.addComponent(\"element\", {\n                    anchor: [0.5, 0.5, 0.5, 0.5],\n                    pivot: [0.5, 0.5],\n                    color: new pc.Color(Math.random(), Math.random(), Math.random()),\n                    type: pc.ELEMENTTYPE_IMAGE\n                });\n                child.addComponent(\"layoutchild\", {\n                    excludeFromLayout: false\n                });\n                group.addChild(child);\n\n                // add a text label\n                const childLabel = new pc.Entity();\n                childLabel.addComponent(\"element\", {\n                    // center-position and attach to the borders of parent\n                    // meaning this text element will scale along with parent\n                    anchor: [0, 0, 1, 1],\n                    margin: [0, 0, 0, 0],\n                    pivot: [0.5, 0.5],\n                    color: new pc.Color(1, 1, 1),\n                    fontAsset: assets.font.id,\n                    text: `${i + 1}`,\n                    type: pc.ELEMENTTYPE_TEXT,\n                    // auto font size\n                    autoWidth: false,\n                    autoHeight: false,\n                    autoFitWidth: true,\n                    autoFitHeight: true\n                });\n                child.addChild(childLabel);\n            }\n        });\n    });\n}",javaScriptFunction:'function example(canvas, deviceType) {\n    const assets = {\n        font: new pc.Asset("font", "font", {\n            url: "/static/assets/fonts/courier.json",\n        }),\n    };\n\n    const gfxOptions = {\n        deviceTypes: [deviceType],\n        glslangUrl: "/static/lib/glslang/glslang.js",\n        twgslUrl: "/static/lib/twgsl/twgsl.js",\n    };\n\n    pc.createGraphicsDevice(canvas, gfxOptions).then((device) => {\n        const createOptions = new pc.AppOptions();\n        createOptions.graphicsDevice = device;\n        createOptions.mouse = new pc.Mouse(document.body);\n        createOptions.touch = new pc.TouchDevice(document.body);\n        createOptions.elementInput = new pc.ElementInput(canvas);\n\n        createOptions.componentSystems = [\n            // @ts-ignore\n            pc.RenderComponentSystem,\n            // @ts-ignore\n            pc.CameraComponentSystem,\n            // @ts-ignore\n            pc.ScreenComponentSystem,\n            // @ts-ignore\n            pc.ButtonComponentSystem,\n            // @ts-ignore\n            pc.ElementComponentSystem,\n            // @ts-ignore\n            pc.LayoutGroupComponentSystem,\n            // @ts-ignore\n            pc.LayoutChildComponentSystem,\n        ];\n\n        createOptions.resourceHandlers = [\n            // @ts-ignore\n            pc.TextureHandler,\n            // @ts-ignore\n            pc.FontHandler,\n        ];\n\n        const app = new pc.AppBase(canvas);\n        app.init(createOptions);\n\n        // Set the canvas to fill the window and automatically change resolution to be the same as the canvas size\n        app.setCanvasFillMode(pc.FILLMODE_FILL_WINDOW);\n        app.setCanvasResolution(pc.RESOLUTION_AUTO);\n\n        const assetListLoader = new pc.AssetListLoader(\n            Object.values(assets),\n            app.assets\n        );\n        assetListLoader.load(() => {\n            app.start();\n\n            window.addEventListener("resize", function () {\n                app.resizeCanvas(canvas.width, canvas.height);\n            });\n\n            // Create a camera\n            const camera = new pc.Entity();\n            camera.addComponent("camera", {\n                clearColor: new pc.Color(30 / 255, 30 / 255, 30 / 255),\n            });\n            app.root.addChild(camera);\n\n            // Create a 2D screen\n            const screen = new pc.Entity();\n            screen.addComponent("screen", {\n                referenceResolution: new pc.Vec2(1280, 720),\n                scaleBlend: 0.5,\n                scaleMode: pc.SCALEMODE_BLEND,\n                screenSpace: true,\n            });\n            app.root.addChild(screen);\n\n            // Create Layout Group Entity\n            const group = new pc.Entity();\n            group.addComponent("element", {\n                // a Layout Group needs a \'group\' element component\n                type: pc.ELEMENTTYPE_GROUP,\n                anchor: [0.5, 0.5, 0.5, 0.5],\n                pivot: [0.5, 0.5],\n                // the element\'s width and height dictate the group\'s bounds\n                width: 350,\n                height: 150,\n            });\n            group.addComponent("layoutgroup", {\n                orientation: pc.ORIENTATION_HORIZONTAL,\n                spacing: new pc.Vec2(10, 10),\n                // fit_both for width and height, making all child elements take the entire space\n                widthFitting: pc.FITTING_BOTH,\n                heightFitting: pc.FITTING_BOTH,\n                // wrap children\n                wrap: true,\n            });\n            screen.addChild(group);\n\n            // create 15 children to show off the layout group\n            for (let i = 0; i < 15; ++i) {\n                // create a random-colored panel\n                const child = new pc.Entity();\n                child.addComponent("element", {\n                    anchor: [0.5, 0.5, 0.5, 0.5],\n                    pivot: [0.5, 0.5],\n                    color: new pc.Color(\n                        Math.random(),\n                        Math.random(),\n                        Math.random()\n                    ),\n                    type: pc.ELEMENTTYPE_IMAGE,\n                });\n                child.addComponent("layoutchild", {\n                    excludeFromLayout: false,\n                });\n                group.addChild(child);\n\n                // add a text label\n                const childLabel = new pc.Entity();\n                childLabel.addComponent("element", {\n                    // center-position and attach to the borders of parent\n                    // meaning this text element will scale along with parent\n                    anchor: [0, 0, 1, 1],\n                    margin: [0, 0, 0, 0],\n                    pivot: [0.5, 0.5],\n                    color: new pc.Color(1, 1, 1),\n                    fontAsset: assets.font.id,\n                    text: `${i + 1}`,\n                    type: pc.ELEMENTTYPE_TEXT,\n                    // auto font size\n                    autoWidth: false,\n                    autoHeight: false,\n                    autoFitWidth: true,\n                    autoFitHeight: true,\n                });\n                child.addChild(childLabel);\n            }\n        });\n    });\n}\n',nameSlug:"layout-group",categorySlug:"user-interface"},"particle-system":{typeScriptFunction:"function example(canvas: HTMLCanvasElement, deviceType: string): void {\n\n    const assets = {\n        'font': new pc.Asset('font', 'font', { url: '/static/assets/fonts/courier.json' }),\n        'spark': new pc.Asset('spark', 'texture', { url: '/static/assets/textures/spark.png' })\n    };\n\n    const gfxOptions = {\n        deviceTypes: [deviceType],\n        glslangUrl: '/static/lib/glslang/glslang.js',\n        twgslUrl: '/static/lib/twgsl/twgsl.js'\n    };\n\n    pc.createGraphicsDevice(canvas, gfxOptions).then((device: pc.GraphicsDevice) => {\n\n        const createOptions = new pc.AppOptions();\n        createOptions.graphicsDevice = device;\n        createOptions.mouse = new pc.Mouse(document.body);\n        createOptions.touch = new pc.TouchDevice(document.body);\n        createOptions.elementInput = new pc.ElementInput(canvas);\n\n        createOptions.componentSystems = [\n            // @ts-ignore\n            pc.RenderComponentSystem,\n            // @ts-ignore\n            pc.CameraComponentSystem,\n            // @ts-ignore\n            pc.ScreenComponentSystem,\n            // @ts-ignore\n            pc.ButtonComponentSystem,\n            // @ts-ignore\n            pc.ElementComponentSystem,\n            // @ts-ignore\n            pc.ParticleSystemComponentSystem\n        ];\n        createOptions.resourceHandlers = [\n            // @ts-ignore\n            pc.TextureHandler,\n            // @ts-ignore\n            pc.FontHandler\n        ];\n\n        const app = new pc.AppBase(canvas);\n        app.init(createOptions);\n\n        // Set the canvas to fill the window and automatically change resolution to be the same as the canvas size\n        app.setCanvasFillMode(pc.FILLMODE_FILL_WINDOW);\n        app.setCanvasResolution(pc.RESOLUTION_AUTO);\n\n        const assetListLoader = new pc.AssetListLoader(Object.values(assets), app.assets);\n        assetListLoader.load(() => {\n\n            app.start();\n\n            window.addEventListener(\"resize\", function () {\n                app.resizeCanvas(canvas.width, canvas.height);\n            });\n\n            // Create a camera\n            const camera = new pc.Entity();\n            camera.addComponent(\"camera\", {\n                clearColor: new pc.Color(30 / 255, 30 / 255, 30 / 255)\n            });\n            app.root.addChild(camera);\n\n            // Create a 2D screen\n            const screen = new pc.Entity();\n            screen.addComponent(\"screen\", {\n                referenceResolution: new pc.Vec2(1280, 720),\n                scaleBlend: 0.5,\n                scaleMode: pc.SCALEMODE_BLEND,\n                screenSpace: true\n            });\n            app.root.addChild(screen);\n\n            // Create a simple panel\n            const panel = new pc.Entity();\n            panel.addComponent(\"element\", {\n                anchor: [0.5, 0.5, 0.5, 0.5],\n                color: new pc.Color(0.4, 0.4, 0.4),\n                height: 40,\n                pivot: [0.5, 0.5],\n                type: pc.ELEMENTTYPE_IMAGE,\n                width: 175,\n                useInput: true\n            });\n            screen.addChild(panel);\n\n            // Create a label for the panel\n            const label = new pc.Entity();\n            label.addComponent(\"element\", {\n                anchor: [0.5, 0.5, 0.5, 0.5],\n                color: new pc.Color(1, 1, 0),\n                fontAsset: assets.font.id,\n                fontSize: 36,\n                height: 64,\n                pivot: [0.5, 0.5],\n                text: \"LABEL\",\n                type: pc.ELEMENTTYPE_TEXT,\n                width: 128,\n                wrapLines: true\n            });\n            panel.addChild(label);\n\n            // Create entity for particle system\n            const particles = new pc.Entity();\n\n            // insert sparks as a child of the panel, but before Label - that is the order for rendering\n            panel.insertChild(particles, 0);\n\n            // particles will render in UI layer\n            const UILayer = app.scene.layers.getLayerByName(\"UI\");\n\n            // particle size\n            const scaleCurve = new pc.Curve(\n                [0, 0.03]\n            );\n\n            // color changes throughout lifetime\n            const colorCurve = new pc.CurveSet([\n                [0, 1, 0.25, 1, 0.375, 0.5, 0.5, 0],\n                [0, 0, 0.125, 0.25, 0.25, 0.5, 0.375, 0.75, 0.5, 1],\n                [0, 0, 1, 0]\n            ]);\n\n            // increasing gravity to get them to move\n            const worldVelocityCurve = new pc.CurveSet([\n                [0, 0],\n                [0, 0, 0.1, 0.1, 0.1, -0.1],\n                [0, 0]\n            ]);\n\n            // rotate sparks 360 degrees per second\n            const angleCurve = new pc.Curve(\n                [0, 360]\n            );\n\n            // when texture is loaded add particlesystem component to entity\n            particles.addComponent(\"particlesystem\", {\n                numParticles: 100,\n                lifetime: 1,\n                rate: 0.01,\n\n                // make them follow the buttn in screen-space\n                localSpace: true,\n                screenSpace: true,\n\n                emitterShape: pc.EMITTERSHAPE_SPHERE,\n                emitterRadius: 100,\n\n                scaleGraph: scaleCurve,\n                rotationSpeedGraph: angleCurve,\n                colorGraph: colorCurve,\n                velocityGraph: worldVelocityCurve,\n\n                colorMap: assets.spark.resource,\n                layers: [UILayer.id]\n            });\n\n            // sort all screen elements\n            screen.screen.syncDrawOrder();\n\n            let time = 0;\n            app.on(\"update\", function (dt) {\n                time += dt * 0.3;\n\n                // move buttons along the circular path\n                panel.setLocalPosition(300 * Math.sin(time), 300 * Math.cos(time), 0);\n            });\n        });\n    });\n}",javaScriptFunction:'function example(canvas, deviceType) {\n    const assets = {\n        font: new pc.Asset("font", "font", {\n            url: "/static/assets/fonts/courier.json",\n        }),\n        spark: new pc.Asset("spark", "texture", {\n            url: "/static/assets/textures/spark.png",\n        }),\n    };\n\n    const gfxOptions = {\n        deviceTypes: [deviceType],\n        glslangUrl: "/static/lib/glslang/glslang.js",\n        twgslUrl: "/static/lib/twgsl/twgsl.js",\n    };\n\n    pc.createGraphicsDevice(canvas, gfxOptions).then((device) => {\n        const createOptions = new pc.AppOptions();\n        createOptions.graphicsDevice = device;\n        createOptions.mouse = new pc.Mouse(document.body);\n        createOptions.touch = new pc.TouchDevice(document.body);\n        createOptions.elementInput = new pc.ElementInput(canvas);\n\n        createOptions.componentSystems = [\n            // @ts-ignore\n            pc.RenderComponentSystem,\n            // @ts-ignore\n            pc.CameraComponentSystem,\n            // @ts-ignore\n            pc.ScreenComponentSystem,\n            // @ts-ignore\n            pc.ButtonComponentSystem,\n            // @ts-ignore\n            pc.ElementComponentSystem,\n            // @ts-ignore\n            pc.ParticleSystemComponentSystem,\n        ];\n\n        createOptions.resourceHandlers = [\n            // @ts-ignore\n            pc.TextureHandler,\n            // @ts-ignore\n            pc.FontHandler,\n        ];\n\n        const app = new pc.AppBase(canvas);\n        app.init(createOptions);\n\n        // Set the canvas to fill the window and automatically change resolution to be the same as the canvas size\n        app.setCanvasFillMode(pc.FILLMODE_FILL_WINDOW);\n        app.setCanvasResolution(pc.RESOLUTION_AUTO);\n\n        const assetListLoader = new pc.AssetListLoader(\n            Object.values(assets),\n            app.assets\n        );\n        assetListLoader.load(() => {\n            app.start();\n\n            window.addEventListener("resize", function () {\n                app.resizeCanvas(canvas.width, canvas.height);\n            });\n\n            // Create a camera\n            const camera = new pc.Entity();\n            camera.addComponent("camera", {\n                clearColor: new pc.Color(30 / 255, 30 / 255, 30 / 255),\n            });\n            app.root.addChild(camera);\n\n            // Create a 2D screen\n            const screen = new pc.Entity();\n            screen.addComponent("screen", {\n                referenceResolution: new pc.Vec2(1280, 720),\n                scaleBlend: 0.5,\n                scaleMode: pc.SCALEMODE_BLEND,\n                screenSpace: true,\n            });\n            app.root.addChild(screen);\n\n            // Create a simple panel\n            const panel = new pc.Entity();\n            panel.addComponent("element", {\n                anchor: [0.5, 0.5, 0.5, 0.5],\n                color: new pc.Color(0.4, 0.4, 0.4),\n                height: 40,\n                pivot: [0.5, 0.5],\n                type: pc.ELEMENTTYPE_IMAGE,\n                width: 175,\n                useInput: true,\n            });\n            screen.addChild(panel);\n\n            // Create a label for the panel\n            const label = new pc.Entity();\n            label.addComponent("element", {\n                anchor: [0.5, 0.5, 0.5, 0.5],\n                color: new pc.Color(1, 1, 0),\n                fontAsset: assets.font.id,\n                fontSize: 36,\n                height: 64,\n                pivot: [0.5, 0.5],\n                text: "LABEL",\n                type: pc.ELEMENTTYPE_TEXT,\n                width: 128,\n                wrapLines: true,\n            });\n            panel.addChild(label);\n\n            // Create entity for particle system\n            const particles = new pc.Entity();\n\n            // insert sparks as a child of the panel, but before Label - that is the order for rendering\n            panel.insertChild(particles, 0);\n\n            // particles will render in UI layer\n            const UILayer = app.scene.layers.getLayerByName("UI");\n\n            // particle size\n            const scaleCurve = new pc.Curve([0, 0.03]);\n\n            // color changes throughout lifetime\n            const colorCurve = new pc.CurveSet([\n                [0, 1, 0.25, 1, 0.375, 0.5, 0.5, 0],\n                [0, 0, 0.125, 0.25, 0.25, 0.5, 0.375, 0.75, 0.5, 1],\n                [0, 0, 1, 0],\n            ]);\n\n            // increasing gravity to get them to move\n            const worldVelocityCurve = new pc.CurveSet([\n                [0, 0],\n                [0, 0, 0.1, 0.1, 0.1, -0.1],\n                [0, 0],\n            ]);\n\n            // rotate sparks 360 degrees per second\n            const angleCurve = new pc.Curve([0, 360]);\n\n            // when texture is loaded add particlesystem component to entity\n            particles.addComponent("particlesystem", {\n                numParticles: 100,\n                lifetime: 1,\n                rate: 0.01,\n\n                // make them follow the buttn in screen-space\n                localSpace: true,\n                screenSpace: true,\n\n                emitterShape: pc.EMITTERSHAPE_SPHERE,\n                emitterRadius: 100,\n\n                scaleGraph: scaleCurve,\n                rotationSpeedGraph: angleCurve,\n                colorGraph: colorCurve,\n                velocityGraph: worldVelocityCurve,\n\n                colorMap: assets.spark.resource,\n                layers: [UILayer.id],\n            });\n\n            // sort all screen elements\n            screen.screen.syncDrawOrder();\n\n            let time = 0;\n            app.on("update", function (dt) {\n                time += dt * 0.3;\n\n                // move buttons along the circular path\n                panel.setLocalPosition(\n                    300 * Math.sin(time),\n                    300 * Math.cos(time),\n                    0\n                );\n            });\n        });\n    });\n}\n',nameSlug:"particle-system",categorySlug:"user-interface"},"scroll-view":{typeScriptFunction:"function example(canvas: HTMLCanvasElement, deviceType: string): void {\n\n    const assets = {\n        'font': new pc.Asset('font', 'font', { url: '/static/assets/fonts/courier.json' })\n    };\n\n    const gfxOptions = {\n        deviceTypes: [deviceType],\n        glslangUrl: '/static/lib/glslang/glslang.js',\n        twgslUrl: '/static/lib/twgsl/twgsl.js'\n    };\n\n    pc.createGraphicsDevice(canvas, gfxOptions).then((device: pc.GraphicsDevice) => {\n\n        const createOptions = new pc.AppOptions();\n        createOptions.graphicsDevice = device;\n        createOptions.mouse = new pc.Mouse(document.body);\n        createOptions.touch = new pc.TouchDevice(document.body);\n        createOptions.elementInput = new pc.ElementInput(canvas);\n\n        createOptions.componentSystems = [\n            // @ts-ignore\n            pc.RenderComponentSystem,\n            // @ts-ignore\n            pc.CameraComponentSystem,\n            // @ts-ignore\n            pc.ScreenComponentSystem,\n            // @ts-ignore\n            pc.ButtonComponentSystem,\n            // @ts-ignore\n            pc.ElementComponentSystem,\n            // @ts-ignore\n            pc.LayoutGroupComponentSystem,\n            // @ts-ignore\n            pc.ScrollViewComponentSystem,\n            // @ts-ignore\n            pc.ScrollbarComponentSystem\n        ];\n        createOptions.resourceHandlers = [\n            // @ts-ignore\n            pc.TextureHandler,\n            // @ts-ignore\n            pc.FontHandler\n        ];\n\n        const app = new pc.AppBase(canvas);\n        app.init(createOptions);\n\n        // Set the canvas to fill the window and automatically change resolution to be the same as the canvas size\n        app.setCanvasFillMode(pc.FILLMODE_FILL_WINDOW);\n        app.setCanvasResolution(pc.RESOLUTION_AUTO);\n\n        const assetListLoader = new pc.AssetListLoader(Object.values(assets), app.assets);\n        assetListLoader.load(() => {\n\n            app.start();\n\n            // Create a camera\n            const camera = new pc.Entity();\n            app.root.addChild(camera);\n\n            camera.addComponent(\"camera\", {\n                clearColor: new pc.Color(30 / 255, 30 / 255, 30 / 255)\n            });\n\n            // Create a 2D screen\n            const screen = new pc.Entity();\n            app.root.addChild(screen);\n\n            screen.addComponent(\"screen\", {\n                screenSpace: true,\n                referenceResolution: new pc.Vec2(1280, 720),\n                scaleMode: pc.SCALEMODE_BLEND,\n                scaleBlend: 0.5\n            });\n\n            function createScrollbar(horizontal: boolean) {\n                const handle = new pc.Entity('Handle');\n                const handleOptions = {\n                    type: pc.ELEMENTTYPE_IMAGE,\n                    color: new pc.Color(1, 1, 1),\n                    opacity: 1,\n                    margin: new pc.Vec4(0, 0, 0, 0),\n                    rect: new pc.Vec4(0, 0, 1, 1),\n                    mask: false,\n                    useInput: true\n                };\n                if (horizontal) {\n                    // @ts-ignore engine-tsd\n                    handleOptions.anchor = new pc.Vec4(0, 0, 0, 1);  // Split in Y\n                    // @ts-ignore engine-tsd\n                    handleOptions.pivot = new pc.Vec2(0, 0);         // Bottom left\n                } else {\n                    // @ts-ignore engine-tsd\n                    handleOptions.anchor = new pc.Vec4(0, 1, 1, 1);  // Split in X\n                    // @ts-ignore engine-tsd\n                    handleOptions.pivot = new pc.Vec2(1, 1);         // Top right\n                }\n                handle.addComponent('element', handleOptions);\n                handle.addComponent('button', {\n                    active: true,\n                    imageEntity: handle,\n                    hitPadding: new pc.Vec4(0, 0, 0, 0),\n                    transitionMode: pc.BUTTON_TRANSITION_MODE_TINT,\n                    hoverTint: new pc.Color(1, 1, 1),\n                    pressedTint: new pc.Color(1, 1, 1),\n                    inactiveTint: new pc.Color(1, 1, 1),\n                    fadeDuration: 0\n                });\n\n                const scrollbar = new pc.Entity(horizontal ? 'HorizontalScrollbar' : 'VerticalScrollbar');\n\n                scrollbar.addChild(handle);\n\n                const scrollbarOptions = {\n                    type: pc.ELEMENTTYPE_IMAGE,\n                    color: new pc.Color(0.5, 0.5, 0.5),\n                    opacity: 1,\n                    rect: new pc.Vec4(0, 0, 1, 1),\n                    mask: false,\n                    useInput: false\n                };\n\n                const scrollbarSize = 20;\n\n                if (horizontal) {\n                    // @ts-ignore engine-tsd\n                    scrollbarOptions.anchor = new pc.Vec4(0, 0, 1, 0);\n                    // @ts-ignore engine-tsd\n                    scrollbarOptions.pivot = new pc.Vec2(0, 0);\n                    // @ts-ignore engine-tsd\n                    scrollbarOptions.margin = new pc.Vec4(0, 0, scrollbarSize, -scrollbarSize);\n                } else {\n                    // @ts-ignore engine-tsd\n                    scrollbarOptions.anchor = new pc.Vec4(1, 0, 1, 1);\n                    // @ts-ignore engine-tsd\n                    scrollbarOptions.pivot = new pc.Vec2(1, 1);\n                    // @ts-ignore engine-tsd\n                    scrollbarOptions.margin = new pc.Vec4(-scrollbarSize, scrollbarSize, 0, 0);\n                }\n                scrollbar.addComponent('element', scrollbarOptions);\n                scrollbar.addComponent('scrollbar', {\n                    orientation: horizontal ? pc.ORIENTATION_HORIZONTAL : pc.ORIENTATION_VERTICAL,\n                    value: 0,\n                    handleSize: 0.5,\n                    handleEntity: handle\n                });\n\n                return scrollbar;\n            }\n\n            // Create some text content\n            const text = new pc.Entity(\"Text\");\n            text.addComponent(\"element\", {\n                alignment: new pc.Vec2(0, 0),\n                anchor: new pc.Vec4(0, 1, 0, 1),\n                autoHeight: true,\n                autoWidth: false,\n                fontAsset: assets.font.id,\n                fontSize: 32,\n                lineHeight: 36,\n                pivot: new pc.Vec2(0, 1),\n                text: \"This is a scroll view control. You can scroll the content by dragging the vertical \" +\n                        \"or horizontal scroll bars, by dragging the content itself, by using the mouse wheel, or \" +\n                        \"by using a trackpad. Notice the elastic bounce if you drag the content beyond the \" +\n                        \"limits of the scroll view.\",\n                type: pc.ELEMENTTYPE_TEXT,\n                width: 600,\n                wrapLines: true\n            });\n\n            // Group to hold the content inside the scroll view's viewport\n            const content = new pc.Entity('Content');\n            content.addChild(text);\n\n            content.addComponent('element', {\n                anchor: new pc.Vec4(0, 1, 0, 1),\n                height: 400,\n                pivot: new pc.Vec2(0, 1),\n                type: pc.ELEMENTTYPE_GROUP,\n                useInput: true,\n                width: 600\n            });\n\n            // Scroll view viewport\n            const viewport = new pc.Entity('Viewport');\n            viewport.addChild(content);\n\n            viewport.addComponent('element', {\n                anchor: new pc.Vec4(0, 0, 1, 1),\n                color: new pc.Color(0.2, 0.2, 0.2),\n                margin: new pc.Vec4(0, 20, 20, 0),\n                mask: true,\n                opacity: 1,\n                pivot: new pc.Vec2(0, 1),\n                rect: new pc.Vec4(0, 0, 1, 1),\n                type: pc.ELEMENTTYPE_IMAGE,\n                useInput: false\n            });\n\n            const horizontalScrollbar = createScrollbar(true);\n            const verticalScrollbar = createScrollbar(false);\n\n            // Create a scroll view\n            const scrollview = new pc.Entity('ScrollView');\n            scrollview.addChild(viewport);\n            scrollview.addChild(horizontalScrollbar);\n            scrollview.addChild(verticalScrollbar);\n\n            // You must add the scrollview entity to the hierarchy BEFORE adding the scrollview component\n            screen.addChild(scrollview);\n\n            scrollview.addComponent('element', {\n                anchor: new pc.Vec4(0.5, 0.5, 0.5, 0.5),\n                height: 200,\n                pivot: new pc.Vec2(0.5, 0.5),\n                type: pc.ELEMENTTYPE_GROUP,\n                useInput: false,\n                width: 400\n            });\n\n            scrollview.addComponent('scrollview', {\n                bounceAmount: 0.1,\n                contentEntity: content,\n                friction: 0.05,\n                useMouseWheel: true,\n                mouseWheelSensitivity: pc.Vec2.ONE,\n                horizontal: true,\n                horizontalScrollbarEntity: horizontalScrollbar,\n                horizontalScrollbarVisibility: pc.SCROLLBAR_VISIBILITY_SHOW_WHEN_REQUIRED,\n                scrollMode: pc.SCROLL_MODE_BOUNCE,\n                vertical: true,\n                verticalScrollbarEntity: verticalScrollbar,\n                verticalScrollbarVisibility: pc.SCROLLBAR_VISIBILITY_SHOW_WHEN_REQUIRED,\n                viewportEntity: viewport\n            });\n        });\n    });\n}",javaScriptFunction:'function example(canvas, deviceType) {\n    const assets = {\n        font: new pc.Asset("font", "font", {\n            url: "/static/assets/fonts/courier.json",\n        }),\n    };\n\n    const gfxOptions = {\n        deviceTypes: [deviceType],\n        glslangUrl: "/static/lib/glslang/glslang.js",\n        twgslUrl: "/static/lib/twgsl/twgsl.js",\n    };\n\n    pc.createGraphicsDevice(canvas, gfxOptions).then((device) => {\n        const createOptions = new pc.AppOptions();\n        createOptions.graphicsDevice = device;\n        createOptions.mouse = new pc.Mouse(document.body);\n        createOptions.touch = new pc.TouchDevice(document.body);\n        createOptions.elementInput = new pc.ElementInput(canvas);\n\n        createOptions.componentSystems = [\n            // @ts-ignore\n            pc.RenderComponentSystem,\n            // @ts-ignore\n            pc.CameraComponentSystem,\n            // @ts-ignore\n            pc.ScreenComponentSystem,\n            // @ts-ignore\n            pc.ButtonComponentSystem,\n            // @ts-ignore\n            pc.ElementComponentSystem,\n            // @ts-ignore\n            pc.LayoutGroupComponentSystem,\n            // @ts-ignore\n            pc.ScrollViewComponentSystem,\n            // @ts-ignore\n            pc.ScrollbarComponentSystem,\n        ];\n\n        createOptions.resourceHandlers = [\n            // @ts-ignore\n            pc.TextureHandler,\n            // @ts-ignore\n            pc.FontHandler,\n        ];\n\n        const app = new pc.AppBase(canvas);\n        app.init(createOptions);\n\n        // Set the canvas to fill the window and automatically change resolution to be the same as the canvas size\n        app.setCanvasFillMode(pc.FILLMODE_FILL_WINDOW);\n        app.setCanvasResolution(pc.RESOLUTION_AUTO);\n\n        const assetListLoader = new pc.AssetListLoader(\n            Object.values(assets),\n            app.assets\n        );\n        assetListLoader.load(() => {\n            app.start();\n\n            // Create a camera\n            const camera = new pc.Entity();\n            app.root.addChild(camera);\n\n            camera.addComponent("camera", {\n                clearColor: new pc.Color(30 / 255, 30 / 255, 30 / 255),\n            });\n\n            // Create a 2D screen\n            const screen = new pc.Entity();\n            app.root.addChild(screen);\n\n            screen.addComponent("screen", {\n                screenSpace: true,\n                referenceResolution: new pc.Vec2(1280, 720),\n                scaleMode: pc.SCALEMODE_BLEND,\n                scaleBlend: 0.5,\n            });\n\n            function createScrollbar(horizontal) {\n                const handle = new pc.Entity("Handle");\n                const handleOptions = {\n                    type: pc.ELEMENTTYPE_IMAGE,\n                    color: new pc.Color(1, 1, 1),\n                    opacity: 1,\n                    margin: new pc.Vec4(0, 0, 0, 0),\n                    rect: new pc.Vec4(0, 0, 1, 1),\n                    mask: false,\n                    useInput: true,\n                };\n                if (horizontal) {\n                    // @ts-ignore engine-tsd\n                    handleOptions.anchor = new pc.Vec4(0, 0, 0, 1); // Split in Y\n                    // @ts-ignore engine-tsd\n                    handleOptions.pivot = new pc.Vec2(0, 0); // Bottom left\n                } else {\n                    // @ts-ignore engine-tsd\n                    handleOptions.anchor = new pc.Vec4(0, 1, 1, 1); // Split in X\n                    // @ts-ignore engine-tsd\n                    handleOptions.pivot = new pc.Vec2(1, 1); // Top right\n                }\n                handle.addComponent("element", handleOptions);\n                handle.addComponent("button", {\n                    active: true,\n                    imageEntity: handle,\n                    hitPadding: new pc.Vec4(0, 0, 0, 0),\n                    transitionMode: pc.BUTTON_TRANSITION_MODE_TINT,\n                    hoverTint: new pc.Color(1, 1, 1),\n                    pressedTint: new pc.Color(1, 1, 1),\n                    inactiveTint: new pc.Color(1, 1, 1),\n                    fadeDuration: 0,\n                });\n\n                const scrollbar = new pc.Entity(\n                    horizontal ? "HorizontalScrollbar" : "VerticalScrollbar"\n                );\n\n                scrollbar.addChild(handle);\n\n                const scrollbarOptions = {\n                    type: pc.ELEMENTTYPE_IMAGE,\n                    color: new pc.Color(0.5, 0.5, 0.5),\n                    opacity: 1,\n                    rect: new pc.Vec4(0, 0, 1, 1),\n                    mask: false,\n                    useInput: false,\n                };\n\n                const scrollbarSize = 20;\n\n                if (horizontal) {\n                    // @ts-ignore engine-tsd\n                    scrollbarOptions.anchor = new pc.Vec4(0, 0, 1, 0);\n                    // @ts-ignore engine-tsd\n                    scrollbarOptions.pivot = new pc.Vec2(0, 0);\n                    // @ts-ignore engine-tsd\n                    scrollbarOptions.margin = new pc.Vec4(\n                        0,\n                        0,\n                        scrollbarSize,\n                        -scrollbarSize\n                    );\n                } else {\n                    // @ts-ignore engine-tsd\n                    scrollbarOptions.anchor = new pc.Vec4(1, 0, 1, 1);\n                    // @ts-ignore engine-tsd\n                    scrollbarOptions.pivot = new pc.Vec2(1, 1);\n                    // @ts-ignore engine-tsd\n                    scrollbarOptions.margin = new pc.Vec4(\n                        -scrollbarSize,\n                        scrollbarSize,\n                        0,\n                        0\n                    );\n                }\n                scrollbar.addComponent("element", scrollbarOptions);\n                scrollbar.addComponent("scrollbar", {\n                    orientation: horizontal\n                        ? pc.ORIENTATION_HORIZONTAL\n                        : pc.ORIENTATION_VERTICAL,\n                    value: 0,\n                    handleSize: 0.5,\n                    handleEntity: handle,\n                });\n\n                return scrollbar;\n            }\n\n            // Create some text content\n            const text = new pc.Entity("Text");\n            text.addComponent("element", {\n                alignment: new pc.Vec2(0, 0),\n                anchor: new pc.Vec4(0, 1, 0, 1),\n                autoHeight: true,\n                autoWidth: false,\n                fontAsset: assets.font.id,\n                fontSize: 32,\n                lineHeight: 36,\n                pivot: new pc.Vec2(0, 1),\n                text:\n                    "This is a scroll view control. You can scroll the content by dragging the vertical " +\n                    "or horizontal scroll bars, by dragging the content itself, by using the mouse wheel, or " +\n                    "by using a trackpad. Notice the elastic bounce if you drag the content beyond the " +\n                    "limits of the scroll view.",\n                type: pc.ELEMENTTYPE_TEXT,\n                width: 600,\n                wrapLines: true,\n            });\n\n            // Group to hold the content inside the scroll view\'s viewport\n            const content = new pc.Entity("Content");\n            content.addChild(text);\n\n            content.addComponent("element", {\n                anchor: new pc.Vec4(0, 1, 0, 1),\n                height: 400,\n                pivot: new pc.Vec2(0, 1),\n                type: pc.ELEMENTTYPE_GROUP,\n                useInput: true,\n                width: 600,\n            });\n\n            // Scroll view viewport\n            const viewport = new pc.Entity("Viewport");\n            viewport.addChild(content);\n\n            viewport.addComponent("element", {\n                anchor: new pc.Vec4(0, 0, 1, 1),\n                color: new pc.Color(0.2, 0.2, 0.2),\n                margin: new pc.Vec4(0, 20, 20, 0),\n                mask: true,\n                opacity: 1,\n                pivot: new pc.Vec2(0, 1),\n                rect: new pc.Vec4(0, 0, 1, 1),\n                type: pc.ELEMENTTYPE_IMAGE,\n                useInput: false,\n            });\n\n            const horizontalScrollbar = createScrollbar(true);\n            const verticalScrollbar = createScrollbar(false);\n\n            // Create a scroll view\n            const scrollview = new pc.Entity("ScrollView");\n            scrollview.addChild(viewport);\n            scrollview.addChild(horizontalScrollbar);\n            scrollview.addChild(verticalScrollbar);\n\n            // You must add the scrollview entity to the hierarchy BEFORE adding the scrollview component\n            screen.addChild(scrollview);\n\n            scrollview.addComponent("element", {\n                anchor: new pc.Vec4(0.5, 0.5, 0.5, 0.5),\n                height: 200,\n                pivot: new pc.Vec2(0.5, 0.5),\n                type: pc.ELEMENTTYPE_GROUP,\n                useInput: false,\n                width: 400,\n            });\n\n            scrollview.addComponent("scrollview", {\n                bounceAmount: 0.1,\n                contentEntity: content,\n                friction: 0.05,\n                useMouseWheel: true,\n                mouseWheelSensitivity: pc.Vec2.ONE,\n                horizontal: true,\n                horizontalScrollbarEntity: horizontalScrollbar,\n                horizontalScrollbarVisibility:\n                    pc.SCROLLBAR_VISIBILITY_SHOW_WHEN_REQUIRED,\n                scrollMode: pc.SCROLL_MODE_BOUNCE,\n                vertical: true,\n                verticalScrollbarEntity: verticalScrollbar,\n                verticalScrollbarVisibility:\n                    pc.SCROLLBAR_VISIBILITY_SHOW_WHEN_REQUIRED,\n                viewportEntity: viewport,\n            });\n        });\n    });\n}\n',nameSlug:"scroll-view",categorySlug:"user-interface"},"text-auto-font-size":{typeScriptFunction:"function example(canvas: HTMLCanvasElement, deviceType: string): void {\n\n    const assets = {\n        'font': new pc.Asset('font', 'font', { url: '/static/assets/fonts/courier.json' })\n    };\n\n    const gfxOptions = {\n        deviceTypes: [deviceType],\n        glslangUrl: '/static/lib/glslang/glslang.js',\n        twgslUrl: '/static/lib/twgsl/twgsl.js'\n    };\n\n    pc.createGraphicsDevice(canvas, gfxOptions).then((device: pc.GraphicsDevice) => {\n\n        const createOptions = new pc.AppOptions();\n        createOptions.graphicsDevice = device;\n        createOptions.mouse = new pc.Mouse(document.body);\n        createOptions.touch = new pc.TouchDevice(document.body);\n        createOptions.elementInput = new pc.ElementInput(canvas);\n\n        createOptions.componentSystems = [\n            // @ts-ignore\n            pc.RenderComponentSystem,\n            // @ts-ignore\n            pc.CameraComponentSystem,\n            // @ts-ignore\n            pc.ScreenComponentSystem,\n            // @ts-ignore\n            pc.ButtonComponentSystem,\n            // @ts-ignore\n            pc.ElementComponentSystem,\n            // @ts-ignore\n            pc.LayoutGroupComponentSystem,\n            // @ts-ignore\n            pc.ScrollViewComponentSystem,\n            // @ts-ignore\n            pc.ScrollbarComponentSystem\n        ];\n        createOptions.resourceHandlers = [\n            // @ts-ignore\n            pc.TextureHandler,\n            // @ts-ignore\n            pc.FontHandler\n        ];\n\n        const app = new pc.AppBase(canvas);\n        app.init(createOptions);\n\n        // Set the canvas to fill the window and automatically change resolution to be the same as the canvas size\n        app.setCanvasFillMode(pc.FILLMODE_FILL_WINDOW);\n        app.setCanvasResolution(pc.RESOLUTION_AUTO);\n\n        const assetListLoader = new pc.AssetListLoader(Object.values(assets), app.assets);\n        assetListLoader.load(() => {\n\n            app.start();\n\n            window.addEventListener(\"resize\", function () {\n                app.resizeCanvas(canvas.width, canvas.height);\n            });\n\n            // Create a camera\n            const camera = new pc.Entity();\n            camera.addComponent(\"camera\", {\n                clearColor: new pc.Color(30 / 255, 30 / 255, 30 / 255)\n            });\n            app.root.addChild(camera);\n\n            // Create a 2D screen\n            const screen = new pc.Entity();\n            screen.addComponent(\"screen\", {\n                referenceResolution: new pc.Vec2(1280, 720),\n                scaleBlend: 0.5,\n                scaleMode: pc.SCALEMODE_BLEND,\n                screenSpace: true\n            });\n            app.root.addChild(screen);\n\n            // Create a container entity with an image component\n            const autoFontSizeContainer = new pc.Entity();\n            autoFontSizeContainer.addComponent(\"element\", {\n                pivot: new pc.Vec2(0.5, 0.5),\n                anchor: new pc.Vec4(0.5, 0.5, 0.5, 0.5),\n                width: 220,\n                height: 50,\n                color: new pc.Color(60 / 255, 60 / 255, 60 / 255),\n                type: pc.ELEMENTTYPE_IMAGE\n            });\n            // Create a text element with auto font size, and place it inside the container\n            const autoFontSizeText = new pc.Entity();\n            autoFontSizeText.addComponent(\"element\", {\n                // place the text taking the entire parent space\n                pivot: new pc.Vec2(0.5, 0.5),\n                anchor: new pc.Vec4(0, 0, 1, 1),\n                margin: new pc.Vec4(0, 0, 0, 0),\n                fontAsset: assets.font.id,\n                autoWidth: false,\n                autoHeight: false,\n                autoFitWidth: true,\n                autoFitHeight: true,\n                minFontSize: 10,\n                maxFontSize: 100,\n                text: \"Auto font size!\",\n                type: pc.ELEMENTTYPE_TEXT\n            });\n            screen.addChild(autoFontSizeContainer);\n            autoFontSizeContainer.addChild(autoFontSizeText);\n\n            // update the container's size to showcase the auto-sizing feature\n            let time = 0;\n            app.on('update', (dt) => {\n                time += dt;\n                autoFontSizeContainer.element.width = 280 + (Math.sin(time) * 80);\n                autoFontSizeContainer.element.height = 60 + (Math.sin(time * 0.5) * 50);\n            });\n        });\n    });\n}",javaScriptFunction:'function example(canvas, deviceType) {\n    const assets = {\n        font: new pc.Asset("font", "font", {\n            url: "/static/assets/fonts/courier.json",\n        }),\n    };\n\n    const gfxOptions = {\n        deviceTypes: [deviceType],\n        glslangUrl: "/static/lib/glslang/glslang.js",\n        twgslUrl: "/static/lib/twgsl/twgsl.js",\n    };\n\n    pc.createGraphicsDevice(canvas, gfxOptions).then((device) => {\n        const createOptions = new pc.AppOptions();\n        createOptions.graphicsDevice = device;\n        createOptions.mouse = new pc.Mouse(document.body);\n        createOptions.touch = new pc.TouchDevice(document.body);\n        createOptions.elementInput = new pc.ElementInput(canvas);\n\n        createOptions.componentSystems = [\n            // @ts-ignore\n            pc.RenderComponentSystem,\n            // @ts-ignore\n            pc.CameraComponentSystem,\n            // @ts-ignore\n            pc.ScreenComponentSystem,\n            // @ts-ignore\n            pc.ButtonComponentSystem,\n            // @ts-ignore\n            pc.ElementComponentSystem,\n            // @ts-ignore\n            pc.LayoutGroupComponentSystem,\n            // @ts-ignore\n            pc.ScrollViewComponentSystem,\n            // @ts-ignore\n            pc.ScrollbarComponentSystem,\n        ];\n\n        createOptions.resourceHandlers = [\n            // @ts-ignore\n            pc.TextureHandler,\n            // @ts-ignore\n            pc.FontHandler,\n        ];\n\n        const app = new pc.AppBase(canvas);\n        app.init(createOptions);\n\n        // Set the canvas to fill the window and automatically change resolution to be the same as the canvas size\n        app.setCanvasFillMode(pc.FILLMODE_FILL_WINDOW);\n        app.setCanvasResolution(pc.RESOLUTION_AUTO);\n\n        const assetListLoader = new pc.AssetListLoader(\n            Object.values(assets),\n            app.assets\n        );\n        assetListLoader.load(() => {\n            app.start();\n\n            window.addEventListener("resize", function () {\n                app.resizeCanvas(canvas.width, canvas.height);\n            });\n\n            // Create a camera\n            const camera = new pc.Entity();\n            camera.addComponent("camera", {\n                clearColor: new pc.Color(30 / 255, 30 / 255, 30 / 255),\n            });\n            app.root.addChild(camera);\n\n            // Create a 2D screen\n            const screen = new pc.Entity();\n            screen.addComponent("screen", {\n                referenceResolution: new pc.Vec2(1280, 720),\n                scaleBlend: 0.5,\n                scaleMode: pc.SCALEMODE_BLEND,\n                screenSpace: true,\n            });\n            app.root.addChild(screen);\n\n            // Create a container entity with an image component\n            const autoFontSizeContainer = new pc.Entity();\n            autoFontSizeContainer.addComponent("element", {\n                pivot: new pc.Vec2(0.5, 0.5),\n                anchor: new pc.Vec4(0.5, 0.5, 0.5, 0.5),\n                width: 220,\n                height: 50,\n                color: new pc.Color(60 / 255, 60 / 255, 60 / 255),\n                type: pc.ELEMENTTYPE_IMAGE,\n            });\n            // Create a text element with auto font size, and place it inside the container\n            const autoFontSizeText = new pc.Entity();\n            autoFontSizeText.addComponent("element", {\n                // place the text taking the entire parent space\n                pivot: new pc.Vec2(0.5, 0.5),\n                anchor: new pc.Vec4(0, 0, 1, 1),\n                margin: new pc.Vec4(0, 0, 0, 0),\n                fontAsset: assets.font.id,\n                autoWidth: false,\n                autoHeight: false,\n                autoFitWidth: true,\n                autoFitHeight: true,\n                minFontSize: 10,\n                maxFontSize: 100,\n                text: "Auto font size!",\n                type: pc.ELEMENTTYPE_TEXT,\n            });\n            screen.addChild(autoFontSizeContainer);\n            autoFontSizeContainer.addChild(autoFontSizeText);\n\n            // update the container\'s size to showcase the auto-sizing feature\n            let time = 0;\n            app.on("update", (dt) => {\n                time += dt;\n                autoFontSizeContainer.element.width = 280 + Math.sin(time) * 80;\n                autoFontSizeContainer.element.height =\n                    60 + Math.sin(time * 0.5) * 50;\n            });\n        });\n    });\n}\n',nameSlug:"text-auto-font-size",categorySlug:"user-interface"},"text-emojis":{typeScriptFunction:'function example(canvas: HTMLCanvasElement, deviceType: string): void {\n\n    const assets = {\n        \'font\': new pc.Asset(\'font\', \'font\', { url: \'/static/assets/fonts/arial.json\' })\n    };\n\n    const gfxOptions = {\n        deviceTypes: [deviceType],\n        glslangUrl: \'/static/lib/glslang/glslang.js\',\n        twgslUrl: \'/static/lib/twgsl/twgsl.js\'\n    };\n\n    pc.createGraphicsDevice(canvas, gfxOptions).then((device: pc.GraphicsDevice) => {\n\n        const createOptions = new pc.AppOptions();\n        createOptions.graphicsDevice = device;\n        createOptions.mouse = new pc.Mouse(document.body);\n        createOptions.touch = new pc.TouchDevice(document.body);\n        createOptions.elementInput = new pc.ElementInput(canvas);\n\n        createOptions.componentSystems = [\n            // @ts-ignore\n            pc.RenderComponentSystem,\n            // @ts-ignore\n            pc.CameraComponentSystem,\n            // @ts-ignore\n            pc.ScreenComponentSystem,\n            // @ts-ignore\n            pc.ButtonComponentSystem,\n            // @ts-ignore\n            pc.ElementComponentSystem,\n            // @ts-ignore\n            pc.LayoutGroupComponentSystem,\n            // @ts-ignore\n            pc.ScrollViewComponentSystem,\n            // @ts-ignore\n            pc.ScrollbarComponentSystem,\n            // @ts-ignore\n            pc.LayoutChildComponentSystem\n        ];\n        createOptions.resourceHandlers = [\n            // @ts-ignore\n            pc.TextureHandler,\n            // @ts-ignore\n            pc.FontHandler\n        ];\n\n        const app = new pc.AppBase(canvas);\n        app.init(createOptions);\n\n        // Set the canvas to fill the window and automatically change resolution to be the same as the canvas size\n        app.setCanvasFillMode(pc.FILLMODE_FILL_WINDOW);\n        app.setCanvasResolution(pc.RESOLUTION_AUTO);\n\n        const assetListLoader = new pc.AssetListLoader(Object.values(assets), app.assets);\n        assetListLoader.load(() => {\n\n            app.start();\n\n            window.addEventListener("resize", function () {\n                app.resizeCanvas(canvas.width, canvas.height);\n            });\n\n            // Create a camera\n            const camera = new pc.Entity();\n            camera.addComponent("camera", {\n                clearColor: new pc.Color(30 / 255, 30 / 255, 30 / 255)\n            });\n            app.root.addChild(camera);\n\n            // Create a 2D screen\n            const screen = new pc.Entity();\n            screen.addComponent("screen", {\n                referenceResolution: new pc.Vec2(1280, 720),\n                scaleBlend: 0.5,\n                scaleMode: pc.SCALEMODE_BLEND,\n                screenSpace: true\n            });\n            app.root.addChild(screen);\n\n            // some sample text\n            const firstLineText = "PlayCanvas supports Emojis via CanvasFont!";\n            const flagsText = "Flags: 🇺🇸🇩🇪🇮🇪🇮🇹🏴‍☠️🇨🇦";\n            const complexText = "Complex emoji: 👨🏿3️⃣👁️‍🗨️";\n\n            // Create a canvas font asset\n            const size = 64;\n            const elSize = 32;\n\n            const canvasFont = new pc.CanvasFont(app, {\n                color: new pc.Color(1, 1, 1), // white\n                fontName: "Arial",\n                fontSize: size,\n                width: 256,\n                height: 256\n            });\n\n            // The first texture update needs to be `createTextures()`. Follow-up calls need to be `updateTextures()`.\n            canvasFont.createTextures(firstLineText);\n            canvasFont.updateTextures(flagsText);\n            canvasFont.updateTextures(complexText);\n\n            // Create the text entities\n            function createText(y: number, text: string) {\n                const canvasElementEntity = new pc.Entity();\n                canvasElementEntity.setLocalPosition(0, y, 0);\n                canvasElementEntity.addComponent("element", {\n                    pivot: new pc.Vec2(0.5, 0.5),\n                    anchor: new pc.Vec4(0.5, 0.5, 0.5, 0.5),\n                    fontSize: elSize,\n                    text: text,\n                    type: pc.ELEMENTTYPE_TEXT\n                });\n                canvasElementEntity.element.font = canvasFont;\n                screen.addChild(canvasElementEntity);\n            }\n            createText(225, firstLineText);\n            createText(150, flagsText);\n            createText(100, complexText);\n\n\n            // Canvas Fonts Debug - you shouldn\'t do this in your actual project\n            const debugText = new pc.Entity();\n            debugText.setLocalPosition(0, -50, 0);\n            debugText.addComponent("element", {\n                pivot: new pc.Vec2(0.5, 0.5),\n                anchor: new pc.Vec4(0.5, 0.5, 0.5, 0.5),\n                fontAsset: assets.font.id,\n                fontSize: elSize,\n                text: "The following are the CanvasFont\'s Texture Atlases,\\ncontaining all the rendered characters:",\n                type: pc.ELEMENTTYPE_TEXT\n            });\n            screen.addChild(debugText);\n\n            // Create Layout Group Entity\n            const group = new pc.Entity();\n            group.setLocalPosition(0, -150, 0);\n            group.addComponent("element", {\n                // a Layout Group needs a \'group\' element component\n                type: pc.ELEMENTTYPE_GROUP,\n                anchor: [0.5, 0.5, 0.5, 0.5],\n                pivot: [0.5, 0.5],\n                // the element\'s width and height dictate the group\'s bounds\n                width: 300,\n                height: 100\n            });\n            group.addComponent("layoutgroup", {\n                orientation: pc.ORIENTATION_HORIZONTAL,\n                // fit_both for width and height, making all child elements take the entire space\n                widthFitting: pc.FITTING_BOTH,\n                heightFitting: pc.FITTING_BOTH,\n                // wrap children\n                wrap: true\n            });\n            screen.addChild(group);\n\n            // create 1 child per texture\n            for (let i = 0; i < canvasFont.textures.length; i++) {\n                const texture = canvasFont.textures[i];\n\n                // create a random-colored panel\n                const child = new pc.Entity();\n                child.addComponent("element", {\n                    anchor: [0.5, 0.5, 0.5, 0.5],\n                    pivot: [0.5, 0.5],\n                    texture: texture,\n                    type: pc.ELEMENTTYPE_IMAGE\n                });\n                child.addComponent("layoutchild", {\n                    excludeFromLayout: false\n                });\n                group.addChild(child);\n            }\n        });\n    });\n}',javaScriptFunction:'function example(canvas, deviceType) {\n    const assets = {\n        font: new pc.Asset("font", "font", {\n            url: "/static/assets/fonts/arial.json",\n        }),\n    };\n\n    const gfxOptions = {\n        deviceTypes: [deviceType],\n        glslangUrl: "/static/lib/glslang/glslang.js",\n        twgslUrl: "/static/lib/twgsl/twgsl.js",\n    };\n\n    pc.createGraphicsDevice(canvas, gfxOptions).then((device) => {\n        const createOptions = new pc.AppOptions();\n        createOptions.graphicsDevice = device;\n        createOptions.mouse = new pc.Mouse(document.body);\n        createOptions.touch = new pc.TouchDevice(document.body);\n        createOptions.elementInput = new pc.ElementInput(canvas);\n\n        createOptions.componentSystems = [\n            // @ts-ignore\n            pc.RenderComponentSystem,\n            // @ts-ignore\n            pc.CameraComponentSystem,\n            // @ts-ignore\n            pc.ScreenComponentSystem,\n            // @ts-ignore\n            pc.ButtonComponentSystem,\n            // @ts-ignore\n            pc.ElementComponentSystem,\n            // @ts-ignore\n            pc.LayoutGroupComponentSystem,\n            // @ts-ignore\n            pc.ScrollViewComponentSystem,\n            // @ts-ignore\n            pc.ScrollbarComponentSystem,\n            // @ts-ignore\n            pc.LayoutChildComponentSystem,\n        ];\n\n        createOptions.resourceHandlers = [\n            // @ts-ignore\n            pc.TextureHandler,\n            // @ts-ignore\n            pc.FontHandler,\n        ];\n\n        const app = new pc.AppBase(canvas);\n        app.init(createOptions);\n\n        // Set the canvas to fill the window and automatically change resolution to be the same as the canvas size\n        app.setCanvasFillMode(pc.FILLMODE_FILL_WINDOW);\n        app.setCanvasResolution(pc.RESOLUTION_AUTO);\n\n        const assetListLoader = new pc.AssetListLoader(\n            Object.values(assets),\n            app.assets\n        );\n        assetListLoader.load(() => {\n            app.start();\n\n            window.addEventListener("resize", function () {\n                app.resizeCanvas(canvas.width, canvas.height);\n            });\n\n            // Create a camera\n            const camera = new pc.Entity();\n            camera.addComponent("camera", {\n                clearColor: new pc.Color(30 / 255, 30 / 255, 30 / 255),\n            });\n            app.root.addChild(camera);\n\n            // Create a 2D screen\n            const screen = new pc.Entity();\n            screen.addComponent("screen", {\n                referenceResolution: new pc.Vec2(1280, 720),\n                scaleBlend: 0.5,\n                scaleMode: pc.SCALEMODE_BLEND,\n                screenSpace: true,\n            });\n            app.root.addChild(screen);\n\n            // some sample text\n            const firstLineText = "PlayCanvas supports Emojis via CanvasFont!";\n            const flagsText = "Flags: 🇺🇸🇩🇪🇮🇪🇮🇹🏴‍☠️🇨🇦";\n            const complexText = "Complex emoji: 👨🏿3️⃣👁️‍🗨️";\n\n            // Create a canvas font asset\n            const size = 64;\n            const elSize = 32;\n\n            const canvasFont = new pc.CanvasFont(app, {\n                color: new pc.Color(1, 1, 1), // white\n                fontName: "Arial",\n                fontSize: size,\n                width: 256,\n                height: 256,\n            });\n\n            // The first texture update needs to be `createTextures()`. Follow-up calls need to be `updateTextures()`.\n            canvasFont.createTextures(firstLineText);\n            canvasFont.updateTextures(flagsText);\n            canvasFont.updateTextures(complexText);\n\n            // Create the text entities\n            function createText(y, text) {\n                const canvasElementEntity = new pc.Entity();\n                canvasElementEntity.setLocalPosition(0, y, 0);\n                canvasElementEntity.addComponent("element", {\n                    pivot: new pc.Vec2(0.5, 0.5),\n                    anchor: new pc.Vec4(0.5, 0.5, 0.5, 0.5),\n                    fontSize: elSize,\n                    text: text,\n                    type: pc.ELEMENTTYPE_TEXT,\n                });\n                canvasElementEntity.element.font = canvasFont;\n                screen.addChild(canvasElementEntity);\n            }\n            createText(225, firstLineText);\n            createText(150, flagsText);\n            createText(100, complexText);\n\n            // Canvas Fonts Debug - you shouldn\'t do this in your actual project\n            const debugText = new pc.Entity();\n            debugText.setLocalPosition(0, -50, 0);\n            debugText.addComponent("element", {\n                pivot: new pc.Vec2(0.5, 0.5),\n                anchor: new pc.Vec4(0.5, 0.5, 0.5, 0.5),\n                fontAsset: assets.font.id,\n                fontSize: elSize,\n                text: "The following are the CanvasFont\'s Texture Atlases,\\ncontaining all the rendered characters:",\n                type: pc.ELEMENTTYPE_TEXT,\n            });\n            screen.addChild(debugText);\n\n            // Create Layout Group Entity\n            const group = new pc.Entity();\n            group.setLocalPosition(0, -150, 0);\n            group.addComponent("element", {\n                // a Layout Group needs a \'group\' element component\n                type: pc.ELEMENTTYPE_GROUP,\n                anchor: [0.5, 0.5, 0.5, 0.5],\n                pivot: [0.5, 0.5],\n                // the element\'s width and height dictate the group\'s bounds\n                width: 300,\n                height: 100,\n            });\n            group.addComponent("layoutgroup", {\n                orientation: pc.ORIENTATION_HORIZONTAL,\n                // fit_both for width and height, making all child elements take the entire space\n                widthFitting: pc.FITTING_BOTH,\n                heightFitting: pc.FITTING_BOTH,\n                // wrap children\n                wrap: true,\n            });\n            screen.addChild(group);\n\n            // create 1 child per texture\n            for (let i = 0; i < canvasFont.textures.length; i++) {\n                const texture = canvasFont.textures[i];\n\n                // create a random-colored panel\n                const child = new pc.Entity();\n                child.addComponent("element", {\n                    anchor: [0.5, 0.5, 0.5, 0.5],\n                    pivot: [0.5, 0.5],\n                    texture: texture,\n                    type: pc.ELEMENTTYPE_IMAGE,\n                });\n                child.addComponent("layoutchild", {\n                    excludeFromLayout: false,\n                });\n                group.addChild(child);\n            }\n        });\n    });\n}\n',nameSlug:"text-emojis",categorySlug:"user-interface"},"text-localization":{typeScriptFunction:'function example(canvas: HTMLCanvasElement, deviceType: string): void {\n\n    const assets = {\n        \'font\': new pc.Asset(\'font\', \'font\', { url: \'/static/assets/fonts/courier.json\' })\n    };\n\n    const gfxOptions = {\n        deviceTypes: [deviceType],\n        glslangUrl: \'/static/lib/glslang/glslang.js\',\n        twgslUrl: \'/static/lib/twgsl/twgsl.js\'\n    };\n\n    pc.createGraphicsDevice(canvas, gfxOptions).then((device: pc.GraphicsDevice) => {\n\n        const createOptions = new pc.AppOptions();\n        createOptions.graphicsDevice = device;\n        createOptions.mouse = new pc.Mouse(document.body);\n        createOptions.touch = new pc.TouchDevice(document.body);\n        createOptions.elementInput = new pc.ElementInput(canvas);\n\n        createOptions.componentSystems = [\n            // @ts-ignore\n            pc.RenderComponentSystem,\n            // @ts-ignore\n            pc.CameraComponentSystem,\n            // @ts-ignore\n            pc.ScreenComponentSystem,\n            // @ts-ignore\n            pc.ButtonComponentSystem,\n            // @ts-ignore\n            pc.ElementComponentSystem\n        ];\n        createOptions.resourceHandlers = [\n            // @ts-ignore\n            pc.TextureHandler,\n            // @ts-ignore\n            pc.FontHandler\n        ];\n\n        const app = new pc.AppBase(canvas);\n        app.init(createOptions);\n\n        // Set the canvas to fill the window and automatically change resolution to be the same as the canvas size\n        app.setCanvasFillMode(pc.FILLMODE_FILL_WINDOW);\n        app.setCanvasResolution(pc.RESOLUTION_AUTO);\n\n        const assetListLoader = new pc.AssetListLoader(Object.values(assets), app.assets);\n        assetListLoader.load(() => {\n\n            app.start();\n\n            app.i18n.addData({\n                header: {\n                    version: 1\n                },\n                data: [{\n                    info: {\n                        locale: \'en-US\'\n                    },\n                    messages: {\n                        "HELLO": "Hi"\n                    }\n                }, {\n                    info: {\n                        locale: \'fr-FR\'\n                    },\n                    messages: {\n                        "HELLO": "Salut"\n                    }\n                }, {\n                    info: {\n                        locale: \'es-ES\'\n                    },\n                    messages: {\n                        "HELLO": "Hola"\n                    }\n                }, {\n                    info: {\n                        locale: \'pt-BR\'\n                    },\n                    messages: {\n                        "HELLO": "Oi!"\n                    }\n                }]\n            });\n\n            window.addEventListener("resize", function () {\n                app.resizeCanvas(canvas.width, canvas.height);\n            });\n\n            // Create a camera\n            const camera = new pc.Entity();\n            camera.addComponent("camera", {\n                clearColor: new pc.Color(30 / 255, 30 / 255, 30 / 255)\n            });\n            app.root.addChild(camera);\n\n            // Create a 2D screen\n            const screen = new pc.Entity();\n            screen.addComponent("screen", {\n                referenceResolution: new pc.Vec2(1280, 720),\n                scaleBlend: 0.5,\n                scaleMode: pc.SCALEMODE_BLEND,\n                screenSpace: true\n            });\n            app.root.addChild(screen);\n\n            // Create a basic text element\n            const text = new pc.Entity();\n            text.addComponent("element", {\n                anchor: [0.5, 0.5, 0.5, 0.5],\n                autoWidth: false,\n                fontAsset: assets.font.id,\n                fontSize: 128,\n                pivot: [0.5, 0.5],\n                key: "HELLO",\n                type: pc.ELEMENTTYPE_TEXT,\n                width: 640\n            });\n            screen.addChild(text);\n\n            function createButton(labelText: string, x: number, y: number) {\n                // Create a simple button\n                const button = new pc.Entity();\n                button.addComponent("button");\n                button.addComponent("element", {\n                    anchor: [0.5, 0.5, 0.5, 0.5],\n                    height: 40,\n                    pivot: [0.5, 0.5],\n                    type: pc.ELEMENTTYPE_IMAGE,\n                    width: 128,\n                    useInput: true\n                });\n\n                // Create a label for the button\n                const label = new pc.Entity();\n                label.addComponent("element", {\n                    anchor: [0.5, 0.5, 0.5, 0.5],\n                    color: new pc.Color(0, 0, 0),\n                    fontAsset: assets.font.id,\n                    fontSize: 32,\n                    height: 64,\n                    pivot: [0.5, 0.5],\n                    text: labelText,\n                    type: pc.ELEMENTTYPE_TEXT,\n                    width: 128,\n                    wrapLines: true\n                });\n                button.addChild(label);\n\n                // Change the locale to the button text\n                button.button.on(\'click\', function () {\n                    app.i18n.locale = labelText;\n                });\n\n                button.setLocalPosition(x, y, 0);\n\n                return button;\n            }\n\n            screen.addChild(createButton("en-US", -225, -100));\n            screen.addChild(createButton("fr-FR", -75, -100));\n            screen.addChild(createButton("es-ES", 75, -100));\n            screen.addChild(createButton("pt-BR", 225, -100));\n        });\n    });\n}',javaScriptFunction:'function example(canvas, deviceType) {\n    const assets = {\n        font: new pc.Asset("font", "font", {\n            url: "/static/assets/fonts/courier.json",\n        }),\n    };\n\n    const gfxOptions = {\n        deviceTypes: [deviceType],\n        glslangUrl: "/static/lib/glslang/glslang.js",\n        twgslUrl: "/static/lib/twgsl/twgsl.js",\n    };\n\n    pc.createGraphicsDevice(canvas, gfxOptions).then((device) => {\n        const createOptions = new pc.AppOptions();\n        createOptions.graphicsDevice = device;\n        createOptions.mouse = new pc.Mouse(document.body);\n        createOptions.touch = new pc.TouchDevice(document.body);\n        createOptions.elementInput = new pc.ElementInput(canvas);\n\n        createOptions.componentSystems = [\n            // @ts-ignore\n            pc.RenderComponentSystem,\n            // @ts-ignore\n            pc.CameraComponentSystem,\n            // @ts-ignore\n            pc.ScreenComponentSystem,\n            // @ts-ignore\n            pc.ButtonComponentSystem,\n            // @ts-ignore\n            pc.ElementComponentSystem,\n        ];\n\n        createOptions.resourceHandlers = [\n            // @ts-ignore\n            pc.TextureHandler,\n            // @ts-ignore\n            pc.FontHandler,\n        ];\n\n        const app = new pc.AppBase(canvas);\n        app.init(createOptions);\n\n        // Set the canvas to fill the window and automatically change resolution to be the same as the canvas size\n        app.setCanvasFillMode(pc.FILLMODE_FILL_WINDOW);\n        app.setCanvasResolution(pc.RESOLUTION_AUTO);\n\n        const assetListLoader = new pc.AssetListLoader(\n            Object.values(assets),\n            app.assets\n        );\n        assetListLoader.load(() => {\n            app.start();\n\n            app.i18n.addData({\n                header: {\n                    version: 1,\n                },\n                data: [\n                    {\n                        info: {\n                            locale: "en-US",\n                        },\n                        messages: {\n                            HELLO: "Hi",\n                        },\n                    },\n                    {\n                        info: {\n                            locale: "fr-FR",\n                        },\n                        messages: {\n                            HELLO: "Salut",\n                        },\n                    },\n                    {\n                        info: {\n                            locale: "es-ES",\n                        },\n                        messages: {\n                            HELLO: "Hola",\n                        },\n                    },\n                    {\n                        info: {\n                            locale: "pt-BR",\n                        },\n                        messages: {\n                            HELLO: "Oi!",\n                        },\n                    },\n                ],\n            });\n\n            window.addEventListener("resize", function () {\n                app.resizeCanvas(canvas.width, canvas.height);\n            });\n\n            // Create a camera\n            const camera = new pc.Entity();\n            camera.addComponent("camera", {\n                clearColor: new pc.Color(30 / 255, 30 / 255, 30 / 255),\n            });\n            app.root.addChild(camera);\n\n            // Create a 2D screen\n            const screen = new pc.Entity();\n            screen.addComponent("screen", {\n                referenceResolution: new pc.Vec2(1280, 720),\n                scaleBlend: 0.5,\n                scaleMode: pc.SCALEMODE_BLEND,\n                screenSpace: true,\n            });\n            app.root.addChild(screen);\n\n            // Create a basic text element\n            const text = new pc.Entity();\n            text.addComponent("element", {\n                anchor: [0.5, 0.5, 0.5, 0.5],\n                autoWidth: false,\n                fontAsset: assets.font.id,\n                fontSize: 128,\n                pivot: [0.5, 0.5],\n                key: "HELLO",\n                type: pc.ELEMENTTYPE_TEXT,\n                width: 640,\n            });\n            screen.addChild(text);\n\n            function createButton(labelText, x, y) {\n                // Create a simple button\n                const button = new pc.Entity();\n                button.addComponent("button");\n                button.addComponent("element", {\n                    anchor: [0.5, 0.5, 0.5, 0.5],\n                    height: 40,\n                    pivot: [0.5, 0.5],\n                    type: pc.ELEMENTTYPE_IMAGE,\n                    width: 128,\n                    useInput: true,\n                });\n\n                // Create a label for the button\n                const label = new pc.Entity();\n                label.addComponent("element", {\n                    anchor: [0.5, 0.5, 0.5, 0.5],\n                    color: new pc.Color(0, 0, 0),\n                    fontAsset: assets.font.id,\n                    fontSize: 32,\n                    height: 64,\n                    pivot: [0.5, 0.5],\n                    text: labelText,\n                    type: pc.ELEMENTTYPE_TEXT,\n                    width: 128,\n                    wrapLines: true,\n                });\n                button.addChild(label);\n\n                // Change the locale to the button text\n                button.button.on("click", function () {\n                    app.i18n.locale = labelText;\n                });\n\n                button.setLocalPosition(x, y, 0);\n\n                return button;\n            }\n\n            screen.addChild(createButton("en-US", -225, -100));\n            screen.addChild(createButton("fr-FR", -75, -100));\n            screen.addChild(createButton("es-ES", 75, -100));\n            screen.addChild(createButton("pt-BR", 225, -100));\n        });\n    });\n}\n',nameSlug:"text-localization",categorySlug:"user-interface"},"text-typewriter":{typeScriptFunction:"function example(canvas: HTMLCanvasElement, deviceType: string): void {\n\n    const assets = {\n        'font': new pc.Asset('font', 'font', { url: '/static/assets/fonts/courier.json' })\n    };\n\n    const gfxOptions = {\n        deviceTypes: [deviceType],\n        glslangUrl: '/static/lib/glslang/glslang.js',\n        twgslUrl: '/static/lib/twgsl/twgsl.js'\n    };\n\n    pc.createGraphicsDevice(canvas, gfxOptions).then((device: pc.GraphicsDevice) => {\n\n        const createOptions = new pc.AppOptions();\n        createOptions.graphicsDevice = device;\n        createOptions.mouse = new pc.Mouse(document.body);\n        createOptions.touch = new pc.TouchDevice(document.body);\n        createOptions.elementInput = new pc.ElementInput(canvas);\n\n        createOptions.componentSystems = [\n            // @ts-ignore\n            pc.RenderComponentSystem,\n            // @ts-ignore\n            pc.CameraComponentSystem,\n            // @ts-ignore\n            pc.ScreenComponentSystem,\n            // @ts-ignore\n            pc.ButtonComponentSystem,\n            // @ts-ignore\n            pc.ElementComponentSystem\n        ];\n        createOptions.resourceHandlers = [\n            // @ts-ignore\n            pc.TextureHandler,\n            // @ts-ignore\n            pc.FontHandler\n        ];\n\n        const app = new pc.AppBase(canvas);\n        app.init(createOptions);\n\n        // Set the canvas to fill the window and automatically change resolution to be the same as the canvas size\n        app.setCanvasFillMode(pc.FILLMODE_FILL_WINDOW);\n        app.setCanvasResolution(pc.RESOLUTION_AUTO);\n\n        const assetListLoader = new pc.AssetListLoader(Object.values(assets), app.assets);\n        assetListLoader.load(() => {\n\n            app.start();\n\n            // Create a camera\n            const camera = new pc.Entity();\n            camera.addComponent(\"camera\", {\n                clearColor: new pc.Color(30 / 255, 30 / 255, 30 / 255)\n            });\n            app.root.addChild(camera);\n\n            // Create a 2D screen\n            const screen = new pc.Entity();\n            screen.addComponent(\"screen\", {\n                referenceResolution: new pc.Vec2(1280, 720),\n                scaleBlend: 0.5,\n                scaleMode: pc.SCALEMODE_BLEND,\n                screenSpace: true\n            });\n            app.root.addChild(screen);\n\n            // Create a text element that wraps text over several lines\n            const loremIpsum = \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\";\n            const text = new pc.Entity();\n            text.addComponent(\"element\", {\n                anchor: [0.5, 0.5, 0.5, 0.5],\n                autoWidth: false,\n                fontAsset: assets.font.id,\n                fontSize: 32,\n                pivot: [0.5, 0.5],\n                text: loremIpsum,\n                type: pc.ELEMENTTYPE_TEXT,\n                width: 512,\n                wrapLines: true\n            });\n            screen.addChild(text);\n\n            // Start with no text printed\n            text.element.rangeStart = 0;\n            text.element.rangeEnd = 0;\n\n            // Render a new character every 75ms\n            setInterval(function () {\n                text.element.rangeEnd += 1;\n                if (text.element.rangeEnd >= loremIpsum.length) {\n                    text.element.rangeEnd = 0;\n                }\n            }, 75);\n        });\n    });\n}",javaScriptFunction:'function example(canvas, deviceType) {\n    const assets = {\n        font: new pc.Asset("font", "font", {\n            url: "/static/assets/fonts/courier.json",\n        }),\n    };\n\n    const gfxOptions = {\n        deviceTypes: [deviceType],\n        glslangUrl: "/static/lib/glslang/glslang.js",\n        twgslUrl: "/static/lib/twgsl/twgsl.js",\n    };\n\n    pc.createGraphicsDevice(canvas, gfxOptions).then((device) => {\n        const createOptions = new pc.AppOptions();\n        createOptions.graphicsDevice = device;\n        createOptions.mouse = new pc.Mouse(document.body);\n        createOptions.touch = new pc.TouchDevice(document.body);\n        createOptions.elementInput = new pc.ElementInput(canvas);\n\n        createOptions.componentSystems = [\n            // @ts-ignore\n            pc.RenderComponentSystem,\n            // @ts-ignore\n            pc.CameraComponentSystem,\n            // @ts-ignore\n            pc.ScreenComponentSystem,\n            // @ts-ignore\n            pc.ButtonComponentSystem,\n            // @ts-ignore\n            pc.ElementComponentSystem,\n        ];\n\n        createOptions.resourceHandlers = [\n            // @ts-ignore\n            pc.TextureHandler,\n            // @ts-ignore\n            pc.FontHandler,\n        ];\n\n        const app = new pc.AppBase(canvas);\n        app.init(createOptions);\n\n        // Set the canvas to fill the window and automatically change resolution to be the same as the canvas size\n        app.setCanvasFillMode(pc.FILLMODE_FILL_WINDOW);\n        app.setCanvasResolution(pc.RESOLUTION_AUTO);\n\n        const assetListLoader = new pc.AssetListLoader(\n            Object.values(assets),\n            app.assets\n        );\n        assetListLoader.load(() => {\n            app.start();\n\n            // Create a camera\n            const camera = new pc.Entity();\n            camera.addComponent("camera", {\n                clearColor: new pc.Color(30 / 255, 30 / 255, 30 / 255),\n            });\n            app.root.addChild(camera);\n\n            // Create a 2D screen\n            const screen = new pc.Entity();\n            screen.addComponent("screen", {\n                referenceResolution: new pc.Vec2(1280, 720),\n                scaleBlend: 0.5,\n                scaleMode: pc.SCALEMODE_BLEND,\n                screenSpace: true,\n            });\n            app.root.addChild(screen);\n\n            // Create a text element that wraps text over several lines\n            const loremIpsum =\n                "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.";\n            const text = new pc.Entity();\n            text.addComponent("element", {\n                anchor: [0.5, 0.5, 0.5, 0.5],\n                autoWidth: false,\n                fontAsset: assets.font.id,\n                fontSize: 32,\n                pivot: [0.5, 0.5],\n                text: loremIpsum,\n                type: pc.ELEMENTTYPE_TEXT,\n                width: 512,\n                wrapLines: true,\n            });\n            screen.addChild(text);\n\n            // Start with no text printed\n            text.element.rangeStart = 0;\n            text.element.rangeEnd = 0;\n\n            // Render a new character every 75ms\n            setInterval(function () {\n                text.element.rangeEnd += 1;\n                if (text.element.rangeEnd >= loremIpsum.length) {\n                    text.element.rangeEnd = 0;\n                }\n            }, 75);\n        });\n    });\n}\n',nameSlug:"text-typewriter",categorySlug:"user-interface"},text:{typeScriptFunction:'function example(canvas: HTMLCanvasElement, deviceType: string): void {\n\n    const assets = {\n        \'font\': new pc.Asset(\'font\', \'font\', { url: \'/static/assets/fonts/courier.json\' })\n    };\n\n    const gfxOptions = {\n        deviceTypes: [deviceType],\n        glslangUrl: \'/static/lib/glslang/glslang.js\',\n        twgslUrl: \'/static/lib/twgsl/twgsl.js\'\n    };\n\n    pc.createGraphicsDevice(canvas, gfxOptions).then((device: pc.GraphicsDevice) => {\n\n        const createOptions = new pc.AppOptions();\n        createOptions.graphicsDevice = device;\n        createOptions.mouse = new pc.Mouse(document.body);\n        createOptions.touch = new pc.TouchDevice(document.body);\n        createOptions.elementInput = new pc.ElementInput(canvas);\n\n        createOptions.componentSystems = [\n            // @ts-ignore\n            pc.RenderComponentSystem,\n            // @ts-ignore\n            pc.CameraComponentSystem,\n            // @ts-ignore\n            pc.ScreenComponentSystem,\n            // @ts-ignore\n            pc.ButtonComponentSystem,\n            // @ts-ignore\n            pc.ElementComponentSystem,\n            // @ts-ignore\n            pc.LayoutGroupComponentSystem,\n            // @ts-ignore\n            pc.ScrollViewComponentSystem,\n            // @ts-ignore\n            pc.ScrollbarComponentSystem\n        ];\n        createOptions.resourceHandlers = [\n            // @ts-ignore\n            pc.TextureHandler,\n            // @ts-ignore\n            pc.FontHandler\n        ];\n\n        const app = new pc.AppBase(canvas);\n        app.init(createOptions);\n\n        // Set the canvas to fill the window and automatically change resolution to be the same as the canvas size\n        app.setCanvasFillMode(pc.FILLMODE_FILL_WINDOW);\n        app.setCanvasResolution(pc.RESOLUTION_AUTO);\n\n        const assetListLoader = new pc.AssetListLoader(Object.values(assets), app.assets);\n        assetListLoader.load(() => {\n\n            app.start();\n\n            window.addEventListener("resize", function () {\n                app.resizeCanvas(canvas.width, canvas.height);\n            });\n\n            // Create a camera\n            const camera = new pc.Entity();\n            camera.addComponent("camera", {\n                clearColor: new pc.Color(30 / 255, 30 / 255, 30 / 255)\n            });\n            app.root.addChild(camera);\n\n            // Create a 2D screen\n            const screen = new pc.Entity();\n            screen.addComponent("screen", {\n                referenceResolution: new pc.Vec2(1280, 720),\n                scaleBlend: 0.5,\n                scaleMode: pc.SCALEMODE_BLEND,\n                screenSpace: true\n            });\n            app.root.addChild(screen);\n\n            // Basic Text\n            const textBasic = new pc.Entity();\n            textBasic.setLocalPosition(0, 200, 0);\n            textBasic.addComponent("element", {\n                pivot: new pc.Vec2(0.5, 0.5),\n                anchor: new pc.Vec4(0.5, 0.5, 0.5, 0.5),\n                fontAsset: assets.font.id,\n                fontSize: 42,\n                text: "Basic Text",\n                type: pc.ELEMENTTYPE_TEXT\n            });\n            screen.addChild(textBasic);\n\n            // Markup Text with wrap\n            const textMarkup = new pc.Entity();\n            textMarkup.setLocalPosition(0, 50, 0);\n            textMarkup.addComponent("element", {\n                pivot: new pc.Vec2(0.5, 0.5),\n                anchor: new pc.Vec4(0.5, 0.5, 0.5, 0.5),\n                fontAsset: assets.font.id,\n                fontSize: 32,\n                text: \'There are seven colors in the rainbow: [color="#ff0000"]red[/color], [color="#ffa500"]orange[/color], [color="#ffff00"]yellow[/color], [color="#00ff00"]green[/color], [color="#0000ff"]blue[/color], [color="#4b0082"]indigo[/color] and [color="#7f00ff"]violet[/color].\',\n                width: 500,\n                height: 100,\n                autoWidth: false,\n                autoHeight: false,\n                wrapLines: true,\n                enableMarkup: true,\n                type: pc.ELEMENTTYPE_TEXT\n            });\n            screen.addChild(textMarkup);\n\n            // Text with outline\n            const textOutline = new pc.Entity();\n            textOutline.setLocalPosition(0, -100, 0);\n            textOutline.addComponent("element", {\n                pivot: new pc.Vec2(0.5, 0.5),\n                anchor: new pc.Vec4(0.5, 0.5, 0.5, 0.5),\n                fontAsset: assets.font.id,\n                fontSize: 62,\n                text: "Outline",\n                color: new pc.Color(0, 0, 0),\n                outlineColor: new pc.Color(1, 1, 1),\n                outlineThickness: 0.75,\n                type: pc.ELEMENTTYPE_TEXT\n            });\n            screen.addChild(textOutline);\n\n            // Text with drop shadow\n            const textDropShadow = new pc.Entity();\n            textDropShadow.setLocalPosition(0, -200, 0);\n            textDropShadow.addComponent("element", {\n                pivot: new pc.Vec2(0.5, 0.5),\n                anchor: new pc.Vec4(0.5, 0.5, 0.5, 0.5),\n                fontAsset: assets.font.id,\n                fontSize: 62,\n                text: "Drop Shadow",\n                shadowColor: new pc.Color(1, 0, 0),\n                shadowOffset: new pc.Vec2(0.25, -0.25),\n                type: pc.ELEMENTTYPE_TEXT\n            });\n            screen.addChild(textDropShadow);\n        });\n    });\n}',javaScriptFunction:'function example(canvas, deviceType) {\n    const assets = {\n        font: new pc.Asset("font", "font", {\n            url: "/static/assets/fonts/courier.json",\n        }),\n    };\n\n    const gfxOptions = {\n        deviceTypes: [deviceType],\n        glslangUrl: "/static/lib/glslang/glslang.js",\n        twgslUrl: "/static/lib/twgsl/twgsl.js",\n    };\n\n    pc.createGraphicsDevice(canvas, gfxOptions).then((device) => {\n        const createOptions = new pc.AppOptions();\n        createOptions.graphicsDevice = device;\n        createOptions.mouse = new pc.Mouse(document.body);\n        createOptions.touch = new pc.TouchDevice(document.body);\n        createOptions.elementInput = new pc.ElementInput(canvas);\n\n        createOptions.componentSystems = [\n            // @ts-ignore\n            pc.RenderComponentSystem,\n            // @ts-ignore\n            pc.CameraComponentSystem,\n            // @ts-ignore\n            pc.ScreenComponentSystem,\n            // @ts-ignore\n            pc.ButtonComponentSystem,\n            // @ts-ignore\n            pc.ElementComponentSystem,\n            // @ts-ignore\n            pc.LayoutGroupComponentSystem,\n            // @ts-ignore\n            pc.ScrollViewComponentSystem,\n            // @ts-ignore\n            pc.ScrollbarComponentSystem,\n        ];\n\n        createOptions.resourceHandlers = [\n            // @ts-ignore\n            pc.TextureHandler,\n            // @ts-ignore\n            pc.FontHandler,\n        ];\n\n        const app = new pc.AppBase(canvas);\n        app.init(createOptions);\n\n        // Set the canvas to fill the window and automatically change resolution to be the same as the canvas size\n        app.setCanvasFillMode(pc.FILLMODE_FILL_WINDOW);\n        app.setCanvasResolution(pc.RESOLUTION_AUTO);\n\n        const assetListLoader = new pc.AssetListLoader(\n            Object.values(assets),\n            app.assets\n        );\n        assetListLoader.load(() => {\n            app.start();\n\n            window.addEventListener("resize", function () {\n                app.resizeCanvas(canvas.width, canvas.height);\n            });\n\n            // Create a camera\n            const camera = new pc.Entity();\n            camera.addComponent("camera", {\n                clearColor: new pc.Color(30 / 255, 30 / 255, 30 / 255),\n            });\n            app.root.addChild(camera);\n\n            // Create a 2D screen\n            const screen = new pc.Entity();\n            screen.addComponent("screen", {\n                referenceResolution: new pc.Vec2(1280, 720),\n                scaleBlend: 0.5,\n                scaleMode: pc.SCALEMODE_BLEND,\n                screenSpace: true,\n            });\n            app.root.addChild(screen);\n\n            // Basic Text\n            const textBasic = new pc.Entity();\n            textBasic.setLocalPosition(0, 200, 0);\n            textBasic.addComponent("element", {\n                pivot: new pc.Vec2(0.5, 0.5),\n                anchor: new pc.Vec4(0.5, 0.5, 0.5, 0.5),\n                fontAsset: assets.font.id,\n                fontSize: 42,\n                text: "Basic Text",\n                type: pc.ELEMENTTYPE_TEXT,\n            });\n            screen.addChild(textBasic);\n\n            // Markup Text with wrap\n            const textMarkup = new pc.Entity();\n            textMarkup.setLocalPosition(0, 50, 0);\n            textMarkup.addComponent("element", {\n                pivot: new pc.Vec2(0.5, 0.5),\n                anchor: new pc.Vec4(0.5, 0.5, 0.5, 0.5),\n                fontAsset: assets.font.id,\n                fontSize: 32,\n                text: \'There are seven colors in the rainbow: [color="#ff0000"]red[/color], [color="#ffa500"]orange[/color], [color="#ffff00"]yellow[/color], [color="#00ff00"]green[/color], [color="#0000ff"]blue[/color], [color="#4b0082"]indigo[/color] and [color="#7f00ff"]violet[/color].\',\n                width: 500,\n                height: 100,\n                autoWidth: false,\n                autoHeight: false,\n                wrapLines: true,\n                enableMarkup: true,\n                type: pc.ELEMENTTYPE_TEXT,\n            });\n            screen.addChild(textMarkup);\n\n            // Text with outline\n            const textOutline = new pc.Entity();\n            textOutline.setLocalPosition(0, -100, 0);\n            textOutline.addComponent("element", {\n                pivot: new pc.Vec2(0.5, 0.5),\n                anchor: new pc.Vec4(0.5, 0.5, 0.5, 0.5),\n                fontAsset: assets.font.id,\n                fontSize: 62,\n                text: "Outline",\n                color: new pc.Color(0, 0, 0),\n                outlineColor: new pc.Color(1, 1, 1),\n                outlineThickness: 0.75,\n                type: pc.ELEMENTTYPE_TEXT,\n            });\n            screen.addChild(textOutline);\n\n            // Text with drop shadow\n            const textDropShadow = new pc.Entity();\n            textDropShadow.setLocalPosition(0, -200, 0);\n            textDropShadow.addComponent("element", {\n                pivot: new pc.Vec2(0.5, 0.5),\n                anchor: new pc.Vec4(0.5, 0.5, 0.5, 0.5),\n                fontAsset: assets.font.id,\n                fontSize: 62,\n                text: "Drop Shadow",\n                shadowColor: new pc.Color(1, 0, 0),\n                shadowOffset: new pc.Vec2(0.25, -0.25),\n                type: pc.ELEMENTTYPE_TEXT,\n            });\n            screen.addChild(textDropShadow);\n        });\n    });\n}\n',nameSlug:"text",categorySlug:"user-interface"},"world-to-screen":{typeScriptFunction:'function example(canvas: HTMLCanvasElement, deviceType: string): void {\n\n    const assets = {\n        "checkboard": new pc.Asset("checkboard", "texture", { url: "/static/assets/textures/checkboard.png" }),\n        \'font\': new pc.Asset(\'font\', \'font\', { url: \'/static/assets/fonts/courier.json\' })\n    };\n\n    const gfxOptions = {\n        deviceTypes: [deviceType],\n        glslangUrl: \'/static/lib/glslang/glslang.js\',\n        twgslUrl: \'/static/lib/twgsl/twgsl.js\'\n    };\n\n    pc.createGraphicsDevice(canvas, gfxOptions).then((device: pc.GraphicsDevice) => {\n\n        const createOptions = new pc.AppOptions();\n        createOptions.graphicsDevice = device;\n        createOptions.mouse = new pc.Mouse(document.body);\n        createOptions.touch = new pc.TouchDevice(document.body);\n        createOptions.elementInput = new pc.ElementInput(canvas);\n\n        createOptions.componentSystems = [\n            // @ts-ignore\n            pc.RenderComponentSystem,\n            // @ts-ignore\n            pc.CameraComponentSystem,\n            // @ts-ignore\n            pc.LightComponentSystem,\n            // @ts-ignore\n            pc.ScreenComponentSystem,\n            // @ts-ignore\n            pc.ButtonComponentSystem,\n            // @ts-ignore\n            pc.ElementComponentSystem\n        ];\n        createOptions.resourceHandlers = [\n            // @ts-ignore\n            pc.TextureHandler,\n            // @ts-ignore\n            pc.FontHandler\n        ];\n\n        const app = new pc.AppBase(canvas);\n        app.init(createOptions);\n\n        // Set the canvas to fill the window and automatically change resolution to be the same as the canvas size\n        app.setCanvasFillMode(pc.FILLMODE_FILL_WINDOW);\n        app.setCanvasResolution(pc.RESOLUTION_AUTO);\n\n        const assetListLoader = new pc.AssetListLoader(Object.values(assets), app.assets);\n        assetListLoader.load(() => {\n\n            app.start();\n\n            // Create an Entity with a camera component\n            const camera = new pc.Entity();\n            camera.addComponent("camera", {\n                clearColor: new pc.Color(30 / 255, 30 / 255, 30 / 255)\n            });\n            camera.rotateLocal(-30, 0, 0);\n            camera.translateLocal(0, 0, 7);\n            app.root.addChild(camera);\n\n            // Create an Entity for the ground\n            const material = new pc.StandardMaterial();\n            material.diffuse = pc.Color.WHITE;\n            material.diffuseMap = assets.checkboard.resource;\n            material.diffuseMapTiling = new pc.Vec2(50, 50);\n            material.update();\n\n            const ground = new pc.Entity();\n            ground.addComponent("render", {\n                type: "box",\n                material: material\n            });\n            ground.setLocalScale(50, 1, 50);\n            ground.setLocalPosition(0, -0.5, 0);\n            app.root.addChild(ground);\n\n            // Create an entity with a light component\n            const light = new pc.Entity();\n            light.addComponent("light", {\n                type: "directional",\n                color: new pc.Color(1, 1, 1),\n                castShadows: true,\n                intensity: 1,\n                shadowBias: 0.2,\n                shadowDistance: 16,\n                normalOffsetBias: 0.05,\n                shadowResolution: 2048\n            });\n            light.setLocalEulerAngles(45, 30, 0);\n            app.root.addChild(light);\n\n            // Create a 2D screen\n            const screen = new pc.Entity();\n            screen.setLocalScale(0.01, 0.01, 0.01);\n            screen.addComponent("screen", {\n                referenceResolution: new pc.Vec2(1280, 720),\n                screenSpace: true\n            });\n            app.root.addChild(screen);\n\n            /**\n             * Converts a coordinate in world space into a screen\'s space.\n             *\n             * @param {pc.Vec3} worldPosition - the Vec3 representing the world-space coordinate.\n             * @param {pc.CameraComponent} camera - the Camera.\n             * @param {pc.ScreenComponent} screen - the Screen\n             * @returns {pc.Vec3} a Vec3 of the input worldPosition relative to the camera and screen. The Z coordinate represents the depth,\n             * and negative numbers signal that the worldPosition is behind the camera.\n             */\n            function worldToScreenSpace(worldPosition: pc.Vec3, camera: pc.CameraComponent, screen: pc.ScreenComponent): pc.Vec3 {\n                const screenPos = camera.worldToScreen(worldPosition);\n\n                // take pixel ratio into account\n                const pixelRatio = app.graphicsDevice.maxPixelRatio;\n                screenPos.x *= pixelRatio;\n                screenPos.y *= pixelRatio;\n\n                // account for screen scaling\n                const scale = screen.scale;\n\n                // invert the y position\n                screenPos.y = screen.resolution.y - screenPos.y;\n\n                // put that into a Vec3\n                return new pc.Vec3(screenPos.x / scale, screenPos.y / scale, screenPos.z / scale);\n            }\n\n            function createPlayer(id: number, startingAngle: number, speed: number, radius: number) {\n                // Create a capsule entity to represent a player in the 3d world\n                const entity = new pc.Entity();\n                entity.setLocalScale(new pc.Vec3(0.5, 0.5, 0.5));\n                entity.addComponent("render", {\n                    type: "capsule"\n                });\n                app.root.addChild(entity);\n\n                // update the player position every frame with some mock logic\n                // normally, this would be taking inputs, running physics simulation, etc\n                let angle = startingAngle;\n                const height = 0.5;\n                app.on("update", function (dt) {\n                    angle += dt * speed;\n                    if (angle > 360) {\n                        angle -= 360;\n                    }\n                    entity.setLocalPosition(radius * Math.sin(angle * pc.math.DEG_TO_RAD), height, radius * Math.cos(angle * pc.math.DEG_TO_RAD));\n                    entity.setLocalEulerAngles(0, angle + 90, 0);\n                });\n\n                // Create a text element that will hover the player\'s head\n                const playerInfo = new pc.Entity();\n                playerInfo.addComponent("element", {\n                    pivot: new pc.Vec2(0.5, 0),\n                    anchor: new pc.Vec4(0, 0, 0, 0),\n                    width: 150,\n                    height: 50,\n                    opacity: 0.05,\n                    type: pc.ELEMENTTYPE_IMAGE\n                });\n                screen.addChild(playerInfo);\n\n                const name = new pc.Entity();\n                name.addComponent("element", {\n                    pivot: new pc.Vec2(0.5, 0.5),\n                    anchor: new pc.Vec4(0, 0.4, 1, 1),\n                    margin: new pc.Vec4(0, 0, 0, 0),\n                    fontAsset: assets.font.id,\n                    fontSize: 20,\n                    text: `Player ${id}`,\n                    useInput: true,\n                    type: pc.ELEMENTTYPE_TEXT\n                });\n                name.addComponent("button", {\n                    imageEntity: name\n                });\n                name.button.on(\'click\', function () {\n                    const color = new pc.Color(Math.random(), Math.random(), Math.random());\n                    name.element.color = color;\n                    entity.render.material.setParameter("material_diffuse", [color.r, color.g, color.b]);\n                });\n                playerInfo.addChild(name);\n\n                const healthBar = new pc.Entity();\n                healthBar.addComponent("element", {\n                    pivot: new pc.Vec2(0.5, 0),\n                    anchor: new pc.Vec4(0, 0, 1, 0.4),\n                    margin: new pc.Vec4(0, 0, 0, 0),\n                    color: new pc.Color(0.2, 0.6, 0.2, 1),\n                    opacity: 1,\n                    type: pc.ELEMENTTYPE_IMAGE\n                });\n                playerInfo.addChild(healthBar);\n\n                // update the player text\'s position to always hover the player\n                app.on("update", function () {\n                    // get the desired world position\n                    const worldPosition = entity.getPosition();\n                    worldPosition.y += 0.6; // slightly above the player\'s head\n\n                    // convert to screen position\n                    const screenPosition = worldToScreenSpace(worldPosition, camera.camera, screen.screen);\n\n                    if (screenPosition.z > 0) {\n                        // if world position is in front of the camera, show it\n                        playerInfo.enabled = true;\n\n                        // set the UI position\n                        playerInfo.setLocalPosition(screenPosition);\n                    } else {\n                        // if world position is actually *behind* the camera, hide the UI\n                        playerInfo.enabled = false;\n                    }\n                });\n            }\n\n            createPlayer(1, 135, 30, 1.5);\n            createPlayer(2, 65, -18, 1);\n            createPlayer(3, 0, 15, 2.5);\n        });\n    });\n}',javaScriptFunction:'function example(canvas, deviceType) {\n    const assets = {\n        checkboard: new pc.Asset("checkboard", "texture", {\n            url: "/static/assets/textures/checkboard.png",\n        }),\n        font: new pc.Asset("font", "font", {\n            url: "/static/assets/fonts/courier.json",\n        }),\n    };\n\n    const gfxOptions = {\n        deviceTypes: [deviceType],\n        glslangUrl: "/static/lib/glslang/glslang.js",\n        twgslUrl: "/static/lib/twgsl/twgsl.js",\n    };\n\n    pc.createGraphicsDevice(canvas, gfxOptions).then((device) => {\n        const createOptions = new pc.AppOptions();\n        createOptions.graphicsDevice = device;\n        createOptions.mouse = new pc.Mouse(document.body);\n        createOptions.touch = new pc.TouchDevice(document.body);\n        createOptions.elementInput = new pc.ElementInput(canvas);\n\n        createOptions.componentSystems = [\n            // @ts-ignore\n            pc.RenderComponentSystem,\n            // @ts-ignore\n            pc.CameraComponentSystem,\n            // @ts-ignore\n            pc.LightComponentSystem,\n            // @ts-ignore\n            pc.ScreenComponentSystem,\n            // @ts-ignore\n            pc.ButtonComponentSystem,\n            // @ts-ignore\n            pc.ElementComponentSystem,\n        ];\n\n        createOptions.resourceHandlers = [\n            // @ts-ignore\n            pc.TextureHandler,\n            // @ts-ignore\n            pc.FontHandler,\n        ];\n\n        const app = new pc.AppBase(canvas);\n        app.init(createOptions);\n\n        // Set the canvas to fill the window and automatically change resolution to be the same as the canvas size\n        app.setCanvasFillMode(pc.FILLMODE_FILL_WINDOW);\n        app.setCanvasResolution(pc.RESOLUTION_AUTO);\n\n        const assetListLoader = new pc.AssetListLoader(\n            Object.values(assets),\n            app.assets\n        );\n        assetListLoader.load(() => {\n            app.start();\n\n            // Create an Entity with a camera component\n            const camera = new pc.Entity();\n            camera.addComponent("camera", {\n                clearColor: new pc.Color(30 / 255, 30 / 255, 30 / 255),\n            });\n            camera.rotateLocal(-30, 0, 0);\n            camera.translateLocal(0, 0, 7);\n            app.root.addChild(camera);\n\n            // Create an Entity for the ground\n            const material = new pc.StandardMaterial();\n            material.diffuse = pc.Color.WHITE;\n            material.diffuseMap = assets.checkboard.resource;\n            material.diffuseMapTiling = new pc.Vec2(50, 50);\n            material.update();\n\n            const ground = new pc.Entity();\n            ground.addComponent("render", {\n                type: "box",\n                material: material,\n            });\n            ground.setLocalScale(50, 1, 50);\n            ground.setLocalPosition(0, -0.5, 0);\n            app.root.addChild(ground);\n\n            // Create an entity with a light component\n            const light = new pc.Entity();\n            light.addComponent("light", {\n                type: "directional",\n                color: new pc.Color(1, 1, 1),\n                castShadows: true,\n                intensity: 1,\n                shadowBias: 0.2,\n                shadowDistance: 16,\n                normalOffsetBias: 0.05,\n                shadowResolution: 2048,\n            });\n            light.setLocalEulerAngles(45, 30, 0);\n            app.root.addChild(light);\n\n            // Create a 2D screen\n            const screen = new pc.Entity();\n            screen.setLocalScale(0.01, 0.01, 0.01);\n            screen.addComponent("screen", {\n                referenceResolution: new pc.Vec2(1280, 720),\n                screenSpace: true,\n            });\n            app.root.addChild(screen);\n\n            /**\n             * Converts a coordinate in world space into a screen\'s space.\n             *\n             * @param {pc.Vec3} worldPosition - the Vec3 representing the world-space coordinate.\n             * @param {pc.CameraComponent} camera - the Camera.\n             * @param {pc.ScreenComponent} screen - the Screen\n             * @returns {pc.Vec3} a Vec3 of the input worldPosition relative to the camera and screen. The Z coordinate represents the depth,\n             * and negative numbers signal that the worldPosition is behind the camera.\n             */\n            function worldToScreenSpace(worldPosition, camera, screen) {\n                const screenPos = camera.worldToScreen(worldPosition);\n\n                // take pixel ratio into account\n                const pixelRatio = app.graphicsDevice.maxPixelRatio;\n                screenPos.x *= pixelRatio;\n                screenPos.y *= pixelRatio;\n\n                // account for screen scaling\n                const scale = screen.scale;\n\n                // invert the y position\n                screenPos.y = screen.resolution.y - screenPos.y;\n\n                // put that into a Vec3\n                return new pc.Vec3(\n                    screenPos.x / scale,\n                    screenPos.y / scale,\n                    screenPos.z / scale\n                );\n            }\n\n            function createPlayer(id, startingAngle, speed, radius) {\n                // Create a capsule entity to represent a player in the 3d world\n                const entity = new pc.Entity();\n                entity.setLocalScale(new pc.Vec3(0.5, 0.5, 0.5));\n                entity.addComponent("render", {\n                    type: "capsule",\n                });\n                app.root.addChild(entity);\n\n                // update the player position every frame with some mock logic\n                // normally, this would be taking inputs, running physics simulation, etc\n                let angle = startingAngle;\n                const height = 0.5;\n                app.on("update", function (dt) {\n                    angle += dt * speed;\n                    if (angle > 360) {\n                        angle -= 360;\n                    }\n                    entity.setLocalPosition(\n                        radius * Math.sin(angle * pc.math.DEG_TO_RAD),\n                        height,\n                        radius * Math.cos(angle * pc.math.DEG_TO_RAD)\n                    );\n                    entity.setLocalEulerAngles(0, angle + 90, 0);\n                });\n\n                // Create a text element that will hover the player\'s head\n                const playerInfo = new pc.Entity();\n                playerInfo.addComponent("element", {\n                    pivot: new pc.Vec2(0.5, 0),\n                    anchor: new pc.Vec4(0, 0, 0, 0),\n                    width: 150,\n                    height: 50,\n                    opacity: 0.05,\n                    type: pc.ELEMENTTYPE_IMAGE,\n                });\n                screen.addChild(playerInfo);\n\n                const name = new pc.Entity();\n                name.addComponent("element", {\n                    pivot: new pc.Vec2(0.5, 0.5),\n                    anchor: new pc.Vec4(0, 0.4, 1, 1),\n                    margin: new pc.Vec4(0, 0, 0, 0),\n                    fontAsset: assets.font.id,\n                    fontSize: 20,\n                    text: `Player ${id}`,\n                    useInput: true,\n                    type: pc.ELEMENTTYPE_TEXT,\n                });\n                name.addComponent("button", {\n                    imageEntity: name,\n                });\n                name.button.on("click", function () {\n                    const color = new pc.Color(\n                        Math.random(),\n                        Math.random(),\n                        Math.random()\n                    );\n                    name.element.color = color;\n                    entity.render.material.setParameter("material_diffuse", [\n                        color.r,\n                        color.g,\n                        color.b,\n                    ]);\n                });\n                playerInfo.addChild(name);\n\n                const healthBar = new pc.Entity();\n                healthBar.addComponent("element", {\n                    pivot: new pc.Vec2(0.5, 0),\n                    anchor: new pc.Vec4(0, 0, 1, 0.4),\n                    margin: new pc.Vec4(0, 0, 0, 0),\n                    color: new pc.Color(0.2, 0.6, 0.2, 1),\n                    opacity: 1,\n                    type: pc.ELEMENTTYPE_IMAGE,\n                });\n                playerInfo.addChild(healthBar);\n\n                // update the player text\'s position to always hover the player\n                app.on("update", function () {\n                    // get the desired world position\n                    const worldPosition = entity.getPosition();\n                    worldPosition.y += 0.6; // slightly above the player\'s head\n\n                    // convert to screen position\n                    const screenPosition = worldToScreenSpace(\n                        worldPosition,\n                        camera.camera,\n                        screen.screen\n                    );\n\n                    if (screenPosition.z > 0) {\n                        // if world position is in front of the camera, show it\n                        playerInfo.enabled = true;\n\n                        // set the UI position\n                        playerInfo.setLocalPosition(screenPosition);\n                    } else {\n                        // if world position is actually *behind* the camera, hide the UI\n                        playerInfo.enabled = false;\n                    }\n                });\n            }\n\n            createPlayer(1, 135, 30, 1.5);\n            createPlayer(2, 65, -18, 1);\n            createPlayer(3, 0, 15, 2.5);\n        });\n    });\n}\n',nameSlug:"world-to-screen",categorySlug:"user-interface"},"world-ui":{typeScriptFunction:'function example(canvas: HTMLCanvasElement, deviceType: string): void {\n\n    const assets = {\n        "checkboard": new pc.Asset("checkboard", "texture", { url: "/static/assets/textures/checkboard.png" }),\n        \'font\': new pc.Asset(\'font\', \'font\', { url: \'/static/assets/fonts/courier.json\' }),\n        \'script\': new pc.Asset(\'script\', \'script\', { url: \'/static/scripts/camera/orbit-camera.js\' })\n    };\n\n    const gfxOptions = {\n        deviceTypes: [deviceType],\n        glslangUrl: \'/static/lib/glslang/glslang.js\',\n        twgslUrl: \'/static/lib/twgsl/twgsl.js\'\n    };\n\n    pc.createGraphicsDevice(canvas, gfxOptions).then((device: pc.GraphicsDevice) => {\n\n        const createOptions = new pc.AppOptions();\n        createOptions.graphicsDevice = device;\n        createOptions.mouse = new pc.Mouse(document.body);\n        createOptions.touch = new pc.TouchDevice(document.body);\n        createOptions.elementInput = new pc.ElementInput(canvas);\n\n        createOptions.componentSystems = [\n            // @ts-ignore\n            pc.RenderComponentSystem,\n            // @ts-ignore\n            pc.CameraComponentSystem,\n            // @ts-ignore\n            pc.LightComponentSystem,\n            // @ts-ignore\n            pc.ScreenComponentSystem,\n            // @ts-ignore\n            pc.ButtonComponentSystem,\n            // @ts-ignore\n            pc.ElementComponentSystem,\n            // @ts-ignore\n            pc.ScriptComponentSystem\n        ];\n        createOptions.resourceHandlers = [\n            // @ts-ignore\n            pc.TextureHandler,\n            // @ts-ignore\n            pc.FontHandler,\n            // @ts-ignore\n            pc.ScriptHandler\n        ];\n\n        const app = new pc.AppBase(canvas);\n        app.init(createOptions);\n\n        // Set the canvas to fill the window and automatically change resolution to be the same as the canvas size\n        app.setCanvasFillMode(pc.FILLMODE_FILL_WINDOW);\n        app.setCanvasResolution(pc.RESOLUTION_AUTO);\n\n        const assetListLoader = new pc.AssetListLoader(Object.values(assets), app.assets);\n        assetListLoader.load(() => {\n\n            app.start();\n\n            // Create an Entity with a camera component and simple orbiter script\n            const camera = new pc.Entity();\n            camera.addComponent("camera", {\n                clearColor: new pc.Color(30 / 255, 30 / 255, 30 / 255)\n            });\n            camera.rotateLocal(-30, 0, 0);\n            camera.translateLocal(0, 0, 7);\n            camera.addComponent("script");\n            camera.script.create("orbitCamera", {\n                attributes: {\n                    inertiaFactor: 0.2 // Override default of 0 (no inertia)\n                }\n            });\n            camera.script.create("orbitCameraInputMouse");\n            camera.script.create("orbitCameraInputTouch");\n            app.root.addChild(camera);\n\n            // Create an Entity for the ground\n            const material = new pc.StandardMaterial();\n            material.diffuse = pc.Color.WHITE;\n            material.diffuseMap = assets.checkboard.resource;\n            material.diffuseMapTiling = new pc.Vec2(50, 50);\n            material.update();\n\n            const ground = new pc.Entity();\n            ground.addComponent("render", {\n                type: "box",\n                material: material\n            });\n            ground.setLocalScale(50, 1, 50);\n            ground.setLocalPosition(0, -0.5, 0);\n            app.root.addChild(ground);\n\n            // Create an entity with a light component\n            const light = new pc.Entity();\n            light.addComponent("light", {\n                type: "directional",\n                color: new pc.Color(1, 1, 1),\n                castShadows: true,\n                intensity: 1,\n                shadowBias: 0.2,\n                shadowDistance: 16,\n                normalOffsetBias: 0.05,\n                shadowResolution: 2048\n            });\n            light.setLocalEulerAngles(45, 30, 0);\n            app.root.addChild(light);\n\n            // Create a 3D world screen, which is basically a `screen` with `screenSpace` set to false\n            const screen = new pc.Entity();\n            screen.setLocalScale(0.01, 0.01, 0.01);\n            screen.setPosition(0, 0.01, 0); // place UI slightly above the ground\n            screen.setLocalRotation(new pc.Quat().setFromEulerAngles(-90, 0, 0));\n            screen.addComponent("screen", {\n                referenceResolution: new pc.Vec2(1280, 720),\n                screenSpace: false\n            });\n            app.root.addChild(screen);\n\n            // Text\n            const text = new pc.Entity();\n            text.setLocalPosition(0, 25, 0);\n            text.addComponent("element", {\n                pivot: new pc.Vec2(0.5, 0.5),\n                anchor: new pc.Vec4(0.5, 0.5, 0.5, 0.5),\n                fontAsset: assets.font.id,\n                fontSize: 18,\n                text: "this is a UI screen placed in the 3D world",\n                width: 200,\n                height: 100,\n                autoWidth: false,\n                autoHeight: false,\n                wrapLines: true,\n                enableMarkup: true,\n                type: pc.ELEMENTTYPE_TEXT\n            });\n            screen.addChild(text);\n\n            // Button\n            const button = new pc.Entity();\n            button.setLocalPosition(0, -25, 0);\n            button.addComponent("button");\n            button.addComponent("element", {\n                anchor: [0.5, 0.5, 0.5, 0.5],\n                width: 100,\n                height: 25,\n                pivot: [0.5, 0.5],\n                type: pc.ELEMENTTYPE_IMAGE,\n                useInput: true\n            });\n            screen.addChild(button);\n\n            // Create a label for the button\n            const buttonText = new pc.Entity();\n            buttonText.addComponent("element", {\n                pivot: new pc.Vec2(0.5, 0.5),\n                anchor: new pc.Vec4(0, 0, 1, 1),\n                margin: new pc.Vec4(0, 0, 0, 0),\n                color: new pc.Color(0, 0, 0),\n                fontAsset: assets.font.id,\n                fontSize: 12,\n                text: "and this is a button",\n                type: pc.ELEMENTTYPE_TEXT,\n                wrapLines: true\n            });\n            button.addChild(buttonText);\n\n            // Change the background color every time the button is clicked\n            button.button.on(\'click\', function () {\n                camera.camera.clearColor = new pc.Color(Math.random(), Math.random(), Math.random());\n            });\n        });\n    });\n}',javaScriptFunction:'function example(canvas, deviceType) {\n    const assets = {\n        checkboard: new pc.Asset("checkboard", "texture", {\n            url: "/static/assets/textures/checkboard.png",\n        }),\n        font: new pc.Asset("font", "font", {\n            url: "/static/assets/fonts/courier.json",\n        }),\n        script: new pc.Asset("script", "script", {\n            url: "/static/scripts/camera/orbit-camera.js",\n        }),\n    };\n\n    const gfxOptions = {\n        deviceTypes: [deviceType],\n        glslangUrl: "/static/lib/glslang/glslang.js",\n        twgslUrl: "/static/lib/twgsl/twgsl.js",\n    };\n\n    pc.createGraphicsDevice(canvas, gfxOptions).then((device) => {\n        const createOptions = new pc.AppOptions();\n        createOptions.graphicsDevice = device;\n        createOptions.mouse = new pc.Mouse(document.body);\n        createOptions.touch = new pc.TouchDevice(document.body);\n        createOptions.elementInput = new pc.ElementInput(canvas);\n\n        createOptions.componentSystems = [\n            // @ts-ignore\n            pc.RenderComponentSystem,\n            // @ts-ignore\n            pc.CameraComponentSystem,\n            // @ts-ignore\n            pc.LightComponentSystem,\n            // @ts-ignore\n            pc.ScreenComponentSystem,\n            // @ts-ignore\n            pc.ButtonComponentSystem,\n            // @ts-ignore\n            pc.ElementComponentSystem,\n            // @ts-ignore\n            pc.ScriptComponentSystem,\n        ];\n\n        createOptions.resourceHandlers = [\n            // @ts-ignore\n            pc.TextureHandler,\n            // @ts-ignore\n            pc.FontHandler,\n            // @ts-ignore\n            pc.ScriptHandler,\n        ];\n\n        const app = new pc.AppBase(canvas);\n        app.init(createOptions);\n\n        // Set the canvas to fill the window and automatically change resolution to be the same as the canvas size\n        app.setCanvasFillMode(pc.FILLMODE_FILL_WINDOW);\n        app.setCanvasResolution(pc.RESOLUTION_AUTO);\n\n        const assetListLoader = new pc.AssetListLoader(\n            Object.values(assets),\n            app.assets\n        );\n        assetListLoader.load(() => {\n            app.start();\n\n            // Create an Entity with a camera component and simple orbiter script\n            const camera = new pc.Entity();\n            camera.addComponent("camera", {\n                clearColor: new pc.Color(30 / 255, 30 / 255, 30 / 255),\n            });\n            camera.rotateLocal(-30, 0, 0);\n            camera.translateLocal(0, 0, 7);\n            camera.addComponent("script");\n            camera.script.create("orbitCamera", {\n                attributes: {\n                    inertiaFactor: 0.2, // Override default of 0 (no inertia)\n                },\n            });\n            camera.script.create("orbitCameraInputMouse");\n            camera.script.create("orbitCameraInputTouch");\n            app.root.addChild(camera);\n\n            // Create an Entity for the ground\n            const material = new pc.StandardMaterial();\n            material.diffuse = pc.Color.WHITE;\n            material.diffuseMap = assets.checkboard.resource;\n            material.diffuseMapTiling = new pc.Vec2(50, 50);\n            material.update();\n\n            const ground = new pc.Entity();\n            ground.addComponent("render", {\n                type: "box",\n                material: material,\n            });\n            ground.setLocalScale(50, 1, 50);\n            ground.setLocalPosition(0, -0.5, 0);\n            app.root.addChild(ground);\n\n            // Create an entity with a light component\n            const light = new pc.Entity();\n            light.addComponent("light", {\n                type: "directional",\n                color: new pc.Color(1, 1, 1),\n                castShadows: true,\n                intensity: 1,\n                shadowBias: 0.2,\n                shadowDistance: 16,\n                normalOffsetBias: 0.05,\n                shadowResolution: 2048,\n            });\n            light.setLocalEulerAngles(45, 30, 0);\n            app.root.addChild(light);\n\n            // Create a 3D world screen, which is basically a `screen` with `screenSpace` set to false\n            const screen = new pc.Entity();\n            screen.setLocalScale(0.01, 0.01, 0.01);\n            screen.setPosition(0, 0.01, 0); // place UI slightly above the ground\n            screen.setLocalRotation(\n                new pc.Quat().setFromEulerAngles(-90, 0, 0)\n            );\n            screen.addComponent("screen", {\n                referenceResolution: new pc.Vec2(1280, 720),\n                screenSpace: false,\n            });\n            app.root.addChild(screen);\n\n            // Text\n            const text = new pc.Entity();\n            text.setLocalPosition(0, 25, 0);\n            text.addComponent("element", {\n                pivot: new pc.Vec2(0.5, 0.5),\n                anchor: new pc.Vec4(0.5, 0.5, 0.5, 0.5),\n                fontAsset: assets.font.id,\n                fontSize: 18,\n                text: "this is a UI screen placed in the 3D world",\n                width: 200,\n                height: 100,\n                autoWidth: false,\n                autoHeight: false,\n                wrapLines: true,\n                enableMarkup: true,\n                type: pc.ELEMENTTYPE_TEXT,\n            });\n            screen.addChild(text);\n\n            // Button\n            const button = new pc.Entity();\n            button.setLocalPosition(0, -25, 0);\n            button.addComponent("button");\n            button.addComponent("element", {\n                anchor: [0.5, 0.5, 0.5, 0.5],\n                width: 100,\n                height: 25,\n                pivot: [0.5, 0.5],\n                type: pc.ELEMENTTYPE_IMAGE,\n                useInput: true,\n            });\n            screen.addChild(button);\n\n            // Create a label for the button\n            const buttonText = new pc.Entity();\n            buttonText.addComponent("element", {\n                pivot: new pc.Vec2(0.5, 0.5),\n                anchor: new pc.Vec4(0, 0, 1, 1),\n                margin: new pc.Vec4(0, 0, 0, 0),\n                color: new pc.Color(0, 0, 0),\n                fontAsset: assets.font.id,\n                fontSize: 12,\n                text: "and this is a button",\n                type: pc.ELEMENTTYPE_TEXT,\n                wrapLines: true,\n            });\n            button.addChild(buttonText);\n\n            // Change the background color every time the button is clicked\n            button.button.on("click", function () {\n                camera.camera.clearColor = new pc.Color(\n                    Math.random(),\n                    Math.random(),\n                    Math.random()\n                );\n            });\n        });\n    });\n}\n',nameSlug:"world-ui",categorySlug:"user-interface"}},xr:{"ar-basic":{typeScriptFunction:'function example(canvas: HTMLCanvasElement, deviceType: string): void {\n    const message = function (msg: string) {\n        let el: HTMLDivElement = document.querySelector(\'.message\');\n        if (!el) {\n            el = document.createElement(\'div\');\n            el.classList.add(\'message\');\n            document.body.append(el);\n        }\n        el.textContent = msg;\n    };\n\n    const app = new pc.Application(canvas, {\n        mouse: new pc.Mouse(canvas),\n        touch: new pc.TouchDevice(canvas),\n        keyboard: new pc.Keyboard(window),\n        graphicsDeviceOptions: { alpha: true }\n    });\n\n    // use device pixel ratio\n    app.graphicsDevice.maxPixelRatio = window.devicePixelRatio;\n\n    app.start();\n\n    // create camera\n    const c = new pc.Entity();\n    c.addComponent(\'camera\', {\n        clearColor: new pc.Color(0, 0, 0, 0),\n        farClip: 10000\n    });\n    app.root.addChild(c);\n\n    const l = new pc.Entity();\n    l.addComponent("light", {\n        type: "spot",\n        range: 30\n    });\n    l.translate(0, 10, 0);\n    app.root.addChild(l);\n\n\n    const createCube = function (x: number, y: number, z: number) {\n        const cube = new pc.Entity();\n        cube.addComponent("render", {\n            type: "box"\n        });\n        cube.setLocalScale(0.5, 0.5, 0.5);\n        cube.translate(x * 0.5, y, z * 0.5);\n        app.root.addChild(cube);\n    };\n\n    // create a grid of cubes\n    const SIZE = 4;\n    for (let x = 0; x < SIZE; x++) {\n        for (let y = 0; y < SIZE; y++) {\n            createCube(2 * x - SIZE, 0.25, 2 * y - SIZE);\n        }\n    }\n\n    if (app.xr.supported) {\n        const activate = function () {\n            if (app.xr.isAvailable(pc.XRTYPE_AR)) {\n                c.camera.startXr(pc.XRTYPE_AR, pc.XRSPACE_LOCALFLOOR, {\n                    callback: function (err) {\n                        if (err) message("WebXR Immersive AR failed to start: " + err.message);\n                    }\n                });\n            } else {\n                message("Immersive AR is not available");\n            }\n        };\n\n        app.mouse.on("mousedown", function () {\n            if (!app.xr.active)\n                activate();\n        });\n\n        if (app.touch) {\n            app.touch.on("touchend", function (evt) {\n                if (!app.xr.active) {\n                    // if not in VR, activate\n                    activate();\n                } else {\n                    // otherwise reset camera\n                    c.camera.endXr();\n                }\n\n                evt.event.preventDefault();\n                evt.event.stopPropagation();\n            });\n        }\n\n        // end session by keyboard ESC\n        app.keyboard.on(\'keydown\', function (evt) {\n            if (evt.key === pc.KEY_ESCAPE && app.xr.active) {\n                app.xr.end();\n            }\n        });\n\n        app.xr.on(\'start\', function () {\n            message("Immersive AR session has started");\n        });\n        app.xr.on(\'end\', function () {\n            message("Immersive AR session has ended");\n        });\n        app.xr.on(\'available:\' + pc.XRTYPE_AR, function (available) {\n            message("Immersive AR is " + (available ? \'available\' : \'unavailable\'));\n        });\n\n        if (!app.xr.isAvailable(pc.XRTYPE_AR)) {\n            message("Immersive AR is not available");\n        }\n    } else {\n        message("WebXR is not supported");\n    }\n}',javaScriptFunction:'function example(canvas, deviceType) {\n    const message = function (msg) {\n        let el = document.querySelector(".message");\n        if (!el) {\n            el = document.createElement("div");\n            el.classList.add("message");\n            document.body.append(el);\n        }\n        el.textContent = msg;\n    };\n\n    const app = new pc.Application(canvas, {\n        mouse: new pc.Mouse(canvas),\n        touch: new pc.TouchDevice(canvas),\n        keyboard: new pc.Keyboard(window),\n        graphicsDeviceOptions: { alpha: true },\n    });\n\n    // use device pixel ratio\n    app.graphicsDevice.maxPixelRatio = window.devicePixelRatio;\n\n    app.start();\n\n    // create camera\n    const c = new pc.Entity();\n    c.addComponent("camera", {\n        clearColor: new pc.Color(0, 0, 0, 0),\n        farClip: 10000,\n    });\n    app.root.addChild(c);\n\n    const l = new pc.Entity();\n    l.addComponent("light", {\n        type: "spot",\n        range: 30,\n    });\n    l.translate(0, 10, 0);\n    app.root.addChild(l);\n\n    const createCube = function (x, y, z) {\n        const cube = new pc.Entity();\n        cube.addComponent("render", {\n            type: "box",\n        });\n        cube.setLocalScale(0.5, 0.5, 0.5);\n        cube.translate(x * 0.5, y, z * 0.5);\n        app.root.addChild(cube);\n    };\n\n    // create a grid of cubes\n    const SIZE = 4;\n    for (let x = 0; x < SIZE; x++) {\n        for (let y = 0; y < SIZE; y++) {\n            createCube(2 * x - SIZE, 0.25, 2 * y - SIZE);\n        }\n    }\n\n    if (app.xr.supported) {\n        const activate = function () {\n            if (app.xr.isAvailable(pc.XRTYPE_AR)) {\n                c.camera.startXr(pc.XRTYPE_AR, pc.XRSPACE_LOCALFLOOR, {\n                    callback: function (err) {\n                        if (err)\n                            message(\n                                "WebXR Immersive AR failed to start: " +\n                                    err.message\n                            );\n                    },\n                });\n            } else {\n                message("Immersive AR is not available");\n            }\n        };\n\n        app.mouse.on("mousedown", function () {\n            if (!app.xr.active) activate();\n        });\n\n        if (app.touch) {\n            app.touch.on("touchend", function (evt) {\n                if (!app.xr.active) {\n                    // if not in VR, activate\n                    activate();\n                } else {\n                    // otherwise reset camera\n                    c.camera.endXr();\n                }\n\n                evt.event.preventDefault();\n                evt.event.stopPropagation();\n            });\n        }\n\n        // end session by keyboard ESC\n        app.keyboard.on("keydown", function (evt) {\n            if (evt.key === pc.KEY_ESCAPE && app.xr.active) {\n                app.xr.end();\n            }\n        });\n\n        app.xr.on("start", function () {\n            message("Immersive AR session has started");\n        });\n        app.xr.on("end", function () {\n            message("Immersive AR session has ended");\n        });\n        app.xr.on("available:" + pc.XRTYPE_AR, function (available) {\n            message(\n                "Immersive AR is " + (available ? "available" : "unavailable")\n            );\n        });\n\n        if (!app.xr.isAvailable(pc.XRTYPE_AR)) {\n            message("Immersive AR is not available");\n        }\n    } else {\n        message("WebXR is not supported");\n    }\n}\n',nameSlug:"ar-basic",categorySlug:"xr"},"ar-hit-test":{typeScriptFunction:'function example(canvas: HTMLCanvasElement, deviceType: string): void {\n    const message = function (msg: string) {\n        let el: HTMLDivElement = document.querySelector(\'.message\');\n        if (!el) {\n            el = document.createElement(\'div\');\n            el.classList.add(\'message\');\n            document.body.append(el);\n        }\n        el.textContent = msg;\n    };\n\n    const app = new pc.Application(canvas, {\n        mouse: new pc.Mouse(canvas),\n        touch: new pc.TouchDevice(canvas),\n        keyboard: new pc.Keyboard(window),\n        graphicsDeviceOptions: { alpha: true }\n    });\n    app.setCanvasFillMode(pc.FILLMODE_FILL_WINDOW);\n    app.setCanvasResolution(pc.RESOLUTION_AUTO);\n\n    window.addEventListener("resize", function () {\n        app.resizeCanvas(canvas.width, canvas.height);\n    });\n\n    // use device pixel ratio\n    app.graphicsDevice.maxPixelRatio = window.devicePixelRatio;\n\n    app.start();\n\n    // create camera\n    const c = new pc.Entity();\n    c.addComponent(\'camera\', {\n        clearColor: new pc.Color(0, 0, 0, 0),\n        farClip: 10000\n    });\n    app.root.addChild(c);\n\n    const l = new pc.Entity();\n    l.addComponent("light", {\n        type: "spot",\n        range: 30\n    });\n    l.translate(0, 10, 0);\n    app.root.addChild(l);\n\n    const target = new pc.Entity();\n    target.addComponent("render", {\n        type: "cylinder"\n    });\n    target.setLocalScale(0.5, 0.01, 0.5);\n    app.root.addChild(target);\n\n    if (app.xr.supported) {\n        const activate = function () {\n            if (app.xr.isAvailable(pc.XRTYPE_AR)) {\n                c.camera.startXr(pc.XRTYPE_AR, pc.XRSPACE_LOCALFLOOR, {\n                    callback: function (err) {\n                        if (err) message("WebXR Immersive AR failed to start: " + err.message);\n                    }\n                });\n            } else {\n                message("Immersive AR is not available");\n            }\n        };\n\n        app.mouse.on("mousedown", function () {\n            if (!app.xr.active)\n                activate();\n        });\n\n        if (app.touch) {\n            app.touch.on("touchend", function (evt) {\n                if (!app.xr.active) {\n                    // if not in VR, activate\n                    activate();\n                } else {\n                    // otherwise reset camera\n                    c.camera.endXr();\n                }\n\n                evt.event.preventDefault();\n                evt.event.stopPropagation();\n            });\n        }\n\n        // end session by keyboard ESC\n        app.keyboard.on(\'keydown\', function (evt) {\n            if (evt.key === pc.KEY_ESCAPE && app.xr.active) {\n                app.xr.end();\n            }\n        });\n\n        app.xr.on(\'start\', function () {\n            message("Immersive AR session has started");\n\n            if (!app.xr.hitTest.supported)\n                return;\n\n            app.xr.hitTest.start({\n                entityTypes: [pc.XRTRACKABLE_POINT, pc.XRTRACKABLE_PLANE],\n                callback: function (err, hitTestSource) {\n                    if (err) {\n                        message("Failed to start AR hit test");\n                        return;\n                    }\n\n                    hitTestSource.on(\'result\', function (position, rotation) {\n                        target.setPosition(position);\n                        target.setRotation(rotation);\n                    });\n                }\n            });\n        });\n        app.xr.on(\'end\', function () {\n            message("Immersive AR session has ended");\n        });\n        app.xr.on(\'available:\' + pc.XRTYPE_AR, function (available) {\n            if (available) {\n                if (app.xr.hitTest.supported) {\n                    message("Touch screen to start AR session and look at the floor or walls");\n                } else {\n                    message("AR Hit Test is not supported");\n                }\n            } else {\n                message("Immersive AR is unavailable");\n            }\n        });\n\n        if (!app.xr.isAvailable(pc.XRTYPE_AR)) {\n            message("Immersive AR is not available");\n        } else if (!app.xr.hitTest.supported) {\n            message("AR Hit Test is not supported");\n        } else {\n            message("Touch screen to start AR session and look at the floor or walls");\n        }\n    } else {\n        message("WebXR is not supported");\n    }\n}',javaScriptFunction:'function example(canvas, deviceType) {\n    const message = function (msg) {\n        let el = document.querySelector(".message");\n        if (!el) {\n            el = document.createElement("div");\n            el.classList.add("message");\n            document.body.append(el);\n        }\n        el.textContent = msg;\n    };\n\n    const app = new pc.Application(canvas, {\n        mouse: new pc.Mouse(canvas),\n        touch: new pc.TouchDevice(canvas),\n        keyboard: new pc.Keyboard(window),\n        graphicsDeviceOptions: { alpha: true },\n    });\n    app.setCanvasFillMode(pc.FILLMODE_FILL_WINDOW);\n    app.setCanvasResolution(pc.RESOLUTION_AUTO);\n\n    window.addEventListener("resize", function () {\n        app.resizeCanvas(canvas.width, canvas.height);\n    });\n\n    // use device pixel ratio\n    app.graphicsDevice.maxPixelRatio = window.devicePixelRatio;\n\n    app.start();\n\n    // create camera\n    const c = new pc.Entity();\n    c.addComponent("camera", {\n        clearColor: new pc.Color(0, 0, 0, 0),\n        farClip: 10000,\n    });\n    app.root.addChild(c);\n\n    const l = new pc.Entity();\n    l.addComponent("light", {\n        type: "spot",\n        range: 30,\n    });\n    l.translate(0, 10, 0);\n    app.root.addChild(l);\n\n    const target = new pc.Entity();\n    target.addComponent("render", {\n        type: "cylinder",\n    });\n    target.setLocalScale(0.5, 0.01, 0.5);\n    app.root.addChild(target);\n\n    if (app.xr.supported) {\n        const activate = function () {\n            if (app.xr.isAvailable(pc.XRTYPE_AR)) {\n                c.camera.startXr(pc.XRTYPE_AR, pc.XRSPACE_LOCALFLOOR, {\n                    callback: function (err) {\n                        if (err)\n                            message(\n                                "WebXR Immersive AR failed to start: " +\n                                    err.message\n                            );\n                    },\n                });\n            } else {\n                message("Immersive AR is not available");\n            }\n        };\n\n        app.mouse.on("mousedown", function () {\n            if (!app.xr.active) activate();\n        });\n\n        if (app.touch) {\n            app.touch.on("touchend", function (evt) {\n                if (!app.xr.active) {\n                    // if not in VR, activate\n                    activate();\n                } else {\n                    // otherwise reset camera\n                    c.camera.endXr();\n                }\n\n                evt.event.preventDefault();\n                evt.event.stopPropagation();\n            });\n        }\n\n        // end session by keyboard ESC\n        app.keyboard.on("keydown", function (evt) {\n            if (evt.key === pc.KEY_ESCAPE && app.xr.active) {\n                app.xr.end();\n            }\n        });\n\n        app.xr.on("start", function () {\n            message("Immersive AR session has started");\n\n            if (!app.xr.hitTest.supported) return;\n\n            app.xr.hitTest.start({\n                entityTypes: [pc.XRTRACKABLE_POINT, pc.XRTRACKABLE_PLANE],\n                callback: function (err, hitTestSource) {\n                    if (err) {\n                        message("Failed to start AR hit test");\n                        return;\n                    }\n\n                    hitTestSource.on("result", function (position, rotation) {\n                        target.setPosition(position);\n                        target.setRotation(rotation);\n                    });\n                },\n            });\n        });\n        app.xr.on("end", function () {\n            message("Immersive AR session has ended");\n        });\n        app.xr.on("available:" + pc.XRTYPE_AR, function (available) {\n            if (available) {\n                if (app.xr.hitTest.supported) {\n                    message(\n                        "Touch screen to start AR session and look at the floor or walls"\n                    );\n                } else {\n                    message("AR Hit Test is not supported");\n                }\n            } else {\n                message("Immersive AR is unavailable");\n            }\n        });\n\n        if (!app.xr.isAvailable(pc.XRTYPE_AR)) {\n            message("Immersive AR is not available");\n        } else if (!app.xr.hitTest.supported) {\n            message("AR Hit Test is not supported");\n        } else {\n            message(\n                "Touch screen to start AR session and look at the floor or walls"\n            );\n        }\n    } else {\n        message("WebXR is not supported");\n    }\n}\n',nameSlug:"ar-hit-test",categorySlug:"xr"},"vr-basic":{typeScriptFunction:'function example(canvas: HTMLCanvasElement, deviceType: string): void {\n    const message = function (msg: string) {\n        let el: HTMLDivElement = document.querySelector(\'.message\');\n        if (!el) {\n            el = document.createElement(\'div\');\n            el.classList.add(\'message\');\n            document.body.append(el);\n        }\n        el.textContent = msg;\n    };\n\n    const app = new pc.Application(canvas, {\n        mouse: new pc.Mouse(canvas),\n        touch: new pc.TouchDevice(canvas),\n        keyboard: new pc.Keyboard(window)\n    });\n    app.setCanvasFillMode(pc.FILLMODE_FILL_WINDOW);\n    app.setCanvasResolution(pc.RESOLUTION_AUTO);\n\n    window.addEventListener("resize", function () {\n        app.resizeCanvas(canvas.width, canvas.height);\n    });\n\n    // use device pixel ratio\n    app.graphicsDevice.maxPixelRatio = window.devicePixelRatio;\n\n    app.start();\n\n    // create camera\n    const c = new pc.Entity();\n    c.addComponent(\'camera\', {\n        clearColor: new pc.Color(44 / 255, 62 / 255, 80 / 255),\n        farClip: 10000\n    });\n    app.root.addChild(c);\n\n    const l = new pc.Entity();\n    l.addComponent("light", {\n        type: "spot",\n        range: 30\n    });\n    l.translate(0, 10, 0);\n    app.root.addChild(l);\n\n\n    const createCube = function (x: number, y: number, z: number) {\n        const cube = new pc.Entity();\n        cube.addComponent("render", {\n            type: "box"\n        });\n        cube.setLocalScale(1, 1, 1);\n        cube.translate(x, y, z);\n        app.root.addChild(cube);\n    };\n\n    // create a grid of cubes\n    const SIZE = 16;\n    for (let x = 0; x < SIZE; x++) {\n        for (let y = 0; y < SIZE; y++) {\n            createCube(2 * x - SIZE, -1.5, 2 * y - SIZE);\n        }\n    }\n\n    if (app.xr.supported) {\n        const activate = function () {\n            if (app.xr.isAvailable(pc.XRTYPE_VR)) {\n                c.camera.startXr(pc.XRTYPE_VR, pc.XRSPACE_LOCAL, {\n                    callback: function (err) {\n                        if (err) message("WebXR Immersive VR failed to start: " + err.message);\n                    }\n                });\n            } else {\n                message("Immersive VR is not available");\n            }\n        };\n\n        app.mouse.on("mousedown", function () {\n            if (!app.xr.active)\n                activate();\n        });\n\n        if (app.touch) {\n            app.touch.on("touchend", function (evt) {\n                if (!app.xr.active) {\n                    // if not in VR, activate\n                    activate();\n                } else {\n                    // otherwise reset camera\n                    c.camera.endXr();\n                }\n\n                evt.event.preventDefault();\n                evt.event.stopPropagation();\n            });\n        }\n\n        // end session by keyboard ESC\n        app.keyboard.on(\'keydown\', function (evt) {\n            if (evt.key === pc.KEY_ESCAPE && app.xr.active) {\n                app.xr.end();\n            }\n        });\n\n        app.xr.on(\'start\', function () {\n            message("Immersive VR session has started");\n        });\n        app.xr.on(\'end\', function () {\n            message("Immersive VR session has ended");\n        });\n        app.xr.on(\'available:\' + pc.XRTYPE_VR, function (available) {\n            message("Immersive VR is " + (available ? \'available\' : \'unavailable\'));\n        });\n\n        if (!app.xr.isAvailable(pc.XRTYPE_VR)) {\n            message("Immersive VR is not available");\n        }\n    } else {\n        message("WebXR is not supported");\n    }\n}',javaScriptFunction:'function example(canvas, deviceType) {\n    const message = function (msg) {\n        let el = document.querySelector(".message");\n        if (!el) {\n            el = document.createElement("div");\n            el.classList.add("message");\n            document.body.append(el);\n        }\n        el.textContent = msg;\n    };\n\n    const app = new pc.Application(canvas, {\n        mouse: new pc.Mouse(canvas),\n        touch: new pc.TouchDevice(canvas),\n        keyboard: new pc.Keyboard(window),\n    });\n    app.setCanvasFillMode(pc.FILLMODE_FILL_WINDOW);\n    app.setCanvasResolution(pc.RESOLUTION_AUTO);\n\n    window.addEventListener("resize", function () {\n        app.resizeCanvas(canvas.width, canvas.height);\n    });\n\n    // use device pixel ratio\n    app.graphicsDevice.maxPixelRatio = window.devicePixelRatio;\n\n    app.start();\n\n    // create camera\n    const c = new pc.Entity();\n    c.addComponent("camera", {\n        clearColor: new pc.Color(44 / 255, 62 / 255, 80 / 255),\n        farClip: 10000,\n    });\n    app.root.addChild(c);\n\n    const l = new pc.Entity();\n    l.addComponent("light", {\n        type: "spot",\n        range: 30,\n    });\n    l.translate(0, 10, 0);\n    app.root.addChild(l);\n\n    const createCube = function (x, y, z) {\n        const cube = new pc.Entity();\n        cube.addComponent("render", {\n            type: "box",\n        });\n        cube.setLocalScale(1, 1, 1);\n        cube.translate(x, y, z);\n        app.root.addChild(cube);\n    };\n\n    // create a grid of cubes\n    const SIZE = 16;\n    for (let x = 0; x < SIZE; x++) {\n        for (let y = 0; y < SIZE; y++) {\n            createCube(2 * x - SIZE, -1.5, 2 * y - SIZE);\n        }\n    }\n\n    if (app.xr.supported) {\n        const activate = function () {\n            if (app.xr.isAvailable(pc.XRTYPE_VR)) {\n                c.camera.startXr(pc.XRTYPE_VR, pc.XRSPACE_LOCAL, {\n                    callback: function (err) {\n                        if (err)\n                            message(\n                                "WebXR Immersive VR failed to start: " +\n                                    err.message\n                            );\n                    },\n                });\n            } else {\n                message("Immersive VR is not available");\n            }\n        };\n\n        app.mouse.on("mousedown", function () {\n            if (!app.xr.active) activate();\n        });\n\n        if (app.touch) {\n            app.touch.on("touchend", function (evt) {\n                if (!app.xr.active) {\n                    // if not in VR, activate\n                    activate();\n                } else {\n                    // otherwise reset camera\n                    c.camera.endXr();\n                }\n\n                evt.event.preventDefault();\n                evt.event.stopPropagation();\n            });\n        }\n\n        // end session by keyboard ESC\n        app.keyboard.on("keydown", function (evt) {\n            if (evt.key === pc.KEY_ESCAPE && app.xr.active) {\n                app.xr.end();\n            }\n        });\n\n        app.xr.on("start", function () {\n            message("Immersive VR session has started");\n        });\n        app.xr.on("end", function () {\n            message("Immersive VR session has ended");\n        });\n        app.xr.on("available:" + pc.XRTYPE_VR, function (available) {\n            message(\n                "Immersive VR is " + (available ? "available" : "unavailable")\n            );\n        });\n\n        if (!app.xr.isAvailable(pc.XRTYPE_VR)) {\n            message("Immersive VR is not available");\n        }\n    } else {\n        message("WebXR is not supported");\n    }\n}\n',nameSlug:"vr-basic",categorySlug:"xr"},"vr-controllers":{typeScriptFunction:"function example(canvas: HTMLCanvasElement, deviceType: string): void {\n    const message = function (msg: string) {\n        let el: HTMLDivElement = document.querySelector('.message');\n        if (!el) {\n            el = document.createElement('div');\n            el.classList.add('message');\n            document.body.append(el);\n        }\n        el.textContent = msg;\n    };\n\n    const app = new pc.Application(canvas, {\n        mouse: new pc.Mouse(canvas),\n        touch: new pc.TouchDevice(canvas),\n        keyboard: new pc.Keyboard(window)\n    });\n\n    const assets = {\n        'glb': new pc.Asset('glb', 'container', { url: '/static/assets/models/vr-controller.glb' })\n    };\n\n    const assetListLoader = new pc.AssetListLoader(Object.values(assets), app.assets);\n    assetListLoader.load(() => {\n        app.setCanvasFillMode(pc.FILLMODE_FILL_WINDOW);\n        app.setCanvasResolution(pc.RESOLUTION_AUTO);\n\n        window.addEventListener(\"resize\", function () {\n            app.resizeCanvas(canvas.width, canvas.height);\n        });\n\n        // use device pixel ratio\n        app.graphicsDevice.maxPixelRatio = window.devicePixelRatio;\n        app.start();\n\n        // create camera\n        const c = new pc.Entity();\n        c.addComponent('camera', {\n            clearColor: new pc.Color(44 / 255, 62 / 255, 80 / 255)\n        });\n        app.root.addChild(c);\n\n        const l = new pc.Entity();\n        l.addComponent(\"light\", {\n            type: \"directional\",\n            castShadows: true,\n            shadowBias: 0.05,\n            normalOffsetBias: 0.05,\n            shadowDistance: 5\n        });\n        l.setEulerAngles(45, 135, 0);\n        app.root.addChild(l);\n\n        const createCube = function (x: number, y: number, z: number) {\n            const cube = new pc.Entity();\n            cube.addComponent(\"render\", {\n                type: \"box\",\n                material: new pc.StandardMaterial()\n            });\n            cube.translate(x, y, z);\n            app.root.addChild(cube);\n        };\n\n        const controllers: any = [];\n        // create controller model\n        const createController = function (inputSource: any) {\n            const entity = new pc.Entity();\n            entity.addComponent('model', {\n                type: 'asset',\n                asset: assets.glb.resource.model,\n                castShadows: true\n            });\n            app.root.addChild(entity);\n            // @ts-ignore engine-tsd\n            entity.inputSource = inputSource;\n            controllers.push(entity);\n\n            // destroy input source related entity\n            // when input source is removed\n            inputSource.on('remove', function () {\n                controllers.splice(controllers.indexOf(entity), 1);\n                entity.destroy();\n            });\n        };\n\n        // create a grid of cubes\n        const SIZE = 4;\n        for (let x = 0; x <= SIZE; x++) {\n            for (let y = 0; y <= SIZE; y++) {\n                createCube(2 * x - SIZE, -1.5, 2 * y - SIZE);\n            }\n        }\n\n        if (app.xr.supported) {\n            const activate = function () {\n                if (app.xr.isAvailable(pc.XRTYPE_VR)) {\n                    c.camera.startXr(pc.XRTYPE_VR, pc.XRSPACE_LOCAL, {\n                        callback: function (err) {\n                            if (err) message(\"Immersive VR failed to start: \" + err.message);\n                        }\n                    });\n                } else {\n                    message(\"Immersive VR is not available\");\n                }\n            };\n\n            app.mouse.on(\"mousedown\", function () {\n                if (!app.xr.active)\n                    activate();\n            });\n\n            if (app.touch) {\n                app.touch.on(\"touchend\", function (evt) {\n                    if (!app.xr.active) {\n                        // if not in VR, activate\n                        activate();\n                    } else {\n                        // otherwise reset camera\n                        c.camera.endXr();\n                    }\n\n                    evt.event.preventDefault();\n                    evt.event.stopPropagation();\n                });\n            }\n\n            // end session by keyboard ESC\n            app.keyboard.on('keydown', function (evt) {\n                if (evt.key === pc.KEY_ESCAPE && app.xr.active) {\n                    app.xr.end();\n                }\n            });\n\n            // when new input source added\n            app.xr.input.on('add', function (inputSource) {\n                message(\"Controller Added\");\n                createController(inputSource);\n            });\n\n            message(\"Tap on screen to enter VR, and see controllers\");\n\n            // update position and rotation for each controller\n            app.on('update', function () {\n                for (let i = 0; i < controllers.length; i++) {\n                    const inputSource = controllers[i].inputSource;\n                    if (inputSource.grip) {\n                        // some controllers can be gripped\n                        controllers[i].enabled = true;\n                        controllers[i].setLocalPosition(inputSource.getLocalPosition());\n                        controllers[i].setLocalRotation(inputSource.getLocalRotation());\n                    } else {\n                        // some controllers cannot be gripped\n                        controllers[i].enabled = false;\n                    }\n                }\n            });\n        } else {\n            message(\"WebXR is not supported\");\n        }\n    });\n}",javaScriptFunction:'function example(canvas, deviceType) {\n    const message = function (msg) {\n        let el = document.querySelector(".message");\n        if (!el) {\n            el = document.createElement("div");\n            el.classList.add("message");\n            document.body.append(el);\n        }\n        el.textContent = msg;\n    };\n\n    const app = new pc.Application(canvas, {\n        mouse: new pc.Mouse(canvas),\n        touch: new pc.TouchDevice(canvas),\n        keyboard: new pc.Keyboard(window),\n    });\n\n    const assets = {\n        glb: new pc.Asset("glb", "container", {\n            url: "/static/assets/models/vr-controller.glb",\n        }),\n    };\n\n    const assetListLoader = new pc.AssetListLoader(\n        Object.values(assets),\n        app.assets\n    );\n    assetListLoader.load(() => {\n        app.setCanvasFillMode(pc.FILLMODE_FILL_WINDOW);\n        app.setCanvasResolution(pc.RESOLUTION_AUTO);\n\n        window.addEventListener("resize", function () {\n            app.resizeCanvas(canvas.width, canvas.height);\n        });\n\n        // use device pixel ratio\n        app.graphicsDevice.maxPixelRatio = window.devicePixelRatio;\n        app.start();\n\n        // create camera\n        const c = new pc.Entity();\n        c.addComponent("camera", {\n            clearColor: new pc.Color(44 / 255, 62 / 255, 80 / 255),\n        });\n        app.root.addChild(c);\n\n        const l = new pc.Entity();\n        l.addComponent("light", {\n            type: "directional",\n            castShadows: true,\n            shadowBias: 0.05,\n            normalOffsetBias: 0.05,\n            shadowDistance: 5,\n        });\n        l.setEulerAngles(45, 135, 0);\n        app.root.addChild(l);\n\n        const createCube = function (x, y, z) {\n            const cube = new pc.Entity();\n            cube.addComponent("render", {\n                type: "box",\n                material: new pc.StandardMaterial(),\n            });\n            cube.translate(x, y, z);\n            app.root.addChild(cube);\n        };\n\n        const controllers = [];\n        // create controller model\n        const createController = function (inputSource) {\n            const entity = new pc.Entity();\n            entity.addComponent("model", {\n                type: "asset",\n                asset: assets.glb.resource.model,\n                castShadows: true,\n            });\n            app.root.addChild(entity);\n            // @ts-ignore engine-tsd\n            entity.inputSource = inputSource;\n            controllers.push(entity);\n\n            // destroy input source related entity\n            // when input source is removed\n            inputSource.on("remove", function () {\n                controllers.splice(controllers.indexOf(entity), 1);\n                entity.destroy();\n            });\n        };\n\n        // create a grid of cubes\n        const SIZE = 4;\n        for (let x = 0; x <= SIZE; x++) {\n            for (let y = 0; y <= SIZE; y++) {\n                createCube(2 * x - SIZE, -1.5, 2 * y - SIZE);\n            }\n        }\n\n        if (app.xr.supported) {\n            const activate = function () {\n                if (app.xr.isAvailable(pc.XRTYPE_VR)) {\n                    c.camera.startXr(pc.XRTYPE_VR, pc.XRSPACE_LOCAL, {\n                        callback: function (err) {\n                            if (err)\n                                message(\n                                    "Immersive VR failed to start: " +\n                                        err.message\n                                );\n                        },\n                    });\n                } else {\n                    message("Immersive VR is not available");\n                }\n            };\n\n            app.mouse.on("mousedown", function () {\n                if (!app.xr.active) activate();\n            });\n\n            if (app.touch) {\n                app.touch.on("touchend", function (evt) {\n                    if (!app.xr.active) {\n                        // if not in VR, activate\n                        activate();\n                    } else {\n                        // otherwise reset camera\n                        c.camera.endXr();\n                    }\n\n                    evt.event.preventDefault();\n                    evt.event.stopPropagation();\n                });\n            }\n\n            // end session by keyboard ESC\n            app.keyboard.on("keydown", function (evt) {\n                if (evt.key === pc.KEY_ESCAPE && app.xr.active) {\n                    app.xr.end();\n                }\n            });\n\n            // when new input source added\n            app.xr.input.on("add", function (inputSource) {\n                message("Controller Added");\n                createController(inputSource);\n            });\n\n            message("Tap on screen to enter VR, and see controllers");\n\n            // update position and rotation for each controller\n            app.on("update", function () {\n                for (let i = 0; i < controllers.length; i++) {\n                    const inputSource = controllers[i].inputSource;\n                    if (inputSource.grip) {\n                        // some controllers can be gripped\n                        controllers[i].enabled = true;\n                        controllers[i].setLocalPosition(\n                            inputSource.getLocalPosition()\n                        );\n                        controllers[i].setLocalRotation(\n                            inputSource.getLocalRotation()\n                        );\n                    } else {\n                        // some controllers cannot be gripped\n                        controllers[i].enabled = false;\n                    }\n                }\n            });\n        } else {\n            message("WebXR is not supported");\n        }\n    });\n}\n',nameSlug:"vr-controllers",categorySlug:"xr"},"vr-hands":{typeScriptFunction:"function example(canvas: HTMLCanvasElement, deviceType: string): void {\n    const message = function (msg: string) {\n        let el: HTMLDivElement = document.querySelector('.message');\n        if (!el) {\n            el = document.createElement('div');\n            el.classList.add('message');\n            document.body.append(el);\n        }\n        el.textContent = msg;\n    };\n\n    const app = new pc.Application(canvas, {\n        mouse: new pc.Mouse(canvas),\n        touch: new pc.TouchDevice(canvas),\n        keyboard: new pc.Keyboard(window)\n    });\n    app.setCanvasFillMode(pc.FILLMODE_FILL_WINDOW);\n    app.setCanvasResolution(pc.RESOLUTION_AUTO);\n\n    window.addEventListener(\"resize\", function () {\n        app.resizeCanvas(canvas.width, canvas.height);\n    });\n\n    // use device pixel ratio\n    app.graphicsDevice.maxPixelRatio = window.devicePixelRatio;\n\n    app.scene.ambientLight = new pc.Color(0.1, 0.1, 0.1);\n\n    app.start();\n\n    // create camera\n    const c = new pc.Entity();\n    c.addComponent('camera', {\n        clearColor: new pc.Color(44 / 255, 62 / 255, 80 / 255)\n    });\n    app.root.addChild(c);\n\n    const l = new pc.Entity();\n    l.addComponent(\"light\", {\n        type: \"directional\"\n    });\n    l.setEulerAngles(45, 135, 0);\n    app.root.addChild(l);\n\n    const createCube = function (x: number, y: number, z: number) {\n        const cube = new pc.Entity();\n        cube.addComponent(\"render\", {\n            type: \"box\",\n            material: new pc.StandardMaterial()\n        });\n        cube.translate(x, y, z);\n        app.root.addChild(cube);\n    };\n\n    const controllers: any = [];\n\n    // create controller model\n    const createController = function (inputSource: any) {\n        const entity = new pc.Entity();\n\n        if (inputSource.hand) {\n            // hand input\n            // @ts-ignore engine-tsd\n            entity.joints = [];\n\n            const material = new pc.StandardMaterial();\n\n            // create box for each hand joint\n            for (let i = 0; i < inputSource.hand.joints.length; i++) {\n                const joint = inputSource.hand.joints[i];\n                const jointEntity = new pc.Entity();\n                jointEntity.addComponent('model', {\n                    type: 'box',\n                    material: material\n                });\n                // @ts-ignore engine-tsd\n                jointEntity.joint = joint;\n                // @ts-ignore engine-tsd\n                entity.joints.push(jointEntity);\n                entity.addChild(jointEntity);\n            }\n            // when tracking lost, paint joints to red\n            inputSource.hand.on('trackinglost', function () {\n                // @ts-ignore engine-tsd\n                entity.joints[0].model.material.diffuse.set(1, 0, 0);\n                // @ts-ignore engine-tsd\n                entity.joints[0].model.material.update();\n            });\n            // when tracking recovered, paint joints to white\n            inputSource.hand.on('tracking', function () {\n                // @ts-ignore engine-tsd\n                entity.joints[0].model.material.diffuse.set(1, 1, 1);\n                // @ts-ignore engine-tsd\n                entity.joints[0].model.material.update();\n            });\n        } else {\n            // other inputs\n            entity.addComponent('model', {\n                type: 'box',\n                castShadows: true\n            });\n            entity.setLocalScale(0.05, 0.05, 0.05);\n        }\n\n        app.root.addChild(entity);\n        // @ts-ignore engine-tsd\n        entity.inputSource = inputSource;\n        controllers.push(entity);\n\n        // destroy input source related entity\n        // when input source is removed\n        inputSource.on('remove', function () {\n            controllers.splice(controllers.indexOf(entity), 1);\n            entity.destroy();\n        });\n    };\n\n    // create a grid of cubes\n    const SIZE = 4;\n    for (let x = 0; x <= SIZE; x++) {\n        for (let y = 0; y <= SIZE; y++) {\n            createCube(2 * x - SIZE, -1.5, 2 * y - SIZE);\n        }\n    }\n\n    if (app.xr.supported) {\n        const activate = function () {\n            if (app.xr.isAvailable(pc.XRTYPE_VR)) {\n                c.camera.startXr(pc.XRTYPE_VR, pc.XRSPACE_LOCAL, {\n                    callback: function (err) {\n                        if (err) message(\"Immersive VR failed to start: \" + err.message);\n                    }\n                });\n            } else {\n                message(\"Immersive VR is not available\");\n            }\n        };\n\n        app.mouse.on(\"mousedown\", function () {\n            if (!app.xr.active)\n                activate();\n        });\n\n        if (app.touch) {\n            app.touch.on(\"touchend\", function (evt) {\n                if (!app.xr.active) {\n                    // if not in VR, activate\n                    activate();\n                } else {\n                    // otherwise reset camera\n                    c.camera.endXr();\n                }\n\n                evt.event.preventDefault();\n                evt.event.stopPropagation();\n            });\n        }\n\n        // end session by keyboard ESC\n        app.keyboard.on('keydown', function (evt) {\n            if (evt.key === pc.KEY_ESCAPE && app.xr.active) {\n                app.xr.end();\n            }\n        });\n\n        // when new input source added\n        app.xr.input.on('add', function (inputSource) {\n            message(\"Controller Added\");\n            createController(inputSource);\n        });\n\n        if ((window as any).XRHand) {\n            message(\"Tap on screen to enter VR, and switch to hand input\");\n        } else {\n            message(\"WebXR Hands Input is not supported by your platform\");\n        }\n\n        // update position and rotation for each controller\n        app.on('update', function () {\n            for (let i = 0; i < controllers.length; i++) {\n                const inputSource = controllers[i].inputSource;\n\n                if (inputSource.hand) {\n                    // hand input source\n                    controllers[i].enabled = true;\n                    // update each hand joint\n                    for (let j = 0; j < controllers[i].joints.length; j++) {\n                        const joint = controllers[i].joints[j].joint;\n                        const r = joint.radius * 2;\n                        controllers[i].joints[j].setLocalScale(r, r, r);\n                        controllers[i].joints[j].setPosition(joint.getPosition());\n                        controllers[i].joints[j].setRotation(joint.getRotation());\n                    }\n                } else if (inputSource.grip) {\n                    // grippable input source\n                    controllers[i].enabled = true;\n                    controllers[i].setLocalPosition(inputSource.getLocalPosition());\n                    controllers[i].setLocalRotation(inputSource.getLocalRotation());\n                } else {\n                    // some controllers cannot be gripped\n                    controllers[i].enabled = false;\n                }\n            }\n        });\n    } else {\n        message(\"WebXR is not supported\");\n    }\n}",javaScriptFunction:'function example(canvas, deviceType) {\n    const message = function (msg) {\n        let el = document.querySelector(".message");\n        if (!el) {\n            el = document.createElement("div");\n            el.classList.add("message");\n            document.body.append(el);\n        }\n        el.textContent = msg;\n    };\n\n    const app = new pc.Application(canvas, {\n        mouse: new pc.Mouse(canvas),\n        touch: new pc.TouchDevice(canvas),\n        keyboard: new pc.Keyboard(window),\n    });\n    app.setCanvasFillMode(pc.FILLMODE_FILL_WINDOW);\n    app.setCanvasResolution(pc.RESOLUTION_AUTO);\n\n    window.addEventListener("resize", function () {\n        app.resizeCanvas(canvas.width, canvas.height);\n    });\n\n    // use device pixel ratio\n    app.graphicsDevice.maxPixelRatio = window.devicePixelRatio;\n\n    app.scene.ambientLight = new pc.Color(0.1, 0.1, 0.1);\n\n    app.start();\n\n    // create camera\n    const c = new pc.Entity();\n    c.addComponent("camera", {\n        clearColor: new pc.Color(44 / 255, 62 / 255, 80 / 255),\n    });\n    app.root.addChild(c);\n\n    const l = new pc.Entity();\n    l.addComponent("light", {\n        type: "directional",\n    });\n    l.setEulerAngles(45, 135, 0);\n    app.root.addChild(l);\n\n    const createCube = function (x, y, z) {\n        const cube = new pc.Entity();\n        cube.addComponent("render", {\n            type: "box",\n            material: new pc.StandardMaterial(),\n        });\n        cube.translate(x, y, z);\n        app.root.addChild(cube);\n    };\n\n    const controllers = [];\n\n    // create controller model\n    const createController = function (inputSource) {\n        const entity = new pc.Entity();\n\n        if (inputSource.hand) {\n            // hand input\n            // @ts-ignore engine-tsd\n            entity.joints = [];\n\n            const material = new pc.StandardMaterial();\n\n            // create box for each hand joint\n            for (let i = 0; i < inputSource.hand.joints.length; i++) {\n                const joint = inputSource.hand.joints[i];\n                const jointEntity = new pc.Entity();\n                jointEntity.addComponent("model", {\n                    type: "box",\n                    material: material,\n                });\n                // @ts-ignore engine-tsd\n                jointEntity.joint = joint;\n                // @ts-ignore engine-tsd\n                entity.joints.push(jointEntity);\n                entity.addChild(jointEntity);\n            }\n            // when tracking lost, paint joints to red\n            inputSource.hand.on("trackinglost", function () {\n                // @ts-ignore engine-tsd\n                entity.joints[0].model.material.diffuse.set(1, 0, 0);\n                // @ts-ignore engine-tsd\n                entity.joints[0].model.material.update();\n            });\n            // when tracking recovered, paint joints to white\n            inputSource.hand.on("tracking", function () {\n                // @ts-ignore engine-tsd\n                entity.joints[0].model.material.diffuse.set(1, 1, 1);\n                // @ts-ignore engine-tsd\n                entity.joints[0].model.material.update();\n            });\n        } else {\n            // other inputs\n            entity.addComponent("model", {\n                type: "box",\n                castShadows: true,\n            });\n            entity.setLocalScale(0.05, 0.05, 0.05);\n        }\n\n        app.root.addChild(entity);\n        // @ts-ignore engine-tsd\n        entity.inputSource = inputSource;\n        controllers.push(entity);\n\n        // destroy input source related entity\n        // when input source is removed\n        inputSource.on("remove", function () {\n            controllers.splice(controllers.indexOf(entity), 1);\n            entity.destroy();\n        });\n    };\n\n    // create a grid of cubes\n    const SIZE = 4;\n    for (let x = 0; x <= SIZE; x++) {\n        for (let y = 0; y <= SIZE; y++) {\n            createCube(2 * x - SIZE, -1.5, 2 * y - SIZE);\n        }\n    }\n\n    if (app.xr.supported) {\n        const activate = function () {\n            if (app.xr.isAvailable(pc.XRTYPE_VR)) {\n                c.camera.startXr(pc.XRTYPE_VR, pc.XRSPACE_LOCAL, {\n                    callback: function (err) {\n                        if (err)\n                            message(\n                                "Immersive VR failed to start: " + err.message\n                            );\n                    },\n                });\n            } else {\n                message("Immersive VR is not available");\n            }\n        };\n\n        app.mouse.on("mousedown", function () {\n            if (!app.xr.active) activate();\n        });\n\n        if (app.touch) {\n            app.touch.on("touchend", function (evt) {\n                if (!app.xr.active) {\n                    // if not in VR, activate\n                    activate();\n                } else {\n                    // otherwise reset camera\n                    c.camera.endXr();\n                }\n\n                evt.event.preventDefault();\n                evt.event.stopPropagation();\n            });\n        }\n\n        // end session by keyboard ESC\n        app.keyboard.on("keydown", function (evt) {\n            if (evt.key === pc.KEY_ESCAPE && app.xr.active) {\n                app.xr.end();\n            }\n        });\n\n        // when new input source added\n        app.xr.input.on("add", function (inputSource) {\n            message("Controller Added");\n            createController(inputSource);\n        });\n\n        if (window.XRHand) {\n            message("Tap on screen to enter VR, and switch to hand input");\n        } else {\n            message("WebXR Hands Input is not supported by your platform");\n        }\n\n        // update position and rotation for each controller\n        app.on("update", function () {\n            for (let i = 0; i < controllers.length; i++) {\n                const inputSource = controllers[i].inputSource;\n\n                if (inputSource.hand) {\n                    // hand input source\n                    controllers[i].enabled = true;\n                    // update each hand joint\n                    for (let j = 0; j < controllers[i].joints.length; j++) {\n                        const joint = controllers[i].joints[j].joint;\n                        const r = joint.radius * 2;\n                        controllers[i].joints[j].setLocalScale(r, r, r);\n                        controllers[i].joints[j].setPosition(\n                            joint.getPosition()\n                        );\n                        controllers[i].joints[j].setRotation(\n                            joint.getRotation()\n                        );\n                    }\n                } else if (inputSource.grip) {\n                    // grippable input source\n                    controllers[i].enabled = true;\n                    controllers[i].setLocalPosition(\n                        inputSource.getLocalPosition()\n                    );\n                    controllers[i].setLocalRotation(\n                        inputSource.getLocalRotation()\n                    );\n                } else {\n                    // some controllers cannot be gripped\n                    controllers[i].enabled = false;\n                }\n            }\n        });\n    } else {\n        message("WebXR is not supported");\n    }\n}\n',nameSlug:"vr-hands",categorySlug:"xr"},"vr-movement":{typeScriptFunction:'function example(canvas: HTMLCanvasElement, deviceType: string): void {\n    const message = function (msg: string) {\n        let el: HTMLDivElement = document.querySelector(\'.message\');\n        if (!el) {\n            el = document.createElement(\'div\');\n            el.classList.add(\'message\');\n            document.body.append(el);\n        }\n        el.textContent = msg;\n    };\n    const app = new pc.Application(canvas, {\n        mouse: new pc.Mouse(canvas),\n        touch: new pc.TouchDevice(canvas),\n        keyboard: new pc.Keyboard(window)\n    });\n    app.setCanvasFillMode(pc.FILLMODE_FILL_WINDOW);\n    app.setCanvasResolution(pc.RESOLUTION_AUTO);\n\n    window.addEventListener("resize", function () {\n        app.resizeCanvas(canvas.width, canvas.height);\n    });\n\n    // use device pixel ratio\n    app.graphicsDevice.maxPixelRatio = window.devicePixelRatio;\n\n    app.start();\n\n    // create camera parent\n    const cameraParent = new pc.Entity();\n    app.root.addChild(cameraParent);\n\n    // create camera\n    const c = new pc.Entity();\n    c.addComponent(\'camera\', {\n        clearColor: new pc.Color(44 / 255, 62 / 255, 80 / 255),\n        farClip: 10000\n    });\n    cameraParent.addChild(c);\n\n    const l = new pc.Entity();\n    l.addComponent("light", {\n        type: "spot",\n        range: 30\n    });\n    l.translate(0, 10, 0);\n    app.root.addChild(l);\n\n    const createCube = function (x: number, y: number, z: number) {\n        const cube = new pc.Entity();\n        cube.addComponent("render", {\n            type: "box",\n            material: new pc.StandardMaterial()\n        });\n        cube.setLocalScale(1, 1, 1);\n        cube.translate(x, y, z);\n        app.root.addChild(cube);\n    };\n\n    const controllers: any = [];\n    // create controller box\n    const createController = function (inputSource: any) {\n        const entity = new pc.Entity();\n        entity.addComponent(\'model\', {\n            type: \'box\'\n        });\n        entity.setLocalScale(0.05, 0.05, 0.05);\n        cameraParent.addChild(entity);\n        // @ts-ignore engine-tsd\n        entity.inputSource = inputSource;\n        controllers.push(entity);\n\n        // destroy input source related entity\n        // when input source is removed\n        inputSource.on(\'remove\', function () {\n            controllers.splice(controllers.indexOf(entity), 1);\n            entity.destroy();\n        });\n    };\n\n    // create a grid of cubes\n    const SIZE = 4;\n    for (let x = 0; x <= SIZE; x++) {\n        for (let y = 0; y <= SIZE; y++) {\n            createCube(2 * x - SIZE, -1.5, 2 * y - SIZE);\n        }\n    }\n\n    if (app.xr.supported) {\n        const activate = function () {\n            if (app.xr.isAvailable(pc.XRTYPE_VR)) {\n                c.camera.startXr(pc.XRTYPE_VR, pc.XRSPACE_LOCAL, {\n                    callback: function (err) {\n                        if (err) message("Immersive VR failed to start: " + err.message);\n                    }\n                });\n            } else {\n                message("Immersive VR is not available");\n            }\n        };\n\n        app.mouse.on("mousedown", function () {\n            if (!app.xr.active)\n                activate();\n        });\n\n        if (app.touch) {\n            app.touch.on("touchend", function (evt) {\n                if (!app.xr.active) {\n                    // if not in VR, activate\n                    activate();\n                } else {\n                    // otherwise reset camera\n                    c.camera.endXr();\n                }\n\n                evt.event.preventDefault();\n                evt.event.stopPropagation();\n            });\n        }\n\n        // end session by keyboard ESC\n        app.keyboard.on(\'keydown\', function (evt) {\n            if (evt.key === pc.KEY_ESCAPE && app.xr.active) {\n                app.xr.end();\n            }\n        });\n\n        // when new input source added\n        app.xr.input.on(\'add\', function (inputSource) {\n            createController(inputSource);\n        });\n\n        message("Tap on screen to enter VR, use left thumbstick to move and right thumbstick to rotate");\n\n        const movementSpeed = 1.5; // 1.5 m/s\n        const rotateSpeed = 45;\n        const rotateThreshold = 0.5;\n        const rotateResetThreshold = 0.25;\n        let lastRotateValue = 0;\n\n        const tmpVec2A = new pc.Vec2();\n        const tmpVec2B = new pc.Vec2();\n        const tmpVec3A = new pc.Vec3();\n        const tmpVec3B = new pc.Vec3();\n        const lineColor = new pc.Color(1, 1, 1);\n\n        // update position and rotation for each controller\n        app.on(\'update\', function (dt) {\n            let i, inputSource;\n\n            // first we update movement\n            for (i = 0; i < controllers.length; i++) {\n                inputSource = controllers[i].inputSource;\n\n                // should have gamepad\n                if (!inputSource.gamepad)\n                    continue;\n\n                // left controller - for movement\n                if (inputSource.handedness === pc.XRHAND_LEFT) {\n                    // set vector based on gamepad thumbstick axes values\n                    tmpVec2A.set(inputSource.gamepad.axes[2], inputSource.gamepad.axes[3]);\n\n                    // if there is input\n                    if (tmpVec2A.length()) {\n                        tmpVec2A.normalize();\n\n                        // we need to take in account camera facing\n                        // so we figure out Yaw of camera\n                        tmpVec2B.x = c.forward.x;\n                        tmpVec2B.y = c.forward.z;\n                        tmpVec2B.normalize();\n\n                        const rad = Math.atan2(tmpVec2B.x, tmpVec2B.y) - (Math.PI / 2);\n                        // and rotate our movement vector based on camera yaw\n                        const t =      tmpVec2A.x * Math.sin(rad) - tmpVec2A.y * Math.cos(rad);\n                        tmpVec2A.y = tmpVec2A.y * Math.sin(rad) + tmpVec2A.x * Math.cos(rad);\n                        tmpVec2A.x = t;\n\n                        // set movement speed\n                        tmpVec2A.mulScalar(movementSpeed * dt);\n                        // move camera parent based on calculated movement vector\n                        cameraParent.translate(tmpVec2A.x, 0, tmpVec2A.y);\n                    }\n\n                // right controller - for rotation\n                } else if (inputSource.handedness === pc.XRHAND_RIGHT) {\n                    // get rotation from thumbsitck\n                    const rotate = -inputSource.gamepad.axes[2];\n\n                    // each rotate should be done by moving thumbstick to the side enough\n                    // then thumbstick should be moved back close to neutral position\n                    // before it can be used again to rotate\n                    if (lastRotateValue > 0 && rotate < rotateResetThreshold) {\n                        lastRotateValue = 0;\n                    } else if (lastRotateValue < 0 && rotate > -rotateResetThreshold) {\n                        lastRotateValue = 0;\n                    }\n\n                    // if thumbstick is reset and moved enough to the side\n                    if (lastRotateValue === 0 && Math.abs(rotate) > rotateThreshold) {\n                        lastRotateValue = Math.sign(rotate);\n\n                        // we want to rotate relative to camera position\n                        tmpVec3A.copy(c.getLocalPosition());\n                        cameraParent.translateLocal(tmpVec3A);\n                        cameraParent.rotateLocal(0, Math.sign(rotate) * rotateSpeed, 0);\n                        cameraParent.translateLocal(tmpVec3A.mulScalar(-1));\n                    }\n                }\n            }\n\n            // after movement and rotation is done\n            // we update/render controllers\n            for (i = 0; i < controllers.length; i++) {\n                inputSource = controllers[i].inputSource;\n\n                // render controller ray\n                tmpVec3A.copy(inputSource.getOrigin());\n                tmpVec3B.copy(inputSource.getDirection());\n                tmpVec3B.mulScalar(100).add(tmpVec3A);\n                app.drawLine(tmpVec3A, tmpVec3B, lineColor);\n\n                // render controller\n                if (inputSource.grip) {\n                    // some controllers can be gripped\n                    controllers[i].model.enabled = true;\n                    controllers[i].setLocalPosition(inputSource.getLocalPosition);\n                    controllers[i].setLocalRotation(inputSource.getLocalRotation);\n                } else {\n                    // some controllers cannot be gripped\n                    controllers[i].model.enabled = false;\n                }\n            }\n        });\n    } else {\n        message("WebXR is not supported");\n    }\n}',javaScriptFunction:'function example(canvas, deviceType) {\n    const message = function (msg) {\n        let el = document.querySelector(".message");\n        if (!el) {\n            el = document.createElement("div");\n            el.classList.add("message");\n            document.body.append(el);\n        }\n        el.textContent = msg;\n    };\n    const app = new pc.Application(canvas, {\n        mouse: new pc.Mouse(canvas),\n        touch: new pc.TouchDevice(canvas),\n        keyboard: new pc.Keyboard(window),\n    });\n    app.setCanvasFillMode(pc.FILLMODE_FILL_WINDOW);\n    app.setCanvasResolution(pc.RESOLUTION_AUTO);\n\n    window.addEventListener("resize", function () {\n        app.resizeCanvas(canvas.width, canvas.height);\n    });\n\n    // use device pixel ratio\n    app.graphicsDevice.maxPixelRatio = window.devicePixelRatio;\n\n    app.start();\n\n    // create camera parent\n    const cameraParent = new pc.Entity();\n    app.root.addChild(cameraParent);\n\n    // create camera\n    const c = new pc.Entity();\n    c.addComponent("camera", {\n        clearColor: new pc.Color(44 / 255, 62 / 255, 80 / 255),\n        farClip: 10000,\n    });\n    cameraParent.addChild(c);\n\n    const l = new pc.Entity();\n    l.addComponent("light", {\n        type: "spot",\n        range: 30,\n    });\n    l.translate(0, 10, 0);\n    app.root.addChild(l);\n\n    const createCube = function (x, y, z) {\n        const cube = new pc.Entity();\n        cube.addComponent("render", {\n            type: "box",\n            material: new pc.StandardMaterial(),\n        });\n        cube.setLocalScale(1, 1, 1);\n        cube.translate(x, y, z);\n        app.root.addChild(cube);\n    };\n\n    const controllers = [];\n    // create controller box\n    const createController = function (inputSource) {\n        const entity = new pc.Entity();\n        entity.addComponent("model", {\n            type: "box",\n        });\n        entity.setLocalScale(0.05, 0.05, 0.05);\n        cameraParent.addChild(entity);\n        // @ts-ignore engine-tsd\n        entity.inputSource = inputSource;\n        controllers.push(entity);\n\n        // destroy input source related entity\n        // when input source is removed\n        inputSource.on("remove", function () {\n            controllers.splice(controllers.indexOf(entity), 1);\n            entity.destroy();\n        });\n    };\n\n    // create a grid of cubes\n    const SIZE = 4;\n    for (let x = 0; x <= SIZE; x++) {\n        for (let y = 0; y <= SIZE; y++) {\n            createCube(2 * x - SIZE, -1.5, 2 * y - SIZE);\n        }\n    }\n\n    if (app.xr.supported) {\n        const activate = function () {\n            if (app.xr.isAvailable(pc.XRTYPE_VR)) {\n                c.camera.startXr(pc.XRTYPE_VR, pc.XRSPACE_LOCAL, {\n                    callback: function (err) {\n                        if (err)\n                            message(\n                                "Immersive VR failed to start: " + err.message\n                            );\n                    },\n                });\n            } else {\n                message("Immersive VR is not available");\n            }\n        };\n\n        app.mouse.on("mousedown", function () {\n            if (!app.xr.active) activate();\n        });\n\n        if (app.touch) {\n            app.touch.on("touchend", function (evt) {\n                if (!app.xr.active) {\n                    // if not in VR, activate\n                    activate();\n                } else {\n                    // otherwise reset camera\n                    c.camera.endXr();\n                }\n\n                evt.event.preventDefault();\n                evt.event.stopPropagation();\n            });\n        }\n\n        // end session by keyboard ESC\n        app.keyboard.on("keydown", function (evt) {\n            if (evt.key === pc.KEY_ESCAPE && app.xr.active) {\n                app.xr.end();\n            }\n        });\n\n        // when new input source added\n        app.xr.input.on("add", function (inputSource) {\n            createController(inputSource);\n        });\n\n        message(\n            "Tap on screen to enter VR, use left thumbstick to move and right thumbstick to rotate"\n        );\n\n        const movementSpeed = 1.5; // 1.5 m/s\n        const rotateSpeed = 45;\n        const rotateThreshold = 0.5;\n        const rotateResetThreshold = 0.25;\n        let lastRotateValue = 0;\n\n        const tmpVec2A = new pc.Vec2();\n        const tmpVec2B = new pc.Vec2();\n        const tmpVec3A = new pc.Vec3();\n        const tmpVec3B = new pc.Vec3();\n        const lineColor = new pc.Color(1, 1, 1);\n\n        // update position and rotation for each controller\n        app.on("update", function (dt) {\n            let i, inputSource;\n\n            // first we update movement\n            for (i = 0; i < controllers.length; i++) {\n                inputSource = controllers[i].inputSource;\n\n                // should have gamepad\n                if (!inputSource.gamepad) continue;\n\n                // left controller - for movement\n                if (inputSource.handedness === pc.XRHAND_LEFT) {\n                    // set vector based on gamepad thumbstick axes values\n                    tmpVec2A.set(\n                        inputSource.gamepad.axes[2],\n                        inputSource.gamepad.axes[3]\n                    );\n\n                    // if there is input\n                    if (tmpVec2A.length()) {\n                        tmpVec2A.normalize();\n\n                        // we need to take in account camera facing\n                        // so we figure out Yaw of camera\n                        tmpVec2B.x = c.forward.x;\n                        tmpVec2B.y = c.forward.z;\n                        tmpVec2B.normalize();\n\n                        const rad =\n                            Math.atan2(tmpVec2B.x, tmpVec2B.y) - Math.PI / 2;\n                        // and rotate our movement vector based on camera yaw\n                        const t =\n                            tmpVec2A.x * Math.sin(rad) -\n                            tmpVec2A.y * Math.cos(rad);\n                        tmpVec2A.y =\n                            tmpVec2A.y * Math.sin(rad) +\n                            tmpVec2A.x * Math.cos(rad);\n                        tmpVec2A.x = t;\n\n                        // set movement speed\n                        tmpVec2A.mulScalar(movementSpeed * dt);\n                        // move camera parent based on calculated movement vector\n                        cameraParent.translate(tmpVec2A.x, 0, tmpVec2A.y);\n                    }\n\n                    // right controller - for rotation\n                } else if (inputSource.handedness === pc.XRHAND_RIGHT) {\n                    // get rotation from thumbsitck\n                    const rotate = -inputSource.gamepad.axes[2];\n\n                    // each rotate should be done by moving thumbstick to the side enough\n                    // then thumbstick should be moved back close to neutral position\n                    // before it can be used again to rotate\n                    if (lastRotateValue > 0 && rotate < rotateResetThreshold) {\n                        lastRotateValue = 0;\n                    } else if (\n                        lastRotateValue < 0 &&\n                        rotate > -rotateResetThreshold\n                    ) {\n                        lastRotateValue = 0;\n                    }\n\n                    // if thumbstick is reset and moved enough to the side\n                    if (\n                        lastRotateValue === 0 &&\n                        Math.abs(rotate) > rotateThreshold\n                    ) {\n                        lastRotateValue = Math.sign(rotate);\n\n                        // we want to rotate relative to camera position\n                        tmpVec3A.copy(c.getLocalPosition());\n                        cameraParent.translateLocal(tmpVec3A);\n                        cameraParent.rotateLocal(\n                            0,\n                            Math.sign(rotate) * rotateSpeed,\n                            0\n                        );\n                        cameraParent.translateLocal(tmpVec3A.mulScalar(-1));\n                    }\n                }\n            }\n\n            // after movement and rotation is done\n            // we update/render controllers\n            for (i = 0; i < controllers.length; i++) {\n                inputSource = controllers[i].inputSource;\n\n                // render controller ray\n                tmpVec3A.copy(inputSource.getOrigin());\n                tmpVec3B.copy(inputSource.getDirection());\n                tmpVec3B.mulScalar(100).add(tmpVec3A);\n                app.drawLine(tmpVec3A, tmpVec3B, lineColor);\n\n                // render controller\n                if (inputSource.grip) {\n                    // some controllers can be gripped\n                    controllers[i].model.enabled = true;\n                    controllers[i].setLocalPosition(\n                        inputSource.getLocalPosition\n                    );\n                    controllers[i].setLocalRotation(\n                        inputSource.getLocalRotation\n                    );\n                } else {\n                    // some controllers cannot be gripped\n                    controllers[i].model.enabled = false;\n                }\n            }\n        });\n    } else {\n        message("WebXR is not supported");\n    }\n}\n',nameSlug:"vr-movement",categorySlug:"xr"},"xr-picking":{typeScriptFunction:'function example(canvas: HTMLCanvasElement, deviceType: string): void {\n    const message = function (msg: string) {\n        let el: HTMLDivElement = document.querySelector(\'.message\');\n        if (!el) {\n            el = document.createElement(\'div\');\n            el.classList.add(\'message\');\n            document.body.append(el);\n        }\n        el.textContent = msg;\n    };\n\n    const app = new pc.Application(canvas, {\n        mouse: new pc.Mouse(canvas),\n        touch: new pc.TouchDevice(canvas),\n        keyboard: new pc.Keyboard(window)\n    });\n    app.setCanvasFillMode(pc.FILLMODE_FILL_WINDOW);\n    app.setCanvasResolution(pc.RESOLUTION_AUTO);\n\n    window.addEventListener("resize", function () {\n        app.resizeCanvas(canvas.width, canvas.height);\n    });\n\n    // use device pixel ratio\n    app.graphicsDevice.maxPixelRatio = window.devicePixelRatio;\n\n    app.start();\n\n    // create camera\n    const c = new pc.Entity();\n    c.addComponent(\'camera\', {\n        clearColor: new pc.Color(44 / 255, 62 / 255, 80 / 255),\n        farClip: 10000\n    });\n    app.root.addChild(c);\n\n    const l = new pc.Entity();\n    l.addComponent("light", {\n        type: "spot",\n        range: 30\n    });\n    l.translate(0, 10, 0);\n    app.root.addChild(l);\n\n    const cubes: any = [];\n\n    const createCube = function (x: number, y: number, z: number) {\n        const cube = new pc.Entity();\n        cube.addComponent("render", {\n            type: "box",\n            material: new pc.StandardMaterial()\n        });\n        cube.setLocalScale(1, 1, 1);\n        cube.translate(x, y, z);\n        app.root.addChild(cube);\n        cubes.push(cube);\n    };\n\n    // create a grid of cubes\n    const SIZE = 4;\n    for (let x = 0; x <= SIZE; x++) {\n        for (let y = 0; y <= SIZE; y++) {\n            createCube(2 * x - SIZE, -1.5, 2 * y - SIZE);\n        }\n    }\n\n    if (app.xr.supported) {\n        const activate = function () {\n            if (app.xr.isAvailable(pc.XRTYPE_VR)) {\n                c.camera.startXr(pc.XRTYPE_VR, pc.XRSPACE_LOCAL, {\n                    callback: function (err) {\n                        if (err) message("Immersive VR failed to start: " + err.message);\n                    }\n                });\n            } else {\n                message("Immersive VR is not available");\n            }\n        };\n\n        app.mouse.on("mousedown", function () {\n            if (!app.xr.active)\n                activate();\n        });\n\n        if (app.touch) {\n            app.touch.on("touchend", function (evt) {\n                if (!app.xr.active) {\n                    // if not in VR, activate\n                    activate();\n                } else {\n                    // otherwise reset camera\n                    c.camera.endXr();\n                }\n\n                evt.event.preventDefault();\n                evt.event.stopPropagation();\n            });\n        }\n\n        // end session by keyboard ESC\n        app.keyboard.on(\'keydown\', function (evt) {\n            if (evt.key === pc.KEY_ESCAPE && app.xr.active) {\n                app.xr.end();\n            }\n        });\n\n        message("Tap on screen to enter VR, and then pick objects");\n\n        // when input source is triggers select\n        // pick closest box and change its color\n        const ray = new pc.Ray();\n        app.xr.input.on(\'select\', function (inputSource) {\n            let candidate = null;\n            let candidateDist = Infinity;\n\n            for (let i = 0; i < cubes.length; i++) {\n                const mesh = cubes[i].model.meshInstances[0];\n\n                // check if mesh bounding box intersects with input source ray\n                ray.set(inputSource.getOrigin(), inputSource.getDirection());\n                if (mesh.aabb.intersectsRay(ray)) {\n                    // check distance to camera\n                    const dist = mesh.aabb.center.distance(c.getPosition());\n\n                    // if it is closer than previous distance\n                    if (dist < candidateDist) {\n\n                        // set new candidate\n                        candidate = mesh;\n                        candidateDist = dist;\n                    }\n                }\n            }\n\n            // if we have picked candidate\n            if (candidate) {\n                // randomize its color\n                candidate.material.diffuse.set(Math.random(), Math.random(), Math.random());\n                candidate.material.update();\n            }\n        });\n\n        const tmpVec = new pc.Vec3();\n        const lineColor = new pc.Color(1, 1, 1);\n\n        // on each app update\n        // render input source rays as a line\n        app.on(\'update\', function () {\n            for (let i = 0; i < app.xr.input.inputSources.length; i++) {\n                const inputSource = app.xr.input.inputSources[i];\n                const direction = inputSource.getDirection();\n                const origin = inputSource.getOrigin();\n\n                tmpVec.copy(direction).mulScalar(100).add(origin);\n\n                app.drawLine(inputSource.getOrigin(), tmpVec, lineColor);\n            }\n        });\n    } else {\n        message("WebXR is not supported");\n    }\n}',javaScriptFunction:'function example(canvas, deviceType) {\n    const message = function (msg) {\n        let el = document.querySelector(".message");\n        if (!el) {\n            el = document.createElement("div");\n            el.classList.add("message");\n            document.body.append(el);\n        }\n        el.textContent = msg;\n    };\n\n    const app = new pc.Application(canvas, {\n        mouse: new pc.Mouse(canvas),\n        touch: new pc.TouchDevice(canvas),\n        keyboard: new pc.Keyboard(window),\n    });\n    app.setCanvasFillMode(pc.FILLMODE_FILL_WINDOW);\n    app.setCanvasResolution(pc.RESOLUTION_AUTO);\n\n    window.addEventListener("resize", function () {\n        app.resizeCanvas(canvas.width, canvas.height);\n    });\n\n    // use device pixel ratio\n    app.graphicsDevice.maxPixelRatio = window.devicePixelRatio;\n\n    app.start();\n\n    // create camera\n    const c = new pc.Entity();\n    c.addComponent("camera", {\n        clearColor: new pc.Color(44 / 255, 62 / 255, 80 / 255),\n        farClip: 10000,\n    });\n    app.root.addChild(c);\n\n    const l = new pc.Entity();\n    l.addComponent("light", {\n        type: "spot",\n        range: 30,\n    });\n    l.translate(0, 10, 0);\n    app.root.addChild(l);\n\n    const cubes = [];\n\n    const createCube = function (x, y, z) {\n        const cube = new pc.Entity();\n        cube.addComponent("render", {\n            type: "box",\n            material: new pc.StandardMaterial(),\n        });\n        cube.setLocalScale(1, 1, 1);\n        cube.translate(x, y, z);\n        app.root.addChild(cube);\n        cubes.push(cube);\n    };\n\n    // create a grid of cubes\n    const SIZE = 4;\n    for (let x = 0; x <= SIZE; x++) {\n        for (let y = 0; y <= SIZE; y++) {\n            createCube(2 * x - SIZE, -1.5, 2 * y - SIZE);\n        }\n    }\n\n    if (app.xr.supported) {\n        const activate = function () {\n            if (app.xr.isAvailable(pc.XRTYPE_VR)) {\n                c.camera.startXr(pc.XRTYPE_VR, pc.XRSPACE_LOCAL, {\n                    callback: function (err) {\n                        if (err)\n                            message(\n                                "Immersive VR failed to start: " + err.message\n                            );\n                    },\n                });\n            } else {\n                message("Immersive VR is not available");\n            }\n        };\n\n        app.mouse.on("mousedown", function () {\n            if (!app.xr.active) activate();\n        });\n\n        if (app.touch) {\n            app.touch.on("touchend", function (evt) {\n                if (!app.xr.active) {\n                    // if not in VR, activate\n                    activate();\n                } else {\n                    // otherwise reset camera\n                    c.camera.endXr();\n                }\n\n                evt.event.preventDefault();\n                evt.event.stopPropagation();\n            });\n        }\n\n        // end session by keyboard ESC\n        app.keyboard.on("keydown", function (evt) {\n            if (evt.key === pc.KEY_ESCAPE && app.xr.active) {\n                app.xr.end();\n            }\n        });\n\n        message("Tap on screen to enter VR, and then pick objects");\n\n        // when input source is triggers select\n        // pick closest box and change its color\n        const ray = new pc.Ray();\n        app.xr.input.on("select", function (inputSource) {\n            let candidate = null;\n            let candidateDist = Infinity;\n\n            for (let i = 0; i < cubes.length; i++) {\n                const mesh = cubes[i].model.meshInstances[0];\n\n                // check if mesh bounding box intersects with input source ray\n                ray.set(inputSource.getOrigin(), inputSource.getDirection());\n                if (mesh.aabb.intersectsRay(ray)) {\n                    // check distance to camera\n                    const dist = mesh.aabb.center.distance(c.getPosition());\n\n                    // if it is closer than previous distance\n                    if (dist < candidateDist) {\n                        // set new candidate\n                        candidate = mesh;\n                        candidateDist = dist;\n                    }\n                }\n            }\n\n            // if we have picked candidate\n            if (candidate) {\n                // randomize its color\n                candidate.material.diffuse.set(\n                    Math.random(),\n                    Math.random(),\n                    Math.random()\n                );\n                candidate.material.update();\n            }\n        });\n\n        const tmpVec = new pc.Vec3();\n        const lineColor = new pc.Color(1, 1, 1);\n\n        // on each app update\n        // render input source rays as a line\n        app.on("update", function () {\n            for (let i = 0; i < app.xr.input.inputSources.length; i++) {\n                const inputSource = app.xr.input.inputSources[i];\n                const direction = inputSource.getDirection();\n                const origin = inputSource.getOrigin();\n\n                tmpVec.copy(direction).mulScalar(100).add(origin);\n\n                app.drawLine(inputSource.getOrigin(), tmpVec, lineColor);\n            }\n        });\n    } else {\n        message("WebXR is not supported");\n    }\n}\n',nameSlug:"xr-picking",categorySlug:"xr"}}};function Zs(e){return e.charAt(0).toUpperCase()+e.slice(1)}const Qs={},Js={};Object.keys(Ks).forEach((e=>{const t=e.split("-").map((e=>Zs(e))).join("");Qs[e]={examples:{}},Object.keys(Ks[e]).forEach(((n,i)=>{const a=n.split("-").map((e=>Zs(e))).join("").replace("1d","1D").replace("2d","2D");Qs[e].examples[n]=a;const s=[{name:"example.js",text:Ks[e][n].javaScriptFunction,type:"javascript"},{name:"example.ts",text:Ks[e][n].typeScriptFunction,type:"typescript"}],r=Ks[e][n].files;r&&Object.keys(r).forEach((e=>{s.push({name:e,text:r[e],type:"text"})})),Js[`/${e}/${n}`]={path:`/${e}/${n}`,files:s,category:t,name:a}}))}));var $s={categories:Qs,paths:Js},er=601,tr=function(){document.getElementById("sideBar").classList.toggle("collapsed")},nr=function(){var e=$s.categories,t=i.exports.useState(null),n=t[0],a=t[1],s=i.exports.useState(location.hash),r=s[0],o=s[1],l=new x({largeThumbnails:!1});i.exports.useEffect((function(){var e,t=document.getElementById("sideBar"),i=document.querySelector(".sideBar-panel-toggle");if(i.removeEventListener("click",tr),i.addEventListener("click",tr),window.addEventListener("hashchange",(function(){o(location.hash)})),l.on("largeThumbnails:set",(function(){var e,n=Number.MAX_VALUE;document.querySelectorAll(".nav-item").forEach((function(t){var i=Math.abs(120-t.getBoundingClientRect().top);i<n&&(n=i,e=t)})),t.classList.toggle("small-thumbnails"),e.scrollIntoView()})),!n&&document.body.offsetWidth<er&&(t.ui.collapsed=!0),t.classList.add("visible"),!window._scrolledToExample){var a=location.hash.split("/");null===(e=document.getElementById("link-".concat(a[1],"-").concat(a[2])))||void 0===e||e.scrollIntoView(),window._scrolledToExample=!0}}));var c=n||e;return p.createElement(p.Fragment,null,p.createElement(ti,{headerText:"EXAMPLES",collapsible:document.body.offsetWidth<er,collapsed:!0,id:"sideBar",class:"small-thumbnails"},p.createElement(Bi,{class:"filter-input",keyChange:!0,placeholder:"Filter...",onChange:function(t){var n=t&&t.length>0?new RegExp(t,"i"):null;if(n){var i={};Object.keys(e).forEach((function(t){if(-1!==t.search(n))return i[t]=e[t],null;Object.keys(e[t].examples).forEach((function(a){var s;-1!==e[t].examples[a].search(n)&&(i[t]?i[t].examples[a]=e[t].examples[a]:i[t]={name:e[t].name,examples:(s={},s[a]=e[t].examples[a],s)})}))})),a(i)}else a(e)}}),p.createElement(Nn,{text:"Large thumbnails:"},p.createElement(We,{type:"toggle",binding:new M,link:{observer:l,path:"largeThumbnails"}})),p.createElement(_t,{id:"sideBar-contents"},Object.keys(c).sort((function(e,t){return e>t?1:-1})).map((function(e){return p.createElement(ti,{key:e,class:"categoryPanel",headerText:e.split("-").join(" ").toUpperCase(),collapsible:!0,collapsed:!1},p.createElement("ul",{className:"category-nav"},Object.keys(c[e].examples).sort((function(e,t){return e>t?1:-1})).map((function(t){var n=new RegExp("/".concat(e,"/").concat(t,"$")).test(r),i="nav-item ".concat(n?"selected":null);return p.createElement(Xs,{key:t,to:"/".concat(e,"/").concat(t),onClick:function(){document.getElementById("sideBar").ui.collapsed=!0}},p.createElement("div",{className:i,id:"link-".concat(e,"-").concat(t)},p.createElement("img",{className:"small-thumbnail",loading:"lazy",src:"./thumbnails/".concat(e,"_").concat(t,"_small.png")}),p.createElement("img",{className:"large-thumbnail",loading:"lazy",src:"./thumbnails/".concat(e,"_").concat(t,"_large.png")}),p.createElement("div",{className:"nav-item-text"},t.split("-").join(" ").toUpperCase())))}))))})),0===Object.keys(c).length&&p.createElement(In,{text:"No results"}))),p.createElement("div",{className:"panel-toggle sideBar-panel-toggle"}))};function ir(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function ar(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function sr(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?ar(Object(n),!0).forEach((function(t){ir(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):ar(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function rr(e,t){if(null==e)return{};var n,i,a=function(e,t){if(null==e)return{};var n,i,a={},s=Object.keys(e);for(i=0;i<s.length;i++)n=s[i],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(i=0;i<s.length;i++)n=s[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}function or(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,i=new Array(t);n<t;n++)i[n]=e[n];return i}function lr(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function cr(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function hr(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?cr(Object(n),!0).forEach((function(t){lr(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):cr(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function pr(e){return function t(){for(var n=this,i=arguments.length,a=new Array(i),s=0;s<i;s++)a[s]=arguments[s];return a.length>=e.length?e.apply(this,a):function(){for(var e=arguments.length,i=new Array(e),s=0;s<e;s++)i[s]=arguments[s];return t.apply(n,[].concat(a,i))}}}function dr(e){return{}.toString.call(e).includes("Object")}function ur(e){return"function"==typeof e}var mr=pr((function(e,t){throw new Error(e[t]||e.default)}))({initialIsRequired:"initial state is required",initialType:"initial state should be an object",initialContent:"initial state shouldn't be an empty object",handlerType:"handler should be an object or a function",handlersType:"all handlers should be a functions",selectorType:"selector should be a function",changeType:"provided value of changes should be an object",changeField:'it seams you want to change a field in the state which is not specified in the "initial" state',default:"an unknown error accured in `state-local` package"}),fr={changes:function(e,t){return dr(t)||mr("changeType"),Object.keys(t).some((function(t){return n=e,i=t,!Object.prototype.hasOwnProperty.call(n,i);var n,i}))&&mr("changeField"),t},selector:function(e){ur(e)||mr("selectorType")},handler:function(e){ur(e)||dr(e)||mr("handlerType"),dr(e)&&Object.values(e).some((function(e){return!ur(e)}))&&mr("handlersType")},initial:function(e){var t;e||mr("initialIsRequired"),dr(e)||mr("initialType"),t=e,Object.keys(t).length||mr("initialContent")}};function gr(e,t){return ur(t)?t(e.current):t}function vr(e,t){return e.current=hr(hr({},e.current),t),t}function yr(e,t,n){return ur(t)?t(e.current):Object.keys(n).forEach((function(n){var i;return null===(i=t[n])||void 0===i?void 0:i.call(t,e.current[n])})),n}var _r={create:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};fr.initial(e),fr.handler(t);var n={current:e},i=pr(yr)(n,t),a=pr(vr)(n),s=pr(fr.changes)(e),r=pr(gr)(n);return[function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:function(e){return e};return fr.selector(e),e(n.current)},function(e){!function(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return function(e){return t.reduceRight((function(e,t){return t(e)}),e)}}(i,a,s,r)(e)}]}};var wr,br={configIsRequired:"the configuration object is required",configType:"the configuration object should be an object",default:"an unknown error accured in `@monaco-editor/loader` package",deprecation:"Deprecation warning!\n    You are using deprecated way of configuration.\n\n    Instead of using\n      monaco.config({ urls: { monacoBase: '...' } })\n    use\n      monaco.config({ paths: { vs: '...' } })\n\n    For more please check the link https://github.com/suren-atoyan/monaco-loader#config\n  "},xr=(wr=function(e,t){throw new Error(e[t]||e.default)},function e(){for(var t=this,n=arguments.length,i=new Array(n),a=0;a<n;a++)i[a]=arguments[a];return i.length>=wr.length?wr.apply(this,i):function(){for(var n=arguments.length,a=new Array(n),s=0;s<n;s++)a[s]=arguments[s];return e.apply(t,[].concat(i,a))}})(br),Cr={config:function(e){var t;return e||xr("configIsRequired"),t=e,{}.toString.call(t).includes("Object")||xr("configType"),e.urls?(console.warn(br.deprecation),{paths:{vs:e.urls.monacoBase}}):e}};function Sr(e,t){return Object.keys(t).forEach((function(n){t[n]instanceof Object&&e[n]&&Object.assign(t[n],Sr(e[n],t[n]))})),sr(sr({},e),t)}var Er={type:"cancelation",msg:"operation is manually canceled"};function Tr(e){var t=!1,n=new Promise((function(n,i){e.then((function(e){return t?i(Er):n(e)})),e.catch(i)}));return n.cancel=function(){return t=!0},n}var Ar,Lr,Mr=_r.create({config:{paths:{vs:"https://cdn.jsdelivr.net/npm/monaco-editor@0.36.1/min/vs"}},isInitialized:!1,resolve:null,reject:null,monaco:null}),Pr=(Lr=2,function(e){if(Array.isArray(e))return e}(Ar=Mr)||function(e,t){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e)){var n=[],i=!0,a=!1,s=void 0;try{for(var r,o=e[Symbol.iterator]();!(i=(r=o.next()).done)&&(n.push(r.value),!t||n.length!==t);i=!0);}catch(e){a=!0,s=e}finally{try{i||null==o.return||o.return()}finally{if(a)throw s}}return n}}(Ar,Lr)||function(e,t){if(e){if("string"==typeof e)return or(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?or(e,t):void 0}}(Ar,Lr)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),Or=Pr[0],Ir=Pr[1];function Rr(e){return document.body.appendChild(e)}function Dr(e){var t,n,i=Or((function(e){return{config:e.config,reject:e.reject}})),a=(t="".concat(i.config.paths.vs,"/loader.js"),n=document.createElement("script"),t&&(n.src=t),n);return a.onload=function(){return e()},a.onerror=i.reject,a}function kr(){var e=Or((function(e){return{config:e.config,resolve:e.resolve,reject:e.reject}})),t=window.require;t.config(e.config),t(["vs/editor/editor.main"],(function(t){Fr(t),e.resolve(t)}),(function(t){e.reject(t)}))}function Fr(e){Or().monaco||Ir({monaco:e})}var Br=new Promise((function(e,t){return Ir({resolve:e,reject:t})})),Nr={config:function(e){var t=Cr.config(e),n=t.monaco,i=rr(t,["monaco"]);Ir((function(e){return{config:Sr(e.config,i),monaco:n}}))},init:function(){var e=Or((function(e){return{monaco:e.monaco,isInitialized:e.isInitialized,resolve:e.resolve}}));if(!e.isInitialized){if(Ir({isInitialized:!0}),e.monaco)return e.resolve(e.monaco),Tr(Br);if(window.monaco&&window.monaco.editor)return Fr(window.monaco),e.resolve(window.monaco),Tr(Br);!function(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return function(e){return t.reduceRight((function(e,t){return t(e)}),e)}}(Rr,Dr)(kr)}return Tr(Br)},__getMonacoInstance:function(){return Or((function(e){return e.monaco}))}},Ur={wrapper:{display:"flex",position:"relative",textAlign:"initial"},fullWidth:{width:"100%"},hide:{display:"none"}},zr={container:{display:"flex",height:"100%",width:"100%",justifyContent:"center",alignItems:"center"}};var Vr=function({children:e}){return p.createElement("div",{style:zr.container},e)};var Hr=function({width:e,height:t,isEditorReady:n,loading:i,_ref:a,className:s,wrapperProps:r}){return p.createElement("section",{style:{...Ur.wrapper,width:e,height:t},...r},!n&&p.createElement(Vr,null,i),p.createElement("div",{ref:a,style:{...Ur.fullWidth,...!n&&Ur.hide},className:s}))},Gr=i.exports.memo(Hr);var Wr=function(e){i.exports.useEffect(e,[])};var jr=function(e,t,n=!0){let a=i.exports.useRef(!0);i.exports.useEffect(a.current||!n?()=>{a.current=!1}:e,t)};function Xr(){}function Yr(e,t,n,i){return function(e,t){return e.editor.getModel(qr(e,t))}(e,i)||function(e,t,n,i){return e.editor.createModel(t,n,i?qr(e,i):void 0)}(e,t,n,i)}function qr(e,t){return e.Uri.parse(t)}var Kr=function({original:e,modified:t,language:n,originalLanguage:a,modifiedLanguage:s,originalModelPath:r,modifiedModelPath:o,keepCurrentOriginalModel:l=!1,keepCurrentModifiedModel:c=!1,theme:h="light",loading:d="Loading...",options:u={},height:m="100%",width:f="100%",className:g,wrapperProps:v={},beforeMount:y=Xr,onMount:_=Xr}){let[w,b]=i.exports.useState(!1),[x,C]=i.exports.useState(!0),S=i.exports.useRef(null),E=i.exports.useRef(null),T=i.exports.useRef(null),A=i.exports.useRef(_),L=i.exports.useRef(y),M=i.exports.useRef(!1);Wr((()=>{let e=Nr.init();return e.then((e=>(E.current=e)&&C(!1))).catch((e=>"cancelation"!==e?.type&&console.error("Monaco initialization: error:",e))),()=>S.current?function(){let e=S.current?.getModel();l||e?.original?.dispose(),c||e?.modified?.dispose(),S.current?.dispose()}():e.cancel()})),jr((()=>{let e=S.current.getModifiedEditor();e.getOption(E.current.editor.EditorOption.readOnly)?e.setValue(t||""):t!==e.getValue()&&(e.executeEdits("",[{range:e.getModel().getFullModelRange(),text:t||"",forceMoveMarkers:!0}]),e.pushUndoStop())}),[t],w),jr((()=>{S.current?.getModel()?.original.setValue(e||"")}),[e],w),jr((()=>{let{original:e,modified:t}=S.current.getModel();E.current.editor.setModelLanguage(e,a||n||"text"),E.current.editor.setModelLanguage(t,s||n||"text")}),[n,a,s],w),jr((()=>{E.current?.editor.setTheme(h)}),[h],w),jr((()=>{S.current?.updateOptions(u)}),[u],w);let P=i.exports.useCallback((()=>{if(!E.current)return;L.current(E.current);let i=Yr(E.current,e||"",a||n||"text",r||""),l=Yr(E.current,t||"",s||n||"text",o||"");S.current?.setModel({original:i,modified:l})}),[n,t,s,e,a,r,o]),O=i.exports.useCallback((()=>{!M.current&&T.current&&(S.current=E.current.editor.createDiffEditor(T.current,{automaticLayout:!0,...u}),P(),E.current?.editor.setTheme(h),b(!0),M.current=!0)}),[u,h,P]);return i.exports.useEffect((()=>{w&&A.current(S.current,E.current)}),[w]),i.exports.useEffect((()=>{!x&&!w&&O()}),[x,w,O]),jr((()=>{if(S.current&&E.current){let t=S.current.getOriginalEditor(),i=Yr(E.current,e||"",a||n||"text",r||"");i!==t.getModel()&&t.setModel(i)}}),[r],w),jr((()=>{if(S.current&&E.current){let e=S.current.getModifiedEditor(),i=Yr(E.current,t||"",s||n||"text",o||"");i!==e.getModel()&&e.setModel(i)}}),[o],w),p.createElement(Gr,{width:f,height:m,isEditorReady:w,loading:d,_ref:T,className:g,wrapperProps:v})};i.exports.memo(Kr);var Zr=function(e){let t=i.exports.useRef();return i.exports.useEffect((()=>{t.current=e}),[e]),t.current},Qr=new Map;var Jr=function({defaultValue:e,defaultLanguage:t,defaultPath:n,value:a,language:s,path:r,theme:o="light",line:l,loading:c="Loading...",options:h={},overrideServices:d={},saveViewState:u=!0,keepCurrentModel:m=!1,width:f="100%",height:g="100%",className:v,wrapperProps:y={},beforeMount:_=Xr,onMount:w=Xr,onChange:b,onValidate:x=Xr}){let[C,S]=i.exports.useState(!1),[E,T]=i.exports.useState(!0),A=i.exports.useRef(null),L=i.exports.useRef(null),M=i.exports.useRef(null),P=i.exports.useRef(w),O=i.exports.useRef(_),I=i.exports.useRef(),R=i.exports.useRef(a),D=Zr(r),k=i.exports.useRef(!1),F=i.exports.useRef(!1);Wr((()=>{let e=Nr.init();return e.then((e=>(A.current=e)&&T(!1))).catch((e=>"cancelation"!==e?.type&&console.error("Monaco initialization: error:",e))),()=>L.current?(I.current?.dispose(),m?u&&Qr.set(r,L.current.saveViewState()):L.current.getModel()?.dispose(),void L.current.dispose()):e.cancel()})),jr((()=>{let i=Yr(A.current,e||a||"",t||s||"",r||n||"");i!==L.current?.getModel()&&(u&&Qr.set(D,L.current?.saveViewState()),L.current?.setModel(i),u&&L.current?.restoreViewState(Qr.get(r)))}),[r],C),jr((()=>{L.current?.updateOptions(h)}),[h],C),jr((()=>{!L.current||void 0===a||(L.current.getOption(A.current.editor.EditorOption.readOnly)?L.current.setValue(a):a!==L.current.getValue()&&(F.current=!0,L.current.executeEdits("",[{range:L.current.getModel().getFullModelRange(),text:a,forceMoveMarkers:!0}]),L.current.pushUndoStop(),F.current=!1))}),[a],C),jr((()=>{let e=L.current?.getModel();e&&s&&A.current?.editor.setModelLanguage(e,s)}),[s],C),jr((()=>{void 0!==l&&L.current?.revealLine(l)}),[l],C),jr((()=>{A.current?.editor.setTheme(o)}),[o],C);let B=i.exports.useCallback((()=>{if(M.current&&A.current&&!k.current){O.current(A.current);let i=r||n,l=Yr(A.current,a||e||"",t||s||"",i||"");L.current=A.current?.editor.create(M.current,{model:l,automaticLayout:!0,...h},d),u&&L.current.restoreViewState(Qr.get(i)),A.current.editor.setTheme(o),S(!0),k.current=!0}}),[e,t,n,a,s,r,h,d,u,o]);return i.exports.useEffect((()=>{C&&P.current(L.current,A.current)}),[C]),i.exports.useEffect((()=>{!E&&!C&&B()}),[E,C,B]),R.current=a,i.exports.useEffect((()=>{C&&b&&(I.current?.dispose(),I.current=L.current?.onDidChangeModelContent((e=>{F.current||b(L.current.getValue(),e)})))}),[C,b]),i.exports.useEffect((()=>{if(C){let e=A.current.editor.onDidChangeMarkers((e=>{let t=L.current.getModel()?.uri;if(t&&e.find((e=>e.path===t.path))){let e=A.current.editor.getModelMarkers({resource:t});x?.(e)}}));return()=>{e?.dispose()}}return()=>{}}),[C,x]),p.createElement(Gr,{width:f,height:g,isEditorReady:C,loading:c,_ref:M,className:v,wrapperProps:y})},$r=i.exports.memo(Jr);var eo,to=e=>{const t=": void {";return e=(e=e.includes(t)?e.substring(e.indexOf(t)+8):e.substring(e.indexOf("{")+1)).substring(0,e.lastIndexOf("}"))},no={json:"json",shader:null,javascript:"javascript",typescript:"typescript"},io=function(e){var t,n,a=JSON.parse(JSON.stringify(e.files)),s=i.exports.useState(0),r=s[0],o=s[1],l=function(e){o(e),null==eo||eo.setScrollPosition({scrollTop:0,scrollLeft:0}),document.querySelectorAll("#codePane .tabs-container .pcui-button").forEach((function(t,n){e===n?t.classList.add("selected"):t.classList.remove("selected")}))};return i.exports.useEffect((function(){var t=document.getElementById("codePane");t.classList.add("multiple-files"),a[r]||o(e.useTypeScript?1:0),e.useTypeScript&&0===r?l(1):e.useTypeScript||1!==r||l(0),t.ui.on("resize",(function(){localStorage.setItem("codePaneStyle",t.getAttribute("style"))}));var n=localStorage.getItem("codePaneStyle");(n&&t.setAttribute("style",n),window.toggleEvent)||(t.querySelector(".panel-toggle").addEventListener("click",(function(){t.classList.toggle("collapsed"),localStorage.setItem("codePaneCollapsed",t.classList.contains("collapsed")?"true":"false")})),window.toggleEvent=!0)})),p.createElement(ti,{headerText:"CODE",id:"codePane",class:"true"===localStorage.getItem("codePaneCollapsed")?"collapsed":null,resizable:"left",resizeMax:2e3},p.createElement("div",{className:"panel-toggle",id:"codePane-panel-toggle"}),p.createElement(_t,{class:"tabs-wrapper"},p.createElement(_t,{class:"code-editor-menu-container"},p.createElement(Xe,{id:"play-button",enabled:!e.lintErrors,icon:"E304",text:"",ref:e.playButtonRef}),p.createElement(Xe,{id:"language-button",text:e.useTypeScript?"JS":"TS",ref:e.languageButtonRef}),p.createElement(Xe,{icon:"E259",text:"",onClick:function(){var e="#/"===location.hash?"misc/hello-world":location.hash.replace("#/","");window.open("https://github.com/playcanvas/engine/blob/dev/examples/src/examples/".concat(e,".tsx"))}})),p.createElement(_t,{class:"tabs-container"},e.files.map((function(t,n){var i=e.useTypeScript&&0===n||!e.useTypeScript&&1===n;return p.createElement(Xe,{key:n,id:"code-editor-file-tab-".concat(n),hidden:i,text:-1===t.name.indexOf(".")?"".concat(t.name,".").concat(t.type):t.name,class:n===r?"selected":null,onClick:function(){return l(n)}})})))),p.createElement($r,{language:no[null===(t=a[r])||void 0===t?void 0:t.type],value:null===(n=a[r])||void 0===n?void 0:n.text,beforeMount:function(e){fetch("/playcanvas.d.ts").then((function(e){return e.text()})).then((function(t){e.languages.typescript.typescriptDefaults.addExtraLib(t,"@playcanvas/playcanvas.d.ts"),e.languages.typescript.javascriptDefaults.addExtraLib(t,"@playcanvas/playcanvas.d.ts")}))},onMount:function(e){eo=e},onChange:function(t){var n;a[r].text=t,e.setFiles(a),n=e.useTypeScript?a[1].text:a[0].text,window.localStorage.setItem(window.location.hash.replace("#",""),to(n)),a.length>2&&(window.editedFiles={},a.slice(2).forEach((function(e){window.editedFiles[e.name]=e.text})))},onValidate:function(t){0===t.filter((function(e){return e.severity>1})).length?e.setLintErrors(!1):e.setLintErrors(!0)},options:{scrollbar:{horizontal:"visible"},readOnly:!1}}))},ao=function(e){var t=null,n=null,a=function(){n&&document.querySelector("iframe").contentDocument.removeEventListener("mousemove",n),document.querySelector("#canvas-container").classList.toggle("fullscreen");var e=document.querySelector("#appInner");e.classList.toggle("fullscreen"),document.querySelector("iframe").contentDocument.getElementById("appInner").classList.toggle("fullscreen"),e.classList.contains("fullscreen")&&(n=function(){e.classList.add("active"),t&&window.clearTimeout(t),t=setTimeout((function(){e.classList.remove("active")}),2e3)},document.querySelector("iframe").contentDocument.addEventListener("mousemove",n))};return i.exports.useEffect((function(){var e=function(e){27===e.keyCode&&document.querySelector("#canvas-container").classList.contains("fullscreen")&&a()};document.querySelector("iframe").contentDocument.addEventListener("keydown",e),document.addEventListener("keydown",e)})),p.createElement(_t,{id:"menu"},p.createElement(_t,{id:"menu-buttons"},p.createElement("img",{id:"playcanvas-icon",src:"https://playcanvas.com/viewer/static/playcanvas-logo.png",onClick:function(){window.open("https://github.com/playcanvas/engine")}}),p.createElement(Xe,{icon:"E256",text:"",onClick:function(){var e=encodeURI("Check out this @playcanvas engine example! ".concat(location.href.replace("#/","")));window.open("https://twitter.com/intent/tweet?text=".concat(e))}}),p.createElement(Xe,{icon:"E149",id:"showMiniStatsButton",class:"selected",text:"",onClick:function(){document.getElementById("showMiniStatsButton").classList.toggle("selected"),e.setShowMiniStats(document.getElementById("showMiniStatsButton").classList.contains("selected"))}}),p.createElement(Xe,{icon:"E127",text:"",id:"fullscreen-button",onClick:a})))},so=function(e,t){return so=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])},so(e,t)};function ro(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Class extends value "+String(t)+" is not a constructor or null");function n(){this.constructor=e}so(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}var oo=function(){return oo=Object.assign||function(e){for(var t,n=1,i=arguments.length;n<i;n++)for(var a in t=arguments[n])Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a]);return e},oo.apply(this,arguments)};"function"==typeof SuppressedError&&SuppressedError;var lo={exports:{}};
/**
 * @license
 * PlayCanvas Engine v1.66.0 revision e8f1b2869 (RELEASE)
 * Copyright 2011-2023 PlayCanvas Ltd. All rights reserved.
 */!function(t){function n(e,t,n){e.prototype[t]||Object.defineProperty(e.prototype,t,{value:n,configurable:!0,enumerable:!1,writable:!0})}n(Array,"fill",(function(e){if(null==this)throw new TypeError("this is null or not defined");for(var t=Object(this),n=t.length>>>0,i=arguments[1]>>0,a=i<0?Math.max(n+i,0):Math.min(i,n),s=arguments[2],r=void 0===s?n:s>>0,o=r<0?Math.max(n+r,0):Math.min(r,n);a<o;)t[a]=e,a++;return t})),n(Array,"find",(function(e){if(null==this)throw TypeError('"this" is null or not defined');var t=Object(this),n=t.length>>>0;if("function"!=typeof e)throw TypeError("predicate must be a function");for(var i=arguments[1],a=0;a<n;){var s=t[a];if(e.call(i,s,a,t))return s;a++}})),n(Array,"findIndex",(function(e){if(null==this)throw new TypeError('"this" is null or not defined');var t=Object(this),n=t.length>>>0;if("function"!=typeof e)throw new TypeError("predicate must be a function");for(var i=arguments[1],a=0;a<n;){var s=t[a];if(e.call(i,s,a,t))return a;a++}return-1})),Math.log2=Math.log2||function(e){return Math.log(e)*Math.LOG2E},Math.sign||(Math.sign=function(e){return(e>0)-(e<0)||+e}),void 0===Number.isFinite&&(Number.isFinite=function(e){return"number"==typeof e&&isFinite(e)}),"function"!=typeof Object.assign&&Object.defineProperty(Object,"assign",{value:function(e,t){if(null==e)throw new TypeError("Cannot convert undefined or null to object");for(var n=Object(e),i=1;i<arguments.length;i++){var a=arguments[i];if(null!=a)for(var s in a)Object.prototype.hasOwnProperty.call(a,s)&&(n[s]=a[s])}return n},writable:!0,configurable:!0}),Object.values=Object.values||function(e){return Object.keys(e).map((function(t){return e[t]}))},function(){if("undefined"!=typeof navigator&&"undefined"!=typeof document){navigator.pointer=navigator.pointer||navigator.webkitPointer||navigator.mozPointer;var e=function(){var e=document.createEvent("CustomEvent");e.initCustomEvent("pointerlockchange",!0,!1,null),document.dispatchEvent(e)},t=function(){var e=document.createEvent("CustomEvent");e.initCustomEvent("pointerlockerror",!0,!1,null),document.dispatchEvent(e)};document.addEventListener("webkitpointerlockchange",e,!1),document.addEventListener("webkitpointerlocklost",e,!1),document.addEventListener("mozpointerlockchange",e,!1),document.addEventListener("mozpointerlocklost",e,!1),document.addEventListener("webkitpointerlockerror",t,!1),document.addEventListener("mozpointerlockerror",t,!1),Element.prototype.mozRequestPointerLock?Element.prototype.requestPointerLock=function(){this.mozRequestPointerLock()}:Element.prototype.requestPointerLock=Element.prototype.requestPointerLock||Element.prototype.webkitRequestPointerLock||Element.prototype.mozRequestPointerLock,!Element.prototype.requestPointerLock&&navigator.pointer&&(Element.prototype.requestPointerLock=function(){var n=this;document.pointerLockElement=n,navigator.pointer.lock(n,e,t)}),document.exitPointerLock=document.exitPointerLock||document.webkitExitPointerLock||document.mozExitPointerLock,document.exitPointerLock||(document.exitPointerLock=function(){navigator.pointer&&(document.pointerLockElement=null,navigator.pointer.unlock())})}}(),n(String,"endsWith",(function(e,t){return(void 0===t||t>this.length)&&(t=this.length),this.substring(t-e.length,t)===e})),n(String,"includes",(function(e,t){return"number"!=typeof t&&(t=0),!(t+e.length>this.length)&&-1!==this.indexOf(e,t)})),n(String,"startsWith",(function(e,t){var n=t>0?0|t:0;return this.substring(n,n+e.length)===e})),n(String,"trimEnd",(function(){return this.replace(new RegExp(/[\x09\x0A\x0B\x0C\x0D\x20\xA0\u1680\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200A\u202F\u205F\u3000\u2028\u2029\uFEFF]+/.source+"$","g"),"")}));for(var i=[Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array],a=0,s=i;a<s.length;a++){var r=s[a];n(r,"fill",Array.prototype.fill),n(r,"join",Array.prototype.join)}var o={};function l(e){window.console&&window.console.error&&window.console.error(e)}function c(e){window.console&&window.console.log&&window.console.log(e)}function h(e,t){o[e]=!0,void 0!==t&&l(t)}function p(e){var t=e.getError;e.getError=function(){do{(n=t.apply(e))!=e.NO_ERROR&&(o[n]=!0)}while(n!=e.NO_ERROR);for(var n in o)if(o[n])return delete o[n],parseInt(n);return e.NO_ERROR}}var d=function e(t){var n=t.gl;this.ext=t,this.isAlive=!0,this.hasBeenBound=!1,this.elementArrayBuffer=null,this.attribs=new Array(t.maxVertexAttribs);for(var i=0;i<this.attribs.length;i++){var a=new e.VertexAttrib(n);this.attribs[i]=a}this.maxAttrib=0};d.VertexAttrib=function(e){this.enabled=!1,this.buffer=null,this.size=4,this.type=e.FLOAT,this.normalized=!1,this.stride=16,this.offset=0,this.cached="",this.recache()},d.VertexAttrib.prototype.recache=function(){this.cached=[this.size,this.type,this.normalized,this.stride,this.offset].join(":")};var u=function(e){var t=this;this.gl=e,p(e);var n=this.original={getParameter:e.getParameter,enableVertexAttribArray:e.enableVertexAttribArray,disableVertexAttribArray:e.disableVertexAttribArray,bindBuffer:e.bindBuffer,getVertexAttrib:e.getVertexAttrib,vertexAttribPointer:e.vertexAttribPointer};e.getParameter=function(e){return e==t.VERTEX_ARRAY_BINDING_OES?t.currentVertexArrayObject==t.defaultVertexArrayObject?null:t.currentVertexArrayObject:n.getParameter.apply(this,arguments)},e.enableVertexAttribArray=function(e){var i=t.currentVertexArrayObject;return i.maxAttrib=Math.max(i.maxAttrib,e),i.attribs[e].enabled=!0,n.enableVertexAttribArray.apply(this,arguments)},e.disableVertexAttribArray=function(e){var i=t.currentVertexArrayObject;return i.maxAttrib=Math.max(i.maxAttrib,e),i.attribs[e].enabled=!1,n.disableVertexAttribArray.apply(this,arguments)},e.bindBuffer=function(i,a){switch(i){case e.ARRAY_BUFFER:t.currentArrayBuffer=a;break;case e.ELEMENT_ARRAY_BUFFER:t.currentVertexArrayObject.elementArrayBuffer=a}return n.bindBuffer.apply(this,arguments)},e.getVertexAttrib=function(i,a){var s=t.currentVertexArrayObject.attribs[i];switch(a){case e.VERTEX_ATTRIB_ARRAY_BUFFER_BINDING:return s.buffer;case e.VERTEX_ATTRIB_ARRAY_ENABLED:return s.enabled;case e.VERTEX_ATTRIB_ARRAY_SIZE:return s.size;case e.VERTEX_ATTRIB_ARRAY_STRIDE:return s.stride;case e.VERTEX_ATTRIB_ARRAY_TYPE:return s.type;case e.VERTEX_ATTRIB_ARRAY_NORMALIZED:return s.normalized;default:return n.getVertexAttrib.apply(this,arguments)}},e.vertexAttribPointer=function(e,i,a,s,r,o){var l=t.currentVertexArrayObject;l.maxAttrib=Math.max(l.maxAttrib,e);var c=l.attribs[e];return c.buffer=t.currentArrayBuffer,c.size=i,c.type=a,c.normalized=s,c.stride=r,c.offset=o,c.recache(),n.vertexAttribPointer.apply(this,arguments)},e.instrumentExtension&&e.instrumentExtension(this,"OES_vertex_array_object"),e.canvas.addEventListener("webglcontextrestored",(function(){c("OESVertexArrayObject emulation library context restored"),t.reset_()}),!0),this.reset_()};u.prototype.VERTEX_ARRAY_BINDING_OES=34229,u.prototype.reset_=function(){if(void 0!==this.vertexArrayObjects)for(var e=0;e<this.vertexArrayObjects.length;++e)this.vertexArrayObjects.isAlive=!1;var t=this.gl;this.maxVertexAttribs=t.getParameter(t.MAX_VERTEX_ATTRIBS),this.defaultVertexArrayObject=new d(this),this.currentVertexArrayObject=null,this.currentArrayBuffer=null,this.vertexArrayObjects=[this.defaultVertexArrayObject],this.bindVertexArrayOES(null)},u.prototype.createVertexArrayOES=function(){var e=new d(this);return this.vertexArrayObjects.push(e),e},u.prototype.deleteVertexArrayOES=function(e){e.isAlive=!1,this.vertexArrayObjects.splice(this.vertexArrayObjects.indexOf(e),1),this.currentVertexArrayObject==e&&this.bindVertexArrayOES(null)},u.prototype.isVertexArrayOES=function(e){return!!(e&&e instanceof d&&e.hasBeenBound&&e.ext==this)},u.prototype.bindVertexArrayOES=function(e){var t=this.gl;if(!e||e.isAlive){var n=this.original,i=this.currentVertexArrayObject;this.currentVertexArrayObject=e||this.defaultVertexArrayObject,this.currentVertexArrayObject.hasBeenBound=!0;var a=this.currentVertexArrayObject;if(i!=a){i&&a.elementArrayBuffer==i.elementArrayBuffer||n.bindBuffer.call(t,t.ELEMENT_ARRAY_BUFFER,a.elementArrayBuffer);for(var s=this.currentArrayBuffer,r=Math.max(i?i.maxAttrib:0,a.maxAttrib),o=0;o<=r;o++){var l=a.attribs[o],c=i?i.attribs[o]:null;if(i&&l.enabled==c.enabled||(l.enabled?n.enableVertexAttribArray.call(t,o):n.disableVertexAttribArray.call(t,o)),l.enabled){var p=!1;i&&l.buffer==c.buffer||(s!=l.buffer&&(n.bindBuffer.call(t,t.ARRAY_BUFFER,l.buffer),s=l.buffer),p=!0),(p||l.cached!=c.cached)&&n.vertexAttribPointer.call(t,o,l.size,l.type,l.normalized,l.stride,l.offset)}}this.currentArrayBuffer!=s&&n.bindBuffer.call(t,t.ARRAY_BUFFER,this.currentArrayBuffer)}}else h(t.INVALID_OPERATION,"bindVertexArrayOES: attempt to bind deleted arrayObject")};var m=function(e){if(e.getSupportedExtensions){if(-1!=e.getSupportedExtensions().indexOf("OES_vertex_array_object"))return}else if(e.getExtension&&e.getExtension("OES_vertex_array_object"))return;if(e.getSupportedExtensions){var t=e.getSupportedExtensions;e.getSupportedExtensions=function(){var e=t.call(this)||[];return e.push("OES_vertex_array_object"),e}}var n=e.getExtension;e.getExtension=function(t){return"OES_vertex_array_object"==t?(e.__OESVertexArrayObject||(e.__OESVertexArrayObject=new u(e)),e.__OESVertexArrayObject):n?n.call(this,t):null}},f="RenderFrame",g="RenderFrameTime",v="RenderPass",y="RenderPassDetail",_="RenderAction",w="RenderTargetAlloc",b="TextureAlloc",x="ShaderAlloc",C="ShaderCompile",S="VRAM.Texture",E="VRAM.Vb",T="VRAM.Ib",A="BindGroupAlloc",L="BindGroupFormatAlloc",M="RenderPipelineAlloc",P="PipelineLayoutAlloc",O="Element",I="Textures",R="RenderQueue",D="GpuTimings",k="1.66.0",F="e8f1b2869",B={},N={},U={},z={},V=function(){for(var e={},t=["Array","Object","Function","Date","RegExp","Float32Array"],n=0;n<t.length;n++)e["[object "+t[n]+"]"]=t[n].toLowerCase();return e}();function H(e){if(null===e)return"null";var t=typeof e;return"undefined"===t||"number"===t||"string"===t||"boolean"===t?t:V[Object.prototype.toString.call(e)]}function G(e,t){for(var n in t){var i=t[n];"object"===H(i)?e[n]=G({},i):"array"===H(i)?e[n]=G([],i):e[n]=i}return e}function W(){W=function(){return t};var e,t={},n=Object.prototype,i=n.hasOwnProperty,a=Object.defineProperty||function(e,t,n){e[t]=n.value},s="function"==typeof Symbol?Symbol:{},r=s.iterator||"@@iterator",o=s.asyncIterator||"@@asyncIterator",l=s.toStringTag||"@@toStringTag";function c(e,t,n){return Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}),e[t]}try{c({},"")}catch(e){c=function(e,t,n){return e[t]=n}}function h(e,t,n,i){var s=t&&t.prototype instanceof v?t:v,r=Object.create(s.prototype),o=new P(i||[]);return a(r,"_invoke",{value:T(e,n,o)}),r}function p(e,t,n){try{return{type:"normal",arg:e.call(t,n)}}catch(e){return{type:"throw",arg:e}}}t.wrap=h;var d="suspendedStart",u="suspendedYield",m="executing",f="completed",g={};function v(){}function y(){}function _(){}var w={};c(w,r,(function(){return this}));var b=Object.getPrototypeOf,x=b&&b(b(O([])));x&&x!==n&&i.call(x,r)&&(w=x);var C=_.prototype=v.prototype=Object.create(w);function S(e){["next","throw","return"].forEach((function(t){c(e,t,(function(e){return this._invoke(t,e)}))}))}function E(e,t){function n(a,s,r,o){var l=p(e[a],e,s);if("throw"!==l.type){var c=l.arg,h=c.value;return h&&"object"==typeof h&&i.call(h,"__await")?t.resolve(h.__await).then((function(e){n("next",e,r,o)}),(function(e){n("throw",e,r,o)})):t.resolve(h).then((function(e){c.value=e,r(c)}),(function(e){return n("throw",e,r,o)}))}o(l.arg)}var s;a(this,"_invoke",{value:function(e,i){function a(){return new t((function(t,a){n(e,i,t,a)}))}return s=s?s.then(a,a):a()}})}function T(t,n,i){var a=d;return function(s,r){if(a===m)throw new Error("Generator is already running");if(a===f){if("throw"===s)throw r;return{value:e,done:!0}}for(i.method=s,i.arg=r;;){var o=i.delegate;if(o){var l=A(o,i);if(l){if(l===g)continue;return l}}if("next"===i.method)i.sent=i._sent=i.arg;else if("throw"===i.method){if(a===d)throw a=f,i.arg;i.dispatchException(i.arg)}else"return"===i.method&&i.abrupt("return",i.arg);a=m;var c=p(t,n,i);if("normal"===c.type){if(a=i.done?f:u,c.arg===g)continue;return{value:c.arg,done:i.done}}"throw"===c.type&&(a=f,i.method="throw",i.arg=c.arg)}}}function A(t,n){var i=n.method,a=t.iterator[i];if(a===e)return n.delegate=null,"throw"===i&&t.iterator.return&&(n.method="return",n.arg=e,A(t,n),"throw"===n.method)||"return"!==i&&(n.method="throw",n.arg=new TypeError("The iterator does not provide a '"+i+"' method")),g;var s=p(a,t.iterator,n.arg);if("throw"===s.type)return n.method="throw",n.arg=s.arg,n.delegate=null,g;var r=s.arg;return r?r.done?(n[t.resultName]=r.value,n.next=t.nextLoc,"return"!==n.method&&(n.method="next",n.arg=e),n.delegate=null,g):r:(n.method="throw",n.arg=new TypeError("iterator result is not an object"),n.delegate=null,g)}function L(e){var t={tryLoc:e[0]};1 in e&&(t.catchLoc=e[1]),2 in e&&(t.finallyLoc=e[2],t.afterLoc=e[3]),this.tryEntries.push(t)}function M(e){var t=e.completion||{};t.type="normal",delete t.arg,e.completion=t}function P(e){this.tryEntries=[{tryLoc:"root"}],e.forEach(L,this),this.reset(!0)}function O(t){if(t||""===t){var n=t[r];if(n)return n.call(t);if("function"==typeof t.next)return t;if(!isNaN(t.length)){var a=-1,s=function n(){for(;++a<t.length;)if(i.call(t,a))return n.value=t[a],n.done=!1,n;return n.value=e,n.done=!0,n};return s.next=s}}throw new TypeError(typeof t+" is not iterable")}return y.prototype=_,a(C,"constructor",{value:_,configurable:!0}),a(_,"constructor",{value:y,configurable:!0}),y.displayName=c(_,l,"GeneratorFunction"),t.isGeneratorFunction=function(e){var t="function"==typeof e&&e.constructor;return!!t&&(t===y||"GeneratorFunction"===(t.displayName||t.name))},t.mark=function(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,_):(e.__proto__=_,c(e,l,"GeneratorFunction")),e.prototype=Object.create(C),e},t.awrap=function(e){return{__await:e}},S(E.prototype),c(E.prototype,o,(function(){return this})),t.AsyncIterator=E,t.async=function(e,n,i,a,s){void 0===s&&(s=Promise);var r=new E(h(e,n,i,a),s);return t.isGeneratorFunction(n)?r:r.next().then((function(e){return e.done?e.value:r.next()}))},S(C),c(C,l,"Generator"),c(C,r,(function(){return this})),c(C,"toString",(function(){return"[object Generator]"})),t.keys=function(e){var t=Object(e),n=[];for(var i in t)n.push(i);return n.reverse(),function e(){for(;n.length;){var i=n.pop();if(i in t)return e.value=i,e.done=!1,e}return e.done=!0,e}},t.values=O,P.prototype={constructor:P,reset:function(t){if(this.prev=0,this.next=0,this.sent=this._sent=e,this.done=!1,this.delegate=null,this.method="next",this.arg=e,this.tryEntries.forEach(M),!t)for(var n in this)"t"===n.charAt(0)&&i.call(this,n)&&!isNaN(+n.slice(1))&&(this[n]=e)},stop:function(){this.done=!0;var e=this.tryEntries[0].completion;if("throw"===e.type)throw e.arg;return this.rval},dispatchException:function(t){if(this.done)throw t;var n=this;function a(i,a){return o.type="throw",o.arg=t,n.next=i,a&&(n.method="next",n.arg=e),!!a}for(var s=this.tryEntries.length-1;s>=0;--s){var r=this.tryEntries[s],o=r.completion;if("root"===r.tryLoc)return a("end");if(r.tryLoc<=this.prev){var l=i.call(r,"catchLoc"),c=i.call(r,"finallyLoc");if(l&&c){if(this.prev<r.catchLoc)return a(r.catchLoc,!0);if(this.prev<r.finallyLoc)return a(r.finallyLoc)}else if(l){if(this.prev<r.catchLoc)return a(r.catchLoc,!0)}else{if(!c)throw new Error("try statement without catch or finally");if(this.prev<r.finallyLoc)return a(r.finallyLoc)}}}},abrupt:function(e,t){for(var n=this.tryEntries.length-1;n>=0;--n){var a=this.tryEntries[n];if(a.tryLoc<=this.prev&&i.call(a,"finallyLoc")&&this.prev<a.finallyLoc){var s=a;break}}s&&("break"===e||"continue"===e)&&s.tryLoc<=t&&t<=s.finallyLoc&&(s=null);var r=s?s.completion:{};return r.type=e,r.arg=t,s?(this.method="next",this.next=s.finallyLoc,g):this.complete(r)},complete:function(e,t){if("throw"===e.type)throw e.arg;return"break"===e.type||"continue"===e.type?this.next=e.arg:"return"===e.type?(this.rval=this.arg=e.arg,this.method="return",this.next="end"):"normal"===e.type&&t&&(this.next=t),g},finish:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var n=this.tryEntries[t];if(n.finallyLoc===e)return this.complete(n.completion,n.afterLoc),M(n),g}},catch:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var n=this.tryEntries[t];if(n.tryLoc===e){var i=n.completion;if("throw"===i.type){var a=i.arg;M(n)}return a}}throw new Error("illegal catch attempt")},delegateYield:function(t,n,i){return this.delegate={iterator:O(t),resultName:n,nextLoc:i},"next"===this.method&&(this.arg=e),g}},t}function j(e,t,n,i,a,s,r){try{var o=e[s](r),l=o.value}catch(e){return void n(e)}o.done?t(l):Promise.resolve(l).then(i,a)}function X(e){return function(){var t=this,n=arguments;return new Promise((function(i,a){var s=e.apply(t,n);function r(e){j(s,i,a,r,o,"next",e)}function o(e){j(s,i,a,r,o,"throw",e)}r(void 0)}))}}function Y(e,t){for(var n=0;n<t.length;n++){var i=t[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,ie(i.key),i)}}function q(e,t,n){return t&&Y(e.prototype,t),n&&Y(e,n),Object.defineProperty(e,"prototype",{writable:!1}),e}function K(){return K=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var i in n)Object.prototype.hasOwnProperty.call(n,i)&&(e[i]=n[i])}return e},K.apply(this,arguments)}function Z(e,t){e.prototype=Object.create(t.prototype),e.prototype.constructor=e,Q(e,t)}function Q(e,t){return Q=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},Q(e,t)}function J(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function $(e,t){if(e){if("string"==typeof e)return ee(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?ee(e,t):void 0}}function ee(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,i=new Array(t);n<t;n++)i[n]=e[n];return i}function te(e,t){var n="undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(n)return(n=n.call(e)).next.bind(n);if(Array.isArray(e)||(n=$(e))||t&&e&&"number"==typeof e.length){n&&(e=n);var i=0;return function(){return i>=e.length?{done:!0}:{done:!1,value:e[i++]}}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function ne(e,t){if("object"!=typeof e||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var i=n.call(e,t||"default");if("object"!=typeof i)return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===t?String:Number)(e)}function ie(e){var t=ne(e,"string");return"symbol"==typeof t?t:String(t)}var ae=function(){function e(){}return e.set=function(e,t){},e.get=function(t){return e._traceChannels.has(t)},e}();ae._traceChannels=new Set,ae.stack=!1;var se=function(){function e(e,t,n,i,a){void 0===a&&(a=!1),this.handler=void 0,this.name=void 0,this.callback=void 0,this.scope=void 0,this._once=void 0,this._removed=!1,this.handler=e,this.name=t,this.callback=n,this.scope=i,this._once=a}var t=e.prototype;return t.off=function(){this._removed||this.handler.off(this.name,this.callback,this.scope)},t.on=function(e,t,n){return void 0===n&&(n=this),this.handler._addCallback(e,t,n,!1)},t.once=function(e,t,n){return void 0===n&&(n=this),this.handler._addCallback(e,t,n,!0)},q(e,[{key:"removed",get:function(){return this._removed},set:function(e){e&&(this._removed=!0)}}]),e}(),re=function(){function e(){this._callbacks=new Map,this._callbackActive=new Map}var t=e.prototype;return t.initEventHandler=function(){this._callbacks=new Map,this._callbackActive=new Map},t._addCallback=function(e,t,n,i){if(this._callbacks.has(e)||this._callbacks.set(e,[]),this._callbackActive.has(e)){var a=this._callbackActive.get(e);a&&a===this._callbacks.get(e)&&this._callbackActive.set(e,a.slice())}var s=new se(this,e,t,n,i);return this._callbacks.get(e).push(s),s},t.on=function(e,t,n){return void 0===n&&(n=this),this._addCallback(e,t,n,!1)},t.once=function(e,t,n){return void 0===n&&(n=this),this._addCallback(e,t,n,!0)},t.off=function(e,t,n){if(e)this._callbackActive.has(e)&&this._callbackActive.get(e)===this._callbacks.get(e)&&this._callbackActive.set(e,this._callbackActive.get(e).slice());else for(var i,a=te(this._callbackActive);!(i=a()).done;){var s=i.value,r=s[0],o=s[1];this._callbacks.has(r)&&this._callbacks.get(r)===o&&this._callbackActive.set(r,o.slice())}if(e)if(t){var l=this._callbacks.get(e);if(!l)return this;for(var c=0;c<l.length;c++)l[c].callback===t&&(n&&l[c].scope!==n||(l[c].removed=!0,l.splice(c,1),c--));0===l.length&&this._callbacks.delete(e)}else{var h=this._callbacks.get(e);if(h){for(var p=0;p<h.length;p++)h[p].removed=!0;this._callbacks.delete(e)}}else{for(var d,u=te(this._callbacks.values());!(d=u()).done;)for(var m=d.value,f=0;f<m.length;f++)m[f].removed=!0;this._callbacks.clear()}return this},t.fire=function(e,t,n,i,a,s,r,o,l){if(!e)return this;var c,h=this._callbacks.get(e);if(!h)return this;this._callbackActive.has(e)?this._callbackActive.get(e)!==h&&(c=h.slice()):this._callbackActive.set(e,h);for(var p=0;(c||this._callbackActive.get(e))&&p<(c||this._callbackActive.get(e)).length;p++){var d=(c||this._callbackActive.get(e))[p];if(d.callback&&(d.callback.call(d.scope,t,n,i,a,s,r,o,l),d._once)){var u=this._callbacks.get(e),m=u?u.indexOf(d):-1;if(-1!==m){this._callbackActive.get(e)===u&&this._callbackActive.set(e,this._callbackActive.get(e).slice());var f=this._callbacks.get(e);if(!f)continue;f[m].removed=!0,f.splice(m,1),0===f.length&&this._callbacks.delete(e)}}}return c||this._callbackActive.delete(e),this},t.hasEvent=function(e){var t;return!(null==(t=this._callbacks.get(e))||!t.length)},e}(),oe={attach:function(e){var t=oe;return e._addCallback=t._addCallback,e.on=t.on,e.off=t.off,e.fire=t.fire,e.once=t.once,e.hasEvent=t.hasEvent,re.prototype.initEventHandler.call(e),e},_addCallback:re.prototype._addCallback,on:re.prototype.on,off:re.prototype.off,fire:re.prototype.fire,once:re.prototype.once,hasEvent:re.prototype.hasEvent},le={create:function(){return"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,(function(e){var t=16*Math.random()|0;return("x"===e?t:3&t|8).toString(16)}))}},ce={delimiter:"/",join:function(){for(var e=arguments.length,t=arguments[0],n=0;n<e-1;++n){var i=arguments[n],a=arguments[n+1];a[0]!==ce.delimiter?i&&a&&i[i.length-1]!==ce.delimiter&&a[0]!==ce.delimiter?t+=ce.delimiter+a:t+=a:t=a}return t},normalize:function(e){for(var t=e.startsWith(ce.delimiter),n=e.endsWith(ce.delimiter),i=e.split("/"),a="",s=[],r=0;r<i.length;r++)""!==i[r]&&"."!==i[r]&&(".."===i[r]&&s.length>0?s=s.slice(0,s.length-2):(r>0&&s.push(ce.delimiter),s.push(i[r])));return a=s.join(""),t||a[0]!==ce.delimiter||(a=a.slice(1)),n&&a[a.length-1]!==ce.delimiter&&(a+=ce.delimiter),a},split:function(e){var t=e.lastIndexOf(ce.delimiter);return-1!==t?[e.substring(0,t),e.substring(t+1)]:["",e]},getBasename:function(e){return ce.split(e)[1]},getDirectory:function(e){return ce.split(e)[0]},getExtension:function(e){var t=e.split("?")[0].split(".").pop();return t!==e?"."+t:""},isRelativePath:function(e){return"/"!==e.charAt(0)&&null===e.match(/:\/\//)},extractPath:function(e){var t="",n=e.split("/"),i=0;if(n.length>1)if(ce.isRelativePath(e))if("."===n[0])for(i=0;i<n.length-1;++i)t+=0===i?n[i]:"/"+n[i];else if(".."===n[0])for(i=0;i<n.length-1;++i)t+=0===i?n[i]:"/"+n[i];else for(t=".",i=0;i<n.length-1;++i)t+="/"+n[i];else for(i=0;i<n.length-1;++i)t+=0===i?n[i]:"/"+n[i];return t}},he=function(){var e=!1;try{var t=Object.defineProperty({},"passive",{get:function(){return e=!0,!1}});window.addEventListener("testpassive",null,t),window.removeEventListener("testpassive",null,t)}catch(e){}return e},pe="undefined"!=typeof navigator?navigator.userAgent:"",de="undefined"!=typeof window?"browser":"node",ue=/android/i.test(pe)?"android":/ip([ao]d|hone)/i.test(pe)?"ios":/windows/i.test(pe)?"windows":/mac os/i.test(pe)?"osx":/linux/i.test(pe)?"linux":/cros/i.test(pe)?"cros":null,me="browser"!==de?null:/(Chrome\/|Chromium\/|Edg.*\/)/.test(pe)?"chrome":/Safari\//.test(pe)?"safari":/Firefox\//.test(pe)?"firefox":"other",fe=/xbox/i.test(pe),ge="browser"===de&&("ontouchstart"in window||"maxTouchPoints"in navigator&&navigator.maxTouchPoints>0),ve=!("browser"!==de||!navigator.getGamepads&&!navigator.webkitGetGamepads),ye="undefined"!=typeof Worker,_e=he(),we={environment:de,global:"browser"===de?window:e,browser:"browser"===de,desktop:["windows","osx","linux","cros"].includes(ue),mobile:["android","ios"].includes(ue),ios:"ios"===ue,android:"android"===ue,xbox:fe,gamepads:ve,touch:ge,workers:ye,passiveEvents:_e,browserName:me},be="abcdefghijklmnopqrstuvwxyz",xe="ABCDEFGHIJKLMNOPQRSTUVWXYZ",Ce=55296,Se=56319,Ee=56320,Te=57343,Ae=8205,Le=127462,Me=127487,Pe=127995,Oe=127999,Ie=8400,Re=8447,De=65024,ke=65039;function Fe(e,t){void 0===t&&(t=0);var n=e.length;if(t<0||t>=n)return null;var i=e.charCodeAt(t);if(n>1&&i>=Ce&&i<=Se){var a=e.charCodeAt(t+1);if(a>=Ee&&a<=Te)return{code:1024*(i-Ce)+a-Ee+65536,long:!0}}return{code:i,long:!1}}function Be(e,t,n){if(!e)return!1;var i=Fe(e);if(i){var a=i.code;return a>=t&&a<=n}return!1}function Ne(e,t){if(t===e.length-1)return 1;if(Be(e[t],Ce,Se)){var n=e.substring(t,t+2),i=e.substring(t+2,t+4);return Be(i,Pe,Oe)||Be(n,Le,Me)&&Be(i,Le,Me)?4:Be(i,De,ke)?3:2}return Be(e[t+1],De,ke)?2:1}var Ue={ASCII_LOWERCASE:be,ASCII_UPPERCASE:xe,ASCII_LETTERS:be+xe,format:function(e){for(var t=0;t<(arguments.length<=1?0:arguments.length-1);t++)e=e.replace("{"+t+"}",t+1<1||arguments.length<=t+1?void 0:arguments[t+1]);return e},getCodePoint:function(e,t){var n=Fe(e,t);return n&&n.code},getCodePoints:function(e){if("string"!=typeof e)throw new TypeError("Not a string");for(var t,n=0,i=[];t=Fe(e,n);)i.push(t.code),n+=t.long?2:1;return i},getSymbols:function(e){if("string"!=typeof e)throw new TypeError("Not a string");for(var t,n=0,i=e.length,a=[],s=0;n<i;)if(Be(t=e[n+(s+=Ne(e,n+s))],Ie,Re)&&(t=e[n+s++]),Be(t,De,ke)&&(t=e[n+s++]),t&&t.charCodeAt(0)===Ae)t=e[n+s++];else{var r=e.substring(n,n+s);a.push(r),n+=s,s=0}return a},fromCodePoint:function(){for(var e,t,n,i=[],a=0;a<arguments.length;++a)t=(e=Number(arguments[a]))-65536,n=e>65535?[55296+(t>>10),t%1024+56320]:[e],i.push(String.fromCharCode.apply(null,n));return i.join("")}},ze=function(){function e(){this._list=[],this._index={}}var t=e.prototype;return t.push=function(e,t){if(this._index[e])throw Error("Key already in index "+e);var n=this._list.push(t)-1;this._index[e]=n},t.has=function(e){return void 0!==this._index[e]},t.get=function(e){var t=this._index[e];return void 0!==t?this._list[t]:null},t.remove=function(e){var t=this._index[e];if(void 0!==t){for(e in this._list.splice(t,1),delete this._index[e],this._index){var n=this._index[e];n>t&&(this._index[e]=n-1)}return!0}return!1},t.list=function(){return this._list},t.clear=function(){for(var e in this._list.length=0,this._index)delete this._index[e]},e}(),Ve=function(e){var t={},n=t;return function(){return n===t&&(n=e()),n}},He=function(){function e(){}return e.loadScript=function(e,t){var n=document.createElement("script");n.setAttribute("src",e),n.onload=function(){t(null)},n.onerror=function(){t("Failed to load script='"+e+"'")},document.body.appendChild(n)},e.loadWasm=function(t,n,i){var a=e.wasmSupported()&&n.glueUrl&&n.wasmUrl?n.glueUrl:n.fallbackUrl;a?e.loadScript(a,(function(e){if(e)i(e,null);else{var a=window[t];window[t]=void 0,a({locateFile:function(){return n.wasmUrl},onAbort:function(){i("wasm module aborted.")}}).then((function(e){i(null,e)}))}})):i("No supported wasm modules found.",null)},e.getModule=function(t){return e.modules.hasOwnProperty(t)||(e.modules[t]={config:null,initializing:!1,instance:null,callbacks:[]}),e.modules[t]},e.initialize=function(t,n){if(!n.initializing){var i=n.config;(i.glueUrl||i.wasmUrl||i.fallbackUrl)&&(n.initializing=!0,e.loadWasm(t,i,(function(e,a){e?i.errorHandler?i.errorHandler(e):console.error("failed to initialize module="+t+" error="+e):(n.instance=a,n.callbacks.forEach((function(e){e(a)})))})))}},e}();He.modules={},He.wasmSupported=Ve((function(){try{if("object"==typeof WebAssembly&&"function"==typeof WebAssembly.instantiate){var e=new WebAssembly.Module(Uint8Array.of(0,97,115,109,1,0,0,0));if(e instanceof WebAssembly.Module)return new WebAssembly.Instance(e)instanceof WebAssembly.Instance}}catch(e){}return!1}));var Ge=function(){function e(){}return e.setConfig=function(e,t){var n=He.getModule(e);n.config=t,n.callbacks.length>0&&He.initialize(e,n)},e.getConfig=function(e){var t;return null==(t=He.modules)||null==(t=t[e])?void 0:t.config},e.getInstance=function(e,t){var n=He.getModule(e);n.instance?t(n.instance):(n.callbacks.push(t),n.config&&He.initialize(e,n))},e}(),We=function(){function e(e){this.arraybuffer=e,this.dataView=new DataView(e),this.offset=0,this.stack=[]}var t=e.prototype;return t.reset=function(e){void 0===e&&(e=0),this.offset=e},t.skip=function(e){this.offset+=e},t.align=function(e){this.offset=this.offset+e-1&~(e-1)},t._inc=function(e){return this.offset+=e,this.offset-e},t.readChar=function(){return String.fromCharCode(this.dataView.getUint8(this.offset++))},t.readChars=function(e){for(var t="",n=0;n<e;++n)t+=this.readChar();return t},t.readU8=function(){return this.dataView.getUint8(this.offset++)},t.readU16=function(){return this.dataView.getUint16(this._inc(2),!0)},t.readU32=function(){return this.dataView.getUint32(this._inc(4),!0)},t.readU64=function(){return this.readU32()+Math.pow(2,32)*this.readU32()},t.readU32be=function(){return this.dataView.getUint32(this._inc(4),!1)},t.readArray=function(e){for(var t=0;t<e.length;++t)e[t]=this.readU8()},t.readLine=function(){for(var e=this.dataView,t="";!(this.offset>=e.byteLength);){var n=String.fromCharCode(this.readU8());if("\n"===n)break;t+=n}return t},q(e,[{key:"remainingBytes",get:function(){return this.dataView.byteLength-this.offset}}]),e}(),je=function(){function e(e){this.items=[],this.length=0,this.loopIndex=-1,this._sortBy=void 0,this._sortHandler=void 0,this._sortBy=e.sortBy,this._sortHandler=this._doSort.bind(this)}var t=e.prototype;return t._binarySearch=function(e){for(var t,n,i=0,a=this.items.length-1,s=e[this._sortBy];i<=a;)t=Math.floor((i+a)/2),(n=this.items[t][this._sortBy])<=s?i=t+1:n>s&&(a=t-1);return i},t._doSort=function(e,t){var n=this._sortBy;return e[n]-t[n]},t.insert=function(e){var t=this._binarySearch(e);this.items.splice(t,0,e),this.length++,this.loopIndex>=t&&this.loopIndex++},t.append=function(e){this.items.push(e),this.length++},t.remove=function(e){var t=this.items.indexOf(e);t<0||(this.items.splice(t,1),this.length--,this.loopIndex>=t&&this.loopIndex--)},t.sort=function(){var e=this.loopIndex>=0?this.items[this.loopIndex]:null;this.items.sort(this._sortHandler),null!==e&&(this.loopIndex=this.items.indexOf(e))},e}(),Xe=function(e){function t(t){var n;return(n=e.call(this)||this)._index={},n._list=[],n._parent=t,n}Z(t,e);var n=t.prototype;return n.add=function(){var e=!1,t=this._processArguments(arguments,!0);if(!t.length)return e;for(var n=0;n<t.length;n++)this._index[t[n]]||(e=!0,this._index[t[n]]=!0,this._list.push(t[n]),this.fire("add",t[n],this._parent));return e&&this.fire("change",this._parent),e},n.remove=function(){var e=!1;if(!this._list.length)return e;var t=this._processArguments(arguments,!0);if(!t.length)return e;for(var n=0;n<t.length;n++)this._index[t[n]]&&(e=!0,delete this._index[t[n]],this._list.splice(this._list.indexOf(t[n]),1),this.fire("remove",t[n],this._parent));return e&&this.fire("change",this._parent),e},n.clear=function(){if(this._list.length){var e=this._list.slice(0);this._list=[],this._index={};for(var t=0;t<e.length;t++)this.fire("remove",e[t],this._parent);this.fire("change",this._parent)}},n.has=function(){return!!this._list.length&&this._has(this._processArguments(arguments))},n._has=function(e){if(!this._list.length||!e.length)return!1;for(var t=0;t<e.length;t++)if(1===e[t].length){if(this._index[e[t][0]])return!0}else{for(var n=!0,i=0;i<e[t].length;i++)if(!this._index[e[t][i]]){n=!1;break}if(n)return!0}return!1},n.list=function(){return this._list.slice(0)},n._processArguments=function(e,t){var n=[],i=[];if(!e||!e.length)return n;for(var a=0;a<e.length;a++)if(e[a]instanceof Array){t||(i=[]);for(var s=0;s<e[a].length;s++)"string"==typeof e[a][s]&&(t?n.push(e[a][s]):i.push(e[a][s]));!t&&i.length&&n.push(i)}else"string"==typeof e[a]&&(t?n.push(e[a]):n.push([e[a]]));return n},q(t,[{key:"size",get:function(){return this._list.length}}]),t}(re),Ye="undefined"!=typeof window&&window.performance&&window.performance.now?performance.now.bind(performance):Date.now;function qe(e){var t="";if((e.authority||e.scheme)&&(e.host||e.hostpath))throw new Error("Can't have 'scheme' or 'authority' and 'host' or 'hostpath' option");if(e.host&&e.hostpath)throw new Error("Can't have 'host' and 'hostpath' option");if(e.path&&e.hostpath)throw new Error("Can't have 'path' and 'hostpath' option");return e.scheme&&(t+=e.scheme+":"),e.authority&&(t+="//"+e.authority),e.host&&(t+=e.host),e.path&&(t+=e.path),e.hostpath&&(t+=e.hostpath),e.query&&(t+="?"+e.query),e.fragment&&(t+="#"+e.fragment),t}var Ke,Ze=/^(([^:\/?#]+):)?(\/\/([^\/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?/,Qe=function(){function e(e){this.scheme=void 0,this.authority=void 0,this.path=void 0,this.query=void 0,this.fragment=void 0;var t=e.match(Ze);this.scheme=t[2],this.authority=t[4],this.path=t[5],this.query=t[7],this.fragment=t[9]}var t=e.prototype;return t.toString=function(){var e="";return this.scheme&&(e+=this.scheme+":"),this.authority&&(e+="//"+this.authority),e+=this.path,this.query&&(e+="?"+this.query),this.fragment&&(e+="#"+this.fragment),e},t.getQuery=function(){var e={};if(this.query)for(var t,n=te(decodeURIComponent(this.query).split("&"));!(t=n()).done;){var i=t.value.split("=");e[i[0]]=i[1]}return e},t.setQuery=function(e){var t="";for(var n in e)e.hasOwnProperty(n)&&(""!==t&&(t+="&"),t+=encodeURIComponent(n)+"="+encodeURIComponent(e[n]));this.query=t},e}(),Je=0,$e=1,et=2,tt=3,nt=4,it=5,at={DEG_TO_RAD:Math.PI/180,RAD_TO_DEG:180/Math.PI,clamp:function(e,t,n){return e>=n?n:e<=t?t:e},intToBytes24:function(e){return[e>>16&255,e>>8&255,255&e]},intToBytes32:function(e){return[e>>24&255,e>>16&255,e>>8&255,255&e]},bytesToInt24:function(e,t,n){return e.length&&(n=e[2],t=e[1],e=e[0]),e<<16|t<<8|n},bytesToInt32:function(e,t,n,i){return e.length&&(i=e[3],n=e[2],t=e[1],e=e[0]),(e<<24|t<<16|n<<8|i)>>>0},lerp:function(e,t,n){return e+(t-e)*at.clamp(n,0,1)},lerpAngle:function(e,t,n){return t-e>180&&(t-=360),t-e<-180&&(t+=360),at.lerp(e,t,at.clamp(n,0,1))},powerOfTwo:function(e){return 0!==e&&!(e&e-1)},nextPowerOfTwo:function(e){return e--,e|=e>>1,e|=e>>2,e|=e>>4,e|=e>>8,e|=e>>16,++e},nearestPowerOfTwo:function(e){return Math.pow(2,Math.round(Math.log(e)/Math.log(2)))},random:function(e,t){var n=t-e;return Math.random()*n+e},smoothstep:function(e,t,n){return n<=e?0:n>=t?1:(n=(n-e)/(t-e))*n*(3-2*n)},smootherstep:function(e,t,n){return n<=e?0:n>=t?1:(n=(n-e)/(t-e))*n*n*(n*(6*n-15)+10)},roundUp:function(e,t){return 0===t?e:Math.ceil(e/t)*t},between:function(e,t,n,i){var a=Math.min(t,n),s=Math.max(t,n);return i?e>=a&&e<=s:e>a&&e<s}},st=function(){function e(e,t,n,i){void 0===e&&(e=0),void 0===t&&(t=0),void 0===n&&(n=0),void 0===i&&(i=1),this.r=void 0,this.g=void 0,this.b=void 0,this.a=void 0;var a=e.length;3===a||4===a?(this.r=e[0],this.g=e[1],this.b=e[2],this.a=void 0!==e[3]?e[3]:1):(this.r=e,this.g=t,this.b=n,this.a=i)}var t=e.prototype;return t.clone=function(){return new(0,this.constructor)(this.r,this.g,this.b,this.a)},t.copy=function(e){return this.r=e.r,this.g=e.g,this.b=e.b,this.a=e.a,this},t.equals=function(e){return this.r===e.r&&this.g===e.g&&this.b===e.b&&this.a===e.a},t.set=function(e,t,n,i){return void 0===i&&(i=1),this.r=e,this.g=t,this.b=n,this.a=i,this},t.lerp=function(e,t,n){return this.r=e.r+n*(t.r-e.r),this.g=e.g+n*(t.g-e.g),this.b=e.b+n*(t.b-e.b),this.a=e.a+n*(t.a-e.a),this},t.fromString=function(e){var t,n=parseInt(e.replace("#","0x"),16);return e.length>7?t=at.intToBytes32(n):(t=at.intToBytes24(n))[3]=255,this.set(t[0]/255,t[1]/255,t[2]/255,t[3]/255),this},t.toString=function(e){var t="#"+((1<<24)+(Math.round(255*this.r)<<16)+(Math.round(255*this.g)<<8)+Math.round(255*this.b)).toString(16).slice(1);if(!0===e){var n=Math.round(255*this.a).toString(16);this.a<16/255?t+="0"+n:t+=n}return t},e}();Ke=st,st.BLACK=Object.freeze(new Ke(0,0,0,1)),st.BLUE=Object.freeze(new Ke(0,0,1,1)),st.CYAN=Object.freeze(new Ke(0,1,1,1)),st.GRAY=Object.freeze(new Ke(.5,.5,.5,1)),st.GREEN=Object.freeze(new Ke(0,1,0,1)),st.MAGENTA=Object.freeze(new Ke(1,0,1,1)),st.RED=Object.freeze(new Ke(1,0,0,1)),st.WHITE=Object.freeze(new Ke(1,1,1,1)),st.YELLOW=Object.freeze(new Ke(1,1,0,1));var rt,ot,lt=function(){function e(e,t){void 0===t&&(t=0),this._curve=void 0,this._left=-1/0,this._right=1/0,this._recip=0,this._p0=0,this._p1=0,this._m0=0,this._m1=0,this._curve=e,this._reset(t)}var t=e.prototype;return t.evaluate=function(e,t){var n;void 0===t&&(t=!1),(t||e<this._left||e>=this._right)&&this._reset(e);var i=this._curve.type;if(i===it)n=this._p0;else{var a=0===this._recip?0:(e-this._left)*this._recip;n=i===Je?at.lerp(this._p0,this._p1,a):i===$e?at.lerp(this._p0,this._p1,a*a*(3-2*a)):this._evaluateHermite(this._p0,this._p1,this._m0,this._m1,a)}return n},t._reset=function(e){var t=this._curve.keys,n=t.length;if(n)if(e<t[0][0])this._left=-1/0,this._right=t[0][0],this._recip=0,this._p0=this._p1=t[0][1],this._m0=this._m1=0;else if(e>=t[n-1][0])this._left=t[n-1][0],this._right=1/0,this._recip=0,this._p0=this._p1=t[n-1][1],this._m0=this._m1=0;else{for(var i=0;e>=t[i+1][0];)i++;this._left=t[i][0],this._right=t[i+1][0];var a=1/(this._right-this._left);this._recip=isFinite(a)?a:0,this._p0=t[i][1],this._p1=t[i+1][1],this._isHermite()&&this._calcTangents(t,i)}else this._left=-1/0,this._right=1/0,this._recip=0,this._p0=this._p1=this._m0=this._m1=0},t._isHermite=function(){return this._curve.type===et||this._curve.type===tt||this._curve.type===nt},t._calcTangents=function(e,t){var n,i,a=e[t],s=e[t+1];if(n=0===t?[e[0][0]+(e[0][0]-e[1][0]),e[0][1]+(e[0][1]-e[1][1])]:e[t-1],i=t===e.length-2?[e[t+1][0]+(e[t+1][0]-e[t][0]),e[t+1][1]+(e[t+1][1]-e[t][1])]:e[t+2],this._curve.type===nt){var r=2*(s[0]-a[0])/(s[0]-n[0]),o=2*(s[0]-a[0])/(i[0]-a[0]);this._m0=this._curve.tension*(isFinite(r)?r:0)*(s[1]-n[1]),this._m1=this._curve.tension*(isFinite(o)?o:0)*(i[1]-a[1])}else{var l=(s[0]-a[0])/(a[0]-n[0]),c=(s[0]-a[0])/(i[0]-s[0]),h=a[1]+(n[1]-a[1])*(isFinite(l)?l:0),p=s[1]+(i[1]-s[1])*(isFinite(c)?c:0),d=this._curve.type===et?.5:this._curve.tension;this._m0=d*(s[1]-h),this._m1=d*(p-a[1])}},t._evaluateHermite=function(e,t,n,i,a){var s=a*a,r=a+a,o=1-a,l=o*o;return e*((1+r)*l)+n*(a*l)+t*(s*(3-r))+i*(s*(a-1))},e}(),ct=function(){function e(e){if(this.keys=[],this.type=$e,this.tension=.5,this._eval=new lt(this),e)for(var t=0;t<e.length-1;t+=2)this.keys.push([e[t],e[t+1]]);this.sort()}var t=e.prototype;return t.add=function(e,t){for(var n=this.keys,i=n.length,a=0;a<i&&!(n[a][0]>e);a++);var s=[e,t];return this.keys.splice(a,0,s),s},t.get=function(e){return this.keys[e]},t.sort=function(){this.keys.sort((function(e,t){return e[0]-t[0]}))},t.value=function(e){return this._eval.evaluate(e,!0)},t.closest=function(e){for(var t=this.keys,n=t.length,i=2,a=null,s=0;s<n;s++){var r=Math.abs(e-t[s][0]);if(!(i>=r))break;i=r,a=t[s]}return a},t.clone=function(){var e=new this.constructor;return e.keys=G(e.keys,this.keys),e.type=this.type,e.tension=this.tension,e},t.quantize=function(e){e=Math.max(e,2);var t=new Float32Array(e),n=1/(e-1);t[0]=this._eval.evaluate(0,!0);for(var i=1;i<e;i++)t[i]=this._eval.evaluate(n*i);return t},t.quantizeClamped=function(e,t,n){for(var i=this.quantize(e),a=0;a<i.length;++a)i[a]=Math.min(n,Math.max(t,i[a]));return i},q(e,[{key:"length",get:function(){return this.keys.length}}]),e}(),ht=function(){function e(){if(this.curves=[],this._type=$e,arguments.length>1)for(var e=0;e<arguments.length;e++)this.curves.push(new ct(arguments[e]));else if(0===arguments.length)this.curves.push(new ct);else{var t=arguments[0];if("number"==typeof t)for(var n=0;n<t;n++)this.curves.push(new ct);else for(var i=0;i<t.length;i++)this.curves.push(new ct(t[i]))}}var t=e.prototype;return t.get=function(e){return this.curves[e]},t.value=function(e,t){void 0===t&&(t=[]);var n=this.curves.length;t.length=n;for(var i=0;i<n;i++)t[i]=this.curves[i].value(e);return t},t.clone=function(){var e=new this.constructor;e.curves=[];for(var t=0;t<this.curves.length;t++)e.curves.push(this.curves[t].clone());return e._type=this._type,e},t.quantize=function(e){e=Math.max(e,2);for(var t=this.curves.length,n=new Float32Array(e*t),i=1/(e-1),a=0;a<t;a++)for(var s=new lt(this.curves[a]),r=0;r<e;r++)n[r*t+a]=s.evaluate(i*r);return n},t.quantizeClamped=function(e,t,n){for(var i=this.quantize(e),a=0;a<i.length;++a)i[a]=Math.min(n,Math.max(t,i[a]));return i},q(e,[{key:"length",get:function(){return this.curves.length}},{key:"type",get:function(){return this._type},set:function(e){this._type=e;for(var t=0;t<this.curves.length;t++)this.curves[t].type=e}}]),e}(),pt=function(){function e(e,t,n){void 0===e&&(e=0),void 0===t&&(t=0),void 0===n&&(n=0),this.x=void 0,this.y=void 0,this.z=void 0,3===e.length?(this.x=e[0],this.y=e[1],this.z=e[2]):(this.x=e,this.y=t,this.z=n)}var t=e.prototype;return t.add=function(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this},t.add2=function(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this},t.addScalar=function(e){return this.x+=e,this.y+=e,this.z+=e,this},t.addScaled=function(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this},t.clone=function(){return new(0,this.constructor)(this.x,this.y,this.z)},t.copy=function(e){return this.x=e.x,this.y=e.y,this.z=e.z,this},t.cross=function(e,t){var n=e.x,i=e.y,a=e.z,s=t.x,r=t.y,o=t.z;return this.x=i*o-r*a,this.y=a*s-o*n,this.z=n*r-s*i,this},t.distance=function(e){var t=this.x-e.x,n=this.y-e.y,i=this.z-e.z;return Math.sqrt(t*t+n*n+i*i)},t.div=function(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this},t.div2=function(e,t){return this.x=e.x/t.x,this.y=e.y/t.y,this.z=e.z/t.z,this},t.divScalar=function(e){return this.x/=e,this.y/=e,this.z/=e,this},t.dot=function(e){return this.x*e.x+this.y*e.y+this.z*e.z},t.equals=function(e){return this.x===e.x&&this.y===e.y&&this.z===e.z},t.equalsApprox=function(e,t){return void 0===t&&(t=1e-6),Math.abs(this.x-e.x)<t&&Math.abs(this.y-e.y)<t&&Math.abs(this.z-e.z)<t},t.length=function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)},t.lengthSq=function(){return this.x*this.x+this.y*this.y+this.z*this.z},t.lerp=function(e,t,n){return this.x=e.x+n*(t.x-e.x),this.y=e.y+n*(t.y-e.y),this.z=e.z+n*(t.z-e.z),this},t.mul=function(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this},t.mul2=function(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this},t.mulScalar=function(e){return this.x*=e,this.y*=e,this.z*=e,this},t.normalize=function(e){void 0===e&&(e=this);var t=e.x*e.x+e.y*e.y+e.z*e.z;if(t>0){var n=1/Math.sqrt(t);this.x=e.x*n,this.y=e.y*n,this.z=e.z*n}return this},t.floor=function(e){return void 0===e&&(e=this),this.x=Math.floor(e.x),this.y=Math.floor(e.y),this.z=Math.floor(e.z),this},t.ceil=function(e){return void 0===e&&(e=this),this.x=Math.ceil(e.x),this.y=Math.ceil(e.y),this.z=Math.ceil(e.z),this},t.round=function(e){return void 0===e&&(e=this),this.x=Math.round(e.x),this.y=Math.round(e.y),this.z=Math.round(e.z),this},t.min=function(e){return e.x<this.x&&(this.x=e.x),e.y<this.y&&(this.y=e.y),e.z<this.z&&(this.z=e.z),this},t.max=function(e){return e.x>this.x&&(this.x=e.x),e.y>this.y&&(this.y=e.y),e.z>this.z&&(this.z=e.z),this},t.project=function(e){var t=(this.x*e.x+this.y*e.y+this.z*e.z)/(e.x*e.x+e.y*e.y+e.z*e.z);return this.x=e.x*t,this.y=e.y*t,this.z=e.z*t,this},t.set=function(e,t,n){return this.x=e,this.y=t,this.z=n,this},t.sub=function(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this},t.sub2=function(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this},t.subScalar=function(e){return this.x-=e,this.y-=e,this.z-=e,this},t.toString=function(){return"["+this.x+", "+this.y+", "+this.z+"]"},e}();rt=pt,pt.ZERO=Object.freeze(new rt(0,0,0)),pt.ONE=Object.freeze(new rt(1,1,1)),pt.UP=Object.freeze(new rt(0,1,0)),pt.DOWN=Object.freeze(new rt(0,-1,0)),pt.RIGHT=Object.freeze(new rt(1,0,0)),pt.LEFT=Object.freeze(new rt(-1,0,0)),pt.FORWARD=Object.freeze(new rt(0,0,-1)),pt.BACK=Object.freeze(new rt(0,0,1));var dt,ut=function(){function e(){this.data=new Float32Array(9),this.data[0]=this.data[4]=this.data[8]=1}var t=e.prototype;return t.clone=function(){return(new(0,this.constructor)).copy(this)},t.copy=function(e){var t=e.data,n=this.data;return n[0]=t[0],n[1]=t[1],n[2]=t[2],n[3]=t[3],n[4]=t[4],n[5]=t[5],n[6]=t[6],n[7]=t[7],n[8]=t[8],this},t.set=function(e){var t=this.data;return t[0]=e[0],t[1]=e[1],t[2]=e[2],t[3]=e[3],t[4]=e[4],t[5]=e[5],t[6]=e[6],t[7]=e[7],t[8]=e[8],this},t.equals=function(e){var t=this.data,n=e.data;return t[0]===n[0]&&t[1]===n[1]&&t[2]===n[2]&&t[3]===n[3]&&t[4]===n[4]&&t[5]===n[5]&&t[6]===n[6]&&t[7]===n[7]&&t[8]===n[8]},t.isIdentity=function(){var e=this.data;return 1===e[0]&&0===e[1]&&0===e[2]&&0===e[3]&&1===e[4]&&0===e[5]&&0===e[6]&&0===e[7]&&1===e[8]},t.setIdentity=function(){var e=this.data;return e[0]=1,e[1]=0,e[2]=0,e[3]=0,e[4]=1,e[5]=0,e[6]=0,e[7]=0,e[8]=1,this},t.toString=function(){return"["+this.data.join(", ")+"]"},t.transpose=function(e){void 0===e&&(e=this);var t,n=e.data,i=this.data;return n===i?(t=n[1],i[1]=n[3],i[3]=t,t=n[2],i[2]=n[6],i[6]=t,t=n[5],i[5]=n[7],i[7]=t):(i[0]=n[0],i[1]=n[3],i[2]=n[6],i[3]=n[1],i[4]=n[4],i[5]=n[7],i[6]=n[2],i[7]=n[5],i[8]=n[8]),this},t.setFromMat4=function(e){var t=e.data,n=this.data;return n[0]=t[0],n[1]=t[1],n[2]=t[2],n[3]=t[4],n[4]=t[5],n[5]=t[6],n[6]=t[8],n[7]=t[9],n[8]=t[10],this},t.invertMat4=function(e){var t=e.data,n=t[0],i=t[1],a=t[2],s=t[4],r=t[5],o=t[6],l=t[8],c=t[9],h=t[10],p=h*r-o*c,d=-h*i+a*c,u=o*i-a*r,m=-h*s+o*l,f=h*n-a*l,g=-o*n+a*s,v=c*s-r*l,y=-c*n+i*l,_=r*n-i*s,w=n*p+i*m+a*v;if(0===w)this.setIdentity();else{var b=1/w,x=this.data;x[0]=p*b,x[1]=d*b,x[2]=u*b,x[3]=m*b,x[4]=f*b,x[5]=g*b,x[6]=v*b,x[7]=y*b,x[8]=_*b}return this},t.transformVector=function(e,t){void 0===t&&(t=new pt);var n=this.data,i=e.x,a=e.y,s=e.z;return t.x=i*n[0]+a*n[3]+s*n[6],t.y=i*n[1]+a*n[4]+s*n[7],t.z=i*n[2]+a*n[5]+s*n[8],t},e}();ot=ut,ut.IDENTITY=Object.freeze(new ot),ut.ZERO=Object.freeze((new ot).set([0,0,0,0,0,0,0,0,0]));var mt,ft=function(){function e(e,t){void 0===e&&(e=0),void 0===t&&(t=0),this.x=void 0,this.y=void 0,2===e.length?(this.x=e[0],this.y=e[1]):(this.x=e,this.y=t)}var t=e.prototype;return t.add=function(e){return this.x+=e.x,this.y+=e.y,this},t.add2=function(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this},t.addScalar=function(e){return this.x+=e,this.y+=e,this},t.addScaled=function(e,t){return this.x+=e.x*t,this.y+=e.y*t,this},t.clone=function(){return new(0,this.constructor)(this.x,this.y)},t.copy=function(e){return this.x=e.x,this.y=e.y,this},t.cross=function(e){return this.x*e.y-this.y*e.x},t.distance=function(e){var t=this.x-e.x,n=this.y-e.y;return Math.sqrt(t*t+n*n)},t.div=function(e){return this.x/=e.x,this.y/=e.y,this},t.div2=function(e,t){return this.x=e.x/t.x,this.y=e.y/t.y,this},t.divScalar=function(e){return this.x/=e,this.y/=e,this},t.dot=function(e){return this.x*e.x+this.y*e.y},t.equals=function(e){return this.x===e.x&&this.y===e.y},t.equalsApprox=function(e,t){return void 0===t&&(t=1e-6),Math.abs(this.x-e.x)<t&&Math.abs(this.y-e.y)<t},t.length=function(){return Math.sqrt(this.x*this.x+this.y*this.y)},t.lengthSq=function(){return this.x*this.x+this.y*this.y},t.lerp=function(e,t,n){return this.x=e.x+n*(t.x-e.x),this.y=e.y+n*(t.y-e.y),this},t.mul=function(e){return this.x*=e.x,this.y*=e.y,this},t.mul2=function(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this},t.mulScalar=function(e){return this.x*=e,this.y*=e,this},t.normalize=function(e){void 0===e&&(e=this);var t=e.x*e.x+e.y*e.y;if(t>0){var n=1/Math.sqrt(t);this.x=e.x*n,this.y=e.y*n}return this},t.rotate=function(e){var t=Math.atan2(this.x,this.y)+e*at.DEG_TO_RAD,n=Math.sqrt(this.x*this.x+this.y*this.y);return this.x=Math.sin(t)*n,this.y=Math.cos(t)*n,this},t.angle=function(){return Math.atan2(this.x,this.y)*at.RAD_TO_DEG},t.angleTo=function(e){return Math.atan2(this.x*e.y+this.y*e.x,this.x*e.x+this.y*e.y)*at.RAD_TO_DEG},t.floor=function(e){return void 0===e&&(e=this),this.x=Math.floor(e.x),this.y=Math.floor(e.y),this},t.ceil=function(e){return void 0===e&&(e=this),this.x=Math.ceil(e.x),this.y=Math.ceil(e.y),this},t.round=function(e){return void 0===e&&(e=this),this.x=Math.round(e.x),this.y=Math.round(e.y),this},t.min=function(e){return e.x<this.x&&(this.x=e.x),e.y<this.y&&(this.y=e.y),this},t.max=function(e){return e.x>this.x&&(this.x=e.x),e.y>this.y&&(this.y=e.y),this},t.set=function(e,t){return this.x=e,this.y=t,this},t.sub=function(e){return this.x-=e.x,this.y-=e.y,this},t.sub2=function(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this},t.subScalar=function(e){return this.x-=e,this.y-=e,this},t.toString=function(){return"["+this.x+", "+this.y+"]"},e.angleRad=function(e,t){return Math.atan2(e.x*t.y-e.y*t.x,e.x*t.x+e.y*t.y)},e}();dt=ft,ft.ZERO=Object.freeze(new dt(0,0)),ft.ONE=Object.freeze(new dt(1,1)),ft.UP=Object.freeze(new dt(0,1)),ft.DOWN=Object.freeze(new dt(0,-1)),ft.RIGHT=Object.freeze(new dt(1,0)),ft.LEFT=Object.freeze(new dt(-1,0));var gt,vt=function(){function e(e,t,n,i){void 0===e&&(e=0),void 0===t&&(t=0),void 0===n&&(n=0),void 0===i&&(i=0),this.x=void 0,this.y=void 0,this.z=void 0,this.w=void 0,4===e.length?(this.x=e[0],this.y=e[1],this.z=e[2],this.w=e[3]):(this.x=e,this.y=t,this.z=n,this.w=i)}var t=e.prototype;return t.add=function(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this},t.add2=function(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this},t.addScalar=function(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this},t.addScaled=function(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this.w+=e.w*t,this},t.clone=function(){return new(0,this.constructor)(this.x,this.y,this.z,this.w)},t.copy=function(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=e.w,this},t.div=function(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this.w/=e.w,this},t.div2=function(e,t){return this.x=e.x/t.x,this.y=e.y/t.y,this.z=e.z/t.z,this.w=e.w/t.w,this},t.divScalar=function(e){return this.x/=e,this.y/=e,this.z/=e,this.w/=e,this},t.dot=function(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w},t.equals=function(e){return this.x===e.x&&this.y===e.y&&this.z===e.z&&this.w===e.w},t.equalsApprox=function(e,t){return void 0===t&&(t=1e-6),Math.abs(this.x-e.x)<t&&Math.abs(this.y-e.y)<t&&Math.abs(this.z-e.z)<t&&Math.abs(this.w-e.w)<t},t.length=function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)},t.lengthSq=function(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w},t.lerp=function(e,t,n){return this.x=e.x+n*(t.x-e.x),this.y=e.y+n*(t.y-e.y),this.z=e.z+n*(t.z-e.z),this.w=e.w+n*(t.w-e.w),this},t.mul=function(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this.w*=e.w,this},t.mul2=function(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this.w=e.w*t.w,this},t.mulScalar=function(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this},t.normalize=function(e){void 0===e&&(e=this);var t=e.x*e.x+e.y*e.y+e.z*e.z+e.w*e.w;if(t>0){var n=1/Math.sqrt(t);this.x=e.x*n,this.y=e.y*n,this.z=e.z*n,this.w=e.w*n}return this},t.floor=function(e){return void 0===e&&(e=this),this.x=Math.floor(e.x),this.y=Math.floor(e.y),this.z=Math.floor(e.z),this.w=Math.floor(e.w),this},t.ceil=function(e){return void 0===e&&(e=this),this.x=Math.ceil(e.x),this.y=Math.ceil(e.y),this.z=Math.ceil(e.z),this.w=Math.ceil(e.w),this},t.round=function(e){return void 0===e&&(e=this),this.x=Math.round(e.x),this.y=Math.round(e.y),this.z=Math.round(e.z),this.w=Math.round(e.w),this},t.min=function(e){return e.x<this.x&&(this.x=e.x),e.y<this.y&&(this.y=e.y),e.z<this.z&&(this.z=e.z),e.w<this.w&&(this.w=e.w),this},t.max=function(e){return e.x>this.x&&(this.x=e.x),e.y>this.y&&(this.y=e.y),e.z>this.z&&(this.z=e.z),e.w>this.w&&(this.w=e.w),this},t.set=function(e,t,n,i){return this.x=e,this.y=t,this.z=n,this.w=i,this},t.sub=function(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this},t.sub2=function(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this},t.subScalar=function(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this},t.toString=function(){return"["+this.x+", "+this.y+", "+this.z+", "+this.w+"]"},e}();mt=vt,vt.ZERO=Object.freeze(new mt(0,0,0,0)),vt.ONE=Object.freeze(new mt(1,1,1,1));var yt,_t=new ft,wt=new pt,bt=new pt,xt=new pt,Ct=new pt,St=function(){function e(){this.data=new Float32Array(16),this.data[0]=this.data[5]=this.data[10]=this.data[15]=1}e._getPerspectiveHalfSize=function(e,t,n,i,a){a?(e.x=i*Math.tan(t*Math.PI/360),e.y=e.x/n):(e.y=i*Math.tan(t*Math.PI/360),e.x=e.y*n)};var t=e.prototype;return t.add2=function(e,t){var n=e.data,i=t.data,a=this.data;return a[0]=n[0]+i[0],a[1]=n[1]+i[1],a[2]=n[2]+i[2],a[3]=n[3]+i[3],a[4]=n[4]+i[4],a[5]=n[5]+i[5],a[6]=n[6]+i[6],a[7]=n[7]+i[7],a[8]=n[8]+i[8],a[9]=n[9]+i[9],a[10]=n[10]+i[10],a[11]=n[11]+i[11],a[12]=n[12]+i[12],a[13]=n[13]+i[13],a[14]=n[14]+i[14],a[15]=n[15]+i[15],this},t.add=function(e){return this.add2(this,e)},t.clone=function(){return(new(0,this.constructor)).copy(this)},t.copy=function(e){var t=e.data,n=this.data;return n[0]=t[0],n[1]=t[1],n[2]=t[2],n[3]=t[3],n[4]=t[4],n[5]=t[5],n[6]=t[6],n[7]=t[7],n[8]=t[8],n[9]=t[9],n[10]=t[10],n[11]=t[11],n[12]=t[12],n[13]=t[13],n[14]=t[14],n[15]=t[15],this},t.equals=function(e){var t=this.data,n=e.data;return t[0]===n[0]&&t[1]===n[1]&&t[2]===n[2]&&t[3]===n[3]&&t[4]===n[4]&&t[5]===n[5]&&t[6]===n[6]&&t[7]===n[7]&&t[8]===n[8]&&t[9]===n[9]&&t[10]===n[10]&&t[11]===n[11]&&t[12]===n[12]&&t[13]===n[13]&&t[14]===n[14]&&t[15]===n[15]},t.isIdentity=function(){var e=this.data;return 1===e[0]&&0===e[1]&&0===e[2]&&0===e[3]&&0===e[4]&&1===e[5]&&0===e[6]&&0===e[7]&&0===e[8]&&0===e[9]&&1===e[10]&&0===e[11]&&0===e[12]&&0===e[13]&&0===e[14]&&1===e[15]},t.mul2=function(e,t){var n,i,a,s,r=e.data,o=t.data,l=this.data,c=r[0],h=r[1],p=r[2],d=r[3],u=r[4],m=r[5],f=r[6],g=r[7],v=r[8],y=r[9],_=r[10],w=r[11],b=r[12],x=r[13],C=r[14],S=r[15];return n=o[0],i=o[1],a=o[2],s=o[3],l[0]=c*n+u*i+v*a+b*s,l[1]=h*n+m*i+y*a+x*s,l[2]=p*n+f*i+_*a+C*s,l[3]=d*n+g*i+w*a+S*s,n=o[4],i=o[5],a=o[6],s=o[7],l[4]=c*n+u*i+v*a+b*s,l[5]=h*n+m*i+y*a+x*s,l[6]=p*n+f*i+_*a+C*s,l[7]=d*n+g*i+w*a+S*s,n=o[8],i=o[9],a=o[10],s=o[11],l[8]=c*n+u*i+v*a+b*s,l[9]=h*n+m*i+y*a+x*s,l[10]=p*n+f*i+_*a+C*s,l[11]=d*n+g*i+w*a+S*s,n=o[12],i=o[13],a=o[14],s=o[15],l[12]=c*n+u*i+v*a+b*s,l[13]=h*n+m*i+y*a+x*s,l[14]=p*n+f*i+_*a+C*s,l[15]=d*n+g*i+w*a+S*s,this},t.mulAffine2=function(e,t){var n,i,a,s=e.data,r=t.data,o=this.data,l=s[0],c=s[1],h=s[2],p=s[4],d=s[5],u=s[6],m=s[8],f=s[9],g=s[10],v=s[12],y=s[13],_=s[14];return n=r[0],i=r[1],a=r[2],o[0]=l*n+p*i+m*a,o[1]=c*n+d*i+f*a,o[2]=h*n+u*i+g*a,o[3]=0,n=r[4],i=r[5],a=r[6],o[4]=l*n+p*i+m*a,o[5]=c*n+d*i+f*a,o[6]=h*n+u*i+g*a,o[7]=0,n=r[8],i=r[9],a=r[10],o[8]=l*n+p*i+m*a,o[9]=c*n+d*i+f*a,o[10]=h*n+u*i+g*a,o[11]=0,n=r[12],i=r[13],a=r[14],o[12]=l*n+p*i+m*a+v,o[13]=c*n+d*i+f*a+y,o[14]=h*n+u*i+g*a+_,o[15]=1,this},t.mul=function(e){return this.mul2(this,e)},t.transformPoint=function(e,t){void 0===t&&(t=new pt);var n=this.data,i=e.x,a=e.y,s=e.z;return t.x=i*n[0]+a*n[4]+s*n[8]+n[12],t.y=i*n[1]+a*n[5]+s*n[9]+n[13],t.z=i*n[2]+a*n[6]+s*n[10]+n[14],t},t.transformVector=function(e,t){void 0===t&&(t=new pt);var n=this.data,i=e.x,a=e.y,s=e.z;return t.x=i*n[0]+a*n[4]+s*n[8],t.y=i*n[1]+a*n[5]+s*n[9],t.z=i*n[2]+a*n[6]+s*n[10],t},t.transformVec4=function(e,t){void 0===t&&(t=new vt);var n=this.data,i=e.x,a=e.y,s=e.z,r=e.w;return t.x=i*n[0]+a*n[4]+s*n[8]+r*n[12],t.y=i*n[1]+a*n[5]+s*n[9]+r*n[13],t.z=i*n[2]+a*n[6]+s*n[10]+r*n[14],t.w=i*n[3]+a*n[7]+s*n[11]+r*n[15],t},t.setLookAt=function(e,t,n){xt.sub2(e,t).normalize(),bt.copy(n).normalize(),wt.cross(bt,xt).normalize(),bt.cross(xt,wt);var i=this.data;return i[0]=wt.x,i[1]=wt.y,i[2]=wt.z,i[3]=0,i[4]=bt.x,i[5]=bt.y,i[6]=bt.z,i[7]=0,i[8]=xt.x,i[9]=xt.y,i[10]=xt.z,i[11]=0,i[12]=e.x,i[13]=e.y,i[14]=e.z,i[15]=1,this},t.setFrustum=function(e,t,n,i,a,s){var r=2*a,o=t-e,l=i-n,c=s-a,h=this.data;return h[0]=r/o,h[1]=0,h[2]=0,h[3]=0,h[4]=0,h[5]=r/l,h[6]=0,h[7]=0,h[8]=(t+e)/o,h[9]=(i+n)/l,h[10]=(-s-a)/c,h[11]=-1,h[12]=0,h[13]=0,h[14]=-r*s/c,h[15]=0,this},t.setPerspective=function(t,n,i,a,s){return e._getPerspectiveHalfSize(_t,t,n,i,s),this.setFrustum(-_t.x,_t.x,-_t.y,_t.y,i,a)},t.setOrtho=function(e,t,n,i,a,s){var r=this.data;return r[0]=2/(t-e),r[1]=0,r[2]=0,r[3]=0,r[4]=0,r[5]=2/(i-n),r[6]=0,r[7]=0,r[8]=0,r[9]=0,r[10]=-2/(s-a),r[11]=0,r[12]=-(t+e)/(t-e),r[13]=-(i+n)/(i-n),r[14]=-(s+a)/(s-a),r[15]=1,this},t.setFromAxisAngle=function(e,t){t*=at.DEG_TO_RAD;var n=e.x,i=e.y,a=e.z,s=Math.cos(t),r=Math.sin(t),o=1-s,l=o*n,c=o*i,h=this.data;return h[0]=l*n+s,h[1]=l*i+r*a,h[2]=l*a-r*i,h[3]=0,h[4]=l*i-r*a,h[5]=c*i+s,h[6]=c*a+r*n,h[7]=0,h[8]=l*a+r*i,h[9]=c*a-n*r,h[10]=o*a*a+s,h[11]=0,h[12]=0,h[13]=0,h[14]=0,h[15]=1,this},t.setTranslate=function(e,t,n){var i=this.data;return i[0]=1,i[1]=0,i[2]=0,i[3]=0,i[4]=0,i[5]=1,i[6]=0,i[7]=0,i[8]=0,i[9]=0,i[10]=1,i[11]=0,i[12]=e,i[13]=t,i[14]=n,i[15]=1,this},t.setScale=function(e,t,n){var i=this.data;return i[0]=e,i[1]=0,i[2]=0,i[3]=0,i[4]=0,i[5]=t,i[6]=0,i[7]=0,i[8]=0,i[9]=0,i[10]=n,i[11]=0,i[12]=0,i[13]=0,i[14]=0,i[15]=1,this},t.setViewport=function(e,t,n,i){var a=this.data;return a[0]=.5*n,a[1]=0,a[2]=0,a[3]=0,a[4]=0,a[5]=.5*i,a[6]=0,a[7]=0,a[8]=0,a[9]=0,a[10]=.5,a[11]=0,a[12]=e+.5*n,a[13]=t+.5*i,a[14]=.5,a[15]=1,this},t.setReflection=function(e,t){var n=e.x,i=e.y,a=e.z,s=this.data;return s[0]=1-2*n*n,s[1]=-2*n*i,s[2]=-2*n*a,s[3]=0,s[4]=-2*n*i,s[5]=1-2*i*i,s[6]=-2*i*a,s[7]=0,s[8]=-2*n*a,s[9]=-2*i*a,s[10]=1-2*a*a,s[11]=0,s[12]=-2*n*t,s[13]=-2*i*t,s[14]=-2*a*t,s[15]=1,this},t.invert=function(e){void 0===e&&(e=this);var t=e.data,n=t[0],i=t[1],a=t[2],s=t[3],r=t[4],o=t[5],l=t[6],c=t[7],h=t[8],p=t[9],d=t[10],u=t[11],m=t[12],f=t[13],g=t[14],v=t[15],y=n*o-i*r,_=n*l-a*r,w=n*c-s*r,b=i*l-a*o,x=i*c-s*o,C=a*c-s*l,S=h*f-p*m,E=h*g-d*m,T=h*v-u*m,A=p*g-d*f,L=p*v-u*f,M=d*v-u*g,P=y*M-_*L+w*A+b*T-x*E+C*S;if(0===P)this.setIdentity();else{var O=1/P,I=this.data;I[0]=(o*M-l*L+c*A)*O,I[1]=(-i*M+a*L-s*A)*O,I[2]=(f*C-g*x+v*b)*O,I[3]=(-p*C+d*x-u*b)*O,I[4]=(-r*M+l*T-c*E)*O,I[5]=(n*M-a*T+s*E)*O,I[6]=(-m*C+g*w-v*_)*O,I[7]=(h*C-d*w+u*_)*O,I[8]=(r*L-o*T+c*S)*O,I[9]=(-n*L+i*T-s*S)*O,I[10]=(m*x-f*w+v*y)*O,I[11]=(-h*x+p*w-u*y)*O,I[12]=(-r*A+o*E-l*S)*O,I[13]=(n*A-i*E+a*S)*O,I[14]=(-m*b+f*_-g*y)*O,I[15]=(h*b-p*_+d*y)*O}return this},t.set=function(e){var t=this.data;return t[0]=e[0],t[1]=e[1],t[2]=e[2],t[3]=e[3],t[4]=e[4],t[5]=e[5],t[6]=e[6],t[7]=e[7],t[8]=e[8],t[9]=e[9],t[10]=e[10],t[11]=e[11],t[12]=e[12],t[13]=e[13],t[14]=e[14],t[15]=e[15],this},t.setIdentity=function(){var e=this.data;return e[0]=1,e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[5]=1,e[6]=0,e[7]=0,e[8]=0,e[9]=0,e[10]=1,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this},t.setTRS=function(e,t,n){var i=t.x,a=t.y,s=t.z,r=t.w,o=n.x,l=n.y,c=n.z,h=i+i,p=a+a,d=s+s,u=i*h,m=i*p,f=i*d,g=a*p,v=a*d,y=s*d,_=r*h,w=r*p,b=r*d,x=this.data;return x[0]=(1-(g+y))*o,x[1]=(m+b)*o,x[2]=(f-w)*o,x[3]=0,x[4]=(m-b)*l,x[5]=(1-(u+y))*l,x[6]=(v+_)*l,x[7]=0,x[8]=(f+w)*c,x[9]=(v-_)*c,x[10]=(1-(u+g))*c,x[11]=0,x[12]=e.x,x[13]=e.y,x[14]=e.z,x[15]=1,this},t.transpose=function(e){void 0===e&&(e=this);var t,n=e.data,i=this.data;return n===i?(t=n[1],i[1]=n[4],i[4]=t,t=n[2],i[2]=n[8],i[8]=t,t=n[3],i[3]=n[12],i[12]=t,t=n[6],i[6]=n[9],i[9]=t,t=n[7],i[7]=n[13],i[13]=t,t=n[11],i[11]=n[14],i[14]=t):(i[0]=n[0],i[1]=n[4],i[2]=n[8],i[3]=n[12],i[4]=n[1],i[5]=n[5],i[6]=n[9],i[7]=n[13],i[8]=n[2],i[9]=n[6],i[10]=n[10],i[11]=n[14],i[12]=n[3],i[13]=n[7],i[14]=n[11],i[15]=n[15]),this},t.getTranslation=function(e){return void 0===e&&(e=new pt),e.set(this.data[12],this.data[13],this.data[14])},t.getX=function(e){return void 0===e&&(e=new pt),e.set(this.data[0],this.data[1],this.data[2])},t.getY=function(e){return void 0===e&&(e=new pt),e.set(this.data[4],this.data[5],this.data[6])},t.getZ=function(e){return void 0===e&&(e=new pt),e.set(this.data[8],this.data[9],this.data[10])},t.getScale=function(e){return void 0===e&&(e=new pt),this.getX(wt),this.getY(bt),this.getZ(xt),e.set(wt.length(),bt.length(),xt.length()),e},t.setFromEulerAngles=function(e,t,n){e*=at.DEG_TO_RAD,t*=at.DEG_TO_RAD,n*=at.DEG_TO_RAD;var i=Math.sin(-e),a=Math.cos(-e),s=Math.sin(-t),r=Math.cos(-t),o=Math.sin(-n),l=Math.cos(-n),c=this.data;return c[0]=r*l,c[1]=-r*o,c[2]=s,c[3]=0,c[4]=a*o+l*i*s,c[5]=a*l-i*s*o,c[6]=-r*i,c[7]=0,c[8]=i*o-a*l*s,c[9]=l*i+a*s*o,c[10]=a*r,c[11]=0,c[12]=0,c[13]=0,c[14]=0,c[15]=1,this},t.getEulerAngles=function(e){void 0===e&&(e=new pt),this.getScale(Ct);var t=Ct.x,n=Ct.y,i=Ct.z;if(0===t||0===n||0===i)return e.set(0,0,0);var a,s,r=this.data,o=Math.asin(-r[2]/t),l=.5*Math.PI;return o<l?o>-l?(a=Math.atan2(r[6]/n,r[10]/i),s=Math.atan2(r[1]/t,r[0]/t)):(s=0,a=-Math.atan2(r[4]/n,r[5]/n)):(s=0,a=Math.atan2(r[4]/n,r[5]/n)),e.set(a,o,s).mulScalar(at.RAD_TO_DEG)},t.toString=function(){return"["+this.data.join(", ")+"]"},q(e,[{key:"scaleSign",get:function(){return this.getX(wt),this.getY(bt),this.getZ(xt),wt.cross(wt,bt),wt.dot(xt)<0?-1:1}}]),e}();gt=St,St.IDENTITY=Object.freeze(new gt),St.ZERO=Object.freeze((new gt).set([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]));var Et=function(){function e(e,t,n,i){void 0===e&&(e=0),void 0===t&&(t=0),void 0===n&&(n=0),void 0===i&&(i=1),this.x=void 0,this.y=void 0,this.z=void 0,this.w=void 0,4===e.length?(this.x=e[0],this.y=e[1],this.z=e[2],this.w=e[3]):(this.x=e,this.y=t,this.z=n,this.w=i)}var t=e.prototype;return t.clone=function(){return new(0,this.constructor)(this.x,this.y,this.z,this.w)},t.conjugate=function(e){return void 0===e&&(e=this),this.x=-1*e.x,this.y=-1*e.y,this.z=-1*e.z,this.w=e.w,this},t.copy=function(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=e.w,this},t.equals=function(e){return this.x===e.x&&this.y===e.y&&this.z===e.z&&this.w===e.w},t.equalsApprox=function(e,t){return void 0===t&&(t=1e-6),Math.abs(this.x-e.x)<t&&Math.abs(this.y-e.y)<t&&Math.abs(this.z-e.z)<t&&Math.abs(this.w-e.w)<t},t.getAxisAngle=function(e){var t=2*Math.acos(this.w),n=Math.sin(t/2);return 0!==n?(e.x=this.x/n,e.y=this.y/n,e.z=this.z/n,(e.x<0||e.y<0||e.z<0)&&(e.x*=-1,e.y*=-1,e.z*=-1,t*=-1)):(e.x=1,e.y=0,e.z=0),t*at.RAD_TO_DEG},t.getEulerAngles=function(e){var t,n,i;void 0===e&&(e=new pt);var a=this.x,s=this.y,r=this.z,o=this.w,l=2*(o*s-a*r);return l<=-.99999?(t=2*Math.atan2(a,o),n=-Math.PI/2,i=0):l>=.99999?(t=2*Math.atan2(a,o),n=Math.PI/2,i=0):(t=Math.atan2(2*(o*a+s*r),1-2*(a*a+s*s)),n=Math.asin(l),i=Math.atan2(2*(o*r+a*s),1-2*(s*s+r*r))),e.set(t,n,i).mulScalar(at.RAD_TO_DEG)},t.invert=function(e){return void 0===e&&(e=this),this.conjugate(e).normalize()},t.length=function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)},t.lengthSq=function(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w},t.mul=function(e){var t=this.x,n=this.y,i=this.z,a=this.w,s=e.x,r=e.y,o=e.z,l=e.w;return this.x=a*s+t*l+n*o-i*r,this.y=a*r+n*l+i*s-t*o,this.z=a*o+i*l+t*r-n*s,this.w=a*l-t*s-n*r-i*o,this},t.mul2=function(e,t){var n=e.x,i=e.y,a=e.z,s=e.w,r=t.x,o=t.y,l=t.z,c=t.w;return this.x=s*r+n*c+i*l-a*o,this.y=s*o+i*c+a*r-n*l,this.z=s*l+a*c+n*o-i*r,this.w=s*c-n*r-i*o-a*l,this},t.normalize=function(e){void 0===e&&(e=this);var t=e.length();return 0===t?(this.x=this.y=this.z=0,this.w=1):(t=1/t,this.x=e.x*t,this.y=e.y*t,this.z=e.z*t,this.w=e.w*t),this},t.set=function(e,t,n,i){return this.x=e,this.y=t,this.z=n,this.w=i,this},t.setFromAxisAngle=function(e,t){t*=.5*at.DEG_TO_RAD;var n=Math.sin(t),i=Math.cos(t);return this.x=n*e.x,this.y=n*e.y,this.z=n*e.z,this.w=i,this},t.setFromEulerAngles=function(e,t,n){if(e instanceof pt){var i=e;e=i.x,t=i.y,n=i.z}var a=.5*at.DEG_TO_RAD;e*=a,t*=a,n*=a;var s=Math.sin(e),r=Math.cos(e),o=Math.sin(t),l=Math.cos(t),c=Math.sin(n),h=Math.cos(n);return this.x=s*l*h-r*o*c,this.y=r*o*h+s*l*c,this.z=r*l*c-s*o*h,this.w=r*l*h+s*o*c,this},t.setFromMat4=function(e){var t,n,i,a,s,r,o,l,c,h,p,d,u,m;if(t=(e=e.data)[0],n=e[1],i=e[2],a=e[4],s=e[5],r=e[6],o=e[8],l=e[9],c=e[10],0==(d=t*t+n*n+i*i))return this;if(d=1/Math.sqrt(d),0==(u=a*a+s*s+r*r))return this;if(u=1/Math.sqrt(u),0==(m=o*o+l*l+c*c))return this;n*=d,i*=d,a*=u,r*=u,o*=m=1/Math.sqrt(m),l*=m;var f=(t*=d)+(s*=u)+(c*=m);return f>=0?(h=Math.sqrt(f+1),this.w=.5*h,h=.5/h,this.x=(r-l)*h,this.y=(o-i)*h,this.z=(n-a)*h):t>s?t>c?(p=t-(s+c)+1,p=Math.sqrt(p),this.x=.5*p,p=.5/p,this.w=(r-l)*p,this.y=(n+a)*p,this.z=(i+o)*p):(p=c-(t+s)+1,p=Math.sqrt(p),this.z=.5*p,p=.5/p,this.w=(n-a)*p,this.x=(o+i)*p,this.y=(l+r)*p):s>c?(p=s-(c+t)+1,p=Math.sqrt(p),this.y=.5*p,p=.5/p,this.w=(o-i)*p,this.z=(r+l)*p,this.x=(a+n)*p):(p=c-(t+s)+1,p=Math.sqrt(p),this.z=.5*p,p=.5/p,this.w=(n-a)*p,this.x=(o+i)*p,this.y=(l+r)*p),this},t.setFromDirections=function(e,t){var n=1+e.dot(t);return n<Number.EPSILON?Math.abs(e.x)>Math.abs(e.y)?(this.x=-e.z,this.y=0,this.z=e.x,this.w=0):(this.x=0,this.y=-e.z,this.z=e.y,this.w=0):(this.x=e.y*t.z-e.z*t.y,this.y=e.z*t.x-e.x*t.z,this.z=e.x*t.y-e.y*t.x,this.w=n),this.normalize()},t.slerp=function(e,t,n){var i=e.x,a=e.y,s=e.z,r=e.w,o=t.x,l=t.y,c=t.z,h=t.w,p=r*h+i*o+a*l+s*c;if(p<0&&(h=-h,o=-o,l=-l,c=-c,p=-p),Math.abs(p)>=1)return this.w=r,this.x=i,this.y=a,this.z=s,this;var d=Math.acos(p),u=Math.sqrt(1-p*p);if(Math.abs(u)<.001)return this.w=.5*r+.5*h,this.x=.5*i+.5*o,this.y=.5*a+.5*l,this.z=.5*s+.5*c,this;var m=Math.sin((1-n)*d)/u,f=Math.sin(n*d)/u;return this.w=r*m+h*f,this.x=i*m+o*f,this.y=a*m+l*f,this.z=s*m+c*f,this},t.transformVector=function(e,t){void 0===t&&(t=new pt);var n=e.x,i=e.y,a=e.z,s=this.x,r=this.y,o=this.z,l=this.w,c=l*n+r*a-o*i,h=l*i+o*n-s*a,p=l*a+s*i-r*n,d=-s*n-r*i-o*a;return t.x=c*l+d*-s+h*-o-p*-r,t.y=h*l+d*-r+p*-s-c*-o,t.z=p*l+d*-o+c*-r-h*-s,t},t.toString=function(){return"["+this.x+", "+this.y+", "+this.z+", "+this.w+"]"},e}();yt=Et,Et.IDENTITY=Object.freeze(new yt(0,0,0,1)),Et.ZERO=Object.freeze(new yt(0,0,0,0));var Tt=new pt,At=new pt,Lt=new pt,Mt=new pt,Pt=new pt,Ot=function(){function e(e,t){void 0===e&&(e=new pt),void 0===t&&(t=new pt(.5,.5,.5)),this.center=void 0,this.halfExtents=void 0,this._min=new pt,this._max=new pt,this.center=e,this.halfExtents=t}var t=e.prototype;return t.add=function(e){var t=this.center,n=t.x,i=t.y,a=t.z,s=this.halfExtents,r=s.x,o=s.y,l=s.z,c=n-r,h=n+r,p=i-o,d=i+o,u=a-l,m=a+l,f=e.center,g=f.x,v=f.y,y=f.z,_=e.halfExtents,w=_.x,b=_.y,x=_.z,C=g-w,S=g+w,E=v-b,T=v+b,A=y-x,L=y+x;C<c&&(c=C),S>h&&(h=S),E<p&&(p=E),T>d&&(d=T),A<u&&(u=A),L>m&&(m=L),t.x=.5*(c+h),t.y=.5*(p+d),t.z=.5*(u+m),s.x=.5*(h-c),s.y=.5*(d-p),s.z=.5*(m-u)},t.copy=function(e){this.center.copy(e.center),this.halfExtents.copy(e.halfExtents)},t.clone=function(){return new e(this.center.clone(),this.halfExtents.clone())},t.intersects=function(e){var t=this.getMax(),n=this.getMin(),i=e.getMax(),a=e.getMin();return n.x<=i.x&&t.x>=a.x&&n.y<=i.y&&t.y>=a.y&&n.z<=i.z&&t.z>=a.z},t._intersectsRay=function(e,t){var n=Tt.copy(this.getMin()).sub(e.origin),i=At.copy(this.getMax()).sub(e.origin),a=e.direction;0===a.x?(n.x=n.x<0?-Number.MAX_VALUE:Number.MAX_VALUE,i.x=i.x<0?-Number.MAX_VALUE:Number.MAX_VALUE):(n.x/=a.x,i.x/=a.x),0===a.y?(n.y=n.y<0?-Number.MAX_VALUE:Number.MAX_VALUE,i.y=i.y<0?-Number.MAX_VALUE:Number.MAX_VALUE):(n.y/=a.y,i.y/=a.y),0===a.z?(n.z=n.z<0?-Number.MAX_VALUE:Number.MAX_VALUE,i.z=i.z<0?-Number.MAX_VALUE:Number.MAX_VALUE):(n.z/=a.z,i.z/=a.z);var s=Lt.set(Math.min(n.x,i.x),Math.min(n.y,i.y),Math.min(n.z,i.z)),r=Mt.set(Math.max(n.x,i.x),Math.max(n.y,i.y),Math.max(n.z,i.z)),o=Math.min(Math.min(r.x,r.y),r.z),l=Math.max(Math.max(s.x,s.y),s.z),c=o>=l&&l>=0;return c&&t.copy(e.direction).mulScalar(l).add(e.origin),c},t._fastIntersectsRay=function(e){var t=Tt,n=At,i=Lt,a=Mt,s=Pt,r=e.direction;return t.sub2(e.origin,this.center),a.set(Math.abs(t.x),Math.abs(t.y),Math.abs(t.z)),i.mul2(t,r),!(a.x>this.halfExtents.x&&i.x>=0||a.y>this.halfExtents.y&&i.y>=0||a.z>this.halfExtents.z&&i.z>=0||(s.set(Math.abs(r.x),Math.abs(r.y),Math.abs(r.z)),n.cross(r,t),n.set(Math.abs(n.x),Math.abs(n.y),Math.abs(n.z)),n.x>this.halfExtents.y*s.z+this.halfExtents.z*s.y||n.y>this.halfExtents.x*s.z+this.halfExtents.z*s.x||n.z>this.halfExtents.x*s.y+this.halfExtents.y*s.x))},t.intersectsRay=function(e,t){return t?this._intersectsRay(e,t):this._fastIntersectsRay(e)},t.setMinMax=function(e,t){this.center.add2(t,e).mulScalar(.5),this.halfExtents.sub2(t,e).mulScalar(.5)},t.getMin=function(){return this._min.copy(this.center).sub(this.halfExtents)},t.getMax=function(){return this._max.copy(this.center).add(this.halfExtents)},t.containsPoint=function(e){var t=this.getMin(),n=this.getMax();return!(e.x<t.x||e.x>n.x||e.y<t.y||e.y>n.y||e.z<t.z||e.z>n.z)},t.setFromTransformedAabb=function(e,t,n){void 0===n&&(n=!1);var i=e.center,a=e.halfExtents,s=t.data,r=s[0],o=s[4],l=s[8],c=s[1],h=s[5],p=s[9],d=s[2],u=s[6],m=s[10];if(n){var f=r*r+o*o+l*l;if(f>0){var g=1/Math.sqrt(f);r*=g,o*=g,l*=g}if((f=c*c+h*h+p*p)>0){var v=1/Math.sqrt(f);c*=v,h*=v,p*=v}if((f=d*d+u*u+m*m)>0){var y=1/Math.sqrt(f);d*=y,u*=y,m*=y}}this.center.set(s[12]+r*i.x+o*i.y+l*i.z,s[13]+c*i.x+h*i.y+p*i.z,s[14]+d*i.x+u*i.y+m*i.z),this.halfExtents.set(Math.abs(r)*a.x+Math.abs(o)*a.y+Math.abs(l)*a.z,Math.abs(c)*a.x+Math.abs(h)*a.y+Math.abs(p)*a.z,Math.abs(d)*a.x+Math.abs(u)*a.y+Math.abs(m)*a.z)},e.computeMinMax=function(e,t,n,i){if(void 0===i&&(i=e.length/3),i>0){for(var a=e[0],s=e[1],r=e[2],o=a,l=s,c=r,h=3*i,p=3;p<h;p+=3){var d=e[p],u=e[p+1],m=e[p+2];d<a&&(a=d),u<s&&(s=u),m<r&&(r=m),d>o&&(o=d),u>l&&(l=u),m>c&&(c=m)}t.set(a,s,r),n.set(o,l,c)}},t.compute=function(t,n){e.computeMinMax(t,Tt,At,n),this.setMinMax(Tt,At)},t.intersectsBoundingSphere=function(e){return this._distanceToBoundingSphereSq(e)<=e.radius*e.radius},t._distanceToBoundingSphereSq=function(e){for(var t=this.getMin(),n=this.getMax(),i=0,a=["x","y","z"],s=0;s<3;++s){var r=0,o=e.center[a[s]],l=t[a[s]],c=n[a[s]],h=0;o<l&&(r+=(h=l-o)*h),o>c&&(r+=(h=o-c)*h),i+=r}return i},t._expand=function(e,t){Tt.add2(this.getMin(),e),At.add2(this.getMax(),t),this.setMinMax(Tt,At)},e}(),It=new pt,Rt=new pt,Dt=function(){function e(e,t){void 0===e&&(e=new pt),void 0===t&&(t=.5),this.center=void 0,this.radius=void 0,this.center=e,this.radius=t}var t=e.prototype;return t.containsPoint=function(e){var t=It.sub2(e,this.center).lengthSq(),n=this.radius;return t<n*n},t.intersectsRay=function(e,t){var n=It.copy(e.origin).sub(this.center),i=n.dot(Rt.copy(e.direction).normalize()),a=n.dot(n)-this.radius*this.radius;if(a>0&&i>0)return!1;var s=i*i-a;if(s<0)return!1;var r=Math.abs(-i-Math.sqrt(s));return t&&t.copy(e.direction).mulScalar(r).add(e.origin),!0},t.intersectsBoundingSphere=function(e){It.sub2(e.center,this.center);var t=e.radius+this.radius;return It.lengthSq()<=t*t},e}(),kt=function(){function e(){this.planes=[];for(var e=0;e<6;e++)this.planes[e]=[]}var t=e.prototype;return t.setFromMat4=function(e){var t,n=e.data,i=this.planes;(t=i[0])[0]=n[3]-n[0],t[1]=n[7]-n[4],t[2]=n[11]-n[8],t[3]=n[15]-n[12];var a=Math.sqrt(t[0]*t[0]+t[1]*t[1]+t[2]*t[2]);t[0]/=a,t[1]/=a,t[2]/=a,t[3]/=a,(t=i[1])[0]=n[3]+n[0],t[1]=n[7]+n[4],t[2]=n[11]+n[8],t[3]=n[15]+n[12],a=Math.sqrt(t[0]*t[0]+t[1]*t[1]+t[2]*t[2]),t[0]/=a,t[1]/=a,t[2]/=a,t[3]/=a,(t=i[2])[0]=n[3]+n[1],t[1]=n[7]+n[5],t[2]=n[11]+n[9],t[3]=n[15]+n[13],a=Math.sqrt(t[0]*t[0]+t[1]*t[1]+t[2]*t[2]),t[0]/=a,t[1]/=a,t[2]/=a,t[3]/=a,(t=i[3])[0]=n[3]-n[1],t[1]=n[7]-n[5],t[2]=n[11]-n[9],t[3]=n[15]-n[13],a=Math.sqrt(t[0]*t[0]+t[1]*t[1]+t[2]*t[2]),t[0]/=a,t[1]/=a,t[2]/=a,t[3]/=a,(t=i[4])[0]=n[3]-n[2],t[1]=n[7]-n[6],t[2]=n[11]-n[10],t[3]=n[15]-n[14],a=Math.sqrt(t[0]*t[0]+t[1]*t[1]+t[2]*t[2]),t[0]/=a,t[1]/=a,t[2]/=a,t[3]/=a,(t=i[5])[0]=n[3]+n[2],t[1]=n[7]+n[6],t[2]=n[11]+n[10],t[3]=n[15]+n[14],a=Math.sqrt(t[0]*t[0]+t[1]*t[1]+t[2]*t[2]),t[0]/=a,t[1]/=a,t[2]/=a,t[3]/=a},t.containsPoint=function(e){var t,n;for(t=0;t<6;t++)if((n=this.planes[t])[0]*e.x+n[1]*e.y+n[2]*e.z+n[3]<=0)return!1;return!0},t.containsSphere=function(e){var t,n,i,a=0,s=e.radius,r=e.center,o=r.x,l=r.y,c=r.z,h=this.planes;for(n=0;n<6;n++){if((t=(i=h[n])[0]*o+i[1]*l+i[2]*c+i[3])<=-s)return 0;t>s&&a++}return 6===a?2:1},e}(),Ft=function(){function e(e,t){this.origin=new pt,this.direction=pt.FORWARD.clone(),e&&this.origin.copy(e),t&&this.direction.copy(t)}var t=e.prototype;return t.set=function(e,t){return this.origin.copy(e),this.direction.copy(t),this},t.copy=function(e){return this.set(e.origin,e.direction)},t.clone=function(){return new this.constructor(this.origin,this.direction)},e}(),Bt=new Ft,Nt=new pt,Ut=new Dt,zt=new St,Vt=function(){function e(e,t){void 0===e&&(e=new St),void 0===t&&(t=new pt(.5,.5,.5)),this.halfExtents=void 0,this._modelTransform=void 0,this._worldTransform=void 0,this._aabb=void 0,this.halfExtents=t,this._modelTransform=e.clone().invert(),this._worldTransform=e.clone(),this._aabb=new Ot(new pt,this.halfExtents)}var t=e.prototype;return t.intersectsRay=function(e,t){if(this._modelTransform.transformPoint(e.origin,Bt.origin),this._modelTransform.transformVector(e.direction,Bt.direction),t){var n=this._aabb._intersectsRay(Bt,t);return zt.copy(this._modelTransform).invert().transformPoint(t,t),n}return this._aabb._fastIntersectsRay(Bt)},t.containsPoint=function(e){return this._modelTransform.transformPoint(e,Nt),this._aabb.containsPoint(Nt)},t.intersectsBoundingSphere=function(e){return this._modelTransform.transformPoint(e.center,Ut.center),Ut.radius=e.radius,!!this._aabb.intersectsBoundingSphere(Ut)},q(e,[{key:"worldTransform",get:function(){return this._worldTransform},set:function(e){this._worldTransform.copy(e),this._modelTransform.copy(e).invert()}}]),e}(),Ht=function(){function e(e,t){void 0===e&&(e=pt.UP),void 0===t&&(t=0),this.normal=new pt,this.distance=void 0,this.normal.copy(e),this.distance=t}var t=e.prototype;return t.setFromPointNormal=function(e,t){return this.normal.copy(t),this.distance=-this.normal.dot(e),this},t.intersectsLine=function(e,t,n){var i=this.distance,a=this.normal.dot(e)+i,s=a/(a-(this.normal.dot(t)+i)),r=s>=0&&s<=1;return r&&n&&n.lerp(e,t,s),r},t.intersectsRay=function(e,t){var n=this.normal.dot(e.direction);if(0===n)return!1;var i=-(this.normal.dot(e.origin)+this.distance)/n;return i>=0&&t&&t.copy(e.direction).mulScalar(i).add(e.origin),i>=0},t.copy=function(e){return this.normal.copy(e.normal),this.distance=e.distance,this},t.clone=function(){return(new(0,this.constructor)).copy(this)},e}(),Gt="linear",Wt="inverse",jt="exponential",Xt=0,Yt=1,qt=2,Kt=0,Zt=1,Qt=2,Jt=3,$t=4,en=5,tn=6,nn=7,an=8,sn=9,rn=10,on=11,ln=12,cn=0,hn=1,pn=2,dn=3,un=4,mn=0,fn=1,gn=2,vn=3,yn=1,_n=2,wn=4,bn=0,xn=1,Cn=2,Sn=3,En=4,Tn=5,An=0,Ln=1,Mn=2,Pn=3,On=0,In=1,Rn=2,Dn=3,kn=4,Fn=5,Bn=0,Nn=1,Un=2,zn=3,Vn=4,Hn=5,Gn=6,Wn=7,jn=0,Xn=1,Yn=2,qn=0,Kn=1,Zn=2,Qn=3,Jn=4,$n=5,ei=6,ti=7,ni=8,ii=9,ai=10,si=11,ri=12,oi=13,li=14,ci=15,hi=16,pi=17,di=18,ui=19,mi=20,fi=21,gi=22,vi=23,yi=24,_i=25,wi=26,bi=27,xi=28,Ci=29,Si=30,Ei=31,Ti=new Map([[qn,{name:"A8",size:1}],[Kn,{name:"L8",size:1}],[Zn,{name:"LA8",size:2}],[Qn,{name:"RGB565",size:2}],[Jn,{name:"RGBA5551",size:2}],[$n,{name:"RGBA4",size:2}],[ei,{name:"RGB8",size:4}],[ti,{name:"RGBA8",size:4}],[si,{name:"RGB16F",size:8}],[ri,{name:"RGBA16F",size:8}],[oi,{name:"RGB32F",size:16}],[li,{name:"RGBA32F",size:16}],[ci,{name:"R32F",size:4}],[hi,{name:"DEPTH",size:4}],[pi,{name:"DEPTHSTENCIL",size:4}],[di,{name:"111110F",size:4}],[ui,{name:"SRGB",size:4}],[mi,{name:"SRGBA",size:4}],[Ei,{name:"BGRA8",size:4}],[ni,{name:"DXT1",blockSize:8}],[ii,{name:"DXT3",blockSize:16}],[ai,{name:"DXT5",blockSize:16}],[fi,{name:"ETC1",blockSize:8}],[gi,{name:"ETC2_RGB",blockSize:8}],[vi,{name:"ETC2_RGBA",blockSize:16}],[yi,{name:"PVRTC_2BPP_RGB_1",blockSize:8}],[_i,{name:"PVRTC_2BPP_RGBA_1",blockSize:8}],[wi,{name:"PVRTC_4BPP_RGB_1",blockSize:8}],[bi,{name:"PVRTC_4BPP_RGBA_1",blockSize:8}],[xi,{name:"ASTC_4x4",blockSize:16}],[Ci,{name:"ATC_RGB",blockSize:8}],[Si,{name:"ATC_RGBA",blockSize:16}]]),Ai=function(e){return void 0!==Ti.get(e).blockSize},Li=function(e){switch(e){case oi:case li:return Float32Array;case Qn:case Jn:case $n:case si:case ri:return Uint16Array;default:return Uint8Array}},Mi=0,Pi=1,Oi=2,Ii=3,Ri=4,Di=5,ki=6,Fi="POSITION",Bi="NORMAL",Ni="TANGENT",Ui="BLENDWEIGHT",zi="BLENDINDICES",Vi="COLOR",Hi="TEXCOORD",Gi="TEXCOORD0",Wi="TEXCOORD1",ji="TEXCOORD2",Xi="TEXCOORD3",Yi="TEXCOORD4",qi="TEXCOORD5",Ki="TEXCOORD6",Zi="TEXCOORD7",Qi="ATTR",Ji="ATTR0",$i="ATTR1",ea="ATTR2",ta="ATTR3",na="ATTR4",ia="ATTR5",aa="ATTR6",sa="ATTR7",ra="ATTR8",oa="ATTR9",la="ATTR10",ca="ATTR11",ha="ATTR12",pa="ATTR13",da="ATTR14",ua="ATTR15",ma=1,fa=0,ga=1,va=2,ya=3,_a=4,wa=5,ba=6,xa=7,Ca=1,Sa=2,Ea="default",Ta="rgbm",Aa="rgbe",La="rgbp",Ma="swizzleGGGR",Pa=0,Oa=1,Ia=2,Ra=3,Da="1d",ka="2d",Fa="2d-array",Ba="cube",Na="cube-array",Ua="3d",za=0,Va=1,Ha=2,Ga="none",Wa="cube",ja="equirect",Xa="octahedral",Ya="glsl",qa="wgsl",Ka=0,Za=1,Qa=2,Ja=3,$a=4,es=5,ts=6,ns=0,is=1,as=2,ss=3,rs=4,os=5,ls=6,cs=7,hs=8,ps=9,ds=10,us=11,ms=12,fs=13,gs=14,vs=15,ys=16,_s=17,ws=18,bs=19,xs=20,Cs=21,Ss=22,Es=23,Ts=24,As=["bool","int","float","vec2","vec3","vec4","ivec2","ivec3","ivec4","bec2","bec3","bec4","mat2","mat3","mat4","sampler2D","samplerCube","","sampler2DShadow","samplerCubeShadow","sampler3D","","",""],Ls="webgl1",Ms="webgl2",Ps="webgpu",Os="null",Is=1,Rs=2,Ds=4,ks=0,Fs=1,Bs=["mesh","view"],Ns="default",Us=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array],zs=[1,1,2,2,4,4,4],Vs=["INT8","UINT8","INT16","UINT16","INT32","UINT32","FLOAT32"],Hs={Int8Array:Ka,Uint8Array:Za,Int16Array:Qa,Uint16Array:Ja,Int32Array:$a,Uint32Array:es,Float32Array:ts},Gs=[Uint8Array,Uint16Array,Uint32Array],Ws=[1,2,4],js={};js[Fi]=0,js[Bi]=1,js[Ui]=2,js[zi]=3,js[Vi]=4,js[Gi]=5,js[Wi]=6,js[ji]=7,js[Xi]=8,js[Yi]=9,js[qi]=10,js[Ki]=11,js[Zi]=12,js[Ni]=13,js[Ji]=0,js[$i]=1,js[ea]=2,js[ta]=3,js[na]=4,js[ia]=5,js[aa]=6,js[sa]=7,js[ra]=8,js[oa]=9,js[la]=10,js[ca]=11,js[ha]=12,js[pa]=13,js[da]=14,js[ua]=15;var Xs,Ys,qs="1.51",Ks="1.55",Zs="1.56",Qs="1.57",Js="1.58",$s="1.60",er="1.62",tr="1.65",nr={set:function(e,t,n,i){return void 0===i&&(i=1),e&~(i<<n)|t<<n},get:function(e,t,n){return void 0===n&&(n=1),e>>t&n},all:function(e,t,n){void 0===n&&(n=1);var i=n<<t;return(e&i)===i},any:function(e,t,n){return void 0===n&&(n=1),0!=(e&n<<t)}},ir=7,ar=15,sr=0,rr=3,or=7,lr=11,cr=14,hr=18,pr=22,dr=23,ur=24,mr=25,fr=26,gr=15,vr=pr,yr=function(){function e(e,t,n,i,a,s,r,o,l,c,h){void 0===e&&(e=!1),void 0===t&&(t=cn),void 0===n&&(n=Zt),void 0===i&&(i=Kt),void 0===o&&(o=!0),void 0===l&&(l=!0),void 0===c&&(c=!0),void 0===h&&(h=!0),this.target0=0,this.setColorBlend(t,n,i),this.setAlphaBlend(null!=a?a:t,null!=s?s:n,null!=r?r:i),this.setColorWrite(o,l,c,h),this.blend=e}var t=e.prototype;return t.setColorBlend=function(e,t,n){this.target0=nr.set(this.target0,e,sr,ir),this.target0=nr.set(this.target0,t,rr,ar),this.target0=nr.set(this.target0,n,or,ar)},t.setAlphaBlend=function(e,t,n){this.target0=nr.set(this.target0,e,lr,ir),this.target0=nr.set(this.target0,t,cr,ar),this.target0=nr.set(this.target0,n,hr,ar)},t.setColorWrite=function(e,t,n,i){this.redWrite=e,this.greenWrite=t,this.blueWrite=n,this.alphaWrite=i},t.copy=function(e){return this.target0=e.target0,this},t.clone=function(){var e=new this.constructor;return e.copy(this)},t.equals=function(e){return this.target0===e.target0},q(e,[{key:"blend",get:function(){return nr.all(this.target0,fr)},set:function(e){this.target0=nr.set(this.target0,e?1:0,fr)}},{key:"colorOp",get:function(){return nr.get(this.target0,sr,ir)}},{key:"colorSrcFactor",get:function(){return nr.get(this.target0,rr,ar)}},{key:"colorDstFactor",get:function(){return nr.get(this.target0,or,ar)}},{key:"alphaOp",get:function(){return nr.get(this.target0,lr,ir)}},{key:"alphaSrcFactor",get:function(){return nr.get(this.target0,cr,ar)}},{key:"alphaDstFactor",get:function(){return nr.get(this.target0,hr,ar)}},{key:"redWrite",get:function(){return nr.all(this.target0,pr)},set:function(e){this.target0=nr.set(this.target0,e?1:0,pr)}},{key:"greenWrite",get:function(){return nr.all(this.target0,dr)},set:function(e){this.target0=nr.set(this.target0,e?1:0,dr)}},{key:"blueWrite",get:function(){return nr.all(this.target0,ur)},set:function(e){this.target0=nr.set(this.target0,e?1:0,ur)}},{key:"alphaWrite",get:function(){return nr.all(this.target0,mr)},set:function(e){this.target0=nr.set(this.target0,e?1:0,mr)}},{key:"allWrite",get:function(){return nr.get(this.target0,vr,gr)}},{key:"key",get:function(){return this.target0}}]),e}();Xs=yr,yr.NOBLEND=Object.freeze(new Xs),yr.NOWRITE=Object.freeze(new Xs(void 0,void 0,void 0,void 0,void 0,void 0,void 0,!1,!1,!1,!1)),yr.ALPHABLEND=Object.freeze(new Xs(!0,cn,tn,an));var _r=7,wr=0,br=3,xr=function(){function e(e,t){void 0===e&&(e=zn),void 0===t&&(t=!0),this.data=0,this.func=e,this.write=t}var t=e.prototype;return t.copy=function(e){return this.data=e.data,this},t.clone=function(){var e=new this.constructor;return e.copy(this)},t.equals=function(e){return this.data===e.data},q(e,[{key:"test",get:function(){return this.func!==Wn},set:function(e){this.func=e?zn:Wn}},{key:"write",get:function(){return nr.all(this.data,br)},set:function(e){this.data=nr.set(this.data,e?1:0,br)}},{key:"func",get:function(){return nr.get(this.data,wr,_r)},set:function(e){this.data=nr.set(this.data,e,wr,_r)}},{key:"key",get:function(){return this.data}}]),e}();Ys=xr,xr.DEFAULT=Object.freeze(new Ys),xr.NODEPTH=Object.freeze(new Ys(Wn,!1)),xr.WRITEDEPTH=Object.freeze(new Ys(Wn,!0));var Cr=function(){function e(){this.globalId=0,this.revision=0}var t=e.prototype;return t.equals=function(e){return this.globalId===e.globalId&&this.revision===e.revision},t.copy=function(e){this.globalId=e.globalId,this.revision=e.revision},t.reset=function(){this.globalId=0,this.revision=0},e}(),Sr=0,Er=function(){function e(){Sr++,this.version=new Cr,this.version.globalId=Sr}return e.prototype.increment=function(){this.version.revision++},e}(),Tr=function(){function e(e){this.name=e,this.value=null,this.versionObject=new Er}var t=e.prototype;return t.toJSON=function(e){},t.setValue=function(e){this.value=e,this.versionObject.increment()},t.getValue=function(){return this.value},e}(),Ar=function(){function e(e){this.name=e,this.variables=new Map}var t=e.prototype;return t.resolve=function(e){return this.variables.has(e)||this.variables.set(e,new Tr(e)),this.variables.get(e)},t.removeValue=function(e){for(var t in this.variables){var n=this.variables[t];n.value===e&&(n.value=null)}},e}(),Lr=0,Mr=function(){function e(e,t,n,i,a){void 0===i&&(i=mn),this.device=e,this.format=t,this.numVertices=n,this.usage=i,this.id=Lr++,this.impl=e.createVertexBufferImpl(this,t),this.numBytes=t.verticesByteSize?t.verticesByteSize:t.size*n,this.adjustVramSizeTracking(e._vram,this.numBytes),a?this.setData(a):this.storage=new ArrayBuffer(this.numBytes),this.device.buffers.push(this)}var t=e.prototype;return t.destroy=function(){var e=this.device,t=e.buffers.indexOf(this);-1!==t&&e.buffers.splice(t,1),this.impl.initialized&&(this.impl.destroy(e),this.adjustVramSizeTracking(e._vram,-this.storage.byteLength))},t.adjustVramSizeTracking=function(e,t){e.vb+=t},t.loseContext=function(){this.impl.loseContext()},t.getFormat=function(){return this.format},t.getUsage=function(){return this.usage},t.getNumVertices=function(){return this.numVertices},t.lock=function(){return this.storage},t.unlock=function(){this.impl.unlock(this)},t.setData=function(e){return e.byteLength===this.numBytes&&(this.storage=e,this.unlock(),!0)},e}();function Pr(e){for(var t=0,n=0,i=e.length;n<i;n++)t=(t<<5)-t+e.charCodeAt(n),t|=0;return t}function Or(e){for(var t=16777619,n=2166136261,i=0;i<e.length;i++)n^=e[i],n*=t;return n>>>0}var Ir,Rr=function(){function e(){this.map=new Map,this.id=0}return e.prototype.get=function(e){var t=this.map.get(e);return void 0===t&&(t=this.id++,this.map.set(e,t)),t},e}(),Dr=new Rr,kr=[2,4,8,12,16],Fr=function(){function e(e,t,n){this.device=e,this._elements=[],this.hasUv0=!1,this.hasUv1=!1,this.hasColor=!1,this.hasTangents=!1,this.verticesByteSize=0,this.vertexCount=n,this.interleaved=void 0===n,this.instancing=!1,this.size=t.reduce((function(e,t){return e+4*Math.ceil(t.components*zs[t.type]/4)}),0);for(var i,a=0,s=0,r=t.length;s<r;s++){var o,l=t[s];i=l.components*zs[l.type],n&&(a=at.roundUp(a,i));var c={name:l.semantic,offset:n?a:l.hasOwnProperty("offset")?l.offset:a,stride:n?i:l.hasOwnProperty("stride")?l.stride:this.size,dataType:l.type,numComponents:l.components,normalize:null!=(o=l.normalize)&&o,size:i};this._elements.push(c),a+=n?i*n:4*Math.ceil(i/4),l.semantic===Gi?this.hasUv0=!0:l.semantic===Wi?this.hasUv1=!0:l.semantic===Vi?this.hasColor=!0:l.semantic===Ni&&(this.hasTangents=!0)}n&&(this.verticesByteSize=a),this._evaluateHash()}e.getDefaultInstancingFormat=function(t){return e._defaultInstancingFormat||(e._defaultInstancingFormat=new e(t,[{semantic:ha,components:4,type:ts},{semantic:pa,components:4,type:ts},{semantic:da,components:4,type:ts},{semantic:ua,components:4,type:ts}])),e._defaultInstancingFormat},e.isElementValid=function(e,t){var n=t.components*zs[t.type];return!(e.isWebGPU&&!kr.includes(n))};var t=e.prototype;return t.update=function(){this._evaluateHash()},t._evaluateHash=function(){for(var e,t,n=[],i=[],a=this._elements.length,s=0;s<a;s++){var r=this._elements[s];e=r.name,e+=r.dataType,e+=r.numComponents,e+=r.normalize,n.push(e),t=e,t+=r.offset,t+=r.stride,t+=r.size,i.push(t)}n.sort(),this.batchingHash=Pr(n.join()),this.renderingHashString=i.join("_"),this.renderingHash=Dr.get(this.renderingHashString)},q(e,[{key:"elements",get:function(){return this._elements}}]),e}();Fr._defaultInstancingFormat=null;var Br=new Rr,Nr=function(){function e(e){var t,n,i,a,s,r,o;void 0===e&&(e={}),this._func=void 0,this._ref=void 0,this._fail=void 0,this._zfail=void 0,this._zpass=void 0,this._readMask=void 0,this._writeMask=void 0,this._dirty=!0,this._key=void 0,this._func=null!=(t=e.func)?t:Wn,this._ref=null!=(n=e.ref)?n:0,this._readMask=null!=(i=e.readMask)?i:255,this._writeMask=null!=(a=e.writeMask)?a:255,this._fail=null!=(s=e.fail)?s:fa,this._zfail=null!=(r=e.zfail)?r:fa,this._zpass=null!=(o=e.zpass)?o:fa,this._evalKey()}var t=e.prototype;return t._evalKey=function(){var e=this._func+","+this._ref+","+this._fail+","+this._zfail+","+this._zpass+","+this._readMask+","+this._writeMask;this._key=Br.get(e),this._dirty=!1},t.copy=function(e){return this._func=e._func,this._ref=e._ref,this._readMask=e._readMask,this._writeMask=e._writeMask,this._fail=e._fail,this._zfail=e._zfail,this._zpass=e._zpass,this._dirty=e._dirty,this._key=e._key,this},t.clone=function(){var e=new this.constructor;return e.copy(this)},q(e,[{key:"func",get:function(){return this._func},set:function(e){this._func=e,this._dirty=!0}},{key:"ref",get:function(){return this._ref},set:function(e){this._ref=e,this._dirty=!0}},{key:"fail",get:function(){return this._fail},set:function(e){this._fail=e,this._dirty=!0}},{key:"zfail",get:function(){return this._zfail},set:function(e){this._zfail=e,this._dirty=!0}},{key:"zpass",get:function(){return this._zpass},set:function(e){this._zpass=e,this._dirty=!0}},{key:"readMask",get:function(){return this._readMask},set:function(e){this._readMask=e,this._dirty=!0}},{key:"writeMask",get:function(){return this._writeMask},set:function(e){this._writeMask=e,this._dirty=!0}},{key:"key",get:function(){return this._dirty&&this._evalKey(),this._key}}]),e}();Ir=Nr,Nr.DEFAULT=Object.freeze(new Ir);var Ur=function(e){function t(t,n){var i,a,s,r,o;(o=e.call(this)||this).canvas=void 0,o.backBuffer=null,o.backBufferSize=new ft,o.backBufferFormat=void 0,o.backBufferAntialias=!1,o.isWebGPU=!1,o.isWebGL1=!1,o.isWebGL2=!1,o.scope=void 0,o.boneLimit=void 0,o.maxAnisotropy=void 0,o.maxCubeMapSize=void 0,o.maxTextureSize=void 0,o.maxVolumeSize=void 0,o.maxColorAttachments=1,o.precision=void 0,o.samples=void 0,o.supportsStencil=void 0,o.supportsMrt=!1,o.supportsVolumeTextures=!1,o.renderTarget=null,o.shaders=[],o.textures=[],o.targets=new Set,o.renderVersion=0,o.renderPassIndex=void 0,o.insideRenderPass=!1,o.supportsInstancing=void 0,o.supportsUniformBuffers=!1,o.textureFloatRenderable=void 0,o.textureHalfFloatRenderable=void 0,o.textureFloatFilterable=!0,o.quadVertexBuffer=void 0,o.blendState=new yr,o.depthState=new xr,o.stencilEnabled=!1,o.stencilFront=new Nr,o.stencilBack=new Nr,o.dynamicBuffers=void 0,o.gpuProfiler=void 0,o.defaultClearOptions={color:[0,0,0,1],depth:1,stencil:0,flags:yn|_n},o.canvas=t,o.initOptions=K({},n),null!=(i=o.initOptions).depth||(i.depth=!0),null!=(a=o.initOptions).stencil||(a.stencil=!0),null!=(s=o.initOptions).antialias||(s.antialias=!0),null!=(r=o.initOptions).powerPreference||(r.powerPreference="high-performance"),o._maxPixelRatio=we.browser?Math.min(1,window.devicePixelRatio):1,o.buffers=[],o._vram={tex:0,vb:0,ib:0,ub:0},o._shaderStats={vsCompiled:0,fsCompiled:0,linked:0,materialShaders:0,compileTime:0},o.initializeContextCaches(),o._drawCallsPerFrame=0,o._shaderSwitchesPerFrame=0,o._primsPerFrame=[];for(var l=Mi;l<=ki;l++)o._primsPerFrame[l]=0;return o._renderTargetCreationTime=0,o.scope=new Ar("Device"),o.textureBias=o.scope.resolve("textureBias"),o.textureBias.setValue(0),o}Z(t,e);var n=t.prototype;return n.postInit=function(){var e=new Fr(this,[{semantic:Fi,components:2,type:ts}]),t=new Float32Array([-1,-1,1,-1,-1,1,1,1]);this.quadVertexBuffer=new Mr(this,e,4,mn,t)},n.destroy=function(){var e,t,n;this.fire("destroy"),null==(e=this.quadVertexBuffer)||e.destroy(),this.quadVertexBuffer=null,null==(t=this.dynamicBuffers)||t.destroy(),this.dynamicBuffers=null,null==(n=this.gpuProfiler)||n.destroy(),this.gpuProfiler=null},n.onDestroyShader=function(e){this.fire("destroy:shader",e);var t=this.shaders.indexOf(e);-1!==t&&this.shaders.splice(t,1)},n.postDestroy=function(){this.scope=null,this.canvas=null},n.toJSON=function(e){},n.initializeContextCaches=function(){this.indexBuffer=null,this.vertexBuffers=[],this.shader=null,this.renderTarget=null},n.initializeRenderState=function(){this.blendState=new yr,this.depthState=new xr,this.cullMode=Ln,this.vx=this.vy=this.vw=this.vh=0,this.sx=this.sy=this.sw=this.sh=0},n.setStencilState=function(e,t){},n.setBlendState=function(e){},n.setDepthState=function(e){},n.setCullMode=function(e){},n.setRenderTarget=function(e){this.renderTarget=e},n.setIndexBuffer=function(e){this.indexBuffer=e},n.setVertexBuffer=function(e){e&&this.vertexBuffers.push(e)},n.getRenderTarget=function(){return this.renderTarget},n.initRenderTarget=function(e){e.initialized||(e.init(),this.targets.add(e))},n._isBrowserInterface=function(e){return this._isImageBrowserInterface(e)||this._isImageCanvasInterface(e)||this._isImageVideoInterface(e)},n._isImageBrowserInterface=function(e){return"undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap||"undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement},n._isImageCanvasInterface=function(e){return"undefined"!=typeof HTMLCanvasElement&&e instanceof HTMLCanvasElement},n._isImageVideoInterface=function(e){return"undefined"!=typeof HTMLVideoElement&&e instanceof HTMLVideoElement},n.resizeCanvas=function(e,t){var n=Math.min(this._maxPixelRatio,we.browser?window.devicePixelRatio:1),i=Math.floor(e*n),a=Math.floor(t*n);i===this.canvas.width&&a===this.canvas.height||this.setResolution(i,a)},n.setResolution=function(e,n){this.canvas.width=e,this.canvas.height=n,this.fire(t.EVENT_RESIZE,e,n)},n.updateClientRect=function(){this.clientRect=this.canvas.getBoundingClientRect()},n.getBoneLimit=function(){return this.boneLimit},n.setBoneLimit=function(e){this.boneLimit=e},n.frameStart=function(){this.renderPassIndex=0,this.renderVersion++},n.frameEnd=function(){},q(t,[{key:"width",get:function(){return this.canvas.width}},{key:"height",get:function(){return this.canvas.height}},{key:"fullscreen",get:function(){return!1},set:function(e){}},{key:"maxPixelRatio",get:function(){return this._maxPixelRatio},set:function(e){this._maxPixelRatio=e}},{key:"deviceType",get:function(){return this._deviceType}}]),t}(re);Ur.EVENT_RESIZE="resizecanvas";var zr=0,Vr=function(){function e(e){var t,n,i,a,s,r,o;void 0===e&&(e={}),this.name=void 0,this._device=void 0,this._colorBuffer=void 0,this._colorBuffers=void 0,this._depthBuffer=void 0,this._depth=void 0,this._stencil=void 0,this._samples=void 0,this.autoResolve=void 0,this._face=void 0,this.flipY=void 0,this.id=zr++;var l=arguments[1],c=arguments[2];if(e instanceof Ur?(this._colorBuffer=l,e=c):this._colorBuffer=e.colorBuffer,this._colorBuffer&&(this._colorBuffers=[this._colorBuffer]),this._depthBuffer=e.depthBuffer,this._face=null!=(t=e.face)?t:0,this._depthBuffer){var h=this._depthBuffer._format;h===hi?(this._depth=!0,this._stencil=!1):h===pi?(this._depth=!0,this._stencil=!0):(this._depth=!1,this._stencil=!1)}else{var p,d;this._depth=null==(p=e.depth)||p,this._stencil=null!=(d=e.stencil)&&d}e.colorBuffers&&(this._colorBuffers||(this._colorBuffers=[].concat(e.colorBuffers),this._colorBuffer=e.colorBuffers[0]));var u=(null==(n=this._colorBuffer)?void 0:n.device)||(null==(i=this._depthBuffer)?void 0:i.device)||e.graphicsDevice;this._device=u,null==(a=this._colorBuffers)||a.forEach((function(e){e._isRenderTarget=!0}));var m,f,g=this._device.maxSamples;this._samples=Math.min(null!=(s=e.samples)?s:1,g),u.isWebGPU&&(this._samples=this._samples>1?g:1),this.autoResolve=null==(r=e.autoResolve)||r,this.name=e.name,this.name||(this.name=null==(m=this._colorBuffer)?void 0:m.name),this.name||(this.name=null==(f=this._depthBuffer)?void 0:f.name),this.name||(this.name="Untitled"),this.flipY=null!=(o=e.flipY)&&o,this.validateMrt(),this.impl=u.createRenderTargetImpl(this)}var t=e.prototype;return t.destroy=function(){var e=this._device;e&&(e.targets.delete(this),e.renderTarget===this&&e.setRenderTarget(null),this.destroyFrameBuffers())},t.destroyFrameBuffers=function(){var e=this._device;e&&this.impl.destroy(e)},t.destroyTextureBuffers=function(){var e,t;null==(e=this._depthBuffer)||e.destroy(),this._depthBuffer=null,null==(t=this._colorBuffers)||t.forEach((function(e){e.destroy()})),this._colorBuffers=null,this._colorBuffer=null},t.resize=function(e,t){var n,i,a=this._device;this.destroyFrameBuffers(),a.renderTarget===this&&a.setRenderTarget(null),null==(n=this._depthBuffer)||n.resize(e,t),null==(i=this._colorBuffers)||i.forEach((function(n){n.resize(e,t)})),this.validateMrt(),this.impl=a.createRenderTargetImpl(this)},t.validateMrt=function(){},t.init=function(){this.impl.init(this._device,this)},t.loseContext=function(){this.impl.loseContext()},t.resolve=function(e,t){void 0===e&&(e=!0),void 0===t&&(t=!!this._depthBuffer),this._device&&this._samples>1&&this.impl.resolve(this._device,this,e,t)},t.copy=function(e,t,n){if(!this._device){if(!e._device)return!1;this._device=e._device}return this._device.copyRenderTarget(e,this,t,n)},t.getColorBuffer=function(e){var t;return null==(t=this._colorBuffers)?void 0:t[e]},q(e,[{key:"initialized",get:function(){return this.impl.initialized}},{key:"device",get:function(){return this._device}},{key:"samples",get:function(){return this._samples}},{key:"depth",get:function(){return this._depth}},{key:"stencil",get:function(){return this._stencil}},{key:"colorBuffer",get:function(){return this._colorBuffer}},{key:"depthBuffer",get:function(){return this._depthBuffer}},{key:"face",get:function(){return this._face}},{key:"width",get:function(){var e,t;return(null==(e=this._colorBuffer)?void 0:e.width)||(null==(t=this._depthBuffer)?void 0:t.width)||this._device.width}},{key:"height",get:function(){var e,t;return(null==(e=this._colorBuffer)?void 0:e.height)||(null==(t=this._depthBuffer)?void 0:t.height)||this._device.height}}]),e}(),Hr=function(){function e(){this.bindGroup=void 0}var t=e.prototype;return t.update=function(e){this.destroy();var t=e.device,n=this.createDescriptor(t,e);this.bindGroup=t.wgpu.createBindGroup(n)},t.destroy=function(){this.bindGroup=null},t.createDescriptor=function(e,t){var n=[],i=t.format,a=0;return t.uniformBuffers.forEach((function(e){var t=e.persistent?e.impl.buffer:e.allocation.gpuBuffer.buffer;n.push({binding:a++,resource:{buffer:t,offset:0,size:e.format.byteSize}})})),t.textures.forEach((function(t,s){var r=t.impl,o=i.textureFormats[s],l=r.getView(e);n.push({binding:a++,resource:l});var c=r.getSampler(e,o.sampleType);n.push({binding:a++,resource:c})})),{layout:t.format.impl.bindGroupLayout,entries:n}},e}(),Gr=function(){function e(){}return e.shaderStage=function(e){var t=0;return e&Is&&(t|=GPUShaderStage.VERTEX),e&Rs&&(t|=GPUShaderStage.FRAGMENT),e&Ds&&(t|=GPUShaderStage.COMPUTE),t},e}(),Wr=[];Wr[za]="filtering",Wr[Va]="non-filtering",Wr[Ha]="comparison";var jr=[];jr[za]="float",jr[Va]="unfilterable-float",jr[Ha]="depth";var Xr=new Rr,Yr=function(){function e(e){var t=e.device,n=this.createDescriptor(e),i=n.key,a=n.descr;this.key=Xr.get(i),this.bindGroupLayout=t.wgpu.createBindGroupLayout(a)}var t=e.prototype;return t.destroy=function(){this.bindGroupLayout=null},t.loseContext=function(){},t.getTextureSlot=function(e,t){return e.bufferFormats.length+2*t},t.createDescriptor=function(e){var t=[],n="",i=0;return e.bufferFormats.forEach((function(e){var a=Gr.shaderStage(e.visibility);n+="#"+i+"U:"+a,t.push({binding:i++,visibility:a,buffer:{type:"uniform",hasDynamicOffset:!0}})})),e.textureFormats.forEach((function(e){var a=Gr.shaderStage(e.visibility),s=e.sampleType,r=e.textureDimension,o=!1,l=jr[s];n+="#"+i+"T:"+a+"-"+l+"-"+r+"-"+o,t.push({binding:i++,visibility:a,texture:{sampleType:l,viewDimension:r,multisampled:o}});var c=Wr[s];n+="#"+i+"S:"+a+"-"+c,t.push({binding:i++,visibility:a,sampler:{type:c}})})),{key:n,descr:{entries:t}}},e}(),qr=function(){function e(){this.buffer=null}var t=e.prototype;return t.destroy=function(e){this.buffer&&(this.buffer.destroy(),this.buffer=null)},t.loseContext=function(){},t.unlock=function(e,t,n,i){var a,s,r=e.wgpu;if(!this.buffer){var o=i.byteLength+3&-4;this.buffer=e.wgpu.createBuffer({size:o,usage:n|GPUBufferUsage.COPY_DST})}var l=null!=(a=i.byteOffset)?a:0,c=new Uint8Array(null!=(s=i.buffer)?s:i,l,i.byteLength),h=new Uint8Array(this.buffer.size);h.set(c),r.queue.writeBuffer(this.buffer,0,h,0,h.length)},q(e,[{key:"initialized",get:function(){return!!this.buffer}}]),e}(),Kr=function(e){function t(t){var n;return(n=e.call(this)||this).format=null,n.format=t.format===Xn?"uint16":"uint32",n}return Z(t,e),t.prototype.unlock=function(t){var n=t.device;e.prototype.unlock.call(this,n,t.usage,GPUBufferUsage.INDEX,t.storage)},t}(qr),Zr={equals:function(e,t){if(e.size!==t.size)return!1;for(var n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}},Qr=[];Qr[Ka]="sint8",Qr[Za]="uint8",Qr[Qa]="sint16",Qr[Ja]="uint16",Qr[$a]="sint32",Qr[es]="uint32",Qr[ts]="float32";var Jr=[];Jr[Ka]="snorm8",Jr[Za]="unorm8",Jr[Qa]="snorm16",Jr[Ja]="unorm16",Jr[$a]="sint32",Jr[es]="uint32",Jr[ts]="float32";var $r=function(){function e(){this.cache=new Map}var t=e.prototype;return t.get=function(e,t){void 0===t&&(t=null);var n=this.getKey(e,t),i=this.cache.get(n);return i||(i=this.create(e,t),this.cache.set(n,i)),i},t.getKey=function(e,t){var n;return void 0===t&&(t=null),(null==e?void 0:e.renderingHashString)+"-"+(null==(n=t)?void 0:n.renderingHashString)},t.create=function(e,t){var n=[],i=function(e){for(var t=e.interleaved,i=e.instancing?"instance":"vertex",a=[],s=e.elements.length,r=0;r<s;r++){var o=e.elements[r],l=js[o.name],c=o.normalize?Jr:Qr;a.push({shaderLocation:l,offset:t?o.offset:0,format:c[o.dataType]+(o.numComponents>1?"x"+o.numComponents:"")}),t&&r!==s-1||(n.push({attributes:a,arrayStride:o.stride,stepMode:i}),a=[])}};return e&&i(e),t&&i(t),n},e}(),eo=["point-list","line-list",void 0,"line-strip","triangle-list","triangle-strip",void 0],to=["add","subtract","reverse-subtract","min","max"],no=["zero","one","src","one-minus-src","dst","one-minus-dst","src-alpha","src-alpha-saturated","one-minus-src-alpha","dst-alpha","one-minus-dst-alpha","constant","one-minus-constant"],io=["never","less","equal","less-equal","greater","not-equal","greater-equal","always"],ao=["none","back","front"],so=["keep","zero","replace","increment-clamp","increment-wrap","decrement-clamp","decrement-wrap","invert"],ro=[],oo=function(){this.pipeline=void 0,this.hashes=void 0},lo=function(){function e(e){this.lookupHashes=new Uint32Array(13),this.device=e,this.vertexBufferLayout=new $r,this.cache=new Map}var t=e.prototype;return t.get=function(e,t,n,i,a,s,r,o,l,c,h,p){var d,u,m,f,g,v,y,_,w=this.lookupHashes;w[0]=e.type,w[1]=i.id,w[2]=l,w[3]=o.key,w[4]=r.key,w[5]=null!=(d=null==t?void 0:t.renderingHash)?d:0,w[6]=null!=(u=null==n?void 0:n.renderingHash)?u:0,w[7]=a.impl.key,w[8]=null!=(m=null==(f=s[0])?void 0:f.key)?m:0,w[9]=null!=(g=null==(v=s[1])?void 0:v.key)?g:0,w[10]=null!=(y=null==(_=s[2])?void 0:_.key)?y:0,w[11]=c?h.key:0,w[12]=c?p.key:0;var b=Or(w),x=this.cache.get(b);if(x)for(var C=0;C<x.length;C++){var S=x[C];if(Zr.equals(S.hashes,w))return S.pipeline}var E=eo[e.type],T=this.getPipelineLayout(s),A=this.vertexBufferLayout.get(t,n),L=new oo;return L.hashes=new Uint32Array(w),L.pipeline=this.create(E,i,a,T,r,o,A,l,c,h,p),x?x.push(L):x=[L],this.cache.set(b,x),L.pipeline},t.getPipelineLayout=function(e){e.forEach((function(e){ro.push(e.bindGroupLayout)}));var t={bindGroupLayouts:ro},n=this.device.wgpu.createPipelineLayout(t);return ro.length=0,n},t.getBlend=function(e){var t;return e.blend&&(t={color:{operation:to[e.colorOp],srcFactor:no[e.colorSrcFactor],dstFactor:no[e.colorDstFactor]},alpha:{operation:to[e.alphaOp],srcFactor:no[e.alphaSrcFactor],dstFactor:no[e.alphaDstFactor]}}),t},t.getDepthStencil=function(e,t,n,i,a){var s,r=t.depth,o=t.stencil;return(r||o)&&(s={format:t.impl.depthFormat},r?(s.depthWriteEnabled=e.write,s.depthCompare=io[e.func]):(s.depthWriteEnabled=!1,s.depthCompare="always"),o&&n&&(s.stencilReadMas=i.readMask,s.stencilWriteMask=i.writeMask,s.stencilFront={compare:io[i.func],failOp:so[i.fail],passOp:so[i.zpass],depthFailOp:so[i.zfail]},s.stencilBack={compare:io[a.func],failOp:so[a.fail],passOp:so[a.zpass],depthFailOp:so[a.zfail]})),s},t.create=function(e,t,n,i,a,s,r,o,l,c,h){var p=this.device.wgpu,d=t.impl,u={vertex:{module:d.getVertexShaderModule(),entryPoint:d.vertexEntryPoint,buffers:r},fragment:{module:d.getFragmentShaderModule(),entryPoint:d.fragmentEntryPoint,targets:[]},primitive:{topology:e,frontFace:"ccw",cullMode:ao[o]},depthStencil:this.getDepthStencil(s,n,l,c,h),multisample:{count:n.samples},layout:i},m=n.impl.colorAttachments;if(m.length>0){var f=0;a.redWrite&&(f|=GPUColorWrite.RED),a.greenWrite&&(f|=GPUColorWrite.GREEN),a.blueWrite&&(f|=GPUColorWrite.BLUE),a.alphaWrite&&(f|=GPUColorWrite.ALPHA);var g=this.getBlend(a);m.forEach((function(e){u.fragment.targets.push({format:e.format,writeMask:f,blend:g})}))}return p.createRenderPipeline(u)},e}(),co=new Rr,ho=function(){function e(){this.format=void 0,this.multisampledBuffer=void 0}return e.prototype.destroy=function(){var e;null==(e=this.multisampledBuffer)||e.destroy(),this.multisampledBuffer=null},e}(),po=function(){function e(e){var t=this;this.initialized=!1,this.key=void 0,this.colorAttachments=[],this.depthFormat=void 0,this.hasStencil=void 0,this.depthTexture=null,this.depthTextureInternal=!1,this.assignedColorTexture=null,this.renderPassDescriptor={},this.renderTarget=e,e._colorBuffers&&e._colorBuffers.forEach((function(e,n){t.setColorAttachment(n,void 0,e.impl.format)})),this.updateKey()}var t=e.prototype;return t.destroy=function(e){var t;this.initialized=!1,this.depthTextureInternal&&(null==(t=this.depthTexture)||t.destroy(),this.depthTexture=null),this.assignedColorTexture=null,this.colorAttachments.forEach((function(e){e.destroy()})),this.colorAttachments.length=0},t.updateKey=function(){var e=this.renderTarget,t=e.samples+":"+(e.depth?this.depthFormat:"nodepth");this.colorAttachments.forEach((function(e){t+=":"+e.format})),this.key=co.get(t)},t.setDepthFormat=function(e){this.depthFormat=e,this.hasStencil="depth24plus-stencil8"===e},t.assignColorTexture=function(e){this.assignedColorTexture=e;var t=e.createView(),n=this.renderPassDescriptor.colorAttachments[0];this.renderTarget.samples>1?n.resolveTarget=t:n.view=t,this.setColorAttachment(0,void 0,e.format),this.updateKey()},t.setColorAttachment=function(e,t,n){this.colorAttachments[e]||(this.colorAttachments[e]=new ho),t&&(this.colorAttachments[e].multisampledBuffer=t),n&&(this.colorAttachments[e].format=n)},t.init=function(e,t){var n,i,a=e.wgpu;this.initDepthStencil(a,t),this.renderPassDescriptor.colorAttachments=[];for(var s=null!=(n=null==(i=t._colorBuffers)?void 0:i.length)?n:1,r=0;r<s;++r){var o,l=this.initColor(a,t,r),c=0===r&&(null==(o=this.colorAttachments[0])?void 0:o.format);(l.view||c)&&this.renderPassDescriptor.colorAttachments.push(l)}this.initialized=!0},t.initDepthStencil=function(e,t){var n=t.samples,i=t.width,a=t.height,s=t.depth,r=t.depthBuffer;if(s||r){if(r)this.depthTexture=r.impl.gpuTexture,this.setDepthFormat(r.impl.format);else{this.setDepthFormat("depth24plus-stencil8");var o={size:[i,a,1],dimension:"2d",sampleCount:n,format:this.depthFormat,usage:GPUTextureUsage.RENDER_ATTACHMENT};o.usage|=n>1?GPUTextureUsage.TEXTURE_BINDING:GPUTextureUsage.COPY_SRC,this.depthTexture=e.createTexture(o),this.depthTextureInternal=!0}this.renderPassDescriptor.depthStencilAttachment={view:this.depthTexture.createView()}}},t.initColor=function(e,t,n){var i={},a=t.samples,s=t.width,r=t.height,o=t.getColorBuffer(n),l=null;if(o){var c=1;l=o.cubemap?o.impl.createView({dimension:"2d",baseArrayLayer:t.face,arrayLayerCount:1,mipLevelCount:c}):o.impl.createView({mipLevelCount:c})}if(a>1){var h,p,d={size:[s,r,1],dimension:"2d",sampleCount:a,format:null!=(h=null==(p=this.colorAttachments[n])?void 0:p.format)?h:o.impl.format,usage:GPUTextureUsage.RENDER_ATTACHMENT},u=e.createTexture(d);this.setColorAttachment(n,u),i.view=u.createView(),i.resolveTarget=l}else i.view=l;return i},t.setupForRenderPass=function(e){for(var t,n,i=null!=(t=null==(n=this.renderPassDescriptor.colorAttachments)?void 0:n.length)?t:0,a=0;a<i;++a){var s=this.renderPassDescriptor.colorAttachments[a],r=e.colorArrayOps[a];s.clearValue=r.clearValue,s.loadOp=r.clear?"clear":"load",s.storeOp=r.store?"store":"discard"}var o=this.renderPassDescriptor.depthStencilAttachment;o&&(o.depthClearValue=e.depthStencilOps.clearDepthValue,o.depthLoadOp=e.depthStencilOps.clearDepth?"clear":"load",o.depthStoreOp=e.depthStencilOps.storeDepth?"store":"discard",o.depthReadOnly=!1,this.hasStencil&&(o.stencilClearValue=e.depthStencilOps.clearStencilValue,o.stencilLoadOp=e.depthStencilOps.clearStencil?"clear":"load",o.stencilStoreOp=e.depthStencilOps.storeStencil?"store":"discard",o.stencilReadOnly=!1))},t.loseContext=function(){this.initialized=!1},t.resolve=function(e,t,n,i){},e}(),uo=[];uo[as]=1,uo[ss]=2,uo[rs]=3,uo[os]=4,uo[is]=1,uo[ls]=2,uo[cs]=3,uo[hs]=4,uo[ns]=1,uo[ps]=2,uo[ds]=3,uo[us]=4,uo[ms]=8,uo[fs]=12,uo[gs]=16;var mo,fo=function(){function e(e,t,n){if(void 0===n&&(n=0),this.name=void 0,this.type=void 0,this.byteSize=void 0,this.offset=void 0,this.scopeId=void 0,this.count=void 0,this.shortName=e,this.name=n?e+"[0]":e,this.type=t,this.updateType=t,n)switch(t){case as:this.updateType=_s;break;case ss:this.updateType=Cs;break;case rs:this.updateType=Ss;break;case os:this.updateType=Es;break;case gs:this.updateType=Ts}this.count=n;var i=uo[t];n&&(i=at.roundUp(i,4)),this.byteSize=4*i,n&&(this.byteSize*=n)}return e.prototype.calculateOffset=function(e){var t=this.byteSize<=8?this.byteSize:16;this.count&&(t=16),e=at.roundUp(e,t),this.offset=e/4},e}(),go=function(){function e(e,t){this.byteSize=0,this.map=new Map,this.scope=e.scope,this.uniforms=t;for(var n=0,i=0;i<t.length;i++){var a=t[i];a.calculateOffset(n),n=4*a.offset+a.byteSize,a.scopeId=this.scope.resolve(a.name),this.map.set(a.name,a)}this.byteSize=at.roundUp(n,16)}var t=e.prototype;return t.get=function(e){return this.map.get(e)},t.getShaderDeclaration=function(e,t){var n="layout(set = "+e+", binding = "+t+", std140) uniform ub_"+Bs[e]+" {\n";return this.uniforms.forEach((function(e){var t=As[e.type];n+="    "+t+" "+e.shortName+(e.count?"["+e.count+"]":"")+";\n"})),n+"};\n"},e}(),vo=0,yo=((mo={})[ka]="texture2D",mo[Ba]="textureCube",mo[Ua]="texture3D",mo),_o=function(e,t){this.name=e,this.visibility=t},wo=function(e,t,n,i){void 0===n&&(n=ka),void 0===i&&(i=za),this.scopeId=void 0,this.name=e,this.visibility=t,this.textureDimension=n,this.sampleType=i},bo=function(){function e(e,t,n){var i=this;void 0===t&&(t=[]),void 0===n&&(n=[]),this.id=vo++,this.device=e,this.bufferFormats=t,this.bufferFormatsMap=new Map,t.forEach((function(e,t){return i.bufferFormatsMap.set(e.name,t)})),this.textureFormats=n;var a=e.scope;this.textureFormatsMap=new Map,n.forEach((function(e,t){i.textureFormatsMap.set(e.name,t),e.scopeId=a.resolve(e.name)})),this.impl=e.createBindGroupFormatImpl(this)}var t=e.prototype;return t.destroy=function(){this.impl.destroy()},t.getTexture=function(e){var t=this.textureFormatsMap.get(e);return void 0!==t?this.textureFormats[t]:null},t.getShaderDeclarationTextures=function(e){var t="",n=this.bufferFormats.length;return this.textureFormats.forEach((function(i){var a=yo[i.textureDimension];t+="layout(set = "+e+", binding = "+n+++") uniform "+a+" "+i.name+";\nlayout(set = "+e+", binding = "+n+++") uniform sampler "+i.name+"_sampler;\n"})),t},t.loseContext=function(){},e}(),xo=/[ \t]*(\battribute\b|\bvarying\b|\buniform\b)/g,Co=/(\battribute\b|\bvarying\b|\bout\b|\buniform\b)[ \t]*([^;]+)([;]+)/g,So="@@@",Eo=/([\w-]+)\[(.*?)\]/,To=new Set(["highp","mediump","lowp"]),Ao=new Set(["sampler2DShadow","samplerCubeShadow"]),Lo={sampler2D:ka,sampler3D:Ua,samplerCube:Ba,samplerCubeShadow:Ba,sampler2DShadow:ka,sampler2DArray:Fa,sampler2DArrayShadow:Fa},Mo=function(e,t){this.line=e;var n=e.trim().split(/\s+/);if(To.has(n[0])&&(this.precision=n.shift()),this.type=n.shift(),e.includes(","),e.includes("[")){var i=n.join(" "),a=Eo.exec(i);this.name=a[1],this.arraySize=Number(a[2]),isNaN(this.arraySize)&&(t.failed=!0)}else this.name=n.shift(),this.arraySize=0;this.isSampler=-1!==this.type.indexOf("sampler")},Po=function(){function e(){}return e.run=function(t,n,i){var a=new Map,s=e.extract(n.vshader),r=e.extract(n.fshader),o=e.processAttributes(s.attributes,n.attributes,n.processingOptions),l=e.processVaryings(s.varyings,a,!0),c=e.processVaryings(r.varyings,a,!1),h=e.processOuts(r.outs),p=s.uniforms.concat(r.uniforms),d=Array.from(new Set(p)).map((function(e){return new Mo(e,i)})),u=e.processUniforms(t,d,n.processingOptions,i),m=o+"\n"+l+"\n"+u.code,f=s.src.replace(So,m),g=c+"\n"+h+"\n"+u.code;return{vshader:f,fshader:r.src.replace(So,g),meshUniformBufferFormat:u.meshUniformBufferFormat,meshBindGroupFormat:u.meshBindGroupFormat}},e.extract=function(t){for(var n,i=[],a=[],s=[],r=[],o=So+"\n";null!==(n=xo.exec(t));){var l=n[1];switch(l){case"attribute":case"varying":case"uniform":case"out":Co.lastIndex=n.index;var c=Co.exec(t);"attribute"===l?i.push(c[2]):"varying"===l?a.push(c[2]):"out"===l?s.push(c[2]):"uniform"===l&&r.push(c[2]),t=e.cutOut(t,n.index,Co.lastIndex,o),xo.lastIndex=n.index+o.length,o=""}}return{src:t,attributes:i,varyings:a,outs:s,uniforms:r}},e.processUniforms=function(e,t,n,i){var a=[],s=[];t.forEach((function(e){e.isSampler?a.push(e):s.push(e)}));var r=[];s.forEach((function(e){if(!n.hasUniform(e.name)){var t=As.indexOf(e.type),i=new fo(e.name,t,e.arraySize);r.push(i)}}));var o=r.length?new go(e,r):null,l=[];o&&l.push(new _o(Ns,Is|Rs));var c=[];a.forEach((function(e){if(!n.hasTexture(e.name)){var t=za;"highp"===e.precision&&(t=Va),Ao.has(e.type)&&(t=Ha);var i=Lo[e.type];c.push(new wo(e.name,Is|Rs,i,t))}}));var h=new bo(e,l,c),p="";return n.uniformFormats.forEach((function(e,t){e&&(p+=e.getShaderDeclaration(t,0))})),o&&(p+=o.getShaderDeclaration(ks,0)),n.bindGroupFormats.forEach((function(e,t){e&&(p+=e.getShaderDeclarationTextures(t))})),{code:p+=h.getShaderDeclarationTextures(ks),meshUniformBufferFormat:o,meshBindGroupFormat:h}},e.processVaryings=function(t,n,i){var a="",s=i?"out":"in";return t.forEach((function(t,r){var o=e.splitToWords(t),l=o[0],c=o[1];i?n.set(c,r):r=n.get(c),a+="layout(location = "+r+") "+s+" "+l+" "+c+";\n"})),a},e.processOuts=function(e){var t="";return e.forEach((function(e,n){t+="layout(location = "+n+") out "+e+";\n"})),t},e.getTypeCount=function(e){var t=e.substring(e.length-1),n=parseInt(t,10);return isNaN(n)?1:n},e.processAttributes=function(t,n,i){var a="";return t.forEach((function(t){var s=e.splitToWords(t),r=s[0],o=s[1];if(n.hasOwnProperty(o)){var l,c=n[o],h=js[c],p=i.getVertexElement(c);if(p){var d=p.dataType;if(d!==ts&&!p.normalize){var u=e.getTypeCount(r),m="_private_"+o;l="vec"+u+" "+o+" = vec"+u+"("+m+");\n",o=m;var f=d===Ka||d===Qa||d===$a;r=1===u?f?"int":"uint":f?"ivec"+u:"uvec"+u}}a+="layout(location = "+h+") in "+r+" "+o+";\n",l&&(a+=l)}})),a},e.splitToWords=function(e){return(e=e.replace(/\s+/g," ").trim()).split(" ")},e.cutOut=function(e,t,n,i){return e.substring(0,t)+i+e.substring(n)},e}(),Oo=function(){function e(e){this._vertexCode=void 0,this._fragmentCode=void 0,this.vertexEntryPoint="main",this.fragmentEntryPoint="main",this.shader=e;var t=e.definition;t.shaderLanguage===qa?(this._vertexCode=t.vshader,this._fragmentCode=t.fshader,this.vertexEntryPoint="vertexMain",this.fragmentEntryPoint="fragmentMain",e.ready=!0):t.processingOptions&&this.process()}var t=e.prototype;return t.destroy=function(e){this._vertexCode=null,this._fragmentCode=null},t.createShaderModule=function(e,t){return this.shader.device.wgpu.createShaderModule({code:e})},t.getVertexShaderModule=function(){return this.createShaderModule(this._vertexCode,"Vertex")},t.getFragmentShaderModule=function(){return this.createShaderModule(this._fragmentCode,"Fragment")},t.process=function(){var e=this.shader,t=Po.run(e.device,e.definition,e);this._vertexCode=this.transpile(t.vshader,"vertex",e.definition.vshader),this._fragmentCode=this.transpile(t.fshader,"fragment",e.definition.fshader),this._vertexCode&&this._fragmentCode?e.ready=!0:e.failed=!0,e.meshUniformBufferFormat=t.meshUniformBufferFormat,e.meshBindGroupFormat=t.meshBindGroupFormat},t.transpile=function(e,t,n){try{var i=this.shader.device.glslang.compileGLSL(e,t);return this.shader.device.twgsl.convertSpirV2WGSL(i)}catch(i){console.error("Failed to transpile webgl "+t+" shader ["+this.shader.label+"] to WebGPU: ["+i.message+"]",{processed:e,original:n,shader:this.shader})}},t.loseContext=function(){},t.restoreContext=function(e,t){},q(e,[{key:"vertexCode",get:function(){return this._vertexCode}},{key:"fragmentCode",get:function(){return this._fragmentCode}}]),e}(),Io=function(){function e(){}return e.calcLevelDimension=function(e,t){return Math.max(e>>t,1)},e.calcLevelGpuSize=function(e,t,n,i){var a,s,r,o=Ti.get(i),l=null!=(a=null==(s=Ti.get(i))?void 0:s.size)?a:0;if(l>0)return e*t*n*l;var c=null!=(r=o.blockSize)?r:0,h=Math.floor((e+3)/4),p=Math.floor((t+3)/4),d=Math.floor((n+3)/4);return i!==yi&&i!==_i||(h=Math.max(Math.floor(h/2),1)),h*p*d*c},e.calcGpuSize=function(t,n,i,a,s,r){for(var o=0;o+=e.calcLevelGpuSize(t,n,i,a),s&&(1!==t||1!==n||1!==i);)t=Math.max(t>>1,1),n=Math.max(n>>1,1),i=Math.max(i>>1,1);return o*(r?6:1)},e}(),Ro=[];Ro[qn]="",Ro[Kn]="r8unorm",Ro[Zn]="rg8unorm",Ro[Qn]="",Ro[Jn]="",Ro[$n]="",Ro[ei]="rgba8unorm",Ro[ti]="rgba8unorm",Ro[ni]="bc1-rgba-unorm",Ro[ii]="bc2-rgba-unorm",Ro[ai]="bc3-rgba-unorm",Ro[si]="",Ro[ri]="rgba16float",Ro[oi]="",Ro[li]="rgba32float",Ro[ci]="r32float",Ro[hi]="depth32float",Ro[pi]="depth24plus-stencil8",Ro[di]="rg11b10ufloat",Ro[ui]="",Ro[mi]="",Ro[fi]="",Ro[gi]="etc2-rgb8unorm",Ro[vi]="etc2-rgba8unorm",Ro[yi]="",Ro[_i]="",Ro[wi]="",Ro[bi]="",Ro[xi]="astc-4x4-unorm",Ro[Ci]="",Ro[Si]="",Ro[Ei]="bgra8unorm";var Do=[];Do[Xt]="repeat",Do[Yt]="clamp-to-edge",Do[qt]="mirror-repeat";var ko=[];ko[On]={level:"nearest",mip:"nearest"},ko[In]={level:"linear",mip:"nearest"},ko[Rn]={level:"nearest",mip:"nearest"},ko[Dn]={level:"nearest",mip:"linear"},ko[kn]={level:"linear",mip:"nearest"},ko[Fn]={level:"linear",mip:"linear"};var Fo=function(e){},Bo=function(){function e(e){this.gpuTexture=void 0,this.view=void 0,this.samplers=[],this.descr=void 0,this.format=void 0,this.texture=e,this.format=Ro[e.format],this.create(e.device)}var t=e.prototype;return t.create=function(e){var t,n=this.texture,i=e.wgpu,a=n.requiredMipLevels;this.descr={size:{width:n.width,height:n.height,depthOrArrayLayers:n.cubemap?6:1},format:this.format,mipLevelCount:a,sampleCount:1,dimension:n.volume?"3d":"2d",usage:GPUTextureUsage.TEXTURE_BINDING|GPUTextureUsage.COPY_DST|(Ai(n.format)?0:GPUTextureUsage.RENDER_ATTACHMENT)|GPUTextureUsage.COPY_SRC},this.gpuTexture=i.createTexture(this.descr),this.texture.format===pi&&(t={format:"depth24plus",aspect:"depth-only"}),this.view=this.createView(t)},t.destroy=function(e){},t.propertyChanged=function(e){this.samplers.length=0},t.getView=function(e){return this.uploadImmediate(e,this.texture),this.view},t.createView=function(e){var t,n,i,a,s,r,o,l=null!=e?e:{},c=this.descr,h=this.texture,p=function(){return h.cubemap?"cube":h.volume?"3d":"2d"},d={format:null!=(t=l.format)?t:c.format,dimension:null!=(n=l.dimension)?n:p(),aspect:null!=(i=l.aspect)?i:"all",baseMipLevel:null!=(a=l.baseMipLevel)?a:0,mipLevelCount:null!=(s=l.mipLevelCount)?s:c.mipLevelCount,baseArrayLayer:null!=(r=l.baseArrayLayer)?r:0,arrayLayerCount:null!=(o=l.arrayLayerCount)?o:c.depthOrArrayLayers};return this.gpuTexture.createView(d)},t.getSampler=function(e,t){var n=this.samplers[t];if(!n){var i=this.texture,a={addressModeU:Do[i.addressU],addressModeV:Do[i.addressV],addressModeW:Do[i.addressW]};!t&&i.compareOnRead&&(t=Ha),t===Ha?(a.compare="less",a.magFilter="linear",a.minFilter="linear"):t===Va||this.texture.format===li||this.texture.format===pi||this.texture.format===ri?(a.magFilter="nearest",a.minFilter="nearest",a.mipmapFilter="nearest"):(a.magFilter=ko[i.magFilter].level,a.minFilter=ko[i.minFilter].level,a.mipmapFilter=ko[i.minFilter].mip);var s="linear"===a.minFilter&&"linear"===a.magFilter&&"linear"===a.mipmapFilter;a.maxAnisotropy=s?at.clamp(Math.round(i._anisotropy),1,e.maxTextureAnisotropy):1,n=e.wgpu.createSampler(a),this.samplers[t]=n}return n},t.loseContext=function(){},t.uploadImmediate=function(e,t){(t._needsUpload||t._needsMipmapsUpload)&&(this.uploadData(e),t._needsUpload=!1,t._needsMipmapsUpload=!1)},t.uploadData=function(e){var t=this.texture;if(t._levels){for(var n=!1,i=t.requiredMipLevels,a=0;a<i;a++){var s=t._levels[a];if(s)if(t.cubemap)for(var r=0;r<6;r++){var o=s[r];o&&(this.isExternalImage(o)?(this.uploadExternalImage(e,o,a,r),n=!0):ArrayBuffer.isView(o)&&(this.uploadTypedArrayData(e,o,a,r),n=!0))}else t._volume||(this.isExternalImage(s)?(this.uploadExternalImage(e,s,a,0),n=!0):ArrayBuffer.isView(s)&&(this.uploadTypedArrayData(e,s,a,0),n=!0))}n&&t.mipmaps&&!Ai(t.format)&&e.mipmapRenderer.generate(this)}},t.isExternalImage=function(e){return e instanceof ImageBitmap||e instanceof HTMLVideoElement||e instanceof HTMLCanvasElement||e instanceof OffscreenCanvas},t.uploadExternalImage=function(e,t,n,i){var a={source:t,origin:[0,0],flipY:!1},s={texture:this.gpuTexture,mipLevel:n,origin:[0,0,i],aspect:"all"},r={width:this.descr.size.width,height:this.descr.size.height,depthOrArrayLayers:1};e.submit(),Fo(t instanceof HTMLCanvasElement&&t.getContext("2d")),e.wgpu.queue.copyExternalImageToTexture(a,s,r)},t.uploadTypedArrayData=function(e,t,n,i){var a=this.texture,s=e.wgpu,r={texture:this.gpuTexture,origin:[0,0,i],mipLevel:n},o=Io.calcLevelDimension(a.width,n),l=Io.calcLevelDimension(a.height,n);Io.calcLevelGpuSize(o,l,1,a.format);var c,h,p=Ti.get(a.format);if(p.size)c={offset:0,bytesPerRow:p.size*o,rowsPerImage:l},h={width:o,height:l};else if(p.blockSize){var d=function(e){return Math.floor((e+3)/4)};c={offset:0,bytesPerRow:p.blockSize*d(o),rowsPerImage:d(l)},h={width:Math.max(4,o),height:Math.max(4,l)}}e.submit(),s.queue.writeTexture(r,t,c,h)},e}(),No=function(e){function t(t){return e.call(this)||this}Z(t,e);var n=t.prototype;return n.destroy=function(t){e.prototype.destroy.call(this,t)},n.unlock=function(t){var n=t.device;e.prototype.unlock.call(this,n,void 0,GPUBufferUsage.UNIFORM,t.storage)},t}(qr),Uo=function(e){function t(t,n){return e.call(this)||this}Z(t,e);var n=t.prototype;return n.destroy=function(t){e.prototype.destroy.call(this,t)},n.unlock=function(t){var n=t.device;e.prototype.unlock.call(this,n,t.usage,GPUBufferUsage.VERTEX,t.storage)},t}(qr),zo=/[ \t]*#(ifn?def|if|endif|else|elif|define|undef|extension)/g,Vo=/define[ \t]+([^\n]+)\r?(?:\n|$)/g,Ho=/extension[ \t]+([\w-]+)[ \t]*:[ \t]*(enable|require)/g,Go=/undef[ \t]+([^\n]+)\r?(?:\n|$)/g,Wo=/(ifdef|ifndef|if)[ \t]*([^\r\n]+)\r?\n/g,jo=/(endif|else|elif)([ \t]+[^\r\n]+)?\r?(?:\n|$)/g,Xo=/([\w-]+)/,Yo=/(!|\s)?defined\(([\w-]+)\)/,qo=/[><=|&+-]/g,Ko=function(){function e(){}return e.run=function(e,t){void 0===t&&(t=!1),e=(e=e.replace(/\/\*[\s\S]*?\*\/|([^\\:]|^)\/\/.*$/gm,"$1")).split(/\r?\n/).map((function(e){return e.trimEnd()})).join("\n");var n=new Map;if(t){var i=new Map,a=/(pcFragColor[1-8])\b/g,s=e.match(a);null==s||s.forEach((function(e){var t,n=parseInt(e.charAt(e.length-1),10);i.set(n,(null!=(t=i.get(n))?t:0)+1)})),i.forEach((function(e,t){1===e&&n.set("REMOVE_COLOR_ATTACHMENT_"+t,"")}))}e=this._preprocess(e,n);var r=new Map;return n.forEach((function(e,t){Number.isInteger(parseFloat(e))&&!e.includes(".")&&r.set(t,e)})),null!==e&&(e=e.split(/\r?\n/).map((function(e){return""===e.trim()?"":e})).map((function(e){return r.forEach((function(t,n){e=e.replace(new RegExp("\\["+n+"\\]","g"),"["+t+"]")})),e})).join("\n"),e=e.replace(/(\n\n){3,}/gm,"\n\n")),e},e._preprocess=function(t,n){void 0===n&&(n=new Map);for(var i,a=t,s=[],r=!1;null!==(i=zo.exec(t));){var o=i[1];switch(o){case"define":Vo.lastIndex=i.index;var l=Vo.exec(t);r||(r=null===l);var c=l[1];Xo.lastIndex=l.index;var h=Xo.exec(c)[1],p=c.substring(h.length).trim();""===p&&(p="true"),e._keep(s)&&n.set(h,p),zo.lastIndex=l.index+l[0].length;break;case"undef":Go.lastIndex=i.index;var d=Go.exec(t),u=d[1].trim();e._keep(s)&&n.delete(u),zo.lastIndex=d.index+d[0].length;break;case"extension":Ho.lastIndex=i.index;var m=Ho.exec(t);if(r||(r=null===m),m){var f=m[1];e._keep(s)&&n.set(f,"true")}zo.lastIndex=m.index+m[0].length;break;case"ifdef":case"ifndef":case"if":Wo.lastIndex=i.index;var g=Wo.exec(t),v=g[2],y=e.evaluate(v,n);r||(r=y.error);var _=y.result;"ifndef"===o&&(_=!_),s.push({anyKeep:_,keep:_,start:i.index,end:Wo.lastIndex}),zo.lastIndex=g.index+g[0].length;break;case"endif":case"else":case"elif":jo.lastIndex=i.index;var w=jo.exec(t),b=s.pop(),x=b.keep?t.substring(b.end,i.index):"";t=t.substring(0,b.start)+x+t.substring(jo.lastIndex),zo.lastIndex=b.start+x.length;var C=w[1];if("else"===C||"elif"===C){var S=!1;if(!b.anyKeep)if("else"===C)S=!b.keep;else{var E=e.evaluate(w[2],n);S=E.result,r||(r=E.error)}s.push({anyKeep:b.anyKeep||S,keep:S,start:zo.lastIndex,end:zo.lastIndex})}}}return r?(console.warn("Failed to preprocess shader: ",{source:a}),a):t},e._keep=function(e){for(var t=0;t<e.length;t++)if(!e[t].keep)return!1;return!0},e.evaluate=function(e,t){var n=null===qo.exec(e),i=!1,a=Yo.exec(e);a&&(i="!"===a[1],e=a[2]),e=e.trim();var s=t.has(e);return i&&(s=!s),{result:s,error:!n}},e}(),Zo=0,Qo=function(){function e(e,t){this.meshUniformBufferFormat=void 0,this.meshBindGroupFormat=void 0,this.id=Zo++,this.device=e,this.definition=t,this.name=t.name||"Untitled",t.vshader=Ko.run(t.vshader),t.fshader=Ko.run(t.fshader,e.isWebGL2),this.init(),this.impl=e.createShaderImpl(this)}var t=e.prototype;return t.init=function(){this.ready=!1,this.failed=!1},t.destroy=function(){this.device.onDestroyShader(this),this.impl.destroy(this)},t.loseContext=function(){this.init(),this.impl.loseContext()},t.restoreContext=function(){this.impl.restoreContext(this.device,this)},q(e,[{key:"label",get:function(){return"Shader Id "+this.id+" "+this.name}}]),e}(),Jo=0,$o=function(){function e(e,t,n){this.renderVersionUpdated=-1,this.uniformBuffers=void 0,this.uniformBufferOffsets=[],this.id=Jo++,this.device=e,this.format=t,this.dirty=!0,this.impl=e.createBindGroupImpl(this),this.textures=[],this.uniformBuffers=[],this.defaultUniformBuffer=n,n&&this.setUniformBuffer(Ns,n)}var t=e.prototype;return t.destroy=function(){this.impl.destroy(),this.impl=null,this.format=null,this.defaultUniformBuffer=null},t.setUniformBuffer=function(e,t){var n=this.format.bufferFormatsMap.get(e);this.uniformBuffers[n]!==t&&(this.uniformBuffers[n]=t,this.dirty=!0)},t.setTexture=function(e,t){var n=this.format.textureFormatsMap.get(e);this.textures[n]!==t?(this.textures[n]=t,this.dirty=!0):this.renderVersionUpdated<t.renderVersionDirty&&(this.dirty=!0)},t.update=function(){for(var e=this.format.textureFormats,t=0;t<e.length;t++){var n=e[t],i=n.scopeId.value;this.setTexture(n.name,i)}this.uniformBufferOffsets.length=this.uniformBuffers.length;for(var a=0;a<this.uniformBuffers.length;a++){var s=this.uniformBuffers[a];this.uniformBufferOffsets[a]=s.offset,this.renderVersionUpdated<s.renderVersionDirty&&(this.dirty=!0)}this.dirty&&(this.dirty=!1,this.renderVersionUpdated=this.device.renderVersion,this.impl.update(this))},e}(),el=function(e){this.device=void 0,this.device=e},tl=function(){this.gpuBuffer=void 0,this.stagingBuffer=void 0,this.offset=void 0,this.size=void 0},nl=function(){this.storage=void 0,this.gpuBuffer=void 0,this.offset=void 0},il=function(){function e(e,t,n){this.bufferSize=void 0,this.gpuBuffers=[],this.stagingBuffers=[],this.usedBuffers=[],this.activeBuffer=null,this.device=e,this.bufferSize=t,this.bufferAlignment=n}var t=e.prototype;return t.destroy=function(){var e=this;this.gpuBuffers.forEach((function(t){t.destroy(e.device)})),this.gpuBuffers=null,this.stagingBuffers.forEach((function(t){t.destroy(e.device)})),this.stagingBuffers=null,this.usedBuffers=null,this.activeBuffer=null},t.alloc=function(e,t){if(this.activeBuffer){var n=at.roundUp(this.activeBuffer.size,this.bufferAlignment);this.bufferSize-n<t&&this.scheduleSubmit()}if(!this.activeBuffer){var i=this.gpuBuffers.pop();i||(i=this.createBuffer(this.device,this.bufferSize,!1));var a=this.stagingBuffers.pop();a||(a=this.createBuffer(this.device,this.bufferSize,!0)),this.activeBuffer=new tl,this.activeBuffer.stagingBuffer=a,this.activeBuffer.gpuBuffer=i,this.activeBuffer.offset=0,this.activeBuffer.size=0}var s=this.activeBuffer,r=at.roundUp(s.size,this.bufferAlignment);e.gpuBuffer=s.gpuBuffer,e.offset=r,e.storage=s.stagingBuffer.alloc(r,t),s.size=r+t},t.scheduleSubmit=function(){this.activeBuffer&&(this.usedBuffers.push(this.activeBuffer),this.activeBuffer=null)},t.submit=function(){this.scheduleSubmit()},e}(),al=[];al[as]=function(e,t,n){e.storageFloat32[n]=t},al[ss]=function(e,t,n){var i=e.storageFloat32;i[n]=t[0],i[n+1]=t[1]},al[rs]=function(e,t,n){var i=e.storageFloat32;i[n]=t[0],i[n+1]=t[1],i[n+2]=t[2]},al[os]=function(e,t,n){var i=e.storageFloat32;i[n]=t[0],i[n+1]=t[1],i[n+2]=t[2],i[n+3]=t[3]},al[is]=function(e,t,n){e.storageInt32[n]=t},al[ls]=function(e,t,n){var i=e.storageInt32;i[n]=t[0],i[n+1]=t[1]},al[cs]=function(e,t,n){var i=e.storageInt32;i[n]=t[0],i[n+1]=t[1],i[n+2]=t[2]},al[hs]=function(e,t,n){var i=e.storageInt32;i[n]=t[0],i[n+1]=t[1],i[n+2]=t[2],i[n+3]=t[3]},al[ms]=function(e,t,n){var i=e.storageFloat32;i[n]=t[0],i[n+1]=t[1],i[n+4]=t[2],i[n+5]=t[3],i[n+8]=t[4],i[n+9]=t[5]},al[fs]=function(e,t,n){var i=e.storageFloat32;i[n]=t[0],i[n+1]=t[1],i[n+2]=t[2],i[n+4]=t[3],i[n+5]=t[4],i[n+6]=t[5],i[n+8]=t[6],i[n+9]=t[7],i[n+10]=t[8]},al[_s]=function(e,t,n,i){for(var a=e.storageFloat32,s=0;s<i;s++)a[n+4*s]=t[s]},al[Cs]=function(e,t,n,i){for(var a=e.storageFloat32,s=0;s<i;s++)a[n+4*s]=t[2*s],a[n+4*s+1]=t[2*s+1]},al[Ss]=function(e,t,n,i){for(var a=e.storageFloat32,s=0;s<i;s++)a[n+4*s]=t[3*s],a[n+4*s+1]=t[3*s+1],a[n+4*s+2]=t[3*s+2]};var sl=function(){function e(e,t,n){if(void 0===n&&(n=!0),this.device=void 0,this.persistent=void 0,this.allocation=void 0,this.storageFloat32=void 0,this.storageInt32=void 0,this.renderVersionDirty=0,this.device=e,this.format=t,this.persistent=n,n){this.impl=e.createUniformBufferImpl(this);var i=new ArrayBuffer(t.byteSize);this.assignStorage(new Int32Array(i)),e._vram.ub+=this.format.byteSize}else this.allocation=new nl}var t=e.prototype;return t.destroy=function(){if(this.persistent){var e=this.device;this.impl.destroy(e),e._vram.ub-=this.format.byteSize}},t.assignStorage=function(e){this.storageInt32=e,this.storageFloat32=new Float32Array(e.buffer,e.byteOffset,e.byteLength/4)},t.loseContext=function(){var e;null==(e=this.impl)||e.loseContext()},t.setUniform=function(e){var t=e.offset,n=e.scopeId.value;if(null!=n){var i=al[e.updateType];i?i(this,n,t,e.count):this.storageFloat32.set(n,t)}},t.set=function(e){var t=this.format.map.get(e);t&&this.setUniform(t)},t.update=function(){var e=this.persistent;if(!e){var t=this.allocation,n=t.gpuBuffer;this.device.dynamicBuffers.alloc(t,this.format.byteSize),this.assignStorage(t.storage),n!==t.gpuBuffer&&(this.renderVersionDirty=this.device.renderVersion)}for(var i=this.format.uniforms,a=0;a<i.length;a++)this.setUniform(i[a]);e?this.impl.unlock(this):(this.storageFloat32=null,this.storageInt32=null)},q(e,[{key:"offset",get:function(){return this.persistent?0:this.allocation.offset}}]),e}(),rl={type:Di,base:0,count:4,indexed:!1},ol=function(){function e(e){var t="\n\n            struct ub_mesh {\n                color : vec4f,\n                depth: f32\n            }\n\n            @group(0) @binding(0) var<uniform> ubMesh : ub_mesh;\n\n            var<private> pos : array<vec2f, 4> = array<vec2f, 4>(\n                vec2(-1.0, 1.0), vec2(1.0, 1.0),\n                vec2(-1.0, -1.0), vec2(1.0, -1.0)\n            );\n\n            struct VertexOutput {\n                @builtin(position) position : vec4f\n            }\n\n            @vertex\n            fn vertexMain(@builtin(vertex_index) vertexIndex : u32) -> VertexOutput {\n                var output : VertexOutput;\n                output.position = vec4(pos[vertexIndex], ubMesh.depth, 1.0);\n                return output;\n            }\n\n            @fragment\n            fn fragmentMain() -> @location(0) vec4f {\n                return ubMesh.color;\n            }\n        ";this.shader=new Qo(e,{name:"WebGPUClearRendererShader",shaderLanguage:qa,vshader:t,fshader:t}),this.uniformBuffer=new sl(e,new go(e,[new fo("color",os),new fo("depth",as)]),!1);var n=new bo(e,[new _o(Ns,Is|Rs)]);this.bindGroup=new $o(e,n,this.uniformBuffer),this.colorData=new Float32Array(4),this.colorId=e.scope.resolve("color"),this.depthId=e.scope.resolve("depth")}var t=e.prototype;return t.destroy=function(){this.shader.destroy(),this.shader=null,this.uniformBuffer.destroy(),this.uniformBuffer=null,this.bindGroup.destroy(),this.bindGroup=null},t.clear=function(e,t,n,i){var a,s=null!=(a=(n=n||i).flags)?a:i.flags;if(0!==s){if(s&yn&&t.colorBuffer){var r,o=null!=(r=n.color)?r:i.color;this.colorData.set(o),e.setBlendState(yr.NOBLEND)}else e.setBlendState(yr.NOWRITE);if(this.colorId.setValue(this.colorData),s&_n&&t.depth){var l,c=null!=(l=n.depth)?l:i.depth;this.depthId.setValue(c),e.setDepthState(xr.WRITEDEPTH)}else this.depthId.setValue(1),e.setDepthState(xr.NODEPTH);s&wn&&t.stencil,e.setCullMode(An),e.setShader(this.shader);var h=this.bindGroup;h.defaultUniformBuffer.update(),h.update(),e.setBindGroup(ks,h),e.draw(rl)}},e}(),ll=function(){function e(e){this.device=void 0,this.device=e;var t="\n \n            var<private> pos : array<vec2f, 4> = array<vec2f, 4>(\n                vec2(-1.0, 1.0), vec2(1.0, 1.0),\n                vec2(-1.0, -1.0), vec2(1.0, -1.0)\n            );\n\n            struct VertexOutput {\n                @builtin(position) position : vec4f,\n                @location(0) texCoord : vec2f\n            };\n\n            @vertex\n            fn vertexMain(@builtin(vertex_index) vertexIndex : u32) -> VertexOutput {\n              var output : VertexOutput;\n              output.texCoord = pos[vertexIndex] * vec2f(0.5, -0.5) + vec2f(0.5);\n              output.position = vec4f(pos[vertexIndex], 0, 1);\n              return output;\n            }\n\n            @group(0) @binding(0) var imgSampler : sampler;\n            @group(0) @binding(1) var img : texture_2d<f32>;\n\n            @fragment\n            fn fragmentMain(@location(0) texCoord : vec2f) -> @location(0) vec4f {\n              return textureSample(img, imgSampler, texCoord);\n            }\n        ";this.shader=new Qo(e,{name:"WebGPUMipmapRendererShader",shaderLanguage:qa,vshader:t,fshader:t}),this.minSampler=e.wgpu.createSampler({minFilter:"linear"})}var t=e.prototype;return t.destroy=function(){this.shader.destroy(),this.shader=null},t.generate=function(e){var t,n=e.descr;if(!(n.mipLevelCount<=1||e.texture.volume)){for(var i=this.device,a=i.wgpu,s=this.shader.impl,r=a.createRenderPipeline({layout:"auto",vertex:{module:s.getVertexShaderModule(),entryPoint:s.vertexEntryPoint},fragment:{module:s.getFragmentShaderModule(),entryPoint:s.fragmentEntryPoint,targets:[{format:n.format}]},primitive:{topology:"triangle-strip"}}),o=e.texture.cubemap?6:1,l=[],c=0;c<o;c++)l.push(e.createView({dimension:"2d",baseMipLevel:0,mipLevelCount:1,baseArrayLayer:c}));for(var h=null!=(t=i.commandEncoder)?t:a.createCommandEncoder(),p=1;p<n.mipLevelCount;p++)for(var d=0;d<o;d++){var u=e.createView({dimension:"2d",baseMipLevel:p,mipLevelCount:1,baseArrayLayer:d}),m=h.beginRenderPass({colorAttachments:[{view:u,loadOp:"clear",storeOp:"store"}]}),f=a.createBindGroup({layout:r.getBindGroupLayout(0),entries:[{binding:0,resource:this.minSampler},{binding:1,resource:l[d]}]});m.setPipeline(r),m.setBindGroup(0,f),m.draw(4),m.end(),l[d]=u}if(!i.commandEncoder){var g=h.finish();i.addCommandBuffer(g)}i.pipeline=null}},e}(),cl=function(e){function t(t,n,i){var a;return(a=e.call(this,t)||this).buffer=null,a.mappedRange=null,a.buffer=t.wgpu.createBuffer({size:n,usage:i?GPUBufferUsage.MAP_WRITE|GPUBufferUsage.COPY_SRC:GPUBufferUsage.UNIFORM|GPUBufferUsage.COPY_DST,mappedAtCreation:i}),i&&a.onAvailable(),t._vram.ub+=n,a}Z(t,e);var n=t.prototype;return n.destroy=function(e){e._vram.ub-=this.buffer.size,this.buffer.destroy(),this.buffer=null},n.onAvailable=function(){this.mappedRange=this.buffer.getMappedRange()},n.alloc=function(e,t){return new Int32Array(this.mappedRange,e,t/4)},t}(el),hl=function(e){function t(){for(var t,n=arguments.length,i=new Array(n),a=0;a<n;a++)i[a]=arguments[a];return(t=e.call.apply(e,[this].concat(i))||this).pendingStagingBuffers=[],t}Z(t,e);var n=t.prototype;return n.createBuffer=function(e,t,n){return new cl(e,t,n)},n.submit=function(){e.prototype.submit.call(this);var t=this.usedBuffers.length;if(t){for(var n=this.device,i=this.gpuBuffers,a=n.wgpu.createCommandEncoder(),s=t-1;s>=0;s--){var r=this.usedBuffers[s],o=r.stagingBuffer,l=r.gpuBuffer,c=r.offset,h=r.size,p=o.buffer;p.unmap(),a.copyBufferToBuffer(p,c,l.buffer,c,h),i.push(l)}var d=a.finish();n.addCommandBuffer(d,!0);for(var u=0;u<t;u++){var m=this.usedBuffers[u].stagingBuffer;this.pendingStagingBuffers.push(m)}this.usedBuffers.length=0}},n.onCommandBuffersSubmitted=function(){var e=this,t=this.pendingStagingBuffers.length;if(t){for(var n=function(){var t=e.pendingStagingBuffers[i];t.buffer.mapAsync(GPUMapMode.WRITE).then((function(){t.onAvailable(),e.stagingBuffers.push(t)}))},i=0;i<t;i++)n();this.pendingStagingBuffers.length=0}},t}(il),pl=function(){function e(){this.frameAllocations=[],this.pastFrameAllocations=new Map,this._enabled=!1,this._enableRequest=!1,this._frameTime=0}var t=e.prototype;return t.loseContext=function(){this.pastFrameAllocations.clear()},t.processEnableRequest=function(){this._enableRequest!==this._enabled&&(this._enabled=this._enableRequest,this._enabled||(this._frameTime=0))},t.request=function(e){this.pastFrameAllocations.set(e,this.frameAllocations),this.frameAllocations=[]},t.report=function(e,t){if(t){var n=this.pastFrameAllocations.get(e);if(t.length>0&&(this._frameTime=t[0]),ae.get(D))for(var i=0;i<n.length;++i)n[i]}this.pastFrameAllocations.delete(e)},t.getSlot=function(e){var t=this.frameAllocations.length;return this.frameAllocations.push(e),t},q(e,[{key:"enabled",get:function(){return this._enableRequest},set:function(e){this._enableRequest=e}},{key:"slotCount",get:function(){return this.frameAllocations.length}}]),e}(),dl=function(){function e(e,t,n){this.querySet=void 0,this.stagingBuffers=[],this.activeStagingBuffer=null,this.bytesPerSlot=void 0,this.device=e,this.capacity=n,this.bytesPerSlot=t?8:4;var i=e.wgpu;this.querySet=i.createQuerySet({type:t?"timestamp":"occlusion",count:n}),this.queryBuffer=i.createBuffer({size:this.bytesPerSlot*n,usage:GPUBufferUsage.QUERY_RESOLVE|GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST})}var t=e.prototype;return t.destroy=function(){var e,t;null==(e=this.querySet)||e.destroy(),this.querySet=null,null==(t=this.queryBuffer)||t.destroy(),this.queryBuffer=null,this.activeStagingBuffer=null,this.stagingBuffers.forEach((function(e){e.destroy()})),this.stagingBuffers=null},t.getStagingBuffer=function(){var e=this.stagingBuffers.pop();return e||(e=this.device.wgpu.createBuffer({size:this.queryBuffer.size,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ})),e},t.resolve=function(e){var t=this.device,n=t.wgpu.createCommandEncoder();n.resolveQuerySet(this.querySet,0,e,this.queryBuffer,0);var i=this.getStagingBuffer();this.activeStagingBuffer=i,n.copyBufferToBuffer(this.queryBuffer,0,i,0,this.bytesPerSlot*e);var a=n.finish();t.addCommandBuffer(a)},t.request=function(e,t){var n=this,i=this.activeStagingBuffer;return this.activeStagingBuffer=null,i.mapAsync(GPUMapMode.READ).then((function(){for(var a=new BigInt64Array(i.getMappedRange()),s=[],r=0;r<e;r++)s.push(1e-6*Number(a[2*r+1]-a[2*r]));return i.unmap(),n.stagingBuffers.push(i),{renderVersion:t,timings:s}}))},e}(),ul=function(e){function t(t){var n;return(n=e.call(this)||this).device=void 0,n.frameGPUMarkerSlot=void 0,n.device=t,n.timestampQueriesSet=t.supportsTimestampQuery?new dl(t,!0,512):null,n}Z(t,e);var n=t.prototype;return n.destroy=function(){var e;null==(e=this.timestampQueriesSet)||e.destroy(),this.timestampQueriesSet=null},n.frameMarker=function(e){if(this.timestampQueriesSet){var t=this.device.wgpu.createCommandEncoder();this.frameGPUMarkerSlot=e?this.getSlot("GpuFrame"):this.frameGPUMarkerSlot,t.writeTimestamp(this.timestampQueriesSet.querySet,2*this.frameGPUMarkerSlot+(e?0:1));var n=t.finish();this.device.addCommandBuffer(n,e)}},n.frameStart=function(){this.processEnableRequest(),this._enabled&&this.frameMarker(!0)},n.frameEnd=function(){var e;this._enabled&&(this.frameMarker(!1),null==(e=this.timestampQueriesSet)||e.resolve(2*this.slotCount))},n.request=function(){var t=this;if(this._enabled){var n,i=this.device.renderVersion;null==(n=this.timestampQueriesSet)||n.request(this.slotCount,i).then((function(e){t.report(e.renderVersion,e.timings)})),e.prototype.request.call(this,i)}},t}(pl),ml=function(){function e(e){this.device=void 0,this.pipelineCache=new Map,this.device=e;var t="\n \n            var<private> pos : array<vec2f, 4> = array<vec2f, 4>(\n                vec2(-1.0, 1.0), vec2(1.0, 1.0), vec2(-1.0, -1.0), vec2(1.0, -1.0)\n            );\n\n            struct VertexOutput {\n                @builtin(position) position : vec4f,\n            };\n\n            @vertex\n            fn vertexMain(@builtin(vertex_index) vertexIndex : u32) -> VertexOutput {\n              var output : VertexOutput;\n              output.position = vec4f(pos[vertexIndex], 0, 1);\n              return output;\n            }\n\n            @group(0) @binding(0) var img : texture_depth_multisampled_2d;\n\n            @fragment\n            fn fragmentMain(@builtin(position) fragColor: vec4f) -> @location(0) vec4f {\n                // load th depth value from sample index 0\n                var depth = textureLoad(img, vec2i(fragColor.xy), 0u);\n                return vec4<f32>(depth, 0.0, 0.0, 0.0);\n            }\n        ";this.shader=new Qo(e,{name:"WebGPUResolverDepthShader",shaderLanguage:qa,vshader:t,fshader:t})}var t=e.prototype;return t.destroy=function(){this.shader.destroy(),this.shader=null,this.pipelineCache=null},t.getPipeline=function(e){var t=this.pipelineCache.get(e);return t||(t=this.createPipeline(e),this.pipelineCache.set(e,t)),t},t.createPipeline=function(e){var t=this.shader.impl;return this.device.wgpu.createRenderPipeline({layout:"auto",vertex:{module:t.getVertexShaderModule(),entryPoint:t.vertexEntryPoint},fragment:{module:t.getFragmentShaderModule(),entryPoint:t.fragmentEntryPoint,targets:[{format:e}]},primitive:{topology:"triangle-strip"}})},t.resolveDepth=function(e,t,n){for(var i=this.device,a=i.wgpu,s=this.getPipeline(n.format),r=t.depthOrArrayLayers,o=0;o<r;o++){var l=t.createView({dimension:"2d",aspect:"depth-only",baseMipLevel:0,mipLevelCount:1,baseArrayLayer:o}),c=n.createView({dimension:"2d",baseMipLevel:0,mipLevelCount:1,baseArrayLayer:o}),h=e.beginRenderPass({colorAttachments:[{view:c,loadOp:"clear",storeOp:"store"}]}),p=a.createBindGroup({layout:s.getBindGroupLayout(0),entries:[{binding:0,resource:l}]});h.setPipeline(s),h.setBindGroup(0,p),h.draw(4),h.end()}i.pipeline=null},e}(),fl=function(e){function t(t,n){var i,a,s;return void 0===n&&(n={}),(s=e.call(this,t,n)||this).renderPipeline=new lo(J(s)),s.clearRenderer=void 0,s.mipmapRenderer=void 0,s.pipeline=void 0,s.bindGroupFormats=[],s.commandEncoder=void 0,s.commandBuffers=[],s.limits=void 0,(n=s.initOptions).alpha=null==(i=n.alpha)||i,s.backBufferAntialias=null!=(a=n.antialias)&&a,s.isWebGPU=!0,s._deviceType=Ps,s.setupPassEncoderDefaults(),s}Z(t,e);var n=t.prototype;return n.destroy=function(){this.clearRenderer.destroy(),this.clearRenderer=null,this.mipmapRenderer.destroy(),this.mipmapRenderer=null,this.resolver.destroy(),this.resolver=null,e.prototype.destroy.call(this)},n.initDeviceCaps=function(){this.disableParticleSystem=!0;var e=this.gpuAdapter.limits;this.limits=e,this.precision="highp",this.maxPrecision="highp",this.maxSamples=4,this.maxTextures=16,this.maxTextureSize=e.maxTextureDimension2D,this.maxCubeMapSize=e.maxTextureDimension2D,this.maxVolumeSize=e.maxTextureDimension3D,this.maxColorAttachments=e.maxColorAttachments,this.maxPixelRatio=1,this.maxAnisotropy=16,this.supportsInstancing=!0,this.supportsUniformBuffers=!0,this.supportsVolumeTextures=!0,this.supportsBoneTextures=!0,this.supportsMorphTargetTexturesCore=!0,this.supportsAreaLights=!0,this.supportsDepthShadow=!0,this.supportsGpuParticles=!1,this.supportsMrt=!0,this.extUintElement=!0,this.extTextureFloat=!0,this.textureFloatRenderable=!0,this.extTextureHalfFloat=!0,this.textureHalfFloatRenderable=!0,this.textureHalfFloatUpdatable=!0,this.boneLimit=1024,this.supportsImageBitmap=!0,this.extStandardDerivatives=!0,this.extBlendMinmax=!0,this.areaLightLutFormat=this.textureFloatFilterable?li:ti,this.supportsTextureFetch=!0,this.samples=this.backBufferAntialias?4:1},n.initWebGpu=function(){var e=X(W().mark((function e(t,n){var i,a,s,r,o,l,c=this;return W().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(window.navigator.gpu){e.next=2;break}throw new Error("Unable to retrieve GPU. Ensure you are using a browser that supports WebGPU rendering.");case 2:return e.next=4,Promise.all([import(n).then((function(e){return twgsl(n.replace(".js",".wasm"))})),import(t).then((function(e){return e.default()}))]);case 4:return i=e.sent,this.twgsl=i[0],this.glslang=i[1],a={powerPreference:"default"!==this.initOptions.powerPreference?this.initOptions.powerPreference:void 0},e.next=10,window.navigator.gpu.requestAdapter(a);case 10:return this.gpuAdapter=e.sent,s=[],r=function(e){var t=c.gpuAdapter.features.has(e);return t&&s.push(e),t},this.textureFloatFilterable=r("float32-filterable"),this.extCompressedTextureS3TC=r("texture-compression-bc"),this.extCompressedTextureETC=r("texture-compression-etc2"),this.extCompressedTextureASTC=r("texture-compression-astc"),this.supportsTimestampQuery=r("timestamp-query"),o={requiredFeatures:s,requiredLimits:{},defaultQueue:{label:"Default Queue"}},e.next=21,this.gpuAdapter.requestDevice(o);case 21:return this.wgpu=e.sent,this.initDeviceCaps(),this.gpuContext=this.canvas.getContext("webgpu"),l=navigator.gpu.getPreferredCanvasFormat(),this.backBufferFormat="rgba8unorm"===l?ti:Ei,this.canvasConfig={device:this.wgpu,colorSpace:"srgb",alphaMode:this.initOptions.alpha?"premultiplied":"opaque",format:l,usage:GPUTextureUsage.RENDER_ATTACHMENT|GPUTextureUsage.COPY_SRC|GPUTextureUsage.COPY_DST,viewFormats:[]},this.gpuContext.configure(this.canvasConfig),this.createBackbuffer(),this.clearRenderer=new ol(this),this.mipmapRenderer=new ll(this),this.resolver=new ml(this),this.postInit(),e.abrupt("return",this);case 34:case"end":return e.stop()}}),e,this)})));function t(t,n){return e.apply(this,arguments)}return t}(),n.postInit=function(){e.prototype.postInit.call(this),this.gpuProfiler=new ul(this),this.dynamicBuffers=new hl(this,1048576,this.limits.minUniformBufferOffsetAlignment)},n.createBackbuffer=function(){this.supportsStencil=this.initOptions.stencil,this.backBuffer=new Vr({name:"WebgpuFramebuffer",graphicsDevice:this,depth:this.initOptions.depth,stencil:this.supportsStencil,samples:this.samples})},n.frameStart=function(){e.prototype.frameStart.call(this),this.gpuProfiler.frameStart(),this.submit();var t=this.gpuContext.getCurrentTexture();this.backBufferSize.x===t.width&&this.backBufferSize.y===t.height||(this.backBufferSize.set(t.width,t.height),this.backBuffer.destroy(),this.backBuffer=null,this.createBackbuffer());var n=this.backBuffer,i=n.impl;i.setColorAttachment(0,void 0,t.format),this.initRenderTarget(n),i.assignColorTexture(t)},n.frameEnd=function(){e.prototype.frameEnd.call(this),this.gpuProfiler.frameEnd(),this.submit(),this.gpuProfiler.request()},n.createUniformBufferImpl=function(e){return new No(e)},n.createVertexBufferImpl=function(e,t){return new Uo(e,t)},n.createIndexBufferImpl=function(e){return new Kr(e)},n.createShaderImpl=function(e){return new Oo(e)},n.createTextureImpl=function(e){return new Bo(e)},n.createRenderTargetImpl=function(e){return new po(e)},n.createBindGroupFormatImpl=function(e){return new Yr(e)},n.createBindGroupImpl=function(e){return new Hr},n.setBindGroup=function(e,t){this.passEncoder&&(this.passEncoder.setBindGroup(e,t.impl.bindGroup,t.uniformBufferOffsets),this.bindGroupFormats[e]=t.format.impl)},n.submitVertexBuffer=function(e,t){for(var n=e.format.elements,i=n.length,a=e.impl.buffer,s=0;s<i;s++)this.passEncoder.setVertexBuffer(t+s,a,n[s].offset);return i},n.draw=function(e,t,n){if(void 0===t&&(t=1),this.shader.ready&&!this.shader.failed){var i=this.passEncoder,a=this.vertexBuffers[0],s=this.vertexBuffers[1];if(this.vertexBuffers.length=0,a){var r=this.submitVertexBuffer(a,0);s&&this.submitVertexBuffer(s,r)}var o=this.renderPipeline.get(e,null==a?void 0:a.format,null==s?void 0:s.format,this.shader,this.renderTarget,this.bindGroupFormats,this.blendState,this.depthState,this.cullMode,this.stencilEnabled,this.stencilFront,this.stencilBack);this.pipeline!==o&&(this.pipeline=o,i.setPipeline(o));var l=this.indexBuffer;l?(this.indexBuffer=null,i.setIndexBuffer(l.impl.buffer,l.impl.format),i.drawIndexed(e.count,t,0,0,0)):i.draw(e.count,t,0,0)}},n.setShader=function(e){return this.shader=e,!0},n.setBlendState=function(e){this.blendState.copy(e)},n.setDepthState=function(e){this.depthState.copy(e)},n.setStencilState=function(e,t){if(e||t){this.stencilEnabled=!0,this.stencilFront.copy(null!=e?e:Nr.DEFAULT),this.stencilBack.copy(null!=t?t:Nr.DEFAULT);var n=this.stencilFront.ref;this.stencilRef!==n&&(this.stencilRef=n,this.passEncoder.setStencilReference(n))}else this.stencilEnabled=!1},n.setBlendColor=function(e,t,n,i){},n.setCullMode=function(e){this.cullMode=e},n.setAlphaToCoverage=function(e){},n.initializeContextCaches=function(){e.prototype.initializeContextCaches.call(this)},n.setupPassEncoderDefaults=function(){this.stencilRef=0},n._uploadDirtyTextures=function(){this.textures.forEach((function(e){(e._needsUpload||e._needsMipmaps)&&e.upload()}))},n.startPass=function(e){this._uploadDirtyTextures();var t=e.renderTarget||this.backBuffer;this.renderTarget=t;var n=t.impl;this.commandEncoder=this.wgpu.createCommandEncoder(),t!==this.backBuffer&&this.initRenderTarget(t),n.setupForRenderPass(e),this.pipeline=null;var i=n.renderPassDescriptor;if(this.gpuProfiler._enabled&&this.gpuProfiler.timestampQueriesSet){var a=this.gpuProfiler.getSlot(e.name);i.timestampWrites={querySet:this.gpuProfiler.timestampQueriesSet.querySet,beginningOfPassWriteIndex:2*a,endOfPassWriteIndex:2*a+1}}this.passEncoder=this.commandEncoder.beginRenderPass(i),this.setupPassEncoderDefaults();var s=t.width,r=t.height;this.setViewport(0,0,s,r),this.setScissor(0,0,s,r),this.insideRenderPass=!0},n.endPass=function(e){this.passEncoder.end(),this.passEncoder=null,this.insideRenderPass=!1,this.bindGroupFormats.length=0;for(var t=0;t<e.colorArrayOps.length;t++)e.colorArrayOps[t].mipmaps&&this.mipmapRenderer.generate(e.renderTarget._colorBuffers[t].impl);var n=this.commandEncoder.finish();this.addCommandBuffer(n),this.commandEncoder=null},n.addCommandBuffer=function(e,t){void 0===t&&(t=!1),t?this.commandBuffers.unshift(e):this.commandBuffers.push(e)},n.submit=function(){this.commandBuffers.length>0&&(this.dynamicBuffers.submit(),this.wgpu.queue.submit(this.commandBuffers),this.commandBuffers.length=0,this.dynamicBuffers.onCommandBuffersSubmitted())},n.clear=function(e){e.flags&&this.clearRenderer.clear(this,this.renderTarget,e,this.defaultClearOptions)},n.setDepthBias=function(e){},n.setDepthBiasValues=function(e,t){},n.setViewport=function(e,t,n,i){this.passEncoder&&(this.renderTarget.flipY||(t=this.renderTarget.height-t-i),this.vx=e,this.vy=t,this.vw=n,this.vh=i,this.passEncoder.setViewport(e,t,n,i,0,1))},n.setScissor=function(e,t,n,i){this.passEncoder&&(this.renderTarget.flipY||(t=this.renderTarget.height-t-i),this.sx=e,this.sy=t,this.sw=n,this.sh=i,this.passEncoder.setScissorRect(e,t,n,i))},n.copyRenderTarget=function(e,t,n,i){var a,s={width:e?e.width:t.width,height:e?e.height:t.height,depthOrArrayLayers:1},r=null!=(a=this.commandEncoder)?a:this.wgpu.createCommandEncoder();if(n){var o={texture:e?e.colorBuffer.impl.gpuTexture:this.renderTarget.impl.assignedColorTexture,mipLevel:0},l={texture:t?t.colorBuffer.impl.gpuTexture:this.renderTarget.impl.assignedColorTexture,mipLevel:0};r.copyTextureToTexture(o,l,s)}if(i){var c=(e||this.renderTarget).impl.depthTexture;if(e.samples>1){var h=t.colorBuffer.impl.gpuTexture;this.resolver.resolveDepth(r,c,h)}else{var p={texture:c,mipLevel:0},d={texture:t?t.depthBuffer.impl.gpuTexture:this.renderTarget.impl.depthTexture,mipLevel:0};r.copyTextureToTexture(p,d,s)}}if(!this.commandEncoder){var u=r.finish();this.addCommandBuffer(u)}return!0},t}(Ur),gl=0,vl=function(){function e(e,t){var n,i,a,s,r,o,l,c,h,p,d,u,m,f,g,v,y,_,w,b;void 0===t&&(t={}),this.name=void 0,this._isRenderTarget=!1,this._gpuSize=0,this.id=gl++,this._invalid=!1,this._lockedLevel=-1,this.renderVersionDirty=0,this.device=e,this.name=null!=(n=t.name)?n:"",this._width=Math.floor(null!=(i=t.width)?i:4),this._height=Math.floor(null!=(a=t.height)?a:4),this._format=null!=(s=t.format)?s:ti,this._compressed=Ai(this._format),e.supportsVolumeTextures?(this._volume=null!=(w=t.volume)&&w,this._depth=Math.floor(null!=(b=t.depth)?b:1)):(this._volume=!1,this._depth=1),this._cubemap=null!=(r=t.cubemap)&&r,this.fixCubemapSeams=null!=(o=t.fixCubemapSeams)&&o,this._flipY=null!=(l=t.flipY)&&l,this._premultiplyAlpha=null!=(c=t.premultiplyAlpha)&&c,this._mipmaps=null==(h=null!=(p=t.mipmaps)?p:t.autoMipmap)||h,this._minFilter=null!=(d=t.minFilter)?d:Fn,this._magFilter=null!=(u=t.magFilter)?u:In,this._anisotropy=null!=(m=t.anisotropy)?m:1,this._addressU=null!=(f=t.addressU)?f:Xt,this._addressV=null!=(g=t.addressV)?g:Xt,this._addressW=null!=(v=t.addressW)?v:Xt,this._compareOnRead=null!=(y=t.compareOnRead)&&y,this._compareFunc=null!=(_=t.compareFunc)?_:Nn,this.type=Ea,t.hasOwnProperty("type")?this.type=t.type:t.hasOwnProperty("rgbm")?this.type=t.rgbm?Ta:Ea:t.hasOwnProperty("swizzleGGGR")&&(this.type=t.swizzleGGGR?Ma:Ea),this.projection=Ga,this._cubemap?this.projection=Wa:t.projection&&t.projection!==Wa&&(this.projection=t.projection),this.impl=e.createTextureImpl(this),this.dirtyAll(),this._levels=t.levels,this._levels?this.upload():this._levels=this._cubemap?[[null,null,null,null,null,null]]:[null],e.textures.push(this)}var t=e.prototype;return t.destroy=function(){var e=this.device;if(e){var t=e.textures.indexOf(this);-1!==t&&e.textures.splice(t,1),e.scope.removeValue(this),this.impl.destroy(e),this.adjustVramSizeTracking(e._vram,-this._gpuSize),this._levels=null,this.device=null}},t.resize=function(e,t,n){void 0===n&&(n=1);var i=this.device;this.adjustVramSizeTracking(i._vram,-this._gpuSize),this.impl.destroy(i),this._width=e,this._height=t,this._depth=n,this.impl=i.createTextureImpl(this),this.dirtyAll()},t.loseContext=function(){this.impl.loseContext(),this.dirtyAll()},t.adjustVramSizeTracking=function(e,t){e.tex+=t},t.propertyChanged=function(e){this.impl.propertyChanged(e),this.renderVersionDirty=this.device.renderVersion},t.dirtyAll=function(){this._levelsUpdated=this._cubemap?[[!0,!0,!0,!0,!0,!0]]:[!0],this._needsUpload=!0,this._needsMipmapsUpload=this._mipmaps,this._mipmapsUploaded=!1,this.propertyChanged(255)},t.lock=function(e){void 0===e&&(e={}),void 0===e.level&&(e.level=0),void 0===e.face&&(e.face=0),void 0===e.mode&&(e.mode=Sa),this._lockedLevel=e.level;var t=this.cubemap?this._levels[e.face]:this._levels;if(null===t[e.level]){var n=Math.max(1,this._width>>e.level),i=Math.max(1,this._height>>e.level),a=Math.max(1,this._depth>>e.level),s=new ArrayBuffer(Io.calcLevelGpuSize(n,i,a,this._format));t[e.level]=new(Li(this._format))(s)}return t[e.level]},t.setSource=function(e,t){void 0===t&&(t=0);var n,i,a=!1;if(this._cubemap){if(e[0]){n=e[0].width||0,i=e[0].height||0;for(var s=0;s<6;s++){var r=e[s];if(!r||r.width!==n||r.height!==i||!this.device._isBrowserInterface(r)){a=!0;break}}}else a=!0;if(!a)for(var o=0;o<6;o++)this._levels[t][o]!==e[o]&&(this._levelsUpdated[t][o]=!0)}else this.device._isBrowserInterface(e)||(a=!0),a||(e!==this._levels[t]&&(this._levelsUpdated[t]=!0),n=e.width,i=e.height);if(a)if(this._width=4,this._height=4,this._cubemap)for(var l=0;l<6;l++)this._levels[t][l]=null,this._levelsUpdated[t][l]=!0;else this._levels[t]=null,this._levelsUpdated[t]=!0;else 0===t&&(this._width=n,this._height=i),this._levels[t]=e;this._invalid===a&&a||(this._invalid=a,this.upload())},t.getSource=function(e){return void 0===e&&(e=0),this._levels[e]},t.unlock=function(){this._lockedLevel,this.upload(),this._lockedLevel=-1},t.upload=function(){var e,t;this._needsUpload=!0,this._needsMipmapsUpload=this._mipmaps,null==(e=(t=this.impl).uploadImmediate)||e.call(t,this.device,this)},t.downloadAsync=function(){var e=X(W().mark((function e(){var t,n,i,a=this;return W().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:t=[],n=W().mark((function e(){var n,s,r,o;return W().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:n=new Vr({colorBuffer:a,depth:!1,face:i}),a.device.setRenderTarget(n),a.device.initRenderTarget(n),s=a.cubemap?a._levels[i]:a._levels,r=s[0],s[0]&&a.device._isBrowserInterface(s[0])&&(s[0]=null),r=a.lock({face:i}),o=null==a.device.readPixelsAsync?void 0:a.device.readPixelsAsync(0,0,a.width,a.height,r).then((function(){return n.destroy()})),t.push(o);case 9:case"end":return e.stop()}}),e)})),i=0;case 3:if(!(i<(this.cubemap?6:1))){e.next=8;break}return e.delegateYield(n(),"t0",5);case 5:i++,e.next=3;break;case 8:return e.next=10,Promise.all(t);case 10:case"end":return e.stop()}}),e,this)})));function t(){return e.apply(this,arguments)}return t}(),q(e,[{key:"requiredMipLevels",get:function(){return this.mipmaps?Math.floor(Math.log2(Math.max(this.width,this.height)))+1:1}},{key:"minFilter",get:function(){return this._minFilter},set:function(e){this._minFilter!==e&&(this._minFilter=e,this.propertyChanged(1))}},{key:"magFilter",get:function(){return this._magFilter},set:function(e){this._magFilter!==e&&(this._magFilter=e,this.propertyChanged(2))}},{key:"addressU",get:function(){return this._addressU},set:function(e){this._addressU!==e&&(this._addressU=e,this.propertyChanged(4))}},{key:"addressV",get:function(){return this._addressV},set:function(e){this._addressV!==e&&(this._addressV=e,this.propertyChanged(8))}},{key:"addressW",get:function(){return this._addressW},set:function(e){this.device.supportsVolumeTextures&&this._volume&&e!==this._addressW&&(this._addressW=e,this.propertyChanged(16))}},{key:"compareOnRead",get:function(){return this._compareOnRead},set:function(e){this._compareOnRead!==e&&(this._compareOnRead=e,this.propertyChanged(32))}},{key:"compareFunc",get:function(){return this._compareFunc},set:function(e){this._compareFunc!==e&&(this._compareFunc=e,this.propertyChanged(64))}},{key:"anisotropy",get:function(){return this._anisotropy},set:function(e){this._anisotropy!==e&&(this._anisotropy=e,this.propertyChanged(128))}},{key:"mipmaps",get:function(){return this._mipmaps},set:function(e){this._mipmaps!==e&&(this._mipmaps=e,this.device.isWebGPU,e&&(this._needsMipmapsUpload=!0))}},{key:"width",get:function(){return this._width}},{key:"height",get:function(){return this._height}},{key:"depth",get:function(){return this._depth}},{key:"format",get:function(){return this._format}},{key:"cubemap",get:function(){return this._cubemap}},{key:"gpuSize",get:function(){var e=this.pot&&this._mipmaps&&!(this._compressed&&1===this._levels.length);return Io.calcGpuSize(this._width,this._height,this._depth,this._format,e,this._cubemap)}},{key:"volume",get:function(){return this._volume}},{key:"flipY",get:function(){return this._flipY},set:function(e){this._flipY!==e&&(this._flipY=e,this._needsUpload=!0)}},{key:"premultiplyAlpha",get:function(){return this._premultiplyAlpha},set:function(e){this._premultiplyAlpha!==e&&(this._premultiplyAlpha=e,this._needsUpload=!0)}},{key:"pot",get:function(){return at.powerOfTwo(this._width)&&at.powerOfTwo(this._height)}},{key:"encoding",get:function(){switch(this.type){case Ta:return"rgbm";case Aa:return"rgbe";case La:return"rgbp";default:return this.format===si||this.format===oi||this.format===ri||this.format===li?"linear":"srgb"}}}]),e}(),yl=function(){function e(){this.bufferId=null}var t=e.prototype;return t.destroy=function(e){this.bufferId&&(e.gl.deleteBuffer(this.bufferId),this.bufferId=null)},t.loseContext=function(){this.bufferId=null},t.unlock=function(e,t,n,i){var a,s=e.gl;switch(this.bufferId||(this.bufferId=s.createBuffer()),t){case mn:a=s.STATIC_DRAW;break;case fn:a=s.DYNAMIC_DRAW;break;case gn:a=s.STREAM_DRAW;break;case vn:a=e.isWebGL2?s.DYNAMIC_COPY:s.STATIC_DRAW}s.bindBuffer(n,this.bufferId),s.bufferData(n,i,a)},q(e,[{key:"initialized",get:function(){return!!this.bufferId}}]),e}(),_l=function(e){function t(){for(var t,n=arguments.length,i=new Array(n),a=0;a<n;a++)i[a]=arguments[a];return(t=e.call.apply(e,[this].concat(i))||this).vao=null,t}Z(t,e);var n=t.prototype;return n.destroy=function(t){e.prototype.destroy.call(this,t),t.boundVao=null,t.gl.bindVertexArray(null)},n.loseContext=function(){e.prototype.loseContext.call(this),this.vao=null},n.unlock=function(t){var n=t.device;e.prototype.unlock.call(this,n,t.usage,n.gl.ARRAY_BUFFER,t.storage)},t}(yl),wl=function(e){function t(t){var n;n=e.call(this)||this;var i=t.device.gl,a=t.format;return a===jn?n.glFormat=i.UNSIGNED_BYTE:a===Xn?n.glFormat=i.UNSIGNED_SHORT:a===Yn&&(n.glFormat=i.UNSIGNED_INT),n}return Z(t,e),t.prototype.unlock=function(t){var n=t.device;e.prototype.unlock.call(this,n,t.usage,n.gl.ELEMENT_ARRAY_BUFFER,t.storage)},t}(yl),bl=function(e,t,n,i){if(this.locationId=i,this.scopeId=e.scope.resolve(t),this.version=new Cr,"[0]"===t.substring(t.length-3))switch(n){case as:n=_s;break;case ss:n=Cs;break;case rs:n=Ss;break;case os:n=Es}this.dataType=n,this.value=[null,null,null,null],this.array=[]},xl=function(){function e(){this._cache=new Map}var t=e.prototype;return t.get=function(e,t){var n=this;return this._cache.has(e)||(this._cache.set(e,t()),e.on("destroy",(function(){n.remove(e)})),e.on("devicelost",(function(){var t;null==(t=n._cache.get(e))||null==t.loseContext||t.loseContext(e)}))),this._cache.get(e)},t.remove=function(e){var t;null==(t=this._cache.get(e))||null==t.destroy||t.destroy(e),this._cache.delete(e)},e}(),Cl=["gl_VertexID","gl_InstanceID","gl_DrawID","gl_BaseVertex","gl_BaseInstance"],Sl=function(){function e(){this.map=new Map}var t=e.prototype;return t.destroy=function(e){this.map.forEach((function(t){e.gl.deleteShader(t)}))},t.loseContext=function(e){this.map.clear()},e}(),El=function(){function e(){this.shaders=[]}return e.prototype.loseContext=function(e){this.shaders=[]},e}(),Tl=new xl,Al=new xl,Ll=new xl,Ml=function(){function e(t){this.compileDuration=0,this.init(),this.compile(t.device,t),e.getBatchShaders(t.device).push(t),t.device.shaders.push(t)}var t=e.prototype;return t.destroy=function(e){this.glProgram&&(e.device.gl.deleteProgram(this.glProgram),this.glProgram=null)},t.init=function(){this.uniforms=[],this.samplers=[],this.attributes=[],this.glProgram=null,this.glVertexShader=null,this.glFragmentShader=null},e.getBatchShaders=function(e){return Ll.get(e,(function(){return new El})).shaders},e.endShaderBatch=function(t){var n=e.getBatchShaders(t);n.forEach((function(e){return e.impl.link(t,e)})),n.length=0},t.loseContext=function(){this.init()},t.restoreContext=function(e,t){this.compile(e,t)},t.compile=function(e,t){var n=t.definition;this.glVertexShader=this._compileShaderSource(e,n.vshader,!0),this.glFragmentShader=this._compileShaderSource(e,n.fshader,!1)},t.link=function(e,t){if(!this.glProgram){var n=e.gl;if(!n.isContextLost()){var i=n.createProgram();this.glProgram=i,n.attachShader(i,this.glVertexShader),n.attachShader(i,this.glFragmentShader);var a=t.definition,s=a.attributes;if(e.isWebGL2&&a.useTransformFeedback){var r=[];for(var o in s)s.hasOwnProperty(o)&&r.push("out_"+o);n.transformFeedbackVaryings(i,r,n.INTERLEAVED_ATTRIBS)}for(var l in s)if(s.hasOwnProperty(l)){var c=s[l],h=js[c];n.bindAttribLocation(i,h,l)}n.linkProgram(i)}}},t._compileShaderSource=function(e,t,n){var i=e.gl,a=(n?Tl:Al).get(e,(function(){return new Sl})),s=a.map.get(t);if(!s){if(!(s=i.createShader(n?i.VERTEX_SHADER:i.FRAGMENT_SHADER))&&i.isContextLost())return s;i.shaderSource(s,t),i.compileShader(s),a.map.set(t,s)}return s},t.finalize=function(e,t){var n=e.gl;if(n.isContextLost())return!0;this.glProgram||this.link(e,t);var i=this.glProgram,a=t.definition;if(!n.getProgramParameter(i,n.LINK_STATUS)){if(!this._isCompiled(e,t,this.glVertexShader,a.vshader,"vertex"))return!1;if(!this._isCompiled(e,t,this.glFragmentShader,a.fshader,"fragment"))return!1;var s="Failed to link shader program. Error: "+n.getProgramInfoLog(i);return console.error(s),!1}for(var r=0,o=n.getProgramParameter(i,n.ACTIVE_ATTRIBUTES);r<o;){var l=n.getActiveAttrib(i,r++),c=n.getAttribLocation(i,l.name);if(-1===Cl.indexOf(l.name))if(void 0===a.attributes[l.name])console.error('Vertex shader attribute "'+l.name+'" is not mapped to a semantic in shader definition, shader ['+t.label+"]",t),t.failed=!0;else{var h=new bl(e,a.attributes[l.name],e.pcUniformType[l.type],c);this.attributes.push(h)}}r=0;for(var p=n.getProgramParameter(i,n.ACTIVE_UNIFORMS);r<p;){var d=n.getActiveUniform(i,r++),u=n.getUniformLocation(i,d.name),m=new bl(e,d.name,e.pcUniformType[d.type],u);d.type===n.SAMPLER_2D||d.type===n.SAMPLER_CUBE||e.isWebGL2&&(d.type===n.SAMPLER_2D_SHADOW||d.type===n.SAMPLER_CUBE_SHADOW||d.type===n.SAMPLER_3D)?this.samplers.push(m):this.uniforms.push(m)}return t.ready=!0,!0},t._isCompiled=function(e,t,n,i,a){var s=e.gl;if(!s.getShaderParameter(n,s.COMPILE_STATUS)){var r=s.getShaderInfoLog(n),o=this._processError(i,r),l=o[0];o[1];var c="Failed to compile "+a+" shader:\n\n"+r+"\n"+l;return console.error(c),!1}return!0},t._processError=function(e,t){var n={},i="";if(e){var a=e.split("\n"),s=0,r=a.length;if(t&&t.startsWith("ERROR:")){var o=t.match(/^ERROR:\s([0-9]+):([0-9]+):\s*(.+)/);o&&(n.message=o[3],n.line=parseInt(o[2],10),s=Math.max(0,n.line-6),r=Math.min(a.length,n.line+5))}for(var l=s;l<r;l++)i+=l+1+":\t"+a[l]+"\n";n.source=e}return[i,n]},e}();function Pl(e,t){var n=e.width,i=e.height;if(n>t||i>t){var a=t/Math.max(n,i),s=Math.floor(n*a),r=Math.floor(i*a),o=document.createElement("canvas");return o.width=s,o.height=r,o.getContext("2d").drawImage(e,0,0,n,i,0,0,s,r),o}return e}var Ol=function(){function e(){this._glTexture=null,this._glTarget=void 0,this._glFormat=void 0,this._glInternalFormat=void 0,this._glPixelType=void 0,this.dirtyParameterFlags=0}var t=e.prototype;return t.destroy=function(e){if(this._glTexture){for(var t=0;t<e.textureUnits.length;t++)for(var n=e.textureUnits[t],i=0;i<n.length;i++)n[i]===this._glTexture&&(n[i]=null);e.gl.deleteTexture(this._glTexture),this._glTexture=null}},t.loseContext=function(){this._glTexture=null},t.propertyChanged=function(e){this.dirtyParameterFlags|=e},t.initialize=function(e,t){var n=e.gl;switch(this._glTexture=n.createTexture(),this._glTarget=t._cubemap?n.TEXTURE_CUBE_MAP:t._volume?n.TEXTURE_3D:n.TEXTURE_2D,t._format){case qn:this._glFormat=n.ALPHA,this._glInternalFormat=n.ALPHA,this._glPixelType=n.UNSIGNED_BYTE;break;case Kn:this._glFormat=n.LUMINANCE,this._glInternalFormat=n.LUMINANCE,this._glPixelType=n.UNSIGNED_BYTE;break;case Zn:this._glFormat=n.LUMINANCE_ALPHA,this._glInternalFormat=n.LUMINANCE_ALPHA,this._glPixelType=n.UNSIGNED_BYTE;break;case Qn:this._glFormat=n.RGB,this._glInternalFormat=n.RGB,this._glPixelType=n.UNSIGNED_SHORT_5_6_5;break;case Jn:this._glFormat=n.RGBA,this._glInternalFormat=n.RGBA,this._glPixelType=n.UNSIGNED_SHORT_5_5_5_1;break;case $n:this._glFormat=n.RGBA,this._glInternalFormat=n.RGBA,this._glPixelType=n.UNSIGNED_SHORT_4_4_4_4;break;case ei:this._glFormat=n.RGB,this._glInternalFormat=e.isWebGL2?n.RGB8:n.RGB,this._glPixelType=n.UNSIGNED_BYTE;break;case ti:this._glFormat=n.RGBA,this._glInternalFormat=e.isWebGL2?n.RGBA8:n.RGBA,this._glPixelType=n.UNSIGNED_BYTE;break;case ni:this._glFormat=n.RGB,this._glInternalFormat=e.extCompressedTextureS3TC.COMPRESSED_RGB_S3TC_DXT1_EXT;break;case ii:this._glFormat=n.RGBA,this._glInternalFormat=e.extCompressedTextureS3TC.COMPRESSED_RGBA_S3TC_DXT3_EXT;break;case ai:this._glFormat=n.RGBA,this._glInternalFormat=e.extCompressedTextureS3TC.COMPRESSED_RGBA_S3TC_DXT5_EXT;break;case fi:this._glFormat=n.RGB,this._glInternalFormat=e.extCompressedTextureETC1.COMPRESSED_RGB_ETC1_WEBGL;break;case yi:this._glFormat=n.RGB,this._glInternalFormat=e.extCompressedTexturePVRTC.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;break;case _i:this._glFormat=n.RGBA,this._glInternalFormat=e.extCompressedTexturePVRTC.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;break;case wi:this._glFormat=n.RGB,this._glInternalFormat=e.extCompressedTexturePVRTC.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;break;case bi:this._glFormat=n.RGBA,this._glInternalFormat=e.extCompressedTexturePVRTC.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;break;case gi:this._glFormat=n.RGB,this._glInternalFormat=e.extCompressedTextureETC.COMPRESSED_RGB8_ETC2;break;case vi:this._glFormat=n.RGBA,this._glInternalFormat=e.extCompressedTextureETC.COMPRESSED_RGBA8_ETC2_EAC;break;case xi:this._glFormat=n.RGBA,this._glInternalFormat=e.extCompressedTextureASTC.COMPRESSED_RGBA_ASTC_4x4_KHR;break;case Ci:this._glFormat=n.RGB,this._glInternalFormat=e.extCompressedTextureATC.COMPRESSED_RGB_ATC_WEBGL;break;case Si:this._glFormat=n.RGBA,this._glInternalFormat=e.extCompressedTextureATC.COMPRESSED_RGBA_ATC_INTERPOLATED_ALPHA_WEBGL;break;case si:this._glFormat=n.RGB,e.isWebGL2?(this._glInternalFormat=n.RGB16F,this._glPixelType=n.HALF_FLOAT):(this._glInternalFormat=n.RGB,this._glPixelType=e.extTextureHalfFloat.HALF_FLOAT_OES);break;case ri:this._glFormat=n.RGBA,e.isWebGL2?(this._glInternalFormat=n.RGBA16F,this._glPixelType=n.HALF_FLOAT):(this._glInternalFormat=n.RGBA,this._glPixelType=e.extTextureHalfFloat.HALF_FLOAT_OES);break;case oi:this._glFormat=n.RGB,e.isWebGL2?this._glInternalFormat=n.RGB32F:this._glInternalFormat=n.RGB,this._glPixelType=n.FLOAT;break;case li:this._glFormat=n.RGBA,e.isWebGL2?this._glInternalFormat=n.RGBA32F:this._glInternalFormat=n.RGBA,this._glPixelType=n.FLOAT;break;case ci:this._glFormat=n.RED,this._glInternalFormat=n.R32F,this._glPixelType=n.FLOAT;break;case hi:e.isWebGL2?(this._glFormat=n.DEPTH_COMPONENT,this._glInternalFormat=n.DEPTH_COMPONENT32F,this._glPixelType=n.FLOAT):(this._glFormat=n.DEPTH_COMPONENT,this._glInternalFormat=n.DEPTH_COMPONENT,this._glPixelType=n.UNSIGNED_SHORT);break;case pi:this._glFormat=n.DEPTH_STENCIL,e.isWebGL2?(this._glInternalFormat=n.DEPTH24_STENCIL8,this._glPixelType=n.UNSIGNED_INT_24_8):(this._glInternalFormat=n.DEPTH_STENCIL,this._glPixelType=e.extDepthTexture.UNSIGNED_INT_24_8_WEBGL);break;case di:this._glFormat=n.RGB,this._glInternalFormat=n.R11F_G11F_B10F,this._glPixelType=n.UNSIGNED_INT_10F_11F_11F_REV;break;case ui:this._glFormat=n.RGB,this._glInternalFormat=n.SRGB8,this._glPixelType=n.UNSIGNED_BYTE;break;case mi:this._glFormat=n.RGBA,this._glInternalFormat=n.SRGB8_ALPHA8,this._glPixelType=n.UNSIGNED_BYTE}},t.upload=function(e,t){var n=e.gl;if(t._needsUpload||!(t._needsMipmapsUpload&&t._mipmapsUploaded||!t.pot)){for(var i,a,s=0,r=t.requiredMipLevels;t._levels[s]||0===s;)if(t._needsUpload||0!==s){if(s&&(!t._needsMipmapsUpload||!t._mipmaps))break;if(i=t._levels[s],1===s&&!t._compressed&&t._levels.length<r&&(n.generateMipmap(this._glTarget),t._mipmapsUploaded=!0),t._cubemap){var o=void 0;if(e._isBrowserInterface(i[0])){for(o=0;o<6;o++)if(t._levelsUpdated[0][o]){var l=i[o];e._isImageBrowserInterface(l)&&(l.width>e.maxCubeMapSize||l.height>e.maxCubeMapSize)&&(l=Pl(l,e.maxCubeMapSize),0===s&&(t._width=l.width,t._height=l.height)),e.setUnpackFlipY(!1),e.setUnpackPremultiplyAlpha(t._premultiplyAlpha),n.texImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+o,s,this._glInternalFormat,this._glFormat,this._glPixelType,l)}}else for(a=1/Math.pow(2,s),o=0;o<6;o++)if(t._levelsUpdated[0][o]){var c=i[o];t._compressed?n.compressedTexImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+o,s,this._glInternalFormat,Math.max(t._width*a,1),Math.max(t._height*a,1),0,c):(e.setUnpackFlipY(!1),e.setUnpackPremultiplyAlpha(t._premultiplyAlpha),n.texImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+o,s,this._glInternalFormat,Math.max(t._width*a,1),Math.max(t._height*a,1),0,this._glFormat,this._glPixelType,c))}}else t._volume?(a=1/Math.pow(2,s),t._compressed?n.compressedTexImage3D(n.TEXTURE_3D,s,this._glInternalFormat,Math.max(t._width*a,1),Math.max(t._height*a,1),Math.max(t._depth*a,1),0,i):(e.setUnpackFlipY(!1),e.setUnpackPremultiplyAlpha(t._premultiplyAlpha),n.texImage3D(n.TEXTURE_3D,s,this._glInternalFormat,Math.max(t._width*a,1),Math.max(t._height*a,1),Math.max(t._depth*a,1),0,this._glFormat,this._glPixelType,i))):(e._isBrowserInterface(i)?(e._isImageBrowserInterface(i)&&(i.width>e.maxTextureSize||i.height>e.maxTextureSize)&&(i=Pl(i,e.maxTextureSize),0===s&&(t._width=i.width,t._height=i.height)),e.setUnpackFlipY(t._flipY),e.setUnpackPremultiplyAlpha(t._premultiplyAlpha),n.texImage2D(n.TEXTURE_2D,s,this._glInternalFormat,this._glFormat,this._glPixelType,i)):(a=1/Math.pow(2,s),t._compressed?n.compressedTexImage2D(n.TEXTURE_2D,s,this._glInternalFormat,Math.max(Math.floor(t._width*a),1),Math.max(Math.floor(t._height*a),1),0,i):(e.setUnpackFlipY(!1),e.setUnpackPremultiplyAlpha(t._premultiplyAlpha),n.texImage2D(n.TEXTURE_2D,s,this._glInternalFormat,Math.max(t._width*a,1),Math.max(t._height*a,1),0,this._glFormat,this._glPixelType,i))),t._mipmapsUploaded=0!==s);s++}else s++;if(t._needsUpload)if(t._cubemap)for(var h=0;h<6;h++)t._levelsUpdated[0][h]=!1;else t._levelsUpdated[0]=!1;!t._compressed&&t._mipmaps&&t._needsMipmapsUpload&&(t.pot||e.isWebGL2)&&1===t._levels.length&&(n.generateMipmap(this._glTarget),t._mipmapsUploaded=!0),t._gpuSize&&t.adjustVramSizeTracking(e._vram,-t._gpuSize),t._gpuSize=t.gpuSize,t.adjustVramSizeTracking(e._vram,t._gpuSize)}},e}(),Il=function(){function e(e,t){this.msaaFB=void 0,this.resolveFB=void 0,this.msaaFB=e,this.resolveFB=t}return e.prototype.destroy=function(e){this.msaaFB&&(e.deleteRenderbuffer(this.msaaFB),this.msaaFB=null),this.resolveFB&&(e.deleteRenderbuffer(this.resolveFB),this.resolveFB=null)},e}(),Rl=function(){function e(){this._glFrameBuffer=null,this._glDepthBuffer=null,this._glResolveFrameBuffer=null,this.colorMrtFramebuffers=null,this._glMsaaColorBuffers=[],this._glMsaaDepthBuffer=null,this.suppliedColorFramebuffer=void 0,this._isInitialized=!1}var t=e.prototype;return t.destroy=function(e){var t,n=e.gl;this._isInitialized=!1,this._glFrameBuffer&&(n.deleteFramebuffer(this._glFrameBuffer),this._glFrameBuffer=null),this._glDepthBuffer&&(n.deleteRenderbuffer(this._glDepthBuffer),this._glDepthBuffer=null),this._glResolveFrameBuffer&&(n.deleteFramebuffer(this._glResolveFrameBuffer),this._glResolveFrameBuffer=null),this._glMsaaColorBuffers.forEach((function(e){n.deleteRenderbuffer(e)})),this._glMsaaColorBuffers.length=0,null==(t=this.colorMrtFramebuffers)||t.forEach((function(e){e.destroy(n)})),this.colorMrtFramebuffers=null,this._glMsaaDepthBuffer&&(n.deleteRenderbuffer(this._glMsaaDepthBuffer),this._glMsaaDepthBuffer=null)},t.init=function(e,t){var n=e.gl;this._isInitialized=!0;var i=[];if(void 0!==this.suppliedColorFramebuffer)this._glFrameBuffer=this.suppliedColorFramebuffer;else{var a,s,r,o;this._glFrameBuffer=n.createFramebuffer(),e.setFramebuffer(this._glFrameBuffer);for(var l=null!=(a=null==(s=t._colorBuffers)?void 0:s.length)?a:0,c=e.isWebGL2?n.COLOR_ATTACHMENT0:null!=(r=null==(o=e.extDrawBuffers)?void 0:o.COLOR_ATTACHMENT0_WEBGL)?r:n.COLOR_ATTACHMENT0,h=0;h<l;++h){var p=t.getColorBuffer(h);p&&(p.impl._glTexture||(p._width=Math.min(p.width,e.maxRenderBufferSize),p._height=Math.min(p.height,e.maxRenderBufferSize),e.setTexture(p,0)),n.framebufferTexture2D(n.FRAMEBUFFER,c+h,p._cubemap?n.TEXTURE_CUBE_MAP_POSITIVE_X+t._face:n.TEXTURE_2D,p.impl._glTexture,0),i.push(c+h))}e.drawBuffers&&e.drawBuffers(i);var d=t._depthBuffer;if(d)d.impl._glTexture||(d._width=Math.min(d.width,e.maxRenderBufferSize),d._height=Math.min(d.height,e.maxRenderBufferSize),e.setTexture(d,0)),t._stencil?n.framebufferTexture2D(n.FRAMEBUFFER,n.DEPTH_STENCIL_ATTACHMENT,d._cubemap?n.TEXTURE_CUBE_MAP_POSITIVE_X+t._face:n.TEXTURE_2D,t._depthBuffer.impl._glTexture,0):n.framebufferTexture2D(n.FRAMEBUFFER,n.DEPTH_ATTACHMENT,d._cubemap?n.TEXTURE_CUBE_MAP_POSITIVE_X+t._face:n.TEXTURE_2D,t._depthBuffer.impl._glTexture,0);else if(t._depth&&!(t._samples>1&&e.isWebGL2)){if(this._glDepthBuffer||(this._glDepthBuffer=n.createRenderbuffer()),n.bindRenderbuffer(n.RENDERBUFFER,this._glDepthBuffer),t._stencil)n.renderbufferStorage(n.RENDERBUFFER,n.DEPTH_STENCIL,t.width,t.height),n.framebufferRenderbuffer(n.FRAMEBUFFER,n.DEPTH_STENCIL_ATTACHMENT,n.RENDERBUFFER,this._glDepthBuffer);else{var u=e.isWebGL2?n.DEPTH_COMPONENT32F:n.DEPTH_COMPONENT16;n.renderbufferStorage(n.RENDERBUFFER,u,t.width,t.height),n.framebufferRenderbuffer(n.FRAMEBUFFER,n.DEPTH_ATTACHMENT,n.RENDERBUFFER,this._glDepthBuffer)}n.bindRenderbuffer(n.RENDERBUFFER,null)}}if(e.isWebGL2&&t._samples>1){var m,f;this._glResolveFrameBuffer=this._glFrameBuffer,this._glFrameBuffer=n.createFramebuffer(),e.setFramebuffer(this._glFrameBuffer);var g=null!=(m=null==(f=t._colorBuffers)?void 0:f.length)?m:0;if(void 0!==this.suppliedColorFramebuffer){var v=n.createRenderbuffer();this._glMsaaColorBuffers.push(v);var y=e.backBufferFormat===ti?n.RGBA8:n.RGB8;n.bindRenderbuffer(n.RENDERBUFFER,v),n.renderbufferStorageMultisample(n.RENDERBUFFER,t._samples,y,t.width,t.height),n.framebufferRenderbuffer(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.RENDERBUFFER,v)}else for(var _=0;_<g;++_){var w=t.getColorBuffer(_);if(w){var b=n.createRenderbuffer();this._glMsaaColorBuffers.push(b),n.bindRenderbuffer(n.RENDERBUFFER,b),n.renderbufferStorageMultisample(n.RENDERBUFFER,t._samples,w.impl._glInternalFormat,t.width,t.height),n.framebufferRenderbuffer(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0+_,n.RENDERBUFFER,b)}}t._depth&&(this._glMsaaDepthBuffer||(this._glMsaaDepthBuffer=n.createRenderbuffer()),n.bindRenderbuffer(n.RENDERBUFFER,this._glMsaaDepthBuffer),t._stencil?(n.renderbufferStorageMultisample(n.RENDERBUFFER,t._samples,n.DEPTH24_STENCIL8,t.width,t.height),n.framebufferRenderbuffer(n.FRAMEBUFFER,n.DEPTH_STENCIL_ATTACHMENT,n.RENDERBUFFER,this._glMsaaDepthBuffer)):(n.renderbufferStorageMultisample(n.RENDERBUFFER,t._samples,n.DEPTH_COMPONENT32F,t.width,t.height),n.framebufferRenderbuffer(n.FRAMEBUFFER,n.DEPTH_ATTACHMENT,n.RENDERBUFFER,this._glMsaaDepthBuffer))),g>1&&(this._createMsaaMrtFramebuffers(e,t,g),e.setFramebuffer(this._glFrameBuffer),e.drawBuffers(i))}},t._createMsaaMrtFramebuffers=function(e,t,n){var i=e.gl;this.colorMrtFramebuffers=[];for(var a=0;a<n;++a){var s=t.getColorBuffer(a),r=i.createFramebuffer();e.setFramebuffer(r);var o=this._glMsaaColorBuffers[a];i.bindRenderbuffer(i.RENDERBUFFER,o),i.renderbufferStorageMultisample(i.RENDERBUFFER,t._samples,s.impl._glInternalFormat,t.width,t.height),i.framebufferRenderbuffer(i.FRAMEBUFFER,i.COLOR_ATTACHMENT0,i.RENDERBUFFER,o),e.drawBuffers([i.COLOR_ATTACHMENT0]);var l=i.createFramebuffer();e.setFramebuffer(l),i.framebufferTexture2D(i.FRAMEBUFFER,i.COLOR_ATTACHMENT0,s._cubemap?i.TEXTURE_CUBE_MAP_POSITIVE_X+t._face:i.TEXTURE_2D,s.impl._glTexture,0),this.colorMrtFramebuffers[a]=new Il(r,l)}},t._checkFbo=function(e,t,n){var i=e.gl;switch(i.checkFramebufferStatus(i.FRAMEBUFFER)){case i.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:case i.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:case i.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:case i.FRAMEBUFFER_UNSUPPORTED:}},t.loseContext=function(){this._glFrameBuffer=null,this._glDepthBuffer=null,this._glResolveFrameBuffer=null,this._glMsaaColorBuffers.length=0,this._glMsaaDepthBuffer=null,this.colorMrtFramebuffers=null,this.suppliedColorFramebuffer=void 0,this._isInitialized=!1},t.internalResolve=function(e,t,n,i,a){var s=e.gl;s.bindFramebuffer(s.READ_FRAMEBUFFER,t),s.bindFramebuffer(s.DRAW_FRAMEBUFFER,n),s.blitFramebuffer(0,0,i.width,i.height,0,0,i.width,i.height,a,s.NEAREST)},t.resolve=function(e,t,n,i){if(e.isWebGL2){var a=e.gl;if(this.colorMrtFramebuffers){if(n)for(var s=0;s<this.colorMrtFramebuffers.length;s++){var r=this.colorMrtFramebuffers[s];this.internalResolve(e,r.msaaFB,r.resolveFB,t,a.COLOR_BUFFER_BIT)}i&&this.internalResolve(e,this._glFrameBuffer,this._glResolveFrameBuffer,t,a.DEPTH_BUFFER_BIT)}else this.internalResolve(e,this._glFrameBuffer,this._glResolveFrameBuffer,t,(n?a.COLOR_BUFFER_BIT:0)|(i?a.DEPTH_BUFFER_BIT:0));a.bindFramebuffer(a.FRAMEBUFFER,this._glFrameBuffer)}},q(e,[{key:"initialized",get:function(){return this._isInitialized}}]),e}(),Dl="\n#define pcFragColor0 gl_FragData[0]\n#if COLOR_ATTACHMENT_1\n#define pcFragColor1 gl_FragData[1]\n#endif\n#if COLOR_ATTACHMENT_2\n#define pcFragColor2 gl_FragData[2]\n#endif\n#if COLOR_ATTACHMENT_3\n#define pcFragColor3 gl_FragData[3]\n#endif\n#if COLOR_ATTACHMENT_4\n#define pcFragColor4 gl_FragData[4]\n#endif\n#if COLOR_ATTACHMENT_5\n#define pcFragColor5 gl_FragData[5]\n#endif\n#if COLOR_ATTACHMENT_6\n#define pcFragColor6 gl_FragData[6]\n#endif\n#if COLOR_ATTACHMENT_7\n#define pcFragColor7 gl_FragData[7]\n#endif\n#define texture2DBias texture2D\n#define SHADOWMAP_PASS(name) name\n#define SHADOWMAP_ACCEPT(name) sampler2D name\n#define TEXTURE_PASS(name) name\n#define TEXTURE_ACCEPT(name) sampler2D name\n#ifndef SUPPORTS_TEXLOD\n\t#define texture2DLodEXT texture2D\n\t#define texture2DProjLodEXT textureProj\n\t#define textureCubeLodEXT textureCube\n\t#define textureShadow texture2D\n#else\n\t#define textureShadow(res, uv) texture2DGradEXT(res, uv, vec2(1, 1), vec2(1, 1))\n#endif\n#ifdef SUPPORTS_MRT\n\t#define gl_FragColor pcFragColor0\n#endif\n",kl="\nlayout(location = 0) out highp vec4 pc_fragColor;\n#ifndef REMOVE_COLOR_ATTACHMENT_1\n#if COLOR_ATTACHMENT_1\nlayout(location = 1) out highp vec4 pc_fragColor1;\n#endif\n#endif\n#ifndef REMOVE_COLOR_ATTACHMENT_2\n#if COLOR_ATTACHMENT_2\nlayout(location = 2) out highp vec4 pc_fragColor2;\n#endif\n#endif\n#ifndef REMOVE_COLOR_ATTACHMENT_3\n#if COLOR_ATTACHMENT_3\nlayout(location = 3) out highp vec4 pc_fragColor3;\n#endif\n#endif\n#ifndef REMOVE_COLOR_ATTACHMENT_4\n#if COLOR_ATTACHMENT_4\nlayout(location = 4) out highp vec4 pc_fragColor4;\n#endif\n#endif\n#ifndef REMOVE_COLOR_ATTACHMENT_5\n#if COLOR_ATTACHMENT_5\nlayout(location = 5) out highp vec4 pc_fragColor5;\n#endif\n#endif\n#ifndef REMOVE_COLOR_ATTACHMENT_6\n#if COLOR_ATTACHMENT_6\nlayout(location = 6) out highp vec4 pc_fragColor6;\n#endif\n#endif\n#ifndef REMOVE_COLOR_ATTACHMENT_7\n#if COLOR_ATTACHMENT_7\nlayout(location = 7) out highp vec4 pc_fragColor7;\n#endif\n#endif\n#define gl_FragColor pc_fragColor\n#define pcFragColor0 pc_fragColor\n#define pcFragColor1 pc_fragColor1\n#define pcFragColor2 pc_fragColor2\n#define pcFragColor3 pc_fragColor3\n#define pcFragColor4 pc_fragColor4\n#define pcFragColor5 pc_fragColor5\n#define pcFragColor6 pc_fragColor6\n#define pcFragColor7 pc_fragColor7\n#define varying in\n#define texture2D texture\n#define texture2DBias texture\n#define textureCube texture\n#define texture2DProj textureProj\n#define texture2DLodEXT textureLod\n#define texture2DProjLodEXT textureProjLod\n#define textureCubeLodEXT textureLod\n#define texture2DGradEXT textureGrad\n#define texture2DProjGradEXT textureProjGrad\n#define textureCubeGradEXT textureGrad\n#define textureShadow(res, uv) textureGrad(res, uv, vec2(1, 1), vec2(1, 1))\n#define SHADOWMAP_PASS(name) name\n#define SHADOWMAP_ACCEPT(name) sampler2DShadow name\n#define TEXTURE_PASS(name) name\n#define TEXTURE_ACCEPT(name) sampler2D name\n#define GL2\n#define SUPPORTS_TEXLOD\n#define SUPPORTS_MRT\n",Fl="\n#define attribute in\n#define varying out\n#define texture2D texture\n#define GL2\n#define VERTEXSHADER\n",Bl="\n#extension GL_EXT_samplerless_texture_functions : require\nlayout(location = 0) out highp vec4 pc_fragColor;\nlayout(location = 1) out highp vec4 pc_fragColor1;\nlayout(location = 2) out highp vec4 pc_fragColor2;\nlayout(location = 3) out highp vec4 pc_fragColor3;\nlayout(location = 4) out highp vec4 pc_fragColor4;\nlayout(location = 5) out highp vec4 pc_fragColor5;\nlayout(location = 6) out highp vec4 pc_fragColor6;\nlayout(location = 7) out highp vec4 pc_fragColor7;\n#define gl_FragColor pc_fragColor\n#define pcFragColor0 pc_fragColor\n#define pcFragColor1 pc_fragColor1\n#define pcFragColor2 pc_fragColor2\n#define pcFragColor3 pc_fragColor3\n#define pcFragColor4 pc_fragColor4\n#define pcFragColor5 pc_fragColor5\n#define pcFragColor6 pc_fragColor6\n#define pcFragColor7 pc_fragColor7\n#define texture2D(res, uv) texture(sampler2D(res, res ## _sampler), uv)\n#define texture2DBias(res, uv, bias) texture(sampler2D(res, res ## _sampler), uv, bias)\n#define texture2DLodEXT(res, uv, lod) textureLod(sampler2D(res, res ## _sampler), uv, lod)\n#define textureCube(res, uv) texture(samplerCube(res, res ## _sampler), uv)\n#define textureCubeLodEXT(res, uv, lod) textureLod(samplerCube(res, res ## _sampler), uv, lod)\n#define textureShadow(res, uv) textureLod(sampler2DShadow(res, res ## _sampler), uv, 0.0)\n#define SHADOWMAP_PASS(name) name, name ## _sampler\n#define SHADOWMAP_ACCEPT(name) texture2D name, sampler name ## _sampler\n#define TEXTURE_PASS(name) name, name ## _sampler\n#define TEXTURE_ACCEPT(name) texture2D name, sampler name ## _sampler\n#define GL2\n#define WEBGPU\n#define SUPPORTS_TEXLOD\n#define SUPPORTS_MRT\n",Nl="\n#extension GL_EXT_samplerless_texture_functions : require\n#define texture2D(res, uv) texture(sampler2D(res, res ## _sampler), uv)\n#define GL2\n#define WEBGPU\n#define VERTEXSHADER\n",Ul="\nvec2 getGrabScreenPos(vec4 clipPos) {\n\tvec2 uv = (clipPos.xy / clipPos.w) * 0.5 + 0.5;\n\t#ifdef WEBGPU\n\t\tuv.y = 1.0 - uv.y;\n\t#endif\n\treturn uv;\n}\nvec2 getImageEffectUV(vec2 uv) {\n\t#ifdef WEBGPU\n\t\tuv.y = 1.0 - uv.y;\n\t#endif\n\treturn uv;\n}\n",zl={vertex_position:Fi,vertex_normal:Bi,vertex_tangent:Ni,vertex_texCoord0:Gi,vertex_texCoord1:Wi,vertex_texCoord2:ji,vertex_texCoord3:Xi,vertex_texCoord4:Yi,vertex_texCoord5:qi,vertex_texCoord6:Ki,vertex_texCoord7:Zi,vertex_color:Vi,vertex_boneIndices:zi,vertex_boneWeights:Ui},Vl=function(){function e(){}return e.createDefinition=function(t,n){var i,a,s=function(i,a,s,r){for(var o=t.isWebGPU?i:t.isWebGL2?a:e.gl1Extensions(t,n)+s,l="",c=0;c<t.maxColorAttachments;c++)l+="#define COLOR_ATTACHMENT_"+c+"\n";return l+o},r=null!=(i=n.name)?i:"Untitled",o=n.vertexDefines||s(Nl,Fl,""),l=e.versionCode(t)+o+Ul+e.getShaderNameCode(r)+n.vertexCode,c=n.fragmentDefines||s(Bl,kl,Dl),h=(n.fragmentPreamble||"")+e.versionCode(t)+c+e.precisionCode(t)+"\n"+Ul+e.getShaderNameCode(r)+(n.fragmentCode||e.dummyFragmentCode());return{name:r,attributes:null!=(a=n.attributes)?a:e.collectAttributes(n.vertexCode),vshader:l,fshader:h,useTransformFeedback:n.useTransformFeedback}},e.getShaderNameCode=function(e){return"#define SHADER_NAME "+e+"\n"},e.gl1Extensions=function(e,t,n){var i;return n?i=t.vertexExtensions?t.vertexExtensions+"\n":"":(i=t.fragmentExtensions?t.fragmentExtensions+"\n":"",e.extStandardDerivatives&&(i+="#extension GL_OES_standard_derivatives : enable\n"),e.extTextureLod&&(i+="#extension GL_EXT_shader_texture_lod : enable\n",i+="#define SUPPORTS_TEXLOD\n"),e.extDrawBuffers&&(i+="#extension GL_EXT_draw_buffers : require\n",i+="#define SUPPORTS_MRT\n")),i},e.dummyFragmentCode=function(){return"void main(void) {gl_FragColor = vec4(0.0);}"},e.versionCode=function(e){return e.isWebGPU?"#version 450\n":e.isWebGL2?"#version 300 es\n":""},e.precisionCode=function(e,t){var n="";t&&"highp"!==t&&"mediump"!==t&&"lowp"!==t&&(t=null),t&&("highp"===t&&"highp"!==e.maxPrecision&&(t="mediump"),"mediump"===t&&"lowp"===e.maxPrecision&&(t="lowp"));var i=t||e.precision;return e.isWebGPU?n="precision "+i+" float;\nprecision "+i+" int;\n":(n="precision "+i+" float;\n",e.isWebGL2&&(n+="precision "+i+" sampler2DShadow;\n")),n},e.collectAttributes=function(e){for(var t={},n=0,i=e.indexOf("attribute");i>=0&&!(i>0&&"/"===e[i-1]);){var a=e.indexOf(";",i),s=e.lastIndexOf(" ",a),r=e.substring(s+1,a),o=zl[r];void 0!==o?t[r]=o:(t[r]="ATTR"+n,n++),i=e.indexOf("attribute",i+1)}return t},e}(),Hl=function(){function e(){this.renderVersion=void 0,this.queries=[]}return e.prototype.destroy=function(e){this.queries.forEach((function(t){return e.deleteQuery(t)})),this.queries=null},e}(),Gl=function(e){function t(t){var n;return(n=e.call(this)||this).device=void 0,n.freeQueries=[],n.frameQueries=[],n.previousFrameQueries=[],n.timings=[],n.device=t,n.ext=t.extDisjointTimerQuery,n}Z(t,e);var n=t.prototype;return n.destroy=function(){var e=this;this.freeQueries.forEach((function(t){return e.device.gl.deleteQuery(t)})),this.frameQueries.forEach((function(t){return e.device.gl.deleteQuery(t)})),this.previousFrameQueries.forEach((function(t){return t.destroy(e.device.gl)})),this.freeQueries=null,this.frameQueries=null,this.previousFrameQueries=null},n.loseContext=function(){e.prototype.loseContext.call(this),this.freeQueries=[],this.frameQueries=[],this.previousFrameQueries=[]},n.restoreContext=function(){this.ext=this.device.extDisjointTimerQuery},n.getQuery=function(){var e;return null!=(e=this.freeQueries.pop())?e:this.device.gl.createQuery()},n.start=function(e){if(this.ext){var t=this.getSlot(e),n=this.getQuery();return this.frameQueries[t]=n,this.device.gl.beginQuery(this.ext.TIME_ELAPSED_EXT,n),t}},n.end=function(e){void 0!==e&&this.device.gl.endQuery(this.ext.TIME_ELAPSED_EXT)},n.frameStart=function(){this.processEnableRequest(),this._enabled&&(this.frameGPUMarkerSlot=this.start("GpuFrame"))},n.frameEnd=function(){this._enabled&&this.end(this.frameGPUMarkerSlot)},n.request=function(){var t=this;if(this._enabled){var n=this.ext,i=this.device.gl,a=this.device.renderVersion,s=this.frameQueries;if(s.length>0){this.frameQueries=[];var r=new Hl;r.queries=s,r.renderVersion=a,this.previousFrameQueries.push(r)}if(this.previousFrameQueries.length>0){var o=this.previousFrameQueries[0],l=o.queries,c=l[l.length-1],h=i.getQueryParameter(c,i.QUERY_RESULT_AVAILABLE),p=i.getParameter(n.GPU_DISJOINT_EXT);if(h&&!p){this.previousFrameQueries.shift();var d=this.timings;d.length=0;for(var u=0;u<l.length;u++){var m=l[u],f=i.getQueryParameter(m,i.QUERY_RESULT);d[u]=1e-6*f,this.freeQueries.push(m)}this.report(o.renderVersion,d)}p&&(this.previousFrameQueries.forEach((function(e){t.report(e.renderVersion,null),e.destroy(i)})),this.previousFrameQueries.length=0)}e.prototype.request.call(this,a)}},t}(pl),Wl=[],jl="\nattribute vec2 vertex_position;\nvarying vec2 vUv0;\nvoid main(void)\n{\n\tgl_Position = vec4(vertex_position, 0.5, 1.0);\n\tvUv0 = vertex_position.xy*0.5+0.5;\n}\n",Xl="\nvoid main(void) { \n\tgl_FragColor = vec4(2147483648.0);\n}\n",Yl="\nuniform sampler2D source;\nvec4 packFloat(float depth) {\n\tconst vec4 bit_shift = vec4(256.0 * 256.0 * 256.0, 256.0 * 256.0, 256.0, 1.0);\n\tconst vec4 bit_mask  = vec4(0.0, 1.0 / 256.0, 1.0 / 256.0, 1.0 / 256.0);\n\tvec4 res = mod(depth * bit_shift * vec4(255), vec4(256) ) / vec4(255);\n\tres -= res.xxyz * bit_mask;\n\treturn res;\n}\nvoid main(void) {\n\tfloat c = texture2D(source, vec2(0.0)).r;\n\tfloat diff = abs(c - 2147483648.0) / 2147483648.0;\n\tgl_FragColor = packFloat(diff);\n}\n",ql="\nvarying vec2 vUv0;\nuniform sampler2D source;\nvoid main(void) {\n\tgl_FragColor = texture2D(source, vUv0);\n}\n";function Kl(e,t,n){var i=e.renderTarget;e.setRenderTarget(t),e.updateBegin(),e.setCullMode(An),e.setBlendState(yr.NOBLEND),e.setDepthState(xr.NODEPTH),e.setStencilState(null,null),e.setVertexBuffer(e.quadVertexBuffer,0),e.setShader(n),e.draw({type:Di,base:0,count:4,indexed:!1}),e.updateEnd(),e.setRenderTarget(i),e.updateBegin()}function Zl(e,t){var n=!0,i=e.createTexture();e.bindTexture(e.TEXTURE_2D,i),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MIN_FILTER,e.NEAREST),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MAG_FILTER,e.NEAREST),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE),e.texImage2D(e.TEXTURE_2D,0,e.RGBA,2,2,0,e.RGBA,t,null);var a=e.createFramebuffer();return e.bindFramebuffer(e.FRAMEBUFFER,a),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,i,0),e.checkFramebufferStatus(e.FRAMEBUFFER)!==e.FRAMEBUFFER_COMPLETE&&(n=!1),e.bindTexture(e.TEXTURE_2D,null),e.deleteTexture(i),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteFramebuffer(a),n}function Ql(e,t){var n=!0,i=e.createTexture();e.bindTexture(e.TEXTURE_2D,i),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MIN_FILTER,e.NEAREST),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MAG_FILTER,e.NEAREST),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE);var a=new Uint16Array(16);return e.texImage2D(e.TEXTURE_2D,0,e.RGBA,2,2,0,e.RGBA,t,a),e.getError()!==e.NO_ERROR&&(n=!1,console.log("Above error related to HALF_FLOAT_OES can be ignored, it was triggered by testing half float texture support")),e.bindTexture(e.TEXTURE_2D,null),e.deleteTexture(i),n}function Jl(e){if(!e.textureFloatRenderable)return!1;var t=new Qo(e,Vl.createDefinition(e,{name:"ptest1",vertexCode:jl,fragmentCode:Xl})),n=new Qo(e,Vl.createDefinition(e,{name:"ptest2",vertexCode:jl,fragmentCode:Yl})),i={format:li,width:1,height:1,mipmaps:!1,minFilter:On,magFilter:On,name:"testFHP"},a=new vl(e,i),s=new Vr({colorBuffer:a,depth:!1});Kl(e,s,t),i.format=ti;var r=new vl(e,i),o=new Vr({colorBuffer:r,depth:!1});e.constantTexSource.setValue(a),Kl(e,o,n);var l=e.activeFramebuffer;e.setFramebuffer(o.impl._glFrameBuffer);var c=new Uint8Array(4);e.readPixels(0,0,1,1,c),e.setFramebuffer(l);var h=c[0]/255/16777216+c[1]/255/65536+c[2]/255/256+c[3]/255;return a.destroy(),s.destroy(),r.destroy(),o.destroy(),t.destroy(),n.destroy(),0===h}var $l=function(e){function t(t,n){var i,a;void 0===n&&(n={}),(a=e.call(this,t,n)||this).gl=void 0,a._defaultFramebuffer=null,a._defaultFramebufferChanged=!1,n=a.initOptions,a.updateClientRect(),a.contextLost=!1,a._contextLostHandler=function(e){e.preventDefault(),a.contextLost=!0,a.loseContext(),a.fire("devicelost")},a._contextRestoredHandler=function(){a.contextLost=!1,a.restoreContext(),a.fire("devicerestored")};var s="undefined"!=typeof navigator&&navigator.userAgent;a.forceDisableMultisampling=s&&s.includes("AppleWebKit")&&(s.includes("15.4")||s.includes("15_4")),a.forceDisableMultisampling&&(n.antialias=!1);var r=null;if(a.backBufferAntialias=null!=(i=n.antialias)&&i,n.antialias=!1,n.gl)r=n.gl;else for(var o=void 0===n.preferWebGl2||n.preferWebGl2?["webgl2","webgl","experimental-webgl"]:["webgl","experimental-webgl"],l=0;l<o.length&&!(r=t.getContext(o[l],n));l++);if(!r)throw new Error("WebGL not supported");a.gl=r,a.isWebGL2="undefined"!=typeof WebGL2RenderingContext&&r instanceof WebGL2RenderingContext,a.isWebGL1=!a.isWebGL2,a._deviceType=a.isWebGL2?Ms:Ls;var c=r.getParameter(r.ALPHA_BITS);a.backBufferFormat=c?ti:ei;var h,p,d,u,f,g="chrome"===we.browserName,v="safari"===we.browserName,y=we.browser&&-1!==navigator.appVersion.indexOf("Mac");a._tempEnableSafariTextureUnitWorkaround=v,a._tempMacChromeBlitFramebufferWorkaround=y&&g&&!n.alpha,a.isWebGL2||m(r),t.addEventListener("webglcontextlost",a._contextLostHandler,!1),t.addEventListener("webglcontextrestored",a._contextRestoredHandler,!1),a.initializeExtensions(),a.initializeCapabilities(),a.initializeRenderState(),a.initializeContextCaches(),a.createBackbuffer(null),a.supportsImageBitmap=!v&&"undefined"!=typeof ImageBitmap,a.glAddress=[r.REPEAT,r.CLAMP_TO_EDGE,r.MIRRORED_REPEAT],a.glBlendEquation=[r.FUNC_ADD,r.FUNC_SUBTRACT,r.FUNC_REVERSE_SUBTRACT,a.isWebGL2?r.MIN:a.extBlendMinmax?a.extBlendMinmax.MIN_EXT:r.FUNC_ADD,a.isWebGL2?r.MAX:a.extBlendMinmax?a.extBlendMinmax.MAX_EXT:r.FUNC_ADD],a.glBlendFunctionColor=[r.ZERO,r.ONE,r.SRC_COLOR,r.ONE_MINUS_SRC_COLOR,r.DST_COLOR,r.ONE_MINUS_DST_COLOR,r.SRC_ALPHA,r.SRC_ALPHA_SATURATE,r.ONE_MINUS_SRC_ALPHA,r.DST_ALPHA,r.ONE_MINUS_DST_ALPHA,r.CONSTANT_COLOR,r.ONE_MINUS_CONSTANT_COLOR],a.glBlendFunctionAlpha=[r.ZERO,r.ONE,r.SRC_COLOR,r.ONE_MINUS_SRC_COLOR,r.DST_COLOR,r.ONE_MINUS_DST_COLOR,r.SRC_ALPHA,r.SRC_ALPHA_SATURATE,r.ONE_MINUS_SRC_ALPHA,r.DST_ALPHA,r.ONE_MINUS_DST_ALPHA,r.CONSTANT_ALPHA,r.ONE_MINUS_CONSTANT_ALPHA],a.glComparison=[r.NEVER,r.LESS,r.EQUAL,r.LEQUAL,r.GREATER,r.NOTEQUAL,r.GEQUAL,r.ALWAYS],a.glStencilOp=[r.KEEP,r.ZERO,r.REPLACE,r.INCR,r.INCR_WRAP,r.DECR,r.DECR_WRAP,r.INVERT],a.glClearFlag=[0,r.COLOR_BUFFER_BIT,r.DEPTH_BUFFER_BIT,r.COLOR_BUFFER_BIT|r.DEPTH_BUFFER_BIT,r.STENCIL_BUFFER_BIT,r.STENCIL_BUFFER_BIT|r.COLOR_BUFFER_BIT,r.STENCIL_BUFFER_BIT|r.DEPTH_BUFFER_BIT,r.STENCIL_BUFFER_BIT|r.COLOR_BUFFER_BIT|r.DEPTH_BUFFER_BIT],a.glCull=[0,r.BACK,r.FRONT,r.FRONT_AND_BACK],a.glFilter=[r.NEAREST,r.LINEAR,r.NEAREST_MIPMAP_NEAREST,r.NEAREST_MIPMAP_LINEAR,r.LINEAR_MIPMAP_NEAREST,r.LINEAR_MIPMAP_LINEAR],a.glPrimitive=[r.POINTS,r.LINES,r.LINE_LOOP,r.LINE_STRIP,r.TRIANGLES,r.TRIANGLE_STRIP,r.TRIANGLE_FAN],a.glType=[r.BYTE,r.UNSIGNED_BYTE,r.SHORT,r.UNSIGNED_SHORT,r.INT,r.UNSIGNED_INT,r.FLOAT],a.pcUniformType={},a.pcUniformType[r.BOOL]=ns,a.pcUniformType[r.INT]=is,a.pcUniformType[r.FLOAT]=as,a.pcUniformType[r.FLOAT_VEC2]=ss,a.pcUniformType[r.FLOAT_VEC3]=rs,a.pcUniformType[r.FLOAT_VEC4]=os,a.pcUniformType[r.INT_VEC2]=ls,a.pcUniformType[r.INT_VEC3]=cs,a.pcUniformType[r.INT_VEC4]=hs,a.pcUniformType[r.BOOL_VEC2]=ps,a.pcUniformType[r.BOOL_VEC3]=ds,a.pcUniformType[r.BOOL_VEC4]=us,a.pcUniformType[r.FLOAT_MAT2]=ms,a.pcUniformType[r.FLOAT_MAT3]=fs,a.pcUniformType[r.FLOAT_MAT4]=gs,a.pcUniformType[r.SAMPLER_2D]=vs,a.pcUniformType[r.SAMPLER_CUBE]=ys,a.isWebGL2&&(a.pcUniformType[r.SAMPLER_2D_SHADOW]=ws,a.pcUniformType[r.SAMPLER_CUBE_SHADOW]=bs,a.pcUniformType[r.SAMPLER_3D]=xs),a.targetToSlot={},a.targetToSlot[r.TEXTURE_2D]=0,a.targetToSlot[r.TEXTURE_CUBE_MAP]=1,a.targetToSlot[r.TEXTURE_3D]=2,a.commitFunction=[],a.commitFunction[ns]=function(e,t){e.value!==t&&(r.uniform1i(e.locationId,t),e.value=t)},a.commitFunction[is]=a.commitFunction[ns],a.commitFunction[as]=function(e,t){e.value!==t&&(r.uniform1f(e.locationId,t),e.value=t)},a.commitFunction[ss]=function(e,t){f=e.value,h=t[0],p=t[1],f[0]===h&&f[1]===p||(r.uniform2fv(e.locationId,t),f[0]=h,f[1]=p)},a.commitFunction[rs]=function(e,t){f=e.value,h=t[0],p=t[1],d=t[2],f[0]===h&&f[1]===p&&f[2]===d||(r.uniform3fv(e.locationId,t),f[0]=h,f[1]=p,f[2]=d)},a.commitFunction[os]=function(e,t){f=e.value,h=t[0],p=t[1],d=t[2],u=t[3],f[0]===h&&f[1]===p&&f[2]===d&&f[3]===u||(r.uniform4fv(e.locationId,t),f[0]=h,f[1]=p,f[2]=d,f[3]=u)},a.commitFunction[ls]=function(e,t){f=e.value,h=t[0],p=t[1],f[0]===h&&f[1]===p||(r.uniform2iv(e.locationId,t),f[0]=h,f[1]=p)},a.commitFunction[ps]=a.commitFunction[ls],a.commitFunction[cs]=function(e,t){f=e.value,h=t[0],p=t[1],d=t[2],f[0]===h&&f[1]===p&&f[2]===d||(r.uniform3iv(e.locationId,t),f[0]=h,f[1]=p,f[2]=d)},a.commitFunction[ds]=a.commitFunction[cs],a.commitFunction[hs]=function(e,t){f=e.value,h=t[0],p=t[1],d=t[2],u=t[3],f[0]===h&&f[1]===p&&f[2]===d&&f[3]===u||(r.uniform4iv(e.locationId,t),f[0]=h,f[1]=p,f[2]=d,f[3]=u)},a.commitFunction[us]=a.commitFunction[hs],a.commitFunction[ms]=function(e,t){r.uniformMatrix2fv(e.locationId,!1,t)},a.commitFunction[fs]=function(e,t){r.uniformMatrix3fv(e.locationId,!1,t)},a.commitFunction[gs]=function(e,t){r.uniformMatrix4fv(e.locationId,!1,t)},a.commitFunction[_s]=function(e,t){r.uniform1fv(e.locationId,t)},a.commitFunction[Cs]=function(e,t){r.uniform2fv(e.locationId,t)},a.commitFunction[Ss]=function(e,t){r.uniform3fv(e.locationId,t)},a.commitFunction[Es]=function(e,t){r.uniform4fv(e.locationId,t)},a.supportsBoneTextures=a.extTextureFloat&&a.maxVertexTextures>0;var _=a.vertexUniformsCount;return _-=16,_-=8,_-=1,_-=16,a.boneLimit=Math.floor(_/3),a.boneLimit=Math.min(a.boneLimit,128),"Mali-450 MP"===a.unmaskedRenderer&&(a.boneLimit=34),a.constantTexSource=a.scope.resolve("source"),a.extTextureFloat?a.isWebGL2?a.textureFloatRenderable=!!a.extColorBufferFloat:a.textureFloatRenderable=Zl(r,r.FLOAT):a.textureFloatRenderable=!1,a.extColorBufferHalfFloat?a.textureHalfFloatRenderable=!!a.extColorBufferHalfFloat:a.extTextureHalfFloat?a.isWebGL2?a.textureHalfFloatRenderable=!!a.extColorBufferFloat:a.textureHalfFloatRenderable=Zl(r,a.extTextureHalfFloat.HALF_FLOAT_OES):a.textureHalfFloatRenderable=!1,a.supportsMorphTargetTexturesCore="highp"===a.maxPrecision&&a.maxVertexTextures>=2,a.supportsDepthShadow=a.isWebGL2,a._textureFloatHighPrecision=void 0,a._textureHalfFloatUpdatable=void 0,a.areaLightLutFormat=ti,a.extTextureHalfFloat&&a.textureHalfFloatUpdatable&&a.extTextureHalfFloatLinear?a.areaLightLutFormat=ri:a.extTextureFloat&&a.extTextureFloatLinear&&(a.areaLightLutFormat=li),a.postInit(),a}Z(t,e);var n=t.prototype;return n.postInit=function(){e.prototype.postInit.call(this),this.gpuProfiler=new Gl(this)},n.destroy=function(){e.prototype.destroy.call(this);var t=this.gl;this.isWebGL2&&this.feedback&&t.deleteTransformFeedback(this.feedback),this.clearVertexArrayObjectCache(),this.canvas.removeEventListener("webglcontextlost",this._contextLostHandler,!1),this.canvas.removeEventListener("webglcontextrestored",this._contextRestoredHandler,!1),this._contextLostHandler=null,this._contextRestoredHandler=null,this.gl=null,e.prototype.postDestroy.call(this)},n.createBackbuffer=function(e){this.supportsStencil=this.initOptions.stencil,this.backBuffer=new Vr({name:"WebglFramebuffer",graphicsDevice:this,depth:this.initOptions.depth,stencil:this.supportsStencil,samples:this.samples}),this.backBuffer.impl.suppliedColorFramebuffer=e},n.updateBackbuffer=function(){var e=this.canvas.width!==this.backBufferSize.x||this.canvas.height!==this.backBufferSize.y;(this._defaultFramebufferChanged||e)&&(this._defaultFramebufferChanged=!1,this.backBufferSize.set(this.canvas.width,this.canvas.height),this.backBuffer.destroy(),this.createBackbuffer(this._defaultFramebuffer))},n.createVertexBufferImpl=function(e,t){return new _l},n.createIndexBufferImpl=function(e){return new wl(e)},n.createShaderImpl=function(e){return new Ml(e)},n.createTextureImpl=function(e){return new Ol},n.createRenderTargetImpl=function(e){return new Rl},n.getPrecision=function(){var e=this.gl,t="highp";if(e.getShaderPrecisionFormat){var n=e.getShaderPrecisionFormat(e.VERTEX_SHADER,e.HIGH_FLOAT),i=e.getShaderPrecisionFormat(e.VERTEX_SHADER,e.MEDIUM_FLOAT),a=e.getShaderPrecisionFormat(e.FRAGMENT_SHADER,e.HIGH_FLOAT),s=e.getShaderPrecisionFormat(e.FRAGMENT_SHADER,e.MEDIUM_FLOAT);if(n&&i&&a&&s){var r=n.precision>0&&a.precision>0,o=i.precision>0&&s.precision>0;r||(t=o?"mediump":"lowp")}}return t},n.getExtension=function(){for(var e=0;e<arguments.length;e++)if(-1!==this.supportedExtensions.indexOf(arguments[e]))return this.gl.getExtension(arguments[e]);return null},n.initializeExtensions=function(){var e,t=this.gl;if(this.supportedExtensions=null!=(e=t.getSupportedExtensions())?e:[],this._extDisjointTimerQuery=null,this.isWebGL2)this.extBlendMinmax=!0,this.extDrawBuffers=!0,this.drawBuffers=t.drawBuffers.bind(t),this.extInstancing=!0,this.extStandardDerivatives=!0,this.extTextureFloat=!0,this.extTextureHalfFloat=!0,this.extTextureLod=!0,this.extUintElement=!0,this.extVertexArrayObject=!0,this.extColorBufferFloat=this.getExtension("EXT_color_buffer_float"),this.extDepthTexture=!0;else{var n;if(this.extBlendMinmax=this.getExtension("EXT_blend_minmax"),this.extDrawBuffers=this.getExtension("WEBGL_draw_buffers"),this.extInstancing=this.getExtension("ANGLE_instanced_arrays"),this.drawBuffers=null==(n=this.extDrawBuffers)?void 0:n.drawBuffersWEBGL.bind(this.extDrawBuffers),this.extInstancing){var i=this.extInstancing;t.drawArraysInstanced=i.drawArraysInstancedANGLE.bind(i),t.drawElementsInstanced=i.drawElementsInstancedANGLE.bind(i),t.vertexAttribDivisor=i.vertexAttribDivisorANGLE.bind(i)}if(this.extStandardDerivatives=this.getExtension("OES_standard_derivatives"),this.extTextureFloat=this.getExtension("OES_texture_float"),this.extTextureHalfFloat=this.getExtension("OES_texture_half_float"),this.extTextureLod=this.getExtension("EXT_shader_texture_lod"),this.extUintElement=this.getExtension("OES_element_index_uint"),this.extVertexArrayObject=this.getExtension("OES_vertex_array_object"),this.extVertexArrayObject){var a=this.extVertexArrayObject;t.createVertexArray=a.createVertexArrayOES.bind(a),t.deleteVertexArray=a.deleteVertexArrayOES.bind(a),t.isVertexArray=a.isVertexArrayOES.bind(a),t.bindVertexArray=a.bindVertexArrayOES.bind(a)}this.extColorBufferFloat=null,this.extDepthTexture=t.getExtension("WEBGL_depth_texture")}this.extDebugRendererInfo=this.getExtension("WEBGL_debug_renderer_info"),this.extTextureFloatLinear=this.getExtension("OES_texture_float_linear"),this.extTextureHalfFloatLinear=this.getExtension("OES_texture_half_float_linear"),this.extFloatBlend=this.getExtension("EXT_float_blend"),this.extTextureFilterAnisotropic=this.getExtension("EXT_texture_filter_anisotropic","WEBKIT_EXT_texture_filter_anisotropic"),this.extCompressedTextureETC1=this.getExtension("WEBGL_compressed_texture_etc1"),this.extCompressedTextureETC=this.getExtension("WEBGL_compressed_texture_etc"),this.extCompressedTexturePVRTC=this.getExtension("WEBGL_compressed_texture_pvrtc","WEBKIT_WEBGL_compressed_texture_pvrtc"),this.extCompressedTextureS3TC=this.getExtension("WEBGL_compressed_texture_s3tc","WEBKIT_WEBGL_compressed_texture_s3tc"),this.extCompressedTextureATC=this.getExtension("WEBGL_compressed_texture_atc"),this.extCompressedTextureASTC=this.getExtension("WEBGL_compressed_texture_astc"),this.extParallelShaderCompile=this.getExtension("KHR_parallel_shader_compile"),this.extColorBufferHalfFloat=this.getExtension("EXT_color_buffer_half_float")},n.initializeCapabilities=function(){var e,t,n,i=this.gl,a="undefined"!=typeof navigator?navigator.userAgent:"";this.maxPrecision=this.precision=this.getPrecision();var s=i.getContextAttributes();this.supportsMsaa=null!=(e=null==s?void 0:s.antialias)&&e,this.supportsStencil=null!=(t=null==s?void 0:s.stencil)&&t,this.supportsInstancing=!!this.extInstancing,this.maxTextureSize=i.getParameter(i.MAX_TEXTURE_SIZE),this.maxCubeMapSize=i.getParameter(i.MAX_CUBE_MAP_TEXTURE_SIZE),this.maxRenderBufferSize=i.getParameter(i.MAX_RENDERBUFFER_SIZE),this.maxTextures=i.getParameter(i.MAX_TEXTURE_IMAGE_UNITS),this.maxCombinedTextures=i.getParameter(i.MAX_COMBINED_TEXTURE_IMAGE_UNITS),this.maxVertexTextures=i.getParameter(i.MAX_VERTEX_TEXTURE_IMAGE_UNITS),this.vertexUniformsCount=i.getParameter(i.MAX_VERTEX_UNIFORM_VECTORS),this.fragmentUniformsCount=i.getParameter(i.MAX_FRAGMENT_UNIFORM_VECTORS),this.isWebGL2?(this.maxDrawBuffers=i.getParameter(i.MAX_DRAW_BUFFERS),this.maxColorAttachments=i.getParameter(i.MAX_COLOR_ATTACHMENTS),this.maxVolumeSize=i.getParameter(i.MAX_3D_TEXTURE_SIZE),this.supportsMrt=!0,this.supportsVolumeTextures=!0):(n=this.extDrawBuffers,this.supportsMrt=!!n,this.maxDrawBuffers=n?i.getParameter(n.MAX_DRAW_BUFFERS_WEBGL):1,this.maxColorAttachments=n?i.getParameter(n.MAX_COLOR_ATTACHMENTS_WEBGL):1,this.maxVolumeSize=1),n=this.extDebugRendererInfo,this.unmaskedRenderer=n?i.getParameter(n.UNMASKED_RENDERER_WEBGL):"",this.unmaskedVendor=n?i.getParameter(n.UNMASKED_VENDOR_WEBGL):"";var r=/\bMali-G52+/,o=/SM-[a-zA-Z0-9]+/;this.supportsGpuParticles=!("ARM"===this.unmaskedVendor&&a.match(o)||this.unmaskedRenderer.match(r)),n=this.extTextureFilterAnisotropic,this.maxAnisotropy=n?i.getParameter(n.MAX_TEXTURE_MAX_ANISOTROPY_EXT):1;var l=this.isWebGL2&&!this.forceDisableMultisampling;this.maxSamples=l?i.getParameter(i.MAX_SAMPLES):1,this.maxSamples=Math.min(this.maxSamples,4),this.samples=l&&this.backBufferAntialias?this.maxSamples:1,this.supportsAreaLights=this.isWebGL2||!we.android,this.supportsTextureFetch=this.isWebGL2,this.maxTextures<=8&&(this.supportsAreaLights=!1)},n.initializeRenderState=function(){e.prototype.initializeRenderState.call(this);var t=this.gl;t.disable(t.BLEND),t.blendFunc(t.ONE,t.ZERO),t.blendEquation(t.FUNC_ADD),t.colorMask(!0,!0,!0,!0),this.blendColor=new st(0,0,0,0),t.blendColor(0,0,0,0),t.enable(t.CULL_FACE),t.cullFace(t.BACK),t.enable(t.DEPTH_TEST),t.depthFunc(t.LEQUAL),t.depthMask(!0),this.stencil=!1,t.disable(t.STENCIL_TEST),this.stencilFuncFront=this.stencilFuncBack=Wn,this.stencilRefFront=this.stencilRefBack=0,this.stencilMaskFront=this.stencilMaskBack=255,t.stencilFunc(t.ALWAYS,0,255),this.stencilFailFront=this.stencilFailBack=fa,this.stencilZfailFront=this.stencilZfailBack=fa,this.stencilZpassFront=this.stencilZpassBack=fa,this.stencilWriteMaskFront=255,this.stencilWriteMaskBack=255,t.stencilOp(t.KEEP,t.KEEP,t.KEEP),t.stencilMask(255),this.alphaToCoverage=!1,this.raster=!0,this.isWebGL2&&(t.disable(t.SAMPLE_ALPHA_TO_COVERAGE),t.disable(t.RASTERIZER_DISCARD)),this.depthBiasEnabled=!1,t.disable(t.POLYGON_OFFSET_FILL),this.clearDepth=1,t.clearDepth(1),this.clearColor=new st(0,0,0,0),t.clearColor(0,0,0,0),this.clearStencil=0,t.clearStencil(0),this.isWebGL2?t.hint(t.FRAGMENT_SHADER_DERIVATIVE_HINT,t.NICEST):this.extStandardDerivatives&&t.hint(this.extStandardDerivatives.FRAGMENT_SHADER_DERIVATIVE_HINT_OES,t.NICEST),t.enable(t.SCISSOR_TEST),t.pixelStorei(t.UNPACK_COLORSPACE_CONVERSION_WEBGL,t.NONE),this.unpackFlipY=!1,t.pixelStorei(t.UNPACK_FLIP_Y_WEBGL,!1),this.unpackPremultiplyAlpha=!1,t.pixelStorei(t.UNPACK_PREMULTIPLY_ALPHA_WEBGL,!1),t.pixelStorei(t.UNPACK_ALIGNMENT,1)},n.initializeContextCaches=function(){e.prototype.initializeContextCaches.call(this),this._vaoMap=new Map,this.boundVao=null,this.activeFramebuffer=null,this.feedback=null,this.transformFeedbackBuffer=null,this.textureUnit=0,this.textureUnits=[];for(var t=0;t<this.maxCombinedTextures;t++)this.textureUnits.push([null,null,null])},n.loseContext=function(){var e;this.backBufferSize.set(-1,-1);for(var t,n=te(this.shaders);!(t=n()).done;)t.value.loseContext();for(var i,a=te(this.textures);!(i=a()).done;)i.value.loseContext();for(var s,r=te(this.buffers);!(s=r()).done;)s.value.loseContext();for(var o,l=te(this.targets);!(o=l()).done;)o.value.loseContext();null==(e=this.gpuProfiler)||e.loseContext()},n.restoreContext=function(){var e;this.initializeExtensions(),this.initializeCapabilities(),this.initializeRenderState(),this.initializeContextCaches();for(var t,n=te(this.shaders);!(t=n()).done;)t.value.restoreContext();for(var i,a=te(this.buffers);!(i=a()).done;)i.value.unlock();null==(e=this.gpuProfiler)||e.restoreContext()},n.endShaderBatch=function(){Ml.endShaderBatch(this)},n.setViewport=function(e,t,n,i){this.vx===e&&this.vy===t&&this.vw===n&&this.vh===i||(this.gl.viewport(e,t,n,i),this.vx=e,this.vy=t,this.vw=n,this.vh=i)},n.setScissor=function(e,t,n,i){this.sx===e&&this.sy===t&&this.sw===n&&this.sh===i||(this.gl.scissor(e,t,n,i),this.sx=e,this.sy=t,this.sw=n,this.sh=i)},n.setFramebuffer=function(e){if(this.activeFramebuffer!==e){var t=this.gl;t.bindFramebuffer(t.FRAMEBUFFER,e),this.activeFramebuffer=e}},n.copyRenderTarget=function(e,t,n,i){var a=this.gl;if(e===this.backBuffer&&(e=null),!this.isWebGL2&&i)return!1;if(n)if(t){if(e){if(!e._colorBuffer||!t._colorBuffer)return!1;if(e._colorBuffer._format!==t._colorBuffer._format)return!1}}else if(!e._colorBuffer)return!1;if(i&&e&&!e._depth){if(!e._depthBuffer||!t._depthBuffer)return!1;if(e._depthBuffer._format!==t._depthBuffer._format)return!1}if(this.isWebGL2&&t){var s,r=this.renderTarget;this.renderTarget=t,this.updateBegin();var o=e?e.impl._glFrameBuffer:null==(s=this.backBuffer)?void 0:s.impl._glFrameBuffer,l=t.impl._glFrameBuffer;a.bindFramebuffer(a.READ_FRAMEBUFFER,o),a.bindFramebuffer(a.DRAW_FRAMEBUFFER,l);var c=e?e.width:t.width,h=e?e.height:t.height;a.blitFramebuffer(0,0,c,h,0,0,c,h,(n?a.COLOR_BUFFER_BIT:0)|(i?a.DEPTH_BUFFER_BIT:0),a.NEAREST),this.renderTarget=r,a.bindFramebuffer(a.FRAMEBUFFER,r?r.impl._glFrameBuffer:null)}else{var p=this.getCopyShader();this.constantTexSource.setValue(e._colorBuffer),Kl(this,t,p)}return!0},n.getCopyShader=function(){return this._copyShader||(this._copyShader=new Qo(this,Vl.createDefinition(this,{name:"outputTex2D",vertexCode:jl,fragmentCode:ql}))),this._copyShader},n.frameStart=function(){e.prototype.frameStart.call(this),this.updateBackbuffer(),this.gpuProfiler.frameStart()},n.frameEnd=function(){e.prototype.frameEnd.call(this),this.gpuProfiler.frameEnd(),this.gpuProfiler.request()},n.startPass=function(e){var t=e.renderTarget||this.backBuffer;this.renderTarget=t,this.updateBegin();var n=e.colorOps,i=e.depthStencilOps;if(null!=n&&n.clear||i.clearDepth||i.clearStencil){var a=e.renderTarget,s=a?a.width:this.width,r=a?a.height:this.height;this.setViewport(0,0,s,r),this.setScissor(0,0,s,r);var o=0,l={};null!=n&&n.clear&&(o|=yn,l.color=[n.clearValue.r,n.clearValue.g,n.clearValue.b,n.clearValue.a]),i.clearDepth&&(o|=_n,l.depth=i.clearDepthValue),i.clearStencil&&(o|=wn,l.stencil=i.clearStencilValue),l.flags=o,this.clear(l)}this.insideRenderPass=!0},n.endPass=function(e){this.unbindVertexArray();var t=this.renderTarget,n=e.colorArrayOps.length;if(t){var i;if(this.isWebGL2){Wl.length=0;for(var a=this.gl,s=0;s<n;s++){var r=e.colorArrayOps[s];r.store||r.resolve||Wl.push(a.COLOR_ATTACHMENT0+s)}t!==this.backBuffer&&(e.depthStencilOps.storeDepth||Wl.push(a.DEPTH_ATTACHMENT),e.depthStencilOps.storeStencil||Wl.push(a.STENCIL_ATTACHMENT)),Wl.length>0&&e.fullSizeClearRect&&a.invalidateFramebuffer(a.DRAW_FRAMEBUFFER,Wl)}null!=(i=e.colorOps)&&i.resolve&&this.isWebGL2&&e.samples>1&&t.autoResolve&&t.resolve(!0,!1);for(var o=0;o<n;o++)if(e.colorArrayOps[o].mipmaps){var l=t._colorBuffers[o];l&&l.impl._glTexture&&l.mipmaps&&(l.pot||this.isWebGL2)&&(this.activeTexture(this.maxCombinedTextures-1),this.bindTexture(l),this.gl.generateMipmap(l.impl._glTarget))}}this.insideRenderPass=!1},n.updateBegin=function(){var e;if(this.boundVao=null,this._tempEnableSafariTextureUnitWorkaround)for(var t=0;t<this.textureUnits.length;++t)for(var n=0;n<3;++n)this.textureUnits[t][n]=null;var i=null!=(e=this.renderTarget)?e:this.backBuffer,a=i.impl;a.initialized||this.initRenderTarget(i),this.setFramebuffer(a._glFrameBuffer)},n.updateEnd=function(){this.unbindVertexArray();var e=this.renderTarget;if(e&&e!==this.backBuffer){this.isWebGL2&&e._samples>1&&e.autoResolve&&e.resolve();var t=e._colorBuffer;t&&t.impl._glTexture&&t.mipmaps&&(t.pot||this.isWebGL2)&&(this.activeTexture(this.maxCombinedTextures-1),this.bindTexture(t),this.gl.generateMipmap(t.impl._glTarget))}},n.setUnpackFlipY=function(e){if(this.unpackFlipY!==e){this.unpackFlipY=e;var t=this.gl;t.pixelStorei(t.UNPACK_FLIP_Y_WEBGL,e)}},n.setUnpackPremultiplyAlpha=function(e){if(this.unpackPremultiplyAlpha!==e){this.unpackPremultiplyAlpha=e;var t=this.gl;t.pixelStorei(t.UNPACK_PREMULTIPLY_ALPHA_WEBGL,e)}},n.activeTexture=function(e){this.textureUnit!==e&&(this.gl.activeTexture(this.gl.TEXTURE0+e),this.textureUnit=e)},n.bindTexture=function(e){var t=e.impl,n=t._glTarget,i=t._glTexture,a=this.textureUnit,s=this.targetToSlot[n];this.textureUnits[a][s]!==i&&(this.gl.bindTexture(n,i),this.textureUnits[a][s]=i)},n.bindTextureOnUnit=function(e,t){var n=e.impl,i=n._glTarget,a=n._glTexture,s=this.targetToSlot[i];this.textureUnits[t][s]!==a&&(this.activeTexture(t),this.gl.bindTexture(i,a),this.textureUnits[t][s]=a)},n.setTextureParameters=function(e){var t=this.gl,n=e.impl.dirtyParameterFlags,i=e.impl._glTarget;if(1&n){var a=e._minFilter;(!e.pot&&!this.isWebGL2||!e._mipmaps||e._compressed&&1===e._levels.length)&&(a===Rn||a===Dn?a=On:a!==kn&&a!==Fn||(a=In)),t.texParameteri(i,t.TEXTURE_MIN_FILTER,this.glFilter[a])}if(2&n&&t.texParameteri(i,t.TEXTURE_MAG_FILTER,this.glFilter[e._magFilter]),4&n&&(this.isWebGL2?t.texParameteri(i,t.TEXTURE_WRAP_S,this.glAddress[e._addressU]):t.texParameteri(i,t.TEXTURE_WRAP_S,this.glAddress[e.pot?e._addressU:Yt])),8&n&&(this.isWebGL2?t.texParameteri(i,t.TEXTURE_WRAP_T,this.glAddress[e._addressV]):t.texParameteri(i,t.TEXTURE_WRAP_T,this.glAddress[e.pot?e._addressV:Yt])),16&n&&this.isWebGL2&&t.texParameteri(i,t.TEXTURE_WRAP_R,this.glAddress[e._addressW]),32&n&&this.isWebGL2&&t.texParameteri(i,t.TEXTURE_COMPARE_MODE,e._compareOnRead?t.COMPARE_REF_TO_TEXTURE:t.NONE),64&n&&this.isWebGL2&&t.texParameteri(i,t.TEXTURE_COMPARE_FUNC,this.glComparison[e._compareFunc]),128&n){var s=this.extTextureFilterAnisotropic;s&&t.texParameterf(i,s.TEXTURE_MAX_ANISOTROPY_EXT,at.clamp(Math.round(e._anisotropy),1,this.maxAnisotropy))}},n.setTexture=function(e,t){var n=e.impl;n._glTexture||n.initialize(this,e),n.dirtyParameterFlags>0||e._needsUpload||e._needsMipmapsUpload?(this.activeTexture(t),this.bindTexture(e),n.dirtyParameterFlags&&(this.setTextureParameters(e),n.dirtyParameterFlags=0),(e._needsUpload||e._needsMipmapsUpload)&&(n.upload(this,e),e._needsUpload=!1,e._needsMipmapsUpload=!1)):this.bindTextureOnUnit(e,t)},n.createVertexArray=function(e){var t,n,i=e.length>1;if(i){t="";for(var a=0;a<e.length;a++){var s=e[a];t+=s.id+s.format.renderingHash}n=this._vaoMap.get(t)}if(!n){var r=this.gl;n=r.createVertexArray(),r.bindVertexArray(n),r.bindBuffer(r.ELEMENT_ARRAY_BUFFER,null);for(var o=0;o<e.length;o++){var l=e[o];r.bindBuffer(r.ARRAY_BUFFER,l.impl.bufferId);for(var c=l.format.elements,h=0;h<c.length;h++){var p=c[h],d=js[p.name];r.vertexAttribPointer(d,p.numComponents,this.glType[p.dataType],p.normalize,p.stride,p.offset),r.enableVertexAttribArray(d),l.format.instancing&&r.vertexAttribDivisor(d,1)}}r.bindVertexArray(null),r.bindBuffer(r.ARRAY_BUFFER,null),i&&this._vaoMap.set(t,n)}return n},n.unbindVertexArray=function(){this.boundVao&&(this.boundVao=null,this.gl.bindVertexArray(null))},n.setBuffers=function(){var e,t=this.gl;if(1===this.vertexBuffers.length){var n=this.vertexBuffers[0];n.impl.vao||(n.impl.vao=this.createVertexArray(this.vertexBuffers)),e=n.impl.vao}else e=this.createVertexArray(this.vertexBuffers);this.boundVao!==e&&(this.boundVao=e,t.bindVertexArray(e)),this.vertexBuffers.length=0;var i=this.indexBuffer?this.indexBuffer.impl.bufferId:null;t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,i)},n.draw=function(e,t,n){var i,a,s,r,o,l,c,h,p=this.gl,d=this.shader;if(d){var u=d.impl.samplers,m=d.impl.uniforms;n||this.setBuffers();for(var f=0,g=0,v=u.length;g<v;g++){if(!(a=(i=u[g]).scopeId.value))return;if(a instanceof vl)s=a,this.setTexture(s,f),i.slot!==f&&(p.uniform1i(i.locationId,f),i.slot=f),f++;else{i.array.length=0,r=a.length;for(var y=0;y<r;y++)s=a[y],this.setTexture(s,f),i.array[y]=f,f++;p.uniform1iv(i.locationId,i.array)}}for(var _=0,w=m.length;_<w;_++)l=(o=m[_]).scopeId,c=o.version,h=l.versionObject.version,c.globalId===h.globalId&&c.revision===h.revision||(c.globalId=h.globalId,c.revision=h.revision,null!==l.value&&this.commitFunction[o.dataType](o,l.value));this.isWebGL2&&this.transformFeedbackBuffer&&(p.bindBufferBase(p.TRANSFORM_FEEDBACK_BUFFER,0,this.transformFeedbackBuffer.impl.bufferId),p.beginTransformFeedback(p.POINTS));var b=this.glPrimitive[e.type],x=e.count;if(e.indexed){var C=this.indexBuffer,S=C.impl.glFormat,E=e.base*C.bytesPerIndex;t>0?p.drawElementsInstanced(b,x,S,E,t):p.drawElements(b,x,S,E)}else{var T=e.base;t>0?p.drawArraysInstanced(b,T,x,t):p.drawArrays(b,T,x)}this.isWebGL2&&this.transformFeedbackBuffer&&(p.endTransformFeedback(),p.bindBufferBase(p.TRANSFORM_FEEDBACK_BUFFER,0,null)),this._drawCallsPerFrame++}},n.clear=function(e){var t,n=this.defaultClearOptions,i=null!=(t=(e=e||n).flags)?t:n.flags;if(0!==i){var a=this.gl;if(i&yn){var s,r=null!=(s=e.color)?s:n.color,o=r[0],l=r[1],c=r[2],h=r[3],p=this.clearColor;o===p.r&&l===p.g&&c===p.b&&h===p.a||(this.gl.clearColor(o,l,c,h),this.clearColor.set(o,l,c,h)),this.setBlendState(yr.NOBLEND)}if(i&_n){var d,u=null!=(d=e.depth)?d:n.depth;u!==this.clearDepth&&(this.gl.clearDepth(u),this.clearDepth=u),this.setDepthState(xr.WRITEDEPTH)}if(i&wn){var m,f=null!=(m=e.stencil)?m:n.stencil;f!==this.clearStencil&&(this.gl.clearStencil(f),this.clearStencil=f)}a.clear(this.glClearFlag[i])}},n.submit=function(){this.gl.flush()},n.readPixels=function(e,t,n,i,a){var s=this.gl;s.readPixels(e,t,n,i,s.RGBA,s.UNSIGNED_BYTE,a)},n.readPixelsAsync=function(){var e=X(W().mark((function e(t,n,i,a,s){var r,o,l,c,h,p,d,u,m,f=this;return W().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(c=this.gl,this.isWebGL2){e.next=4;break}return this.readPixels(t,n,i,a,s),e.abrupt("return");case 4:return h=function(e,t){var n=c.fenceSync(c.SYNC_GPU_COMMANDS_COMPLETE,0);return f.submit(),new Promise((function(i,a){function s(){var r=c.clientWaitSync(n,e,0);r===c.WAIT_FAILED?(c.deleteSync(n),a(new Error("webgl clientWaitSync sync failed"))):r===c.TIMEOUT_EXPIRED?setTimeout(s,t):(c.deleteSync(n),i())}s()}))},p=null==(r=this.renderTarget.colorBuffer)?void 0:r.impl,d=null!=(o=null==p?void 0:p._glFormat)?o:c.RGBA,u=null!=(l=null==p?void 0:p._glPixelType)?l:c.UNSIGNED_BYTE,m=c.createBuffer(),c.bindBuffer(c.PIXEL_PACK_BUFFER,m),c.bufferData(c.PIXEL_PACK_BUFFER,s.byteLength,c.STREAM_READ),c.readPixels(t,n,i,a,d,u,0),c.bindBuffer(c.PIXEL_PACK_BUFFER,null),e.next=15,h(0,20);case 15:c.bindBuffer(c.PIXEL_PACK_BUFFER,m),c.getBufferSubData(c.PIXEL_PACK_BUFFER,0,s),c.bindBuffer(c.PIXEL_PACK_BUFFER,null),c.deleteBuffer(m);case 19:case"end":return e.stop()}}),e,this)})));function t(t,n,i,a,s){return e.apply(this,arguments)}return t}(),n.setAlphaToCoverage=function(e){this.isWebGL1||this.alphaToCoverage!==e&&(this.alphaToCoverage=e,e?this.gl.enable(this.gl.SAMPLE_ALPHA_TO_COVERAGE):this.gl.disable(this.gl.SAMPLE_ALPHA_TO_COVERAGE))},n.setTransformFeedbackBuffer=function(e){if(this.transformFeedbackBuffer!==e&&(this.transformFeedbackBuffer=e,this.isWebGL2)){var t=this.gl;e?(this.feedback||(this.feedback=t.createTransformFeedback()),t.bindTransformFeedback(t.TRANSFORM_FEEDBACK,this.feedback)):t.bindTransformFeedback(t.TRANSFORM_FEEDBACK,null)}},n.setRaster=function(e){this.raster!==e&&(this.raster=e,this.isWebGL2&&(e?this.gl.disable(this.gl.RASTERIZER_DISCARD):this.gl.enable(this.gl.RASTERIZER_DISCARD)))},n.setDepthBias=function(e){this.depthBiasEnabled!==e&&(this.depthBiasEnabled=e,e?this.gl.enable(this.gl.POLYGON_OFFSET_FILL):this.gl.disable(this.gl.POLYGON_OFFSET_FILL))},n.setDepthBiasValues=function(e,t){this.gl.polygonOffset(t,e)},n.setStencilTest=function(e){if(this.stencil!==e){var t=this.gl;e?t.enable(t.STENCIL_TEST):t.disable(t.STENCIL_TEST),this.stencil=e}},n.setStencilFunc=function(e,t,n){this.stencilFuncFront===e&&this.stencilRefFront===t&&this.stencilMaskFront===n&&this.stencilFuncBack===e&&this.stencilRefBack===t&&this.stencilMaskBack===n||(this.gl.stencilFunc(this.glComparison[e],t,n),this.stencilFuncFront=this.stencilFuncBack=e,this.stencilRefFront=this.stencilRefBack=t,this.stencilMaskFront=this.stencilMaskBack=n)},n.setStencilFuncFront=function(e,t,n){if(this.stencilFuncFront!==e||this.stencilRefFront!==t||this.stencilMaskFront!==n){var i=this.gl;i.stencilFuncSeparate(i.FRONT,this.glComparison[e],t,n),this.stencilFuncFront=e,this.stencilRefFront=t,this.stencilMaskFront=n}},n.setStencilFuncBack=function(e,t,n){if(this.stencilFuncBack!==e||this.stencilRefBack!==t||this.stencilMaskBack!==n){var i=this.gl;i.stencilFuncSeparate(i.BACK,this.glComparison[e],t,n),this.stencilFuncBack=e,this.stencilRefBack=t,this.stencilMaskBack=n}},n.setStencilOperation=function(e,t,n,i){this.stencilFailFront===e&&this.stencilZfailFront===t&&this.stencilZpassFront===n&&this.stencilFailBack===e&&this.stencilZfailBack===t&&this.stencilZpassBack===n||(this.gl.stencilOp(this.glStencilOp[e],this.glStencilOp[t],this.glStencilOp[n]),this.stencilFailFront=this.stencilFailBack=e,this.stencilZfailFront=this.stencilZfailBack=t,this.stencilZpassFront=this.stencilZpassBack=n),this.stencilWriteMaskFront===i&&this.stencilWriteMaskBack===i||(this.gl.stencilMask(i),this.stencilWriteMaskFront=i,this.stencilWriteMaskBack=i)},n.setStencilOperationFront=function(e,t,n,i){this.stencilFailFront===e&&this.stencilZfailFront===t&&this.stencilZpassFront===n||(this.gl.stencilOpSeparate(this.gl.FRONT,this.glStencilOp[e],this.glStencilOp[t],this.glStencilOp[n]),this.stencilFailFront=e,this.stencilZfailFront=t,this.stencilZpassFront=n),this.stencilWriteMaskFront!==i&&(this.gl.stencilMaskSeparate(this.gl.FRONT,i),this.stencilWriteMaskFront=i)},n.setStencilOperationBack=function(e,t,n,i){this.stencilFailBack===e&&this.stencilZfailBack===t&&this.stencilZpassBack===n||(this.gl.stencilOpSeparate(this.gl.BACK,this.glStencilOp[e],this.glStencilOp[t],this.glStencilOp[n]),this.stencilFailBack=e,this.stencilZfailBack=t,this.stencilZpassBack=n),this.stencilWriteMaskBack!==i&&(this.gl.stencilMaskSeparate(this.gl.BACK,i),this.stencilWriteMaskBack=i)},n.setBlendState=function(e){var t=this.blendState;if(!t.equals(e)){var n=this.gl,i=e.blend,a=e.colorOp,s=e.alphaOp,r=e.colorSrcFactor,o=e.colorDstFactor,l=e.alphaSrcFactor,c=e.alphaDstFactor;if(t.blend!==i&&(i?n.enable(n.BLEND):n.disable(n.BLEND)),t.colorOp!==a||t.alphaOp!==s){var h=this.glBlendEquation;n.blendEquationSeparate(h[a],h[s])}t.colorSrcFactor===r&&t.colorDstFactor===o&&t.alphaSrcFactor===l&&t.alphaDstFactor===c||n.blendFuncSeparate(this.glBlendFunctionColor[r],this.glBlendFunctionColor[o],this.glBlendFunctionAlpha[l],this.glBlendFunctionAlpha[c]),t.allWrite!==e.allWrite&&this.gl.colorMask(e.redWrite,e.greenWrite,e.blueWrite,e.alphaWrite),t.copy(e)}},n.setBlendColor=function(e,t,n,i){var a=this.blendColor;e===a.r&&t===a.g&&n===a.b&&i===a.a||(this.gl.blendColor(e,t,n,i),a.set(e,t,n,i))},n.setStencilState=function(e,t){e||t?(this.setStencilTest(!0),e===t?(this.setStencilFunc(e.func,e.ref,e.readMask),this.setStencilOperation(e.fail,e.zfail,e.zpass,e.writeMask)):(null!=e||(e=Nr.DEFAULT),this.setStencilFuncFront(e.func,e.ref,e.readMask),this.setStencilOperationFront(e.fail,e.zfail,e.zpass,e.writeMask),null!=t||(t=Nr.DEFAULT),this.setStencilFuncBack(t.func,t.ref,t.readMask),this.setStencilOperationBack(t.fail,t.zfail,t.zpass,t.writeMask))):this.setStencilTest(!1)},n.setDepthState=function(e){var t=this.depthState;if(!t.equals(e)){var n=this.gl,i=e.write;t.write!==i&&n.depthMask(i);var a=e.func,s=e.test;!s&&i&&(s=!0,a=Wn),t.func!==a&&n.depthFunc(this.glComparison[a]),t.test!==s&&(s?n.enable(n.DEPTH_TEST):n.disable(n.DEPTH_TEST)),t.copy(e)}},n.setCullMode=function(e){if(this.cullMode!==e){if(e===An)this.gl.disable(this.gl.CULL_FACE);else{this.cullMode===An&&this.gl.enable(this.gl.CULL_FACE);var t=this.glCull[e];this.cullFace!==t&&(this.gl.cullFace(t),this.cullFace=t)}this.cullMode=e}},n.setShader=function(e){if(e!==this.shader){if(e.failed)return!1;if(!e.ready&&!e.impl.finalize(this,e))return e.failed=!0,!1;this.shader=e,this.gl.useProgram(e.impl.glProgram),this.attributesInvalidated=!0}return!0},n.getHdrFormat=function(e,t,n,i){var a=this.extTextureHalfFloat&&(!t||this.textureHalfFloatRenderable)&&(!n||this.textureHalfFloatUpdatable)&&(!i||this.extTextureHalfFloatLinear),s=this.extTextureFloat&&(!t||this.textureFloatRenderable)&&(!i||this.extTextureFloatLinear);return a&&s?e?li:ri:a?ri:s?li:null},n.clearVertexArrayObjectCache=function(){var e=this.gl;this._vaoMap.forEach((function(t,n,i){e.deleteVertexArray(t)})),this._vaoMap.clear()},q(t,[{key:"extDisjointTimerQuery",get:function(){return this._extDisjointTimerQuery||this.isWebGL2&&(this._extDisjointTimerQuery=this.getExtension("EXT_disjoint_timer_query_webgl2","EXT_disjoint_timer_query")),this._extDisjointTimerQuery}},{key:"defaultFramebuffer",get:function(){return this._defaultFramebuffer},set:function(e){this._defaultFramebuffer!==e&&(this._defaultFramebuffer=e,this._defaultFramebufferChanged=!0)}},{key:"fullscreen",get:function(){return!!document.fullscreenElement},set:function(e){e?this.gl.canvas.requestFullscreen():document.exitFullscreen()}},{key:"textureFloatHighPrecision",get:function(){return void 0===this._textureFloatHighPrecision&&(this._textureFloatHighPrecision=Jl(this)),this._textureFloatHighPrecision}},{key:"textureHalfFloatUpdatable",get:function(){return void 0===this._textureHalfFloatUpdatable&&(this.isWebGL2?this._textureHalfFloatUpdatable=!0:this._textureHalfFloatUpdatable=Ql(this.gl,this.extTextureHalfFloat.HALF_FLOAT_OES)),this._textureHalfFloatUpdatable}}]),t}(Ur),ec=function(){function e(){}return e.prototype.unlock=function(e){},e}(),tc=function(){function e(){}var t=e.prototype;return t.destroy=function(e){},t.init=function(e,t){},t.loseContext=function(){},t.resolve=function(e,t,n,i){},e}(),nc=function(){function e(){}var t=e.prototype;return t.destroy=function(e){},t.loseContext=function(){},t.restoreContext=function(e,t){},e}(),ic=function(){function e(){}var t=e.prototype;return t.destroy=function(e){},t.propertyChanged=function(e){},t.loseContext=function(){},e}(),ac=function(){function e(){}var t=e.prototype;return t.destroy=function(e){},t.unlock=function(e){},e}(),sc=function(e){function t(t,n){var i;return void 0===n&&(n={}),n=(i=e.call(this,t,n)||this).initOptions,i.isNull=!0,i._deviceType=Os,i.samples=1,i}Z(t,e);var n=t.prototype;return n.destroy=function(){e.prototype.destroy.call(this)},n.initDeviceCaps=function(){this.disableParticleSystem=!0,this.precision="highp",this.maxPrecision="highp",this.maxSamples=4,this.maxTextures=16,this.maxTextureSize=4096,this.maxCubeMapSize=4096,this.maxVolumeSize=4096,this.maxColorAttachments=8,this.maxPixelRatio=1,this.maxAnisotropy=16,this.supportsInstancing=!0,this.supportsUniformBuffers=!1,this.supportsVolumeTextures=!0,this.supportsBoneTextures=!0,this.supportsMorphTargetTexturesCore=!0,this.supportsAreaLights=!0,this.supportsDepthShadow=!0,this.supportsGpuParticles=!1,this.supportsMrt=!0,this.extUintElement=!0,this.extTextureFloat=!0,this.textureFloatRenderable=!0,this.extTextureHalfFloat=!0,this.textureHalfFloatRenderable=!0,this.textureHalfFloatUpdatable=!0,this.boneLimit=1024,this.supportsImageBitmap=!0,this.extStandardDerivatives=!0,this.extBlendMinmax=!0,this.areaLightLutFormat=ti,this.supportsTextureFetch=!0},n.postInit=function(){e.prototype.postInit.call(this)},n.frameStart=function(){e.prototype.frameStart.call(this)},n.frameEnd=function(){e.prototype.frameEnd.call(this)},n.createVertexBufferImpl=function(e,t){return new ac(e,t)},n.createIndexBufferImpl=function(e){return new ec(e)},n.createShaderImpl=function(e){return new nc(e)},n.createTextureImpl=function(e){return new ic(e)},n.createRenderTargetImpl=function(e){return new tc(e)},n.draw=function(e,t,n){},n.setShader=function(e){return!0},n.setBlendState=function(e){},n.setDepthState=function(e){},n.setStencilState=function(e,t){},n.setBlendColor=function(e,t,n,i){},n.setCullMode=function(e){},n.setAlphaToCoverage=function(e){},n.initializeContextCaches=function(){e.prototype.initializeContextCaches.call(this)},n.startPass=function(e){},n.endPass=function(e){},n.clear=function(e){},n.setDepthBias=function(e){},n.setDepthBiasValues=function(e,t){},n.setViewport=function(e,t,n,i){},n.setScissor=function(e,t,n,i){},n.copyRenderTarget=function(e,t,n,i){return!0},t}(Ur);function rc(e,t){var n;void 0===t&&(t={});var i,a,s=null!=(n=t.deviceTypes)?n:[];s.includes(Ms)||s.push(Ms),s.includes(Ls)||s.push(Ls),s.includes(Os)||s.push(Os),we.browser&&navigator.xr&&(null!=(i=t).xrCompatible||(i.xrCompatible=!0));for(var r=0;r<s.length;r++){var o,l=s[r];if(l===Ps&&null!=(o=window)&&null!=(o=o.navigator)&&o.gpu)return(a=new fl(e,t)).initWebGpu(t.glslangUrl,t.twgslUrl);if(l===Ls||l===Ms)return t.preferWebGl2=l===Ms,a=new $l(e,t),Promise.resolve(a);if(l===Os)return a=new sc(e,t),Promise.resolve(a)}return Promise.reject(new Error("Failed to allocate graphics device"))}var oc=0,lc=function(){function e(e,t,n,i,a){void 0===i&&(i=mn),this.device=e,this.format=t,this.numIndices=n,this.usage=i,this.id=oc++,this.impl=e.createIndexBufferImpl(this);var s=Ws[t];this.bytesPerIndex=s,this.numBytes=this.numIndices*s,a?this.setData(a):this.storage=new ArrayBuffer(this.numBytes),this.adjustVramSizeTracking(e._vram,this.numBytes),this.device.buffers.push(this)}var t=e.prototype;return t.destroy=function(){var e=this.device,t=e.buffers.indexOf(this);-1!==t&&e.buffers.splice(t,1),this.device.indexBuffer===this&&(this.device.indexBuffer=null),this.impl.initialized&&(this.impl.destroy(e),this.adjustVramSizeTracking(e._vram,-this.storage.byteLength))},t.adjustVramSizeTracking=function(e,t){e.ib+=t},t.loseContext=function(){this.impl.loseContext()},t.getFormat=function(){return this.format},t.getNumIndices=function(){return this.numIndices},t.lock=function(){return this.storage},t.unlock=function(){this.impl.unlock(this)},t.setData=function(e){return e.byteLength===this.numBytes&&(this.storage=e,this.unlock(),!0)},t._lockTypedArray=function(){var e=this.lock();return this.format===Yn?new Uint32Array(e):this.format===Xn?new Uint16Array(e):new Uint8Array(e)},t.writeData=function(e,t){var n=this._lockTypedArray();if(e.length>t)if(ArrayBuffer.isView(e))e=e.subarray(0,t),n.set(e);else for(var i=0;i<t;i++)n[i]=e[i];else n.set(e);this.unlock()},t.readData=function(e){var t=this._lockTypedArray(),n=this.numIndices;if(ArrayBuffer.isView(e))e.set(t);else{e.length=0;for(var i=0;i<n;i++)e[i]=t[i]}return n},e}(),cc=function(){function e(e,t){void 0===t&&(t=vn),this.device=e.device;var n=this.device.gl;this._inputBuffer=e,t===vn&&e.usage!==t&&(n.bindBuffer(n.ARRAY_BUFFER,e.impl.bufferId),n.bufferData(n.ARRAY_BUFFER,e.storage,n.DYNAMIC_COPY)),this._outputBuffer=new Mr(e.device,e.format,e.numVertices,t,e.storage)}e.createShader=function(e,t,n){return new Qo(e,Vl.createDefinition(e,{name:n,vertexCode:t,useTransformFeedback:!0}))};var t=e.prototype;return t.destroy=function(){this._outputBuffer.destroy()},t.process=function(e,t){void 0===t&&(t=!0);var n=this.device,i=n.getRenderTarget();if(n.setRenderTarget(null),n.updateBegin(),n.setVertexBuffer(this._inputBuffer,0),n.setRaster(!1),n.setTransformFeedbackBuffer(this._outputBuffer),n.setShader(e),n.draw({type:Mi,base:0,count:this._inputBuffer.numVertices,indexed:!1}),n.setTransformFeedbackBuffer(null),n.setRaster(!0),n.updateEnd(),n.setRenderTarget(i),t){var a=this._inputBuffer.impl.bufferId;this._inputBuffer.impl.bufferId=this._outputBuffer.impl.bufferId,this._outputBuffer.impl.bufferId=a,a=this._inputBuffer.impl.vao,this._inputBuffer.impl.vao=this._outputBuffer.impl.vao,this._outputBuffer.impl.vao=a}},q(e,[{key:"inputBuffer",get:function(){return this._inputBuffer}},{key:"outputBuffer",get:function(){return this._outputBuffer}}]),e}();function hc(e){this.array[this.index]=e}function pc(e,t){this.array[this.index]=e,this.array[this.index+1]=t}function dc(e,t,n){this.array[this.index]=e,this.array[this.index+1]=t,this.array[this.index+2]=n}function uc(e,t,n,i){this.array[this.index]=e,this.array[this.index+1]=t,this.array[this.index+2]=n,this.array[this.index+3]=i}function mc(e,t,n){this.array[e]=t[n]}function fc(e,t,n){this.array[e]=t[n],this.array[e+1]=t[n+1]}function gc(e,t,n){this.array[e]=t[n],this.array[e+1]=t[n+1],this.array[e+2]=t[n+2]}function vc(e,t,n){this.array[e]=t[n],this.array[e+1]=t[n+1],this.array[e+2]=t[n+2],this.array[e+3]=t[n+3]}function yc(e,t,n){t[n]=this.array[e]}function _c(e,t,n){t[n]=this.array[e],t[n+1]=this.array[e+1]}function wc(e,t,n){t[n]=this.array[e],t[n+1]=this.array[e+1],t[n+2]=this.array[e+2]}function bc(e,t,n){t[n]=this.array[e],t[n+1]=this.array[e+1],t[n+2]=this.array[e+2],t[n+3]=this.array[e+3]}var xc=function(){function e(e,t,n){switch(this.index=0,this.numComponents=t.numComponents,n.interleaved?this.array=new Us[t.dataType](e,t.offset):this.array=new Us[t.dataType](e,t.offset,n.vertexCount*t.numComponents),this.stride=t.stride/this.array.constructor.BYTES_PER_ELEMENT,t.numComponents){case 1:this.set=hc,this.getToArray=yc,this.setFromArray=mc;break;case 2:this.set=pc,this.getToArray=_c,this.setFromArray=fc;break;case 3:this.set=dc,this.getToArray=wc,this.setFromArray=gc;break;case 4:this.set=uc,this.getToArray=bc,this.setFromArray=vc}}var t=e.prototype;return t.get=function(e){return this.array[this.index+e]},t.set=function(e,t,n,i){},t.getToArray=function(e,t,n){},t.setFromArray=function(e,t,n){},e}(),Cc=function(){function e(e){this.vertexBuffer=e,this.vertexFormatSize=e.getFormat().size,this.buffer=this.vertexBuffer.lock(),this.accessors=[],this.element={};for(var t=this.vertexBuffer.getFormat(),n=0;n<t.elements.length;n++){var i=t.elements[n];this.accessors[n]=new xc(this.buffer,i,t),this.element[i.name]=this.accessors[n]}}var t=e.prototype;return t.next=function(e){void 0===e&&(e=1);for(var t=0,n=this.accessors,i=this.accessors.length;t<i;){var a=n[t++];a.index+=e*a.stride}},t.end=function(){this.vertexBuffer.unlock()},t.writeData=function(e,t,n){var i=this.element[e];if(i){n>this.vertexBuffer.numVertices&&(n=this.vertexBuffer.numVertices);var a=i.numComponents;if(this.vertexBuffer.getFormat().interleaved)for(var s=0,r=0;r<n;r++)i.setFromArray(s,t,r*a),s+=i.stride;else if(t.length>n*a){var o=n*a;if(ArrayBuffer.isView(t))t=t.subarray(0,o),i.array.set(t);else for(var l=0;l<o;l++)i.array[l]=t[l]}else i.array.set(t)}},t.readData=function(e,t){var n=this.element[e],i=0;if(n){var a;i=this.vertexBuffer.numVertices;var s=n.numComponents;if(this.vertexBuffer.getFormat().interleaved){Array.isArray(t)&&(t.length=0),n.index=0;var r=0;for(a=0;a<i;a++)n.getToArray(r,t,a*s),r+=n.stride}else if(ArrayBuffer.isView(t))t.set(n.array);else{t.length=0;var o=i*s;for(a=0;a<o;a++)t[a]=n.array[a]}}return i},e}(),Sc="mouse",Ec="keyboard",Tc="gamepad",Ac="mousex",Lc="mousey",Mc="padlx",Pc="padly",Oc="padrx",Ic="padry",Rc="key",Dc="keydown",kc="keyup",Fc="mousedown",Bc="mousemove",Nc="mouseup",Uc="mousewheel",zc="touchstart",Vc="touchend",Hc="touchmove",Gc="touchcancel",Wc="select",jc="selectstart",Xc="selectend",Yc=8,qc=9,Kc=13,Zc=13,Qc=16,Jc=17,$c=18,eh=19,th=20,nh=27,ih=32,ah=33,sh=34,rh=35,oh=36,lh=37,ch=38,hh=39,ph=40,dh=44,uh=45,mh=46,fh=48,gh=49,vh=50,yh=51,_h=52,wh=53,bh=54,xh=55,Ch=56,Sh=57,Eh=59,Th=61,Ah=65,Lh=66,Mh=67,Ph=68,Oh=69,Ih=70,Rh=71,Dh=72,kh=73,Fh=74,Bh=75,Nh=76,Uh=77,zh=78,Vh=79,Hh=80,Gh=81,Wh=82,jh=83,Xh=84,Yh=85,qh=86,Kh=87,Zh=88,Qh=89,Jh=90,$h=91,ep=93,tp=96,np=97,ip=98,ap=99,sp=100,rp=101,op=102,lp=103,cp=104,hp=105,pp=106,dp=107,up=108,mp=109,fp=110,gp=111,vp=112,yp=113,_p=114,wp=115,bp=116,xp=117,Cp=118,Sp=119,Ep=120,Tp=121,Ap=122,Lp=123,Mp=188,Pp=190,Op=191,Ip=219,Rp=220,Dp=221,kp=224,Fp=-1,Bp=0,Np=1,Up=2,zp=0,Vp=1,Hp=2,Gp=3,Wp=0,jp=1,Xp=2,Yp=3,qp=4,Kp=5,Zp=6,Qp=7,Jp=8,$p=9,ed=10,td=11,nd=12,id=13,ad=14,sd=15,rd=16,od=0,ld=1,cd=2,hd=3,pd="gamepadconnected",dd="gamepaddisconnected",ud=0,md=1,fd=2,gd=3,vd=2,yd=0,_d=1,wd=3,bd=4,xd=5,Cd=function(e,t){t?(this.key=t.keyCode,this.element=t.target,this.event=t):(this.key=null,this.element=null,this.event=null)},Sd=new Cd;function Ed(e){return Sd.key=e.keyCode,Sd.element=e.target,Sd.event=e,Sd}function Td(e){return"string"==typeof e?e.toUpperCase().charCodeAt(0):e}var Ad={9:"Tab",13:"Enter",16:"Shift",17:"Control",18:"Alt",27:"Escape",37:"Left",38:"Up",39:"Right",40:"Down",46:"Delete",91:"Win"},Ld=function(e){function t(t,n){var i;return void 0===n&&(n={}),(i=e.call(this)||this)._element=null,i._keyDownHandler=i._handleKeyDown.bind(J(i)),i._keyUpHandler=i._handleKeyUp.bind(J(i)),i._keyPressHandler=i._handleKeyPress.bind(J(i)),i._visibilityChangeHandler=i._handleVisibilityChange.bind(J(i)),i._windowBlurHandler=i._handleWindowBlur.bind(J(i)),i._keymap={},i._lastmap={},t&&i.attach(t),i.preventDefault=n.preventDefault||!1,i.stopPropagation=n.stopPropagation||!1,i}Z(t,e);var n=t.prototype;return n.attach=function(e){this._element&&this.detach(),this._element=e,this._element.addEventListener("keydown",this._keyDownHandler,!1),this._element.addEventListener("keypress",this._keyPressHandler,!1),this._element.addEventListener("keyup",this._keyUpHandler,!1),document.addEventListener("visibilitychange",this._visibilityChangeHandler,!1),window.addEventListener("blur",this._windowBlurHandler,!1)},n.detach=function(){this._element&&(this._element.removeEventListener("keydown",this._keyDownHandler),this._element.removeEventListener("keypress",this._keyPressHandler),this._element.removeEventListener("keyup",this._keyUpHandler),this._element=null,document.removeEventListener("visibilitychange",this._visibilityChangeHandler,!1),window.removeEventListener("blur",this._windowBlurHandler,!1))},n.toKeyIdentifier=function(e){e=Td(e);var t=Ad[e.toString()];if(t)return t;for(var n=e.toString(16).toUpperCase(),i=n.length,a=0;a<4-i;a++)n="0"+n;return"U+"+n},n._handleKeyDown=function(e){var t=e.keyCode||e.charCode;if(void 0!==t){var n=this.toKeyIdentifier(t);this._keymap[n]=!0,this.fire("keydown",Ed(e)),this.preventDefault&&e.preventDefault(),this.stopPropagation&&e.stopPropagation()}},n._handleKeyUp=function(e){var t=e.keyCode||e.charCode;if(void 0!==t){var n=this.toKeyIdentifier(t);delete this._keymap[n],this.fire("keyup",Ed(e)),this.preventDefault&&e.preventDefault(),this.stopPropagation&&e.stopPropagation()}},n._handleKeyPress=function(e){this.fire("keypress",Ed(e)),this.preventDefault&&e.preventDefault(),this.stopPropagation&&e.stopPropagation()},n._handleVisibilityChange=function(){"hidden"===document.visibilityState&&this._handleWindowBlur()},n._handleWindowBlur=function(){this._keymap={},this._lastmap={}},n.update=function(){for(var e in this._lastmap)delete this._lastmap[e];for(var t in this._keymap)this._keymap.hasOwnProperty(t)&&(this._lastmap[t]=this._keymap[t])},n.isPressed=function(e){var t=Td(e),n=this.toKeyIdentifier(t);return!!this._keymap[n]},n.wasPressed=function(e){var t=Td(e),n=this.toKeyIdentifier(t);return!!this._keymap[n]&&!this._lastmap[n]},n.wasReleased=function(e){var t=Td(e),n=this.toKeyIdentifier(t);return!this._keymap[n]&&!!this._lastmap[n]},t}(re);function Md(){return!!(document.pointerLockElement||document.mozPointerLockElement||document.webkitPointerLockElement)}var Pd=function e(t,n){var i={x:0,y:0};if(n){if(n instanceof e)throw Error("Expected MouseEvent");i=t._getTargetCoords(n)}else n={};if(i)this.x=i.x,this.y=i.y;else{if(!Md())return;this.x=0,this.y=0}this.wheelDelta=0,"wheel"===n.type&&(n.deltaY>0?this.wheelDelta=1:n.deltaY<0&&(this.wheelDelta=-1)),Md()?(this.dx=n.movementX||n.webkitMovementX||n.mozMovementX||0,this.dy=n.movementY||n.webkitMovementY||n.mozMovementY||0):(this.dx=this.x-t._lastX,this.dy=this.y-t._lastY),"mousedown"===n.type||"mouseup"===n.type?this.button=n.button:this.button=Fp,this.buttons=t._buttons.slice(0),this.element=n.target,this.ctrlKey=n.ctrlKey||!1,this.altKey=n.altKey||!1,this.shiftKey=n.shiftKey||!1,this.metaKey=n.metaKey||!1,this.event=n},Od=function(e){function t(t){var n;return(n=e.call(this)||this)._lastX=0,n._lastY=0,n._buttons=[!1,!1,!1],n._lastbuttons=[!1,!1,!1],n._upHandler=n._handleUp.bind(J(n)),n._downHandler=n._handleDown.bind(J(n)),n._moveHandler=n._handleMove.bind(J(n)),n._wheelHandler=n._handleWheel.bind(J(n)),n._contextMenuHandler=function(e){e.preventDefault()},n._target=null,n._attached=!1,n.attach(t),n}Z(t,e),t.isPointerLocked=function(){return Md()};var n=t.prototype;return n.attach=function(e){if(this._target=e,!this._attached){this._attached=!0;var t=!!we.passiveEvents&&{passive:!1};window.addEventListener("mouseup",this._upHandler,t),window.addEventListener("mousedown",this._downHandler,t),window.addEventListener("mousemove",this._moveHandler,t),window.addEventListener("wheel",this._wheelHandler,t)}},n.detach=function(){if(this._attached){this._attached=!1,this._target=null;var e=!!we.passiveEvents&&{passive:!1};window.removeEventListener("mouseup",this._upHandler,e),window.removeEventListener("mousedown",this._downHandler,e),window.removeEventListener("mousemove",this._moveHandler,e),window.removeEventListener("wheel",this._wheelHandler,e)}},n.disableContextMenu=function(){this._target&&this._target.addEventListener("contextmenu",this._contextMenuHandler)},n.enableContextMenu=function(){this._target&&this._target.removeEventListener("contextmenu",this._contextMenuHandler)},n.enablePointerLock=function(e,t){if(document.body.requestPointerLock){var n=function t(){e(),document.removeEventListener("pointerlockchange",t)},i=function e(){t(),document.removeEventListener("pointerlockerror",e)};e&&document.addEventListener("pointerlockchange",n,!1),t&&document.addEventListener("pointerlockerror",i,!1),document.body.requestPointerLock()}else t&&t()},n.disablePointerLock=function(e){if(document.exitPointerLock){var t=function t(){e(),document.removeEventListener("pointerlockchange",t)};e&&document.addEventListener("pointerlockchange",t,!1),document.exitPointerLock()}},n.update=function(){this._lastbuttons[0]=this._buttons[0],this._lastbuttons[1]=this._buttons[1],this._lastbuttons[2]=this._buttons[2]},n.isPressed=function(e){return this._buttons[e]},n.wasPressed=function(e){return this._buttons[e]&&!this._lastbuttons[e]},n.wasReleased=function(e){return!this._buttons[e]&&this._lastbuttons[e]},n._handleUp=function(e){this._buttons[e.button]=!1;var t=new Pd(this,e);t.event&&this.fire(Nc,t)},n._handleDown=function(e){this._buttons[e.button]=!0;var t=new Pd(this,e);t.event&&this.fire(Fc,t)},n._handleMove=function(e){var t=new Pd(this,e);t.event&&(this.fire(Bc,t),this._lastX=t.x,this._lastY=t.y)},n._handleWheel=function(e){var t=new Pd(this,e);t.event&&this.fire(Uc,t)},n._getTargetCoords=function(e){var t=this._target.getBoundingClientRect(),n=Math.floor(t.left),i=Math.floor(t.top);return e.clientX<n||e.clientX>=n+this._target.clientWidth||e.clientY<i||e.clientY>=i+this._target.clientHeight?null:{x:e.clientX-n,y:e.clientY-i}},t}(re),Id=function(){function e(e,t){void 0===t&&(t={}),this._keyboard=t.keyboard||null,this._mouse=t.mouse||null,this._gamepads=t.gamepads||null,this._element=null,this._actions={},this._axes={},this._axesValues={},e&&this.attach(e)}var t=e.prototype;return t.attach=function(e){this._element=e,this._keyboard&&this._keyboard.attach(e),this._mouse&&this._mouse.attach(e)},t.detach=function(){this._keyboard&&this._keyboard.detach(),this._mouse&&this._mouse.detach(),this._element=null},t.disableContextMenu=function(){this._mouse||this._enableMouse(),this._mouse.disableContextMenu()},t.enableContextMenu=function(){this._mouse||this._enableMouse(),this._mouse.enableContextMenu()},t.update=function(e){for(var t in this._keyboard&&this._keyboard.update(),this._mouse&&this._mouse.update(),this._gamepads&&this._gamepads.update(),this._axesValues={},this._axes)this._axesValues[t]=[]},t.appendAction=function(e,t){this._actions[e]=this._actions[e]||[],this._actions[e].push(t)},t.registerKeys=function(e,t){if(this._keyboard||this._enableKeyboard(),this._actions[e])throw new Error("Action: "+e+" already registered");if(void 0===t)throw new Error("Invalid button");t.length||(t=[t]),this.appendAction(e,{type:Ec,keys:t})},t.registerMouse=function(e,t){if(this._mouse||this._enableMouse(),void 0===t)throw new Error("Invalid button");this.appendAction(e,{type:Sc,button:t})},t.registerPadButton=function(e,t,n){if(void 0===n)throw new Error("Invalid button");this.appendAction(e,{type:Tc,button:n,pad:t})},t.registerAxis=function(e){var t=e.name;this._axes[t]||(this._axes[t]=[]);var n=this._axes[t].push(t);(e=e||{}).pad=e.pad||zp;var i=function(i,a,s,r){switch(a){case"mousex":i._mouse.on(Bc,(function(e){i._axesValues[t][n]=e.dx/10}));break;case"mousey":i._mouse.on(Bc,(function(e){i._axesValues[t][n]=e.dy/10}));break;case"key":i._axes[t].push((function(){return i._keyboard.isPressed(r)?s:0}));break;case"padrx":i._axes[t].push((function(){return i._gamepads.getAxis(e.pad,cd)}));break;case"padry":i._axes[t].push((function(){return i._gamepads.getAxis(e.pad,hd)}));break;case"padlx":i._axes[t].push((function(){return i._gamepads.getAxis(e.pad,od)}));break;case"padly":i._axes[t].push((function(){return i._gamepads.getAxis(e.pad,ld)}));break;default:throw new Error("Unknown axis")}};i(this,e.positive,1,e.positiveKey),(e.negativeKey||e.negative!==e.positive)&&i(this,e.negative,-1,e.negativeKey)},t.isPressed=function(e){if(!this._actions[e])return!1;for(var t=this._actions[e].length,n=0;n<t;++n){var i=this._actions[e][n];switch(i.type){case Ec:if(this._keyboard)for(var a=i.keys.length,s=0;s<a;s++)if(this._keyboard.isPressed(i.keys[s]))return!0;break;case Sc:if(this._mouse&&this._mouse.isPressed(i.button))return!0;break;case Tc:if(this._gamepads&&this._gamepads.isPressed(i.pad,i.button))return!0}}return!1},t.wasPressed=function(e){if(!this._actions[e])return!1;for(var t=this._actions[e].length,n=0;n<t;++n){var i=this._actions[e][n];switch(i.type){case Ec:if(this._keyboard)for(var a=i.keys.length,s=0;s<a;s++)if(this._keyboard.wasPressed(i.keys[s]))return!0;break;case Sc:if(this._mouse&&this._mouse.wasPressed(i.button))return!0;break;case Tc:if(this._gamepads&&this._gamepads.wasPressed(i.pad,i.button))return!0}}return!1},t.getAxis=function(e){var t=0;if(this._axes[e])for(var n=this._axes[e].length,i=0;i<n;i++)if("function"===H(this._axes[e][i])){var a=this._axes[e][i]();Math.abs(a)>Math.abs(t)&&(t=a)}else this._axesValues[e]&&Math.abs(this._axesValues[e][i])>Math.abs(t)&&(t=this._axesValues[e][i]);return t},t._enableMouse=function(){if(this._mouse=new Od,!this._element)throw new Error("Controller must be attached to an Element");this._mouse.attach(this._element)},t._enableKeyboard=function(){if(this._keyboard=new Ld,!this._element)throw new Error("Controller must be attached to an Element");this._keyboard.attach(this._element)},e}(),Rd=Object.freeze([]),Dd=function(){return Rd};"undefined"!=typeof navigator&&(Dd=(navigator.getGamepads||navigator.webkitGetGamepads||Dd).bind(navigator));var kd={buttons:{PAD_FACE_1:Wp,PAD_FACE_2:jp,PAD_FACE_3:Xp,PAD_FACE_4:Yp,PAD_L_SHOULDER_1:qp,PAD_R_SHOULDER_1:Kp,PAD_L_SHOULDER_2:Zp,PAD_R_SHOULDER_2:Qp,PAD_SELECT:Jp,PAD_START:$p,PAD_L_STICK_BUTTON:ed,PAD_R_STICK_BUTTON:td,PAD_UP:nd,PAD_DOWN:id,PAD_LEFT:ad,PAD_RIGHT:sd,PAD_VENDOR:rd,XRPAD_TRIGGER:yd,XRPAD_SQUEEZE:_d,XRPAD_TOUCHPAD_BUTTON:vd,XRPAD_STICK_BUTTON:wd,XRPAD_A:bd,XRPAD_B:xd},axes:{PAD_L_STICK_X:od,PAD_L_STICK_Y:ld,PAD_R_STICK_X:cd,PAD_R_STICK_Y:hd,XRPAD_TOUCHPAD_X:ud,XRPAD_TOUCHPAD_Y:md,XRPAD_STICK_X:fd,XRPAD_STICK_Y:gd}},Fd={DEFAULT:{buttons:["PAD_FACE_1","PAD_FACE_2","PAD_FACE_3","PAD_FACE_4","PAD_L_SHOULDER_1","PAD_R_SHOULDER_1","PAD_L_SHOULDER_2","PAD_R_SHOULDER_2","PAD_SELECT","PAD_START","PAD_L_STICK_BUTTON","PAD_R_STICK_BUTTON","PAD_UP","PAD_DOWN","PAD_LEFT","PAD_RIGHT","PAD_VENDOR"],axes:["PAD_L_STICK_X","PAD_L_STICK_Y","PAD_R_STICK_X","PAD_R_STICK_Y"]},DEFAULT_DUAL:{buttons:["PAD_FACE_1","PAD_FACE_2","PAD_FACE_3","PAD_FACE_4","PAD_L_SHOULDER_1","PAD_R_SHOULDER_1","PAD_L_SHOULDER_2","PAD_R_SHOULDER_2","PAD_SELECT","PAD_START","PAD_L_STICK_BUTTON","PAD_R_STICK_BUTTON","PAD_VENDOR"],axes:["PAD_L_STICK_X","PAD_L_STICK_Y","PAD_R_STICK_X","PAD_R_STICK_Y"],synthesizedButtons:{PAD_UP:{axis:0,min:0,max:1},PAD_DOWN:{axis:0,min:-1,max:0},PAD_LEFT:{axis:0,min:-1,max:0},PAD_RIGHT:{axis:0,min:0,max:1}}},PS3:{buttons:["PAD_FACE_1","PAD_FACE_2","PAD_FACE_4","PAD_FACE_3","PAD_L_SHOULDER_1","PAD_R_SHOULDER_1","PAD_L_SHOULDER_2","PAD_R_SHOULDER_2","PAD_SELECT","PAD_START","PAD_L_STICK_BUTTON","PAD_R_STICK_BUTTON","PAD_UP","PAD_DOWN","PAD_LEFT","PAD_RIGHT","PAD_VENDOR"],axes:["PAD_L_STICK_X","PAD_L_STICK_Y","PAD_R_STICK_X","PAD_R_STICK_Y"],mapping:"standard"},DEFAULT_XR:{buttons:["XRPAD_TRIGGER","XRPAD_SQUEEZE","XRPAD_TOUCHPAD_BUTTON","XRPAD_STICK_BUTTON","XRPAD_A","XRPAD_B"],axes:["XRPAD_TOUCHPAD_X","XRPAD_TOUCHPAD_Y","XRPAD_STICK_X","XRPAD_STICK_Y"],mapping:"xr-standard"}},Bd={"Product: 0268":"PS3"},Nd={};function Ud(e){var t=Nd[e.id];if(t)return t;for(var n in Bd)if(-1!==e.id.indexOf(n)){var i=Bd[n];if(!e.mapping){var a=Fd["RAW_"+i];if(a)return a}return Fd[i]}if("xr-standard"===e.mapping)return Fd.DEFAULT_XR;var s=Fd.DEFAULT,r=e.buttons.length<s.buttons.length?Fd.DEFAULT_DUAL:s;return r.mapping=e.mapping,r}var zd=.25;function Vd(e){return new Promise((function(t){setTimeout(t,e)}))}var Hd=function(){function e(e,t){var n,i;this.value=0,this.pressed=!1,this.touched=!1,this.wasPressed=!1,this.wasReleased=!1,this.wasTouched=!1,"number"==typeof e?(this.value=e,this.pressed=1===e,this.touched=e>0):(this.value=e.value,this.pressed=e.pressed,this.touched=null!=(n=e.touched)?n:e.value>0),t&&("number"==typeof t?(this.wasPressed=1!==t&&this.pressed,this.wasReleased=1===t&&!this.pressed,this.wasTouched=0===t&&this.touched):(this.wasPressed=!t.pressed&&this.pressed,this.wasReleased=t.pressed&&!this.pressed,this.wasTouched=!(null!=(i=t.touched)?i:t.value>0)&&this.touched))}return e.prototype.update=function(e){var t,n=e.value,i=e.pressed,a=null!=(t=e.touched)?t:n>0;this.wasPressed=!this.pressed&&i,this.wasReleased=this.pressed&&!i,this.wasTouched=!this.touched&&a,this.value=n,this.pressed=i,this.touched=a},e}(),Gd=Object.freeze(new Hd(0)),Wd=function(){function e(e,t){this._compiledMapping={buttons:[],axes:[]},this.id=e.id,this.index=e.index,this._buttons=e.buttons.map((function(e){return new Hd(e)})),this._axes=[].concat(e.axes),this._previousAxes=[].concat(e.axes),this.mapping=t.mapping,this.map=t,this.hand=e.hand||"none",this.pad=e,this._compileMapping()}var t=e.prototype;return t._compileMapping=function(){var e=this,t=this._compiledMapping,n=t.axes,i=t.buttons,a=kd.axes,s=kd.buttons;n.length=0,i.length=0,this.map.axes&&this.map.axes.forEach((function(t,i){n[a[t]]=function(){return e.pad.axes[i]||0}}));for(var r=0,o=n.length;r<o;r++)n[r]||(n[r]=function(){return 0});var l=this.map.buttons;l&&l.forEach((function(t,n){i[s[t]]=function(){return e._buttons[n]||Gd}}));var c=this.map.synthesizedButtons;c&&Object.entries(c).forEach((function(t){var n=t[1],a=n.axis,r=n.max,o=n.min;i[s[t[0]]]=function(){var t,n;return new Hd(Math.abs(at.clamp(null!=(t=e._axes[a])?t:0,o,r)),Math.abs(at.clamp(null!=(n=e._previousAxes[a])?n:0,o,r)))}}));for(var h=0,p=i.length;h<p;h++)i[h]||(i[h]=function(){return Gd})},t.update=function(e){this.pad=e;var t=this._previousAxes,n=this._axes;t.length=0,t.push.apply(t,n),n.length=0,n.push.apply(n,e.axes);for(var i=this._buttons,a=0,s=i.length;a<s;a++)i[a].update(e.buttons[a]);return this},t.updateMap=function(e){e.mapping="custom",Nd[this.id]=e,this.map=e,this.mapping="custom",this._compileMapping()},t.resetMap=function(){if(Nd[this.id]){delete Nd[this.id];var e=Ud(this.pad);this.map=e,this.mapping=e.mapping,this._compileMapping()}},t.pulse=function(){var e=X(W().mark((function e(t,n,i){var a,s,r,o,l,c,h,p;return W().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(!(a=this.pad.vibrationActuator?[this.pad.vibrationActuator]:this.pad.hapticActuators||Rd).length){e.next=9;break}return l=null!=(s=null==i?void 0:i.startDelay)?s:0,c=null!=(r=null==i?void 0:i.strongMagnitude)?r:t,h=null!=(o=null==i?void 0:i.weakMagnitude)?o:t,e.next=7,Promise.all(a.map(function(){var e=X(W().mark((function e(i){return W().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(i){e.next=2;break}return e.abrupt("return",!0);case 2:if(!i.playEffect){e.next=6;break}return e.abrupt("return",i.playEffect(i.type,{duration:n,startDelay:l,strongMagnitude:c,weakMagnitude:h}));case 6:if(!i.pulse){e.next=10;break}return e.next=9,Vd(l);case 9:return e.abrupt("return",i.pulse(t,n));case 10:return e.abrupt("return",!1);case 11:case"end":return e.stop()}}),e)})));return function(t){return e.apply(this,arguments)}}()));case 7:return p=e.sent,e.abrupt("return",p.some((function(e){return!0===e||"complete"===e})));case 9:return e.abrupt("return",!1);case 10:case"end":return e.stop()}}),e,this)})));function t(t,n,i){return e.apply(this,arguments)}return t}(),t.getButton=function(e){var t=this._compiledMapping.buttons[e];return t?t():Gd},t.isPressed=function(e){return this.getButton(e).pressed},t.wasPressed=function(e){return this.getButton(e).wasPressed},t.wasReleased=function(e){return this.getButton(e).wasReleased},t.isTouched=function(e){return this.getButton(e).touched},t.wasTouched=function(e){return this.getButton(e).wasTouched},t.getValue=function(e){return this.getButton(e).value},t.getAxis=function(e){var t=this.axes[e];return t&&Math.abs(t)>zd?t:0},q(e,[{key:"connected",get:function(){return this.pad.connected}},{key:"axes",get:function(){return this._compiledMapping.axes.map((function(e){return e()}))}},{key:"buttons",get:function(){return this._compiledMapping.buttons.map((function(e){return e()}))}}]),e}(),jd=function(e){function t(){var t;return(t=e.call(this)||this).gamepadsSupported=we.gamepads,t.current=[],t._previous=[],t._ongamepadconnectedHandler=t._ongamepadconnected.bind(J(t)),t._ongamepaddisconnectedHandler=t._ongamepaddisconnected.bind(J(t)),window.addEventListener("gamepadconnected",t._ongamepadconnectedHandler,!1),window.addEventListener("gamepaddisconnected",t._ongamepaddisconnectedHandler,!1),t.poll(),t}Z(t,e);var n=t.prototype;return n._ongamepadconnected=function(e){for(var t=new Wd(e.gamepad,this.getMap(e.gamepad)),n=this.current,i=n.findIndex((function(e){return e.index===t.index}));-1!==i;)n.splice(i,1),i=n.findIndex((function(e){return e.index===t.index}));n.push(t),this.fire(pd,t)},n._ongamepaddisconnected=function(e){var t=this.current,n=t.findIndex((function(t){return t.index===e.gamepad.index}));-1!==n&&(this.fire(dd,t[n]),t.splice(n,1))},n.update=function(){this.poll()},n.poll=function(e){void 0===e&&(e=[]),e.length>0&&(e.length=0);for(var t=Dd(),n=0,i=t.length;n<i;n++)if(t[n]){var a=this.findByIndex(t[n].index);if(a)e.push(a.update(t[n]));else{var s=new Wd(t[n],this.getMap(t[n]));this.current.push(s),e.push(s)}}return e},n.destroy=function(){window.removeEventListener("gamepadconnected",this._ongamepadconnectedHandler,!1),window.removeEventListener("gamepaddisconnected",this._ongamepaddisconnectedHandler,!1)},n.getMap=function(e){return Ud(e)},n.isPressed=function(e,t){var n;return(null==(n=this.current[e])?void 0:n.isPressed(t))||!1},n.wasPressed=function(e,t){var n;return(null==(n=this.current[e])?void 0:n.wasPressed(t))||!1},n.wasReleased=function(e,t){var n;return(null==(n=this.current[e])?void 0:n.wasReleased(t))||!1},n.getAxis=function(e,t){var n;return(null==(n=this.current[e])?void 0:n.getAxis(t))||0},n.pulse=function(e,t,n,i){var a=this.current[e];return a?a.pulse(t,n,i):Promise.resolve(!1)},n.pulseAll=function(e,t,n){return Promise.all(this.current.map((function(i){return i.pulse(e,t,n)})))},n.findById=function(e){return this.current.find((function(t){return t&&t.id===e}))||null},n.findByIndex=function(e){return this.current.find((function(t){return t&&t.index===e}))||null},q(t,[{key:"deadZone",get:function(){return zd},set:function(e){zd=e}},{key:"previous",get:function(){for(var e=this.current,t=0,n=e.length;t<n;t++){var i=e[t]._buttons;this._previous[t]||(this._previous[t]=[]);for(var a=0,s=i.length;a<s;a++){var r=i[t];this.previous[t][a]=!!r&&(!r.wasPressed&&r.pressed||r.wasReleased)}}return this._previous.length=this.current.length,this._previous}}]),t}(re);function Xd(e){for(var t=0,n=0,i=e.target;!(i instanceof HTMLElement);)i=i.parentNode;var a=i;do{t+=a.offsetLeft-a.scrollLeft,n+=a.offsetTop-a.scrollTop,a=a.offsetParent}while(a);return{x:e.pageX-t,y:e.pageY-n}}var Yd=function(e){var t=Xd(e);this.id=e.identifier,this.x=t.x,this.y=t.y,this.target=e.target,this.touch=e},qd=function(){function e(e,t){if(this.element=t.target,this.event=t,this.touches=[],this.changedTouches=[],t){for(var n=0,i=t.touches.length;n<i;n++)this.touches.push(new Yd(t.touches[n]));for(var a=0,s=t.changedTouches.length;a<s;a++)this.changedTouches.push(new Yd(t.changedTouches[a]))}}return e.prototype.getTouchById=function(e,t){for(var n=0,i=t.length;n<i;n++)if(t[n].id===e)return t[n];return null},e}(),Kd=function(e){function t(t){var n;return(n=e.call(this)||this)._element=null,n._startHandler=n._handleTouchStart.bind(J(n)),n._endHandler=n._handleTouchEnd.bind(J(n)),n._moveHandler=n._handleTouchMove.bind(J(n)),n._cancelHandler=n._handleTouchCancel.bind(J(n)),n.attach(t),n}Z(t,e);var n=t.prototype;return n.attach=function(e){this._element&&this.detach(),this._element=e,this._element.addEventListener("touchstart",this._startHandler,!1),this._element.addEventListener("touchend",this._endHandler,!1),this._element.addEventListener("touchmove",this._moveHandler,!1),this._element.addEventListener("touchcancel",this._cancelHandler,!1)},n.detach=function(){this._element&&(this._element.removeEventListener("touchstart",this._startHandler,!1),this._element.removeEventListener("touchend",this._endHandler,!1),this._element.removeEventListener("touchmove",this._moveHandler,!1),this._element.removeEventListener("touchcancel",this._cancelHandler,!1)),this._element=null},n._handleTouchStart=function(e){this.fire("touchstart",new qd(this,e))},n._handleTouchEnd=function(e){this.fire("touchend",new qd(this,e))},n._handleTouchMove=function(e){e.preventDefault(),this.fire("touchmove",new qd(this,e))},n._handleTouchCancel=function(e){this.fire("touchcancel",new qd(this,e))},t}(re),Zd=function(){function e(){}var t=e.prototype;return t.get=function(e,t,n){return"function"==typeof t&&(n=t,t={}),this.request("GET",e,t,n)},t.post=function(e,t,n,i){return"function"==typeof n&&(i=n,n={}),n.postdata=t,this.request("POST",e,n,i)},t.put=function(e,t,n,i){return"function"==typeof n&&(i=n,n={}),n.postdata=t,this.request("PUT",e,n,i)},t.del=function(e,t,n){return"function"==typeof t&&(n=t,t={}),this.request("DELETE",e,t,n)},t.request=function(t,n,i,a){var s,r,o,l=this,c=!1;if("function"==typeof i&&(a=i,i={}),i.retry&&(i=Object.assign({retries:0,maxRetries:5},i)),i.callback=a,null==i.async&&(i.async=!0),null==i.headers&&(i.headers={}),null!=i.postdata)if(i.postdata instanceof Document)o=i.postdata;else if(i.postdata instanceof FormData)o=i.postdata;else if(i.postdata instanceof Object){var h=i.headers["Content-Type"];switch(void 0===h&&(i.headers["Content-Type"]=e.ContentType.FORM_URLENCODED,h=i.headers["Content-Type"]),h){case e.ContentType.FORM_URLENCODED:o="";var p=!0;for(var d in i.postdata)i.postdata.hasOwnProperty(d)&&(p?p=!1:o+="&",o+=encodeURIComponent(d)+"="+encodeURIComponent(i.postdata[d]));break;default:case e.ContentType.JSON:null==h&&(i.headers["Content-Type"]=e.ContentType.JSON),o=JSON.stringify(i.postdata)}}else o=i.postdata;if(!1===i.cache){var u=Ye();(s=new Qe(n)).query?s.query=s.query+"&ts="+u:s.query="ts="+u,n=s.toString()}i.query&&(r=G((s=new Qe(n)).getQuery(),i.query),s.setQuery(r),n=s.toString());var m=new XMLHttpRequest;for(var f in m.open(t,n,i.async),m.withCredentials=void 0!==i.withCredentials&&i.withCredentials,m.responseType=i.responseType||this._guessResponseType(n),i.headers)i.headers.hasOwnProperty(f)&&m.setRequestHeader(f,i.headers[f]);m.onreadystatechange=function(){l._onReadyStateChange(t,n,i,m)},m.onerror=function(){l._onError(t,n,i,m),c=!0};try{m.send(o)}catch(e){c||i.error(m.status,m,e)}return m},t._guessResponseType=function(t){var n=new Qe(t),i=ce.getExtension(n.path).toLowerCase();return e.binaryExtensions.indexOf(i)>=0?e.ResponseType.ARRAY_BUFFER:".json"===i?e.ResponseType.JSON:".xml"===i?e.ResponseType.DOCUMENT:e.ResponseType.TEXT},t._isBinaryContentType=function(t){return[e.ContentType.BASIS,e.ContentType.BIN,e.ContentType.DDS,e.ContentType.GLB,e.ContentType.MP3,e.ContentType.MP4,e.ContentType.OGG,e.ContentType.OPUS,e.ContentType.WAV].indexOf(t)>=0},t._isBinaryResponseType=function(t){return t===e.ResponseType.ARRAY_BUFFER||t===e.ResponseType.BLOB||t===e.ResponseType.JSON},t._onReadyStateChange=function(e,t,n,i){if(4===i.readyState)switch(i.status){case 0:i.responseURL&&i.responseURL.startsWith("file:///")?this._onSuccess(e,t,n,i):this._onError(e,t,n,i);break;case 200:case 201:case 206:case 304:this._onSuccess(e,t,n,i);break;default:this._onError(e,t,n,i)}},t._onSuccess=function(t,n,i,a){var s,r,o=a.getResponseHeader("Content-Type");o&&(r=o.split(";")[0].trim());try{s=this._isBinaryContentType(r)||this._isBinaryResponseType(a.responseType)?a.response:r===e.ContentType.JSON||n.split("?")[0].endsWith(".json")?JSON.parse(a.responseText):a.responseType===e.ResponseType.DOCUMENT||r===e.ContentType.XML?a.responseXML:a.responseText,i.callback(null,s)}catch(e){i.callback(e)}},t._onError=function(t,n,i,a){var s=this;if(!i.retrying)if(i.retry&&i.retries<i.maxRetries){i.retries++,i.retrying=!0;var r=at.clamp(Math.pow(2,i.retries)*e.retryDelay,0,i.maxRetryDelay||5e3);console.log(t+": "+n+" - Error "+a.status+". Retrying in "+r+" ms"),setTimeout((function(){i.retrying=!1,s.request(t,n,i,i.callback)}),r)}else i.callback(0===a.status?"Network error":a.status,null)},e}();Zd.ContentType={AAC:"audio/aac",BASIS:"image/basis",BIN:"application/octet-stream",DDS:"image/dds",FORM_URLENCODED:"application/x-www-form-urlencoded",GIF:"image/gif",GLB:"model/gltf-binary",JPEG:"image/jpeg",JSON:"application/json",MP3:"audio/mpeg",MP4:"audio/mp4",OGG:"audio/ogg",OPUS:'audio/ogg; codecs="opus"',PNG:"image/png",TEXT:"text/plain",WAV:"audio/x-wav",XML:"application/xml"},Zd.ResponseType={TEXT:"text",ARRAY_BUFFER:"arraybuffer",BLOB:"blob",DOCUMENT:"document",JSON:"json"},Zd.binaryExtensions=[".model",".wav",".ogg",".mp3",".mp4",".m4a",".aac",".dds",".basis",".glb",".opus"],Zd.retryDelay=100;var Qd=new Zd;function Jd(){return!("undefined"==typeof AudioContext&&"undefined"==typeof webkitAudioContext)}var $d=function(){function e(e,t,n){var i,a,s;if(void 0===n&&(n={}),this.volume=null!=(i=n.volume)?i:1,this.loop=null!=(a=n.loop)&&a,this.pitch=null!=(s=n.pitch)?s:1,this.sound=t,this.paused=!1,this.suspended=!1,this.manager=e,this.source=null,Jd()){this.startTime=0,this.startOffset=0;var r=e.context;this.gain=r.createGain()}else t.audio&&(this.source=t.audio.cloneNode(!1),this.source.pause())}var t=e.prototype;return t.getVolume=function(){return this.volume},t.getLoop=function(){return this.loop},t.setLoop=function(e){this.loop=e,this.source&&(this.source.loop=e)},t.getPitch=function(){return this.pitch},t.onManagerVolumeChange=function(){this.setVolume(this.getVolume())},t.onManagerSuspend=function(){this.isPlaying()&&!this.suspended&&(this.suspended=!0,this.pause())},t.onManagerResume=function(){this.suspended&&(this.suspended=!1,this.unpause())},t.play=function(){if(this.source)throw new Error("Call stop() before calling play()");this._createSource(),this.source&&(this.startTime=this.manager.context.currentTime,this.source.start(0,this.startOffset%this.source.buffer.duration),this.setVolume(this.volume),this.setLoop(this.loop),this.setPitch(this.pitch),this.manager.on("volumechange",this.onManagerVolumeChange,this),this.manager.on("suspend",this.onManagerSuspend,this),this.manager.on("resume",this.onManagerResume,this),this.manager.suspended&&this.onManagerSuspend())},t.pause=function(){this.source&&(this.paused=!0,this.startOffset+=this.manager.context.currentTime-this.startTime,this.source.stop(0),this.source=null)},t.unpause=function(){!this.source&&this.paused?(this._createSource(),this.source&&(this.startTime=this.manager.context.currentTime,this.source.start(0,this.startOffset%this.source.buffer.duration),this.setVolume(this.volume),this.setLoop(this.loop),this.setPitch(this.pitch),this.paused=!1)):console.warn("Call pause() before unpausing.")},t.stop=function(){this.source&&(this.source.stop(0),this.source=null),this.manager.off("volumechange",this.onManagerVolumeChange,this),this.manager.off("suspend",this.onManagerSuspend,this),this.manager.off("resume",this.onManagerResume,this)},t.setVolume=function(e){e=at.clamp(e,0,1),this.volume=e,this.gain&&(this.gain.gain.value=e*this.manager.volume)},t.setPitch=function(e){this.pitch=e,this.source&&(this.source.playbackRate.value=e)},t.isPlaying=function(){return!this.paused&&this.source.playbackState===this.source.PLAYING_STATE},t.getDuration=function(){return this.source?this.source.buffer.duration:0},t._createSource=function(){var e=this.manager.context;this.sound.buffer&&(this.source=e.createBufferSource(),this.source.buffer=this.sound.buffer,this.source.connect(this.gain),this.gain.connect(e.destination),this.loop||(this.source.onended=this.pause.bind(this)))},e}();Jd()||Object.assign($d.prototype,{play:function(){this.source&&(this.paused=!1,this.setVolume(this.volume),this.setLoop(this.loop),this.setPitch(this.pitch),this.source.play()),this.manager.on("volumechange",this.onManagerVolumeChange,this),this.manager.on("suspend",this.onManagerSuspend,this),this.manager.on("resume",this.onManagerResume,this),this.manager.suspended&&this.onManagerSuspend()},pause:function(){this.source&&(this.paused=!0,this.source.pause())},unpause:function(){this.source&&(this.paused=!1,this.source.play())},stop:function(){this.source&&this.source.pause(),this.manager.off("volumechange",this.onManagerVolumeChange,this),this.manager.off("suspend",this.onManagerSuspend,this),this.manager.off("resume",this.onManagerResume,this)},setVolume:function(e){e=at.clamp(e,0,1),this.volume=e,this.source&&(this.source.volume=e*this.manager.volume)},setPitch:function(e){this.pitch=e,this.source&&(this.source.playbackRate=e)},getDuration:function(){return this.source&&!isNaN(this.source.duration)?this.source.duration:0},isPlaying:function(){return!this.source.paused}});var eu=1e4,tu=function(e){function t(t,n,i){var a;return(a=e.call(this,t,n,i)||this).position=new pt,a.velocity=new pt,Jd()?a.panner=t.context.createPanner():(a.maxDistance=eu,a.minDistance=1,a.rollOffFactor=1,a.distanceModel=Wt),a}Z(t,e);var n=t.prototype;return n.getPosition=function(){return this.position},n.setPosition=function(e){this.position.copy(e);var t=this.panner;"positionX"in t?(t.positionX.value=e.x,t.positionY.value=e.y,t.positionZ.value=e.z):t.setPosition&&t.setPosition(e.x,e.y,e.z)},n.getVelocity=function(){return this.velocity},n.setVelocity=function(e){this.velocity.copy(e)},n.getMaxDistance=function(){return this.panner.maxDistance},n.setMaxDistance=function(e){this.panner.maxDistance=e},n.getMinDistance=function(){return this.panner.refDistance},n.setMinDistance=function(e){this.panner.refDistance=e},n.getRollOffFactor=function(){return this.panner.rolloffFactor},n.setRollOffFactor=function(e){this.panner.rolloffFactor=e},n.getDistanceModel=function(){return this.panner.distanceModel},n.setDistanceModel=function(e){this.panner.distanceModel=e},n._createSource=function(){var e=this.manager.context;this.source=e.createBufferSource(),this.source.buffer=this.sound.buffer,this.source.connect(this.panner),this.panner.connect(this.gain),this.gain.connect(e.destination),this.loop||(this.source.onended=this.pause.bind(this))},t}($d);if(!Jd()){var nu=new pt,iu=function(e,t,n,i,a,s){var r=(nu=nu.sub2(e,t)).length();if(r<n)return 1;if(r>i)return 0;var o=0;return s===Gt?o=1-a*(r-n)/(i-n):s===Wt?o=n/(n+a*(r-n)):s===jt&&(o=Math.pow(r/n,-a)),at.clamp(o,0,1)};Object.assign(tu.prototype,{setPosition:function(e){if(this.position.copy(e),this.source){var t=this.manager.listener.getPosition(),n=iu(t,this.position,this.minDistance,this.maxDistance,this.rollOffFactor,this.distanceModel),i=this.getVolume();this.source.volume=i*n}},getMaxDistance:function(){return this.maxDistance},setMaxDistance:function(e){this.maxDistance=e},getMinDistance:function(){return this.minDistance},setMinDistance:function(e){this.minDistance=e},getRollOffFactor:function(){return this.rollOffFactor},setRollOffFactor:function(e){this.rollOffFactor=e},getDistanceModel:function(){return this.distanceModel},setDistanceModel:function(e){this.distanceModel=e}})}var au=function(){function e(e){this._manager=e,this.position=new pt,this.velocity=new pt,this.orientation=new St}var t=e.prototype;return t.getPosition=function(){return this.position},t.setPosition=function(e){this.position.copy(e);var t=this.listener;t&&("positionX"in t?(t.positionX.value=e.x,t.positionY.value=e.y,t.positionZ.value=e.z):t.setPosition&&t.setPosition(e.x,e.y,e.z))},t.getVelocity=function(){return this.velocity},t.setVelocity=function(e){},t.setOrientation=function(e){this.orientation.copy(e);var t=this.listener;if(t){var n=e.data;"forwardX"in t?(t.forwardX.value=-n[8],t.forwardY.value=-n[9],t.forwardZ.value=-n[10],t.upX.value=n[4],t.upY.value=n[5],t.upZ.value=n[6]):t.setOrientation&&t.setOrientation(-n[8],-n[9],-n[10],n[4],n[5],n[6])}},t.getOrientation=function(){return this.orientation},q(e,[{key:"listener",get:function(){var e=this._manager.context;return e?e.listener:null}}]),e}(),su="running",ru=["click","touchstart","mousedown"],ou=function(e){function t(){var t;return(t=e.call(this)||this)._context=null,t.AudioContext="undefined"!=typeof AudioContext&&AudioContext||"undefined"!=typeof webkitAudioContext&&webkitAudioContext,t.AudioContext,t._unlockHandlerFunc=t._unlockHandler.bind(J(t)),t._userSuspended=!1,t.listener=new au(J(t)),t._volume=1,t}Z(t,e);var n=t.prototype;return n.suspend=function(){this._userSuspended||(this._userSuspended=!0,this._context&&this._context.state===su&&this._suspend())},n.resume=function(){this._userSuspended&&(this._userSuspended=!1,this._context&&this._context.state!==su&&this._resume())},n.destroy=function(){var e;this.fire("destroy"),this._context&&(this._removeUnlockListeners(),null==(e=this._context)||e.close(),this._context=null)},n.playSound=function(e,t){void 0===t&&(t={});var n=null;return $d&&(n=new $d(this,e,t)).play(),n},n.playSound3d=function(e,t,n){void 0===n&&(n={});var i=null;return tu&&((i=new tu(this,e,n)).setPosition(t),n.volume&&i.setVolume(n.volume),n.loop&&i.setLoop(n.loop),n.maxDistance&&i.setMaxDistance(n.maxDistance),n.minDistance&&i.setMinDistance(n.minDistance),n.rollOffFactor&&i.setRollOffFactor(n.rollOffFactor),n.distanceModel&&i.setDistanceModel(n.distanceModel),i.play()),i},n._resume=function(){var e=this;this._context.resume().then((function(){var t=e._context.createBufferSource();t.buffer=e._context.createBuffer(1,1,e._context.sampleRate),t.connect(e._context.destination),t.start(0),t.onended=function(n){t.disconnect(0),e.fire("resume")}}),(function(e){})).catch((function(e){}))},n._suspend=function(){var e=this;this._context.suspend().then((function(){e.fire("suspend")}),(function(e){})).catch((function(e){}))},n._unlockHandler=function(){this._removeUnlockListeners(),this._userSuspended||this._context.state===su||this._resume()},n._registerUnlockListeners=function(){var e=this;ru.forEach((function(t){window.addEventListener(t,e._unlockHandlerFunc,!1)}))},n._removeUnlockListeners=function(){var e=this;ru.forEach((function(t){window.removeEventListener(t,e._unlockHandlerFunc,!1)}))},q(t,[{key:"volume",get:function(){return this._volume},set:function(e){e=at.clamp(e,0,1),this._volume=e,this.fire("volumechange",e)}},{key:"suspended",get:function(){return this._userSuspended}},{key:"context",get:function(){return!this._context&&this.AudioContext&&(this._context=new this.AudioContext,this._context.state!==su&&this._registerUnlockListeners()),this._context}}]),t}(re),lu=function(){function e(e){this.audio=void 0,this.buffer=void 0,e instanceof Audio?this.audio=e:this.buffer=e}return q(e,[{key:"duration",get:function(){var e=0;return this.buffer?e=this.buffer.duration:this.audio&&(e=this.audio.duration),e||0}}]),e}(),cu=0,hu=1,pu=2;function du(e,t){return e%t||0}var uu=function(e){function t(t,n,i){var a;return(a=e.call(this)||this).source=null,a._manager=t,a._volume=void 0!==i.volume?at.clamp(Number(i.volume)||0,0,1):1,a._pitch=void 0!==i.pitch?Math.max(.01,Number(i.pitch)||0):1,a._loop=!(void 0===i.loop||!i.loop),a._sound=n,a._state=pu,a._suspended=!1,a._suspendEndEvent=0,a._suspendInstanceEvents=!1,a._playWhenLoaded=!0,a._startTime=Math.max(0,Number(i.startTime)||0),a._duration=Math.max(0,Number(i.duration)||0),a._startOffset=null,a._onPlayCallback=i.onPlay,a._onPauseCallback=i.onPause,a._onResumeCallback=i.onResume,a._onStopCallback=i.onStop,a._onEndCallback=i.onEnd,Jd()?(a._startedAt=0,a._currentTime=0,a._currentOffset=0,a._inputNode=null,a._connectorNode=null,a._firstNode=null,a._lastNode=null,a._waitingContextSuspension=!1,a._initializeNodes(),a._endedHandler=a._onEnded.bind(J(a))):(a._isReady=!1,a._loadedMetadataHandler=a._onLoadedMetadata.bind(J(a)),a._timeUpdateHandler=a._onTimeUpdate.bind(J(a)),a._endedHandler=a._onEnded.bind(J(a)),a._createSource()),a}Z(t,e);var n=t.prototype;return n._onPlay=function(){this.fire("play"),this._onPlayCallback&&this._onPlayCallback(this)},n._onPause=function(){this.fire("pause"),this._onPauseCallback&&this._onPauseCallback(this)},n._onResume=function(){this.fire("resume"),this._onResumeCallback&&this._onResumeCallback(this)},n._onStop=function(){this.fire("stop"),this._onStopCallback&&this._onStopCallback(this)},n._onEnded=function(){this._suspendEndEvent>0?this._suspendEndEvent--:(this.fire("end"),this._onEndCallback&&this._onEndCallback(this),this.stop())},n._onManagerVolumeChange=function(){this.volume=this._volume},n._onManagerSuspend=function(){this._state!==cu||this._suspended||(this._suspended=!0,this.pause())},n._onManagerResume=function(){this._suspended&&(this._suspended=!1,this.resume())},n._initializeNodes=function(){this.gain=this._manager.context.createGain(),this._inputNode=this.gain,this._connectorNode=this.gain,this._connectorNode.connect(this._manager.context.destination)},n.play=function(){return this._state!==pu&&this.stop(),this._state=cu,this._playWhenLoaded=!1,!this._waitingContextSuspension&&(this._manager.suspended?(this._manager.once("resume",this._playAudioImmediate,this),this._waitingContextSuspension=!0,!1):(this._playAudioImmediate(),!0))},n._playAudioImmediate=function(){if(this._waitingContextSuspension=!1,this._state===cu){this.source||this._createSource();var e=du(this._startOffset,this.duration);e=du(this._startTime+e,this._sound.duration),this._startOffset=null,this._duration?this.source.start(0,e,this._duration):this.source.start(0,e),this._startedAt=this._manager.context.currentTime,this._currentTime=0,this._currentOffset=e,this.volume=this._volume,this.loop=this._loop,this.pitch=this._pitch,this._manager.on("volumechange",this._onManagerVolumeChange,this),this._manager.on("suspend",this._onManagerSuspend,this),this._manager.on("resume",this._onManagerResume,this),this._manager.on("destroy",this._onManagerDestroy,this),this._suspendInstanceEvents||this._onPlay()}},n.pause=function(){return this._playWhenLoaded=!1,this._state===cu&&(this._state=hu,this._waitingContextSuspension||(this._updateCurrentTime(),this._suspendEndEvent++,this.source.stop(0),this.source=null,this._startOffset=null,this._suspendInstanceEvents||this._onPause()),!0)},n.resume=function(){if(this._state!==hu)return!1;var e=this.currentTime;return this._state=cu,this._waitingContextSuspension||(this.source||this._createSource(),null!==this._startOffset&&(e=du(this._startOffset,this.duration),e=du(this._startTime+e,this._sound.duration),this._startOffset=null),this._duration?this.source.start(0,e,this._duration):this.source.start(0,e),this._startedAt=this._manager.context.currentTime,this._currentOffset=e,this.volume=this._volume,this.loop=this._loop,this.pitch=this._pitch,this._playWhenLoaded=!1,this._suspendInstanceEvents||this._onResume()),!0},n.stop=function(){if(this._playWhenLoaded=!1,this._state===pu)return!1;var e=this._state===cu;return this._state=pu,this._waitingContextSuspension||(this._manager.off("volumechange",this._onManagerVolumeChange,this),this._manager.off("suspend",this._onManagerSuspend,this),this._manager.off("resume",this._onManagerResume,this),this._manager.off("destroy",this._onManagerDestroy,this),this._startedAt=0,this._currentTime=0,this._currentOffset=0,this._startOffset=null,this._suspendEndEvent++,e&&this.source&&this.source.stop(0),this.source=null,this._suspendInstanceEvents||this._onStop()),!0},n.setExternalNodes=function(e,t){if(e){t||(t=e);var n=this._manager.context.destination;this._firstNode!==e&&(this._firstNode?this._connectorNode.disconnect(this._firstNode):this._connectorNode.disconnect(n),this._firstNode=e,this._connectorNode.connect(e)),this._lastNode!==t&&(this._lastNode&&this._lastNode.disconnect(n),this._lastNode=t,this._lastNode.connect(n))}else console.error("The firstNode must be a valid Audio Node")},n.clearExternalNodes=function(){var e=this._manager.context.destination;this._firstNode&&(this._connectorNode.disconnect(this._firstNode),this._firstNode=null),this._lastNode&&(this._lastNode.disconnect(e),this._lastNode=null),this._connectorNode.connect(e)},n.getExternalNodes=function(){return[this._firstNode,this._lastNode]},n._createSource=function(){if(!this._sound)return null;var e=this._manager.context;return this._sound.buffer&&(this.source=e.createBufferSource(),this.source.buffer=this._sound.buffer,this.source.connect(this._inputNode),this.source.onended=this._endedHandler,this.source.loopStart=du(this._startTime,this.source.buffer.duration),this._duration&&(this.source.loopEnd=Math.max(this.source.loopStart,du(this._startTime+this._duration,this.source.buffer.duration)))),this.source},n._updateCurrentTime=function(){this._currentTime=du((this._manager.context.currentTime-this._startedAt)*this._pitch+this._currentOffset,this.duration)},n._onManagerDestroy=function(){this.source&&this._state===cu&&(this.source.stop(0),this.source=null)},q(t,[{key:"currentTime",get:function(){return null!==this._startOffset?this._startOffset:this._state===hu?this._currentTime:this._state!==pu&&this.source?(this._updateCurrentTime(),this._currentTime):0},set:function(e){if(!(e<0))if(this._state===cu){var t=this._suspendInstanceEvents;this._suspendInstanceEvents=!0,this.stop(),this._startOffset=e,this.play(),this._suspendInstanceEvents=t}else this._startOffset=e,this._currentTime=e}},{key:"duration",get:function(){return this._sound?this._duration?du(this._duration,this._sound.duration):this._sound.duration:0},set:function(e){this._duration=Math.max(0,Number(e)||0);var t=this._state===cu;this.stop(),t&&this.play()}},{key:"isPaused",get:function(){return this._state===hu}},{key:"isPlaying",get:function(){return this._state===cu}},{key:"isStopped",get:function(){return this._state===pu}},{key:"isSuspended",get:function(){return this._suspended}},{key:"loop",get:function(){return this._loop},set:function(e){this._loop=!!e,this.source&&(this.source.loop=this._loop)}},{key:"pitch",get:function(){return this._pitch},set:function(e){this._currentOffset=this.currentTime,this._startedAt=this._manager.context.currentTime,this._pitch=Math.max(Number(e)||0,.01),this.source&&(this.source.playbackRate.value=this._pitch)}},{key:"sound",get:function(){return this._sound},set:function(e){this._sound=e,this._state!==pu?this.stop():this._createSource()}},{key:"startTime",get:function(){return this._startTime},set:function(e){this._startTime=Math.max(0,Number(e)||0);var t=this._state===cu;this.stop(),t&&this.play()}},{key:"volume",get:function(){return this._volume},set:function(e){e=at.clamp(e,0,1),this._volume=e,this.gain&&(this.gain.gain.value=e*this._manager.volume)}}]),t}(re);Jd()||(Object.assign(uu.prototype,{play:function(){return this._state!==pu&&this.stop(),!(!this.source&&!this._createSource()||(this.volume=this._volume,this.pitch=this._pitch,this.loop=this._loop,this.source.play(),this._state=cu,this._playWhenLoaded=!1,this._manager.on("volumechange",this._onManagerVolumeChange,this),this._manager.on("suspend",this._onManagerSuspend,this),this._manager.on("resume",this._onManagerResume,this),this._manager.on("destroy",this._onManagerDestroy,this),this._manager.suspended&&this._onManagerSuspend(),this._suspendInstanceEvents||this._onPlay(),0))},pause:function(){return!(!this.source||this._state!==cu||(this._suspendEndEvent++,this.source.pause(),this._playWhenLoaded=!1,this._state=hu,this._startOffset=null,this._suspendInstanceEvents||this._onPause(),0))},resume:function(){return!(!this.source||this._state!==hu||(this._state=cu,this._playWhenLoaded=!1,this.source.paused&&(this.source.play(),this._suspendInstanceEvents||this._onResume()),0))},stop:function(){return!(!this.source||this._state===pu||(this._manager.off("volumechange",this._onManagerVolumeChange,this),this._manager.off("suspend",this._onManagerSuspend,this),this._manager.off("resume",this._onManagerResume,this),this._manager.off("destroy",this._onManagerDestroy,this),this._suspendEndEvent++,this.source.pause(),this._playWhenLoaded=!1,this._state=pu,this._startOffset=null,this._suspendInstanceEvents||this._onStop(),0))},setExternalNodes:function(){},clearExternalNodes:function(){},getExternalNodes:function(){return[null,null]},_onLoadedMetadata:function(){this.source.removeEventListener("loadedmetadata",this._loadedMetadataHandler),this._isReady=!0;var e=du(this._startOffset,this.duration);e=du(this._startTime+e,this._sound.duration),this._startOffset=null,this.source.currentTime=e},_createSource:function(){return this._sound&&this._sound.audio&&(this._isReady=!1,this.source=this._sound.audio.cloneNode(!0),this.source.addEventListener("loadedmetadata",this._loadedMetadataHandler),this.source.addEventListener("timeupdate",this._timeUpdateHandler),this.source.onended=this._endedHandler),this.source},_onTimeUpdate:function(){this._duration&&this.source.currentTime>du(this._startTime+this._duration,this.source.duration)&&(this.loop?this.source.currentTime=du(this._startTime,this.source.duration):(this.source.removeEventListener("timeupdate",this._timeUpdateHandler),this.source.pause(),this._onEnded()))},_onManagerDestroy:function(){this.source&&this.source.pause()}}),Object.defineProperty(uu.prototype,"volume",{get:function(){return this._volume},set:function(e){e=at.clamp(e,0,1),this._volume=e,this.source&&(this.source.volume=e*this._manager.volume)}}),Object.defineProperty(uu.prototype,"pitch",{get:function(){return this._pitch},set:function(e){this._pitch=Math.max(Number(e)||0,.01),this.source&&(this.source.playbackRate=this._pitch)}}),Object.defineProperty(uu.prototype,"sound",{get:function(){return this._sound},set:function(e){this.stop(),this._sound=e}}),Object.defineProperty(uu.prototype,"currentTime",{get:function(){return null!==this._startOffset?this._startOffset:this._state!==pu&&this.source?this.source.currentTime-this._startTime:0},set:function(e){e<0||(this._startOffset=e,this.source&&this._isReady&&(this.source.currentTime=du(this._startTime+du(e,this.duration),this._sound.duration),this._startOffset=null))}}));var mu=1e4,fu=function(e){function t(t,n,i){var a;return void 0===i&&(i={}),(a=e.call(this,t,n,i)||this)._position=new pt,a._velocity=new pt,i.position&&(a.position=i.position),a.maxDistance=void 0!==i.maxDistance?Number(i.maxDistance):mu,a.refDistance=void 0!==i.refDistance?Number(i.refDistance):1,a.rollOffFactor=void 0!==i.rollOffFactor?Number(i.rollOffFactor):1,a.distanceModel=void 0!==i.distanceModel?i.distanceModel:Gt,a}return Z(t,e),t.prototype._initializeNodes=function(){this.gain=this._manager.context.createGain(),this.panner=this._manager.context.createPanner(),this.panner.connect(this.gain),this._inputNode=this.panner,this._connectorNode=this.gain,this._connectorNode.connect(this._manager.context.destination)},q(t,[{key:"position",get:function(){return this._position},set:function(e){this._position.copy(e);var t=this.panner;"positionX"in t?(t.positionX.value=e.x,t.positionY.value=e.y,t.positionZ.value=e.z):t.setPosition&&t.setPosition(e.x,e.y,e.z)}},{key:"velocity",get:function(){return this._velocity},set:function(e){this._velocity.copy(e)}},{key:"maxDistance",get:function(){return this.panner.maxDistance},set:function(e){this.panner.maxDistance=e}},{key:"refDistance",get:function(){return this.panner.refDistance},set:function(e){this.panner.refDistance=e}},{key:"rollOffFactor",get:function(){return this.panner.rolloffFactor},set:function(e){this.panner.rolloffFactor=e}},{key:"distanceModel",get:function(){return this.panner.distanceModel},set:function(e){this.panner.distanceModel=e}}]),t}(uu);if(!Jd()){var gu=new pt,vu=function(e,t,n,i,a,s){var r=(gu=gu.sub2(e,t)).length();if(r<n)return 1;if(r>i)return 0;var o=0;return s===Gt?o=1-a*(r-n)/(i-n):s===Wt?o=n/(n+a*(r-n)):s===jt&&(o=Math.pow(r/n,-a)),at.clamp(o,0,1)};Object.defineProperty(fu.prototype,"position",{get:function(){return this._position},set:function(e){if(this._position.copy(e),this.source){var t=this._manager.listener.getPosition(),n=vu(t,this._position,this.refDistance,this.maxDistance,this.rollOffFactor,this.distanceModel),i=this.volume;this.source.volume=i*n*this._manager.volume}}}),Object.defineProperty(fu.prototype,"maxDistance",{get:function(){return this._maxDistance},set:function(e){this._maxDistance=e}}),Object.defineProperty(fu.prototype,"refDistance",{get:function(){return this._refDistance},set:function(e){this._refDistance=e}}),Object.defineProperty(fu.prototype,"rollOffFactor",{get:function(){return this._rollOffFactor},set:function(e){this._rollOffFactor=e}}),Object.defineProperty(fu.prototype,"distanceModel",{get:function(){return this._distanceModel},set:function(e){this._distanceModel=e}})}var yu=0,_u=1,wu=2,bu=3,xu=4,Cu=5,Su=6,Eu=7,Tu=8,Au=9,Lu=10,Mu="none",Pu="linear",Ou="exp",Iu="exp2",Ru=0,Du=2,ku=0,Fu=1,Bu=2,Nu=15,Uu=0,zu=1,Vu=2,Hu=3,Gu=4,Wu=0,ju=1,Xu=ju,Yu=2,qu=3,Ku=0,Zu=1,Qu=2,Ju=3,$u=0,em=1,tm=0,nm=0,im=1,am=2,sm=3,rm=4,om=5,lm=6,cm={};cm[tm]="PCF3",cm[im]="VSM8",cm[am]="VSM16",cm[sm]="VSM32",cm[rm]="PCF5",cm[om]="PCF1",cm[lm]="PCSS";var hm=0,pm=1,dm=0,um=1,mm=2,fm=3,gm=0,vm=1,ym=0,_m=1,wm=0,bm=1,xm=2,Cm=0,Sm=1,Em=0,Tm=1,Am=2,Lm=0,Mm=1,Pm=0,Om=1,Im="mul",Rm="add",Dm="screen",km="overlay",Fm="min",Bm="max",Nm=0,Um=1,zm=2,Vm=3,Hm=0,Gm=1,Wm=2,jm=3,Xm=4,Ym=0,qm=1,Km=2,Zm=1,Qm=2,Jm=4,$m=8,ef=16,tf=32,nf=64,af=128,sf=256,rf=512,of=1024,lf=2048,cf=4096,hf=8192,pf=0,df=1,uf=2,mf=0,ff=1,gf=2,vf=0,yf=1,_f=1,wf=2,bf=4,xf=0,Cf=1,Sf=2,Ef=3,Tf=4,Af="forward",Lf="debug_albedo",Mf="debug_world_normal",Pf="debug_opacity",Of="debug_specularity",If="debug_gloss",Rf="debug_metalness",Df="debug_ao",kf="debug_emission",Ff="debug_lighting",Bf="debug_uv0",Nf=0,Uf=1,zf=2,Vf=0,Hf=1,Gf=0,Wf=1,jf=2,Xf=0,Yf=1,qf=2,Kf=3,Zf=4,Qf=5,Jf=0,$f=1,eg=0,tg=1,ng=function(){function e(){this._refCount=0}var t=e.prototype;return t.incRefCount=function(){this._refCount++},t.decRefCount=function(){this._refCount--},q(e,[{key:"refCount",get:function(){return this._refCount}}]),e}(),ig=function(){function e(){}return e.set=function(t){e._graphicsDevice=t},e.get=function(){return e._graphicsDevice},e}();ig._graphicsDevice=null;var ag=0,sg=function(){function e(){this.initDefaults()}var t=e.prototype;return t.initDefaults=function(){this.recreate=!1,this.verticesUsage=mn,this.indicesUsage=mn,this.maxVertices=0,this.maxIndices=0,this.vertexCount=0,this.indexCount=0,this.vertexStreamsUpdated=!1,this.indexStreamUpdated=!1,this.vertexStreamDictionary={},this.indices=null},t._changeVertexCount=function(e,t){this.vertexCount||(this.vertexCount=e)},e}();sg.DEFAULT_COMPONENTS_POSITION=3,sg.DEFAULT_COMPONENTS_NORMAL=3,sg.DEFAULT_COMPONENTS_UV=2,sg.DEFAULT_COMPONENTS_COLORS=4;var rg=function(e,t,n,i){this.data=e,this.componentCount=t,this.dataType=n,this.dataTypeNormalize=i},og=function(e){function t(t){var n;return(n=e.call(this)||this).id=ag++,n.device=t||ig.get(),n.vertexBuffer=null,n.indexBuffer=[null],n.primitive=[{type:0,base:0,count:0}],n.skin=null,n._morph=null,n._geometryData=null,n._aabb=new Ot,n.boneAabb=null,n}Z(t,e);var n=t.prototype;return n.destroy=function(){var e=this.morph;e&&(this.morph=null,e.refCount<1&&e.destroy()),this.vertexBuffer&&(this.vertexBuffer.destroy(),this.vertexBuffer=null);for(var t=0;t<this.indexBuffer.length;t++)this._destroyIndexBuffer(t);this.indexBuffer.length=0,this._geometryData=null},n._destroyIndexBuffer=function(e){this.indexBuffer[e]&&(this.indexBuffer[e].destroy(),this.indexBuffer[e]=null)},n._initBoneAabbs=function(e){var t,n,i,a,s;this.boneAabb=[],this.boneUsed=[];for(var r,o,l,c=[],h=[],p=this.boneUsed,d=this.skin.boneNames.length,u=0;u<d;u++)c[u]=new pt(Number.MAX_VALUE,Number.MAX_VALUE,Number.MAX_VALUE),h[u]=new pt(-Number.MAX_VALUE,-Number.MAX_VALUE,-Number.MAX_VALUE);for(var m=new Cc(this.vertexBuffer),f=m.element[Fi],g=m.element[Ui],v=m.element[zi],y=this.vertexBuffer.numVertices,_=0;_<y;_++){for(var w=0;w<4;w++)if(g.array[g.index+w]>0){var b=v.array[v.index+w];if(p[b]=!0,t=f.array[f.index],n=f.array[f.index+1],i=f.array[f.index+2],a=h[b],(s=c[b]).x>t&&(s.x=t),s.y>n&&(s.y=n),s.z>i&&(s.z=i),a.x<t&&(a.x=t),a.y<n&&(a.y=n),a.z<i&&(a.z=i),e){for(var x=r=t,C=o=n,S=l=i,E=0;E<e.length;E++){var T=e[E],A=T.deltaPositions[3*_],L=T.deltaPositions[3*_+1],M=T.deltaPositions[3*_+2];A<0?x+=A:r+=A,L<0?C+=L:o+=L,M<0?S+=M:l+=M}s.x>x&&(s.x=x),s.y>C&&(s.y=C),s.z>S&&(s.z=S),a.x<r&&(a.x=r),a.y<o&&(a.y=o),a.z<l&&(a.z=l)}}m.next()}var P=this.vertexBuffer.getFormat().elements.find((function(e){return e.name===Fi}));if(P&&P.normalize)for(var O=function(){switch(P.dataType){case Ka:return function(e){return Math.max(e/127,-1)};case Za:return function(e){return e/255};case Qa:return function(e){return Math.max(e/32767,-1)};case Ja:return function(e){return e/65535};default:return function(e){return e}}}(),I=0;I<d;I++)if(p[I]){var R=c[I],D=h[I];R.set(O(R.x),O(R.y),O(R.z)),D.set(O(D.x),O(D.y),O(D.z))}for(var k=0;k<d;k++){var F=new Ot;F.setMinMax(c[k],h[k]),this.boneAabb.push(F)}},n._initGeometryData=function(){this._geometryData||(this._geometryData=new sg,this.vertexBuffer&&(this._geometryData.vertexCount=this.vertexBuffer.numVertices,this._geometryData.maxVertices=this.vertexBuffer.numVertices),this.indexBuffer.length>0&&this.indexBuffer[0]&&(this._geometryData.indexCount=this.indexBuffer[0].numIndices,this._geometryData.maxIndices=this.indexBuffer[0].numIndices))},n.clear=function(e,t,n,i){void 0===n&&(n=0),void 0===i&&(i=0),this._initGeometryData(),this._geometryData.initDefaults(),this._geometryData.recreate=!0,this._geometryData.maxVertices=n,this._geometryData.maxIndices=i,this._geometryData.verticesUsage=e?mn:fn,this._geometryData.indicesUsage=t?mn:fn},n.setVertexStream=function(e,t,n,i,a,s){void 0===a&&(a=ts),void 0===s&&(s=!1),this._initGeometryData();var r=i||t.length/n;this._geometryData._changeVertexCount(r,e),this._geometryData.vertexStreamsUpdated=!0,this._geometryData.vertexStreamDictionary[e]=new rg(t,n,a,s)},n.getVertexStream=function(e,t){var n=0,i=!1;if(this._geometryData){var a=this._geometryData.vertexStreamDictionary[e];a&&(i=!0,n=this._geometryData.vertexCount,ArrayBuffer.isView(t)?t.set(a.data):(t.length=0,t.push(a.data)))}return i||this.vertexBuffer&&(n=new Cc(this.vertexBuffer).readData(e,t)),n},n.setPositions=function(e,t,n){void 0===t&&(t=sg.DEFAULT_COMPONENTS_POSITION),this.setVertexStream(Fi,e,t,n,ts,!1)},n.setNormals=function(e,t,n){void 0===t&&(t=sg.DEFAULT_COMPONENTS_NORMAL),this.setVertexStream(Bi,e,t,n,ts,!1)},n.setUvs=function(e,t,n,i){void 0===n&&(n=sg.DEFAULT_COMPONENTS_UV),this.setVertexStream(Hi+e,t,n,i,ts,!1)},n.setColors=function(e,t,n){void 0===t&&(t=sg.DEFAULT_COMPONENTS_COLORS),this.setVertexStream(Vi,e,t,n,ts,!1)},n.setColors32=function(e,t){this.setVertexStream(Vi,e,sg.DEFAULT_COMPONENTS_COLORS,t,Za,!0)},n.setIndices=function(e,t){this._initGeometryData(),this._geometryData.indexStreamUpdated=!0,this._geometryData.indices=e,this._geometryData.indexCount=t||e.length},n.getPositions=function(e){return this.getVertexStream(Fi,e)},n.getNormals=function(e){return this.getVertexStream(Bi,e)},n.getUvs=function(e,t){return this.getVertexStream(Hi+e,t)},n.getColors=function(e){return this.getVertexStream(Vi,e)},n.getIndices=function(e){var t=0;if(this._geometryData&&this._geometryData.indices){var n=this._geometryData.indices;if(t=this._geometryData.indexCount,ArrayBuffer.isView(e))e.set(n);else{e.length=0;for(var i=0,a=n.length;i<a;i++)e.push(n[i])}}else this.indexBuffer.length>0&&this.indexBuffer[0]&&(t=this.indexBuffer[0].readData(e));return t},n.update=function(e,t){if(void 0===e&&(e=Ri),void 0===t&&(t=!0),this._geometryData){if(t){var n=this._geometryData.vertexStreamDictionary[Fi];n&&3===n.componentCount&&this._aabb.compute(n.data,this._geometryData.vertexCount)}var i=this._geometryData.recreate;this._geometryData.vertexCount>this._geometryData.maxVertices&&(i=!0,this._geometryData.maxVertices=this._geometryData.vertexCount),i&&this.vertexBuffer&&(this.vertexBuffer.destroy(),this.vertexBuffer=null);var a=this._geometryData.recreate;this._geometryData.indexCount>this._geometryData.maxIndices&&(a=!0,this._geometryData.maxIndices=this._geometryData.indexCount),a&&this.indexBuffer.length>0&&this.indexBuffer[0]&&(this.indexBuffer[0].destroy(),this.indexBuffer[0]=null),this._geometryData.vertexStreamsUpdated&&this._updateVertexBuffer(),this._geometryData.indexStreamUpdated&&this._updateIndexBuffer(),this.primitive[0].type=e,this.indexBuffer.length>0&&this.indexBuffer[0]?this._geometryData.indexStreamUpdated&&(this.primitive[0].count=this._geometryData.indexCount,this.primitive[0].indexed=!0):this._geometryData.vertexStreamsUpdated&&(this.primitive[0].count=this._geometryData.vertexCount,this.primitive[0].indexed=!1),this._geometryData.vertexCount=0,this._geometryData.indexCount=0,this._geometryData.vertexStreamsUpdated=!1,this._geometryData.indexStreamUpdated=!1,this._geometryData.recreate=!1,this.updateRenderStates()}},n._buildVertexFormat=function(e){var t=[];for(var n in this._geometryData.vertexStreamDictionary){var i=this._geometryData.vertexStreamDictionary[n];t.push({semantic:n,components:i.componentCount,type:i.dataType,normalize:i.dataTypeNormalize})}return new Fr(this.device,t,e)},n._updateVertexBuffer=function(){if(!this.vertexBuffer){var e=this._geometryData.maxVertices,t=this._buildVertexFormat(e);this.vertexBuffer=new Mr(this.device,t,e,this._geometryData.verticesUsage)}var n=new Cc(this.vertexBuffer),i=this._geometryData.vertexCount;for(var a in this._geometryData.vertexStreamDictionary){var s=this._geometryData.vertexStreamDictionary[a];n.writeData(a,s.data,i),delete this._geometryData.vertexStreamDictionary[a]}n.end()},n._updateIndexBuffer=function(){if(this.indexBuffer.length<=0||!this.indexBuffer[0]){var e=this._geometryData.maxVertices>65535?Yn:Xn;this.indexBuffer[0]=new lc(this.device,e,this._geometryData.maxIndices,this._geometryData.indicesUsage)}var t=this._geometryData.indices;t&&(this.indexBuffer[0].writeData(t,this._geometryData.indexCount),this._geometryData.indices=null)},n.prepareRenderState=function(e){e===Tm?this.generateWireframe():e===Am&&(this.primitive[Am]={type:Mi,base:0,count:this.vertexBuffer?this.vertexBuffer.numVertices:0,indexed:!1})},n.updateRenderStates=function(){this.primitive[Am]&&this.prepareRenderState(Am),this.primitive[Tm]&&this.prepareRenderState(Tm)},n.generateWireframe=function(){this._destroyIndexBuffer(Tm);var e,t=this.vertexBuffer.numVertices,n=[];if(this.indexBuffer.length>0&&this.indexBuffer[0]){for(var i=[[0,1],[1,2],[2,0]],a=this.primitive[Em].base,s=this.primitive[Em].count,r=this.indexBuffer[Em],o=new Gs[r.format](r.storage),l=new Set,c=a;c<a+s;c+=3)for(var h=0;h<3;h++){var p=o[c+i[h][0]],d=o[c+i[h][1]],u=p>d?d*t+p:p*t+d;l.has(u)||(l.add(u),n.push(p,d))}e=r.format}else{for(var m=0;m<t;m+=3)n.push(m,m+1,m+1,m+2,m+2,m);e=n.length>65535?Yn:Xn}var f=new lc(this.vertexBuffer.device,e,n.length);new Gs[f.format](f.storage).set(n),f.unlock(),this.primitive[Tm]={type:Pi,base:0,count:n.length,indexed:!0},this.indexBuffer[Tm]=f},q(t,[{key:"morph",get:function(){return this._morph},set:function(e){e!==this._morph&&(this._morph&&this._morph.decRefCount(),this._morph=e,e&&e.incRefCount())}},{key:"aabb",get:function(){return this._aabb},set:function(e){this._aabb=e}}]),t}(ng),lg=4/64,cg=1-2*lg,hg=[];function pg(e,t){for(var n=t.length/3,i=e.length/3,a=new pt,s=new pt,r=new pt,o=new pt,l=new pt,c=new pt,h=[],p=0;p<e.length;p++)h[p]=0;for(var d=0;d<n;d++){var u=t[3*d],m=t[3*d+1],f=t[3*d+2];a.set(e[3*u],e[3*u+1],e[3*u+2]),s.set(e[3*m],e[3*m+1],e[3*m+2]),r.set(e[3*f],e[3*f+1],e[3*f+2]),o.sub2(s,a),l.sub2(r,a),c.cross(o,l).normalize(),h[3*u]+=c.x,h[3*u+1]+=c.y,h[3*u+2]+=c.z,h[3*m]+=c.x,h[3*m+1]+=c.y,h[3*m+2]+=c.z,h[3*f]+=c.x,h[3*f+1]+=c.y,h[3*f+2]+=c.z}for(var g=0;g<i;g++){var v=h[3*g],y=h[3*g+1],_=h[3*g+2],w=1/Math.sqrt(v*v+y*y+_*_);h[3*g]*=w,h[3*g+1]*=w,h[3*g+2]*=w}return h}function dg(e,t,n,i){for(var a=i.length/3,s=e.length/3,r=new pt,o=new pt,l=new pt,c=new ft,h=new ft,p=new ft,d=new pt,u=new pt,m=new Float32Array(3*s),f=new Float32Array(3*s),g=[],v=0;v<a;v++){var y=i[3*v],_=i[3*v+1],w=i[3*v+2];r.set(e[3*y],e[3*y+1],e[3*y+2]),o.set(e[3*_],e[3*_+1],e[3*_+2]),l.set(e[3*w],e[3*w+1],e[3*w+2]),c.set(n[2*y],n[2*y+1]),h.set(n[2*_],n[2*_+1]),p.set(n[2*w],n[2*w+1]);var b=o.x-r.x,x=l.x-r.x,C=o.y-r.y,S=l.y-r.y,E=o.z-r.z,T=l.z-r.z,A=h.x-c.x,L=p.x-c.x,M=h.y-c.y,P=p.y-c.y,O=A*P-L*M;if(0===O)d.set(0,1,0),u.set(1,0,0);else{var I=1/O;d.set((P*b-M*x)*I,(P*C-M*S)*I,(P*E-M*T)*I),u.set((A*x-L*b)*I,(A*S-L*C)*I,(A*T-L*E)*I)}m[3*y+0]+=d.x,m[3*y+1]+=d.y,m[3*y+2]+=d.z,m[3*_+0]+=d.x,m[3*_+1]+=d.y,m[3*_+2]+=d.z,m[3*w+0]+=d.x,m[3*w+1]+=d.y,m[3*w+2]+=d.z,f[3*y+0]+=u.x,f[3*y+1]+=u.y,f[3*y+2]+=u.z,f[3*_+0]+=u.x,f[3*_+1]+=u.y,f[3*_+2]+=u.z,f[3*w+0]+=u.x,f[3*w+1]+=u.y,f[3*w+2]+=u.z}for(var R=new pt,D=new pt,k=new pt,F=new pt,B=0;B<s;B++){k.set(t[3*B],t[3*B+1],t[3*B+2]),R.set(m[3*B],m[3*B+1],m[3*B+2]),D.set(f[3*B],f[3*B+1],f[3*B+2]);var N=k.dot(R);F.copy(k).mulScalar(N),F.sub2(R,F).normalize(),g[4*B]=F.x,g[4*B+1]=F.y,g[4*B+2]=F.z,F.cross(k,R),g[4*B+3]=F.dot(D)<0?-1:1}return g}function ug(e,t,n){var i=new og(e);return i.setPositions(t),n&&(n.normals&&i.setNormals(n.normals),n.tangents&&i.setVertexStream(Ni,n.tangents,4),n.colors&&i.setColors32(n.colors),n.uvs&&i.setUvs(0,n.uvs),n.uvs1&&i.setUvs(1,n.uvs1),n.blendIndices&&i.setVertexStream(zi,n.blendIndices,4,n.blendIndices.length/4,Za),n.blendWeights&&i.setVertexStream(Ui,n.blendWeights,4),n.indices&&i.setIndices(n.indices)),i.update(),i}function mg(e,t){var n,i,a,s,r;void 0===t&&(t={});for(var o=null!=(n=t.tubeRadius)?n:.2,l=null!=(i=t.ringRadius)?i:.3,c=null!=(a=t.segments)?a:30,h=null!=(s=t.sides)?s:20,p=null!=(r=t.calculateTangents)&&r,d=[],u=[],m=[],f=[],g=0;g<=h;g++)for(var v=0;v<=c;v++){var y=Math.cos(2*Math.PI*v/c)*(l+o*Math.cos(2*Math.PI*g/h)),_=Math.sin(2*Math.PI*g/h)*o,w=Math.sin(2*Math.PI*v/c)*(l+o*Math.cos(2*Math.PI*g/h)),b=Math.cos(2*Math.PI*v/c)*Math.cos(2*Math.PI*g/h),x=Math.sin(2*Math.PI*g/h),C=Math.sin(2*Math.PI*v/c)*Math.cos(2*Math.PI*g/h),S=g/h,E=1-v/c;if(d.push(y,_,w),u.push(b,x,C),m.push(S,1-E),g<h&&v<c){var T=g*(c+1)+v,A=(g+1)*(c+1)+v,L=g*(c+1)+(v+1),M=(g+1)*(c+1)+(v+1);f.push(T,A,L),f.push(A,M,L)}}var P={normals:u,uvs:m,uvs1:m,indices:f};return p&&(P.tangents=dg(d,u,m,f)),ug(e,d,P)}function fg(e,t,n,i,a,s){var r,o=new pt,l=new pt,c=new pt,h=new pt,p=new pt,d=new pt,u=[],m=[],f=[],g=[],v=[];if(n>0)for(var y=0;y<=i;y++)for(var _=0;_<=a;_++){var w=_/a*2*Math.PI-Math.PI,b=Math.sin(w),x=Math.cos(w);p.set(b*e,-n/2,x*e),h.set(b*t,n/2,x*t),o.lerp(p,h,y/i),l.sub2(h,p).normalize(),d.set(x,0,-b),c.cross(d,l).normalize(),u.push(o.x,o.y,o.z),m.push(c.x,c.y,c.z);var C=_/a,S=y/i;f.push(C,1-S);var E=S;if(S=C,C=(C=E)*cg+lg,S=S*cg+lg,C/=3,g.push(C,1-S),y<i&&_<a){var T=y*(a+1)+_,A=y*(a+1)+(_+1),L=(y+1)*(a+1)+_,M=(y+1)*(a+1)+(_+1);v.push(T,A,L),v.push(A,M,L)}}if(s){for(var P=Math.floor(a/2),O=a,I=n/2,R=0;R<=P;R++)for(var D=R*Math.PI*.5/P,k=Math.sin(D),F=Math.cos(D),B=0;B<=O;B++){var N=2*B*Math.PI/O-Math.PI/2,U=Math.sin(N),z=Math.cos(N)*k,V=F,H=U*k,G=1-B/O,W=1-R/P;u.push(z*t,V*t+I,H*t),m.push(z,V,H),f.push(G,1-W),G=G*cg+lg,W=W*cg+lg,G/=3,W/=3,G+=1/3,g.push(G,1-W)}r=(i+1)*(a+1);for(var j=0;j<P;++j)for(var X=0;X<O;++X){var Y=j*(O+1)+X,q=Y+O+1;v.push(r+Y+1,r+q,r+Y),v.push(r+Y+1,r+q+1,r+q)}for(var K=0;K<=P;K++)for(var Z=.5*Math.PI+K*Math.PI*.5/P,Q=Math.sin(Z),J=Math.cos(Z),$=0;$<=O;$++){var ee=2*$*Math.PI/O-Math.PI/2,te=Math.sin(ee),ne=Math.cos(ee)*Q,ie=J,ae=te*Q,se=1-$/O,re=1-K/P;u.push(ne*t,ie*t-I,ae*t),m.push(ne,ie,ae),f.push(se,1-re),se=se*cg+lg,re=re*cg+lg,se/=3,re/=3,se+=2/3,g.push(se,1-re)}r=(i+1)*(a+1)+(O+1)*(P+1);for(var oe=0;oe<P;++oe)for(var le=0;le<O;++le){var ce=oe*(O+1)+le,he=ce+O+1;v.push(r+ce+1,r+he,r+ce),v.push(r+ce+1,r+he+1,r+he)}}else{if(r=(i+1)*(a+1),e>0)for(var pe=0;pe<a;pe++){var de=pe/a*2*Math.PI,ue=Math.sin(de),me=-n/2,fe=Math.cos(de),ge=1-(ue+1)/2,ve=(fe+1)/2;u.push(ue*e,me,fe*e),m.push(0,-1,0),f.push(ge,1-ve),ge=ge*cg+lg,ve=ve*cg+lg,ge/=3,ve/=3,ge+=1/3,g.push(ge,1-ve),pe>1&&v.push(r,r+pe,r+pe-1)}if(r+=a,t>0)for(var ye=0;ye<a;ye++){var _e=ye/a*2*Math.PI,we=Math.sin(_e),be=n/2,xe=Math.cos(_e),Ce=1-(we+1)/2,Se=(xe+1)/2;u.push(we*t,be,xe*t),m.push(0,1,0),f.push(Ce,1-Se),Ce=Ce*cg+lg,Se=Se*cg+lg,Ce/=3,Se/=3,Ce+=2/3,g.push(Ce,1-Se),ye>1&&v.push(r,r+ye-1,r+ye)}}return{positions:u,normals:m,uvs:f,uvs1:g,indices:v}}function gg(e,t){var n,i,a,s,r;void 0===t&&(t={});var o=null!=(n=t.radius)?n:.5,l=null!=(i=t.height)?i:1,c=null!=(a=t.heightSegments)?a:5,h=null!=(s=t.capSegments)?s:20,p=null!=(r=t.calculateTangents)&&r,d=fg(o,o,l,c,h,!1);return p&&(d.tangents=dg(d.positions,d.normals,d.uvs,d.indices)),ug(e,d.positions,d)}function vg(e,t){var n,i,a,s,r;void 0===t&&(t={});var o=null!=(n=t.radius)?n:.3,l=null!=(i=t.height)?i:1,c=null!=(a=t.heightSegments)?a:1,h=null!=(s=t.sides)?s:20,p=null!=(r=t.calculateTangents)&&r,d=fg(o,o,l-2*o,c,h,!0);return p&&(d.tangents=dg(d.positions,d.normals,d.uvs,d.indices)),ug(e,d.positions,d)}function yg(e,t){var n,i,a,s,r,o;void 0===t&&(t={});var l=null!=(n=t.baseRadius)?n:.5,c=null!=(i=t.peakRadius)?i:0,h=null!=(a=t.height)?a:1,p=null!=(s=t.heightSegments)?s:5,d=null!=(r=t.capSegments)?r:18,u=null!=(o=t.calculateTangents)&&o,m=fg(l,c,h,p,d,!1);return u&&(m.tangents=dg(m.positions,m.normals,m.uvs,m.indices)),ug(e,m.positions,m)}function _g(e,t){var n,i,a,s;void 0===t&&(t={});for(var r=null!=(n=t.radius)?n:.5,o=null!=(i=t.latitudeBands)?i:16,l=null!=(a=t.longitudeBands)?a:16,c=null!=(s=t.calculateTangents)&&s,h=[],p=[],d=[],u=[],m=0;m<=o;m++)for(var f=m*Math.PI/o,g=Math.sin(f),v=Math.cos(f),y=0;y<=l;y++){var _=2*y*Math.PI/l-Math.PI/2,w=Math.sin(_),b=Math.cos(_)*g,x=v,C=w*g,S=1-y/l,E=1-m/o;h.push(b*r,x*r,C*r),p.push(b,x,C),d.push(S,1-E)}for(var T=0;T<o;++T)for(var A=0;A<l;++A){var L=T*(l+1)+A,M=L+l+1;u.push(L+1,M,L),u.push(L+1,M+1,M)}var P={normals:p,uvs:d,uvs1:d,indices:u};return c&&(P.tangents=dg(h,p,d,u)),ug(e,h,P)}function wg(e,t){var n,i,a,s;void 0===t&&(t={});for(var r=null!=(n=t.halfExtents)?n:new ft(.5,.5),o=null!=(i=t.widthSegments)?i:5,l=null!=(a=t.lengthSegments)?a:5,c=null!=(s=t.calculateTangents)&&s,h=[],p=[],d=[],u=[],m=0,f=0;f<=o;f++)for(var g=0;g<=l;g++){var v=-r.x+2*r.x*f/o,y=0,_=-(-r.y+2*r.y*g/l),w=f/o,b=g/l;h.push(v,y,_),p.push(0,1,0),d.push(w,1-b),f<o&&g<l&&(u.push(m+l+1,m+1,m),u.push(m+l+1,m+l+2,m+1)),m++}var x={normals:p,uvs:d,uvs1:d,indices:u};return c&&(x.tangents=dg(h,p,d,u)),ug(e,h,x)}function bg(e,t){var n,i,a,s,r;void 0===t&&(t={});var o=null!=(n=t.halfExtents)?n:new pt(.5,.5,.5),l=null!=(i=t.widthSegments)?i:1,c=null!=(a=t.lengthSegments)?a:1,h=null!=(s=t.heightSegments)?s:1,p=null!=(r=t.calculateTangents)&&r,d=[new pt(-o.x,-o.y,o.z),new pt(o.x,-o.y,o.z),new pt(o.x,o.y,o.z),new pt(-o.x,o.y,o.z),new pt(o.x,-o.y,-o.z),new pt(-o.x,-o.y,-o.z),new pt(-o.x,o.y,-o.z),new pt(o.x,o.y,-o.z)],u=[[0,1,3],[4,5,7],[3,2,6],[1,0,4],[1,4,2],[5,0,6]],m=[[0,0,1],[0,0,-1],[0,1,0],[0,-1,0],[1,0,0],[-1,0,0]],f={FRONT:0,BACK:1,TOP:2,BOTTOM:3,RIGHT:4,LEFT:5},g=[],v=[],y=[],_=[],w=[],b=0,x=function(e,t,n){for(var i=new pt,a=new pt,s=new pt,r=new pt,o=0;o<=t;o++)for(var l=0;l<=n;l++){i.lerp(d[u[e][0]],d[u[e][1]],o/t),a.lerp(d[u[e][0]],d[u[e][2]],l/n),s.sub2(a,d[u[e][0]]),r.add2(i,s);var c=o/t,h=l/n;g.push(r.x,r.y,r.z),v.push(m[e][0],m[e][1],m[e][2]),y.push(c,1-h),c=c*cg+lg,h=h*cg+lg,c/=3,h/=3,c+=e%3/3,h+=Math.floor(e/3)/3,_.push(c,1-h),o<t&&l<n&&(w.push(b+n+1,b+1,b),w.push(b+n+1,b+n+2,b+1)),b++}};x(f.FRONT,l,h),x(f.BACK,l,h),x(f.TOP,l,c),x(f.BOTTOM,l,c),x(f.RIGHT,c,h),x(f.LEFT,c,h);var C={normals:v,uvs:y,uvs1:_,indices:w};return p&&(C.tangents=dg(g,v,y,w)),ug(e,g,C)}function xg(e,t){for(var n=null,i=0;i<hg.length;i++)hg[i].type===t&&hg[i].device===e&&(n=hg[i].primData);if(!n){var a,s;switch(t){case"box":a=bg(e),s={x:2,y:2,z:2,uv:2/3};break;case"capsule":a=vg(e,{radius:.5,height:2}),s={x:2*Math.PI,y:Math.PI,z:2*Math.PI,uv:1/3+1/3/3*2};break;case"cone":a=yg(e,{baseRadius:.5,peakRadius:0,height:1}),s={x:2.54,y:2.54,z:2.54,uv:1/3+1/3/3};break;case"cylinder":a=gg(e,{radius:.5,height:1}),s={x:Math.PI,y:1.58,z:Math.PI,uv:1/3+1/3/3*2};break;case"plane":a=wg(e,{halfExtents:new ft(.5,.5),widthSegments:1,lengthSegments:1}),s={x:0,y:1,z:0,uv:1};break;case"sphere":a=_g(e,{radius:.5}),s={x:Math.PI,y:Math.PI,z:Math.PI,uv:1};break;case"torus":a=mg(e,{tubeRadius:.2,ringRadius:.3}),s={x:.5*Math.PI*.5-.1*Math.PI*.1,y:.4,z:.4,uv:1};break;default:throw new Error("Invalid primitive type: "+t)}a.incRefCount(),n={mesh:a,area:s},hg.push({type:t,device:e,primData:n})}return n}var Cg=function(){this.clearValue=new st(0,0,0,1),this.clear=!1,this.store=!1,this.resolve=!0,this.mipmaps=!1},Sg=function(){this.clearDepthValue=1,this.clearStencilValue=0,this.clearDepth=!1,this.clearStencil=!1,this.storeDepth=!1,this.storeStencil=!1},Eg=function(){function e(e,t){this.name=void 0,this.renderTarget=void 0,this.samples=0,this.colorArrayOps=[],this.depthStencilOps=void 0,this.requiresCubemaps=!0,this.fullSizeClearRect=!0,this._execute=void 0,this.executeEnabled=!0,this._before=void 0,this._after=void 0,this.device=e,this._execute=t}var t=e.prototype;return t.destroy=function(){},t.init=function(e){var t;void 0===e&&(e=null),this.renderTarget=e,this.samples=Math.max(this.renderTarget?this.renderTarget.samples:this.device.samples,1),this.depthStencilOps=new Sg;for(var n=e?null==(t=e._colorBuffers)?void 0:t.length:1,i=0;i<n;i++){var a,s=new Cg;this.colorArrayOps[i]=s,1===this.samples&&(s.store=!0,s.resolve=!1),null!=(a=this.renderTarget)&&null!=(a=a._colorBuffers)&&a[i].mipmaps&&(s.mipmaps=!0)}},t.before=function(){var e;null==(e=this._before)||e.call(this)},t.execute=function(){var e;null==(e=this._execute)||e.call(this)},t.after=function(){var e;null==(e=this._after)||e.call(this)},t.setClearColor=function(e){for(var t=this.colorArrayOps.length,n=0;n<t;n++){var i=this.colorArrayOps[n];i.clearValue.copy(e),i.clear=!0}},t.setClearDepth=function(e){this.depthStencilOps.clearDepthValue=e,this.depthStencilOps.clearDepth=!0},t.setClearStencil=function(e){this.depthStencilOps.clearStencilValue=e,this.depthStencilOps.clearStencil=!0},t.render=function(){var e=this.device,t=void 0!==this.renderTarget;this.before(),this.executeEnabled&&(t&&e.startPass(this),this.execute(),t&&e.endPass(this)),this.after(),e.renderPassIndex++},q(e,[{key:"colorOps",get:function(){return this.colorArrayOps[0]}}]),e}(),Tg=function(){function e(e,t,n){this.uniformFormats=[],this.bindGroupFormats=[],this.vertexFormat=void 0,this.uniformFormats[Fs]=e,this.bindGroupFormats[Fs]=t,this.vertexFormat=n}var t=e.prototype;return t.hasUniform=function(e){for(var t=0;t<this.uniformFormats.length;t++){var n=this.uniformFormats[t];if(null!=n&&n.get(e))return!0}return!1},t.hasTexture=function(e){for(var t=0;t<this.bindGroupFormats.length;t++){var n=this.bindGroupFormats[t];if(null!=n&&n.getTexture(e))return!0}return!1},t.getVertexElement=function(e){var t;return null==(t=this.vertexFormat)?void 0:t.elements.find((function(t){return t.name===e}))},t.generateKey=function(e){var t,n=JSON.stringify(this.uniformFormats)+JSON.stringify(this.bindGroupFormats);return e.isWebGPU&&(n+=null==(t=this.vertexFormat)?void 0:t.renderingHashString),n},e}(),Ag="\nvec3 decodeLinear(vec4 raw) {\n\treturn raw.rgb;\n}\nfloat decodeGamma(float raw) {\n\treturn pow(raw, 2.2);\n}\nvec3 decodeGamma(vec3 raw) {\n\treturn pow(raw, vec3(2.2));\n}\nvec3 decodeGamma(vec4 raw) {\n\treturn pow(raw.xyz, vec3(2.2));\n}\nvec3 decodeRGBM(vec4 raw) {\n\tvec3 color = (8.0 * raw.a) * raw.rgb;\n\treturn color * color;\n}\nvec3 decodeRGBP(vec4 raw) {\n\tvec3 color = raw.rgb * (-raw.a * 7.0 + 8.0);\n\treturn color * color;\n}\nvec3 decodeRGBE(vec4 raw) {\n\tif (raw.a == 0.0) {\n\t\treturn vec3(0.0, 0.0, 0.0);\n\t} else {\n\t\treturn raw.xyz * pow(2.0, raw.w * 255.0 - 128.0);\n\t}\n}\nvec4 passThrough(vec4 raw) {\n\treturn raw;\n}\n",Lg="\nvec4 encodeLinear(vec3 source) {\n\treturn vec4(source, 1.0);\n}\nvec4 encodeGamma(vec3 source) {\n\treturn vec4(pow(source + 0.0000001, vec3(1.0 / 2.2)), 1.0);\n}\nvec4 encodeRGBM(vec3 source) {\n\tvec4 result;\n\tresult.rgb = pow(source.rgb, vec3(0.5));\n\tresult.rgb *= 1.0 / 8.0;\n\tresult.a = saturate( max( max( result.r, result.g ), max( result.b, 1.0 / 255.0 ) ) );\n\tresult.a = ceil(result.a * 255.0) / 255.0;\n\tresult.rgb /= result.a;\n\treturn result;\n}\nvec4 encodeRGBP(vec3 source) {\n\tvec3 gamma = pow(source, vec3(0.5));\n\tfloat maxVal = min(8.0, max(1.0, max(gamma.x, max(gamma.y, gamma.z))));\n\tfloat v = 1.0 - ((maxVal - 1.0) / 7.0);\n\tv = ceil(v * 255.0) / 255.0;\n\treturn vec4(gamma / (-v * 7.0 + 8.0), v);\t\n}\nvec4 encodeRGBE(vec3 source) {\n\tfloat maxVal = max(source.x, max(source.y, source.z));\n\tif (maxVal < 1e-32) {\n\t\treturn vec4(0, 0, 0, 0);\n\t} else {\n\t\tfloat e = ceil(log2(maxVal));\n\t\treturn vec4(source / pow(2.0, e), (e + 128.0) / 255.0);\n\t}\n}\n",Mg={alphaTestPS:"\nuniform float alpha_ref;\nvoid alphaTest(float a) {\n\tif (a < alpha_ref) discard;\n}\n",ambientConstantPS:"\nvoid addAmbient(vec3 worldNormal) {\n\tdDiffuseLight += light_globalAmbient;\n}\n",ambientEnvPS:"\n#ifndef ENV_ATLAS\n#define ENV_ATLAS\nuniform sampler2D texture_envAtlas;\n#endif\nvoid addAmbient(vec3 worldNormal) {\n\tvec3 dir = normalize(cubeMapRotate(worldNormal) * vec3(-1.0, 1.0, 1.0));\n\tvec2 uv = mapUv(toSphericalUv(dir), vec4(128.0, 256.0 + 128.0, 64.0, 32.0) / atlasSize);\n\tvec4 raw = texture2D(texture_envAtlas, uv);\n\tvec3 linear = $DECODE(raw);\n\tdDiffuseLight += processEnvironment(linear);\n}\n",ambientSHPS:"\nuniform vec3 ambientSH[9];\nvoid addAmbient(vec3 worldNormal) {\n\tvec3 n = cubeMapRotate(worldNormal);\n\tvec3 color =\n\t\tambientSH[0] +\n\t\tambientSH[1] * n.x +\n\t\tambientSH[2] * n.y +\n\t\tambientSH[3] * n.z +\n\t\tambientSH[4] * n.x * n.z +\n\t\tambientSH[5] * n.z * n.y +\n\t\tambientSH[6] * n.y * n.x +\n\t\tambientSH[7] * (3.0 * n.z * n.z - 1.0) +\n\t\tambientSH[8] * (n.x * n.x - n.y * n.y);\n\tdDiffuseLight += processEnvironment(max(color, vec3(0.0)));\n}\n",aoPS:"\nvoid getAO() {\n\tdAo = 1.0;\n\t#ifdef MAPTEXTURE\n\tfloat aoBase = texture2DBias($SAMPLER, $UV, textureBias).$CH;\n\tdAo *= addAoDetail(aoBase);\n\t#endif\n\t#ifdef MAPVERTEX\n\tdAo *= saturate(vVertexColor.$VC);\n\t#endif\n}\n",aoDetailMapPS:"\nfloat addAoDetail(float ao) {\n#ifdef MAPTEXTURE\n\tfloat aoDetail = texture2DBias($SAMPLER, $UV, textureBias).$CH;\n\treturn detailMode_$DETAILMODE(vec3(ao), vec3(aoDetail)).r;\n#else\n\treturn ao;\n#endif\n}\n",aoDiffuseOccPS:"\nvoid occludeDiffuse(float ao) {\n\tdDiffuseLight *= ao;\n}\n",aoSpecOccPS:"\nuniform float material_occludeSpecularIntensity;\nvoid occludeSpecular(float gloss, float ao, vec3 worldNormal, vec3 viewDir) {\n\tfloat specPow = exp2(gloss * 11.0);\n\tfloat specOcc = saturate(pow(dot(worldNormal, viewDir) + ao, 0.01*specPow) - 1.0 + ao);\n\tspecOcc = mix(1.0, specOcc, material_occludeSpecularIntensity);\n\tdSpecularLight *= specOcc;\n\tdReflection *= specOcc;\n\t\n#ifdef LIT_SHEEN\n\tsSpecularLight *= specOcc;\n\tsReflection *= specOcc;\n#endif\n}\n",aoSpecOccConstPS:"\nvoid occludeSpecular(float gloss, float ao, vec3 worldNormal, vec3 viewDir) {\n\tfloat specPow = exp2(gloss * 11.0);\n\tfloat specOcc = saturate(pow(dot(worldNormal, viewDir) + ao, 0.01*specPow) - 1.0 + ao);\n\tdSpecularLight *= specOcc;\n\tdReflection *= specOcc;\n\t\n#ifdef LIT_SHEEN\n\tsSpecularLight *= specOcc;\n\tsReflection *= specOcc;\n#endif\n}\n",aoSpecOccConstSimplePS:"\nvoid occludeSpecular(float gloss, float ao, vec3 worldNormal, vec3 viewDir) {\n\tdSpecularLight *= ao;\n\tdReflection *= ao;\n#ifdef LIT_SHEEN\n\tsSpecularLight *= ao;\n\tsReflection *= ao;\n#endif\n}\n",aoSpecOccSimplePS:"\nuniform float material_occludeSpecularIntensity;\nvoid occludeSpecular(float gloss, float ao, vec3 worldNormal, vec3 viewDir) {\n\tfloat specOcc = mix(1.0, ao, material_occludeSpecularIntensity);\n\tdSpecularLight *= specOcc;\n\tdReflection *= specOcc;\n#ifdef LIT_SHEEN\n\tsSpecularLight *= specOcc;\n\tsReflection *= specOcc;\n#endif\n}\n",basePS:"\nuniform vec3 view_position;\nuniform vec3 light_globalAmbient;\nfloat square(float x) {\n\treturn x*x;\n}\nfloat saturate(float x) {\n\treturn clamp(x, 0.0, 1.0);\n}\nvec3 saturate(vec3 x) {\n\treturn clamp(x, vec3(0.0), vec3(1.0));\n}\n",baseVS:"\nattribute vec3 vertex_position;\nattribute vec3 vertex_normal;\nattribute vec4 vertex_tangent;\nattribute vec2 vertex_texCoord0;\nattribute vec2 vertex_texCoord1;\nattribute vec4 vertex_color;\nuniform mat4 matrix_viewProjection;\nuniform mat4 matrix_model;\nuniform mat3 matrix_normal;\nvec3 dPositionW;\nmat4 dModelMatrix;\nmat3 dNormalMatrix;\n",baseNineSlicedPS:"\n#define NINESLICED\nvarying vec2 vMask;\nvarying vec2 vTiledUv;\nuniform mediump vec4 innerOffset;\nuniform mediump vec2 outerScale;\nuniform mediump vec4 atlasRect;\nvec2 nineSlicedUv;\n",baseNineSlicedVS:"\n#define NINESLICED\nvarying vec2 vMask;\nvarying vec2 vTiledUv;\nuniform mediump vec4 innerOffset;\nuniform mediump vec2 outerScale;\nuniform mediump vec4 atlasRect;\n",baseNineSlicedTiledPS:"\n#define NINESLICED\n#define NINESLICETILED\nvarying vec2 vMask;\nvarying vec2 vTiledUv;\nuniform mediump vec4 innerOffset;\nuniform mediump vec2 outerScale;\nuniform mediump vec4 atlasRect;\nvec2 nineSlicedUv;\n",biasConstPS:"\n#define SHADOWBIAS\n#define SHADOW_SAMPLE_Z_BIAS\nfloat getShadowBias(float resolution, float maxBias) {\n\treturn maxBias;\n}\n",blurVSMPS:"\nvarying vec2 vUv0;\nuniform sampler2D source;\nuniform vec2 pixelOffset;\n#ifdef GAUSS\nuniform float weight[SAMPLES];\n#endif\n#ifdef PACKED\nfloat decodeFloatRG(vec2 rg) {\n\treturn rg.y*(1.0/255.0) + rg.x;\n}\nvec2 encodeFloatRG( float v ) {\n\tvec2 enc = vec2(1.0, 255.0) * v;\n\tenc = fract(enc);\n\tenc -= enc.yy * vec2(1.0/255.0, 1.0/255.0);\n\treturn enc;\n}\n#endif\nvoid main(void) {\n\tvec3 moments = vec3(0.0);\n\tvec2 uv = vUv0 - pixelOffset * (float(SAMPLES) * 0.5);\n\tfor (int i=0; i<SAMPLES; i++) {\n\t\tvec4 c = texture2D(source, uv + pixelOffset * float(i));\n\t\t#ifdef PACKED\n\t\tc.xy = vec2(decodeFloatRG(c.xy), decodeFloatRG(c.zw));\n\t\t#endif\n\t\t#ifdef GAUSS\n\t\tmoments += c.xyz * weight[i];\n\t\t#else\n\t\tmoments += c.xyz;\n\t\t#endif\n\t}\n\t#ifndef GAUSS\n\tmoments /= float(SAMPLES);\n\t#endif\n\t#ifdef PACKED\n\tgl_FragColor = vec4(encodeFloatRG(moments.x), encodeFloatRG(moments.y));\n\t#else\n\tgl_FragColor = vec4(moments.x, moments.y, moments.z, 1.0);\n\t#endif\n}\n",clearCoatPS:"\n#ifdef MAPFLOAT\nuniform float material_clearCoat;\n#endif\nvoid getClearCoat() {\n\tccSpecularity = 1.0;\n\t#ifdef MAPFLOAT\n\tccSpecularity *= material_clearCoat;\n\t#endif\n\t#ifdef MAPTEXTURE\n\tccSpecularity *= texture2DBias($SAMPLER, $UV, textureBias).$CH;\n\t#endif\n\t#ifdef MAPVERTEX\n\tccSpecularity *= saturate(vVertexColor.$VC);\n\t#endif\n}\n",clearCoatGlossPS:"\n#ifdef MAPFLOAT\nuniform float material_clearCoatGloss;\n#endif\nvoid getClearCoatGlossiness() {\n\tccGlossiness = 1.0;\n\t#ifdef MAPFLOAT\n\tccGlossiness *= material_clearCoatGloss;\n\t#endif\n\t#ifdef MAPTEXTURE\n\tccGlossiness *= texture2DBias($SAMPLER, $UV, textureBias).$CH;\n\t#endif\n\t#ifdef MAPVERTEX\n\tccGlossiness *= saturate(vVertexColor.$VC);\n\t#endif\n\t#ifdef MAPINVERT\n\tccGlossiness = 1.0 - ccGlossiness;\n\t#endif\n\tccGlossiness += 0.0000001;\n}\n",clearCoatNormalPS:"\n#ifdef MAPTEXTURE\nuniform float material_clearCoatBumpiness;\n#endif\nvoid getClearCoatNormal() {\n#ifdef MAPTEXTURE\n\tvec3 normalMap = unpackNormal(texture2DBias($SAMPLER, $UV, textureBias));\n\tnormalMap = mix(vec3(0.0, 0.0, 1.0), normalMap, material_clearCoatBumpiness);\n\tccNormalW = normalize(dTBN * normalMap);\n#else\n\tccNormalW = dVertexNormalW;\n#endif\n}\n",clusteredLightCookiesPS:"\nvec3 _getCookieClustered(TEXTURE_ACCEPT(tex), vec2 uv, float intensity, bool isRgb, vec4 cookieChannel) {\n\tvec4 pixel = mix(vec4(1.0), texture2DLodEXT(tex, uv, 0.0), intensity);\n\treturn isRgb == true ? pixel.rgb : vec3(dot(pixel, cookieChannel));\n}\nvec3 getCookie2DClustered(TEXTURE_ACCEPT(tex), mat4 transform, vec3 worldPosition, float intensity, bool isRgb, vec4 cookieChannel) {\n\tvec4 projPos = transform * vec4(worldPosition, 1.0);\n\treturn _getCookieClustered(TEXTURE_PASS(tex), projPos.xy / projPos.w, intensity, isRgb, cookieChannel);\n}\nvec3 getCookieCubeClustered(TEXTURE_ACCEPT(tex), vec3 dir, float intensity, bool isRgb, vec4 cookieChannel, float shadowTextureResolution, float shadowEdgePixels, vec3 omniAtlasViewport) {\n\tvec2 uv = getCubemapAtlasCoordinates(omniAtlasViewport, shadowEdgePixels, shadowTextureResolution, dir);\n\treturn _getCookieClustered(TEXTURE_PASS(tex), uv, intensity, isRgb, cookieChannel);\n}\n",clusteredLightShadowsPS:"\nvoid _getShadowCoordPerspZbuffer(mat4 shadowMatrix, vec4 shadowParams, vec3 wPos) {\n\tvec4 projPos = shadowMatrix * vec4(wPos, 1.0);\n\tprojPos.xyz /= projPos.w;\n\tdShadowCoord = projPos.xyz;\n}\nvoid getShadowCoordPerspZbufferNormalOffset(mat4 shadowMatrix, vec4 shadowParams, vec3 normal) {\n\tvec3 wPos = vPositionW + normal * shadowParams.y;\n\t_getShadowCoordPerspZbuffer(shadowMatrix, shadowParams, wPos);\n}\nvec3 normalOffsetPointShadow(vec4 shadowParams, vec3 lightPos, inout vec3 lightDir, vec3 lightDirNorm, vec3 normal) {\n\tfloat distScale = length(lightDir);\n\tvec3 wPos = vPositionW + normal * shadowParams.y * clamp(1.0 - dot(normal, -lightDirNorm), 0.0, 1.0) * distScale;\n\tvec3 dir = wPos - lightPos;\n\treturn dir;\n}\n#ifdef GL2\n\t#if defined(CLUSTER_SHADOW_TYPE_PCF1)\n\tfloat getShadowOmniClusteredPCF1(SHADOWMAP_ACCEPT(shadowMap), vec4 shadowParams, vec3 omniAtlasViewport, float shadowEdgePixels, vec3 lightDir) {\n\t\tfloat shadowTextureResolution = shadowParams.x;\n\t\tvec2 uv = getCubemapAtlasCoordinates(omniAtlasViewport, shadowEdgePixels, shadowTextureResolution, lightDir);\n\t\tfloat shadowZ = length(lightDir) * shadowParams.w + shadowParams.z;\n\t\treturn textureShadow(shadowMap, vec3(uv, shadowZ));\n\t}\n\t#endif\n\t#if defined(CLUSTER_SHADOW_TYPE_PCF3)\n\tfloat getShadowOmniClusteredPCF3(SHADOWMAP_ACCEPT(shadowMap), vec4 shadowParams, vec3 omniAtlasViewport, float shadowEdgePixels, vec3 lightDir) {\n\t\tfloat shadowTextureResolution = shadowParams.x;\n\t\tvec2 uv = getCubemapAtlasCoordinates(omniAtlasViewport, shadowEdgePixels, shadowTextureResolution, lightDir);\n\t\tfloat shadowZ = length(lightDir) * shadowParams.w + shadowParams.z;\n\t\tvec3 shadowCoord = vec3(uv, shadowZ);\n\t\treturn getShadowPCF3x3(SHADOWMAP_PASS(shadowMap), shadowCoord, shadowParams);\n\t}\n\t#endif\n\t#if defined(CLUSTER_SHADOW_TYPE_PCF5)\n\tfloat getShadowOmniClusteredPCF5(SHADOWMAP_ACCEPT(shadowMap), vec4 shadowParams, vec3 omniAtlasViewport, float shadowEdgePixels, vec3 lightDir) {\n\t\tfloat shadowTextureResolution = shadowParams.x;\n\t\tvec2 uv = getCubemapAtlasCoordinates(omniAtlasViewport, shadowEdgePixels, shadowTextureResolution, lightDir);\n\t\tfloat shadowZ = length(lightDir) * shadowParams.w + shadowParams.z;\n\t\tvec3 shadowCoord = vec3(uv, shadowZ);\n\t\treturn getShadowPCF5x5(SHADOWMAP_PASS(shadowMap), shadowCoord, shadowParams);\n\t}\n\t#endif\n#else\n\t#if defined(CLUSTER_SHADOW_TYPE_PCF1)\n\tfloat getShadowOmniClusteredPCF1(sampler2D shadowMap, vec4 shadowParams, vec3 omniAtlasViewport, float shadowEdgePixels, vec3 lightDir) {\n\t\tfloat shadowTextureResolution = shadowParams.x;\n\t\tvec2 uv = getCubemapAtlasCoordinates(omniAtlasViewport, shadowEdgePixels, shadowTextureResolution, lightDir);\n\t\tfloat depth = unpackFloat(textureShadow(shadowMap, uv));\n\t\tfloat shadowZ = length(lightDir) * shadowParams.w + shadowParams.z;\n\t\treturn depth > shadowZ ? 1.0 : 0.0;\n\t}\n\t#endif\n\t#if defined(CLUSTER_SHADOW_TYPE_PCF3)\n\tfloat getShadowOmniClusteredPCF3(sampler2D shadowMap, vec4 shadowParams, vec3 omniAtlasViewport, float shadowEdgePixels, vec3 lightDir) {\n\t\tfloat shadowTextureResolution = shadowParams.x;\n\t\tvec2 uv = getCubemapAtlasCoordinates(omniAtlasViewport, shadowEdgePixels, shadowTextureResolution, lightDir);\n\t\tfloat shadowZ = length(lightDir) * shadowParams.w + shadowParams.z;\n\t\tvec3 shadowCoord = vec3(uv, shadowZ);\n\t\treturn getShadowPCF3x3(shadowMap, shadowCoord, shadowParams);\n\t}\n\t#endif\n\t#if defined(CLUSTER_SHADOW_TYPE_PCF5)\n\tfloat getShadowOmniClusteredPCF5(sampler2D shadowMap, vec4 shadowParams, vec3 omniAtlasViewport, float shadowEdgePixels, vec3 lightDir) {\n\t\tfloat shadowTextureResolution = shadowParams.x;\n\t\tvec2 uv = getCubemapAtlasCoordinates(omniAtlasViewport, shadowEdgePixels, shadowTextureResolution, lightDir);\n\t\tfloat shadowZ = length(lightDir) * shadowParams.w + shadowParams.z;\n\t\tvec3 shadowCoord = vec3(uv, shadowZ);\n\t\treturn getShadowPCF3x3(shadowMap, shadowCoord, shadowParams);\n\t}\n\t#endif\n#endif\n#ifdef GL2\n\t#if defined(CLUSTER_SHADOW_TYPE_PCF1)\n\tfloat getShadowSpotClusteredPCF1(SHADOWMAP_ACCEPT(shadowMap), vec3 shadowCoord, vec4 shadowParams) {\n\t\treturn textureShadow(shadowMap, shadowCoord);\n\t}\n\t#endif\n\t#if defined(CLUSTER_SHADOW_TYPE_PCF3)\n\tfloat getShadowSpotClusteredPCF3(SHADOWMAP_ACCEPT(shadowMap), vec3 shadowCoord, vec4 shadowParams) {\n\t\treturn getShadowSpotPCF3x3(SHADOWMAP_PASS(shadowMap), shadowCoord, shadowParams);\n\t}\n\t#endif\n\t#if defined(CLUSTER_SHADOW_TYPE_PCF5)\n\tfloat getShadowSpotClusteredPCF5(SHADOWMAP_ACCEPT(shadowMap), vec3 shadowCoord, vec4 shadowParams) {\n\t\treturn getShadowPCF5x5(SHADOWMAP_PASS(shadowMap), shadowCoord, shadowParams);\n\t}\n\t#endif\n#else\n\t#if defined(CLUSTER_SHADOW_TYPE_PCF1)\n\tfloat getShadowSpotClusteredPCF1(sampler2D shadowMap, vec3 shadowCoord, vec4 shadowParams) {\n\t\tfloat depth = unpackFloat(textureShadow(shadowMap, shadowCoord.xy));\n\t\treturn depth > shadowCoord.z ? 1.0 : 0.0;\n\t}\n\t#endif\n\t#if defined(CLUSTER_SHADOW_TYPE_PCF3)\n\tfloat getShadowSpotClusteredPCF3(sampler2D shadowMap, vec3 shadowCoord, vec4 shadowParams) {\n\t\treturn getShadowSpotPCF3x3(shadowMap, shadowCoord, shadowParams);\n\t}\n\t#endif\n\t#if defined(CLUSTER_SHADOW_TYPE_PCF5)\n\tfloat getShadowSpotClusteredPCF5(sampler2D shadowMap, vec3 shadowCoord, vec4 shadowParams) {\n\t\treturn getShadowSpotPCF3x3(shadowMap, shadowCoord, shadowParams);\n\t}\n\t#endif\n#endif\n",clusteredLightUtilsPS:"\nvec2 getCubemapFaceCoordinates(const vec3 dir, out float faceIndex, out vec2 tileOffset)\n{\n\tvec3 vAbs = abs(dir);\n\tfloat ma;\n\tvec2 uv;\n\tif (vAbs.z >= vAbs.x && vAbs.z >= vAbs.y) {\n\t\tfaceIndex = dir.z < 0.0 ? 5.0 : 4.0;\n\t\tma = 0.5 / vAbs.z;\n\t\tuv = vec2(dir.z < 0.0 ? -dir.x : dir.x, -dir.y);\n\t\ttileOffset.x = 2.0;\n\t\ttileOffset.y = dir.z < 0.0 ? 1.0 : 0.0;\n\t} else if(vAbs.y >= vAbs.x) {\n\t\tfaceIndex = dir.y < 0.0 ? 3.0 : 2.0;\n\t\tma = 0.5 / vAbs.y;\n\t\tuv = vec2(dir.x, dir.y < 0.0 ? -dir.z : dir.z);\n\t\ttileOffset.x = 1.0;\n\t\ttileOffset.y = dir.y < 0.0 ? 1.0 : 0.0;\n\t} else {\n\t\tfaceIndex = dir.x < 0.0 ? 1.0 : 0.0;\n\t\tma = 0.5 / vAbs.x;\n\t\tuv = vec2(dir.x < 0.0 ? dir.z : -dir.z, -dir.y);\n\t\ttileOffset.x = 0.0;\n\t\ttileOffset.y = dir.x < 0.0 ? 1.0 : 0.0;\n\t}\n\treturn uv * ma + 0.5;\n}\nvec2 getCubemapAtlasCoordinates(const vec3 omniAtlasViewport, float shadowEdgePixels, float shadowTextureResolution, const vec3 dir) {\n\tfloat faceIndex;\n\tvec2 tileOffset;\n\tvec2 uv = getCubemapFaceCoordinates(dir, faceIndex, tileOffset);\n\tfloat atlasFaceSize = omniAtlasViewport.z;\n\tfloat tileSize = shadowTextureResolution * atlasFaceSize;\n\tfloat offset = shadowEdgePixels / tileSize;\n\tuv = uv * vec2(1.0 - offset * 2.0) + vec2(offset * 1.0);\n\tuv *= atlasFaceSize;\n\tuv += tileOffset * atlasFaceSize;\n\tuv += omniAtlasViewport.xy;\n\treturn uv;\n}\n",clusteredLightPS:"\nuniform highp sampler2D clusterWorldTexture;\nuniform highp sampler2D lightsTexture8;\nuniform highp sampler2D lightsTextureFloat;\n#if defined(CLUSTER_COOKIES)\n\t#define CLUSTER_COOKIES_OR_SHADOWS\n#endif\n#if defined(CLUSTER_SHADOWS)\n\t#define CLUSTER_COOKIES_OR_SHADOWS\n#endif\n#ifdef CLUSTER_SHADOWS\n\t#ifdef GL2\n\t\tuniform sampler2DShadow shadowAtlasTexture;\n\t#else\n\t\tuniform sampler2D shadowAtlasTexture;\n\t#endif\n#endif\n#ifdef CLUSTER_COOKIES\n\tuniform sampler2D cookieAtlasTexture;\n#endif\n#ifdef GL2\n\tuniform int clusterMaxCells;\n#else\n\tuniform float clusterMaxCells;\n\tuniform vec4 lightsTextureInvSize;\n#endif\nuniform float clusterSkip;\nuniform vec3 clusterCellsCountByBoundsSize;\nuniform vec3 clusterTextureSize;\nuniform vec3 clusterBoundsMin;\nuniform vec3 clusterBoundsDelta;\nuniform vec3 clusterCellsDot;\nuniform vec3 clusterCellsMax;\nuniform vec2 clusterCompressionLimit0;\nuniform vec2 shadowAtlasParams;\nstruct ClusterLightData {\n\tvec3 halfWidth;\n\tfloat lightType;\n\tvec3 halfHeight;\n\t#ifdef GL2\n\t\tint lightIndex;\n\t#else\n\t\tfloat lightV;\n\t#endif\n\tvec3 position;\n\tfloat shape;\n\tvec3 direction;\n\tfloat falloffMode;\n\tvec3 color;\n\tfloat shadowIntensity;\n\tvec3 omniAtlasViewport;\n\tfloat range;\n\tvec4 cookieChannelMask;\n\tfloat shadowBias;\n\tfloat shadowNormalBias;\n\tfloat innerConeAngleCos;\n\tfloat outerConeAngleCos;\n\tfloat cookie;\n\tfloat cookieRgb;\n\tfloat cookieIntensity;\n\tfloat mask;\n};\nmat4 lightProjectionMatrix;\n#define isClusteredLightCastShadow(light) ( light.shadowIntensity > 0.0 )\n#define isClusteredLightCookie(light) (light.cookie > 0.5 )\n#define isClusteredLightCookieRgb(light) (light.cookieRgb > 0.5 )\n#define isClusteredLightSpot(light) ( light.lightType > 0.5 )\n#define isClusteredLightFalloffLinear(light) ( light.falloffMode < 0.5 )\n#define isClusteredLightArea(light) ( light.shape > 0.1 )\n#define isClusteredLightRect(light) ( light.shape < 0.3 )\n#define isClusteredLightDisk(light) ( light.shape < 0.6 )\n#ifdef CLUSTER_MESH_DYNAMIC_LIGHTS\n\t#define acceptLightMask(light) ( light.mask < 0.75)\n#else\n\t#define acceptLightMask(light) ( light.mask > 0.25)\n#endif\nvec4 decodeClusterLowRange4Vec4(vec4 d0, vec4 d1, vec4 d2, vec4 d3) {\n\treturn vec4(\n\t\tbytes2floatRange4(d0, -2.0, 2.0),\n\t\tbytes2floatRange4(d1, -2.0, 2.0),\n\t\tbytes2floatRange4(d2, -2.0, 2.0),\n\t\tbytes2floatRange4(d3, -2.0, 2.0)\n\t);\n}\n#ifdef GL2\n\tvec4 sampleLightsTexture8(const ClusterLightData clusterLightData, int index) {\n\t\treturn texelFetch(lightsTexture8, ivec2(index, clusterLightData.lightIndex), 0);\n\t}\n\tvec4 sampleLightTextureF(const ClusterLightData clusterLightData, int index) {\n\t\treturn texelFetch(lightsTextureFloat, ivec2(index, clusterLightData.lightIndex), 0);\n\t}\n#else\n\tvec4 sampleLightsTexture8(const ClusterLightData clusterLightData, float index) {\n\t\treturn texture2DLodEXT(lightsTexture8, vec2(index * lightsTextureInvSize.z, clusterLightData.lightV), 0.0);\n\t}\n\tvec4 sampleLightTextureF(const ClusterLightData clusterLightData, float index) {\n\t\treturn texture2DLodEXT(lightsTextureFloat, vec2(index * lightsTextureInvSize.x, clusterLightData.lightV), 0.0);\n\t}\n#endif\nvoid decodeClusterLightCore(inout ClusterLightData clusterLightData, float lightIndex) {\n\t#ifdef GL2\n\t\tclusterLightData.lightIndex = int(lightIndex);\n\t#else\n\t\tclusterLightData.lightV = (lightIndex + 0.5) * lightsTextureInvSize.w;\n\t#endif\n\tvec4 lightInfo = sampleLightsTexture8(clusterLightData, CLUSTER_TEXTURE_8_FLAGS);\n\tclusterLightData.lightType = lightInfo.x;\n\tclusterLightData.shape = lightInfo.y;\n\tclusterLightData.falloffMode = lightInfo.z;\n\tclusterLightData.shadowIntensity = lightInfo.w;\n\tvec4 colorA = sampleLightsTexture8(clusterLightData, CLUSTER_TEXTURE_8_COLOR_A);\n\tvec4 colorB = sampleLightsTexture8(clusterLightData, CLUSTER_TEXTURE_8_COLOR_B);\n\tclusterLightData.color = vec3(bytes2float2(colorA.xy), bytes2float2(colorA.zw), bytes2float2(colorB.xy)) * clusterCompressionLimit0.y;\n\tclusterLightData.cookie = colorB.z;\n\tclusterLightData.mask = colorB.w;\n\t#ifdef CLUSTER_TEXTURE_FLOAT\n\t\tvec4 lightPosRange = sampleLightTextureF(clusterLightData, CLUSTER_TEXTURE_F_POSITION_RANGE);\n\t\tclusterLightData.position = lightPosRange.xyz;\n\t\tclusterLightData.range = lightPosRange.w;\n\t\tvec4 lightDir_Unused = sampleLightTextureF(clusterLightData, CLUSTER_TEXTURE_F_SPOT_DIRECTION);\n\t\tclusterLightData.direction = lightDir_Unused.xyz;\n\t#else\n\t\tvec4 encPosX = sampleLightsTexture8(clusterLightData, CLUSTER_TEXTURE_8_POSITION_X);\n\t\tvec4 encPosY = sampleLightsTexture8(clusterLightData, CLUSTER_TEXTURE_8_POSITION_Y);\n\t\tvec4 encPosZ = sampleLightsTexture8(clusterLightData, CLUSTER_TEXTURE_8_POSITION_Z);\n\t\tclusterLightData.position = vec3(bytes2float4(encPosX), bytes2float4(encPosY), bytes2float4(encPosZ)) * clusterBoundsDelta + clusterBoundsMin;\n\t\tvec4 encRange = sampleLightsTexture8(clusterLightData, CLUSTER_TEXTURE_8_RANGE);\n\t\tclusterLightData.range = bytes2float4(encRange) * clusterCompressionLimit0.x;\n\t\tvec4 encDirX = sampleLightsTexture8(clusterLightData, CLUSTER_TEXTURE_8_SPOT_DIRECTION_X);\n\t\tvec4 encDirY = sampleLightsTexture8(clusterLightData, CLUSTER_TEXTURE_8_SPOT_DIRECTION_Y);\n\t\tvec4 encDirZ = sampleLightsTexture8(clusterLightData, CLUSTER_TEXTURE_8_SPOT_DIRECTION_Z);\n\t\tclusterLightData.direction = vec3(bytes2float4(encDirX), bytes2float4(encDirY), bytes2float4(encDirZ)) * 2.0 - 1.0;\n\t#endif\n}\nvoid decodeClusterLightSpot(inout ClusterLightData clusterLightData) {\n\tvec4 coneAngle = sampleLightsTexture8(clusterLightData, CLUSTER_TEXTURE_8_SPOT_ANGLES);\n\tclusterLightData.innerConeAngleCos = bytes2float2(coneAngle.xy) * 2.0 - 1.0;\n\tclusterLightData.outerConeAngleCos = bytes2float2(coneAngle.zw) * 2.0 - 1.0;\n}\nvoid decodeClusterLightOmniAtlasViewport(inout ClusterLightData clusterLightData) {\n\t#ifdef CLUSTER_TEXTURE_FLOAT\n\t\tclusterLightData.omniAtlasViewport = sampleLightTextureF(clusterLightData, CLUSTER_TEXTURE_F_PROJ_MAT_0).xyz;\n\t#else\n\t\tvec4 viewportA = sampleLightsTexture8(clusterLightData, CLUSTER_TEXTURE_8_ATLAS_VIEWPORT_A);\n\t\tvec4 viewportB = sampleLightsTexture8(clusterLightData, CLUSTER_TEXTURE_8_ATLAS_VIEWPORT_B);\n\t\tclusterLightData.omniAtlasViewport = vec3(bytes2float2(viewportA.xy), bytes2float2(viewportA.zw), bytes2float2(viewportB.xy));\n\t#endif\n}\nvoid decodeClusterLightAreaData(inout ClusterLightData clusterLightData) {\n\t#ifdef CLUSTER_TEXTURE_FLOAT\n\t\tclusterLightData.halfWidth = sampleLightTextureF(clusterLightData, CLUSTER_TEXTURE_F_AREA_DATA_WIDTH).xyz;\n\t\tclusterLightData.halfHeight = sampleLightTextureF(clusterLightData, CLUSTER_TEXTURE_F_AREA_DATA_HEIGHT).xyz;\n\t#else\n\t\tvec4 areaWidthX = sampleLightsTexture8(clusterLightData, CLUSTER_TEXTURE_8_AREA_DATA_WIDTH_X);\n\t\tvec4 areaWidthY = sampleLightsTexture8(clusterLightData, CLUSTER_TEXTURE_8_AREA_DATA_WIDTH_Y);\n\t\tvec4 areaWidthZ = sampleLightsTexture8(clusterLightData, CLUSTER_TEXTURE_8_AREA_DATA_WIDTH_Z);\n\t\tclusterLightData.halfWidth = vec3(mantissaExponent2Float(areaWidthX), mantissaExponent2Float(areaWidthY), mantissaExponent2Float(areaWidthZ));\n\t\tvec4 areaHeightX = sampleLightsTexture8(clusterLightData, CLUSTER_TEXTURE_8_AREA_DATA_HEIGHT_X);\n\t\tvec4 areaHeightY = sampleLightsTexture8(clusterLightData, CLUSTER_TEXTURE_8_AREA_DATA_HEIGHT_Y);\n\t\tvec4 areaHeightZ = sampleLightsTexture8(clusterLightData, CLUSTER_TEXTURE_8_AREA_DATA_HEIGHT_Z);\n\t\tclusterLightData.halfHeight = vec3(mantissaExponent2Float(areaHeightX), mantissaExponent2Float(areaHeightY), mantissaExponent2Float(areaHeightZ));\n\t#endif\n}\nvoid decodeClusterLightProjectionMatrixData(inout ClusterLightData clusterLightData) {\n\t\n\t#ifdef CLUSTER_TEXTURE_FLOAT\n\t\tvec4 m0 = sampleLightTextureF(clusterLightData, CLUSTER_TEXTURE_F_PROJ_MAT_0);\n\t\tvec4 m1 = sampleLightTextureF(clusterLightData, CLUSTER_TEXTURE_F_PROJ_MAT_1);\n\t\tvec4 m2 = sampleLightTextureF(clusterLightData, CLUSTER_TEXTURE_F_PROJ_MAT_2);\n\t\tvec4 m3 = sampleLightTextureF(clusterLightData, CLUSTER_TEXTURE_F_PROJ_MAT_3);\n\t#else\n\t\tvec4 m00 = sampleLightsTexture8(clusterLightData, CLUSTER_TEXTURE_8_PROJ_MAT_00);\n\t\tvec4 m01 = sampleLightsTexture8(clusterLightData, CLUSTER_TEXTURE_8_PROJ_MAT_01);\n\t\tvec4 m02 = sampleLightsTexture8(clusterLightData, CLUSTER_TEXTURE_8_PROJ_MAT_02);\n\t\tvec4 m03 = sampleLightsTexture8(clusterLightData, CLUSTER_TEXTURE_8_PROJ_MAT_03);\n\t\tvec4 m0 = decodeClusterLowRange4Vec4(m00, m01, m02, m03);\n\t\tvec4 m10 = sampleLightsTexture8(clusterLightData, CLUSTER_TEXTURE_8_PROJ_MAT_10);\n\t\tvec4 m11 = sampleLightsTexture8(clusterLightData, CLUSTER_TEXTURE_8_PROJ_MAT_11);\n\t\tvec4 m12 = sampleLightsTexture8(clusterLightData, CLUSTER_TEXTURE_8_PROJ_MAT_12);\n\t\tvec4 m13 = sampleLightsTexture8(clusterLightData, CLUSTER_TEXTURE_8_PROJ_MAT_13);\n\t\tvec4 m1 = decodeClusterLowRange4Vec4(m10, m11, m12, m13);\n\t\tvec4 m20 = sampleLightsTexture8(clusterLightData, CLUSTER_TEXTURE_8_PROJ_MAT_20);\n\t\tvec4 m21 = sampleLightsTexture8(clusterLightData, CLUSTER_TEXTURE_8_PROJ_MAT_21);\n\t\tvec4 m22 = sampleLightsTexture8(clusterLightData, CLUSTER_TEXTURE_8_PROJ_MAT_22);\n\t\tvec4 m23 = sampleLightsTexture8(clusterLightData, CLUSTER_TEXTURE_8_PROJ_MAT_23);\n\t\tvec4 m2 = decodeClusterLowRange4Vec4(m20, m21, m22, m23);\n\t\tvec4 m30 = sampleLightsTexture8(clusterLightData, CLUSTER_TEXTURE_8_PROJ_MAT_30);\n\t\tvec4 m31 = sampleLightsTexture8(clusterLightData, CLUSTER_TEXTURE_8_PROJ_MAT_31);\n\t\tvec4 m32 = sampleLightsTexture8(clusterLightData, CLUSTER_TEXTURE_8_PROJ_MAT_32);\n\t\tvec4 m33 = sampleLightsTexture8(clusterLightData, CLUSTER_TEXTURE_8_PROJ_MAT_33);\n\t\tvec4 m3 = vec4(mantissaExponent2Float(m30), mantissaExponent2Float(m31), mantissaExponent2Float(m32), mantissaExponent2Float(m33));\n\t#endif\n\t\n\tlightProjectionMatrix = mat4(m0, m1, m2, m3);\n}\nvoid decodeClusterLightShadowData(inout ClusterLightData clusterLightData) {\n\t\n\tvec4 biases = sampleLightsTexture8(clusterLightData, CLUSTER_TEXTURE_8_SHADOW_BIAS);\n\tclusterLightData.shadowBias = bytes2floatRange2(biases.xy, -1.0, 20.0),\n\tclusterLightData.shadowNormalBias = bytes2float2(biases.zw);\n}\nvoid decodeClusterLightCookieData(inout ClusterLightData clusterLightData) {\n\tvec4 cookieA = sampleLightsTexture8(clusterLightData, CLUSTER_TEXTURE_8_COOKIE_A);\n\tclusterLightData.cookieIntensity = cookieA.x;\n\tclusterLightData.cookieRgb = cookieA.y;\n\tclusterLightData.cookieChannelMask = sampleLightsTexture8(clusterLightData, CLUSTER_TEXTURE_8_COOKIE_B);\n}\nvoid evaluateLight(\n\tClusterLightData light, \n\tvec3 worldNormal, \n\tvec3 viewDir, \n\tvec3 reflectionDir,\n#if defined(LIT_CLEARCOAT)\n\tvec3 clearcoatReflectionDir,\n#endif\n\tfloat gloss, \n\tvec3 specularity, \n\tvec3 geometricNormal, \n\tmat3 tbn, \n#if defined(LIT_IRIDESCENCE)\n\tvec3 iridescenceFresnel,\n#endif\n\tvec3 clearcoat_worldNormal,\n\tfloat clearcoat_gloss,\n\tfloat sheen_gloss,\n\tfloat iridescence_intensity\n) {\n\tvec3 cookieAttenuation = vec3(1.0);\n\tfloat diffuseAttenuation = 1.0;\n\tfloat falloffAttenuation = 1.0;\n\tgetLightDirPoint(light.position);\n\t#ifdef CLUSTER_AREALIGHTS\n\tif (isClusteredLightArea(light)) {\n\t\tdecodeClusterLightAreaData(light);\n\t\tif (isClusteredLightRect(light)) {\n\t\t\tcalcRectLightValues(light.position, light.halfWidth, light.halfHeight);\n\t\t} else if (isClusteredLightDisk(light)) {\n\t\t\tcalcDiskLightValues(light.position, light.halfWidth, light.halfHeight);\n\t\t} else {\n\t\t\tcalcSphereLightValues(light.position, light.halfWidth, light.halfHeight);\n\t\t}\n\t\tfalloffAttenuation = getFalloffWindow(light.range, dLightDirW);\n\t} else\n\t#endif\n\t{\n\t\tif (isClusteredLightFalloffLinear(light))\n\t\t\tfalloffAttenuation = getFalloffLinear(light.range, dLightDirW);\n\t\telse\n\t\t\tfalloffAttenuation = getFalloffInvSquared(light.range, dLightDirW);\n\t}\n\tif (falloffAttenuation > 0.00001) {\n\t\t#ifdef CLUSTER_AREALIGHTS\n\t\tif (isClusteredLightArea(light)) {\n\t\t\tif (isClusteredLightRect(light)) {\n\t\t\t\tdiffuseAttenuation = getRectLightDiffuse(worldNormal, viewDir, dLightDirW, dLightDirNormW) * 16.0;\n\t\t\t} else if (isClusteredLightDisk(light)) {\n\t\t\t\tdiffuseAttenuation = getDiskLightDiffuse(worldNormal, viewDir, dLightDirW, dLightDirNormW) * 16.0;\n\t\t\t} else {\n\t\t\t\tdiffuseAttenuation = getSphereLightDiffuse(worldNormal, viewDir, dLightDirW, dLightDirNormW) * 16.0;\n\t\t\t}\n\t\t} else\n\t\t#endif\n\t\t{\n\t\t\tfalloffAttenuation *= getLightDiffuse(worldNormal, viewDir, dLightDirW, dLightDirNormW); \n\t\t}\n\t\tif (isClusteredLightSpot(light)) {\n\t\t\tdecodeClusterLightSpot(light);\n\t\t\tfalloffAttenuation *= getSpotEffect(light.direction, light.innerConeAngleCos, light.outerConeAngleCos, dLightDirNormW);\n\t\t}\n\t\t#if defined(CLUSTER_COOKIES_OR_SHADOWS)\n\t\tif (falloffAttenuation > 0.00001) {\n\t\t\tif (isClusteredLightCastShadow(light) || isClusteredLightCookie(light)) {\n\t\t\t\tif (isClusteredLightSpot(light)) {\n\t\t\t\t\tdecodeClusterLightProjectionMatrixData(light);\n\t\t\t\t} else {\n\t\t\t\t\tdecodeClusterLightOmniAtlasViewport(light);\n\t\t\t\t}\n\t\t\t\tfloat shadowTextureResolution = shadowAtlasParams.x;\n\t\t\t\tfloat shadowEdgePixels = shadowAtlasParams.y;\n\t\t\t\t#ifdef CLUSTER_COOKIES\n\t\t\t\tif (isClusteredLightCookie(light)) {\n\t\t\t\t\tdecodeClusterLightCookieData(light);\n\t\t\t\t\tif (isClusteredLightSpot(light)) {\n\t\t\t\t\t\tcookieAttenuation = getCookie2DClustered(TEXTURE_PASS(cookieAtlasTexture), lightProjectionMatrix, vPositionW, light.cookieIntensity, isClusteredLightCookieRgb(light), light.cookieChannelMask);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcookieAttenuation = getCookieCubeClustered(TEXTURE_PASS(cookieAtlasTexture), dLightDirW, light.cookieIntensity, isClusteredLightCookieRgb(light), light.cookieChannelMask, shadowTextureResolution, shadowEdgePixels, light.omniAtlasViewport);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t#endif\n\t\t\t\t#ifdef CLUSTER_SHADOWS\n\t\t\t\tif (isClusteredLightCastShadow(light)) {\n\t\t\t\t\tdecodeClusterLightShadowData(light);\n\t\t\t\t\tvec4 shadowParams = vec4(shadowTextureResolution, light.shadowNormalBias, light.shadowBias, 1.0 / light.range);\n\t\t\t\t\tif (isClusteredLightSpot(light)) {\n\t\t\t\t\t\tgetShadowCoordPerspZbufferNormalOffset(lightProjectionMatrix, shadowParams, geometricNormal);\n\t\t\t\t\t\t\n\t\t\t\t\t\t#if defined(CLUSTER_SHADOW_TYPE_PCF1)\n\t\t\t\t\t\t\tfloat shadow = getShadowSpotClusteredPCF1(SHADOWMAP_PASS(shadowAtlasTexture), dShadowCoord, shadowParams);\n\t\t\t\t\t\t#elif defined(CLUSTER_SHADOW_TYPE_PCF3)\n\t\t\t\t\t\t\tfloat shadow = getShadowSpotClusteredPCF3(SHADOWMAP_PASS(shadowAtlasTexture), dShadowCoord, shadowParams);\n\t\t\t\t\t\t#elif defined(CLUSTER_SHADOW_TYPE_PCF5)\n\t\t\t\t\t\t\tfloat shadow = getShadowSpotClusteredPCF5(SHADOWMAP_PASS(shadowAtlasTexture), dShadowCoord, shadowParams);\n\t\t\t\t\t\t#elif defined(CLUSTER_SHADOW_TYPE_PCSS)\n\t\t\t\t\t\t\tfloat shadow = getShadowSpotClusteredPCSS(SHADOWMAP_PASS(shadowAtlasTexture), dShadowCoord, shadowParams);\n\t\t\t\t\t\t#endif\n\t\t\t\t\t\tfalloffAttenuation *= mix(1.0, shadow, light.shadowIntensity);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvec3 dir = normalOffsetPointShadow(shadowParams, dLightPosW, dLightDirW, dLightDirNormW, geometricNormal);\n\t\t\t\t\t\t#if defined(CLUSTER_SHADOW_TYPE_PCF1)\n\t\t\t\t\t\t\tfloat shadow = getShadowOmniClusteredPCF1(SHADOWMAP_PASS(shadowAtlasTexture), shadowParams, light.omniAtlasViewport, shadowEdgePixels, dir);\n\t\t\t\t\t\t#elif defined(CLUSTER_SHADOW_TYPE_PCF3)\n\t\t\t\t\t\t\tfloat shadow = getShadowOmniClusteredPCF3(SHADOWMAP_PASS(shadowAtlasTexture), shadowParams, light.omniAtlasViewport, shadowEdgePixels, dir);\n\t\t\t\t\t\t#elif defined(CLUSTER_SHADOW_TYPE_PCF5)\n\t\t\t\t\t\t\tfloat shadow = getShadowOmniClusteredPCF5(SHADOWMAP_PASS(shadowAtlasTexture), shadowParams, light.omniAtlasViewport, shadowEdgePixels, dir);\n\t\t\t\t\t\t#endif\n\t\t\t\t\t\tfalloffAttenuation *= mix(1.0, shadow, light.shadowIntensity);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t#endif\n\t\t\t}\n\t\t}\n\t\t#endif\n\t\t#ifdef CLUSTER_AREALIGHTS\n\t\tif (isClusteredLightArea(light)) {\n\t\t\t{\n\t\t\t\tvec3 areaDiffuse = (diffuseAttenuation * falloffAttenuation) * light.color * cookieAttenuation;\n\t\t\t\t#if defined(LIT_SPECULAR)\n\t\t\t\t\t#if defined(LIT_CONSERVE_ENERGY)\n\t\t\t\t\t\tareaDiffuse = mix(areaDiffuse, vec3(0), dLTCSpecFres);\n\t\t\t\t\t#endif\n\t\t\t\t#endif\n\t\t\t\tdDiffuseLight += areaDiffuse;\n\t\t\t}\n\t\t\t#ifdef LIT_SPECULAR\n\t\t\t\tfloat areaLightSpecular;\n\t\t\t\tif (isClusteredLightRect(light)) {\n\t\t\t\t\tareaLightSpecular = getRectLightSpecular(worldNormal, viewDir);\n\t\t\t\t} else if (isClusteredLightDisk(light)) {\n\t\t\t\t\tareaLightSpecular = getDiskLightSpecular(worldNormal, viewDir);\n\t\t\t\t} else {\n\t\t\t\t\tareaLightSpecular = getSphereLightSpecular(worldNormal, viewDir);\n\t\t\t\t}\n\t\t\t\tdSpecularLight += dLTCSpecFres * areaLightSpecular * falloffAttenuation * light.color * cookieAttenuation;\n\t\t\t\t#ifdef LIT_CLEARCOAT\n\t\t\t\t\tfloat areaLightSpecularCC;\n\t\t\t\t\tif (isClusteredLightRect(light)) {\n\t\t\t\t\t\tareaLightSpecularCC = getRectLightSpecular(clearcoat_worldNormal, viewDir);\n\t\t\t\t\t} else if (isClusteredLightDisk(light)) {\n\t\t\t\t\t\tareaLightSpecularCC = getDiskLightSpecular(clearcoat_worldNormal, viewDir);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tareaLightSpecularCC = getSphereLightSpecular(clearcoat_worldNormal, viewDir);\n\t\t\t\t\t}\n\t\t\t\t\tccSpecularLight += ccLTCSpecFres * areaLightSpecularCC * falloffAttenuation * light.color  * cookieAttenuation;\n\t\t\t\t#endif\n\t\t\t#endif\n\t\t} else\n\t\t#endif\n\t\t{\n\t\t\t{\n\t\t\t\tvec3 punctualDiffuse = falloffAttenuation * light.color * cookieAttenuation;\n\t\t\t\t#if defined(CLUSTER_AREALIGHTS)\n\t\t\t\t#if defined(LIT_SPECULAR)\n\t\t\t\t#if defined(LIT_CONSERVE_ENERGY)\n\t\t\t\t\tpunctualDiffuse = mix(punctualDiffuse, vec3(0), specularity);\n\t\t\t\t#endif\n\t\t\t\t#endif\n\t\t\t\t#endif\n\t\t\t\tdDiffuseLight += punctualDiffuse;\n\t\t\t}\n   \n\t\t\t#ifdef LIT_SPECULAR\n\t\t\t\tvec3 halfDir = normalize(-dLightDirNormW + viewDir);\n\t\t\t\t\n\t\t\t\t#ifdef LIT_SPECULAR_FRESNEL\n\t\t\t\t\tdSpecularLight += \n\t\t\t\t\t\tgetLightSpecular(halfDir, reflectionDir, worldNormal, viewDir, dLightDirNormW, gloss, tbn) * falloffAttenuation * light.color * cookieAttenuation * \n\t\t\t\t\t\tgetFresnel(\n\t\t\t\t\t\t\tdot(viewDir, halfDir), \n\t\t\t\t\t\t\tgloss, \n\t\t\t\t\t\t\tspecularity\n\t\t\t\t\t\t#if defined(LIT_IRIDESCENCE)\n\t\t\t\t\t\t\t, iridescenceFresnel,\n\t\t\t\t\t\t\tiridescence_intensity\n\t\t\t\t\t\t#endif\n\t\t\t\t\t\t\t);\n\t\t\t\t#else\n\t\t\t\t\tdSpecularLight += getLightSpecular(halfDir, reflectionDir, worldNormal, viewDir, dLightDirNormW, gloss, tbn) * falloffAttenuation * light.color * cookieAttenuation * specularity;\n\t\t\t\t#endif\n\t\t\t\t#ifdef LIT_CLEARCOAT\n\t\t\t\t\t#ifdef LIT_SPECULAR_FRESNEL\n\t\t\t\t\t\tccSpecularLight += getLightSpecular(halfDir, clearcoatReflectionDir, clearcoat_worldNormal, viewDir, dLightDirNormW, clearcoat_gloss, tbn) * falloffAttenuation * light.color * cookieAttenuation * getFresnelCC(dot(viewDir, halfDir));\n\t\t\t\t\t#else\n\t\t\t\t\t\tccSpecularLight += getLightSpecular(halfDir, clearcoatReflectionDir, clearcoat_worldNormal, viewDir, dLightDirNormW, clearcoat_gloss, tbn) * falloffAttenuation * light.color * cookieAttenuation; \n\t\t\t\t\t#endif\n\t\t\t\t#endif\n\t\t\t\t#ifdef LIT_SHEEN\n\t\t\t\t\tsSpecularLight += getLightSpecularSheen(halfDir, worldNormal, viewDir, dLightDirNormW, sheen_gloss) * falloffAttenuation * light.color * cookieAttenuation;\n\t\t\t\t#endif\n\t\t\t#endif\n\t\t}\n\t}\n\tdAtten = falloffAttenuation;\n\tdAttenD = diffuseAttenuation;\n\tdAtten3 = cookieAttenuation;\n}\nvoid evaluateClusterLight(\n\tfloat lightIndex, \n\tvec3 worldNormal, \n\tvec3 viewDir, \n\tvec3 reflectionDir, \n#if defined(LIT_CLEARCOAT)\n\tvec3 clearcoatReflectionDir,\n#endif\n\tfloat gloss, \n\tvec3 specularity, \n\tvec3 geometricNormal, \n\tmat3 tbn, \n#if defined(LIT_IRIDESCENCE)\n\tvec3 iridescenceFresnel,\n#endif\n\tvec3 clearcoat_worldNormal,\n\tfloat clearcoat_gloss,\n\tfloat sheen_gloss,\n\tfloat iridescence_intensity\n) {\n\tClusterLightData clusterLightData;\n\tdecodeClusterLightCore(clusterLightData, lightIndex);\n\tif (acceptLightMask(clusterLightData))\n\t\tevaluateLight(\n\t\t\tclusterLightData, \n\t\t\tworldNormal, \n\t\t\tviewDir, \n\t\t\treflectionDir, \n#if defined(LIT_CLEARCOAT)\n\t\t\tclearcoatReflectionDir, \n#endif\n\t\t\tgloss, \n\t\t\tspecularity, \n\t\t\tgeometricNormal, \n\t\t\ttbn, \n#if defined(LIT_IRIDESCENCE)\n\t\t\tiridescenceFresnel,\n#endif\n\t\t\tclearcoat_worldNormal,\n\t\t\tclearcoat_gloss,\n\t\t\tsheen_gloss,\n\t\t\tiridescence_intensity\n\t\t);\n}\nvoid addClusteredLights(\n\tvec3 worldNormal, \n\tvec3 viewDir, \n\tvec3 reflectionDir, \n#if defined(LIT_CLEARCOAT)\n\tvec3 clearcoatReflectionDir,\n#endif\n\tfloat gloss, \n\tvec3 specularity, \n\tvec3 geometricNormal, \n\tmat3 tbn, \n#if defined(LIT_IRIDESCENCE)\n\tvec3 iridescenceFresnel,\n#endif\n\tvec3 clearcoat_worldNormal,\n\tfloat clearcoat_gloss,\n\tfloat sheen_gloss,\n\tfloat iridescence_intensity\n) {\n\tif (clusterSkip > 0.5)\n\t\treturn;\n\tvec3 cellCoords = floor((vPositionW - clusterBoundsMin) * clusterCellsCountByBoundsSize);\n\tif (!(any(lessThan(cellCoords, vec3(0.0))) || any(greaterThanEqual(cellCoords, clusterCellsMax)))) {\n\t\tfloat cellIndex = dot(clusterCellsDot, cellCoords);\n\t\tfloat clusterV = floor(cellIndex * clusterTextureSize.y);\n\t\tfloat clusterU = cellIndex - (clusterV * clusterTextureSize.x);\n\t\t#ifdef GL2\n\t\t\tfor (int lightCellIndex = 0; lightCellIndex < clusterMaxCells; lightCellIndex++) {\n\t\t\t\tfloat lightIndex = texelFetch(clusterWorldTexture, ivec2(int(clusterU) + lightCellIndex, clusterV), 0).x;\n\t\t\t\tif (lightIndex <= 0.0)\n\t\t\t\t\t\treturn;\n\t\t\t\tevaluateClusterLight(\n\t\t\t\t\tlightIndex * 255.0, \n\t\t\t\t\tworldNormal, \n\t\t\t\t\tviewDir, \n\t\t\t\t\treflectionDir,\n#if defined(LIT_CLEARCOAT)\n\t\t\t\t\tclearcoatReflectionDir,\n#endif\n\t\t\t\t\tgloss, \n\t\t\t\t\tspecularity, \n\t\t\t\t\tgeometricNormal, \n\t\t\t\t\ttbn, \n#if defined(LIT_IRIDESCENCE)\n\t\t\t\t\tiridescenceFresnel,\n#endif\n\t\t\t\t\tclearcoat_worldNormal,\n\t\t\t\t\tclearcoat_gloss,\n\t\t\t\t\tsheen_gloss,\n\t\t\t\t\tiridescence_intensity\n\t\t\t\t); \n\t\t\t}\n\t\t#else\n\t\t\tclusterV = (clusterV + 0.5) * clusterTextureSize.z;\n\t\t\tconst float maxLightCells = 256.0;\n\t\t\tfor (float lightCellIndex = 0.5; lightCellIndex < maxLightCells; lightCellIndex++) {\n\t\t\t\tfloat lightIndex = texture2DLodEXT(clusterWorldTexture, vec2(clusterTextureSize.y * (clusterU + lightCellIndex), clusterV), 0.0).x;\n\t\t\t\tif (lightIndex <= 0.0)\n\t\t\t\t\treturn;\n\t\t\t\t\n\t\t\t\tevaluateClusterLight(\n\t\t\t\t\tlightIndex * 255.0, \n\t\t\t\t\tworldNormal, \n\t\t\t\t\tviewDir, \n\t\t\t\t\treflectionDir,\n#if defined(LIT_CLEARCOAT)\n\t\t\t\t\tclearcoatReflectionDir,\n#endif\n\t\t\t\t\tgloss, \n\t\t\t\t\tspecularity, \n\t\t\t\t\tgeometricNormal, \n\t\t\t\t\ttbn, \n#if defined(LIT_IRIDESCENCE)\n\t\t\t\t\tiridescenceFresnel,\n#endif\n\t\t\t\t\tclearcoat_worldNormal,\n\t\t\t\t\tclearcoat_gloss,\n\t\t\t\t\tsheen_gloss,\n\t\t\t\t\tiridescence_intensity\n\t\t\t\t); \n\t\t\t\tif (lightCellIndex >= clusterMaxCells) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t#endif\n\t}\n}\n",combinePS:"\nvec3 combineColor(vec3 albedo, vec3 sheenSpecularity, float clearcoatSpecularity) {\n\tvec3 ret = vec3(0);\n#ifdef LIT_OLD_AMBIENT\n\tret += (dDiffuseLight - light_globalAmbient) * albedo + material_ambient * light_globalAmbient;\n#else\n\tret += albedo * dDiffuseLight;\n#endif\n#ifdef LIT_SPECULAR\n\tret += dSpecularLight;\n#endif\n#ifdef LIT_REFLECTIONS\n\tret += dReflection.rgb * dReflection.a;\n#endif\n#ifdef LIT_SHEEN\n\tfloat sheenScaling = 1.0 - max(max(sheenSpecularity.r, sheenSpecularity.g), sheenSpecularity.b) * 0.157;\n\tret = ret * sheenScaling + (sSpecularLight + sReflection.rgb) * sheenSpecularity;\n#endif\n#ifdef LIT_CLEARCOAT\n\tfloat clearCoatScaling = 1.0 - ccFresnel * clearcoatSpecularity;\n\tret = ret * clearCoatScaling + (ccSpecularLight + ccReflection.rgb) * clearcoatSpecularity;\n#endif\n\treturn ret;\n}\n",cookiePS:"\nvec4 getCookie2D(sampler2D tex, mat4 transform, float intensity) {\n\tvec4 projPos = transform * vec4(vPositionW, 1.0);\n\tprojPos.xy /= projPos.w;\n\treturn mix(vec4(1.0), texture2D(tex, projPos.xy), intensity);\n}\nvec4 getCookie2DClip(sampler2D tex, mat4 transform, float intensity) {\n\tvec4 projPos = transform * vec4(vPositionW, 1.0);\n\tprojPos.xy /= projPos.w;\n\tif (projPos.x < 0.0 || projPos.x > 1.0 || projPos.y < 0.0 || projPos.y > 1.0 || projPos.z < 0.0) return vec4(0.0);\n\treturn mix(vec4(1.0), texture2D(tex, projPos.xy), intensity);\n}\nvec4 getCookie2DXform(sampler2D tex, mat4 transform, float intensity, vec4 cookieMatrix, vec2 cookieOffset) {\n\tvec4 projPos = transform * vec4(vPositionW, 1.0);\n\tprojPos.xy /= projPos.w;\n\tprojPos.xy += cookieOffset;\n\tvec2 uv = mat2(cookieMatrix) * (projPos.xy-vec2(0.5)) + vec2(0.5);\n\treturn mix(vec4(1.0), texture2D(tex, uv), intensity);\n}\nvec4 getCookie2DClipXform(sampler2D tex, mat4 transform, float intensity, vec4 cookieMatrix, vec2 cookieOffset) {\n\tvec4 projPos = transform * vec4(vPositionW, 1.0);\n\tprojPos.xy /= projPos.w;\n\tprojPos.xy += cookieOffset;\n\tif (projPos.x < 0.0 || projPos.x > 1.0 || projPos.y < 0.0 || projPos.y > 1.0 || projPos.z < 0.0) return vec4(0.0);\n\tvec2 uv = mat2(cookieMatrix) * (projPos.xy-vec2(0.5)) + vec2(0.5);\n\treturn mix(vec4(1.0), texture2D(tex, uv), intensity);\n}\nvec4 getCookieCube(samplerCube tex, mat4 transform, float intensity) {\n\treturn mix(vec4(1.0), textureCube(tex, dLightDirNormW * mat3(transform)), intensity);\n}\n",cubeMapProjectBoxPS:"\nuniform vec3 envBoxMin;\nuniform vec3 envBoxMax;\nvec3 cubeMapProject(vec3 nrdir) {\n\tnrdir = cubeMapRotate(nrdir);\n\tvec3 rbmax = (envBoxMax - vPositionW) / nrdir;\n\tvec3 rbmin = (envBoxMin - vPositionW) / nrdir;\n\tvec3 rbminmax;\n\trbminmax.x = nrdir.x>0.0? rbmax.x : rbmin.x;\n\trbminmax.y = nrdir.y>0.0? rbmax.y : rbmin.y;\n\trbminmax.z = nrdir.z>0.0? rbmax.z : rbmin.z;\n\tfloat fa = min(min(rbminmax.x, rbminmax.y), rbminmax.z);\n\tvec3 posonbox = vPositionW + nrdir * fa;\n\tvec3 envBoxPos = (envBoxMin + envBoxMax) * 0.5;\n\treturn normalize(posonbox - envBoxPos);\n}\n",cubeMapProjectNonePS:"\nvec3 cubeMapProject(vec3 dir) {\n\treturn cubeMapRotate(dir);\n}\n",cubeMapRotatePS:"\n#ifdef CUBEMAP_ROTATION\nuniform mat3 cubeMapRotationMatrix;\n#endif\nvec3 cubeMapRotate(vec3 refDir) {\n#ifdef CUBEMAP_ROTATION\n\treturn refDir * cubeMapRotationMatrix;\n#else\n\treturn refDir;\n#endif\n}\n",debugOutputPS:"\n#ifdef DEBUG_ALBEDO_PASS\ngl_FragColor = vec4(gammaCorrectOutput(litArgs_albedo), 1.0);\n#endif\n#ifdef DEBUG_UV0_PASS\ngl_FragColor = vec4(litArgs_albedo , 1.0);\n#endif\n#ifdef DEBUG_WORLD_NORMAL_PASS\ngl_FragColor = vec4(litArgs_worldNormal * 0.5 + 0.5, 1.0);\n#endif\n#ifdef DEBUG_OPACITY_PASS\ngl_FragColor = vec4(vec3(litArgs_opacity) , 1.0);\n#endif\n#ifdef DEBUG_SPECULARITY_PASS\ngl_FragColor = vec4(litArgs_specularity, 1.0);\n#endif\n#ifdef DEBUG_GLOSS_PASS\ngl_FragColor = vec4(vec3(litArgs_gloss) , 1.0);\n#endif\n#ifdef DEBUG_METALNESS_PASS\ngl_FragColor = vec4(vec3(litArgs_metalness) , 1.0);\n#endif\n#ifdef DEBUG_AO_PASS\ngl_FragColor = vec4(vec3(litArgs_ao) , 1.0);\n#endif\n#ifdef DEBUG_EMISSION_PASS\ngl_FragColor = vec4(gammaCorrectOutput(litArgs_emission), 1.0);\n#endif\n",debugProcessFrontendPS:"\n#ifdef DEBUG_LIGHTING_PASS\nlitArgs_albedo = vec3(0.5);\n#endif\n#ifdef DEBUG_UV0_PASS\n#ifdef VARYING_VUV0\nlitArgs_albedo = vec3(vUv0, 0);\n#else\nlitArgs_albedo = vec3(0);\n#endif\n#endif\n",detailModesPS:"\nvec3 detailMode_mul(vec3 c1, vec3 c2) {\n\treturn c1 * c2;\n}\nvec3 detailMode_add(vec3 c1, vec3 c2) {\n\treturn c1 + c2;\n}\nvec3 detailMode_screen(vec3 c1, vec3 c2) {\n\treturn 1.0 - (1.0 - c1)*(1.0 - c2);\n}\nvec3 detailMode_overlay(vec3 c1, vec3 c2) {\n\treturn mix(1.0 - 2.0*(1.0 - c1)*(1.0 - c2), 2.0*c1*c2, step(c1, vec3(0.5)));\n}\nvec3 detailMode_min(vec3 c1, vec3 c2) {\n\treturn min(c1, c2);\n}\nvec3 detailMode_max(vec3 c1, vec3 c2) {\n\treturn max(c1, c2);\n}\n",diffusePS:"\n#ifdef MAPCOLOR\nuniform vec3 material_diffuse;\n#endif\nvoid getAlbedo() {\n\tdAlbedo = vec3(1.0);\n#ifdef MAPCOLOR\n\tdAlbedo *= material_diffuse.rgb;\n#endif\n#ifdef MAPTEXTURE\n\tvec3 albedoBase = $DECODE(texture2DBias($SAMPLER, $UV, textureBias)).$CH;\n\tdAlbedo *= addAlbedoDetail(albedoBase);\n#endif\n#ifdef MAPVERTEX\n\tdAlbedo *= gammaCorrectInput(saturate(vVertexColor.$VC));\n#endif\n}\n",diffuseDetailMapPS:"\nvec3 addAlbedoDetail(vec3 albedo) {\n#ifdef MAPTEXTURE\n\tvec3 albedoDetail = $DECODE(texture2DBias($SAMPLER, $UV, textureBias)).$CH;\n\treturn detailMode_$DETAILMODE(albedo, albedoDetail);\n#else\n\treturn albedo;\n#endif\n}\n",decodePS:Ag,emissivePS:"\n#ifdef MAPCOLOR\nuniform vec3 material_emissive;\n#endif\n#ifdef MAPFLOAT\nuniform float material_emissiveIntensity;\n#endif\nvoid getEmission() {\n\tdEmission = vec3(1.0);\n\t#ifdef MAPFLOAT\n\tdEmission *= material_emissiveIntensity;\n\t#endif\n\t#ifdef MAPCOLOR\n\tdEmission *= material_emissive;\n\t#endif\n\t#ifdef MAPTEXTURE\n\tdEmission *= $DECODE(texture2DBias($SAMPLER, $UV, textureBias)).$CH;\n\t#endif\n\t#ifdef MAPVERTEX\n\tdEmission *= gammaCorrectInput(saturate(vVertexColor.$VC));\n\t#endif\n}\n",encodePS:Lg,endPS:"\n\tgl_FragColor.rgb = combineColor(litArgs_albedo, litArgs_sheen_specularity, litArgs_clearcoat_specularity);\n\tgl_FragColor.rgb += litArgs_emission;\n\tgl_FragColor.rgb = addFog(gl_FragColor.rgb);\n\t#ifndef HDR\n\tgl_FragColor.rgb = toneMap(gl_FragColor.rgb);\n\tgl_FragColor.rgb = gammaCorrectOutput(gl_FragColor.rgb);\n\t#endif\n",endVS:"\n",envAtlasPS:"\nconst float atlasSize = 512.0;\nconst float seamSize = 1.0 / atlasSize;\nvec2 mapUv(vec2 uv, vec4 rect) {\n\treturn vec2(mix(rect.x + seamSize, rect.x + rect.z - seamSize, uv.x),\n\t\t\t\tmix(rect.y + seamSize, rect.y + rect.w - seamSize, uv.y));\n}\nvec2 mapRoughnessUv(vec2 uv, float level) {\n\tfloat t = 1.0 / exp2(level);\n\treturn mapUv(uv, vec4(0, 1.0 - t, t, t * 0.5));\n}\nvec2 mapShinyUv(vec2 uv, float level) {\n\tfloat t = 1.0 / exp2(level);\n\treturn mapUv(uv, vec4(1.0 - t, 1.0 - t, t, t * 0.5));\n}\n",envConstPS:"\nvec3 processEnvironment(vec3 color) {\n\treturn color;\n}\n",envMultiplyPS:"\nuniform float skyboxIntensity;\nvec3 processEnvironment(vec3 color) {\n\treturn color * skyboxIntensity;\n}\n",extensionPS:"\n",extensionVS:"\n",falloffInvSquaredPS:"\nfloat getFalloffWindow(float lightRadius, vec3 lightDir) {\n\tfloat sqrDist = dot(lightDir, lightDir);\n\tfloat invRadius = 1.0 / lightRadius;\n\treturn square( saturate( 1.0 - square( sqrDist * square(invRadius) ) ) );\n}\nfloat getFalloffInvSquared(float lightRadius, vec3 lightDir) {\n\tfloat sqrDist = dot(lightDir, lightDir);\n\tfloat falloff = 1.0 / (sqrDist + 1.0);\n\tfloat invRadius = 1.0 / lightRadius;\n\tfalloff *= 16.0;\n\tfalloff *= square( saturate( 1.0 - square( sqrDist * square(invRadius) ) ) );\n\treturn falloff;\n}\n",falloffLinearPS:"\nfloat getFalloffLinear(float lightRadius, vec3 lightDir) {\n\tfloat d = length(lightDir);\n\treturn max(((lightRadius - d) / lightRadius), 0.0);\n}\n",fixCubemapSeamsNonePS:"\nvec3 fixSeams(vec3 vec, float mipmapIndex) {\n\treturn vec;\n}\nvec3 fixSeams(vec3 vec) {\n\treturn vec;\n}\nvec3 fixSeamsStatic(vec3 vec, float invRecMipSize) {\n\treturn vec;\n}\nvec3 calcSeam(vec3 vec) {\n\treturn vec3(0);\n}\nvec3 applySeam(vec3 vec, vec3 seam, float scale) {\n\treturn vec;\n}\n",fixCubemapSeamsStretchPS:"\nvec3 fixSeams(vec3 vec, float mipmapIndex) {\n\tvec3 avec = abs(vec);\n\tfloat scale = 1.0 - exp2(mipmapIndex) / 128.0;\n\tfloat M = max(max(avec.x, avec.y), avec.z);\n\tif (avec.x != M) vec.x *= scale;\n\tif (avec.y != M) vec.y *= scale;\n\tif (avec.z != M) vec.z *= scale;\n\treturn vec;\n}\nvec3 fixSeams(vec3 vec) {\n\tvec3 avec = abs(vec);\n\tfloat scale = 1.0 - 1.0 / 128.0;\n\tfloat M = max(max(avec.x, avec.y), avec.z);\n\tif (avec.x != M) vec.x *= scale;\n\tif (avec.y != M) vec.y *= scale;\n\tif (avec.z != M) vec.z *= scale;\n\treturn vec;\n}\nvec3 fixSeamsStatic(vec3 vec, float invRecMipSize) {\n\tvec3 avec = abs(vec);\n\tfloat scale = invRecMipSize;\n\tfloat M = max(max(avec.x, avec.y), avec.z);\n\tif (avec.x != M) vec.x *= scale;\n\tif (avec.y != M) vec.y *= scale;\n\tif (avec.z != M) vec.z *= scale;\n\treturn vec;\n}\nvec3 calcSeam(vec3 vec) {\n\tvec3 avec = abs(vec);\n\tfloat M = max(avec.x, max(avec.y, avec.z));\n\treturn vec3(avec.x != M ? 1.0 : 0.0,\n\t\t\t\tavec.y != M ? 1.0 : 0.0,\n\t\t\t\tavec.z != M ? 1.0 : 0.0);\n}\nvec3 applySeam(vec3 vec, vec3 seam, float scale) {\n\treturn vec * (seam * -scale + vec3(1.0));\n}\n",floatUnpackingPS:"\nfloat bytes2float2(vec2 data) {\n\treturn dot(data, vec2(1.0, 1.0 / 255.0));\n}\nfloat bytes2float3(vec3 data) {\n\treturn dot(data, vec3(1.0, 1.0 / 255.0, 1.0 / 65025.0));\n}\nfloat bytes2float4(vec4 data) {\n\treturn dot(data, vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0));\n}\nfloat bytes2floatRange2(vec2 data, float min, float max) {\n\treturn mix(min, max, bytes2float2(data));\n}\nfloat bytes2floatRange3(vec3 data, float min, float max) {\n\treturn mix(min, max, bytes2float3(data));\n}\nfloat bytes2floatRange4(vec4 data, float min, float max) {\n\treturn mix(min, max, bytes2float4(data));\n}\nfloat mantissaExponent2Float(vec4 pack)\n{\n\tfloat value = bytes2floatRange3(pack.xyz, -1.0, 1.0);\n\tfloat exponent = floor(pack.w * 255.0 - 127.0);\n\treturn value * exp2(exponent);\n}\n",fogExpPS:"\nuniform vec3 fog_color;\nuniform float fog_density;\nfloat dBlendModeFogFactor = 1.0;\nvec3 addFog(vec3 color) {\n\tfloat depth = gl_FragCoord.z / gl_FragCoord.w;\n\tfloat fogFactor = exp(-depth * fog_density);\n\tfogFactor = clamp(fogFactor, 0.0, 1.0);\n\treturn mix(fog_color * dBlendModeFogFactor, color, fogFactor);\n}\n",fogExp2PS:"\nuniform vec3 fog_color;\nuniform float fog_density;\nfloat dBlendModeFogFactor = 1.0;\nvec3 addFog(vec3 color) {\n\tfloat depth = gl_FragCoord.z / gl_FragCoord.w;\n\tfloat fogFactor = exp(-depth * depth * fog_density * fog_density);\n\tfogFactor = clamp(fogFactor, 0.0, 1.0);\n\treturn mix(fog_color * dBlendModeFogFactor, color, fogFactor);\n}\n",fogLinearPS:"\nuniform vec3 fog_color;\nuniform float fog_start;\nuniform float fog_end;\nfloat dBlendModeFogFactor = 1.0;\nvec3 addFog(vec3 color) {\n\tfloat depth = gl_FragCoord.z / gl_FragCoord.w;\n\tfloat fogFactor = (fog_end - depth) / (fog_end - fog_start);\n\tfogFactor = clamp(fogFactor, 0.0, 1.0);\n\treturn mix(fog_color * dBlendModeFogFactor, color, fogFactor);\n}\n",fogNonePS:"\nfloat dBlendModeFogFactor = 1.0;\nvec3 addFog(vec3 color) {\n\treturn color;\n}\n",fresnelSchlickPS:"\nvec3 getFresnel(\n\t\tfloat cosTheta, \n\t\tfloat gloss, \n\t\tvec3 specularity\n#if defined(LIT_IRIDESCENCE)\n\t\t, vec3 iridescenceFresnel, \n\t\tfloat iridescenceIntensity\n#endif\n\t) {\n\tfloat fresnel = pow(1.0 - max(cosTheta, 0.0), 5.0);\n\tfloat glossSq = gloss * gloss;\n\tvec3 ret = specularity + (max(vec3(glossSq), specularity) - specularity) * fresnel;\n#if defined(LIT_IRIDESCENCE)\n\treturn mix(ret, iridescenceFresnel, iridescenceIntensity);\n#else\n\treturn ret;\n#endif\t\n}\nfloat getFresnelCC(float cosTheta) {\n\tfloat fresnel = pow(1.0 - max(cosTheta, 0.0), 5.0);\n\treturn 0.04 + (1.0 - 0.04) * fresnel;\n}\n",fullscreenQuadPS:"\nvarying vec2 vUv0;\nuniform sampler2D source;\nvoid main(void) {\n\tgl_FragColor = texture2D(source, vUv0);\n}\n",fullscreenQuadVS:"\nattribute vec2 vertex_position;\nvarying vec2 vUv0;\nvoid main(void)\n{\n\tgl_Position = vec4(vertex_position, 0.5, 1.0);\n\tvUv0 = vertex_position.xy*0.5+0.5;\n}\n",gamma1_0PS:"\nfloat gammaCorrectInput(float color) {\n\treturn color;\n}\nvec3 gammaCorrectInput(vec3 color) {\n\treturn color;\n}\nvec4 gammaCorrectInput(vec4 color) {\n\treturn color;\n}\nvec3 gammaCorrectOutput(vec3 color) {\n\treturn color;\n}\n",gamma2_2PS:"\nfloat gammaCorrectInput(float color) {\n\treturn decodeGamma(color);\n}\nvec3 gammaCorrectInput(vec3 color) {\n\treturn decodeGamma(color);\n}\nvec4 gammaCorrectInput(vec4 color) {\n\treturn vec4(decodeGamma(color.xyz), color.w);\n}\nvec3 gammaCorrectOutput(vec3 color) {\n#ifdef HDR\n\treturn color;\n#else\n\treturn pow(color + 0.0000001, vec3(1.0 / 2.2));\n#endif\n}\n",gles2PS:Dl,gles3PS:kl,gles3VS:Fl,glossPS:"\n#ifdef MAPFLOAT\nuniform float material_gloss;\n#endif\nvoid getGlossiness() {\n\tdGlossiness = 1.0;\n\t#ifdef MAPFLOAT\n\tdGlossiness *= material_gloss;\n\t#endif\n\t#ifdef MAPTEXTURE\n\tdGlossiness *= texture2DBias($SAMPLER, $UV, textureBias).$CH;\n\t#endif\n\t#ifdef MAPVERTEX\n\tdGlossiness *= saturate(vVertexColor.$VC);\n\t#endif\n\t#ifdef MAPINVERT\n\tdGlossiness = 1.0 - dGlossiness;\n\t#endif\n\tdGlossiness += 0.0000001;\n}\n",iridescenceDiffractionPS:"\nuniform float material_iridescenceRefractionIndex;\n#ifndef PI\n#define PI 3.14159265\n#endif\nfloat iridescence_iorToFresnel(float transmittedIor, float incidentIor) {\n\treturn pow((transmittedIor - incidentIor) / (transmittedIor + incidentIor), 2.0);\n}\nvec3 iridescence_iorToFresnel(vec3 transmittedIor, float incidentIor) {\n\treturn pow((transmittedIor - vec3(incidentIor)) / (transmittedIor + vec3(incidentIor)), vec3(2.0));\n}\nvec3 iridescence_fresnelToIor(vec3 f0) {\n\tvec3 sqrtF0 = sqrt(f0);\n\treturn (vec3(1.0) + sqrtF0) / (vec3(1.0) - sqrtF0);\n}\nvec3 iridescence_sensitivity(float opd, vec3 shift) {\n\tfloat phase = 2.0 * PI * opd * 1.0e-9;\n\tconst vec3 val = vec3(5.4856e-13, 4.4201e-13, 5.2481e-13);\n\tconst vec3 pos = vec3(1.6810e+06, 1.7953e+06, 2.2084e+06);\n\tconst vec3 var = vec3(4.3278e+09, 9.3046e+09, 6.6121e+09);\n\tvec3 xyz = val * sqrt(2.0 * PI * var) * cos(pos * phase + shift) * exp(-pow(phase, 2.0) * var);\n\txyz.x += 9.7470e-14 * sqrt(2.0 * PI * 4.5282e+09) * cos(2.2399e+06 * phase + shift[0]) * exp(-4.5282e+09 * pow(phase, 2.0));\n\txyz /= vec3(1.0685e-07);\n\tconst mat3 XYZ_TO_REC709 = mat3(\n\t\t3.2404542, -0.9692660,  0.0556434,\n\t   -1.5371385,  1.8760108, -0.2040259,\n\t   -0.4985314,  0.0415560,  1.0572252\n\t);\n\treturn XYZ_TO_REC709 * xyz;\n}\nfloat iridescence_fresnel(float cosTheta, float f0) {\n\tfloat x = clamp(1.0 - cosTheta, 0.0, 1.0);\n\tfloat x2 = x * x;\n\tfloat x5 = x * x2 * x2;\n\treturn f0 + (1.0 - f0) * x5;\n} \nvec3 iridescence_fresnel(float cosTheta, vec3 f0) {\n\tfloat x = clamp(1.0 - cosTheta, 0.0, 1.0);\n\tfloat x2 = x * x;\n\tfloat x5 = x * x2 * x2; \n\treturn f0 + (vec3(1.0) - f0) * x5;\n}\nvec3 calcIridescence(float outsideIor, float cosTheta, vec3 base_f0, float iridescenceThickness) {\n\tfloat iridescenceIor = mix(outsideIor, material_iridescenceRefractionIndex, smoothstep(0.0, 0.03, iridescenceThickness));\n\tfloat sinTheta2Sq = pow(outsideIor / iridescenceIor, 2.0) * (1.0 - pow(cosTheta, 2.0));\n\tfloat cosTheta2Sq = 1.0 - sinTheta2Sq;\n\tif (cosTheta2Sq < 0.0) {\n\t\treturn vec3(1.0);\n\t}\n\tfloat cosTheta2 = sqrt(cosTheta2Sq);\n\tfloat r0 = iridescence_iorToFresnel(iridescenceIor, outsideIor);\n\tfloat r12 = iridescence_fresnel(cosTheta, r0);\n\tfloat r21 = r12;\n\tfloat t121 = 1.0 - r12;\n\tfloat phi12 = iridescenceIor < outsideIor ? PI : 0.0;\n\tfloat phi21 = PI - phi12;\n\tvec3 baseIor = iridescence_fresnelToIor(base_f0 + vec3(0.0001));\n\tvec3 r1 = iridescence_iorToFresnel(baseIor, iridescenceIor);\n\tvec3 r23 = iridescence_fresnel(cosTheta2, r1);\n\tvec3 phi23 = vec3(0.0);\n\tif (baseIor[0] < iridescenceIor) phi23[0] = PI;\n\tif (baseIor[1] < iridescenceIor) phi23[1] = PI;\n\tif (baseIor[2] < iridescenceIor) phi23[2] = PI;\n\tfloat opd = 2.0 * iridescenceIor * iridescenceThickness * cosTheta2;\n\tvec3 phi = vec3(phi21) + phi23; \n\tvec3 r123Sq = clamp(r12 * r23, 1e-5, 0.9999);\n\tvec3 r123 = sqrt(r123Sq);\n\tvec3 rs = pow(t121, 2.0) * r23 / (1.0 - r123Sq);\n\tvec3 c0 = r12 + rs;\n\tvec3 i = c0;\n\tvec3 cm = rs - t121;\n\tfor (int m = 1; m <= 2; m++) {\n\t\tcm *= r123;\n\t\tvec3 sm = 2.0 * iridescence_sensitivity(float(m) * opd, float(m) * phi);\n\t\ti += cm * sm;\n\t}\n\treturn max(i, vec3(0.0));\n}\nvec3 getIridescence(float cosTheta, vec3 specularity, float iridescenceThickness) {\n\treturn calcIridescence(1.0, cosTheta, specularity, iridescenceThickness);\n}\n",iridescencePS:"\n#ifdef MAPFLOAT\nuniform float material_iridescence;\n#endif\nvoid getIridescence() {\n\tfloat iridescence = 1.0;\n\t#ifdef MAPFLOAT\n\tiridescence *= material_iridescence;\n\t#endif\n\t#ifdef MAPTEXTURE\n\tiridescence *= texture2DBias($SAMPLER, $UV, textureBias).$CH;\n\t#endif\n\tdIridescence = iridescence; \n}\n",iridescenceThicknessPS:"\nuniform float material_iridescenceThicknessMax;\n#ifdef MAPTEXTURE\nuniform float material_iridescenceThicknessMin;\n#endif\nvoid getIridescenceThickness() {\n\t#ifdef MAPTEXTURE\n\tfloat blend = texture2DBias($SAMPLER, $UV, textureBias).$CH;\n\tfloat iridescenceThickness = mix(material_iridescenceThicknessMin, material_iridescenceThicknessMax, blend);\n\t#else\n\tfloat iridescenceThickness = material_iridescenceThicknessMax;\n\t#endif\n\tdIridescenceThickness = iridescenceThickness; \n}\n",instancingVS:"\nattribute vec4 instance_line1;\nattribute vec4 instance_line2;\nattribute vec4 instance_line3;\nattribute vec4 instance_line4;\n",iorPS:"\n#ifdef MAPFLOAT\nuniform float material_refractionIndex;\n#endif\nvoid getIor() {\n#ifdef MAPFLOAT\n\tdIor = material_refractionIndex;\n#else\n\tdIor = 1.0 / 1.5;\n#endif\n}\n",lightDiffuseLambertPS:"\nfloat getLightDiffuse(vec3 worldNormal, vec3 viewDir, vec3 lightDir, vec3 lightDirNorm) {\n\treturn max(dot(worldNormal, -lightDirNorm), 0.0);\n}\n",lightDirPointPS:"\nvoid getLightDirPoint(vec3 lightPosW) {\n\tdLightDirW = vPositionW - lightPosW;\n\tdLightDirNormW = normalize(dLightDirW);\n\tdLightPosW = lightPosW;\n}\n",lightmapAddPS:"\nvoid addLightMap(\n\tvec3 lightmap, \n\tvec3 dir, \n\tvec3 worldNormal, \n\tvec3 viewDir, \n\tvec3 reflectionDir, \n\tfloat gloss, \n\tvec3 specularity, \n\tvec3 vertexNormal, \n\tmat3 tbn\n#if defined(LIT_IRIDESCENCE)\n\tvec3 iridescenceFresnel, \n\tfloat iridescenceIntensity\n#endif\n) {\n\tdDiffuseLight += lightmap;\n}\n",lightmapDirAddPS:"\nvoid addLightMap(\n\tvec3 lightmap, \n\tvec3 dir, \n\tvec3 worldNormal, \n\tvec3 viewDir, \n\tvec3 reflectionDir, \n\tfloat gloss, \n\tvec3 specularity, \n\tvec3 vertexNormal, \n\tmat3 tbn\n#if defined(LIT_IRIDESCENCE)\n\tvec3 iridescenceFresnel, \n\tfloat iridescenceIntensity\n#endif\n) {\n\tif (dot(dir, dir) < 0.0001) {\n\t\tdDiffuseLight += lightmap;\n\t} else {\n\t\tfloat vlight = saturate(dot(dir, -vertexNormal));\n\t\tfloat flight = saturate(dot(dir, -worldNormal));\n\t\tfloat nlight = (flight / max(vlight, 0.01)) * 0.5;\n\t\tdDiffuseLight += lightmap * nlight * 2.0;\n\t\tvec3 halfDir = normalize(-dir + viewDir);\n\t\tvec3 specularLight = lightmap * getLightSpecular(halfDir, reflectionDir, worldNormal, viewDir, dir, gloss, tbn);\n#ifdef LIT_SPECULAR_FRESNEL\n\t\tspecularLight *= \n\t\t\tgetFresnel(dot(viewDir, halfDir), \n\t\t\tgloss, \n\t\t\tspecularity\n\t\t#if defined(LIT_IRIDESCENCE)\n\t\t\t, iridescenceFresnel,\n\t\t\tiridescenceIntensity\n\t\t#endif\n\t\t\t);\n#endif\n\t\tdSpecularLight += specularLight;\n\t}\n}\n",lightmapDirPS:"\nuniform sampler2D texture_lightMap;\nuniform sampler2D texture_dirLightMap;\nvoid getLightMap() {\n\tdLightmap = $DECODE(texture2DBias(texture_lightMap, $UV, textureBias)).$CH;\n\tvec3 dir = texture2DBias(texture_dirLightMap, $UV, textureBias).xyz * 2.0 - 1.0;\n\tfloat dirDot = dot(dir, dir);\n\tdLightmapDir = (dirDot > 0.001) ? dir / sqrt(dirDot) : vec3(0.0);\n}\n",lightmapSinglePS:"\nvoid getLightMap() {\n\tdLightmap = vec3(1.0);\n\t#ifdef MAPTEXTURE\n\tdLightmap *= $DECODE(texture2DBias($SAMPLER, $UV, textureBias)).$CH;\n\t#endif\n\t#ifdef MAPVERTEX\n\tdLightmap *= saturate(vVertexColor.$VC);\n\t#endif\n}\n",lightSpecularAnisoGGXPS:"\nfloat calcLightSpecular(float gloss, vec3 worldNormal, vec3 viewDir, vec3 h, vec3 lightDirNorm, mat3 tbn) {\n\tfloat PI = 3.141592653589793;\n\tfloat roughness = max((1.0 - gloss) * (1.0 - gloss), 0.001);\n\tfloat anisotropy = material_anisotropy * roughness;\n \n\tfloat at = max((roughness + anisotropy), roughness / 4.0);\n\tfloat ab = max((roughness - anisotropy), roughness / 4.0);\n\tfloat NoH = dot(worldNormal, h);\n\tfloat ToH = dot(tbn[0], h);\n\tfloat BoH = dot(tbn[1], h);\n\tfloat a2 = at * ab;\n\tvec3 v = vec3(ab * ToH, at * BoH, a2 * NoH);\n\tfloat v2 = dot(v, v);\n\tfloat w2 = a2 / v2;\n\tfloat D = a2 * w2 * w2 * (1.0 / PI);\n\tfloat ToV = dot(tbn[0], viewDir);\n\tfloat BoV = dot(tbn[1], viewDir);\n\tfloat ToL = dot(tbn[0], -lightDirNorm);\n\tfloat BoL = dot(tbn[1], -lightDirNorm);\n\tfloat NoV = dot(worldNormal, viewDir);\n\tfloat NoL = dot(worldNormal, -lightDirNorm);\n\tfloat lambdaV = NoL * length(vec3(at * ToV, ab * BoV, NoV));\n\tfloat lambdaL = NoV * length(vec3(at * ToL, ab * BoL, NoL));\n\tfloat G = 0.5 / (lambdaV + lambdaL);\n\treturn D * G;\n}\nfloat getLightSpecular(vec3 h, vec3 reflDir, vec3 worldNormal, vec3 viewDir, vec3 lightDirNorm, float gloss, mat3 tbn) {\n\treturn calcLightSpecular(gloss, worldNormal, viewDir, h, lightDirNorm, tbn);\n}\n",lightSpecularBlinnPS:"\nfloat calcLightSpecular(float gloss, vec3 worldNormal, vec3 h) {\n\tfloat nh = max( dot( h, worldNormal ), 0.0 );\n\tfloat specPow = exp2(gloss * 11.0);\n\tspecPow = max(specPow, 0.0001);\n\treturn pow(nh, specPow) * (specPow + 2.0) / 8.0;\n}\nfloat getLightSpecular(vec3 h, vec3 reflDir, vec3 worldNormal, vec3 viewDir, vec3 lightDirNorm, float gloss, mat3 tbn) {\n\treturn calcLightSpecular(gloss, worldNormal, h);\n}\n",lightSpecularPhongPS:"\nfloat calcLightSpecular(float gloss, vec3 reflDir, vec3 lightDirNorm) {\n\tfloat specPow = gloss;\n\treturn pow(max(dot(reflDir, -lightDirNorm), 0.0), specPow + 0.0001);\n}\nfloat getLightSpecular(vec3 h, vec3 reflDir, vec3 worldNormal, vec3 viewDir, vec3 lightDirNorm, float gloss, mat3 tbn) {\n\treturn calcLightSpecular(gloss, reflDir, lightDirNorm);\n}\n",lightSheenPS:"\nfloat sheenD(vec3 normal, vec3 h, float roughness) {\n\tfloat invR = 1.0 / (roughness * roughness);\n\tfloat cos2h = max(dot(normal, h), 0.0);\n\tcos2h *= cos2h;\n\tfloat sin2h = max(1.0 - cos2h, 0.0078125);\n\treturn (2.0 + invR) * pow(sin2h, invR * 0.5) / (2.0 * PI);\n}\nfloat sheenV(vec3 normal, vec3 viewDir, vec3 light) {\n\tfloat NoV = max(dot(normal, viewDir), 0.000001);\n\tfloat NoL = max(dot(normal, light), 0.000001);\n\treturn 1.0 / (4.0 * (NoL + NoV - NoL * NoV));\n}\nfloat getLightSpecularSheen(vec3 h, vec3 worldNormal, vec3 viewDir, vec3 lightDirNorm, float sheenGloss) {\n\tfloat D = sheenD(worldNormal, h, sheenGloss);\n\tfloat V = sheenV(worldNormal, viewDir, -lightDirNorm);\n\treturn D * V;\n}\n",linearizeDepthPS:"\n#ifndef LINEARIZE_DEPTH\n#define LINEARIZE_DEPTH\nfloat linearizeDepth(float z, vec4 cameraParams) {\n\tif (cameraParams.w == 0.0)\n\t\treturn (cameraParams.z * cameraParams.y) / (cameraParams.y + z * (cameraParams.z - cameraParams.y));\n\telse\n\t\treturn cameraParams.z + z * (cameraParams.y - cameraParams.z);\n}\n#ifndef CAMERAPLANES\n#define CAMERAPLANES\nuniform vec4 camera_params;\n#endif\n#ifdef GL2\nfloat linearizeDepth(float z) {\n\treturn linearizeDepth(z, camera_params);\n}\n#else\n#ifndef UNPACKFLOAT\n#define UNPACKFLOAT\nfloat unpackFloat(vec4 rgbaDepth) {\n\tconst vec4 bitShift = vec4(1.0 / (256.0 * 256.0 * 256.0), 1.0 / (256.0 * 256.0), 1.0 / 256.0, 1.0);\n\treturn dot(rgbaDepth, bitShift);\n}\n#endif\n#endif\n#endif\n",litShaderArgsPS:"\nvec3 litArgs_albedo;\nfloat litArgs_opacity;\nvec3 litArgs_emission;\nvec3 litArgs_worldNormal;\nfloat litArgs_ao;\nvec3 litArgs_lightmap;\nvec3 litArgs_lightmapDir;\nfloat litArgs_metalness;\nvec3 litArgs_specularity;\nfloat litArgs_specularityFactor;\nfloat litArgs_gloss;\nfloat litArgs_sheen_gloss;\nvec3 litArgs_sheen_specularity;\nfloat litArgs_transmission;\nfloat litArgs_thickness;\nfloat litArgs_ior;\nfloat litArgs_iridescence_intensity;\nfloat litArgs_iridescence_thickness;\nvec3 litArgs_clearcoat_worldNormal;\nfloat litArgs_clearcoat_specularity;\nfloat litArgs_clearcoat_gloss;\n",ltcPS:"\nmat3 transposeMat3( const in mat3 m ) {\n\tmat3 tmp;\n\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\n\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\n\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\n\treturn tmp;\n}\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\n\tconst float LUT_SIZE = 64.0;\n\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\n\tconst float LUT_BIAS = 0.5 / LUT_SIZE;\n\tfloat dotNV = saturate( dot( N, V ) );\n\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\n\tuv = uv * LUT_SCALE + LUT_BIAS;\n\treturn uv;\n}\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\n\tfloat l = length( f );\n\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\n}\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\n\tfloat x = dot( v1, v2 );\n\tfloat y = abs( x );\n\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\n\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\n\tfloat v = a / b;\n\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\n\treturn cross( v1, v2 ) * theta_sintheta;\n}\nstruct Coords {\n\tvec3 coord0;\n\tvec3 coord1;\n\tvec3 coord2;\n\tvec3 coord3;\n};\nfloat LTC_EvaluateRect( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in Coords rectCoords) {\n\tvec3 v1 = rectCoords.coord1 - rectCoords.coord0;\n\tvec3 v2 = rectCoords.coord3 - rectCoords.coord0;\n\t\n\tvec3 lightNormal = cross( v1, v2 );\n\tfloat factor = sign(-dot( lightNormal, P - rectCoords.coord0 ));\n\tvec3 T1, T2;\n\tT1 = normalize( V - N * dot( V, N ) );\n\tT2 =  factor * cross( N, T1 );\n\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\n\tvec3 coords[ 4 ];\n\tcoords[ 0 ] = mat * ( rectCoords.coord0 - P );\n\tcoords[ 1 ] = mat * ( rectCoords.coord1 - P );\n\tcoords[ 2 ] = mat * ( rectCoords.coord2 - P );\n\tcoords[ 3 ] = mat * ( rectCoords.coord3 - P );\n\tcoords[ 0 ] = normalize( coords[ 0 ] );\n\tcoords[ 1 ] = normalize( coords[ 1 ] );\n\tcoords[ 2 ] = normalize( coords[ 2 ] );\n\tcoords[ 3 ] = normalize( coords[ 3 ] );\n\tvec3 vectorFormFactor = vec3( 0.0 );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\n\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\n\treturn result;\n}\nCoords dLTCCoords;\nCoords getLTCLightCoords(vec3 lightPos, vec3 halfWidth, vec3 halfHeight){\n\tCoords coords;\n\tcoords.coord0 = lightPos + halfWidth - halfHeight;\n\tcoords.coord1 = lightPos - halfWidth - halfHeight;\n\tcoords.coord2 = lightPos - halfWidth + halfHeight;\n\tcoords.coord3 = lightPos + halfWidth + halfHeight;\n\treturn coords;\n}\nfloat dSphereRadius;\nCoords getSphereLightCoords(vec3 lightPos, vec3 halfWidth, vec3 halfHeight){\n\tdSphereRadius = max(length(halfWidth), length(halfHeight));\n\tvec3 f = reflect(normalize(lightPos - view_position), vNormalW);\n\tvec3 w = normalize(cross(f, halfHeight));\n\tvec3 h = normalize(cross(f, w));\n\treturn getLTCLightCoords(lightPos, w * dSphereRadius, h * dSphereRadius);\n}\nvec2 dLTCUV;\n#ifdef LIT_CLEARCOAT\nvec2 ccLTCUV;\n#endif\nvec2 getLTCLightUV(float gloss, vec3 worldNormal, vec3 viewDir)\n{\n\tfloat roughness = max((1.0 - gloss) * (1.0 - gloss), 0.001);\n\treturn LTC_Uv( worldNormal, viewDir, roughness );\n}\nvec3 dLTCSpecFres;\n#ifdef LIT_CLEARCOAT\nvec3 ccLTCSpecFres;\n#endif\nvec3 getLTCLightSpecFres(vec2 uv, vec3 specularity)\n{\n\tvec4 t2 = texture2DLodEXT(areaLightsLutTex2, uv, 0.0);\n\t#ifdef AREA_R8_G8_B8_A8_LUTS\n\tt2 *= vec4(0.693103,1,1,1);\n\tt2 += vec4(0.306897,0,0,0);\n\t#endif\n\treturn specularity * t2.x + ( vec3( 1.0 ) - specularity) * t2.y;\n}\nvoid calcLTCLightValues(float gloss, vec3 worldNormal, vec3 viewDir, vec3 specularity, float clearcoatGloss, vec3 clearcoatWorldNormal, float clearcoatSpecularity)\n{\n\tdLTCUV = getLTCLightUV(gloss, worldNormal, viewDir);\n\tdLTCSpecFres = getLTCLightSpecFres(dLTCUV, specularity); \n#ifdef LIT_CLEARCOAT\n\tccLTCUV = getLTCLightUV(clearcoatGloss, clearcoatWorldNormal, viewDir);\n\tccLTCSpecFres = getLTCLightSpecFres(ccLTCUV, vec3(clearcoatSpecularity));\n#endif\n}\nvoid calcRectLightValues(vec3 lightPos, vec3 halfWidth, vec3 halfHeight)\n{\n\tdLTCCoords = getLTCLightCoords(lightPos, halfWidth, halfHeight);\n}\nvoid calcDiskLightValues(vec3 lightPos, vec3 halfWidth, vec3 halfHeight)\n{\n\tcalcRectLightValues(lightPos, halfWidth, halfHeight);\n}\nvoid calcSphereLightValues(vec3 lightPos, vec3 halfWidth, vec3 halfHeight)\n{\n\tdLTCCoords = getSphereLightCoords(lightPos, halfWidth, halfHeight);\n}\nvec3 SolveCubic(vec4 Coefficient)\n{\n\tfloat pi = 3.14159;\n\tCoefficient.xyz /= Coefficient.w;\n\tCoefficient.yz /= 3.0;\n\tfloat A = Coefficient.w;\n\tfloat B = Coefficient.z;\n\tfloat C = Coefficient.y;\n\tfloat D = Coefficient.x;\n\tvec3 Delta = vec3(\n\t\t-Coefficient.z * Coefficient.z + Coefficient.y,\n\t\t-Coefficient.y * Coefficient.z + Coefficient.x,\n\t\tdot(vec2(Coefficient.z, -Coefficient.y), Coefficient.xy)\n\t);\n\tfloat Discriminant = dot(vec2(4.0 * Delta.x, -Delta.y), Delta.zy);\n\tvec3 RootsA, RootsD;\n\tvec2 xlc, xsc;\n\t{\n\t\tfloat A_a = 1.0;\n\t\tfloat C_a = Delta.x;\n\t\tfloat D_a = -2.0 * B * Delta.x + Delta.y;\n\t\tfloat Theta = atan(sqrt(Discriminant), -D_a) / 3.0;\n\t\tfloat x_1a = 2.0 * sqrt(-C_a) * cos(Theta);\n\t\tfloat x_3a = 2.0 * sqrt(-C_a) * cos(Theta + (2.0 / 3.0) * pi);\n\t\tfloat xl;\n\t\tif ((x_1a + x_3a) > 2.0 * B)\n\t\t\txl = x_1a;\n\t\telse\n\t\t\txl = x_3a;\n\t\txlc = vec2(xl - B, A);\n\t}\n\t{\n\t\tfloat A_d = D;\n\t\tfloat C_d = Delta.z;\n\t\tfloat D_d = -D * Delta.y + 2.0 * C * Delta.z;\n\t\tfloat Theta = atan(D * sqrt(Discriminant), -D_d) / 3.0;\n\t\tfloat x_1d = 2.0 * sqrt(-C_d) * cos(Theta);\n\t\tfloat x_3d = 2.0 * sqrt(-C_d) * cos(Theta + (2.0 / 3.0) * pi);\n\t\tfloat xs;\n\t\tif (x_1d + x_3d < 2.0 * C)\n\t\t\txs = x_1d;\n\t\telse\n\t\t\txs = x_3d;\n\t\txsc = vec2(-D, xs + C);\n\t}\n\tfloat E =  xlc.y * xsc.y;\n\tfloat F = -xlc.x * xsc.y - xlc.y * xsc.x;\n\tfloat G =  xlc.x * xsc.x;\n\tvec2 xmc = vec2(C * F - B * G, -B * F + C * E);\n\tvec3 Root = vec3(xsc.x / xsc.y, xmc.x / xmc.y, xlc.x / xlc.y);\n\tif (Root.x < Root.y && Root.x < Root.z)\n\t\tRoot.xyz = Root.yxz;\n\telse if (Root.z < Root.x && Root.z < Root.y)\n\t\tRoot.xyz = Root.xzy;\n\treturn Root;\n}\nfloat LTC_EvaluateDisk(vec3 N, vec3 V, vec3 P, mat3 Minv, Coords points)\n{\n\tvec3 T1, T2;\n\tT1 = normalize(V - N * dot(V, N));\n\tT2 = cross(N, T1);\n\tmat3 R = transposeMat3( mat3( T1, T2, N ) );\n\tvec3 L_[ 3 ];\n\tL_[ 0 ] = R * ( points.coord0 - P );\n\tL_[ 1 ] = R * ( points.coord1 - P );\n\tL_[ 2 ] = R * ( points.coord2 - P );\n\tvec3 Lo_i = vec3(0);\n\tvec3 C  = 0.5 * (L_[0] + L_[2]);\n\tvec3 V1 = 0.5 * (L_[1] - L_[2]);\n\tvec3 V2 = 0.5 * (L_[1] - L_[0]);\n\tC  = Minv * C;\n\tV1 = Minv * V1;\n\tV2 = Minv * V2;\n\tfloat a, b;\n\tfloat d11 = dot(V1, V1);\n\tfloat d22 = dot(V2, V2);\n\tfloat d12 = dot(V1, V2);\n\tif (abs(d12) / sqrt(d11 * d22) > 0.0001)\n\t{\n\t\tfloat tr = d11 + d22;\n\t\tfloat det = -d12 * d12 + d11 * d22;\n\t\tdet = sqrt(det);\n\t\tfloat u = 0.5 * sqrt(tr - 2.0 * det);\n\t\tfloat v = 0.5 * sqrt(tr + 2.0 * det);\n\t\tfloat e_max = (u + v) * (u + v);\n\t\tfloat e_min = (u - v) * (u - v);\n\t\tvec3 V1_, V2_;\n\t\tif (d11 > d22)\n\t\t{\n\t\t\tV1_ = d12 * V1 + (e_max - d11) * V2;\n\t\t\tV2_ = d12 * V1 + (e_min - d11) * V2;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tV1_ = d12*V2 + (e_max - d22)*V1;\n\t\t\tV2_ = d12*V2 + (e_min - d22)*V1;\n\t\t}\n\t\ta = 1.0 / e_max;\n\t\tb = 1.0 / e_min;\n\t\tV1 = normalize(V1_);\n\t\tV2 = normalize(V2_);\n\t}\n\telse\n\t{\n\t\ta = 1.0 / dot(V1, V1);\n\t\tb = 1.0 / dot(V2, V2);\n\t\tV1 *= sqrt(a);\n\t\tV2 *= sqrt(b);\n\t}\n\tvec3 V3 = cross(V1, V2);\n\tif (dot(C, V3) < 0.0)\n\t\tV3 *= -1.0;\n\tfloat L  = dot(V3, C);\n\tfloat x0 = dot(V1, C) / L;\n\tfloat y0 = dot(V2, C) / L;\n\tfloat E1 = inversesqrt(a);\n\tfloat E2 = inversesqrt(b);\n\ta *= L * L;\n\tb *= L * L;\n\tfloat c0 = a * b;\n\tfloat c1 = a * b * (1.0 + x0 * x0 + y0 * y0) - a - b;\n\tfloat c2 = 1.0 - a * (1.0 + x0 * x0) - b * (1.0 + y0 * y0);\n\tfloat c3 = 1.0;\n\tvec3 roots = SolveCubic(vec4(c0, c1, c2, c3));\n\tfloat e1 = roots.x;\n\tfloat e2 = roots.y;\n\tfloat e3 = roots.z;\n\tvec3 avgDir = vec3(a * x0 / (a - e2), b * y0 / (b - e2), 1.0);\n\tmat3 rotate = mat3(V1, V2, V3);\n\tavgDir = rotate * avgDir;\n\tavgDir = normalize(avgDir);\n\tfloat L1 = sqrt(-e2 / e3);\n\tfloat L2 = sqrt(-e2 / e1);\n\tfloat formFactor = L1 * L2 * inversesqrt((1.0 + L1 * L1) * (1.0 + L2 * L2));\n\t\n\tconst float LUT_SIZE = 64.0;\n\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\n\tconst float LUT_BIAS = 0.5 / LUT_SIZE;\n\tvec2 uv = vec2(avgDir.z * 0.5 + 0.5, formFactor);\n\tuv = uv*LUT_SCALE + LUT_BIAS;\n\tfloat scale = texture2DLodEXT(areaLightsLutTex2, uv, 0.0).w;\n\treturn formFactor*scale;\n}\nfloat getRectLightDiffuse(vec3 worldNormal, vec3 viewDir, vec3 lightDir, vec3 lightDirNorm) {\n\treturn LTC_EvaluateRect( worldNormal, viewDir, vPositionW, mat3( 1.0 ), dLTCCoords );\n}\nfloat getDiskLightDiffuse(vec3 worldNormal, vec3 viewDir, vec3 lightDir, vec3 lightDirNorm) {\n\treturn LTC_EvaluateDisk( worldNormal, viewDir, vPositionW, mat3( 1.0 ), dLTCCoords );\n}\nfloat getSphereLightDiffuse(vec3 worldNormal, vec3 viewDir, vec3 lightDir, vec3 lightDirNorm) {\n\tfloat falloff = dSphereRadius / (dot(lightDir, lightDir) + dSphereRadius);\n\treturn getLightDiffuse(worldNormal, viewDir, lightDir, lightDirNorm) * falloff;\n}\nmat3 getLTCLightInvMat(vec2 uv)\n{\n\tvec4 t1 = texture2DLodEXT(areaLightsLutTex1, uv, 0.0);\n\t#ifdef AREA_R8_G8_B8_A8_LUTS\n\tt1 *= vec4(1.001, 0.3239, 0.60437568, 1.0);\n\tt1 += vec4(0.0, -0.2976, -0.01381, 0.0);\n\t#endif\n\treturn mat3(\n\t\tvec3( t1.x, 0, t1.y ),\n\t\tvec3(\t0, 1,\t0 ),\n\t\tvec3( t1.z, 0, t1.w )\n\t);\n}\nfloat calcRectLightSpecular(vec3 worldNormal, vec3 viewDir, vec2 uv) {\n\tmat3 mInv = getLTCLightInvMat(uv);\n\treturn LTC_EvaluateRect( worldNormal, viewDir, vPositionW, mInv, dLTCCoords );\n}\nfloat getRectLightSpecular(vec3 worldNormal, vec3 viewDir) {\n\treturn calcRectLightSpecular(worldNormal, viewDir, dLTCUV);\n}\nfloat calcDiskLightSpecular(vec3 worldNormal, vec3 viewDir, vec2 uv) {\n\tmat3 mInv = getLTCLightInvMat(uv);\n\treturn LTC_EvaluateDisk( worldNormal, viewDir, vPositionW, mInv, dLTCCoords );\n}\nfloat getDiskLightSpecular(vec3 worldNormal, vec3 viewDir) {\n\treturn calcDiskLightSpecular(worldNormal, viewDir, dLTCUV);\n}\nfloat getSphereLightSpecular(vec3 worldNormal, vec3 viewDir) {\n\treturn calcDiskLightSpecular(worldNormal, viewDir, dLTCUV);\n}\n",metalnessPS:"\n#ifdef MAPFLOAT\nuniform float material_metalness;\n#endif\nvoid getMetalness() {\n\tfloat metalness = 1.0;\n\t#ifdef MAPFLOAT\n\tmetalness *= material_metalness;\n\t#endif\n\t#ifdef MAPTEXTURE\n\tmetalness *= texture2DBias($SAMPLER, $UV, textureBias).$CH;\n\t#endif\n\t#ifdef MAPVERTEX\n\tmetalness *= saturate(vVertexColor.$VC);\n\t#endif\n\tdMetalness = metalness;\n}\n",metalnessModulatePS:"\nvec3 getSpecularModulate(in vec3 specularity, in vec3 albedo, in float metalness, in float f0) {\n\tvec3 dielectricF0 = f0 * specularity;\n\treturn mix(dielectricF0, albedo, metalness);\n}\nvec3 getAlbedoModulate(in vec3 albedo, in float metalness) {\n\treturn albedo * (1.0 - metalness);\n}\n",msdfPS:"\nuniform sampler2D texture_msdfMap;\n#ifdef GL_OES_standard_derivatives\n#define USE_FWIDTH\n#endif\n#ifdef GL2\n#define USE_FWIDTH\n#endif\nfloat median(float r, float g, float b) {\n\treturn max(min(r, g), min(max(r, g), b));\n}\nfloat map (float min, float max, float v) {\n\treturn (v - min) / (max - min);\n}\nuniform float font_sdfIntensity;\nuniform float font_pxrange;\nuniform float font_textureWidth;\n#ifdef UNIFORM_TEXT_PARAMETERS\nuniform vec4 outline_color;\nuniform float outline_thickness;\nuniform vec4 shadow_color;\nuniform vec2 shadow_offset;\n#else\nvarying vec4 outline_color;\nvarying float outline_thickness;\nvarying vec4 shadow_color;\nvarying vec2 shadow_offset;\n#endif\nvec4 applyMsdf(vec4 color) {\n\tvec3 tsample = texture2D(texture_msdfMap, vUv0).rgb;\n\tvec2 uvShdw = vUv0 - shadow_offset;\n\tvec3 ssample = texture2D(texture_msdfMap, uvShdw).rgb;\n\tfloat sigDist = median(tsample.r, tsample.g, tsample.b);\n\tfloat sigDistShdw = median(ssample.r, ssample.g, ssample.b);\n\tfloat smoothingMax = 0.2;\n\t#ifdef USE_FWIDTH\n\tvec2 w = fwidth(vUv0);\n\tfloat smoothing = clamp(w.x * font_textureWidth / font_pxrange, 0.0, smoothingMax);\n\t#else\n\tfloat font_size = 16.0;\n\tfloat smoothing = clamp(font_pxrange / font_size, 0.0, smoothingMax);\n\t#endif\n\tfloat mapMin = 0.05;\n\tfloat mapMax = clamp(1.0 - font_sdfIntensity, mapMin, 1.0);\n\tfloat sigDistInner = map(mapMin, mapMax, sigDist);\n\tfloat sigDistOutline = map(mapMin, mapMax, sigDist + outline_thickness);\n\tsigDistShdw = map(mapMin, mapMax, sigDistShdw + outline_thickness);\n\tfloat center = 0.5;\n\tfloat inside = smoothstep(center-smoothing, center+smoothing, sigDistInner);\n\tfloat outline = smoothstep(center-smoothing, center+smoothing, sigDistOutline);\n\tfloat shadow = smoothstep(center-smoothing, center+smoothing, sigDistShdw);\n\tvec4 tcolor = (outline > inside) ? outline * vec4(outline_color.a * outline_color.rgb, outline_color.a) : vec4(0.0);\n\ttcolor = mix(tcolor, color, inside);\n\tvec4 scolor = (shadow > outline) ? shadow * vec4(shadow_color.a * shadow_color.rgb, shadow_color.a) : tcolor;\n\ttcolor = mix(scolor, tcolor, outline);\n\t\n\treturn tcolor;\n}\n",msdfVS:"\nattribute vec3 vertex_outlineParameters;\nattribute vec3 vertex_shadowParameters;\nvarying vec4 outline_color;\nvarying float outline_thickness;\nvarying vec4 shadow_color;\nvarying vec2 shadow_offset;\nvoid unpackMsdfParams() {\n\tvec3 little = mod(vertex_outlineParameters, 256.);\n\tvec3 big = (vertex_outlineParameters - little) / 256.;\n\toutline_color.rb = little.xy / 255.;\n\toutline_color.ga = big.xy / 255.;\n\toutline_thickness = little.z / 255. * 0.2;\n\tlittle = mod(vertex_shadowParameters, 256.);\n\tbig = (vertex_shadowParameters - little) / 256.;\n\tshadow_color.rb = little.xy / 255.;\n\tshadow_color.ga = big.xy / 255.;\n\tshadow_offset = (vec2(little.z, big.z) / 127. - 1.) * 0.005;\n}\n",normalVS:"\n#ifdef MORPHING_TEXTURE_BASED_NORMAL\nuniform highp sampler2D morphNormalTex;\n#endif\nvec3 getNormal() {\n\t#ifdef SKIN\n\tdNormalMatrix = mat3(dModelMatrix[0].xyz, dModelMatrix[1].xyz, dModelMatrix[2].xyz);\n\t#elif defined(INSTANCING)\n\tdNormalMatrix = mat3(instance_line1.xyz, instance_line2.xyz, instance_line3.xyz);\n\t#else\n\tdNormalMatrix = matrix_normal;\n\t#endif\n\tvec3 tempNormal = vertex_normal;\n\t#ifdef MORPHING\n\t#ifdef MORPHING_NRM03\n\ttempNormal += morph_weights_a[0] * morph_nrm0;\n\ttempNormal += morph_weights_a[1] * morph_nrm1;\n\ttempNormal += morph_weights_a[2] * morph_nrm2;\n\ttempNormal += morph_weights_a[3] * morph_nrm3;\n\t#endif\n\t#ifdef MORPHING_NRM47\n\ttempNormal += morph_weights_b[0] * morph_nrm4;\n\ttempNormal += morph_weights_b[1] * morph_nrm5;\n\ttempNormal += morph_weights_b[2] * morph_nrm6;\n\ttempNormal += morph_weights_b[3] * morph_nrm7;\n\t#endif\n\t#endif\n\t#ifdef MORPHING_TEXTURE_BASED_NORMAL\n\t\t#ifdef WEBGPU\n\t\t\tivec2 morphUV = getTextureMorphCoords();\n\t\t\tvec3 morphNormal = texelFetch(morphNormalTex, ivec2(morphUV), 0).xyz;\n\t\t#else\n\t\t\tvec2 morphUV = getTextureMorphCoords();\n\t\t\tvec3 morphNormal = texture2D(morphNormalTex, morphUV).xyz;\n\t\t#endif\n\ttempNormal += morphNormal;\n\t#endif\n\treturn normalize(dNormalMatrix * tempNormal);\n}\n",normalDetailMapPS:"\n#ifdef MAPTEXTURE\nuniform float material_normalDetailMapBumpiness;\nvec3 blendNormals(vec3 n1, vec3 n2) {\n\tn1 += vec3(0, 0, 1);\n\tn2 *= vec3(-1, -1, 1);\n\treturn n1 * dot(n1, n2) / n1.z - n2;\n}\n#endif\nvec3 addNormalDetail(vec3 normalMap) {\n#ifdef MAPTEXTURE\n\tvec3 normalDetailMap = unpackNormal(texture2DBias($SAMPLER, $UV, textureBias));\n\tnormalDetailMap = mix(vec3(0.0, 0.0, 1.0), normalDetailMap, material_normalDetailMapBumpiness);\n\treturn blendNormals(normalMap, normalDetailMap);\n#else\n\treturn normalMap;\n#endif\n}\n",normalInstancedVS:"\nvec3 getNormal() {\n\tdNormalMatrix = mat3(instance_line1.xyz, instance_line2.xyz, instance_line3.xyz);\n\treturn normalize(dNormalMatrix * vertex_normal);\n}\n",normalMapPS:"\n#ifdef MAPTEXTURE\nuniform float material_bumpiness;\n#endif\nvoid getNormal() {\n#ifdef MAPTEXTURE\n\tvec3 normalMap = unpackNormal(texture2DBias($SAMPLER, $UV, textureBias));\n\tnormalMap = mix(vec3(0.0, 0.0, 1.0), normalMap, material_bumpiness);\n\tdNormalW = normalize(dTBN * addNormalDetail(normalMap));\n#else\n\tdNormalW = dVertexNormalW;\n#endif\n}\n",normalSkinnedVS:"\nvec3 getNormal() {\n\tdNormalMatrix = mat3(dModelMatrix[0].xyz, dModelMatrix[1].xyz, dModelMatrix[2].xyz);\n\treturn normalize(dNormalMatrix * vertex_normal);\n}\n",normalXYPS:"\nvec3 unpackNormal(vec4 nmap) {\n\tvec3 normal;\n\tnormal.xy = nmap.wy * 2.0 - 1.0;\n\tnormal.z = sqrt(1.0 - saturate(dot(normal.xy, normal.xy)));\n\treturn normal;\n}\n",normalXYZPS:"\nvec3 unpackNormal(vec4 nmap) {\n\treturn nmap.xyz * 2.0 - 1.0;\n}\n",opacityPS:"\n#ifdef MAPFLOAT\nuniform float material_opacity;\n#endif\nvoid getOpacity() {\n\tdAlpha = 1.0;\n\t#ifdef MAPFLOAT\n\tdAlpha *= material_opacity;\n\t#endif\n\t#ifdef MAPTEXTURE\n\tdAlpha *= texture2DBias($SAMPLER, $UV, textureBias).$CH;\n\t#endif\n\t#ifdef MAPVERTEX\n\tdAlpha *= clamp(vVertexColor.$VC, 0.0, 1.0);\n\t#endif\n}\n",outputPS:"\n",outputAlphaPS:"\ngl_FragColor.a = litArgs_opacity;\n",outputAlphaOpaquePS:"\n\tgl_FragColor.a = 1.0;\n",outputAlphaPremulPS:"\ngl_FragColor.rgb *= litArgs_opacity;\ngl_FragColor.a = litArgs_opacity;\n",outputTex2DPS:"\nvarying vec2 vUv0;\nuniform sampler2D source;\nvoid main(void) {\n\tgl_FragColor = texture2D(source, vUv0);\n}\n",packDepthPS:"\nvec4 packFloat(float depth) {\n\tconst vec4 bit_shift = vec4(256.0 * 256.0 * 256.0, 256.0 * 256.0, 256.0, 1.0);\n\tconst vec4 bit_mask  = vec4(0.0, 1.0 / 256.0, 1.0 / 256.0, 1.0 / 256.0);\n\tvec4 res = mod(depth * bit_shift * vec4(255), vec4(256) ) / vec4(255);\n\tres -= res.xxyz * bit_mask;\n\treturn res;\n}\n",sheenPS:"\n#ifdef MAPCOLOR\nuniform vec3 material_sheen;\n#endif\nvoid getSheen() {\n\tvec3 sheenColor = vec3(1, 1, 1);\n\t#ifdef MAPCOLOR\n\tsheenColor *= material_sheen;\n\t#endif\n\t#ifdef MAPTEXTURE\n\tsheenColor *= $DECODE(texture2DBias($SAMPLER, $UV, textureBias)).$CH;\n\t#endif\n\t#ifdef MAPVERTEX\n\tsheenColor *= saturate(vVertexColor.$VC);\n\t#endif\n\tsSpecularity = sheenColor;\n}\n",sheenGlossPS:"\n#ifdef MAPFLOAT\nuniform float material_sheenGloss;\n#endif\nvoid getSheenGlossiness() {\n\tfloat sheenGlossiness = 1.0;\n\t#ifdef MAPFLOAT\n\tsheenGlossiness *= material_sheenGloss;\n\t#endif\n\t#ifdef MAPTEXTURE\n\tsheenGlossiness *= texture2DBias($SAMPLER, $UV, textureBias).$CH;\n\t#endif\n\t#ifdef MAPVERTEX\n\tsheenGlossiness *= saturate(vVertexColor.$VC);\n\t#endif\n\t#ifdef MAPINVERT\n\tsheenGlossiness = 1.0 - sheenGlossiness;\n\t#endif\n\tsheenGlossiness += 0.0000001;\n\tsGlossiness = sheenGlossiness;\n}\n",parallaxPS:"\nuniform float material_heightMapFactor;\nvoid getParallax() {\n\tfloat parallaxScale = material_heightMapFactor;\n\tfloat height = texture2DBias($SAMPLER, $UV, textureBias).$CH;\n\theight = height * parallaxScale - parallaxScale*0.5;\n\tvec3 viewDirT = dViewDirW * dTBN;\n\tviewDirT.z += 0.42;\n\tdUvOffset = height * (viewDirT.xy / viewDirT.z);\n}\n",particlePS:"\nvarying vec4 texCoordsAlphaLife;\nuniform sampler2D colorMap;\nuniform sampler2D colorParam;\nuniform float graphSampleSize;\nuniform float graphNumSamples;\n#ifndef CAMERAPLANES\n#define CAMERAPLANES\nuniform vec4 camera_params;\n#endif\nuniform float softening;\nuniform float colorMult;\nfloat saturate(float x) {\n\treturn clamp(x, 0.0, 1.0);\n}\n#ifndef UNPACKFLOAT\n#define UNPACKFLOAT\nfloat unpackFloat(vec4 rgbaDepth) {\n\tconst vec4 bitShift = vec4(1.0 / (256.0 * 256.0 * 256.0), 1.0 / (256.0 * 256.0), 1.0 / 256.0, 1.0);\n\tfloat depth = dot(rgbaDepth, bitShift);\n\treturn depth;\n}\n#endif\nvoid main(void) {\n\tvec4 tex  = gammaCorrectInput(texture2D(colorMap, vec2(texCoordsAlphaLife.x, 1.0 - texCoordsAlphaLife.y)));\n\tvec4 ramp = gammaCorrectInput(texture2D(colorParam, vec2(texCoordsAlphaLife.w, 0.0)));\n\tramp.rgb *= colorMult;\n\tramp.a += texCoordsAlphaLife.z;\n\tvec3 rgb = tex.rgb * ramp.rgb;\n\tfloat a  = tex.a * ramp.a;\n",particleVS:"\nvec3 unpack3NFloats(float src) {\n\tfloat r = fract(src);\n\tfloat g = fract(src * 256.0);\n\tfloat b = fract(src * 65536.0);\n\treturn vec3(r, g, b);\n}\nfloat saturate(float x) {\n\treturn clamp(x, 0.0, 1.0);\n}\nvec4 tex1Dlod_lerp(highp sampler2D tex, vec2 tc) {\n\treturn mix( texture2D(tex,tc), texture2D(tex,tc + graphSampleSize), fract(tc.x*graphNumSamples) );\n}\nvec4 tex1Dlod_lerp(highp sampler2D tex, vec2 tc, out vec3 w) {\n\tvec4 a = texture2D(tex,tc);\n\tvec4 b = texture2D(tex,tc + graphSampleSize);\n\tfloat c = fract(tc.x*graphNumSamples);\n\tvec3 unpackedA = unpack3NFloats(a.w);\n\tvec3 unpackedB = unpack3NFloats(b.w);\n\tw = mix(unpackedA, unpackedB, c);\n\treturn mix(a, b, c);\n}\nvec2 rotate(vec2 quadXY, float pRotation, out mat2 rotMatrix) {\n\tfloat c = cos(pRotation);\n\tfloat s = sin(pRotation);\n\tmat2 m = mat2(c, -s, s, c);\n\trotMatrix = m;\n\treturn m * quadXY;\n}\nvec3 billboard(vec3 InstanceCoords, vec2 quadXY) {\n\t#ifdef SCREEN_SPACE\n\t\tvec3 pos = vec3(-1, 0, 0) * quadXY.x + vec3(0, -1, 0) * quadXY.y;\n\t#else\n\t\tvec3 pos = -matrix_viewInverse[0].xyz * quadXY.x + -matrix_viewInverse[1].xyz * quadXY.y;\n\t#endif\n\treturn pos;\n}\nvec3 customFace(vec3 InstanceCoords, vec2 quadXY) {\n\tvec3 pos = faceTangent * quadXY.x + faceBinorm * quadXY.y;\n\treturn pos;\n}\nvec2 safeNormalize(vec2 v) {\n\tfloat l = length(v);\n\treturn (l > 1e-06) ? v / l : v;\n}\nvoid main(void) {\n\tvec3 meshLocalPos = particle_vertexData.xyz;\n\tfloat id = floor(particle_vertexData.w);\n\tfloat rndFactor = fract(sin(id + 1.0 + seed));\n\tvec3 rndFactor3 = vec3(rndFactor, fract(rndFactor*10.0), fract(rndFactor*100.0));\n\tfloat uv = id / numParticlesPot;\n\treadInput(uv);\n#ifdef LOCAL_SPACE\n\tinVel = mat3(matrix_model) * inVel;\n#endif\n\tvec2 velocityV = safeNormalize((mat3(matrix_view) * inVel).xy);\n\tfloat particleLifetime = lifetime;\n\tif (inLife <= 0.0 || inLife > particleLifetime || !inShow) meshLocalPos = vec3(0.0);\n\tvec2 quadXY = meshLocalPos.xy;\n\tfloat nlife = clamp(inLife / particleLifetime, 0.0, 1.0);\n\tvec3 paramDiv;\n\tvec4 params = tex1Dlod_lerp(internalTex2, vec2(nlife, 0), paramDiv);\n\tfloat scale = params.y;\n\tfloat scaleDiv = paramDiv.x;\n\tfloat alphaDiv = paramDiv.z;\n\tscale += (scaleDiv * 2.0 - 1.0) * scaleDivMult * fract(rndFactor*10000.0);\n#ifndef USE_MESH\n\ttexCoordsAlphaLife = vec4(quadXY * -0.5 + 0.5, (alphaDiv * 2.0 - 1.0) * alphaDivMult * fract(rndFactor*1000.0), nlife);\n#else\n\ttexCoordsAlphaLife = vec4(particle_uv, (alphaDiv * 2.0 - 1.0) * alphaDivMult * fract(rndFactor*1000.0), nlife);\n#endif\n\tvec3 particlePos = inPos;\n\tvec3 particlePosMoved = vec3(0.0);\n\tmat2 rotMatrix;\n",particleAnimFrameClampVS:"\n\tfloat animFrame = min(floor(texCoordsAlphaLife.w * animTexParams.y) + animTexParams.x, animTexParams.z);\n",particleAnimFrameLoopVS:"\n\tfloat animFrame = floor(mod(texCoordsAlphaLife.w * animTexParams.y + animTexParams.x, animTexParams.z + 1.0));\n",particleAnimTexVS:"\n\tfloat animationIndex;\n\tif (animTexIndexParams.y == 1.0) {\n\t\tanimationIndex = floor((animTexParams.w + 1.0) * rndFactor3.z) * (animTexParams.z + 1.0);\n\t} else {\n\t\tanimationIndex = animTexIndexParams.x * (animTexParams.z + 1.0);\n\t}\n\tfloat atlasX = (animationIndex + animFrame) * animTexTilesParams.x;\n\tfloat atlasY = 1.0 - floor(atlasX + 1.0) * animTexTilesParams.y;\n\tatlasX = fract(atlasX);\n\ttexCoordsAlphaLife.xy *= animTexTilesParams.xy;\n\ttexCoordsAlphaLife.xy += vec2(atlasX, atlasY);\n",particleInputFloatPS:"\nvoid readInput(float uv) {\n\tvec4 tex = texture2D(particleTexIN, vec2(uv, 0.25));\n\tvec4 tex2 = texture2D(particleTexIN, vec2(uv, 0.75));\n\tinPos = tex.xyz;\n\tinVel = tex2.xyz;\n\tinAngle = (tex.w < 0.0? -tex.w : tex.w) - 1000.0;\n\tinShow = tex.w >= 0.0;\n\tinLife = tex2.w;\n}\n",particleInputRgba8PS:"\n#define PI2 6.283185307179586\nuniform vec3 inBoundsSize;\nuniform vec3 inBoundsCenter;\nuniform float maxVel;\nfloat decodeFloatRG(vec2 rg) {\n\treturn rg.y*(1.0/255.0) + rg.x;\n}\nfloat decodeFloatRGBA( vec4 rgba ) {\n  return dot( rgba, vec4(1.0, 1.0/255.0, 1.0/65025.0, 1.0/160581375.0) );\n}\nvoid readInput(float uv) {\n\tvec4 tex0 = texture2D(particleTexIN, vec2(uv, 0.125));\n\tvec4 tex1 = texture2D(particleTexIN, vec2(uv, 0.375));\n\tvec4 tex2 = texture2D(particleTexIN, vec2(uv, 0.625));\n\tvec4 tex3 = texture2D(particleTexIN, vec2(uv, 0.875));\n\tinPos = vec3(decodeFloatRG(tex0.rg), decodeFloatRG(tex0.ba), decodeFloatRG(tex1.rg));\n\tinPos = (inPos - vec3(0.5)) * inBoundsSize + inBoundsCenter;\n\tinVel = tex2.xyz;\n\tinVel = (inVel - vec3(0.5)) * maxVel;\n\tinAngle = decodeFloatRG(tex1.ba) * PI2;\n\tinShow = tex2.a > 0.5;\n\tinLife = decodeFloatRGBA(tex3);\n\tfloat maxNegLife = max(lifetime, (numParticles - 1.0) * (rate+rateDiv));\n\tfloat maxPosLife = lifetime+1.0;\n\tinLife = inLife * (maxNegLife + maxPosLife) - maxNegLife;\n}\n",particleOutputFloatPS:"\nvoid writeOutput() {\n\tif (gl_FragCoord.y<1.0) {\n\t\tgl_FragColor = vec4(outPos, (outAngle + 1000.0) * visMode);\n\t} else {\n\t\tgl_FragColor = vec4(outVel, outLife);\n\t}\n}\n",particleOutputRgba8PS:"\nuniform vec3 outBoundsMul;\nuniform vec3 outBoundsAdd;\nvec2 encodeFloatRG( float v ) {\n\tvec2 enc = vec2(1.0, 255.0) * v;\n\tenc = fract(enc);\n\tenc -= enc.yy * vec2(1.0/255.0, 1.0/255.0);\n\treturn enc;\n}\nvec4 encodeFloatRGBA( float v ) {\n\tvec4 enc = vec4(1.0, 255.0, 65025.0, 160581375.0) * v;\n\tenc = fract(enc);\n\tenc -= enc.yzww * vec4(1.0/255.0,1.0/255.0,1.0/255.0,0.0);\n\treturn enc;\n}\nvoid writeOutput() {\n\toutPos = outPos * outBoundsMul + outBoundsAdd;\n\toutAngle = fract(outAngle / PI2);\n\toutVel = (outVel / maxVel) + vec3(0.5);\n\tfloat maxNegLife = max(lifetime, (numParticles - 1.0) * (rate+rateDiv));\n\tfloat maxPosLife = lifetime+1.0;\n\toutLife = (outLife + maxNegLife) / (maxNegLife + maxPosLife);\n\tif (gl_FragCoord.y < 1.0) {\n\t\tgl_FragColor = vec4(encodeFloatRG(outPos.x), encodeFloatRG(outPos.y));\n\t} else if (gl_FragCoord.y < 2.0) {\n\t\tgl_FragColor = vec4(encodeFloatRG(outPos.z), encodeFloatRG(outAngle));\n\t} else if (gl_FragCoord.y < 3.0) {\n\t\tgl_FragColor = vec4(outVel, visMode*0.5+0.5);\n\t} else {\n\t\tgl_FragColor = encodeFloatRGBA(outLife);\n\t}\n}\n",particleUpdaterAABBPS:"\nuniform mat3 spawnBounds;\nuniform vec3 spawnPosInnerRatio;\nvec3 calcSpawnPosition(vec3 inBounds, float rndFactor) {\n\tvec3 pos = inBounds - vec3(0.5);\n\tvec3 posAbs = abs(pos);\n\tvec3 maxPos = vec3(max(posAbs.x, max(posAbs.y, posAbs.z)));\n\tvec3 edge = maxPos + (vec3(0.5) - maxPos) * spawnPosInnerRatio;\n\tpos.x = edge.x * (maxPos.x == posAbs.x ? sign(pos.x) : 2.0 * pos.x);\n\tpos.y = edge.y * (maxPos.y == posAbs.y ? sign(pos.y) : 2.0 * pos.y);\n\tpos.z = edge.z * (maxPos.z == posAbs.z ? sign(pos.z) : 2.0 * pos.z);\n#ifndef LOCAL_SPACE\n\treturn emitterPos + spawnBounds * pos;\n#else\n\treturn spawnBounds * pos;\n#endif\n}\nvoid addInitialVelocity(inout vec3 localVelocity, vec3 inBounds) {\n\tlocalVelocity -= vec3(0, 0, initialVelocity);\n}\n",particleUpdaterEndPS:"\n\twriteOutput();\n}\n",particleUpdaterInitPS:"\nvarying vec2 vUv0;\nuniform highp sampler2D particleTexIN;\nuniform highp sampler2D internalTex0;\nuniform highp sampler2D internalTex1;\nuniform highp sampler2D internalTex2;\nuniform highp sampler2D internalTex3;\nuniform mat3 emitterMatrix, emitterMatrixInv;\nuniform vec3 emitterScale;\nuniform vec3 emitterPos, frameRandom, localVelocityDivMult, velocityDivMult;\nuniform float delta, rate, rateDiv, lifetime, numParticles, rotSpeedDivMult, radialSpeedDivMult, seed;\nuniform float startAngle, startAngle2;\nuniform float initialVelocity;\nuniform float graphSampleSize;\nuniform float graphNumSamples;\nvec3 inPos;\nvec3 inVel;\nfloat inAngle;\nbool inShow;\nfloat inLife;\nfloat visMode;\nvec3 outPos;\nvec3 outVel;\nfloat outAngle;\nbool outShow;\nfloat outLife;\n",particleUpdaterNoRespawnPS:"\n\tif (outLife >= lifetime) {\n\t\toutLife -= max(lifetime, (numParticles - 1.0) * particleRate);\n\t\tvisMode = -1.0;\n\t}\n",particleUpdaterOnStopPS:"\n\tvisMode = outLife < 0.0? -1.0: visMode;\n",particleUpdaterRespawnPS:"\n\tif (outLife >= lifetime) {\n\t\toutLife -= max(lifetime, (numParticles - 1.0) * particleRate);\n\t\tvisMode = 1.0;\n\t}\n\tvisMode = outLife < 0.0? 1.0: visMode;\n",particleUpdaterSpherePS:"\nuniform float spawnBoundsSphere;\nuniform float spawnBoundsSphereInnerRatio;\nvec3 calcSpawnPosition(vec3 inBounds, float rndFactor) {\n\tfloat rnd4 = fract(rndFactor * 1000.0);\n\tvec3 norm = normalize(inBounds.xyz - vec3(0.5));\n\tfloat r = rnd4 * (1.0 - spawnBoundsSphereInnerRatio) + spawnBoundsSphereInnerRatio;\n#ifndef LOCAL_SPACE\n\treturn emitterPos + norm * r * spawnBoundsSphere;\n#else\n\treturn norm * r * spawnBoundsSphere;\n#endif\n}\nvoid addInitialVelocity(inout vec3 localVelocity, vec3 inBounds) {\n\tlocalVelocity += normalize(inBounds - vec3(0.5)) * initialVelocity;\n}\n",particleUpdaterStartPS:"\nfloat saturate(float x) {\n\treturn clamp(x, 0.0, 1.0);\n}\nvec3 unpack3NFloats(float src) {\n\tfloat r = fract(src);\n\tfloat g = fract(src * 256.0);\n\tfloat b = fract(src * 65536.0);\n\treturn vec3(r, g, b);\n}\nvec3 tex1Dlod_lerp(highp sampler2D tex, vec2 tc, out vec3 w) {\n\tvec4 a = texture2D(tex, tc);\n\tvec4 b = texture2D(tex, tc + graphSampleSize);\n\tfloat c = fract(tc.x * graphNumSamples);\n\tvec3 unpackedA = unpack3NFloats(a.w);\n\tvec3 unpackedB = unpack3NFloats(b.w);\n\tw = mix(unpackedA, unpackedB, c);\n\treturn mix(a.xyz, b.xyz, c);\n}\n#define HASHSCALE4 vec4(1031, .1030, .0973, .1099)\nvec4 hash41(float p) {\n\tvec4 p4 = fract(vec4(p) * HASHSCALE4);\n\tp4 += dot(p4, p4.wzxy+19.19);\n\treturn fract(vec4((p4.x + p4.y)*p4.z, (p4.x + p4.z)*p4.y, (p4.y + p4.z)*p4.w, (p4.z + p4.w)*p4.x));\n}\nvoid main(void) {\n\tif (gl_FragCoord.x > numParticles) discard;\n\treadInput(vUv0.x);\n\tvisMode = inShow? 1.0 : -1.0;\n\tvec4 rndFactor = hash41(gl_FragCoord.x + seed);\n\tfloat particleRate = rate + rateDiv * rndFactor.x;\n\toutLife = inLife + delta;\n\tfloat nlife = clamp(outLife / lifetime, 0.0, 1.0);\n\tvec3 localVelocityDiv;\n\tvec3 velocityDiv;\n\tvec3 paramDiv;\n\tvec3 localVelocity = tex1Dlod_lerp(internalTex0, vec2(nlife, 0), localVelocityDiv);\n\tvec3 velocity =\t  tex1Dlod_lerp(internalTex1, vec2(nlife, 0), velocityDiv);\n\tvec3 params =\t\ttex1Dlod_lerp(internalTex2, vec2(nlife, 0), paramDiv);\n\tfloat rotSpeed = params.x;\n\tfloat rotSpeedDiv = paramDiv.y;\n\tvec3 radialParams = tex1Dlod_lerp(internalTex3, vec2(nlife, 0), paramDiv);\n\tfloat radialSpeed = radialParams.x;\n\tfloat radialSpeedDiv = radialParams.y;\n\tbool respawn = inLife <= 0.0 || outLife >= lifetime;\n\tinPos = respawn ? calcSpawnPosition(rndFactor.xyz, rndFactor.x) : inPos;\n\tinAngle = respawn ? mix(startAngle, startAngle2, rndFactor.x) : inAngle;\n#ifndef LOCAL_SPACE\n\tvec3 radialVel = inPos - emitterPos;\n#else\n\tvec3 radialVel = inPos;\n#endif\n\tradialVel = (dot(radialVel, radialVel) > 1.0E-8) ? radialSpeed * normalize(radialVel) : vec3(0.0);\n\tradialVel += (radialSpeedDiv * vec3(2.0) - vec3(1.0)) * radialSpeedDivMult * rndFactor.xyz;\n\tlocalVelocity +=\t(localVelocityDiv * vec3(2.0) - vec3(1.0)) * localVelocityDivMult * rndFactor.xyz;\n\tvelocity +=\t\t (velocityDiv * vec3(2.0) - vec3(1.0)) * velocityDivMult * rndFactor.xyz;\n\trotSpeed +=\t\t (rotSpeedDiv * 2.0 - 1.0) * rotSpeedDivMult * rndFactor.y;\n\taddInitialVelocity(localVelocity, rndFactor.xyz);\n#ifndef LOCAL_SPACE\n\toutVel = emitterMatrix * localVelocity + (radialVel + velocity) * emitterScale;\n#else\n\toutVel = (localVelocity + radialVel) / emitterScale + emitterMatrixInv * velocity;\n#endif\n\toutPos = inPos + outVel * delta;\n\toutAngle = inAngle + rotSpeed * delta;\n",particle_billboardVS:"\n\tquadXY = rotate(quadXY, inAngle, rotMatrix);\n\tvec3 localPos = billboard(particlePos, quadXY);\n",particle_blendAddPS:"\n\tdBlendModeFogFactor = 0.0;\n\trgb *= saturate(gammaCorrectInput(max(a, 0.0)));\n\tif ((rgb.r + rgb.g + rgb.b) < 0.000001) discard;\n",particle_blendMultiplyPS:"\n\trgb = mix(vec3(1.0), rgb, vec3(a));\n\tif (rgb.r + rgb.g + rgb.b > 2.99) discard;\n",particle_blendNormalPS:"\n\tif (a < 0.01) discard;\n",particle_cpuVS:"\nattribute vec4 particle_vertexData;\nattribute vec4 particle_vertexData2;\nattribute vec4 particle_vertexData3;\nattribute float particle_vertexData4;\n#ifndef USE_MESH\nattribute vec2 particle_vertexData5;\n#else\nattribute vec4 particle_vertexData5;\n#endif\nuniform mat4 matrix_viewProjection;\nuniform mat4 matrix_model;\n#ifndef VIEWMATRIX\n#define VIEWMATRIX\nuniform mat4 matrix_view;\n#endif\nuniform mat3 matrix_normal;\nuniform mat4 matrix_viewInverse;\nuniform float numParticles;\nuniform float lifetime;\nuniform float stretch;\nuniform float seed;\nuniform vec3 wrapBounds;\nuniform vec3 emitterScale;\nuniform vec3 faceTangent;\nuniform vec3 faceBinorm;\nuniform highp sampler2D internalTex0;\nuniform highp sampler2D internalTex1;\nuniform highp sampler2D internalTex2;\nuniform vec3 emitterPos;\nvarying vec4 texCoordsAlphaLife;\nvec2 rotate(vec2 quadXY, float pRotation, out mat2 rotMatrix)\n{\n\tfloat c = cos(pRotation);\n\tfloat s = sin(pRotation);\n\tmat2 m = mat2(c, -s, s, c);\n\trotMatrix = m;\n\treturn m * quadXY;\n}\nvec3 billboard(vec3 InstanceCoords, vec2 quadXY)\n{\n\tvec3 pos = -matrix_viewInverse[0].xyz * quadXY.x + -matrix_viewInverse[1].xyz * quadXY.y;\n\treturn pos;\n}\nvec3 customFace(vec3 InstanceCoords, vec2 quadXY)\n{\n\tvec3 pos = faceTangent * quadXY.x + faceBinorm * quadXY.y;\n\treturn pos;\n}\nvoid main(void)\n{\n\tvec3 particlePos = particle_vertexData.xyz;\n\tvec3 inPos = particlePos;\n\tvec3 vertPos = particle_vertexData3.xyz;\n\tvec3 inVel = vec3(particle_vertexData2.w, particle_vertexData3.w, particle_vertexData5.x);\n\tfloat id = floor(particle_vertexData4);\n\tfloat rndFactor = fract(sin(id + 1.0 + seed));\n\tvec3 rndFactor3 = vec3(rndFactor, fract(rndFactor*10.0), fract(rndFactor*100.0));\n#ifdef LOCAL_SPACE\n\tinVel = mat3(matrix_model) * inVel;\n#endif\n\tvec2 velocityV = normalize((mat3(matrix_view) * inVel).xy);\n\tvec2 quadXY = vertPos.xy;\n#ifdef USE_MESH\n\ttexCoordsAlphaLife = vec4(particle_vertexData5.zw, particle_vertexData2.z, particle_vertexData.w);\n#else\n\ttexCoordsAlphaLife = vec4(quadXY * -0.5 + 0.5, particle_vertexData2.z, particle_vertexData.w);\n#endif\n\tmat2 rotMatrix;\n\tfloat inAngle = particle_vertexData2.x;\n\tvec3 particlePosMoved = vec3(0.0);\n\tvec3 meshLocalPos = particle_vertexData3.xyz;\n",particle_cpu_endVS:"\n\tlocalPos *= particle_vertexData2.y * emitterScale;\n\tlocalPos += particlePos;\n\tgl_Position = matrix_viewProjection * vec4(localPos, 1.0);\n",particle_customFaceVS:"\n\tquadXY = rotate(quadXY, inAngle, rotMatrix);\n\tvec3 localPos = customFace(particlePos, quadXY);\n",particle_endPS:"\n\trgb = addFog(rgb);\n\trgb = toneMap(rgb);\n\trgb = gammaCorrectOutput(rgb);\n\tgl_FragColor = vec4(rgb, a);\n}\n",particle_endVS:"\n\tlocalPos *= scale * emitterScale;\n\tlocalPos += particlePos;\n\t#ifdef SCREEN_SPACE\n\tgl_Position = vec4(localPos.x, localPos.y, 0.0, 1.0);\n\t#else\n\tgl_Position = matrix_viewProjection * vec4(localPos.xyz, 1.0);\n\t#endif\n",particle_halflambertPS:"\n\tvec3 negNormal = normal*0.5+0.5;\n\tvec3 posNormal = -normal*0.5+0.5;\n\tnegNormal *= negNormal;\n\tposNormal *= posNormal;\n",particle_initVS:"\nattribute vec4 particle_vertexData;\n#ifdef USE_MESH\nattribute vec2 particle_uv;\n#endif\nuniform mat4 matrix_viewProjection;\nuniform mat4 matrix_model;\nuniform mat3 matrix_normal;\nuniform mat4 matrix_viewInverse;\n#ifndef VIEWMATRIX\n#define VIEWMATRIX\nuniform mat4 matrix_view;\n#endif\nuniform float numParticles, numParticlesPot;\nuniform float graphSampleSize;\nuniform float graphNumSamples;\nuniform float stretch;\nuniform vec3 wrapBounds;\nuniform vec3 emitterScale, emitterPos, faceTangent, faceBinorm;\nuniform float rate, rateDiv, lifetime, deltaRandomnessStatic, scaleDivMult, alphaDivMult, seed, delta;\nuniform sampler2D particleTexOUT, particleTexIN;\nuniform highp sampler2D internalTex0;\nuniform highp sampler2D internalTex1;\nuniform highp sampler2D internalTex2;\n#ifndef CAMERAPLANES\n#define CAMERAPLANES\nuniform vec4 camera_params;\n#endif\nvarying vec4 texCoordsAlphaLife;\nvec3 inPos;\nvec3 inVel;\nfloat inAngle;\nbool inShow;\nfloat inLife;\n",particle_lambertPS:"\n\tvec3 negNormal = max(normal, vec3(0.0));\n\tvec3 posNormal = max(-normal, vec3(0.0));\n",particle_lightingPS:"\n\tvec3 light = negNormal.x*lightCube[0] + posNormal.x*lightCube[1] +\n\t\t\t\t\t\tnegNormal.y*lightCube[2] + posNormal.y*lightCube[3] +\n\t\t\t\t\t\tnegNormal.z*lightCube[4] + posNormal.z*lightCube[5];\n\trgb *= light;\n",particle_localShiftVS:"\n\tparticlePos = (matrix_model * vec4(particlePos, 1.0)).xyz;\n",particle_meshVS:"\n\tvec3 localPos = meshLocalPos;\n\tlocalPos.xy = rotate(localPos.xy, inAngle, rotMatrix);\n\tlocalPos.yz = rotate(localPos.yz, inAngle, rotMatrix);\n\tbillboard(particlePos, quadXY);\n",particle_normalVS:"\n\tNormal = normalize(localPos + matrix_viewInverse[2].xyz);\n",particle_normalMapPS:"\n\tvec3 normalMap = normalize(texture2D(normalMap, vec2(texCoordsAlphaLife.x, 1.0 - texCoordsAlphaLife.y)).xyz * 2.0 - 1.0);\n\tvec3 normal = ParticleMat * normalMap;\n",particle_pointAlongVS:"\n\tinAngle = atan(velocityV.x, velocityV.y);\n",particle_softPS:"\n\tfloat depth = getLinearScreenDepth();\n\tfloat particleDepth = vDepth;\n\tfloat depthDiff = saturate(abs(particleDepth - depth) * softening);\n\ta *= depthDiff;\n",particle_softVS:"\n\tvDepth = getLinearDepth(localPos);\n",particle_stretchVS:"\n\tvec3 moveDir = inVel * stretch;\n\tvec3 posPrev = particlePos - moveDir;\n\tposPrev += particlePosMoved;\n\tvec2 centerToVertexV = normalize((mat3(matrix_view) * localPos).xy);\n\tfloat interpolation = dot(-velocityV, centerToVertexV) * 0.5 + 0.5;\n\tparticlePos = mix(particlePos, posPrev, interpolation);\n",particle_TBNVS:"\n\tmat3 rot3 = mat3(rotMatrix[0][0], rotMatrix[0][1], 0.0, rotMatrix[1][0], rotMatrix[1][1], 0.0, 0.0, 0.0, 1.0);\n\tParticleMat = mat3(-matrix_viewInverse[0].xyz, -matrix_viewInverse[1].xyz, matrix_viewInverse[2].xyz) * rot3;\n",particle_wrapVS:"\n\tvec3 origParticlePos = particlePos;\n\tparticlePos -= matrix_model[3].xyz;\n\tparticlePos = mod(particlePos, wrapBounds) - wrapBounds * 0.5;\n\tparticlePos += matrix_model[3].xyz;\n\tparticlePosMoved = particlePos - origParticlePos;\n",reflDirPS:"\nvoid getReflDir(vec3 worldNormal, vec3 viewDir, float gloss, mat3 tbn) {\n\tdReflDirW = normalize(-reflect(viewDir, worldNormal));\n}\n",reflDirAnisoPS:"\nvoid getReflDir(vec3 worldNormal, vec3 viewDir, float gloss, mat3 tbn) {\n\tfloat roughness = sqrt(1.0 - min(gloss, 1.0));\n\tfloat anisotropy = material_anisotropy * roughness;\n\tvec3 anisotropicDirection = anisotropy >= 0.0 ? tbn[1] : tbn[0];\n\tvec3 anisotropicTangent = cross(anisotropicDirection, viewDir);\n\tvec3 anisotropicNormal = cross(anisotropicTangent, anisotropicDirection);\n\tvec3 bentNormal = normalize(mix(normalize(worldNormal), normalize(anisotropicNormal), anisotropy));\n\tdReflDirW = reflect(-viewDir, bentNormal);\n}\n",reflectionCCPS:"\n#ifdef LIT_CLEARCOAT\nvoid addReflectionCC(vec3 reflDir, float gloss) {\n\tccReflection += calcReflection(reflDir, gloss);\n}\n#endif\n",reflectionCubePS:"\nuniform samplerCube texture_cubeMap;\nuniform float material_reflectivity;\nvec3 calcReflection(vec3 reflDir, float gloss) {\n\tvec3 lookupVec = fixSeams(cubeMapProject(reflDir));\n\tlookupVec.x *= -1.0;\n\treturn $DECODE(textureCube(texture_cubeMap, lookupVec));\n}\nvoid addReflection(vec3 reflDir, float gloss) {   \n\tdReflection += vec4(calcReflection(reflDir, gloss), material_reflectivity);\n}\n",reflectionEnvHQPS:"\n#ifndef ENV_ATLAS\n#define ENV_ATLAS\nuniform sampler2D texture_envAtlas;\n#endif\nuniform samplerCube texture_cubeMap;\nuniform float material_reflectivity;\nvec3 calcReflection(vec3 reflDir, float gloss) {\n\tvec3 dir = cubeMapProject(reflDir) * vec3(-1.0, 1.0, 1.0);\n\tvec2 uv = toSphericalUv(dir);\n\tfloat level = saturate(1.0 - gloss) * 5.0;\n\tfloat ilevel = floor(level);\n\tfloat flevel = level - ilevel;\n\tvec3 sharp = $DECODE_CUBEMAP(textureCube(texture_cubeMap, fixSeams(dir)));\n\tvec3 roughA = $DECODE(texture2D(texture_envAtlas, mapRoughnessUv(uv, ilevel)));\n\tvec3 roughB = $DECODE(texture2D(texture_envAtlas, mapRoughnessUv(uv, ilevel + 1.0)));\n\treturn processEnvironment(mix(sharp, mix(roughA, roughB, flevel), min(level, 1.0)));\n}\nvoid addReflection(vec3 reflDir, float gloss) {   \n\tdReflection += vec4(calcReflection(reflDir, gloss), material_reflectivity);\n}\n",reflectionEnvPS:"\n#ifndef ENV_ATLAS\n#define ENV_ATLAS\nuniform sampler2D texture_envAtlas;\n#endif\nuniform float material_reflectivity;\nfloat shinyMipLevel(vec2 uv) {\n\tvec2 dx = dFdx(uv);\n\tvec2 dy = dFdy(uv);\n\tvec2 uv2 = vec2(fract(uv.x + 0.5), uv.y);\n\tvec2 dx2 = dFdx(uv2);\n\tvec2 dy2 = dFdy(uv2);\n\tfloat maxd = min(max(dot(dx, dx), dot(dy, dy)), max(dot(dx2, dx2), dot(dy2, dy2)));\n\treturn clamp(0.5 * log2(maxd) - 1.0 + textureBias, 0.0, 5.0);\n}\nvec3 calcReflection(vec3 reflDir, float gloss) {\n\tvec3 dir = cubeMapProject(reflDir) * vec3(-1.0, 1.0, 1.0);\n\tvec2 uv = toSphericalUv(dir);\n\tfloat level = saturate(1.0 - gloss) * 5.0;\n\tfloat ilevel = floor(level);\n\tfloat level2 = shinyMipLevel(uv * atlasSize);\n\tfloat ilevel2 = floor(level2);\n\tvec2 uv0, uv1;\n\tfloat weight;\n\tif (ilevel == 0.0) {\n\t\tuv0 = mapShinyUv(uv, ilevel2);\n\t\tuv1 = mapShinyUv(uv, ilevel2 + 1.0);\n\t\tweight = level2 - ilevel2;\n\t} else {\n\t\tuv0 = uv1 = mapRoughnessUv(uv, ilevel);\n\t\tweight = 0.0;\n\t}\n\tvec3 linearA = $DECODE(texture2D(texture_envAtlas, uv0));\n\tvec3 linearB = $DECODE(texture2D(texture_envAtlas, uv1));\n\tvec3 linear0 = mix(linearA, linearB, weight);\n\tvec3 linear1 = $DECODE(texture2D(texture_envAtlas, mapRoughnessUv(uv, ilevel + 1.0)));\n\treturn processEnvironment(mix(linear0, linear1, level - ilevel));\n}\nvoid addReflection(vec3 reflDir, float gloss) {   \n\tdReflection += vec4(calcReflection(reflDir, gloss), material_reflectivity);\n}\n",reflectionSpherePS:"\n#ifndef VIEWMATRIX\n#define VIEWMATRIX\nuniform mat4 matrix_view;\n#endif\nuniform sampler2D texture_sphereMap;\nuniform float material_reflectivity;\nvec3 calcReflection(vec3 reflDir, float gloss) {\n\tvec3 reflDirV = (mat3(matrix_view) * reflDir).xyz;\n\tfloat m = 2.0 * sqrt( dot(reflDirV.xy, reflDirV.xy) + (reflDirV.z+1.0)*(reflDirV.z+1.0) );\n\tvec2 sphereMapUv = reflDirV.xy / m + 0.5;\n\treturn $DECODE(texture2D(texture_sphereMap, sphereMapUv));\n}\nvoid addReflection(vec3 reflDir, float gloss) {   \n\tdReflection += vec4(calcReflection(reflDir, gloss), material_reflectivity);\n}\n",reflectionSphereLowPS:"\nuniform sampler2D texture_sphereMap;\nuniform float material_reflectivity;\nvec3 calcReflection(vec3 reflDir, float gloss) {\n\tvec3 reflDirV = vNormalV;\n\tvec2 sphereMapUv = reflDirV.xy * 0.5 + 0.5;\n\treturn $DECODE(texture2D(texture_sphereMap, sphereMapUv));\n}\nvoid addReflection(vec3 reflDir, float gloss) {   \n\tdReflection += vec4(calcReflection(reflDir, gloss), material_reflectivity);\n}\n",reflectionSheenPS:"\nvoid addReflectionSheen(vec3 worldNormal, vec3 viewDir, float gloss) {\n\tfloat NoV = dot(worldNormal, viewDir);\n\tfloat alphaG = gloss * gloss;\n\tfloat a = gloss < 0.25 ? -339.2 * alphaG + 161.4 * gloss - 25.9 : -8.48 * alphaG + 14.3 * gloss - 9.95;\n\tfloat b = gloss < 0.25 ? 44.0 * alphaG - 23.7 * gloss + 3.26 : 1.97 * alphaG - 3.27 * gloss + 0.72;\n\tfloat DG = exp( a * NoV + b ) + ( gloss < 0.25 ? 0.0 : 0.1 * ( gloss - 0.25 ) );\n\tsReflection += calcReflection(worldNormal, 0.0) * saturate(DG);\n}\n",refractionCubePS:"\nvec3 refract2(vec3 viewVec, vec3 normal, float IOR) {\n\tfloat vn = dot(viewVec, normal);\n\tfloat k = 1.0 - IOR * IOR * (1.0 - vn * vn);\n\tvec3 refrVec = IOR * viewVec - (IOR * vn + sqrt(k)) * normal;\n\treturn refrVec;\n}\nvoid addRefraction(\n\tvec3 worldNormal, \n\tvec3 viewDir, \n\tfloat thickness, \n\tfloat gloss, \n\tvec3 specularity, \n\tvec3 albedo, \n\tfloat transmission,\n\tfloat refractionIndex\n#if defined(LIT_IRIDESCENCE)\n\t, vec3 iridescenceFresnel,\n\tfloat iridescenceIntensity\n#endif \n) {\n\tvec4 tmpRefl = dReflection;\n\tvec3 reflectionDir = refract2(-viewDir, worldNormal, refractionIndex);\n\tdReflection = vec4(0);\n\taddReflection(reflectionDir, gloss);\n\tdDiffuseLight = mix(dDiffuseLight, dReflection.rgb * albedo, transmission);\n\tdReflection = tmpRefl;\n}\n",refractionDynamicPS:"\nuniform float material_invAttenuationDistance;\nuniform vec3 material_attenuation;\nvoid addRefraction(\n\tvec3 worldNormal, \n\tvec3 viewDir, \n\tfloat thickness, \n\tfloat gloss, \n\tvec3 specularity, \n\tvec3 albedo, \n\tfloat transmission,\n\tfloat refractionIndex\n#if defined(LIT_IRIDESCENCE)\n\t, vec3 iridescenceFresnel,\n\tfloat iridescenceIntensity\n#endif\n) {\n\tvec3 modelScale;\n\tmodelScale.x = length(vec3(matrix_model[0].xyz));\n\tmodelScale.y = length(vec3(matrix_model[1].xyz));\n\tmodelScale.z = length(vec3(matrix_model[2].xyz));\n\tvec3 refractionVector = normalize(refract(-viewDir, worldNormal, refractionIndex)) * thickness * modelScale;\n\tvec4 pointOfRefraction = vec4(vPositionW + refractionVector, 1.0);\n\tvec4 projectionPoint = matrix_viewProjection * pointOfRefraction;\n\tvec2 uv = getGrabScreenPos(projectionPoint);\n\t#ifdef SUPPORTS_TEXLOD\n\t\tfloat iorToRoughness = (1.0 - gloss) * clamp((1.0 / refractionIndex) * 2.0 - 2.0, 0.0, 1.0);\n\t\tfloat refractionLod = log2(uScreenSize.x) * iorToRoughness;\n\t\tvec3 refraction = texture2DLodEXT(uSceneColorMap, uv, refractionLod).rgb;\n\t#else\n\t\tvec3 refraction = texture2D(uSceneColorMap, uv).rgb;\n\t#endif\n\tvec3 transmittance;\n\tif (material_invAttenuationDistance != 0.0)\n\t{\n\t\tvec3 attenuation = -log(material_attenuation) * material_invAttenuationDistance;\n\t\ttransmittance = exp(-attenuation * length(refractionVector));\n\t}\n\telse\n\t{\n\t\ttransmittance = refraction;\n\t}\n\tvec3 fresnel = vec3(1.0) - \n\t\tgetFresnel(\n\t\t\tdot(viewDir, worldNormal), \n\t\t\tgloss, \n\t\t\tspecularity\n\t\t#if defined(LIT_IRIDESCENCE)\n\t\t\t, iridescenceFresnel,\n\t\t\tiridescenceIntensity\n\t\t#endif\n\t\t);\n\tdDiffuseLight = mix(dDiffuseLight, refraction * transmittance * fresnel, transmission);\n}\n",reprojectPS:"\nvarying vec2 vUv0;\n#ifdef CUBEMAP_SOURCE\n\tuniform samplerCube sourceCube;\n#else\n\tuniform sampler2D sourceTex;\n#endif\n#ifdef USE_SAMPLES_TEX\n\tuniform sampler2D samplesTex;\n\tuniform vec2 samplesTexInverseSize;\n#endif\nuniform vec4 params;\nuniform vec2 params2;\nfloat targetFace() { return params.x; }\nfloat specularPower() { return params.y; }\nfloat sourceCubeSeamScale() { return params.z; }\nfloat targetCubeSeamScale() { return params.w; }\nfloat targetTotalPixels() { return params2.x; }\nfloat sourceTotalPixels() { return params2.y; }\nfloat PI = 3.141592653589793;\nfloat saturate(float x) {\n\treturn clamp(x, 0.0, 1.0);\n}\n"+Ag+"\n"+Lg+"\nvec3 modifySeams(vec3 dir, float scale) {\n\tvec3 adir = abs(dir);\n\tfloat M = max(max(adir.x, adir.y), adir.z);\n\treturn dir / M * vec3(\n\t\tadir.x == M ? 1.0 : scale,\n\t\tadir.y == M ? 1.0 : scale,\n\t\tadir.z == M ? 1.0 : scale\n\t);\n}\nvec2 toSpherical(vec3 dir) {\n\treturn vec2(dir.xz == vec2(0.0) ? 0.0 : atan(dir.x, dir.z), asin(dir.y));\n}\nvec3 fromSpherical(vec2 uv) {\n\treturn vec3(cos(uv.y) * sin(uv.x),\n\t\t\t\tsin(uv.y),\n\t\t\t\tcos(uv.y) * cos(uv.x));\n}\nvec3 getDirectionEquirect() {\n\treturn fromSpherical((vec2(vUv0.x, 1.0 - vUv0.y) * 2.0 - 1.0) * vec2(PI, PI * 0.5));\n}\nfloat signNotZero(float k){\n\treturn(k >= 0.0) ? 1.0 : -1.0;\n}\nvec2 signNotZero(vec2 v) {\n\treturn vec2(signNotZero(v.x), signNotZero(v.y));\n}\nvec3 octDecode(vec2 o) {\n\tvec3 v = vec3(o.x, 1.0 - abs(o.x) - abs(o.y), o.y);\n\tif (v.y < 0.0) {\n\t\tv.xz = (1.0 - abs(v.zx)) * signNotZero(v.xz);\n\t}\n\treturn normalize(v);\n}\nvec3 getDirectionOctahedral() {\n\treturn octDecode(vec2(vUv0.x, 1.0 - vUv0.y) * 2.0 - 1.0);\n}\nvec2 octEncode(in vec3 v) {\n\tfloat l1norm = abs(v.x) + abs(v.y) + abs(v.z);\n\tvec2 result = v.xz * (1.0 / l1norm);\n\tif (v.y < 0.0) {\n\t\tresult = (1.0 - abs(result.yx)) * signNotZero(result.xy);\n\t}\n\treturn result;\n}\n#ifdef CUBEMAP_SOURCE\n\tvec4 sampleCubemap(vec3 dir) {\n\t\treturn textureCube(sourceCube, modifySeams(dir, 1.0 - sourceCubeSeamScale()));\n\t}\n\tvec4 sampleCubemap(vec2 sph) {\n\treturn sampleCubemap(fromSpherical(sph));\n}\n\tvec4 sampleCubemap(vec3 dir, float mipLevel) {\n\t\treturn textureCubeLodEXT(sourceCube, modifySeams(dir, 1.0 - exp2(mipLevel) * sourceCubeSeamScale()), mipLevel);\n\t}\n\tvec4 sampleCubemap(vec2 sph, float mipLevel) {\n\t\treturn sampleCubemap(fromSpherical(sph), mipLevel);\n\t}\n#else\n\tvec4 sampleEquirect(vec2 sph) {\n\t\tvec2 uv = sph / vec2(PI * 2.0, PI) + 0.5;\n\t\treturn texture2D(sourceTex, vec2(uv.x, 1.0 - uv.y));\n\t}\n\tvec4 sampleEquirect(vec3 dir) {\n\t\treturn sampleEquirect(toSpherical(dir));\n\t}\n\tvec4 sampleEquirect(vec2 sph, float mipLevel) {\n\t\tvec2 uv = sph / vec2(PI * 2.0, PI) + 0.5;\n\t\treturn texture2DLodEXT(sourceTex, vec2(uv.x, 1.0 - uv.y), mipLevel);\n\t}\n\tvec4 sampleEquirect(vec3 dir, float mipLevel) {\n\t\treturn sampleEquirect(toSpherical(dir), mipLevel);\n\t}\n\tvec4 sampleOctahedral(vec3 dir) {\n\t\tvec2 uv = octEncode(dir) * 0.5 + 0.5;\n\t\treturn texture2D(sourceTex, vec2(uv.x, 1.0 - uv.y));\n\t}\n\tvec4 sampleOctahedral(vec2 sph) {\n\t\treturn sampleOctahedral(fromSpherical(sph));\n\t}\n\tvec4 sampleOctahedral(vec3 dir, float mipLevel) {\n\t\tvec2 uv = octEncode(dir) * 0.5 + 0.5;\n\t\treturn texture2DLodEXT(sourceTex, vec2(uv.x, 1.0 - uv.y), mipLevel);\n\t}\n\tvec4 sampleOctahedral(vec2 sph, float mipLevel) {\n\t\treturn sampleOctahedral(fromSpherical(sph), mipLevel);\n\t}\n#endif\nvec3 getDirectionCubemap() {\n\tvec2 st = vUv0 * 2.0 - 1.0;\n\tfloat face = targetFace();\n\tvec3 vec;\n\tif (face == 0.0) {\n\t\tvec = vec3(1, -st.y, -st.x);\n\t} else if (face == 1.0) {\n\t\tvec = vec3(-1, -st.y, st.x);\n\t} else if (face == 2.0) {\n\t\tvec = vec3(st.x, 1, st.y);\n\t} else if (face == 3.0) {\n\t\tvec = vec3(st.x, -1, -st.y);\n\t} else if (face == 4.0) {\n\t\tvec = vec3(st.x, -st.y, 1);\n\t} else {\n\t\tvec = vec3(-st.x, -st.y, -1);\n\t}\n\treturn normalize(modifySeams(vec, 1.0 / (1.0 - targetCubeSeamScale())));\n}\nmat3 matrixFromVector(vec3 n) {\n\tfloat a = 1.0 / (1.0 + n.z);\n\tfloat b = -n.x * n.y * a;\n\tvec3 b1 = vec3(1.0 - n.x * n.x * a, b, -n.x);\n\tvec3 b2 = vec3(b, 1.0 - n.y * n.y * a, -n.y);\n\treturn mat3(b1, b2, n);\n}\nmat3 matrixFromVectorSlow(vec3 n) {\n\tvec3 up = (1.0 - abs(n.y) <= 0.0000001) ? vec3(0.0, 0.0, n.y > 0.0 ? 1.0 : -1.0) : vec3(0.0, 1.0, 0.0);\n\tvec3 x = normalize(cross(up, n));\n\tvec3 y = cross(n, x);\n\treturn mat3(x, y, n);\n}\nvec4 reproject() {\n\tif (NUM_SAMPLES <= 1) {\n\t\treturn ENCODE_FUNC(DECODE_FUNC(SOURCE_FUNC(TARGET_FUNC())));\n\t} else {\n\t\tvec3 t = TARGET_FUNC();\n\t\tvec3 tu = dFdx(t);\n\t\tvec3 tv = dFdy(t);\n\t\tvec3 result = vec3(0.0);\n\t\tfor (float u = 0.0; u < NUM_SAMPLES_SQRT; ++u) {\n\t\t\tfor (float v = 0.0; v < NUM_SAMPLES_SQRT; ++v) {\n\t\t\t\tresult += DECODE_FUNC(SOURCE_FUNC(normalize(t +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttu * (u / NUM_SAMPLES_SQRT - 0.5) +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttv * (v / NUM_SAMPLES_SQRT - 0.5))));\n\t\t\t}\n\t\t}\n\t\treturn ENCODE_FUNC(result / (NUM_SAMPLES_SQRT * NUM_SAMPLES_SQRT));\n\t}\n}\nvec4 unpackFloat = vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0);\n#ifdef USE_SAMPLES_TEX\n\tvoid unpackSample(int i, out vec3 L, out float mipLevel) {\n\t\tfloat u = (float(i * 4) + 0.5) * samplesTexInverseSize.x;\n\t\tfloat v = (floor(u) + 0.5) * samplesTexInverseSize.y;\n\t\tvec4 raw;\n\t\traw.x = dot(texture2D(samplesTex, vec2(u, v)), unpackFloat); u += samplesTexInverseSize.x;\n\t\traw.y = dot(texture2D(samplesTex, vec2(u, v)), unpackFloat); u += samplesTexInverseSize.x;\n\t\traw.z = dot(texture2D(samplesTex, vec2(u, v)), unpackFloat); u += samplesTexInverseSize.x;\n\t\traw.w = dot(texture2D(samplesTex, vec2(u, v)), unpackFloat);\n\t\tL.xyz = raw.xyz * 2.0 - 1.0;\n\t\tmipLevel = raw.w * 8.0;\n\t}\n\tvec4 prefilterSamples() {\n\t\tmat3 vecSpace = matrixFromVectorSlow(TARGET_FUNC());\n\t\tvec3 L;\n\t\tfloat mipLevel;\n\t\tvec3 result = vec3(0.0);\n\t\tfloat totalWeight = 0.0;\n\t\tfor (int i = 0; i < NUM_SAMPLES; ++i) {\n\t\t\tunpackSample(i, L, mipLevel);\n\t\t\tresult += DECODE_FUNC(SOURCE_FUNC(vecSpace * L, mipLevel)) * L.z;\n\t\t\ttotalWeight += L.z;\n\t\t}\n\t\treturn ENCODE_FUNC(result / totalWeight);\n\t}\n\tvec4 prefilterSamplesUnweighted() {\n\t\tmat3 vecSpace = matrixFromVectorSlow(TARGET_FUNC());\n\t\tvec3 L;\n\t\tfloat mipLevel;\n\t\tvec3 result = vec3(0.0);\n\t\tfloat totalWeight = 0.0;\n\t\tfor (int i = 0; i < NUM_SAMPLES; ++i) {\n\t\t\tunpackSample(i, L, mipLevel);\n\t\t\tresult += DECODE_FUNC(SOURCE_FUNC(vecSpace * L, mipLevel));\n\t\t}\n\t\treturn ENCODE_FUNC(result / float(NUM_SAMPLES));\n\t}\n#endif\nvoid main(void) {\n\tgl_FragColor = PROCESS_FUNC();\n}\n",screenDepthPS:"\nuniform highp sampler2D uSceneDepthMap;\n#ifndef SCREENSIZE\n#define SCREENSIZE\nuniform vec4 uScreenSize;\n#endif\n#ifndef VIEWMATRIX\n#define VIEWMATRIX\nuniform mat4 matrix_view;\n#endif\n#ifndef LINEARIZE_DEPTH\n#ifndef CAMERAPLANES\n#define CAMERAPLANES\nuniform vec4 camera_params;\n#endif\n#define LINEARIZE_DEPTH\n#ifdef GL2\nfloat linearizeDepth(float z) {\n\tif (camera_params.w == 0.0)\n\t\treturn (camera_params.z * camera_params.y) / (camera_params.y + z * (camera_params.z - camera_params.y));\n\telse\n\t\treturn camera_params.z + z * (camera_params.y - camera_params.z);\n}\n#else\n#ifndef UNPACKFLOAT\n#define UNPACKFLOAT\nfloat unpackFloat(vec4 rgbaDepth) {\n\tconst vec4 bitShift = vec4(1.0 / (256.0 * 256.0 * 256.0), 1.0 / (256.0 * 256.0), 1.0 / 256.0, 1.0);\n\treturn dot(rgbaDepth, bitShift);\n}\n#endif\n#endif\n#endif\nfloat getLinearScreenDepth(vec2 uv) {\n\t#ifdef GL2\n\t\treturn linearizeDepth(texture2D(uSceneDepthMap, uv).r);\n\t#else\n\t\treturn unpackFloat(texture2D(uSceneDepthMap, uv)) * camera_params.y;\n\t#endif\n}\n#ifndef VERTEXSHADER\nfloat getLinearScreenDepth() {\n\tvec2 uv = gl_FragCoord.xy * uScreenSize.zw;\n\treturn getLinearScreenDepth(uv);\n}\n#endif\nfloat getLinearDepth(vec3 pos) {\n\treturn -(matrix_view * vec4(pos, 1.0)).z;\n}\n",shadowCascadesPS:"\nconst float maxCascades = 4.0;\nmat4 cascadeShadowMat;\nvoid getShadowCascadeMatrix(mat4 shadowMatrixPalette[4], float shadowCascadeDistances[4], float shadowCascadeCount) {\n\tfloat depth = 1.0 / gl_FragCoord.w;\n\tfloat cascadeIndex = 0.0;\n\tfor (float i = 0.0; i < maxCascades; i++) {\n\t\tif (depth < shadowCascadeDistances[int(i)]) {\n\t\t\tcascadeIndex = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\tcascadeIndex = min(cascadeIndex, shadowCascadeCount - 1.0);\n\t#ifdef GL2\n\t\tcascadeShadowMat = shadowMatrixPalette[int(cascadeIndex)];\n\t#else\n\t\tif (cascadeIndex == 0.0) {\n\t\t\tcascadeShadowMat = shadowMatrixPalette[0];\n\t\t}\n\t\telse if (cascadeIndex == 1.0) {\n\t\t\tcascadeShadowMat = shadowMatrixPalette[1];\n\t\t}\n\t\telse if (cascadeIndex == 2.0) {\n\t\t\tcascadeShadowMat = shadowMatrixPalette[2];\n\t\t}\n\t\telse {\n\t\t\tcascadeShadowMat = shadowMatrixPalette[3];\n\t\t}\n\t#endif\n}\nvoid fadeShadow(float shadowCascadeDistances[4]) {\t\t\t\t  \n\tfloat depth = 1.0 / gl_FragCoord.w;\n\tif (depth > shadowCascadeDistances[int(maxCascades - 1.0)]) {\n\t\tdShadowCoord.z = -9999999.0;\n\t}\n}\n",shadowEVSMPS:"\nfloat VSM$(sampler2D tex, vec2 texCoords, float resolution, float Z, float vsmBias, float exponent) {\n\tvec3 moments = texture2D(tex, texCoords).xyz;\n\treturn calculateEVSM(moments, Z, vsmBias, exponent);\n}\nfloat getShadowVSM$(sampler2D shadowMap, vec3 shadowCoord, vec4 shadowParams, float exponent, vec3 lightDir) {\n\treturn VSM$(shadowMap, shadowCoord.xy, shadowParams.x, shadowCoord.z, shadowParams.y, exponent);\n}\nfloat getShadowSpotVSM$(sampler2D shadowMap, vec3 shadowCoord, vec4 shadowParams, float exponent, vec3 lightDir) {\n\treturn VSM$(shadowMap, shadowCoord.xy, shadowParams.x, length(lightDir) * shadowParams.w + shadowParams.z, shadowParams.y, exponent);\n}\n",shadowEVSMnPS:"\nfloat VSM$(TEXTURE_ACCEPT(tex), vec2 texCoords, float resolution, float Z, float vsmBias, float exponent) {\n\tfloat pixelSize = 1.0 / resolution;\n\ttexCoords -= vec2(pixelSize);\n\tvec3 s00 = texture2D(tex, texCoords).xyz;\n\tvec3 s10 = texture2D(tex, texCoords + vec2(pixelSize, 0)).xyz;\n\tvec3 s01 = texture2D(tex, texCoords + vec2(0, pixelSize)).xyz;\n\tvec3 s11 = texture2D(tex, texCoords + vec2(pixelSize)).xyz;\n\tvec2 fr = fract(texCoords * resolution);\n\tvec3 h0 = mix(s00, s10, fr.x);\n\tvec3 h1 = mix(s01, s11, fr.x);\n\tvec3 moments = mix(h0, h1, fr.y);\n\treturn calculateEVSM(moments, Z, vsmBias, exponent);\n}\nfloat getShadowVSM$(TEXTURE_ACCEPT(shadowMap), vec3 shadowCoord, vec4 shadowParams, float exponent, vec3 lightDir) {\n\treturn VSM$(TEXTURE_PASS(shadowMap), shadowCoord.xy, shadowParams.x, shadowCoord.z, shadowParams.y, exponent);\n}\nfloat getShadowSpotVSM$(TEXTURE_ACCEPT(shadowMap), vec3 shadowCoord, vec4 shadowParams, float exponent, vec3 lightDir) {\n\treturn VSM$(TEXTURE_PASS(shadowMap), shadowCoord.xy, shadowParams.x, length(lightDir) * shadowParams.w + shadowParams.z, shadowParams.y, exponent);\n}\n",shadowPCSSPS:"\n#define PCSS_SAMPLE_COUNT 16\nuniform float pcssDiskSamples[PCSS_SAMPLE_COUNT];\nuniform float pcssSphereSamples[PCSS_SAMPLE_COUNT];\nvec2 vogelDisk(int sampleIndex, float count, float phi, float r) {\n\tconst float GoldenAngle = 2.4;\n\tfloat theta = float(sampleIndex) * GoldenAngle + phi;\n\tfloat sine = sin(theta);\n\tfloat cosine = cos(theta);\n\treturn vec2(r * cosine, r * sine);\n}\nvec3 vogelSphere(int sampleIndex, float count, float phi, float r) {\n\tconst float GoldenAngle = 2.4;\n\tfloat theta = float(sampleIndex) * GoldenAngle + phi;\n\tfloat weight = float(sampleIndex) / count;\n\treturn vec3(cos(theta) * r, weight, sin(theta) * r);\n}\nfloat noise(vec2 screenPos) {\n\tconst float PHI = 1.61803398874989484820459;\n\treturn fract(sin(dot(screenPos * PHI, screenPos)) * screenPos.x);\n}\n#ifndef UNPACKFLOAT\n#define UNPACKFLOAT\nfloat unpackFloat(vec4 rgbaDepth) {\n\tconst vec4 bitShift = vec4(1.0 / (256.0 * 256.0 * 256.0), 1.0 / (256.0 * 256.0), 1.0 / 256.0, 1.0);\n\treturn dot(rgbaDepth, bitShift);\n}\n#endif\nfloat viewSpaceDepth(float depth, mat4 invProjection) {\n\tfloat z = depth * 2.0 - 1.0;\n\tvec4 clipSpace = vec4(0.0, 0.0, z, 1.0);\n\tvec4 viewSpace = invProjection * clipSpace;\n\treturn viewSpace.z;\n}\nfloat PCSSBlockerDistance(TEXTURE_ACCEPT(shadowMap), vec2 sampleCoords[PCSS_SAMPLE_COUNT], vec2 shadowCoords, vec2 searchSize, float z) {\n\tfloat blockers = 0.0;\n\tfloat averageBlocker = 0.0;\n\tfor (int i = 0; i < PCSS_SAMPLE_COUNT; i++) {\n\t\tvec2 offset = sampleCoords[i] * searchSize;\n\t\tvec2 sampleUV = shadowCoords + offset;\n\t#ifdef GL2\n\t\tfloat blocker = textureLod(shadowMap, sampleUV, 0.0).r;\n\t#else\n\t\tfloat blocker = unpackFloat(texture2D(shadowMap, sampleUV));\n\t#endif\t\t\n\t\tfloat isBlocking = step(blocker, z);\n\t\tblockers += isBlocking;\n\t\taverageBlocker += blocker * isBlocking;\n\t}\n\tif (blockers > 0.0)\n\t\treturn averageBlocker /= blockers;\n\treturn -1.0;\n}\nfloat PCSS(TEXTURE_ACCEPT(shadowMap), vec3 shadowCoords, vec4 cameraParams, vec2 shadowSearchArea) {\n\tfloat receiverDepth = shadowCoords.z;\n#ifndef GL2\n\treceiverDepth *= 1.0 / (cameraParams.y - cameraParams.z);\n#endif\n\tvec2 samplePoints[PCSS_SAMPLE_COUNT];\n\tfloat noise = noise( gl_FragCoord.xy ) * 2.0 * PI;\n\tfor (int i = 0; i < PCSS_SAMPLE_COUNT; i++) {\n\t\tfloat pcssPresample = pcssDiskSamples[i];\n\t\tsamplePoints[i] = vogelDisk(i, float(PCSS_SAMPLE_COUNT), noise, pcssPresample);\n\t}\n\tfloat averageBlocker = PCSSBlockerDistance(TEXTURE_PASS(shadowMap), samplePoints, shadowCoords.xy, shadowSearchArea, receiverDepth);\n\tif (averageBlocker == -1.0) {\n\t\treturn 1.0;\n\t} else {\n\t\tvec2 filterRadius = ((receiverDepth - averageBlocker) / averageBlocker) * shadowSearchArea * cameraParams.x;\n\t\tfloat shadow = 0.0;\n\t\tfor (int i = 0; i < PCSS_SAMPLE_COUNT; i ++)\n\t\t{\n\t\t\tvec2 sampleUV = samplePoints[i] * filterRadius;\n\t\t\tsampleUV = shadowCoords.xy + sampleUV;\n\t\t#ifdef GL2\n\t\t\tfloat depth = textureLod(shadowMap, sampleUV, 0.0).r;\n\t\t#else\n\t\t\tfloat depth = unpackFloat(texture2D(shadowMap, sampleUV));\n\t\t#endif\n\t\t\tshadow += step(receiverDepth, depth);\n\t\t}\n\t\treturn shadow / float(PCSS_SAMPLE_COUNT);\n\t} \n}\nfloat PCSSCubeBlockerDistance(samplerCube shadowMap, vec3 lightDirNorm, vec3 samplePoints[PCSS_SAMPLE_COUNT], float z, float shadowSearchArea) {\n\tfloat blockers = 0.0;\n\tfloat averageBlocker = 0.0;\n\tfor (int i = 0; i < PCSS_SAMPLE_COUNT; i++) {\n\t\tvec3 sampleDir = lightDirNorm + samplePoints[i] * shadowSearchArea;\n\t\tsampleDir = normalize(sampleDir);\n\t#ifdef GL2\n\t\tfloat blocker = textureCubeLodEXT(shadowMap, sampleDir, 0.0).r;\n\t#else\n\t\tfloat blocker = unpackFloat(textureCube(shadowMap, sampleDir));\n\t#endif\n\t\tfloat isBlocking = step(blocker, z);\n\t\tblockers += isBlocking;\n\t\taverageBlocker += blocker * isBlocking;\n\t}\n\tif (blockers > 0.0)\n\t\treturn averageBlocker /= float(blockers);\n\treturn -1.0;\n}\nfloat PCSSCube(samplerCube shadowMap, vec4 shadowParams, vec3 shadowCoords, vec4 cameraParams, float shadowSearchArea, vec3 lightDir) {\n\t\n\tvec3 samplePoints[PCSS_SAMPLE_COUNT];\n\tfloat noise = noise( gl_FragCoord.xy ) * 2.0 * PI;\n\tfor (int i = 0; i < PCSS_SAMPLE_COUNT; i++) {\n\t\tfloat r = pcssSphereSamples[i];\n\t\tsamplePoints[i] = vogelSphere(i, float(PCSS_SAMPLE_COUNT), noise, r);\n\t}\n\tfloat receiverDepth = length(lightDir) * shadowParams.w + shadowParams.z;\n\tvec3 lightDirNorm = normalize(lightDir);\n\t\n\tfloat averageBlocker = PCSSCubeBlockerDistance(shadowMap, lightDirNorm, samplePoints, receiverDepth, shadowSearchArea);\n\tif (averageBlocker == -1.0) {\n\t\treturn 1.0;\n\t} else {\n\t\tfloat filterRadius = ((receiverDepth - averageBlocker) / averageBlocker) * shadowSearchArea;\n\t\tfloat shadow = 0.0;\n\t\tfor (int i = 0; i < PCSS_SAMPLE_COUNT; i++)\n\t\t{\n\t\t\tvec3 offset = samplePoints[i] * filterRadius;\n\t\t\tvec3 sampleDir = lightDirNorm + offset;\n\t\t\tsampleDir = normalize(sampleDir);\n\t\t\t#ifdef GL2\n\t\t\t\tfloat depth = textureCubeLodEXT(shadowMap, sampleDir, 0.0).r;\n\t\t\t#else\n\t\t\t\tfloat depth = unpackFloat(textureCube(shadowMap, sampleDir));\n\t\t\t#endif\n\t\t\tshadow += step(receiverDepth, depth);\n\t\t}\n\t\treturn shadow / float(PCSS_SAMPLE_COUNT);\n\t}\n}\nfloat getShadowPointPCSS(samplerCube shadowMap, vec3 shadowCoord, vec4 shadowParams, vec4 cameraParams, vec2 shadowSearchArea, vec3 lightDir) {\n\treturn PCSSCube(shadowMap, shadowParams, shadowCoord, cameraParams, shadowSearchArea.x, lightDir);\n}\nfloat getShadowSpotPCSS(TEXTURE_ACCEPT(shadowMap), vec3 shadowCoord, vec4 shadowParams, vec4 cameraParams, vec2 shadowSearchArea, vec3 lightDir) {\n\treturn PCSS(TEXTURE_PASS(shadowMap), shadowCoord, cameraParams, shadowSearchArea);\n}\nfloat getShadowPCSS(TEXTURE_ACCEPT(shadowMap), vec3 shadowCoord, vec4 shadowParams, vec4 cameraParams, vec2 shadowSearchArea, vec3 lightDir) {\n\treturn PCSS(TEXTURE_PASS(shadowMap), shadowCoord, cameraParams, shadowSearchArea);\n}\n",shadowSampleCoordPS:"\nvec3 getShadowSampleCoord$LIGHT(mat4 shadowTransform, vec4 shadowParams, vec3 worldPosition, vec3 lightPos, inout vec3 lightDir, vec3 lightDirNorm, vec3 normal) {\n\tvec3 surfacePosition = worldPosition;\n#ifdef SHADOW_SAMPLE_POINT\n\t#ifdef SHADOW_SAMPLE_NORMAL_OFFSET\n\t\tfloat distScale = length(lightDir);\n\t\tsurfacePosition = worldPosition + normal * shadowParams.y * clamp(1.0 - dot(normal, -lightDirNorm), 0.0, 1.0) * distScale;\n\t\tlightDir = surfacePosition - lightPos;\n\t\treturn lightDir;\n\t#endif\n#else\n\t#ifdef SHADOW_SAMPLE_SOURCE_ZBUFFER\n\t\t#ifdef SHADOW_SAMPLE_NORMAL_OFFSET\n\t\t\tsurfacePosition = worldPosition + normal * shadowParams.y;\n\t\t#endif\n\t#else\n\t\t#ifdef SHADOW_SAMPLE_NORMAL_OFFSET\n\t\t\t#ifdef SHADOW_SAMPLE_ORTHO\n\t\t\t\tfloat distScale = 1.0;\n\t\t\t#else\n\t\t\t\tfloat distScale = abs(dot(vPositionW - lightPos, lightDirNorm));\n\t\t\t#endif\n\t\t\tsurfacePosition = worldPosition + normal * shadowParams.y * clamp(1.0 - dot(normal, -lightDirNorm), 0.0, 1.0) * distScale;\n\t\t#endif\n\t#endif\n\tvec4 positionInShadowSpace = shadowTransform * vec4(surfacePosition, 1.0);\n\t#ifdef SHADOW_SAMPLE_ORTHO\n\t\tpositionInShadowSpace.z = saturate(positionInShadowSpace.z) - 0.0001;\n\t#else\n\t\t#ifdef SHADOW_SAMPLE_SOURCE_ZBUFFER\n\t\t\tpositionInShadowSpace.xyz /= positionInShadowSpace.w;\n\t\t#else\n\t\t\tpositionInShadowSpace.xy /= positionInShadowSpace.w;\n\t\t\tpositionInShadowSpace.z = length(lightDir) * shadowParams.w;\n\t\t#endif\n\t#endif\n\t#ifdef SHADOW_SAMPLE_Z_BIAS\n\t\tpositionInShadowSpace.z += getShadowBias(shadowParams.x, shadowParams.z);\n\t#endif\n\tsurfacePosition = positionInShadowSpace.xyz;\n#endif\n\treturn surfacePosition;\n}\n",shadowStandardPS:"\nvec3 lessThan2(vec3 a, vec3 b) {\n\treturn clamp((b - a)*1000.0, 0.0, 1.0);\n}\n#ifndef UNPACKFLOAT\n#define UNPACKFLOAT\n\tfloat unpackFloat(vec4 rgbaDepth) {\n\t\tconst vec4 bitShift = vec4(1.0 / (256.0 * 256.0 * 256.0), 1.0 / (256.0 * 256.0), 1.0 / 256.0, 1.0);\n\t\treturn dot(rgbaDepth, bitShift);\n\t}\n#endif\n#ifdef GL2\nfloat _getShadowPCF3x3(SHADOWMAP_ACCEPT(shadowMap), vec3 shadowCoord, vec3 shadowParams) {\n\tfloat z = shadowCoord.z;\n\tvec2 uv = shadowCoord.xy * shadowParams.x;\n\tfloat shadowMapSizeInv = 1.0 / shadowParams.x;\n\tvec2 base_uv = floor(uv + 0.5);\n\tfloat s = (uv.x + 0.5 - base_uv.x);\n\tfloat t = (uv.y + 0.5 - base_uv.y);\n\tbase_uv -= vec2(0.5);\n\tbase_uv *= shadowMapSizeInv;\n\tfloat sum = 0.0;\n\tfloat uw0 = (3.0 - 2.0 * s);\n\tfloat uw1 = (1.0 + 2.0 * s);\n\tfloat u0 = (2.0 - s) / uw0 - 1.0;\n\tfloat u1 = s / uw1 + 1.0;\n\tfloat vw0 = (3.0 - 2.0 * t);\n\tfloat vw1 = (1.0 + 2.0 * t);\n\tfloat v0 = (2.0 - t) / vw0 - 1.0;\n\tfloat v1 = t / vw1 + 1.0;\n\tu0 = u0 * shadowMapSizeInv + base_uv.x;\n\tv0 = v0 * shadowMapSizeInv + base_uv.y;\n\tu1 = u1 * shadowMapSizeInv + base_uv.x;\n\tv1 = v1 * shadowMapSizeInv + base_uv.y;\n\tsum += uw0 * vw0 * textureShadow(shadowMap, vec3(u0, v0, z));\n\tsum += uw1 * vw0 * textureShadow(shadowMap, vec3(u1, v0, z));\n\tsum += uw0 * vw1 * textureShadow(shadowMap, vec3(u0, v1, z));\n\tsum += uw1 * vw1 * textureShadow(shadowMap, vec3(u1, v1, z));\n\tsum *= 1.0f / 16.0;\n\treturn sum;\n}\nfloat getShadowPCF3x3(SHADOWMAP_ACCEPT(shadowMap), vec3 shadowCoord, vec4 shadowParams) {\n\treturn _getShadowPCF3x3(SHADOWMAP_PASS(shadowMap), shadowCoord, shadowParams.xyz);\n}\nfloat getShadowSpotPCF3x3(SHADOWMAP_ACCEPT(shadowMap), vec3 shadowCoord, vec4 shadowParams) {\n\treturn _getShadowPCF3x3(SHADOWMAP_PASS(shadowMap), shadowCoord, shadowParams.xyz);\n}\nfloat getShadowPCF1x1(SHADOWMAP_ACCEPT(shadowMap), vec3 shadowCoord, vec4 shadowParams) {\n\treturn textureShadow(shadowMap, shadowCoord);\n}\nfloat getShadowSpotPCF1x1(SHADOWMAP_ACCEPT(shadowMap), vec3 shadowCoord, vec4 shadowParams) {\n\treturn textureShadow(shadowMap, shadowCoord);\n}\n#else\nfloat _xgetShadowPCF3x3(mat3 depthKernel, vec3 shadowCoord, sampler2D shadowMap, vec3 shadowParams) {\n\tmat3 shadowKernel;\n\tvec3 shadowZ = vec3(shadowCoord.z);\n\tshadowKernel[0] = vec3(greaterThan(depthKernel[0], shadowZ));\n\tshadowKernel[1] = vec3(greaterThan(depthKernel[1], shadowZ));\n\tshadowKernel[2] = vec3(greaterThan(depthKernel[2], shadowZ));\n\tvec2 fractionalCoord = fract( shadowCoord.xy * shadowParams.x );\n\tshadowKernel[0] = mix(shadowKernel[0], shadowKernel[1], fractionalCoord.x);\n\tshadowKernel[1] = mix(shadowKernel[1], shadowKernel[2], fractionalCoord.x);\n\tvec4 shadowValues;\n\tshadowValues.x = mix(shadowKernel[0][0], shadowKernel[0][1], fractionalCoord.y);\n\tshadowValues.y = mix(shadowKernel[0][1], shadowKernel[0][2], fractionalCoord.y);\n\tshadowValues.z = mix(shadowKernel[1][0], shadowKernel[1][1], fractionalCoord.y);\n\tshadowValues.w = mix(shadowKernel[1][1], shadowKernel[1][2], fractionalCoord.y);\n\treturn dot( shadowValues, vec4( 1.0 ) ) * 0.25;\n}\nfloat _getShadowPCF3x3(sampler2D shadowMap, vec3 shadowCoord, vec3 shadowParams) {\n\tfloat xoffset = 1.0 / shadowParams.x;\n\tfloat dx0 = -xoffset;\n\tfloat dx1 = xoffset;\n\tmat3 depthKernel;\n\tdepthKernel[0][0] = unpackFloat(textureShadow(shadowMap, shadowCoord.xy + vec2(dx0, dx0)));\n\tdepthKernel[0][1] = unpackFloat(textureShadow(shadowMap, shadowCoord.xy + vec2(dx0, 0.0)));\n\tdepthKernel[0][2] = unpackFloat(textureShadow(shadowMap, shadowCoord.xy + vec2(dx0, dx1)));\n\tdepthKernel[1][0] = unpackFloat(textureShadow(shadowMap, shadowCoord.xy + vec2(0.0, dx0)));\n\tdepthKernel[1][1] = unpackFloat(textureShadow(shadowMap, shadowCoord.xy));\n\tdepthKernel[1][2] = unpackFloat(textureShadow(shadowMap, shadowCoord.xy + vec2(0.0, dx1)));\n\tdepthKernel[2][0] = unpackFloat(textureShadow(shadowMap, shadowCoord.xy + vec2(dx1, dx0)));\n\tdepthKernel[2][1] = unpackFloat(textureShadow(shadowMap, shadowCoord.xy + vec2(dx1, 0.0)));\n\tdepthKernel[2][2] = unpackFloat(textureShadow(shadowMap, shadowCoord.xy + vec2(dx1, dx1)));\n\treturn _xgetShadowPCF3x3(depthKernel, shadowCoord, shadowMap, shadowParams);\n}\nfloat getShadowPCF3x3(sampler2D shadowMap, vec3 shadowCoord, vec4 shadowParams) {\n\treturn _getShadowPCF3x3(shadowMap, shadowCoord, shadowParams.xyz);\n}\nfloat getShadowSpotPCF3x3(sampler2D shadowMap, vec3 shadowCoord, vec4 shadowParams) {\n\treturn _getShadowPCF3x3(shadowMap, shadowCoord, shadowParams.xyz);\n}\nfloat _getShadowPCF1x1(sampler2D shadowMap, vec3 shadowCoord) {\n\tfloat shadowSample = unpackFloat(textureShadow(shadowMap, shadowCoord.xy));\n\treturn shadowSample > shadowCoord.z ? 1.0 : 0.0;\n}\nfloat getShadowPCF1x1(sampler2D shadowMap, vec3 shadowCoord, vec4 shadowParams) {\n\treturn _getShadowPCF1x1(shadowMap, shadowCoord);\n}\nfloat getShadowSpotPCF1x1(sampler2D shadowMap, vec3 shadowCoord, vec4 shadowParams) {\n\treturn _getShadowPCF1x1(shadowMap, shadowCoord);\n}\n#endif\n#ifndef WEBGPU\nfloat _getShadowPoint(samplerCube shadowMap, vec4 shadowParams, vec3 dir) {\n\tvec3 tc = normalize(dir);\n\tvec3 tcAbs = abs(tc);\n\tvec4 dirX = vec4(1,0,0, tc.x);\n\tvec4 dirY = vec4(0,1,0, tc.y);\n\tfloat majorAxisLength = tc.z;\n\tif ((tcAbs.x > tcAbs.y) && (tcAbs.x > tcAbs.z)) {\n\t\tdirX = vec4(0,0,1, tc.z);\n\t\tdirY = vec4(0,1,0, tc.y);\n\t\tmajorAxisLength = tc.x;\n\t} else if ((tcAbs.y > tcAbs.x) && (tcAbs.y > tcAbs.z)) {\n\t\tdirX = vec4(1,0,0, tc.x);\n\t\tdirY = vec4(0,0,1, tc.z);\n\t\tmajorAxisLength = tc.y;\n\t}\n\tfloat shadowParamsInFaceSpace = ((1.0/shadowParams.x) * 2.0) * abs(majorAxisLength);\n\tvec3 xoffset = (dirX.xyz * shadowParamsInFaceSpace);\n\tvec3 yoffset = (dirY.xyz * shadowParamsInFaceSpace);\n\tvec3 dx0 = -xoffset;\n\tvec3 dy0 = -yoffset;\n\tvec3 dx1 = xoffset;\n\tvec3 dy1 = yoffset;\n\tmat3 shadowKernel;\n\tmat3 depthKernel;\n\tdepthKernel[0][0] = unpackFloat(textureCube(shadowMap, tc + dx0 + dy0));\n\tdepthKernel[0][1] = unpackFloat(textureCube(shadowMap, tc + dx0));\n\tdepthKernel[0][2] = unpackFloat(textureCube(shadowMap, tc + dx0 + dy1));\n\tdepthKernel[1][0] = unpackFloat(textureCube(shadowMap, tc + dy0));\n\tdepthKernel[1][1] = unpackFloat(textureCube(shadowMap, tc));\n\tdepthKernel[1][2] = unpackFloat(textureCube(shadowMap, tc + dy1));\n\tdepthKernel[2][0] = unpackFloat(textureCube(shadowMap, tc + dx1 + dy0));\n\tdepthKernel[2][1] = unpackFloat(textureCube(shadowMap, tc + dx1));\n\tdepthKernel[2][2] = unpackFloat(textureCube(shadowMap, tc + dx1 + dy1));\n\tvec3 shadowZ = vec3(length(dir) * shadowParams.w + shadowParams.z);\n\tshadowKernel[0] = vec3(lessThan2(depthKernel[0], shadowZ));\n\tshadowKernel[1] = vec3(lessThan2(depthKernel[1], shadowZ));\n\tshadowKernel[2] = vec3(lessThan2(depthKernel[2], shadowZ));\n\tvec2 uv = (vec2(dirX.w, dirY.w) / abs(majorAxisLength)) * 0.5;\n\tvec2 fractionalCoord = fract( uv * shadowParams.x );\n\tshadowKernel[0] = mix(shadowKernel[0], shadowKernel[1], fractionalCoord.x);\n\tshadowKernel[1] = mix(shadowKernel[1], shadowKernel[2], fractionalCoord.x);\n\tvec4 shadowValues;\n\tshadowValues.x = mix(shadowKernel[0][0], shadowKernel[0][1], fractionalCoord.y);\n\tshadowValues.y = mix(shadowKernel[0][1], shadowKernel[0][2], fractionalCoord.y);\n\tshadowValues.z = mix(shadowKernel[1][0], shadowKernel[1][1], fractionalCoord.y);\n\tshadowValues.w = mix(shadowKernel[1][1], shadowKernel[1][2], fractionalCoord.y);\n\treturn 1.0 - dot( shadowValues, vec4( 1.0 ) ) * 0.25;\n}\nfloat getShadowPointPCF3x3(samplerCube shadowMap, vec3 shadowCoord, vec4 shadowParams, vec3 lightDir) {\n\treturn _getShadowPoint(shadowMap, shadowParams, lightDir);\n}\n#endif\n",shadowStandardGL2PS:"\nfloat _getShadowPCF5x5(SHADOWMAP_ACCEPT(shadowMap), vec3 shadowCoord, vec3 shadowParams) {\n\tfloat z = shadowCoord.z;\n\tvec2 uv = shadowCoord.xy * shadowParams.x;\n\tfloat shadowMapSizeInv = 1.0 / shadowParams.x;\n\tvec2 base_uv = floor(uv + 0.5);\n\tfloat s = (uv.x + 0.5 - base_uv.x);\n\tfloat t = (uv.y + 0.5 - base_uv.y);\n\tbase_uv -= vec2(0.5);\n\tbase_uv *= shadowMapSizeInv;\n\tfloat uw0 = (4.0 - 3.0 * s);\n\tfloat uw1 = 7.0;\n\tfloat uw2 = (1.0 + 3.0 * s);\n\tfloat u0 = (3.0 - 2.0 * s) / uw0 - 2.0;\n\tfloat u1 = (3.0 + s) / uw1;\n\tfloat u2 = s / uw2 + 2.0;\n\tfloat vw0 = (4.0 - 3.0 * t);\n\tfloat vw1 = 7.0;\n\tfloat vw2 = (1.0 + 3.0 * t);\n\tfloat v0 = (3.0 - 2.0 * t) / vw0 - 2.0;\n\tfloat v1 = (3.0 + t) / vw1;\n\tfloat v2 = t / vw2 + 2.0;\n\tfloat sum = 0.0;\n\tu0 = u0 * shadowMapSizeInv + base_uv.x;\n\tv0 = v0 * shadowMapSizeInv + base_uv.y;\n\tu1 = u1 * shadowMapSizeInv + base_uv.x;\n\tv1 = v1 * shadowMapSizeInv + base_uv.y;\n\tu2 = u2 * shadowMapSizeInv + base_uv.x;\n\tv2 = v2 * shadowMapSizeInv + base_uv.y;\n\tsum += uw0 * vw0 * textureShadow(shadowMap, vec3(u0, v0, z));\n\tsum += uw1 * vw0 * textureShadow(shadowMap, vec3(u1, v0, z));\n\tsum += uw2 * vw0 * textureShadow(shadowMap, vec3(u2, v0, z));\n\tsum += uw0 * vw1 * textureShadow(shadowMap, vec3(u0, v1, z));\n\tsum += uw1 * vw1 * textureShadow(shadowMap, vec3(u1, v1, z));\n\tsum += uw2 * vw1 * textureShadow(shadowMap, vec3(u2, v1, z));\n\tsum += uw0 * vw2 * textureShadow(shadowMap, vec3(u0, v2, z));\n\tsum += uw1 * vw2 * textureShadow(shadowMap, vec3(u1, v2, z));\n\tsum += uw2 * vw2 * textureShadow(shadowMap, vec3(u2, v2, z));\n\tsum *= 1.0f / 144.0;\n\tsum = saturate(sum);\n\treturn sum;\n}\nfloat getShadowPCF5x5(SHADOWMAP_ACCEPT(shadowMap), vec3 shadowCoord, vec4 shadowParams) {\n\treturn _getShadowPCF5x5(SHADOWMAP_PASS(shadowMap), shadowCoord, shadowParams.xyz);\n}\nfloat getShadowSpotPCF5x5(SHADOWMAP_ACCEPT(shadowMap), vec3 shadowCoord, vec4 shadowParams) {\n\treturn _getShadowPCF5x5(SHADOWMAP_PASS(shadowMap), shadowCoord, shadowParams.xyz);\n}\n",shadowVSM8PS:"\nfloat calculateVSM8(vec3 moments, float Z, float vsmBias) {\n\tfloat VSMBias = vsmBias;\n\tfloat depthScale = VSMBias * Z;\n\tfloat minVariance1 = depthScale * depthScale;\n\treturn chebyshevUpperBound(moments.xy, Z, minVariance1, 0.1);\n}\nfloat decodeFloatRG(vec2 rg) {\n\treturn rg.y*(1.0/255.0) + rg.x;\n}\nfloat VSM8(TEXTURE_ACCEPT(tex), vec2 texCoords, float resolution, float Z, float vsmBias, float exponent) {\n\tvec4 c = texture2D(tex, texCoords);\n\tvec3 moments = vec3(decodeFloatRG(c.xy), decodeFloatRG(c.zw), 0.0);\n\treturn calculateVSM8(moments, Z, vsmBias);\n}\nfloat getShadowVSM8(TEXTURE_ACCEPT(shadowMap), vec3 shadowCoord, vec4 shadowParams, float exponent, vec3 lightDir) {\n\treturn VSM8(TEXTURE_PASS(shadowMap), shadowCoord.xy, shadowParams.x, shadowCoord.z, shadowParams.y, 0.0);\n}\nfloat getShadowSpotVSM8(TEXTURE_ACCEPT(shadowMap), vec3 shadowCoord, vec4 shadowParams, float exponent, vec3 lightDir) {\n\treturn VSM8(TEXTURE_PASS(shadowMap), shadowCoord.xy, shadowParams.x, length(lightDir) * shadowParams.w + shadowParams.z, shadowParams.y, 0.0);\n}\n",shadowVSM_commonPS:"\nfloat linstep(float a, float b, float v) {\n\treturn saturate((v - a) / (b - a));\n}\nfloat reduceLightBleeding(float pMax, float amount) {\n   return linstep(amount, 1.0, pMax);\n}\nfloat chebyshevUpperBound(vec2 moments, float mean, float minVariance, float lightBleedingReduction) {\n\tfloat variance = moments.y - (moments.x * moments.x);\n\tvariance = max(variance, minVariance);\n\tfloat d = mean - moments.x;\n\tfloat pMax = variance / (variance + (d * d));\n\tpMax = reduceLightBleeding(pMax, lightBleedingReduction);\n\treturn (mean <= moments.x ? 1.0 : pMax);\n}\nfloat calculateEVSM(vec3 moments, float Z, float vsmBias, float exponent) {\n\tZ = 2.0 * Z - 1.0;\n\tfloat warpedDepth = exp(exponent * Z);\n\tmoments.xy += vec2(warpedDepth, warpedDepth*warpedDepth) * (1.0 - moments.z);\n\tfloat VSMBias = vsmBias;\n\tfloat depthScale = VSMBias * exponent * warpedDepth;\n\tfloat minVariance1 = depthScale * depthScale;\n\treturn chebyshevUpperBound(moments.xy, warpedDepth, minVariance1, 0.1);\n}\n",skinBatchConstVS:"\nattribute float vertex_boneIndices;\nuniform vec4 matrix_pose[BONE_LIMIT * 3];\nmat4 getBoneMatrix(const in float i) {\n\tvec4 v1 = matrix_pose[int(3.0 * i)];\n\tvec4 v2 = matrix_pose[int(3.0 * i + 1.0)];\n\tvec4 v3 = matrix_pose[int(3.0 * i + 2.0)];\n\treturn mat4(\n\t\tv1.x, v2.x, v3.x, 0,\n\t\tv1.y, v2.y, v3.y, 0,\n\t\tv1.z, v2.z, v3.z, 0,\n\t\tv1.w, v2.w, v3.w, 1\n\t);\n}\n",skinBatchTexVS:"\nattribute float vertex_boneIndices;\nuniform highp sampler2D texture_poseMap;\nuniform vec4 texture_poseMapSize;\nmat4 getBoneMatrix(const in float i) {\n\tfloat j = i * 3.0;\n\tfloat dx = texture_poseMapSize.z;\n\tfloat dy = texture_poseMapSize.w;\n\tfloat y = floor(j * dx);\n\tfloat x = j - (y * texture_poseMapSize.x);\n\ty = dy * (y + 0.5);\n\tvec4 v1 = texture2D(texture_poseMap, vec2(dx * (x + 0.5), y));\n\tvec4 v2 = texture2D(texture_poseMap, vec2(dx * (x + 1.5), y));\n\tvec4 v3 = texture2D(texture_poseMap, vec2(dx * (x + 2.5), y));\n\treturn mat4(\n\t\tv1.x, v2.x, v3.x, 0,\n\t\tv1.y, v2.y, v3.y, 0,\n\t\tv1.z, v2.z, v3.z, 0,\n\t\tv1.w, v2.w, v3.w, 1\n\t);\n}\n",skinConstVS:"\nattribute vec4 vertex_boneWeights;\nattribute vec4 vertex_boneIndices;\nuniform vec4 matrix_pose[BONE_LIMIT * 3];\nvoid getBoneMatrix(const in float i, out vec4 v1, out vec4 v2, out vec4 v3) {\n\tv1 = matrix_pose[int(3.0 * i)];\n\tv2 = matrix_pose[int(3.0 * i + 1.0)];\n\tv3 = matrix_pose[int(3.0 * i + 2.0)];\n}\nmat4 getSkinMatrix(const in vec4 indices, const in vec4 weights) {\n\tvec4 a1, a2, a3;\n\tgetBoneMatrix(indices.x, a1, a2, a3);\n\tvec4 b1, b2, b3;\n\tgetBoneMatrix(indices.y, b1, b2, b3);\n\tvec4 c1, c2, c3;\n\tgetBoneMatrix(indices.z, c1, c2, c3);\n\tvec4 d1, d2, d3;\n\tgetBoneMatrix(indices.w, d1, d2, d3);\n\tvec4 v1 = a1 * weights.x + b1 * weights.y + c1 * weights.z + d1 * weights.w;\n\tvec4 v2 = a2 * weights.x + b2 * weights.y + c2 * weights.z + d2 * weights.w;\n\tvec4 v3 = a3 * weights.x + b3 * weights.y + c3 * weights.z + d3 * weights.w;\n\tfloat one = dot(weights, vec4(1.0));\n\treturn mat4(\n\t\tv1.x, v2.x, v3.x, 0,\n\t\tv1.y, v2.y, v3.y, 0,\n\t\tv1.z, v2.z, v3.z, 0,\n\t\tv1.w, v2.w, v3.w, one\n\t);\n}\n",skinTexVS:"\nattribute vec4 vertex_boneWeights;\nattribute vec4 vertex_boneIndices;\nuniform highp sampler2D texture_poseMap;\nuniform vec4 texture_poseMapSize;\nvoid getBoneMatrix(const in float index, out vec4 v1, out vec4 v2, out vec4 v3) {\n\tfloat i = float(index);\n\tfloat j = i * 3.0;\n\tfloat dx = texture_poseMapSize.z;\n\tfloat dy = texture_poseMapSize.w;\n\t\n\tfloat y = floor(j * dx);\n\tfloat x = j - (y * texture_poseMapSize.x);\n\ty = dy * (y + 0.5);\n\tv1 = texture2D(texture_poseMap, vec2(dx * (x + 0.5), y));\n\tv2 = texture2D(texture_poseMap, vec2(dx * (x + 1.5), y));\n\tv3 = texture2D(texture_poseMap, vec2(dx * (x + 2.5), y));\n}\nmat4 getSkinMatrix(const in vec4 indices, const in vec4 weights) {\n\tvec4 a1, a2, a3;\n\tgetBoneMatrix(indices.x, a1, a2, a3);\n\tvec4 b1, b2, b3;\n\tgetBoneMatrix(indices.y, b1, b2, b3);\n\tvec4 c1, c2, c3;\n\tgetBoneMatrix(indices.z, c1, c2, c3);\n\tvec4 d1, d2, d3;\n\tgetBoneMatrix(indices.w, d1, d2, d3);\n\tvec4 v1 = a1 * weights.x + b1 * weights.y + c1 * weights.z + d1 * weights.w;\n\tvec4 v2 = a2 * weights.x + b2 * weights.y + c2 * weights.z + d2 * weights.w;\n\tvec4 v3 = a3 * weights.x + b3 * weights.y + c3 * weights.z + d3 * weights.w;\n\tfloat one = dot(weights, vec4(1.0));\n\treturn mat4(\n\t\tv1.x, v2.x, v3.x, 0,\n\t\tv1.y, v2.y, v3.y, 0,\n\t\tv1.z, v2.z, v3.z, 0,\n\t\tv1.w, v2.w, v3.w, one\n\t);\n}\n",skyboxEnvPS:"\nvarying vec3 vViewDir;\nuniform sampler2D texture_envAtlas;\nuniform float mipLevel;\nvoid main(void) {\n\tvec3 dir = vViewDir * vec3(-1.0, 1.0, 1.0);\n\tvec2 uv = toSphericalUv(normalize(dir));\n\tvec3 linear = $DECODE(texture2D(texture_envAtlas, mapRoughnessUv(uv, mipLevel)));\n\tgl_FragColor = vec4(gammaCorrectOutput(toneMap(processEnvironment(linear))), 1.0);\n}\n",skyboxHDRPS:"\nvarying vec3 vViewDir;\nuniform samplerCube texture_cubeMap;\nvoid main(void) {\n\tvec3 dir=vViewDir;\n\tdir.x *= -1.0;\n\tvec3 linear = $DECODE(textureCube(texture_cubeMap, fixSeamsStatic(dir, $FIXCONST)));\n\tgl_FragColor = vec4(gammaCorrectOutput(toneMap(processEnvironment(linear))), 1.0);\n}\n",skyboxVS:"\nattribute vec3 aPosition;\n#ifndef VIEWMATRIX\n#define VIEWMATRIX\nuniform mat4 matrix_view;\n#endif\nuniform mat4 matrix_projectionSkybox;\nuniform mat3 cubeMapRotationMatrix;\nvarying vec3 vViewDir;\nvoid main(void) {\n\tmat4 view = matrix_view;\n\tview[3][0] = view[3][1] = view[3][2] = 0.0;\n\tgl_Position = matrix_projectionSkybox * view * vec4(aPosition, 1.0);\n\tgl_Position.z = gl_Position.w - 0.00001;\n\tvViewDir = aPosition * cubeMapRotationMatrix;\n}\n",specularPS:"\n#ifdef MAPCOLOR\nuniform vec3 material_specular;\n#endif\nvoid getSpecularity() {\n\tvec3 specularColor = vec3(1,1,1);\n\t#ifdef MAPCOLOR\n\tspecularColor *= material_specular;\n\t#endif\n\t#ifdef MAPTEXTURE\n\tspecularColor *= $DECODE(texture2DBias($SAMPLER, $UV, textureBias)).$CH;\n\t#endif\n\t#ifdef MAPVERTEX\n\tspecularColor *= saturate(vVertexColor.$VC);\n\t#endif\n\tdSpecularity = specularColor;\n}\n",sphericalPS:"\nconst float PI = 3.141592653589793;\nvec2 toSpherical(vec3 dir) {\n\treturn vec2(dir.xz == vec2(0.0) ? 0.0 : atan(dir.x, dir.z), asin(dir.y));\n}\nvec2 toSphericalUv(vec3 dir) {\n\tvec2 uv = toSpherical(dir) / vec2(PI * 2.0, PI) + 0.5;\n\treturn vec2(uv.x, 1.0 - uv.y);\n}\n",specularityFactorPS:"\n#ifdef MAPFLOAT\nuniform float material_specularityFactor;\n#endif\nvoid getSpecularityFactor() {\n\tfloat specularityFactor = 1.0;\n\t#ifdef MAPFLOAT\n\tspecularityFactor *= material_specularityFactor;\n\t#endif\n\t#ifdef MAPTEXTURE\n\tspecularityFactor *= texture2DBias($SAMPLER, $UV, textureBias).$CH;\n\t#endif\n\t#ifdef MAPVERTEX\n\tspecularityFactor *= saturate(vVertexColor.$VC);\n\t#endif\n\tdSpecularityFactor = specularityFactor;\n}\n",spotPS:"\nfloat getSpotEffect(vec3 lightSpotDir, float lightInnerConeAngle, float lightOuterConeAngle, vec3 lightDirNorm) {\n\tfloat cosAngle = dot(lightDirNorm, lightSpotDir);\n\treturn smoothstep(lightOuterConeAngle, lightInnerConeAngle, cosAngle);\n}\n",startPS:"\nvoid main(void) {\n\tdReflection = vec4(0);\n\t#ifdef LIT_CLEARCOAT\n\tccSpecularLight = vec3(0);\n\tccReflection = vec3(0);\n\t#endif\n",startVS:"\nvoid main(void) {\n\tgl_Position = getPosition();\n",startNineSlicedPS:"\n\tnineSlicedUv = vUv0;\n\tnineSlicedUv.y = 1.0 - nineSlicedUv.y;\n",startNineSlicedTiledPS:"\n\tvec2 tileMask = step(vMask, vec2(0.99999));\n\tvec2 tileSize = 0.5 * (innerOffset.xy + innerOffset.zw);\n\tvec2 tileScale = vec2(1.0) / (vec2(1.0) - tileSize);\n\tvec2 clampedUv = mix(innerOffset.xy * 0.5, vec2(1.0) - innerOffset.zw * 0.5, fract((vTiledUv - tileSize) * tileScale));\n\tclampedUv = clampedUv * atlasRect.zw + atlasRect.xy;\n\tnineSlicedUv = vUv0 * tileMask + clampedUv * (vec2(1.0) - tileMask);\n\tnineSlicedUv.y = 1.0 - nineSlicedUv.y;\n\t\n",storeEVSMPS:"\nfloat exponent = VSM_EXPONENT;\ndepth = 2.0 * depth - 1.0;\ndepth =  exp(exponent * depth);\ngl_FragColor = vec4(depth, depth*depth, 1.0, 1.0);\n",tangentBinormalVS:"\nvec3 getTangent() {\n\treturn normalize(dNormalMatrix * vertex_tangent.xyz);\n}\nvec3 getBinormal() {\n\treturn cross(vNormalW, vTangentW) * vertex_tangent.w;\n}\n",TBNPS:"\nvoid getTBN(vec3 tangent, vec3 binormal, vec3 normal) {\n\tdTBN = mat3(normalize(tangent), normalize(binormal), normalize(normal));\n}\n",TBNderivativePS:"\nuniform float tbnBasis;\nvoid getTBN(vec3 tangent, vec3 binormal, vec3 normal) {\n\tvec2 uv = $UV;\n\tvec3 dp1 = dFdx( vPositionW );\n\tvec3 dp2 = dFdy( vPositionW );\n\tvec2 duv1 = dFdx( uv );\n\tvec2 duv2 = dFdy( uv );\n\tvec3 dp2perp = cross( dp2, normal );\n\tvec3 dp1perp = cross( normal, dp1 );\n\tvec3 T = dp2perp * duv1.x + dp1perp * duv2.x;\n\tvec3 B = dp2perp * duv1.y + dp1perp * duv2.y;\n\tfloat denom = max( dot(T,T), dot(B,B) );\n\tfloat invmax = (denom == 0.0) ? 0.0 : tbnBasis / sqrt( denom );\n\tdTBN = mat3(T * invmax, -B * invmax, normal );\n}\n",TBNfastPS:"\nvoid getTBN(vec3 tangent, vec3 binormal, vec3 normal) {\n\tdTBN = mat3(tangent, binormal, normal);\n}\n",TBNObjectSpacePS:"\nvoid getTBN(vec3 tangent, vec3 binormal, vec3 normal) {\n\tvec3 B = cross(normal, vObjectSpaceUpW);\n\tvec3 T = cross(normal, B);\n\tif (dot(B,B)==0.0)\n\t{\n\t\tfloat major=max(max(normal.x, normal.y), normal.z);\n\t\tif (normal.x == major)\n\t\t{\n\t\t\tB=cross(normal, vec3(0,1,0));\n\t\t\tT=cross(normal, B);\n\t\t}\n\t\telse if (normal.y == major)\n\t\t{\n\t\t\tB=cross(normal, vec3(0,0,1));\n\t\t\tT=cross(normal, B);\n\t\t}\n\t\telse if (normal.z == major)\n\t\t{\n\t\t\tB=cross(normal, vec3(1,0,0));\n\t\t\tT=cross(normal, B);\n\t\t}\n\t}\n\tdTBN = mat3(normalize(T), normalize(B), normalize(normal));\n}\n",textureSamplePS:"\nvec4 texture2DSRGB(sampler2D tex, vec2 uv) {\n\treturn gammaCorrectInput(texture2D(tex, uv));\n}\nvec4 texture2DSRGB(sampler2D tex, vec2 uv, float bias) {\n\treturn gammaCorrectInput(texture2D(tex, uv, bias));\n}\nvec3 texture2DRGBM(sampler2D tex, vec2 uv) {\n\treturn decodeRGBM(texture2D(tex, uv));\n}\nvec3 texture2DRGBM(sampler2D tex, vec2 uv, float bias) {\n\treturn decodeRGBM(texture2D(tex, uv, bias));\n}\nvec3 texture2DRGBE(sampler2D tex, vec2 uv) {\n\treturn decodeRGBM(texture2D(tex, uv));\n}\nvec3 texture2DRGBE(sampler2D tex, vec2 uv, float bias) {\n\treturn decodeRGBM(texture2D(tex, uv, bias));\n}\n",thicknessPS:"\n#ifdef MAPFLOAT\nuniform float material_thickness;\n#endif\nvoid getThickness() {\n\tdThickness = 1.0;\n\t#ifdef MAPFLOAT\n\tdThickness *= material_thickness;\n\t#endif\n\t#ifdef MAPTEXTURE\n\tdThickness *= texture2DBias($SAMPLER, $UV, textureBias).$CH;\n\t#endif\n\t#ifdef MAPVERTEX\n\tdThickness *= saturate(vVertexColor.$VC);\n\t#endif\n}\n",tonemappingAcesPS:"\nuniform float exposure;\nvec3 toneMap(vec3 color) {\n\tfloat tA = 2.51;\n\tfloat tB = 0.03;\n\tfloat tC = 2.43;\n\tfloat tD = 0.59;\n\tfloat tE = 0.14;\n\tvec3 x = color * exposure;\n\treturn (x*(tA*x+tB))/(x*(tC*x+tD)+tE);\n}\n",tonemappingAces2PS:"\nuniform float exposure;\nconst mat3 ACESInputMat = mat3(\n\t0.59719, 0.35458, 0.04823,\n\t0.07600, 0.90834, 0.01566,\n\t0.02840, 0.13383, 0.83777\n);\nconst mat3 ACESOutputMat = mat3(\n\t 1.60475, -0.53108, -0.07367,\n\t-0.10208,  1.10813, -0.00605,\n\t-0.00327, -0.07276,  1.07602\n);\nvec3 RRTAndODTFit(vec3 v) {\n\tvec3 a = v * (v + 0.0245786) - 0.000090537;\n\tvec3 b = v * (0.983729 * v + 0.4329510) + 0.238081;\n\treturn a / b;\n}\nvec3 toneMap(vec3 color) {\n\tcolor *= exposure / 0.6;\n\tcolor = color * ACESInputMat;\n\tcolor = RRTAndODTFit(color);\n\tcolor = color * ACESOutputMat;\n\tcolor = clamp(color, 0.0, 1.0);\n\treturn color;\n}\n",tonemappingFilmicPS:"\nconst float A =  0.15;\nconst float B =  0.50;\nconst float C =  0.10;\nconst float D =  0.20;\nconst float E =  0.02;\nconst float F =  0.30;\nconst float W =  11.2;\nuniform float exposure;\nvec3 uncharted2Tonemap(vec3 x) {\n   return ((x*(A*x+C*B)+D*E)/(x*(A*x+B)+D*F))-E/F;\n}\nvec3 toneMap(vec3 color) {\n\tcolor = uncharted2Tonemap(color * exposure);\n\tvec3 whiteScale = 1.0 / uncharted2Tonemap(vec3(W,W,W));\n\tcolor = color * whiteScale;\n\treturn color;\n}\n",tonemappingHejlPS:"\nuniform float exposure;\nvec3 toneMap(vec3 color) {\n\tcolor *= exposure;\n\tconst float  A = 0.22, B = 0.3, C = .1, D = 0.2, E = .01, F = 0.3;\n\tconst float Scl = 1.25;\n\tvec3 h = max( vec3(0.0), color - vec3(0.004) );\n\treturn (h*((Scl*A)*h+Scl*vec3(C*B,C*B,C*B))+Scl*vec3(D*E,D*E,D*E)) / (h*(A*h+vec3(B,B,B))+vec3(D*F,D*F,D*F)) - Scl*vec3(E/F,E/F,E/F);\n}\n",tonemappingLinearPS:"\nuniform float exposure;\nvec3 toneMap(vec3 color) {\n\treturn color * exposure;\n}\n",tonemappingNonePS:"\nvec3 toneMap(vec3 color) {\n\treturn color;\n}\n",transformVS:"\n#ifdef PIXELSNAP\nuniform vec4 uScreenSize;\n#endif\n#ifdef SCREENSPACE\nuniform float projectionFlipY;\n#endif\n#ifdef MORPHING\nuniform vec4 morph_weights_a;\nuniform vec4 morph_weights_b;\n#endif\n#ifdef MORPHING_TEXTURE_BASED\n\tuniform vec4 morph_tex_params;\n\t#ifdef WEBGPU\n\t\tivec2 getTextureMorphCoords() {\n\t\t\tivec2 textureSize = ivec2(morph_tex_params.xy);\n\t\t\tint morphGridV = int(morph_vertex_id / textureSize.x);\n\t\t\tint morphGridU = int(morph_vertex_id - (morphGridV * textureSize.x));\n\t\t\tmorphGridV = textureSize.y - morphGridV - 1;\n\t\t\treturn ivec2(morphGridU, morphGridV);\n\t\t}\n\t#else\n\t\tvec2 getTextureMorphCoords() {\n\t\t\tvec2 textureSize = morph_tex_params.xy;\n\t\t\tvec2 invTextureSize = morph_tex_params.zw;\n\t\t\tfloat morphGridV = floor(morph_vertex_id * invTextureSize.x);\n\t\t\tfloat morphGridU = morph_vertex_id - (morphGridV * textureSize.x);\n\t\t\treturn vec2(morphGridU, morphGridV) * invTextureSize + (0.5 * invTextureSize);\n\t\t}\n\t#endif\n#endif\n#ifdef MORPHING_TEXTURE_BASED_POSITION\nuniform highp sampler2D morphPositionTex;\n#endif\nmat4 getModelMatrix() {\n\t#ifdef DYNAMICBATCH\n\treturn getBoneMatrix(vertex_boneIndices);\n\t#elif defined(SKIN)\n\treturn matrix_model * getSkinMatrix(vertex_boneIndices, vertex_boneWeights);\n\t#elif defined(INSTANCING)\n\treturn mat4(instance_line1, instance_line2, instance_line3, instance_line4);\n\t#else\n\treturn matrix_model;\n\t#endif\n}\nvec4 getPosition() {\n\tdModelMatrix = getModelMatrix();\n\tvec3 localPos = vertex_position;\n\t#ifdef NINESLICED\n\tlocalPos.xz *= outerScale;\n\tvec2 positiveUnitOffset = clamp(vertex_position.xz, vec2(0.0), vec2(1.0));\n\tvec2 negativeUnitOffset = clamp(-vertex_position.xz, vec2(0.0), vec2(1.0));\n\tlocalPos.xz += (-positiveUnitOffset * innerOffset.xy + negativeUnitOffset * innerOffset.zw) * vertex_texCoord0.xy;\n\tvTiledUv = (localPos.xz - outerScale + innerOffset.xy) * -0.5 + 1.0;\n\tlocalPos.xz *= -0.5;\n\tlocalPos = localPos.xzy;\n\t#endif\n\t#ifdef MORPHING\n\t#ifdef MORPHING_POS03\n\tlocalPos.xyz += morph_weights_a[0] * morph_pos0;\n\tlocalPos.xyz += morph_weights_a[1] * morph_pos1;\n\tlocalPos.xyz += morph_weights_a[2] * morph_pos2;\n\tlocalPos.xyz += morph_weights_a[3] * morph_pos3;\n\t#endif\n\t#ifdef MORPHING_POS47\n\tlocalPos.xyz += morph_weights_b[0] * morph_pos4;\n\tlocalPos.xyz += morph_weights_b[1] * morph_pos5;\n\tlocalPos.xyz += morph_weights_b[2] * morph_pos6;\n\tlocalPos.xyz += morph_weights_b[3] * morph_pos7;\n\t#endif\n\t#endif\n\t#ifdef MORPHING_TEXTURE_BASED_POSITION\n\t\t#ifdef WEBGPU\n\t\t\tivec2 morphUV = getTextureMorphCoords();\n\t\t\tvec3 morphPos = texelFetch(morphPositionTex, ivec2(morphUV), 0).xyz;\n\t\t#else\n\t\t\tvec2 morphUV = getTextureMorphCoords();\n\t\t\tvec3 morphPos = texture2D(morphPositionTex, morphUV).xyz;\n\t\t#endif\n\t\tlocalPos += morphPos;\n\t#endif\n\tvec4 posW = dModelMatrix * vec4(localPos, 1.0);\n\t#ifdef SCREENSPACE\n\tposW.zw = vec2(0.0, 1.0);\n\t#endif\n\tdPositionW = posW.xyz;\n\tvec4 screenPos;\n\t#ifdef UV1LAYOUT\n\tscreenPos = vec4(vertex_texCoord1.xy * 2.0 - 1.0, 0.5, 1);\n\t#else\n\t#ifdef SCREENSPACE\n\tscreenPos = posW;\n\tscreenPos.y *= projectionFlipY;\n\t#else\n\tscreenPos = matrix_viewProjection * posW;\n\t#endif\n\t#ifdef PIXELSNAP\n\tscreenPos.xy = (screenPos.xy * 0.5) + 0.5;\n\tscreenPos.xy *= uScreenSize.xy;\n\tscreenPos.xy = floor(screenPos.xy);\n\tscreenPos.xy *= uScreenSize.zw;\n\tscreenPos.xy = (screenPos.xy * 2.0) - 1.0;\n\t#endif\n\t#endif\n\treturn screenPos;\n}\nvec3 getWorldPosition() {\n\treturn dPositionW;\n}\n",transformDeclVS:"\nattribute vec3 vertex_position;\nuniform mat4 matrix_model;\nuniform mat4 matrix_viewProjection;\nvec3 dPositionW;\nmat4 dModelMatrix;\n",transmissionPS:"\n#ifdef MAPFLOAT\nuniform float material_refraction;\n#endif\nvoid getRefraction() {\n\tfloat refraction = 1.0;\n\t#ifdef MAPFLOAT\n\trefraction = material_refraction;\n\t#endif\n\t#ifdef MAPTEXTURE\n\trefraction *= texture2DBias($SAMPLER, $UV, textureBias).$CH;\n\t#endif\n\t#ifdef MAPVERTEX\n\trefraction *= saturate(vVertexColor.$VC);\n\t#endif\n\tdTransmission = refraction;\n}\n",uv0VS:"\n#ifdef NINESLICED\nvec2 getUv0() {\n\tvec2 uv = vertex_position.xz;\n\tvec2 positiveUnitOffset = clamp(vertex_position.xz, vec2(0.0), vec2(1.0));\n\tvec2 negativeUnitOffset = clamp(-vertex_position.xz, vec2(0.0), vec2(1.0));\n\tuv += (-positiveUnitOffset * innerOffset.xy + negativeUnitOffset * innerOffset.zw) * vertex_texCoord0.xy;\n\tuv = uv * -0.5 + 0.5;\n\tuv = uv * atlasRect.zw + atlasRect.xy;\n\tvMask = vertex_texCoord0.xy;\n\treturn uv;\n}\n#else\nvec2 getUv0() {\n\treturn vertex_texCoord0;\n}\n#endif\n",uv1VS:"\nvec2 getUv1() {\n\treturn vertex_texCoord1;\n}\n",viewDirPS:"\nvoid getViewDir() {\n\tdViewDirW = normalize(view_position - vPositionW);\n}\n",viewNormalVS:"\n#ifndef VIEWMATRIX\n#define VIEWMATRIX\nuniform mat4 matrix_view;\n#endif\nvec3 getViewNormal() {\n\treturn mat3(matrix_view) * vNormalW;\n}\n",webgpuPS:Bl,webgpuVS:Nl},Pg=new xl;function Og(e){return Pg.get(e)}function Ig(e,t){Pg.get(e,(function(){return t}))}var Rg=function(){function e(){}return e.begin=function(){return"void main(void)\n{\n"},e.end=function(){return"}\n"},e.skinCode=function(e,t){return t||(t=Mg),e.supportsBoneTextures?t.skinTexVS:"#define BONE_LIMIT "+e.getBoneLimit()+"\n"+t.skinConstVS},e.fogCode=function(e,t){return t||(t=Mg),"linear"===e?t.fogLinearPS?t.fogLinearPS:Mg.fogLinearPS:"exp"===e?t.fogExpPS?t.fogExpPS:Mg.fogExpPS:"exp2"===e?t.fogExp2PS?t.fogExp2PS:Mg.fogExp2PS:t.fogNonePS?t.fogNonePS:Mg.fogNonePS},e.gammaCode=function(e,t){return t||(t=Mg),e===Um||e===zm?t.gamma2_2PS?t.gamma2_2PS:Mg.gamma2_2PS:e===Vm?"#define HDR\n"+(t.gamma2_2PS?t.gamma2_2PS:Mg.gamma2_2PS):t.gamma1_0PS?t.gamma1_0PS:Mg.gamma1_0PS},e.tonemapCode=function(e,t){return t||(t=Mg),e===Gm?t.tonemappingFilmicPS?t.tonemappingFilmicPS:Mg.tonemappingFilmicPS:e===Hm?t.tonemappingLinearPS?t.tonemappingLinearPS:Mg.tonemappingLinearPS:e===Wm?t.tonemappingHejlPS?t.tonemappingHejlPS:Mg.tonemappingHejlPS:e===jm?t.tonemappingAcesPS?t.tonemappingAcesPS:Mg.tonemappingAcesPS:e===Xm?t.tonemappingAces2PS?t.tonemappingAces2PS:Mg.tonemappingAces2PS:t.tonemapingNonePS?t.tonemapingNonePS:Mg.tonemappingNonePS},e}();function Dg(e,t,n,i){return void 0===i&&(i=!1),new Qo(e,Vl.createDefinition(e,{name:t+"_"+n,vertexCode:Mg[t],fragmentCode:Mg[n],useTransformFeedback:i}))}function kg(e,t,n,i,a,s){void 0===s&&(s=!1);var r=Og(e),o=r.getCachedShader(i);return o||(o=new Qo(e,Vl.createDefinition(e,{name:i,vertexCode:t,fragmentCode:n,attributes:a,useTransformFeedback:s})),r.setCachedShader(i,o)),o}var Fg=function(e){function t(t,n){var i;return(i=e.call(this)||this).key=t,i.shaderDefinition=n,i}Z(t,e);var n=t.prototype;return n.generateKey=function(e){return this.key},n.createShaderDefinition=function(e,t){return this.shaderDefinition},t}(Rg);function Bg(e,t){var n,i=e.definition,a=(null!=(n=i.name)?n:"shader")+"-id-"+e.id,s=new Fg(a,i),r="shader",o=Og(e.device);o.register(r,s);var l=o.getProgram(r,{},t);return o.unregister(r),l}Mg.createShader=Dg,Mg.createShaderFromCode=kg;var Ng={type:Di,base:0,count:4,indexed:!1},Ug=new vt,zg=new vt,Vg=function(){function e(e){this.uniformBuffer=void 0,this.bindGroup=void 0;var t=e.device;if(this.shader=e,t.supportsUniformBuffers){var n=new Tg;this.shader=Bg(e,n);var i=this.shader.meshUniformBufferFormat;i&&(this.uniformBuffer=new sl(t,i,!1));var a=this.shader.meshBindGroupFormat;this.bindGroup=new $o(t,a,this.uniformBuffer)}}var t=e.prototype;return t.destroy=function(){var e,t;null==(e=this.uniformBuffer)||e.destroy(),this.uniformBuffer=null,null==(t=this.bindGroup)||t.destroy(),this.bindGroup=null},t.render=function(e,t){var n,i=this.shader.device;e&&(Ug.set(i.vx,i.vy,i.vw,i.vh),zg.set(i.sx,i.sy,i.sw,i.sh),t=null!=(n=t)?n:e,i.setViewport(e.x,e.y,e.z,e.w),i.setScissor(t.x,t.y,t.z,t.w)),i.setVertexBuffer(i.quadVertexBuffer,0);var a=this.shader;if(i.setShader(a),i.supportsUniformBuffers){var s,r=this.bindGroup;null==(s=r.defaultUniformBuffer)||s.update(),r.update(),i.setBindGroup(ks,r)}i.draw(Ng),e&&(i.setViewport(Ug.x,Ug.y,Ug.z,Ug.w),i.setScissor(zg.x,zg.y,zg.z,zg.w))},e}(),Hg=new vt;function Gg(e,t,n,i,a){e.setCullMode(An),e.setDepthState(xr.NODEPTH),e.setStencilState(null,null);var s=new Vg(n);i||((i=Hg).x=0,i.y=0,i.z=t?t.width:e.width,i.w=t?t.height:e.height);var r=new Eg(e,(function(){s.render(i,a)}));r.init(t),r.colorOps.clear=!1,r.depthStencilOps.clearDepth=!1,e.isWebGPU&&null===t&&e.samples>1&&(r.colorOps.store=!0),r.render(),s.destroy()}function Wg(e,t,n,i,a,s){i=i||e.getCopyShader(),e.constantTexSource.setValue(t),Gg(e,n,i,a,s)}var jg=new xl,Xg=function(){function e(e,t,n){void 0===n&&(n={}),this.index=void 0,this.name=void 0,this.shaderDefine=void 0,this.name=e,this.index=t,Object.assign(this,n),this.initShaderDefines()}return e.prototype.initShaderDefines=function(){var e;this.isShadow?e="SHADOW":this.isForward?e="FORWARD":this.index===Sf?e="DEPTH":this.index===Ef&&(e="PICK");var t=e?"#define "+e+"_PASS\n":"",n="#define "+this.name.toUpperCase()+"_PASS\n";this.shaderDefines=t+n},e}(),Yg=function(){function e(){var e=this;this.passesNamed=new Map,this.passesIndexed=[],this.nextIndex=0;var t=function(t,n,i){e.allocate(t,i)};t("forward",xf,{isForward:!0}),t("forward_hdr",Cf,{isForward:!0}),t("depth"),t("pick"),t("shadow")}e.get=function(t){return jg.get(t,(function(){return new e}))};var t=e.prototype;return t.allocate=function(e,t){var n=this.passesNamed.get(e);return void 0===n&&(n=new Xg(e,this.nextIndex,t),this.passesNamed.set(n.name,n),this.passesIndexed[n.index]=n,this.nextIndex++),n},t.getByIndex=function(e){return this.passesIndexed[e]},t.getByName=function(e){return this.passesNamed.get(e)},e}(),qg=function(e){function t(){return e.apply(this,arguments)||this}Z(t,e);var n=t.prototype;return n.generateKey=function(e){var t="basic";return e.fog&&(t+="_fog"),e.alphaTest&&(t+="_atst"),e.vertexColors&&(t+="_vcol"),e.diffuseMap&&(t+="_diff"),e.skin&&(t+="_skin"),e.screenSpace&&(t+="_ss"),e.useInstancing&&(t+="_inst"),e.useMorphPosition&&(t+="_morphp"),e.useMorphNormal&&(t+="_morphn"),e.useMorphTextureBased&&(t+="_morpht"),t+="_"+e.pass},n.createShaderDefinition=function(e,t){var n={vertex_position:Fi};t.skin&&(n.vertex_boneWeights=Ui,n.vertex_boneIndices=zi),t.vertexColors&&(n.vertex_color=Vi),t.diffuseMap&&(n.vertex_texCoord0=Gi);var i=Yg.get(e).getByIndex(t.pass).shaderDefines,a=i;a+=Mg.transformDeclVS,t.skin?(a+=Rg.skinCode(e),a+=Mg.transformSkinnedVS):a+=Mg.transformVS,t.vertexColors&&(a+="attribute vec4 vertex_color;\n",a+="varying vec4 vColor;\n"),t.diffuseMap&&(a+="attribute vec2 vertex_texCoord0;\n",a+="varying vec2 vUv0;\n"),t.pass===Sf&&(a+="varying float vDepth;\n",a+="#ifndef VIEWMATRIX\n",a+="#define VIEWMATRIX\n",a+="uniform mat4 matrix_view;\n",a+="#endif\n",a+="#ifndef CAMERAPLANES\n",a+="#define CAMERAPLANES\n",a+="uniform vec4 camera_params;\n\n",a+="#endif\n"),a+=Rg.begin(),a+="   gl_Position = getPosition();\n",t.pass===Sf&&(a+="    vDepth = -(matrix_view * vec4(getWorldPosition(),1.0)).z * camera_params.x;\n"),t.vertexColors&&(a+="    vColor = vertex_color;\n"),t.diffuseMap&&(a+="    vUv0 = vertex_texCoord0;\n"),a+=Rg.end();var s=i;return t.vertexColors?s+="varying vec4 vColor;\n":s+="uniform vec4 uColor;\n",t.diffuseMap&&(s+="varying vec2 vUv0;\n",s+="uniform sampler2D texture_diffuseMap;\n"),t.fog&&(s+=Rg.fogCode(t.fog)),t.alphaTest&&(s+=Mg.alphaTestPS),t.pass===Sf&&(s+="varying float vDepth;\n",s+=Mg.packDepthPS),s+=Rg.begin(),t.vertexColors?s+="    gl_FragColor = vColor;\n":s+="    gl_FragColor = uColor;\n",t.diffuseMap&&(s+="    gl_FragColor *= texture2D(texture_diffuseMap, vUv0);\n"),t.alphaTest&&(s+="   alphaTest(gl_FragColor.a);\n"),t.pass!==Ef&&(t.pass===Sf?s+="    gl_FragColor = packFloat(vDepth);\n":t.fog&&(s+="   glFragColor.rgb = addFog(gl_FragColor.rgb);\n")),s+=Rg.end(),Vl.createDefinition(e,{name:"BasicShader",attributes:n,vertexCode:a,fragmentCode:s})},t}(Rg),Kg=new qg,Zg=new xl;function Qg(e){return Zg.get(e)}function Jg(e,t){Zg.get(e,(function(){return t}))}var $g=[];$g[yu]={src:Zt,dst:Zt,op:pn},$g[bu]={src:Zt,dst:Kt,op:cn},$g[wu]={src:tn,dst:an,op:cn},$g[xu]={src:Zt,dst:an,op:cn},$g[_u]={src:Zt,dst:Zt,op:cn},$g[Su]={src:tn,dst:Zt,op:cn},$g[Eu]={src:$t,dst:Qt,op:cn},$g[Tu]={src:en,dst:Zt,op:cn},$g[Cu]={src:$t,dst:Kt,op:cn},$g[Au]={src:Zt,dst:Zt,op:dn},$g[Lu]={src:Zt,dst:Zt,op:un};var ev=0,tv=function(){function e(){this._shader=null,this.meshInstances=[],this.name="Untitled",this.userId="",this.id=ev++,this.variants=new Map,this.parameters={},this.alphaTest=0,this.alphaToCoverage=!1,this._blendState=new yr,this._depthState=new xr,this.cull=Ln,this.stencilFront=null,this.stencilBack=null,this.depthBias=0,this.slopeDepthBias=0,this._shaderVersion=0,this._scene=null,this.dirty=!0}var t=e.prototype;return t._updateTransparency=function(){for(var e=this.transparent,t=this.meshInstances,n=0;n<t.length;n++)t[n].transparent=e},t.copy=function(e){var t;return this.name=e.name,this._shader=e._shader,this.alphaTest=e.alphaTest,this.alphaToCoverage=e.alphaToCoverage,this._blendState.copy(e._blendState),this._depthState.copy(e._depthState),this.cull=e.cull,this.depthBias=e.depthBias,this.slopeDepthBias=e.slopeDepthBias,this.stencilFront=null==(t=e.stencilFront)?void 0:t.clone(),e.stencilBack&&(this.stencilBack=e.stencilFront===e.stencilBack?this.stencilFront:e.stencilBack.clone()),this},t.clone=function(){var e=new this.constructor;return e.copy(this)},t._updateMeshInstanceKeys=function(){for(var e=this.meshInstances,t=0;t<e.length;t++)e[t].updateKey()},t.updateUniforms=function(e,t){},t.getShaderVariant=function(e,t,n,i,a,s,r,o,l){var c=new Tg(r,o,l);return Bg(this._shader,c)},t.update=function(){this.dirty=!0,this._shader&&(this._shader.failed=!1)},t.clearParameters=function(){this.parameters={}},t.getParameters=function(){return this.parameters},t.clearVariants=function(){this.variants.clear();for(var e=this.meshInstances,t=e.length,n=0;n<t;n++)e[n].clearShaders()},t.getParameter=function(e){return this.parameters[e]},t.setParameter=function(e,t){if(void 0===t&&"object"==typeof e){var n=e;if(n.length){for(var i=0;i<n.length;i++)this.setParameter(n[i]);return}e=n.name,t=n.value}var a=this.parameters[e];a?a.data=t:this.parameters[e]={scopeId:null,data:t}},t.deleteParameter=function(e){this.parameters[e]&&delete this.parameters[e]},t.setParameters=function(e,t){var n=this.parameters;for(var i in void 0===t&&(t=n),t){var a=n[i];a&&(a.scopeId||(a.scopeId=e.scope.resolve(i)),a.scopeId.setValue(a.data))}},t.destroy=function(){this.variants.clear(),this._shader=null;for(var e=0;e<this.meshInstances.length;e++){var t=this.meshInstances[e];if(t.clearShaders(),t._material=null,t.mesh){var n=Qg(t.mesh.device);this!==n&&(t.material=n)}}this.meshInstances.length=0},t.addMeshInstanceRef=function(e){this.meshInstances.push(e)},t.removeMeshInstanceRef=function(e){var t=this.meshInstances,n=t.indexOf(e);-1!==n&&t.splice(n,1)},q(e,[{key:"redWrite",get:function(){return this._blendState.redWrite},set:function(e){this._blendState.redWrite=e}},{key:"greenWrite",get:function(){return this._blendState.greenWrite},set:function(e){this._blendState.greenWrite=e}},{key:"blueWrite",get:function(){return this._blendState.blueWrite},set:function(e){this._blendState.blueWrite=e}},{key:"alphaWrite",get:function(){return this._blendState.alphaWrite},set:function(e){this._blendState.alphaWrite=e}},{key:"shader",get:function(){return this._shader},set:function(e){this._shader=e}},{key:"transparent",get:function(){return this._blendState.blend}},{key:"blendState",get:function(){return this._blendState},set:function(e){this._blendState.copy(e),this._updateTransparency()}},{key:"blendType",get:function(){if(!this.transparent)return bu;for(var e=this._blendState,t=e.colorOp,n=e.colorSrcFactor,i=e.colorDstFactor,a=e.alphaOp,s=e.alphaSrcFactor,r=e.alphaDstFactor,o=0;o<$g.length;o++){var l=$g[o];if(l.src===n&&l.dst===i&&l.op===t&&l.src===s&&l.dst===r&&l.op===a)return o}return wu},set:function(e){var t=$g[e];this._blendState.setColorBlend(t.op,t.src,t.dst),this._blendState.setAlphaBlend(t.op,t.src,t.dst);var n=e!==bu;this._blendState.blend!==n&&(this._blendState.blend=n,this._updateTransparency()),this._updateMeshInstanceKeys()}},{key:"depthState",get:function(){return this._depthState},set:function(e){this._depthState.copy(e)}},{key:"depthTest",get:function(){return this._depthState.test},set:function(e){this._depthState.test=e}},{key:"depthFunc",get:function(){return this._depthState.func},set:function(e){this._depthState.func=e}},{key:"depthWrite",get:function(){return this._depthState.write},set:function(e){this._depthState.write=e}}]),e}(),nv=function(e){function t(){for(var t,n=arguments.length,i=new Array(n),a=0;a<n;a++)i[a]=arguments[a];return(t=e.call.apply(e,[this].concat(i))||this).color=new st(1,1,1,1),t.colorUniform=new Float32Array(4),t.colorMap=null,t.vertexColors=!1,t}Z(t,e);var n=t.prototype;return n.copy=function(t){return e.prototype.copy.call(this,t),this.color.copy(t.color),this.colorMap=t.colorMap,this.vertexColors=t.vertexColors,this},n.updateUniforms=function(e,t){this.clearParameters(),this.colorUniform[0]=this.color.r,this.colorUniform[1]=this.color.g,this.colorUniform[2]=this.color.b,this.colorUniform[3]=this.color.a,this.setParameter("uColor",this.colorUniform),this.colorMap&&this.setParameter("texture_diffuseMap",this.colorMap)},n.getShaderVariant=function(e,t,n,i,a,s,r,o,l){var c={skin:n&&0!=(n&Qm),screenSpace:n&&0!=(n&sf),useInstancing:n&&0!=(n&tf),useMorphPosition:n&&0!=(n&of),useMorphNormal:n&&0!=(n&lf),useMorphTextureBased:n&&0!=(n&cf),alphaTest:this.alphaTest>0,vertexColors:this.vertexColors,diffuseMap:!!this.colorMap,pass:a},h=new Tg(r,o,l),p=Og(e);return p.register("basic",Kg),p.getProgram("basic",c,h,this.userId)},t}(tv),iv=function(){function e(e,t,n){this._aabb=new Ot,this.origMeshInstances=void 0,this.meshInstance=null,this.dynamic=void 0,this.batchGroupId=void 0,this.origMeshInstances=e,this.dynamic=t,this.batchGroupId=n}var t=e.prototype;return t.destroy=function(e,t){this.meshInstance&&(this.removeFromLayers(e,t),this.meshInstance.destroy(),this.meshInstance=null)},t.addToLayers=function(e,t){for(var n=0;n<t.length;n++){var i=e.layers.getLayerById(t[n]);i&&i.addMeshInstances([this.meshInstance])}},t.removeFromLayers=function(e,t){for(var n=0;n<t.length;n++){var i=e.layers.getLayerById(t[n]);i&&i.removeMeshInstances([this.meshInstance])}},t.updateBoundingBox=function(){this._aabb.copy(this.origMeshInstances[0].aabb);for(var e=1;e<this.origMeshInstances.length;e++)this._aabb.add(this.origMeshInstances[e].aabb);this.meshInstance.aabb=this._aabb,this.meshInstance._aabbVer=0},e}(),av=function(e,t,n,i,a){void 0===a&&(a=[Uu]),this._ui=!1,this._sprite=!1,this._obj={model:[],element:[],sprite:[],render:[]},this.id=void 0,this.name=void 0,this.dynamic=void 0,this.maxAabbSize=void 0,this.layers=void 0,this.id=e,this.name=t,this.dynamic=n,this.maxAabbSize=i,this.layers=a};av.MODEL="model",av.ELEMENT="element",av.SPRITE="sprite",av.RENDER="render";var sv=new St,rv=function(){function e(e){this.bones=void 0,this._dirty=!0,this._rootBone=null,this._skinUpdateIndex=-1,this._updateBeforeCull=!0,e&&this.initSkin(e)}var t=e.prototype;return t.init=function(e,t){if(e.supportsBoneTextures){var n=3*t,i=Math.ceil(Math.sqrt(n));i=at.roundUp(i,3);var a=Math.ceil(n/i);this.boneTexture=new vl(e,{width:i,height:a,format:li,mipmaps:!1,minFilter:On,magFilter:On,name:"skin"}),this.matrixPalette=this.boneTexture.lock()}else this.matrixPalette=new Float32Array(12*t)},t.destroy=function(){this.boneTexture&&(this.boneTexture.destroy(),this.boneTexture=null)},t.resolve=function(e,t){this.rootBone=e;for(var n=this.skin,i=[],a=0;a<n.boneNames.length;a++){var s=n.boneNames[a],r=e.findByName(s);r||(r=t),i.push(r)}this.bones=i},t.initSkin=function(e){this.skin=e,this.bones=[];var t=e.inverseBindPose.length;this.init(e.device,t),this.matrices=[];for(var n=0;n<t;n++)this.matrices[n]=new St},t.uploadBones=function(e){e.supportsBoneTextures&&(this.boneTexture.lock(),this.boneTexture.unlock())},t._updateMatrices=function(e,t){if(this._skinUpdateIndex!==t){this._skinUpdateIndex=t,sv.copy(e.getWorldTransform()).invert();for(var n=this.bones.length-1;n>=0;n--)this.matrices[n].mulAffine2(sv,this.bones[n].getWorldTransform()),this.matrices[n].mulAffine2(this.matrices[n],this.skin.inverseBindPose[n])}},t.updateMatrices=function(e,t){this._updateBeforeCull&&this._updateMatrices(e,t)},t.updateMatrixPalette=function(e,t){this._updateMatrices(e,t);for(var n=this.matrixPalette,i=this.bones.length,a=0;a<i;a++){var s=this.matrices[a].data,r=12*a;n[r]=s[0],n[r+1]=s[4],n[r+2]=s[8],n[r+3]=s[12],n[r+4]=s[1],n[r+5]=s[5],n[r+6]=s[9],n[r+7]=s[13],n[r+8]=s[2],n[r+9]=s[6],n[r+10]=s[10],n[r+11]=s[14]}this.uploadBones(this.skin.device)},q(e,[{key:"rootBone",get:function(){return this._rootBone},set:function(e){this._rootBone=e}}]),e}(),ov=function(e){function t(t,n,i){var a;a=e.call(this)||this;var s=n.length;return a.init(t,s),a.device=t,a.rootNode=i,a.bones=n,a}Z(t,e);var n=t.prototype;return n.updateMatrices=function(e,t){},n.updateMatrixPalette=function(e,t){for(var n=this.matrixPalette,i=this.bones.length,a=0;a<i;a++){var s=this.bones[a].getWorldTransform().data,r=12*a;n[r]=s[0],n[r+1]=s[4],n[r+2]=s[8],n[r+3]=s[12],n[r+4]=s[1],n[r+5]=s[5],n[r+6]=s[9],n[r+7]=s[13],n[r+8]=s[2],n[r+9]=s[6],n[r+10]=s[10],n[r+11]=s[14]}this.uploadBones(this.device)},t}(rv),lv=new St,cv=new pt,hv=new Et,pv=new Et,dv=new pt,uv=new pt,mv=new St,fv=new Et,gv=new pt,vv=new St,yv=new Et,_v=new Et,wv=new St,bv=new pt,xv=new pt,Cv=function(e){function t(t){var n;return void 0===t&&(t="Untitled"),(n=e.call(this)||this).name=void 0,n.tags=new Xe(J(n)),n._labels={},n.localPosition=new pt,n.localRotation=new Et,n.localScale=new pt(1,1,1),n.localEulerAngles=new pt,n.position=new pt,n.rotation=new Et,n.eulerAngles=new pt,n._scale=null,n.localTransform=new St,n._dirtyLocal=!1,n._aabbVer=0,n._frozen=!1,n.worldTransform=new St,n._dirtyWorld=!1,n._worldScaleSign=0,n._normalMatrix=new ut,n._dirtyNormal=!0,n._right=null,n._up=null,n._forward=null,n._parent=null,n._children=[],n._graphDepth=0,n._enabled=!0,n._enabledInHierarchy=!1,n.scaleCompensation=!1,n.name=t,n}Z(t,e);var n=t.prototype;return n._notifyHierarchyStateChanged=function(e,t){e._onHierarchyStateChanged(t);for(var n=e._children,i=0,a=n.length;i<a;i++)n[i]._enabled&&this._notifyHierarchyStateChanged(n[i],t)},n._onHierarchyStateChanged=function(e){this._enabledInHierarchy=e,e&&!this._frozen&&this._unfreezeParentToRoot()},n._cloneInternal=function(e){e.name=this.name;var t=this.tags._list;e.tags.clear();for(var n=0;n<t.length;n++)e.tags.add(t[n]);e._labels=Object.assign({},this._labels),e.localPosition.copy(this.localPosition),e.localRotation.copy(this.localRotation),e.localScale.copy(this.localScale),e.localEulerAngles.copy(this.localEulerAngles),e.position.copy(this.position),e.rotation.copy(this.rotation),e.eulerAngles.copy(this.eulerAngles),e.localTransform.copy(this.localTransform),e._dirtyLocal=this._dirtyLocal,e.worldTransform.copy(this.worldTransform),e._dirtyWorld=this._dirtyWorld,e._dirtyNormal=this._dirtyNormal,e._aabbVer=this._aabbVer+1,e._enabled=this._enabled,e.scaleCompensation=this.scaleCompensation,e._enabledInHierarchy=!1},n.clone=function(){var e=new this.constructor;return this._cloneInternal(e),e},n.copy=function(e){return e._cloneInternal(this),this},n.destroy=function(){this.remove();for(var e=this._children;e.length;){var t=e.pop();t._parent=null,t.destroy()}this.fire("destroy",this),this.off()},n.find=function(e,t){var n=[],i=this._children.length;if(e instanceof Function){var a=e;a(this)&&n.push(this);for(var s=0;s<i;s++){var r=this._children[s].find(a);r.length&&(n=n.concat(r))}}else{this[e]&&(this[e]instanceof Function?this[e]():this[e])===t&&n.push(this);for(var o=0;o<i;++o){var l=this._children[o].find(e,t);l.length&&(n=n.concat(l))}}return n},n.findOne=function(e,t){var n=this._children.length,i=null;if(e instanceof Function){var a=e;if(i=a(this))return this;for(var s=0;s<n;s++)if(i=this._children[s].findOne(a))return i}else{if(this[e]&&(this[e]instanceof Function?this[e]():this[e])===t)return this;for(var r=0;r<n;r++)if(null!==(i=this._children[r].findOne(e,t)))return i}return null},n.findByTag=function(){var e=arguments,t=[],n=function n(i,a){var s;a&&(s=i.tags).has.apply(s,e)&&t.push(i);for(var r=0;r<i._children.length;r++)n(i._children[r],!0)};return n(this,!1),t},n.findByName=function(e){if(this.name===e)return this;for(var t=0;t<this._children.length;t++){var n=this._children[t].findByName(e);if(null!==n)return n}return null},n.findByPath=function(e){for(var t,n=Array.isArray(e)?e:e.split("/"),i=this,a=function(e){if(i=i.children.find((function(t){return t.name===n[e]})),!i)return{v:null}},s=0,r=n.length;s<r;++s)if(t=a(s))return t.v;return i},n.forEach=function(e,t){e.call(t,this);for(var n=this._children,i=0;i<n.length;i++)n[i].forEach(e,t)},n.isDescendantOf=function(e){for(var t=this._parent;t;){if(t===e)return!0;t=t._parent}return!1},n.isAncestorOf=function(e){return e.isDescendantOf(this)},n.getEulerAngles=function(){return this.getWorldTransform().getEulerAngles(this.eulerAngles),this.eulerAngles},n.getLocalEulerAngles=function(){return this.localRotation.getEulerAngles(this.localEulerAngles),this.localEulerAngles},n.getLocalPosition=function(){return this.localPosition},n.getLocalRotation=function(){return this.localRotation},n.getLocalScale=function(){return this.localScale},n.getLocalTransform=function(){return this._dirtyLocal&&(this.localTransform.setTRS(this.localPosition,this.localRotation,this.localScale),this._dirtyLocal=!1),this.localTransform},n.getPosition=function(){return this.getWorldTransform().getTranslation(this.position),this.position},n.getRotation=function(){return this.rotation.setFromMat4(this.getWorldTransform()),this.rotation},n.getScale=function(){return this._scale||(this._scale=new pt),this.getWorldTransform().getScale(this._scale)},n.getWorldTransform=function(){return this._dirtyLocal||this._dirtyWorld?(this._parent&&this._parent.getWorldTransform(),this._sync(),this.worldTransform):this.worldTransform},n.remove=function(){var e;null==(e=this._parent)||e.removeChild(this)},n.reparent=function(e,t){this.remove(),e&&(t>=0?e.insertChild(this,t):e.addChild(this))},n.setLocalEulerAngles=function(e,t,n){this.localRotation.setFromEulerAngles(e,t,n),this._dirtyLocal||this._dirtifyLocal()},n.setLocalPosition=function(e,t,n){e instanceof pt?this.localPosition.copy(e):this.localPosition.set(e,t,n),this._dirtyLocal||this._dirtifyLocal()},n.setLocalRotation=function(e,t,n,i){e instanceof Et?this.localRotation.copy(e):this.localRotation.set(e,t,n,i),this._dirtyLocal||this._dirtifyLocal()},n.setLocalScale=function(e,t,n){e instanceof pt?this.localScale.copy(e):this.localScale.set(e,t,n),this._dirtyLocal||this._dirtifyLocal()},n._dirtifyLocal=function(){this._dirtyLocal||(this._dirtyLocal=!0,this._dirtyWorld||this._dirtifyWorld())},n._unfreezeParentToRoot=function(){for(var e=this._parent;e;)e._frozen=!1,e=e._parent},n._dirtifyWorld=function(){this._dirtyWorld||this._unfreezeParentToRoot(),this._dirtifyWorldInternal()},n._dirtifyWorldInternal=function(){if(!this._dirtyWorld){this._frozen=!1,this._dirtyWorld=!0;for(var e=0;e<this._children.length;e++)this._children[e]._dirtyWorld||this._children[e]._dirtifyWorldInternal()}this._dirtyNormal=!0,this._worldScaleSign=0,this._aabbVer++},n.setPosition=function(e,t,n){e instanceof pt?gv.copy(e):gv.set(e,t,n),null===this._parent?this.localPosition.copy(gv):(vv.copy(this._parent.getWorldTransform()).invert(),vv.transformPoint(gv,this.localPosition)),this._dirtyLocal||this._dirtifyLocal()},n.setRotation=function(e,t,n,i){if(e instanceof Et?yv.copy(e):yv.set(e,t,n,i),null===this._parent)this.localRotation.copy(yv);else{var a=this._parent.getRotation();_v.copy(a).invert(),this.localRotation.copy(_v).mul(yv)}this._dirtyLocal||this._dirtifyLocal()},n.setEulerAngles=function(e,t,n){if(this.localRotation.setFromEulerAngles(e,t,n),null!==this._parent){var i=this._parent.getRotation();_v.copy(i).invert(),this.localRotation.mul2(_v,this.localRotation)}this._dirtyLocal||this._dirtifyLocal()},n.addChild=function(e){this._prepareInsertChild(e),this._children.push(e),this._onInsertChild(e)},n.addChildAndSaveTransform=function(e){var t=e.getPosition(),n=e.getRotation();this._prepareInsertChild(e),e.setPosition(mv.copy(this.worldTransform).invert().transformPoint(t)),e.setRotation(fv.copy(this.getRotation()).invert().mul(n)),this._children.push(e),this._onInsertChild(e)},n.insertChild=function(e,t){this._prepareInsertChild(e),this._children.splice(t,0,e),this._onInsertChild(e)},n._prepareInsertChild=function(e){e.remove()},n._fireOnHierarchy=function(e,t,n){this.fire(e,n);for(var i=0;i<this._children.length;i++)this._children[i]._fireOnHierarchy(t,t,n)},n._onInsertChild=function(e){e._parent=this;var t=e._enabled&&this.enabled;e._enabledInHierarchy!==t&&(e._enabledInHierarchy=t,e._notifyHierarchyStateChanged(e,t)),e._updateGraphDepth(),e._dirtifyWorld(),this._frozen&&e._unfreezeParentToRoot(),e._fireOnHierarchy("insert","inserthierarchy",this),this.fire&&this.fire("childinsert",e)},n._updateGraphDepth=function(){this._graphDepth=this._parent?this._parent._graphDepth+1:0;for(var e=0,t=this._children.length;e<t;e++)this._children[e]._updateGraphDepth()},n.removeChild=function(e){var t=this._children.indexOf(e);-1!==t&&(this._children.splice(t,1),e._parent=null,e._fireOnHierarchy("remove","removehierarchy",this),this.fire("childremove",e))},n._sync=function(){if(this._dirtyLocal&&(this.localTransform.setTRS(this.localPosition,this.localRotation,this.localScale),this._dirtyLocal=!1),this._dirtyWorld){if(null===this._parent)this.worldTransform.copy(this.localTransform);else if(this.scaleCompensation){var e,t=this._parent,n=this.localScale,i=t;if(i){for(;i&&i.scaleCompensation;)i=i._parent;i&&(i=i._parent)&&(e=i.worldTransform.getScale(),dv.mul2(e,this.localScale),n=dv)}pv.setFromMat4(t.worldTransform),hv.mul2(pv,this.localRotation);var a=t.worldTransform;t.scaleCompensation&&(uv.mul2(e,t.getLocalScale()),lv.setTRS(t.worldTransform.getTranslation(cv),pv,uv),a=lv),a.transformPoint(this.localPosition,cv),this.worldTransform.setTRS(cv,hv,n)}else this.worldTransform.mulAffine2(this._parent.worldTransform,this.localTransform);this._dirtyWorld=!1}},n.syncHierarchy=function(){if(this._enabled&&!this._frozen){this._frozen=!0,(this._dirtyLocal||this._dirtyWorld)&&this._sync();for(var e=this._children,t=0,n=e.length;t<n;t++)e[t].syncHierarchy()}},n.lookAt=function(e,t,n,i,a,s){if(void 0===i&&(i=0),void 0===a&&(a=1),void 0===s&&(s=0),e instanceof pt)bv.copy(e),t instanceof pt?xv.copy(t):xv.copy(pt.UP);else{if(void 0===n)return;bv.set(e,t,n),xv.set(i,a,s)}wv.setLookAt(this.getPosition(),bv,xv),yv.setFromMat4(wv),this.setRotation(yv)},n.translate=function(e,t,n){e instanceof pt?gv.copy(e):gv.set(e,t,n),gv.add(this.getPosition()),this.setPosition(gv)},n.translateLocal=function(e,t,n){e instanceof pt?gv.copy(e):gv.set(e,t,n),this.localRotation.transformVector(gv,gv),this.localPosition.add(gv),this._dirtyLocal||this._dirtifyLocal()},n.rotate=function(e,t,n){if(yv.setFromEulerAngles(e,t,n),null===this._parent)this.localRotation.mul2(yv,this.localRotation);else{var i=this.getRotation(),a=this._parent.getRotation();_v.copy(a).invert(),yv.mul2(_v,yv),this.localRotation.mul2(yv,i)}this._dirtyLocal||this._dirtifyLocal()},n.rotateLocal=function(e,t,n){yv.setFromEulerAngles(e,t,n),this.localRotation.mul(yv),this._dirtyLocal||this._dirtifyLocal()},q(t,[{key:"right",get:function(){return this._right||(this._right=new pt),this.getWorldTransform().getX(this._right).normalize()}},{key:"up",get:function(){return this._up||(this._up=new pt),this.getWorldTransform().getY(this._up).normalize()}},{key:"forward",get:function(){return this._forward||(this._forward=new pt),this.getWorldTransform().getZ(this._forward).normalize().mulScalar(-1)}},{key:"normalMatrix",get:function(){var e=this._normalMatrix;return this._dirtyNormal&&(e.invertMat4(this.getWorldTransform()).transpose(),this._dirtyNormal=!1),e}},{key:"enabled",get:function(){return this._enabled&&this._enabledInHierarchy},set:function(e){var t;this._enabled!==e&&(this._enabled=e,(e&&null!=(t=this._parent)&&t.enabled||!e)&&this._notifyHierarchyStateChanged(this,e))}},{key:"parent",get:function(){return this._parent}},{key:"path",get:function(){var e=this._parent;if(!e)return"";for(var t=this.name;e&&e._parent;)t=e.name+"/"+t,e=e._parent;return t}},{key:"root",get:function(){for(var e=this;e._parent;)e=e._parent;return e}},{key:"children",get:function(){return this._children}},{key:"graphDepth",get:function(){return this._graphDepth}},{key:"worldScaleSign",get:function(){return 0===this._worldScaleSign&&(this._worldScaleSign=this.getWorldTransform().scaleSign),this._worldScaleSign}}]),t}(re),Sv=function(){function e(){this.cache=new Map}var t=e.prototype;return t.destroy=function(){this.cache.forEach((function(e,t){t.destroy()})),this.cache.clear()},t.incRef=function(e){var t=(this.cache.get(e)||0)+1;this.cache.set(e,t)},t.decRef=function(e){if(e){var t=this.cache.get(e);t&&(0==--t?(this.cache.delete(e),e.destroy()):this.cache.set(e,t))}},e}(),Ev=function(){function e(){}return e.incRef=function(e){this.cache.incRef(e)},e.decRef=function(e){this.cache.decRef(e)},e.destroy=function(){this.cache.destroy()},e}();Ev.cache=new Sv;var Tv=0,Av=new Ot,Lv=new Ot,Mv=new Dt,Pv=new Set,Ov=function(e){this.vertexBuffer=null,this.count=e},Iv=function(){function e(){this.shader=void 0,this.bindGroup=null}var t=e.prototype;return t.getBindGroup=function(e){if(!this.bindGroup){var t=this.shader,n=t.meshUniformBufferFormat,i=new sl(e,n,!1),a=t.meshBindGroupFormat;this.bindGroup=new $o(e,a,i)}return this.bindGroup},t.destroy=function(){var e,t=this.bindGroup;t&&(null==(e=t.defaultUniformBuffer)||e.destroy(),t.destroy(),this.bindGroup=null)},e}(),Rv=function(){function e(){this.shaderInstances=new Map}return e.prototype.destroy=function(){this.shaderInstances.forEach((function(e){return e.destroy()})),this.shaderInstances.clear()},e}(),Dv=function(){function e(e,t,n){if(void 0===n&&(n=null),this.visible=!0,this.castShadow=!1,this.transparent=!1,this._material=null,this._shaderCache=[],this.id=Tv++,this.pick=!0,e instanceof Cv){var i=e;e=t,t=n,n=i}this._key=[0,0],this.node=n,this._mesh=e,e.incRefCount(),this.material=t,this._shaderDefs=_f<<16,this._shaderDefs|=e.vertexBuffer.format.hasUv0?Jm:0,this._shaderDefs|=e.vertexBuffer.format.hasUv1?$m:0,this._shaderDefs|=e.vertexBuffer.format.hasColor?ef:0,this._shaderDefs|=e.vertexBuffer.format.hasTangents?rf:0,this.layer=Nu,this._renderStyle=Em,this._receiveShadow=!0,this._screenSpace=!1,this._noDepthDrawGl1=!1,this.cull=!0,this._updateAabb=!0,this._updateAabbFunc=null,this._calculateSortDistance=null,this.updateKey(),this._skinInstance=null,this._morphInstance=null,this.instancingData=null,this._customAabb=null,this.aabb=new Ot,this._aabbVer=-1,this.drawOrder=0,this.visibleThisFrame=!1,this.isVisibleFunc=null,this.parameters={},this.stencilFront=null,this.stencilBack=null,this.flipFacesFactor=1}var t=e.prototype;return t.clearShaders=function(){for(var e=this._shaderCache,t=0;t<e.length;t++){var n;null==(n=e[t])||n.destroy(),e[t]=null}},t.getShaderInstance=function(e,t,n,i,a,s){var r,o=this._shaderCache[e];if(o?r=o.shaderInstances.get(t):(o=new Rv,this._shaderCache[e]=o),!r){var l=this._material,c=this._shaderDefs,h=e+"_"+c+"_"+t;if((r=new Iv).shader=l.variants.get(h),!r.shader){var p=l.getShaderVariant(this.mesh.device,n,c,null,e,s,i,a,this._mesh.vertexBuffer.format);l.variants.set(h,p),r.shader=p}o.shaderInstances.set(t,r)}return r},t._updateShaderDefs=function(e){e!==this._shaderDefs&&(this._shaderDefs=e,this.clearShaders())},t.destroy=function(){var t,n,i=this.mesh;i&&(this.mesh=null,i.refCount<1&&i.destroy()),this.setRealtimeLightmap(e.lightmapParamNames[0],null),this.setRealtimeLightmap(e.lightmapParamNames[1],null),null==(t=this._skinInstance)||t.destroy(),this._skinInstance=null,null==(n=this.morphInstance)||n.destroy(),this.morphInstance=null,this.clearShaders(),this.material=null},e._prepareRenderStyleForArray=function(e,t){if(e){for(var n=0;n<e.length;n++){e[n]._renderStyle=t;var i=e[n].mesh;Pv.has(i)||(Pv.add(i),i.prepareRenderState(t))}Pv.clear()}},t._isVisible=function(e){return!!this.visible&&(this.isVisibleFunc?this.isVisibleFunc(e):(Mv.center=this.aabb.center,Mv.radius=this._aabb.halfExtents.length(),e.frustum.containsSphere(Mv)))},t.updateKey=function(){var e=this.material,t=e.alphaToCoverage||e.alphaTest?wu:e.blendType;this._key[vf]=(15&this.layer)<<27|(t===bu?1:0)<<26|(33554431&e.id)<<0},t.setInstancing=function(e){e?(this.instancingData=new Ov(e.numVertices),this.instancingData.vertexBuffer=e,e.format.instancing=!0,this.cull=!1):(this.instancingData=null,this.cull=!0),this._updateShaderDefs(e?this._shaderDefs|tf:this._shaderDefs&~tf)},t.ensureMaterial=function(e){this.material||(this.material=Qg(e))},t.clearParameters=function(){this.parameters={}},t.getParameters=function(){return this.parameters},t.getParameter=function(e){return this.parameters[e]},t.setParameter=function(e,t,n){if(void 0===n&&(n=-262141),void 0===t&&"object"==typeof e){var i=e;if(i.length){for(var a=0;a<i.length;a++)this.setParameter(i[a]);return}e=i.name,t=i.value}var s=this.parameters[e];s?(s.data=t,s.passFlags=n):this.parameters[e]={scopeId:null,data:t,passFlags:n}},t.setRealtimeLightmap=function(e,t){var n=this.getParameter(e);n!==t&&(n&&Ev.decRef(n.data),t?(Ev.incRef(t),this.setParameter(e,t)):this.deleteParameter(e))},t.deleteParameter=function(e){this.parameters[e]&&delete this.parameters[e]},t.setParameters=function(e,t){var n=this.parameters;for(var i in n){var a=n[i];a.passFlags&t&&(a.scopeId||(a.scopeId=e.scope.resolve(i)),a.scopeId.setValue(a.data))}},t.setLightmapped=function(t){t?this.mask=(this.mask|wf)&~(_f|bf):(this.setRealtimeLightmap(e.lightmapParamNames[0],null),this.setRealtimeLightmap(e.lightmapParamNames[1],null),this._shaderDefs&=~(nf|af|hf),this.mask=(this.mask|_f)&~(wf|bf))},t.setCustomAabb=function(e){e?this._customAabb?this._customAabb.copy(e):this._customAabb=e.clone():(this._customAabb=null,this._aabbVer=-1),this._setupSkinUpdate()},t._setupSkinUpdate=function(){this._skinInstance&&(this._skinInstance._updateBeforeCull=!this._customAabb)},q(e,[{key:"renderStyle",get:function(){return this._renderStyle},set:function(e){this._renderStyle=e,this.mesh.prepareRenderState(e)}},{key:"mesh",get:function(){return this._mesh},set:function(e){e!==this._mesh&&(this._mesh&&this._mesh.decRefCount(),this._mesh=e,e&&e.incRefCount())}},{key:"aabb",get:function(){if(!this._updateAabb)return this._aabb;if(this._updateAabbFunc)return this._updateAabbFunc(this._aabb);var e=this._customAabb,t=!!e;if(!e)if(e=Av,this.skinInstance){if(!this.mesh.boneAabb){var n=this._morphInstance?this._morphInstance.morph._targets:null;this.mesh._initBoneAabbs(n)}for(var i=this.mesh.boneUsed,a=!0,s=0;s<this.mesh.boneAabb.length;s++)i[s]&&(Lv.setFromTransformedAabb(this.mesh.boneAabb[s],this.skinInstance.matrices[s]),a?(a=!1,e.center.copy(Lv.center),e.halfExtents.copy(Lv.halfExtents)):e.add(Lv));t=!0}else if(this.node._aabbVer!==this._aabbVer){if(this.mesh?(e.center.copy(this.mesh.aabb.center),e.halfExtents.copy(this.mesh.aabb.halfExtents)):(e.center.set(0,0,0),e.halfExtents.set(0,0,0)),this.mesh&&this.mesh.morph){var r=this.mesh.morph.aabb;e._expand(r.getMin(),r.getMax())}t=!0,this._aabbVer=this.node._aabbVer}return t&&this._aabb.setFromTransformedAabb(e,this.node.getWorldTransform()),this._aabb},set:function(e){this._aabb=e}},{key:"material",get:function(){return this._material},set:function(e){this.clearShaders();var t=this._material;t&&t.removeMeshInstanceRef(this),this._material=e,e&&(e.addMeshInstanceRef(this),this.transparent=e.transparent,this.updateKey())}},{key:"layer",get:function(){return this._layer},set:function(e){this._layer=e,this.updateKey()}},{key:"calculateSortDistance",get:function(){return this._calculateSortDistance},set:function(e){this._calculateSortDistance=e}},{key:"receiveShadow",get:function(){return this._receiveShadow},set:function(e){this._receiveShadow!==e&&(this._receiveShadow=e,this._updateShaderDefs(e?this._shaderDefs&~Zm:this._shaderDefs|Zm))}},{key:"skinInstance",get:function(){return this._skinInstance},set:function(e){this._skinInstance=e,this._updateShaderDefs(e?this._shaderDefs|Qm:this._shaderDefs&~Qm),this._setupSkinUpdate()}},{key:"morphInstance",get:function(){return this._morphInstance},set:function(e){var t;null==(t=this._morphInstance)||t.destroy(),this._morphInstance=e;var n=this._shaderDefs;n=e&&e.morph.useTextureMorph?n|cf:n&~cf,n=e&&e.morph.morphPositions?n|of:n&~of,n=e&&e.morph.morphNormals?n|lf:n&~lf,this._updateShaderDefs(n)}},{key:"screenSpace",get:function(){return this._screenSpace},set:function(e){this._screenSpace!==e&&(this._screenSpace=e,this._updateShaderDefs(e?this._shaderDefs|sf:this._shaderDefs&~sf))}},{key:"key",get:function(){return this._key[vf]},set:function(e){this._key[vf]=e}},{key:"mask",get:function(){return this._shaderDefs>>16},set:function(e){var t=65535&this._shaderDefs;this._updateShaderDefs(t|e<<16)}},{key:"instancingCount",get:function(){return this.instancingData?this.instancingData.count:0},set:function(e){this.instancingData&&(this.instancingData.count=e)}}]),e}();function kv(e,t){if(e&&!t)return!1;if(!e&&t)return!1;if((e=e.data)===(t=t.data))return!0;if(e instanceof Float32Array&&t instanceof Float32Array){if(e.length!==t.length)return!1;for(var n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}return!1}function Fv(e,t){for(var n in e)if(e.hasOwnProperty(n)&&!kv(e[n],t[n]))return!1;for(var i in t)if(t.hasOwnProperty(i)&&!kv(t[i],e[i]))return!1;return!0}Dv.lightmapParamNames=["texture_lightMap","texture_dirLightMap"];var Bv=[0,1,3,2,3,1],Nv=[0,1,3,0,3,2],Uv=new ut;function zv(e){return e.node.worldTransform.scaleSign}var Vv,Hv=function(){function e(e,t,n){this.device=e,this.rootNode=t,this.scene=n,this._init=!1,this._batchGroups={},this._batchGroupCounter=0,this._batchList=[],this._dirtyGroups=[]}var t=e.prototype;return t.destroy=function(){this.device=null,this.rootNode=null,this.scene=null,this._batchGroups={},this._batchList=[],this._dirtyGroups=[]},t.addGroup=function(e,t,n,i,a){if(void 0===i&&(i=this._batchGroupCounter,this._batchGroupCounter++),!this._batchGroups[i]){var s=new av(i,e,t,n,a);return this._batchGroups[i]=s,s}},t.removeGroup=function(e){if(this._batchGroups[e]){for(var t=[],n=0;n<this._batchList.length;n++)this._batchList[n].batchGroupId===e?this.destroyBatch(this._batchList[n]):t.push(this._batchList[n]);this._batchList=t,this._removeModelsFromBatchGroup(this.rootNode,e),delete this._batchGroups[e]}},t.markGroupDirty=function(e){this._dirtyGroups.indexOf(e)<0&&this._dirtyGroups.push(e)},t.getGroupByName=function(e){var t=this._batchGroups;for(var n in t)if(t.hasOwnProperty(n)&&t[n].name===e)return t[n];return null},t.getBatches=function(e){for(var t=[],n=this._batchList.length,i=0;i<n;i++){var a=this._batchList[i];a.batchGroupId===e&&t.push(a)}return t},t._removeModelsFromBatchGroup=function(e,t){if(e.enabled){e.model&&e.model.batchGroupId===t&&(e.model.batchGroupId=-1),e.render&&e.render.batchGroupId===t&&(e.render.batchGroupId=-1),e.element&&e.element.batchGroupId===t&&(e.element.batchGroupId=-1),e.sprite&&e.sprite.batchGroupId===t&&(e.sprite.batchGroupId=-1);for(var n=0;n<e._children.length;n++)this._removeModelsFromBatchGroup(e._children[n],t)}},t.insert=function(e,t,n){var i=this._batchGroups[t];i&&i._obj[e].indexOf(n)<0&&(i._obj[e].push(n),this.markGroupDirty(t))},t.remove=function(e,t,n){var i=this._batchGroups[t];if(i){var a=i._obj[e].indexOf(n);a>=0&&(i._obj[e].splice(a,1),this.markGroupDirty(t))}},t._extractRender=function(e,t,n,i){return e.render&&(t=i[e.render.batchGroupId]=t.concat(e.render.meshInstances),e.render.removeFromLayers()),t},t._extractModel=function(e,t,n,i){return e.model&&e.model.model&&(t=i[e.model.batchGroupId]=t.concat(e.model.meshInstances),e.model.removeModelFromLayers()),t},t._extractElement=function(e,t,n){if(e.element){var i=!1;e.element._text&&e.element._text._model.meshInstances.length>0?(t.push(e.element._text._model.meshInstances[0]),e.element.removeModelFromLayers(e.element._text._model),i=!0):e.element._image&&(t.push(e.element._image._renderable.meshInstance),e.element.removeModelFromLayers(e.element._image._renderable.model),e.element._image._renderable.unmaskMeshInstance&&(t.push(e.element._image._renderable.unmaskMeshInstance),e.element._image._renderable.unmaskMeshInstance.stencilFront&&e.element._image._renderable.unmaskMeshInstance.stencilBack||(e.element._dirtifyMask(),e.element._onPrerender())),i=!0),i&&(n._ui=!0)}},t._collectAndRemoveMeshInstances=function(e,t){for(var n=0;n<t.length;n++){var i=t[n],a=this._batchGroups[i];if(a){var s=e[i];s||(s=e[i]=[]);for(var r=0;r<a._obj.model.length;r++)s=this._extractModel(a._obj.model[r],s,a,e);for(var o=0;o<a._obj.render.length;o++)s=this._extractRender(a._obj.render[o],s,a,e);for(var l=0;l<a._obj.element.length;l++)this._extractElement(a._obj.element[l],s,a);for(var c=0;c<a._obj.sprite.length;c++){var h=a._obj.sprite[c];h.sprite&&h.sprite._meshInstance&&(a.dynamic||h.sprite.sprite._renderMode===Nf)&&(s.push(h.sprite._meshInstance),h.sprite.removeModelFromLayers(),a._sprite=!0,h.sprite._batchGroup=a)}}}},t.generate=function(e){var t={};e||(e=Object.keys(this._batchGroups));for(var n,i,a,s,r=[],o=0;o<this._batchList.length;o++)e.indexOf(this._batchList[o].batchGroupId)<0?r.push(this._batchList[o]):this.destroyBatch(this._batchList[o]);if(this._batchList=r,this._collectAndRemoveMeshInstances(t,e),e===this._dirtyGroups)this._dirtyGroups.length=0;else{for(var l=[],c=0;c<this._dirtyGroups.length;c++)e.indexOf(this._dirtyGroups[c])<0&&l.push(this._dirtyGroups[c]);this._dirtyGroups=l}for(var h in t)if(t.hasOwnProperty(h)&&(n=t[h],a=this._batchGroups[h])){i=this.prepare(n,a.dynamic,a.maxAabbSize,a._ui||a._sprite);for(var p=0;p<i.length;p++)(s=this.create(i[p],a.dynamic,parseInt(h,10)))&&s.addToLayers(this.scene,a.layers)}},t.prepare=function(e,t,n,i){if(void 0===n&&(n=Number.POSITIVE_INFINITY),0===e.length)return[];var a,s=.5*n,r=this.device.supportsBoneTextures?1024:this.device.boneLimit,o=this.device.extUintElement?4294967295:65535,l=new Ot,c=new Ot,h=null,p=[],d=0;i&&e.sort((function(e,t){return e.drawOrder-t.drawOrder}));for(var u,m=e,f=i?function(e){h?h.add(e.aabb):h=e.aabb.clone(),u.push(e)}:function(e){u.push(e)};m.length>0;){p[d]=[m[0]],u=[];var g=m[0].material,v=m[0].layer,y=m[0]._shaderDefs,_=m[0].parameters,w=m[0].stencilFront,b=m[0].mesh.vertexBuffer.getNumVertices(),x=m[0].drawOrder;l.copy(m[0].aabb);var C=zv(m[0]),S=m[0].mesh.vertexBuffer.format.batchingHash,E=m[0].mesh.primitive[0].indexed;h=null;for(var T=1;T<m.length;T++){var A=m[T];if(t&&p[d].length>=r){u=u.concat(m.slice(T));break}g!==A.material||v!==A.layer||S!==A.mesh.vertexBuffer.format.batchingHash||E!==A.mesh.primitive[0].indexed||y!==A._shaderDefs||b+A.mesh.vertexBuffer.getNumVertices()>o?f(A):(c.copy(l),c.add(A.aabb),c.halfExtents.x>s||c.halfExtents.y>s||c.halfExtents.z>s?f(A):(!w||(a=A.stencilFront)&&w.func===a.func&&w.zpass===a.zpass)&&C===zv(A)&&Fv(_,A.parameters)?i&&h&&h.intersects(A.aabb)&&A.drawOrder!==x?f(A):(l.add(A.aabb),b+=A.mesh.vertexBuffer.getNumVertices(),p[d].push(A)):f(A))}d++,m=u}return p},t.collectBatchedMeshData=function(e,t){for(var n=null,i=0,a=0,s=null,r=0;r<e.length;r++)if(e[r].visible){var o=e[r].mesh;if(i+=o.vertexBuffer.numVertices,o.primitive[0].indexed)a+=o.primitive[0].count;else{var l=o.primitive[0].type;l!==ki&&l!==Di||4===o.primitive[0].count&&(a+=6)}if(!n){s=e[r].material,n={};for(var c=o.vertexBuffer.format.elements,h=0;h<c.length;h++)n[c[h].name]={numComponents:c[h].numComponents,dataType:c[h].dataType,normalize:c[h].normalize,count:0};t&&(n[zi]={numComponents:1,dataType:ts,normalize:!1,count:0})}}return{streams:n,batchNumVerts:i,batchNumIndices:a,material:s}},t.create=function(e,t,n){if(!this._init){var i="#define BONE_LIMIT "+this.device.getBoneLimit()+"\n";this.transformVS=i+"#define DYNAMICBATCH\n"+Mg.transformVS,this.skinTexVS=Mg.skinBatchTexVS,this.skinConstVS=Mg.skinBatchConstVS,this.vertexFormats={},this._init=!0}var a,s,r,o=null,l=null,c=this.collectBatchedMeshData(e,t);if(c.streams){var h,p,d,u=c.streams,m=c.material,f=c.batchNumVerts,g=c.batchNumIndices;l=new iv(e,t,n),this._batchList.push(l);var v,y=0,_=0,w=new pt,b=new(f<=65535?Uint16Array:Uint32Array)(g);for(a in u)(o=u[a]).typeArrayType=Us[o.dataType],o.elementByteSize=zs[o.dataType],o.buffer=new o.typeArrayType(f*o.numComponents);for(var x=0;x<e.length;x++)if(e[x].visible){for(a in r=(s=e[x].mesh).vertexBuffer.numVertices,t||(v=e[x].node.getWorldTransform()),u)if(a!==zi){var C=new(o=u[a]).typeArrayType(o.buffer.buffer,o.elementByteSize*o.count),S=s.getVertexStream(a,C)*o.numComponents;if(o.count+=S,!t&&o.numComponents>=3)if(a===Fi)for(var E=0;E<S;E+=o.numComponents)w.set(C[E],C[E+1],C[E+2]),v.transformPoint(w,w),C[E]=w.x,C[E+1]=w.y,C[E+2]=w.z;else if(a===Bi||a===Ni){Uv.invertMat4(v).transpose();for(var T=0;T<S;T+=o.numComponents)w.set(C[T],C[T+1],C[T+2]),Uv.transformVector(w,w),C[T]=w.x,C[T+1]=w.y,C[T+2]=w.z}}if(t){o=u[zi];for(var A=0;A<r;A++)o.buffer[o.count++]=x}if(s.primitive[0].indexed){h=s.primitive[0].base,p=s.primitive[0].count;var L=s.indexBuffer[0].getFormat();d=new Gs[L](s.indexBuffer[0].storage)}else{var M=s.primitive[0].type;if(M===ki||M===Di){if(4!==s.primitive[0].count){p=0;continue}h=0,p=6,d=M===ki?Bv:Nv}}for(var P=0;P<p;P++)b[P+_]=d[h+P]+y;_+=p,y+=r}for(a in s=new og(this.device),u)o=u[a],s.setVertexStream(a,o.buffer,o.numComponents,void 0,o.dataType,o.normalize);b.length>0&&s.setIndices(b),s.update(Ri,!1),t&&((m=m.clone()).chunks.transformVS=this.transformVS,m.chunks.skinTexVS=this.skinTexVS,m.chunks.skinConstVS=this.skinConstVS,m.update());var O=new Dv(s,m,this.rootNode);O.castShadow=l.origMeshInstances[0].castShadow,O.parameters=l.origMeshInstances[0].parameters,O.layer=l.origMeshInstances[0].layer,O._shaderDefs=l.origMeshInstances[0]._shaderDefs,O.cull=l.origMeshInstances[0].cull;var I=this._batchGroups[n];if(I&&I._ui&&(O.cull=!1),t){for(var R=[],D=0;D<l.origMeshInstances.length;D++)R.push(l.origMeshInstances[D].node);O.skinInstance=new ov(this.device,R,this.rootNode)}O._updateAabb=!1,O.drawOrder=l.origMeshInstances[0].drawOrder,O.stencilFront=l.origMeshInstances[0].stencilFront,O.stencilBack=l.origMeshInstances[0].stencilBack,O.flipFacesFactor=zv(l.origMeshInstances[0]),O.castShadow=l.origMeshInstances[0].castShadow,l.meshInstance=O,l.updateBoundingBox()}return l},t.updateAll=function(){this._dirtyGroups.length>0&&this.generate(this._dirtyGroups);for(var e=0;e<this._batchList.length;e++)this._batchList[e].dynamic&&this._batchList[e].updateBoundingBox()},t.clone=function(e,t){var n=new iv(t,e.dynamic,e.batchGroupId);this._batchList.push(n);for(var i=[],a=0;a<t.length;a++)i.push(t[a].node);return n.meshInstance=new Dv(e.meshInstance.mesh,e.meshInstance.material,e.meshInstance.node),n.meshInstance._updateAabb=!1,n.meshInstance.parameters=t[0].parameters,n.meshInstance.cull=t[0].cull,n.meshInstance.layer=t[0].layer,e.dynamic&&(n.meshInstance.skinInstance=new ov(this.device,i,this.rootNode)),n.meshInstance.castShadow=e.meshInstance.castShadow,n.meshInstance._shader=e.meshInstance._shader.slice(),n.meshInstance.castShadow=e.meshInstance.castShadow,n},t.destroyBatch=function(e){e.destroy(this.scene,this._batchGroups[e.batchGroupId].layers)},e}(),Gv=["uSceneColorMap","texture_grabPass"],Wv=function(e){function t(t,n){var i;return(i=e.call(this,t)||this).colorRenderTarget=null,i.camera=null,i.camera=n,i}Z(t,e);var n=t.prototype;return n.destroy=function(){e.prototype.destroy.call(this),this.releaseRenderTarget(this.colorRenderTarget)},n.shouldReallocate=function(e,t,n){if((null==e?void 0:e.colorBuffer.format)!==n)return!0;var i=(null==t?void 0:t.width)||this.device.width,a=(null==t?void 0:t.height)||this.device.height;return!e||i!==e.width||a!==e.height},n.allocateRenderTarget=function(e,t,n,i){var a=n.isWebGL2,s=new vl(n,{name:Gv[0],format:i,width:t?t.colorBuffer.width:n.width,height:t?t.colorBuffer.height:n.height,mipmaps:a,minFilter:a?Fn:In,magFilter:In,addressU:Yt,addressV:Yt});return e?(e.destroyFrameBuffers(),e._colorBuffer=s,e._colorBuffers=[s]):e=new Vr({name:"ColorGrabRT",colorBuffer:s,depth:!1,stencil:!1,autoResolve:!1}),e},n.releaseRenderTarget=function(e){e&&(e.destroyTextureBuffers(),e.destroy())},n.before=function(){var e,t,n,i=this.camera,a=this.device,s=null!=(e=null==(t=i.renderTarget)?void 0:t.colorBuffer.format)?e:this.device.backBufferFormat;this.shouldReallocate(this.colorRenderTarget,null==(n=i.renderTarget)?void 0:n.colorBuffer,s)&&(this.releaseRenderTarget(this.colorRenderTarget),this.colorRenderTarget=this.allocateRenderTarget(this.colorRenderTarget,i.renderTarget,a,s));var r=this.colorRenderTarget.colorBuffer;Gv.forEach((function(e){return a.scope.resolve(e).setValue(r)}))},n.execute=function(){var e=this.device,t=this.colorRenderTarget.colorBuffer;if(e.isWebGPU)e.copyRenderTarget(this.camera.renderTarget,this.colorRenderTarget,!0,!1),e.mipmapRenderer.generate(this.colorRenderTarget.colorBuffer.impl);else if(e.isWebGL2)e.copyRenderTarget(e.renderTarget,this.colorRenderTarget,!0,!1),e.activeTexture(e.maxCombinedTextures-1),e.bindTexture(t),e.gl.generateMipmap(t.impl._glTarget);else{t.impl._glTexture||t.impl.initialize(e,t),e.bindTexture(t);var n=e.gl;n.copyTexImage2D(n.TEXTURE_2D,0,t.impl._glFormat,0,0,t.width,t.height,0),t._needsUpload=!1,t._needsMipmapsUpload=!1}},t}(Eg),jv=["uSceneDepthMap","uDepthMap"],Xv=function(e){function t(t,n){var i;return(i=e.call(this,t)||this).depthRenderTarget=null,i.camera=null,i.camera=n,i}Z(t,e);var n=t.prototype;return n.destroy=function(){e.prototype.destroy.call(this),this.releaseRenderTarget(this.depthRenderTarget)},n.shouldReallocate=function(e,t){var n=(null==t?void 0:t.width)||this.device.width,i=(null==t?void 0:t.height)||this.device.height;return!e||n!==e.width||i!==e.height},n.allocateRenderTarget=function(e,t,n,i,a){var s=new vl(n,{name:jv[0],format:i,width:t?t.colorBuffer.width:n.width,height:t?t.colorBuffer.height:n.height,mipmaps:!1,minFilter:On,magFilter:On,addressU:Yt,addressV:Yt});return e?(e.destroyFrameBuffers(),a?e._depthBuffer=s:(e._colorBuffer=s,e._colorBuffers=[s])):e=new Vr({name:"DepthGrabRT",colorBuffer:a?null:s,depthBuffer:a?s:null,depth:!a,stencil:n.supportsStencil,autoResolve:!1}),e},n.releaseRenderTarget=function(e){e&&(e.destroyTextureBuffers(),e.destroy())},n.before=function(){var e,t,n,i,a,s=this.camera,r=this.device,o=!0,l=pi;r.isWebGPU&&(null!=(i=null==(a=s.renderTarget)?void 0:a.samples)?i:r.samples)>1&&(l=ci,o=!1);var c=null!=(e=null==(t=s.renderTarget)?void 0:t.depthBuffer)?e:null==(n=s.renderTarget)?void 0:n.colorBuffer;this.shouldReallocate(this.depthRenderTarget,c)&&(this.releaseRenderTarget(this.depthRenderTarget),this.depthRenderTarget=this.allocateRenderTarget(this.depthRenderTarget,s.renderTarget,r,l,o));var h=o?this.depthRenderTarget.depthBuffer:this.depthRenderTarget.colorBuffer;jv.forEach((function(e){return r.scope.resolve(e).setValue(h)}))},n.execute=function(){var e=this.device;if(e.isWebGL2&&e.renderTarget.samples>1){var t=e.renderTarget.impl._glFrameBuffer,n=this.depthRenderTarget;e.renderTarget=n,e.updateBegin(),this.depthRenderTarget.impl.internalResolve(e,t,n.impl._glFrameBuffer,this.depthRenderTarget,e.gl.DEPTH_BUFFER_BIT)}else e.copyRenderTarget(e.renderTarget,this.depthRenderTarget,!1,!0)},t}(Eg),Yv=new st(254/255,254/255,254/255,254/255),qv=[],Kv=[[],[],[]],Zv=["uSceneDepthMap","uDepthMap"],Qv=function(e){function t(t,n,i){var a;return(a=e.call(this,t)||this).renderer=n,a.camera=i,a}Z(t,e);var n=t.prototype;return n.destroy=function(){e.prototype.destroy.call(this),this.releaseRenderTarget(this.renderTarget)},n.update=function(e){this.scene=e},n.shouldReallocate=function(e,t){var n=t.width,i=t.height;return!e||n!==e.width||i!==e.height},n.allocateRenderTarget=function(e,t,n){var i,a,s=new vl(n,{name:Zv[0],format:ti,width:null!=(i=null==t?void 0:t.width)?i:this.device.width,height:null!=(a=null==t?void 0:t.height)?a:this.device.height,mipmaps:!1,minFilter:On,magFilter:On,addressU:Yt,addressV:Yt});return e?(e.destroyFrameBuffers(),e._colorBuffer=s,e._colorBuffers=[s]):e=new Vr({name:Zv[0]+"RT}",colorBuffer:s,depth:!0,stencil:!1}),e},n.releaseRenderTarget=function(e){e&&(e.destroyTextureBuffers(),e.destroy())},n.before=function(){var e,t=this.camera,n=this.device,i=null!=(e=t.renderTarget)?e:n.backBuffer;if(this.shouldReallocate(this.renderTarget,i)){var a;null==(a=this.renderTarget)||a.destroyTextureBuffers();var s=this.allocateRenderTarget(this.renderTarget,t.renderTarget,n);this.renderTarget?this.renderTarget=s:(this.init(s),this.setClearColor(Yv),this.setClearDepth(1))}var r=this.renderTarget.colorBuffer;Zv.forEach((function(e){return n.scope.resolve(e).setValue(r)}))},n.execute=function(){for(var e=this.device,t=this.renderer,n=this.camera,i=this.scene,a=this.renderTarget,s=i.layers.layerList,r=i.layers.subLayerEnabled,o=i.layers.subLayerList,l=0;l<s.length;l++){var c=s[l];if(c.enabled&&r[l]&&c.camerasSet.has(n)){if(c.id===zu)break;for(var h=c.getCulledInstances(n),p=o[l]?h.transparent:h.opaque,d=0;d<p.length;d++){var u,m=p[d];null!=(u=m.material)&&u.depthWrite&&!m._noDepthDrawGl1&&qv.push(m)}t.setCameraUniforms(n,a),t.renderForward(n,qv,Kv,Sf,(function(t){e.setBlendState(yr.NOBLEND)}),c),qv.length=0}}},t}(Eg),Jv=new pt,$v=new pt,ey=new pt,ty=new St,ny=[new pt,new pt,new pt,new pt,new pt,new pt,new pt,new pt],iy=function(){function e(){this.shaderPassInfo=null,this.renderPassColorGrab=null,this.renderPassDepthGrab=null,this._aspectRatio=16/9,this._aspectRatioMode=Jf,this._calculateProjection=null,this._calculateTransform=null,this._clearColor=new st(.75,.75,.75,1),this._clearColorBuffer=!0,this._clearDepth=1,this._clearDepthBuffer=!0,this._clearStencil=0,this._clearStencilBuffer=!0,this._cullFaces=!0,this._farClip=1e3,this._flipFaces=!1,this._fov=45,this._frustumCulling=!0,this._horizontalFov=!1,this._layers=[Uu,zu,Vu,Gu,Hu],this._layersSet=new Set(this._layers),this._nearClip=.1,this._node=null,this._orthoHeight=10,this._projection=Cm,this._rect=new vt(0,0,1,1),this._renderTarget=null,this._scissorRect=new vt(0,0,1,1),this._scissorRectClear=!1,this._aperture=16,this._shutter=.001,this._sensitivity=1e3,this._projMat=new St,this._projMatDirty=!0,this._projMatSkybox=new St,this._viewMat=new St,this._viewMatDirty=!0,this._viewProjMat=new St,this._viewProjMatDirty=!0,this.frustum=new kt,this._xr=null,this._xrProperties={horizontalFov:this._horizontalFov,fov:this._fov,aspectRatio:this._aspectRatio,farClip:this._farClip,nearClip:this._nearClip}}var t=e.prototype;return t.destroy=function(){var e,t;null==(e=this.renderPassColorGrab)||e.destroy(),this.renderPassColorGrab=null,null==(t=this.renderPassDepthGrab)||t.destroy(),this.renderPassDepthGrab=null},t.clone=function(){return(new e).copy(this)},t.copy=function(e){return this._aspectRatio=e._aspectRatio,this._farClip=e._farClip,this._fov=e._fov,this._horizontalFov=e._horizontalFov,this._nearClip=e._nearClip,this._xrProperties.aspectRatio=e._xrProperties.aspectRatio,this._xrProperties.farClip=e._xrProperties.farClip,this._xrProperties.fov=e._xrProperties.fov,this._xrProperties.horizontalFov=e._xrProperties.horizontalFov,this._xrProperties.nearClip=e._xrProperties.nearClip,this.aspectRatioMode=e.aspectRatioMode,this.calculateProjection=e.calculateProjection,this.calculateTransform=e.calculateTransform,this.clearColor=e.clearColor,this.clearColorBuffer=e.clearColorBuffer,this.clearDepth=e.clearDepth,this.clearDepthBuffer=e.clearDepthBuffer,this.clearStencil=e.clearStencil,this.clearStencilBuffer=e.clearStencilBuffer,this.cullFaces=e.cullFaces,this.flipFaces=e.flipFaces,this.frustumCulling=e.frustumCulling,this.layers=e.layers,this.orthoHeight=e.orthoHeight,this.projection=e.projection,this.rect=e.rect,this.renderTarget=e.renderTarget,this.scissorRect=e.scissorRect,this.aperture=e.aperture,this.shutter=e.shutter,this.sensitivity=e.sensitivity,this.shaderPassInfo=e.shaderPassInfo,this._projMatDirty=!0,this},t._enableRenderPassColorGrab=function(e,t){var n;t?this.renderPassColorGrab||(this.renderPassColorGrab=new Wv(e,this)):(null==(n=this.renderPassColorGrab)||n.destroy(),this.renderPassColorGrab=null)},t._enableRenderPassDepthGrab=function(e,t,n){var i;n?this.renderPassDepthGrab||(this.renderPassDepthGrab=e.isWebGL1?new Qv(e,t,this):new Xv(e,this)):(null==(i=this.renderPassDepthGrab)||i.destroy(),this.renderPassDepthGrab=null)},t._updateViewProjMat=function(){(this._projMatDirty||this._viewMatDirty||this._viewProjMatDirty)&&(this._viewProjMat.mul2(this.projectionMatrix,this.viewMatrix),this._viewProjMatDirty=!1)},t.worldToScreen=function(e,t,n,i){void 0===i&&(i=new pt),this._updateViewProjMat(),this._viewProjMat.transformPoint(e,i);var a=this._viewProjMat.data,s=e.x*a[3]+e.y*a[7]+e.z*a[11]+1*a[15];return i.x=.5*(i.x/s+1)*t,i.y=.5*(1-i.y/s)*n,i},t.screenToWorld=function(e,t,n,i,a,s){void 0===s&&(s=new pt);var r=this.farClip-this.nearClip;if(Jv.set(e/i,(a-t)/a,n/r),Jv.mulScalar(2),Jv.sub(pt.ONE),this._projection===Cm){St._getPerspectiveHalfSize($v,this.fov,this.aspectRatio,this.nearClip,this.horizontalFov),$v.x*=Jv.x,$v.y*=Jv.y;var o=this._node.getWorldTransform();$v.z=-this.nearClip,o.transformPoint($v,ey);var l=this._node.getPosition();s.sub2(ey,l),s.normalize(),s.mulScalar(n),s.add(l)}else this._updateViewProjMat(),ty.copy(this._viewProjMat).invert(),ty.transformPoint(Jv,s);return s},t._evaluateProjectionMatrix=function(){if(this._projMatDirty){if(this._projection===Cm)this._projMat.setPerspective(this.fov,this.aspectRatio,this.nearClip,this.farClip,this.horizontalFov),this._projMatSkybox.copy(this._projMat);else{var e=this._orthoHeight,t=e*this.aspectRatio;this._projMat.setOrtho(-t,t,-e,e,this.nearClip,this.farClip),this._projMatSkybox.setPerspective(this.fov,this.aspectRatio,this.nearClip,this.farClip)}this._projMatDirty=!1}},t.getProjectionMatrixSkybox=function(){return this._evaluateProjectionMatrix(),this._projMatSkybox},t.getExposure=function(){var e=Math.log2(this._aperture*this._aperture/this._shutter*100/this._sensitivity);return 1/(1.2*Math.pow(2,e))},t.getScreenSize=function(e){if(this._projection===Cm){var t=this._node.getPosition().distance(e.center);if(t<e.radius)return 1;var n=Math.asin(e.radius/t),i=Math.tan(n),a=Math.tan(this.fov/2*at.DEG_TO_RAD);return Math.min(i/a,1)}return at.clamp(e.radius/this._orthoHeight,0,1)},t.getFrustumCorners=function(e,t){void 0===e&&(e=this.nearClip),void 0===t&&(t=this.farClip);var n=this.fov*Math.PI/180,i=this._projection===Cm?Math.tan(n/2)*e:this._orthoHeight,a=i*this.aspectRatio,s=ny;return s[0].x=a,s[0].y=-i,s[0].z=-e,s[1].x=a,s[1].y=i,s[1].z=-e,s[2].x=-a,s[2].y=i,s[2].z=-e,s[3].x=-a,s[3].y=-i,s[3].z=-e,this._projection===Cm&&(a=(i=Math.tan(n/2)*t)*this.aspectRatio),s[4].x=a,s[4].y=-i,s[4].z=-t,s[5].x=a,s[5].y=i,s[5].z=-t,s[6].x=-a,s[6].y=i,s[6].z=-t,s[7].x=-a,s[7].y=-i,s[7].z=-t,s},t.setXrProperties=function(e){Object.assign(this._xrProperties,e),this._projMatDirty=!0},q(e,[{key:"fullSizeClearRect",get:function(){var e=this._scissorRectClear?this.scissorRect:this._rect;return 0===e.x&&0===e.y&&1===e.z&&1===e.w}},{key:"aspectRatio",get:function(){var e;return null!=(e=this.xr)&&e.active?this._xrProperties.aspectRatio:this._aspectRatio},set:function(e){this._aspectRatio!==e&&(this._aspectRatio=e,this._projMatDirty=!0)}},{key:"aspectRatioMode",get:function(){return this._aspectRatioMode},set:function(e){this._aspectRatioMode!==e&&(this._aspectRatioMode=e,this._projMatDirty=!0)}},{key:"calculateProjection",get:function(){return this._calculateProjection},set:function(e){this._calculateProjection=e,this._projMatDirty=!0}},{key:"calculateTransform",get:function(){return this._calculateTransform},set:function(e){this._calculateTransform=e}},{key:"clearColor",get:function(){return this._clearColor},set:function(e){this._clearColor.copy(e)}},{key:"clearColorBuffer",get:function(){return this._clearColorBuffer},set:function(e){this._clearColorBuffer=e}},{key:"clearDepth",get:function(){return this._clearDepth},set:function(e){this._clearDepth=e}},{key:"clearDepthBuffer",get:function(){return this._clearDepthBuffer},set:function(e){this._clearDepthBuffer=e}},{key:"clearStencil",get:function(){return this._clearStencil},set:function(e){this._clearStencil=e}},{key:"clearStencilBuffer",get:function(){return this._clearStencilBuffer},set:function(e){this._clearStencilBuffer=e}},{key:"cullFaces",get:function(){return this._cullFaces},set:function(e){this._cullFaces=e}},{key:"farClip",get:function(){var e;return null!=(e=this.xr)&&e.active?this._xrProperties.farClip:this._farClip},set:function(e){this._farClip!==e&&(this._farClip=e,this._projMatDirty=!0)}},{key:"flipFaces",get:function(){return this._flipFaces},set:function(e){this._flipFaces=e}},{key:"fov",get:function(){var e;return null!=(e=this.xr)&&e.active?this._xrProperties.fov:this._fov},set:function(e){this._fov!==e&&(this._fov=e,this._projMatDirty=!0)}},{key:"frustumCulling",get:function(){return this._frustumCulling},set:function(e){this._frustumCulling=e}},{key:"horizontalFov",get:function(){var e;return null!=(e=this.xr)&&e.active?this._xrProperties.horizontalFov:this._horizontalFov},set:function(e){this._horizontalFov!==e&&(this._horizontalFov=e,this._projMatDirty=!0)}},{key:"layers",get:function(){return this._layers},set:function(e){this._layers=e.slice(0),this._layersSet=new Set(this._layers)}},{key:"layersSet",get:function(){return this._layersSet}},{key:"nearClip",get:function(){var e;return null!=(e=this.xr)&&e.active?this._xrProperties.nearClip:this._nearClip},set:function(e){this._nearClip!==e&&(this._nearClip=e,this._projMatDirty=!0)}},{key:"node",get:function(){return this._node},set:function(e){this._node=e}},{key:"orthoHeight",get:function(){return this._orthoHeight},set:function(e){this._orthoHeight!==e&&(this._orthoHeight=e,this._projMatDirty=!0)}},{key:"projection",get:function(){return this._projection},set:function(e){this._projection!==e&&(this._projection=e,this._projMatDirty=!0)}},{key:"projectionMatrix",get:function(){return this._evaluateProjectionMatrix(),this._projMat}},{key:"rect",get:function(){return this._rect},set:function(e){this._rect.copy(e)}},{key:"renderTarget",get:function(){return this._renderTarget},set:function(e){this._renderTarget=e}},{key:"scissorRect",get:function(){return this._scissorRect},set:function(e){this._scissorRect.copy(e)}},{key:"viewMatrix",get:function(){if(this._viewMatDirty){var e=this._node.getWorldTransform();this._viewMat.copy(e).invert(),this._viewMatDirty=!1}return this._viewMat}},{key:"aperture",get:function(){return this._aperture},set:function(e){this._aperture=e}},{key:"sensitivity",get:function(){return this._sensitivity},set:function(e){this._sensitivity=e}},{key:"shutter",get:function(){return this._shutter},set:function(e){this._shutter=e}},{key:"xr",get:function(){return this._xr},set:function(e){this._xr!==e&&(this._xr=e,this._projMatDirty=!0)}}]),e}(),ay=function(){this.hasTangents=!1,this.chunks={},this.pass=0,this.alphaTest=!1,this.blendType=bu,this.separateAmbient=!1,this.screenSpace=!1,this.skin=!1,this.useInstancing=!1,this.useMorphPosition=!1,this.useMorphNormal=!1,this.useMorphTextureBased=!1,this.nineSlicedMode=0,this.clusteredLightingEnabled=!0,this.clusteredLightingCookiesEnabled=!1,this.clusteredLightingShadowsEnabled=!1,this.clusteredLightingShadowType=0,this.clusteredLightingAreaLightsEnabled=!1,this.vertexColors=!1,this.lightMapEnabled=!1,this.dirLightMapEnabled=!1,this.useHeights=!1,this.useNormals=!1,this.useClearCoatNormals=!1,this.useAo=!1,this.diffuseMapEnabled=!1,this.useAmbientTint=!1,this.customFragmentShader=null,this.pixelSnap=!1,this.shadingModel=0,this.ambientSH=!1,this.fastTbn=!1,this.twoSidedLighting=!1,this.occludeDirect=!1,this.occludeSpecular=0,this.occludeSpecularFloat=!1,this.useMsdf=!1,this.msdfTextAttribute=!1,this.alphaToCoverage=!1,this.opacityFadesSpecular=!1,this.cubeMapProjection=0,this.conserveEnergy=!1,this.useSpecular=!1,this.useSpecularityFactor=!1,this.enableGGXSpecular=!1,this.fresnelModel=0,this.useRefraction=!1,this.useClearCoat=!1,this.useSheen=!1,this.useIridescence=!1,this.useMetalness=!1,this.useDynamicRefraction=!1,this.fog=Mu,this.gamma=Nm,this.toneMap=-1,this.fixSeams=!1,this.reflectionSource=null,this.reflectionEncoding=null,this.reflectionCubemapEncoding=null,this.ambientSource="constant",this.ambientEncoding=null,this.skyboxIntensity=1,this.useCubeMapRotation=!1,this.lightMapWithoutAmbient=!1,this.lights=[],this.noShadow=!1,this.lightMaskDynamic=0,this.userAttributes={}},sy=function(){this.usedUvs=void 0,this.shaderChunk=void 0,this.litOptions=new ay},ry=function(){function e(){}return e.update=function(t,n,i,a,s,r){e.updateSharedOptions(t,n,i,a,s),e.updateMaterialOptions(t,n),e.updateEnvOptions(t,n,i),e.updateLightingOptions(t,n,a,r),s===Cf&&(t.gamma=Vm,t.toneMap=Hm)},e.updateSharedOptions=function(e,t,n,i,a){e.chunks=t.chunks,e.pass=a,e.alphaTest=t.alphaTest>0,e.blendType=t.blendType,e.screenSpace=i&&0!=(i&sf),e.skin=i&&0!=(i&Qm),e.useInstancing=i&&0!=(i&tf),e.useMorphPosition=i&&0!=(i&of),e.useMorphNormal=i&&0!=(i&lf),e.useMorphTextureBased=i&&0!=(i&cf),e.hasTangents=i&&0!=(i&rf),e.nineSlicedMode=t.nineSlicedMode||Nf,t.useLighting&&n.clusteredLightingEnabled?(e.clusteredLightingEnabled=!0,e.clusteredLightingCookiesEnabled=n.lighting.cookiesEnabled,e.clusteredLightingShadowsEnabled=n.lighting.shadowsEnabled,e.clusteredLightingShadowType=n.lighting.shadowType,e.clusteredLightingAreaLightsEnabled=n.lighting.areaLightsEnabled):(e.clusteredLightingEnabled=!1,e.clusteredLightingCookiesEnabled=!1,e.clusteredLightingShadowsEnabled=!1,e.clusteredLightingAreaLightsEnabled=!1)},e.updateMaterialOptions=function(e,t){e.useAmbientTint=!1,e.separateAmbient=!1,e.customFragmentShader=null,e.pixelSnap=t.pixelSnap,e.shadingModel=t.shadingModel,e.ambientSH=t.ambientSH,e.fastTbn=t.fastTbn,e.twoSidedLighting=t.twoSidedLighting,e.occludeDirect=t.occludeDirect,e.occludeSpecular=t.occludeSpecular,e.occludeSpecularFloat=1!==t.occludeSpecularIntensity,e.useMsdf=!1,e.msdfTextAttribute=!1,e.alphaToCoverage=t.alphaToCoverage,e.opacityFadesSpecular=t.opacityFadesSpecular,e.cubeMapProjection=Lm,e.conserveEnergy=t.conserveEnergy&&t.shadingModel===Om,e.useSpecular=t.hasSpecular,e.useSpecularityFactor=t.hasSpecularityFactor,e.enableGGXSpecular=t.ggxSpecular,e.fresnelModel=t.fresnelModel,e.useRefraction=t.hasRefraction,e.useClearCoat=t.hasClearCoat,e.useSheen=t.hasSheen,e.useIridescence=t.hasIrridescence,e.useMetalness=t.hasMetalness,e.useDynamicRefraction=t.dynamicRefraction,e.vertexColors=!1,e.lightMapEnabled=t.hasLighting,e.dirLightMapEnabled=t.dirLightMap,e.useHeights=t.hasHeights,e.useNormals=t.hasNormals,e.useClearCoatNormals=t.hasClearCoatNormals,e.useAo=t.hasAo,e.diffuseMapEnabled=t.hasDiffuseMap},e.updateEnvOptions=function(e,t,n){e.fog=t.useFog?n.fog:"none",e.gamma=t.useGammaTonemap?n.gammaCorrection:Nm,e.toneMap=t.useGammaTonemap?n.toneMapping:-1,e.fixSeams=!1,t.useSkybox&&n.envAtlas&&n.skybox?(e.reflectionSource="envAtlasHQ",e.reflectionEncoding=n.envAtlas.encoding,e.reflectionCubemapEncoding=n.skybox.encoding):t.useSkybox&&n.envAtlas?(e.reflectionSource="envAtlas",e.reflectionEncoding=n.envAtlas.encoding):t.useSkybox&&n.skybox?(e.reflectionSource="cubeMap",e.reflectionEncoding=n.skybox.encoding):(e.reflectionSource=null,e.reflectionEncoding=null),t.ambientSH?(e.ambientSource="ambientSH",e.ambientEncoding=null):e.reflectionSource&&n.envAtlas?(e.ambientSource="envAtlas",e.ambientEncoding=n.envAtlas.encoding):(e.ambientSource="constant",e.ambientEncoding=null);var i=!!e.reflectionSource;e.skyboxIntensity=i&&(1!==n.skyboxIntensity||n.physicalUnits),e.useCubeMapRotation=i&&n._skyboxRotationShaderInclude},e.updateLightingOptions=function(t,n,i,a){if(t.lightMapWithoutAmbient=!1,n.useLighting){var s=[],r=i?i>>16:_f;t.lightMaskDynamic=!!(r&_f),t.lightMapWithoutAmbient=!1,a&&(e.collectLights(Wu,a[Wu],s,r),e.collectLights(ju,a[ju],s,r),e.collectLights(Yu,a[Yu],s,r)),t.lights=s}else t.lights=[];0!==t.lights.length&&0==(i&Zm)||(t.noShadow=!0)},e.collectLights=function(e,t,n,i){for(var a=0;a<t.length;a++){var s=t[a];if(s.enabled&&s.mask&i){if(e!==Wu&&s.isStatic)continue;n.push(s)}}},e}(),oy=function(){function e(){this.code=""}var t=e.prototype;return t.append=function(){for(var e=this,t=arguments.length,n=new Array(t),i=0;i<t;i++)n[i]=arguments[i];n.forEach((function(t){t.endsWith("\n")?e.code+=t:e.code+=t+"\n"}))},t.prepend=function(){for(var e=this,t=arguments.length,n=new Array(t),i=0;i<t;i++)n[i]=arguments[i];n.forEach((function(t){t.endsWith("\n")?e.code=t+e.code:e.code=t+"\n"+e.code}))},e}(),ly={linear:"decodeLinear",srgb:"decodeGamma",rgbm:"decodeRGBM",rgbe:"decodeRGBE",rgbp:"decodeRGBP"},cy={linear:"encodeLinear",srgb:"encodeGamma",rgbm:"encodeRGBM",rgbe:"encodeRGBE",rgbp:"encodeRGBP"},hy=function(){function e(){}return e.decodeFunc=function(e){return ly[e]||"decodeGamma"},e.encodeFunc=function(e){return cy[e]||"encodeGamma"},e}(),py=1/255,dy=new Float32Array(1),uy=new Int32Array(dy.buffer),my=function(){function e(){}return e.float2Half=function(e){dy[0]=e;var t=uy[0],n=t>>16&32768,i=t>>12&2047,a=t>>23&255;return a<103?n:a>142?(n|=31744,n|=(255===a?0:1)&&8388607&t):a<113?n|=((i|=2048)>>114-a)+(i>>113-a&1):(n|=a-112<<10|i>>1,n+=1&i)},e.float2Bytes=function(e,t,n,i){var a=255*e%1;if(t[n+0]=Math.round(255*(e%1-py*a)),i>1){var s=65025*e%1;if(t[n+1]=Math.round(255*(a-py*s)),i>2){var r=16581375*e%1;t[n+2]=Math.round(255*(s-py*r)),i>3&&(t[n+3]=Math.round(255*r))}}},e.float2BytesRange=function(t,n,i,a,s,r){t=at.clamp((t-a)/(s-a),0,1),e.float2Bytes(t,n,i,r)},e.float2MantissaExponent=function(t,n,i,a){var s=Math.floor(Math.log2(Math.abs(t)))+1;t/=Math.pow(2,s),e.float2BytesRange(t,n,i,-1,1,a-1),n[i+a-1]=Math.round(s+127)},e}(),fy=new St,gy=new St,vy=new St,yy=function(){function e(){}return e.create=function(t,n,i){var a=new iy;switch(a.node=new Cv(t),a.aspectRatio=1,a.aspectRatioMode=$f,a._scissorRectClear=!0,n){case ju:a.node.setRotation(e.pointLightRotations[i]),a.fov=90,a.projection=Cm;break;case Yu:a.projection=Cm;break;case Wu:a.projection=Sm}return a},e.evalSpotCookieMatrix=function(t){var n=e._spotCookieCamera;n||(n=e.create("SpotCookieCamera",Yu),e._spotCookieCamera=n),n.fov=2*t._outerConeAngle;var i=n._node;i.setPosition(t._node.getPosition()),i.setRotation(t._node.getRotation()),i.rotateLocal(-90,0,0),fy.setTRS(i.getPosition(),i.getRotation(),pt.ONE).invert(),gy.mul2(n.projectionMatrix,fy);var a=t.cookieMatrix,s=t.atlasViewport;return vy.setViewport(s.x,s.y,s.z,s.w),a.mul2(vy,gy),a},e}();yy.pointLightRotations=[(new Et).setFromEulerAngles(0,90,180),(new Et).setFromEulerAngles(0,-90,180),(new Et).setFromEulerAngles(90,0,0),(new Et).setFromEulerAngles(-90,0,0),(new Et).setFromEulerAngles(0,180,180),(new Et).setFromEulerAngles(0,0,180)],yy._spotCookieCamera=null;var _y=1e-6,wy=new pt,by=new Float32Array(6),xy=new pt(-.5,0,0),Cy=new pt(0,0,.5),Sy={FLAGS:0,COLOR_A:1,COLOR_B:2,SPOT_ANGLES:3,SHADOW_BIAS:4,COOKIE_A:5,COOKIE_B:6,COUNT_ALWAYS:7,POSITION_X:7,POSITION_Y:8,POSITION_Z:9,RANGE:10,SPOT_DIRECTION_X:11,SPOT_DIRECTION_Y:12,SPOT_DIRECTION_Z:13,PROJ_MAT_00:14,ATLAS_VIEWPORT_A:14,PROJ_MAT_01:15,ATLAS_VIEWPORT_B:15,PROJ_MAT_02:16,PROJ_MAT_03:17,PROJ_MAT_10:18,PROJ_MAT_11:19,PROJ_MAT_12:20,PROJ_MAT_13:21,PROJ_MAT_20:22,PROJ_MAT_21:23,PROJ_MAT_22:24,PROJ_MAT_23:25,PROJ_MAT_30:26,PROJ_MAT_31:27,PROJ_MAT_32:28,PROJ_MAT_33:29,AREA_DATA_WIDTH_X:30,AREA_DATA_WIDTH_Y:31,AREA_DATA_WIDTH_Z:32,AREA_DATA_HEIGHT_X:33,AREA_DATA_HEIGHT_Y:34,AREA_DATA_HEIGHT_Z:35,COUNT:36},Ey={POSITION_RANGE:0,SPOT_DIRECTION:1,PROJ_MAT_0:2,ATLAS_VIEWPORT:2,PROJ_MAT_1:3,PROJ_MAT_2:4,PROJ_MAT_3:5,AREA_DATA_WIDTH:6,AREA_DATA_HEIGHT:7,COUNT:8},Ty=function(){function e(t){this.device=t,this.cookiesEnabled=!1,this.shadowsEnabled=!1,this.areaLightsEnabled=!1,this.maxLights=255;var n=Sy.COUNT_ALWAYS,i=0;e.lightTextureFormat===e.FORMAT_FLOAT?i=Ey.COUNT:n=Sy.COUNT,this.lights8=new Uint8ClampedArray(4*n*this.maxLights),this.lightsTexture8=e.createTexture(this.device,n,this.maxLights,ti,"LightsTexture8"),this._lightsTexture8Id=this.device.scope.resolve("lightsTexture8"),i?(this.lightsFloat=new Float32Array(4*i*this.maxLights),this.lightsTextureFloat=e.createTexture(this.device,i,this.maxLights,li,"LightsTextureFloat"),this._lightsTextureFloatId=this.device.scope.resolve("lightsTextureFloat")):(this.lightsFloat=null,this.lightsTextureFloat=null,this._lightsTextureFloatId=void 0),this._lightsTextureInvSizeId=this.device.scope.resolve("lightsTextureInvSize"),this._lightsTextureInvSizeData=new Float32Array(4),this._lightsTextureInvSizeData[0]=i?1/this.lightsTextureFloat.width:0,this._lightsTextureInvSizeData[1]=i?1/this.lightsTextureFloat.height:0,this._lightsTextureInvSizeData[2]=1/this.lightsTexture8.width,this._lightsTextureInvSizeData[3]=1/this.lightsTexture8.height,this.invMaxColorValue=0,this.invMaxAttenuation=0,this.boundsMin=new pt,this.boundsDelta=new pt}e.initShaderDefines=function(){var t=e.lightTextureFormat===e.FORMAT_FLOAT?"FLOAT":"8BIT";e.shaderDefines="\n            \n#define CLUSTER_TEXTURE_"+t+"\n            "+e.buildShaderDefines(Sy,"CLUSTER_TEXTURE_8_")+"\n            "+e.buildShaderDefines(Ey,"CLUSTER_TEXTURE_F_")+"\n        "},e.buildShaderDefines=function(t,n){var i="",a=e.useTexelFetch?"":".5";return Object.keys(t).forEach((function(e){i+="\n#define "+n+e+" "+t[e]+a})),i},e.init=function(t){e.lightTextureFormat=t.extTextureFloat&&t.maxTextures>8?e.FORMAT_FLOAT:e.FORMAT_8BIT,e.useTexelFetch=t.supportsTextureFetch,e.initShaderDefines()},e.createTexture=function(e,t,n,i,a){return new vl(e,{name:a,width:t,height:n,mipmaps:!1,format:i,addressU:Yt,addressV:Yt,type:Ea,magFilter:On,minFilter:On,anisotropy:1})};var t=e.prototype;return t.destroy=function(){this.lightsTexture8&&(this.lightsTexture8.destroy(),this.lightsTexture8=null),this.lightsTextureFloat&&(this.lightsTextureFloat.destroy(),this.lightsTextureFloat=null)},t.setCompressionRanges=function(e,t){this.invMaxColorValue=1/t,this.invMaxAttenuation=1/e},t.setBounds=function(e,t){this.boundsMin.copy(e),this.boundsDelta.copy(t)},t.uploadTextures=function(){this.lightsTextureFloat&&(this.lightsTextureFloat.lock().set(this.lightsFloat),this.lightsTextureFloat.unlock()),this.lightsTexture8.lock().set(this.lights8),this.lightsTexture8.unlock()},t.updateUniforms=function(){this._lightsTexture8Id.setValue(this.lightsTexture8),e.lightTextureFormat===e.FORMAT_FLOAT&&this._lightsTextureFloatId.setValue(this.lightsTextureFloat),this._lightsTextureInvSizeId.setValue(this._lightsTextureInvSizeData)},t.getSpotDirection=function(e,t){t._node.getWorldTransform().getY(e).mulScalar(-1),e.normalize()},t.getLightAreaSizes=function(e){var t=e._node.getWorldTransform();return t.transformVector(xy,wy),by[0]=wy.x,by[1]=wy.y,by[2]=wy.z,t.transformVector(Cy,wy),by[3]=wy.x,by[4]=wy.y,by[5]=wy.z,by},t.addLightDataFlags=function(e,t,n,i,a,s){e[t+0]=i?255:0,e[t+1]=64*n._shape,e[t+2]=255*n._falloffMode,e[t+3]=a?255*s:0},t.addLightDataColor=function(e,t,n,i,a){var s=this.invMaxColorValue,r=i?n._linearFinalColor:n._finalColor;my.float2Bytes(r[0]*s,e,t+0,2),my.float2Bytes(r[1]*s,e,t+2,2),my.float2Bytes(r[2]*s,e,t+4,2),e[t+6]=a?255:0;var o=!!(n.mask&_f),l=!!(n.mask&wf);e[t+7]=o&&l?127:l?255:0},t.addLightDataSpotAngles=function(e,t,n){my.float2Bytes(n._innerConeAngleCos*(.5-_y)+.5,e,t+0,2),my.float2Bytes(n._outerConeAngleCos*(.5-_y)+.5,e,t+2,2)},t.addLightDataShadowBias=function(e,t,n){var i=n.getRenderData(null,0),a=n._getUniformBiasValues(i);my.float2BytesRange(a.bias,e,t,-1,20,2),my.float2Bytes(a.normalBias,e,t+2,2)},t.addLightDataPositionRange=function(e,t,n,i){var a=wy.sub2(i,this.boundsMin).div(this.boundsDelta);my.float2Bytes(a.x,e,t+0,4),my.float2Bytes(a.y,e,t+4,4),my.float2Bytes(a.z,e,t+8,4),my.float2Bytes(n.attenuationEnd*this.invMaxAttenuation,e,t+12,4)},t.addLightDataSpotDirection=function(e,t,n){this.getSpotDirection(wy,n),my.float2Bytes(wy.x*(.5-_y)+.5,e,t+0,4),my.float2Bytes(wy.y*(.5-_y)+.5,e,t+4,4),my.float2Bytes(wy.z*(.5-_y)+.5,e,t+8,4)},t.addLightDataLightProjMatrix=function(e,t,n){for(var i=n.data,a=0;a<12;a++)my.float2BytesRange(i[a],e,t+4*a,-2,2,4);for(var s=12;s<16;s++)my.float2MantissaExponent(i[s],e,t+4*s,4)},t.addLightDataCookies=function(e,t,n){var i="rgb"===n._cookieChannel;if(e[t+0]=Math.floor(255*n.cookieIntensity),e[t+1]=i?255:0,!i){var a=n._cookieChannel;e[t+4]="rrr"===a?255:0,e[t+5]="ggg"===a?255:0,e[t+6]="bbb"===a?255:0,e[t+7]="aaa"===a?255:0}},t.addLightAtlasViewport=function(e,t,n){my.float2Bytes(n.x,e,t+0,2),my.float2Bytes(n.y,e,t+2,2),my.float2Bytes(n.z/3,e,t+4,2)},t.addLightAreaSizes=function(e,t,n){for(var i=this.getLightAreaSizes(n),a=0;a<6;a++)my.float2MantissaExponent(i[a],e,t+4*a,4)},t.addLightData=function(t,n,i){var a=t._type===Yu,s=t.atlasViewportAllocated,r=this.cookiesEnabled&&!!t._cookie&&s,o=this.areaLightsEnabled&&t.shape!==Ku,l=this.shadowsEnabled&&t.castShadows&&s,c=t._node.getPosition(),h=null,p=null;a?l?h=t.getRenderData(null,0).shadowMatrix:r&&(h=yy.evalSpotCookieMatrix(t)):(l||r)&&(p=t.atlasViewport);var d=this.lights8,u=n*this.lightsTexture8.width*4;if(this.addLightDataFlags(d,u+4*Sy.FLAGS,t,a,l,t.shadowIntensity),this.addLightDataColor(d,u+4*Sy.COLOR_A,t,i,r),a&&this.addLightDataSpotAngles(d,u+4*Sy.SPOT_ANGLES,t),t.castShadows&&this.addLightDataShadowBias(d,u+4*Sy.SHADOW_BIAS,t),r&&this.addLightDataCookies(d,u+4*Sy.COOKIE_A,t),e.lightTextureFormat===e.FORMAT_FLOAT){var m=this.lightsFloat,f=n*this.lightsTextureFloat.width*4;if(m[f+4*Ey.POSITION_RANGE+0]=c.x,m[f+4*Ey.POSITION_RANGE+1]=c.y,m[f+4*Ey.POSITION_RANGE+2]=c.z,m[f+4*Ey.POSITION_RANGE+3]=t.attenuationEnd,a&&(this.getSpotDirection(wy,t),m[f+4*Ey.SPOT_DIRECTION+0]=wy.x,m[f+4*Ey.SPOT_DIRECTION+1]=wy.y,m[f+4*Ey.SPOT_DIRECTION+2]=wy.z),h)for(var g=h.data,v=0;v<16;v++)m[f+4*Ey.PROJ_MAT_0+v]=g[v];if(p&&(m[f+4*Ey.ATLAS_VIEWPORT+0]=p.x,m[f+4*Ey.ATLAS_VIEWPORT+1]=p.y,m[f+4*Ey.ATLAS_VIEWPORT+2]=p.z/3),o){var y=this.getLightAreaSizes(t);m[f+4*Ey.AREA_DATA_WIDTH+0]=y[0],m[f+4*Ey.AREA_DATA_WIDTH+1]=y[1],m[f+4*Ey.AREA_DATA_WIDTH+2]=y[2],m[f+4*Ey.AREA_DATA_HEIGHT+0]=y[3],m[f+4*Ey.AREA_DATA_HEIGHT+1]=y[4],m[f+4*Ey.AREA_DATA_HEIGHT+2]=y[5]}}else this.addLightDataPositionRange(d,u+4*Sy.POSITION_X,t,c),a&&this.addLightDataSpotDirection(d,u+4*Sy.SPOT_DIRECTION_X,t),h&&this.addLightDataLightProjMatrix(d,u+4*Sy.PROJ_MAT_00,h),p&&this.addLightAtlasViewport(d,u+4*Sy.ATLAS_VIEWPORT_A,p),o&&this.addLightAreaSizes(d,u+4*Sy.AREA_DATA_WIDTH_X,t)},e}();Vv=Ty,Ty.FORMAT_FLOAT=0,Ty.FORMAT_8BIT=1,Ty.lightTextureFormat=Vv.FORMAT_8BIT,Ty.useTexelFetch=!1,Ty.shaderDefines="";var Ay={vertex_normal:Bi,vertex_tangent:Ni,vertex_texCoord0:Gi,vertex_texCoord1:Wi,vertex_color:Vi,vertex_boneWeights:Ui,vertex_boneIndices:zi},Ly={vVertexColor:"vec4",vPositionW:"vec3",vNormalV:"vec3",vNormalW:"vec3",vTangentW:"vec3",vBinormalW:"vec3",vObjectSpaceUpW:"vec3",vUv0:"vec2",vUv1:"vec2"},My=function(){function e(e,t){if(this.device=e,this.options=t,this.attributes={vertex_position:Fi},t.userAttributes)for(var n=0,i=Object.entries(t.userAttributes);n<i.length;n++){var a=i[n],s=a[0],r=a[1];this.attributes[r]=s}if(t.chunks){var o=t.chunks;for(var l in this.chunks=Object.create(Mg),Mg)if(o.hasOwnProperty(l)){var c=o[l];for(var h in Ay)Ay.hasOwnProperty(h)&&c.indexOf(h)>=0&&(this.attributes[h]=Ay[h]);this.chunks[l]=c}}else this.chunks=Mg;this.shaderPassInfo=Yg.get(this.device).getByIndex(t.pass),this.shadowPass=this.shaderPassInfo.isShadow,this.lighting=t.lights.length>0||t.dirLightMapEnabled||t.clusteredLightingEnabled,this.reflections=!!t.reflectionSource,this.needsNormal=this.lighting||this.reflections||t.useSpecular||t.ambientSH||t.useHeights||t.enableGGXSpecular||t.clusteredLightingEnabled&&!this.shadowPass||t.useClearCoatNormals,this.needsNormal=this.needsNormal&&!this.shadowPass,this.needsSceneColor=t.useDynamicRefraction,this.needsScreenSize=t.useDynamicRefraction,this.needsTransforms=t.useDynamicRefraction,this.varyings="",this.varyingDefines="",this.vshader=null,this.frontendDecl=null,this.frontendCode=null,this.frontendFunc=null,this.lightingUv=null,this.defines=[],this.fshader=null}var t=e.prototype;return t._vsAddBaseCode=function(e,t,n){return e+=t.baseVS,n.nineSlicedMode!==Uf&&n.nineSlicedMode!==zf||(e+=t.baseNineSlicedVS),e},t._vsAddTransformCode=function(e,t,n,i){return e+=this.chunks.transformVS},t._setMapTransform=function(e,t,n,i){var a=n+100*i;if(!e[3][a]){var s="texture_"+t+"MapTransform";e[0]+="uniform vec3 "+s+"0;\n",e[0]+="uniform vec3 "+s+"1;\n",e[1]+="varying vec2 vUV"+i+"_"+n+";\n",e[2]+="   vUV"+i+"_"+n+" = vec2(dot(vec3(uv"+i+", 1), "+s+"0), dot(vec3(uv"+i+", 1), "+s+"1));\n",e[3][a]=!0}return e},t._fsGetBaseCode=function(){var e=this.options,t=this.chunks,n=this.chunks.basePS;return e.nineSlicedMode===Uf?n+=t.baseNineSlicedPS:e.nineSlicedMode===zf&&(n+=t.baseNineSlicedTiledPS),n},t._fsGetStartCode=function(e,t,n,i){var a=n.startPS;return i.nineSlicedMode===Uf?a+=n.startNineSlicedPS:i.nineSlicedMode===zf&&(a+=n.startNineSlicedTiledPS),a},t._getLightSourceShapeString=function(e){switch(e){case Zu:return"Rect";case Qu:return"Disk";case Ju:return"Sphere";default:return""}},t.generateVertexShader=function(e,t,n){var i=this,a=this.device,s=this.options,r=this.chunks,o="",l="";o=this._vsAddBaseCode(o,r,s),l+="   vPositionW    = getWorldPosition();\n",this.options.pass===Sf&&(o+="varying float vDepth;\n",o+="#ifndef VIEWMATRIX\n",o+="#define VIEWMATRIX\n",o+="uniform mat4 matrix_view;\n",o+="#endif\n",o+="#ifndef CAMERAPLANES\n",o+="#define CAMERAPLANES\n",o+="uniform vec4 camera_params;\n\n",o+="#endif\n",l+="    vDepth = -(matrix_view * vec4(vPositionW,1.0)).z * camera_params.x;\n"),this.options.useInstancing&&(this.attributes.instance_line1=ha,this.attributes.instance_line2=pa,this.attributes.instance_line3=da,this.attributes.instance_line4=ua,o+=r.instancingVS),this.needsNormal&&(this.attributes.vertex_normal=Bi,l+="   vNormalW = getNormal();\n","sphereMap"===s.reflectionSource&&a.fragmentUniformsCount<=16&&(o+=r.viewNormalVS,l+="   vNormalV    = getViewNormal();\n"),s.hasTangents&&(s.useHeights||s.useNormals||s.enableGGXSpecular)?(this.attributes.vertex_tangent=Ni,o+=r.tangentBinormalVS,l+="   vTangentW   = getTangent();\n",l+="   vBinormalW  = getBinormal();\n"):!s.enableGGXSpecular&&a.extStandardDerivatives||(l+="   vObjectSpaceUpW = normalize(dNormalMatrix * vec3(0, 1, 0));\n"));for(var c=2,h=0;h<c;h++)e[h]&&(this.attributes["vertex_texCoord"+h]="TEXCOORD"+h,o+=r["uv"+h+"VS"],l+="   vec2 uv"+h+" = getUv"+h+"();\n"),t[h]&&(l+="   vUv"+h+" = uv"+h+";\n");var p=[o,this.varyings,l,[]];if(n.forEach((function(e){i._setMapTransform(p,e.name,e.id,e.uv)})),o=p[0],this.varyings=p[1],l=p[2],s.vertexColors&&(this.attributes.vertex_color=Vi,l+="   vVertexColor = vertex_color;\n"),s.useMsdf&&s.msdfTextAttribute&&(this.attributes.vertex_outlineParameters=ra,this.attributes.vertex_shadowParameters=oa,l+="    unpackMsdfParams();\n",o+=r.msdfVS),s.useMorphPosition||s.useMorphNormal)if(s.useMorphTextureBased){o+="#define MORPHING_TEXTURE_BASED\n",s.useMorphPosition&&(o+="#define MORPHING_TEXTURE_BASED_POSITION\n"),s.useMorphNormal&&(o+="#define MORPHING_TEXTURE_BASED_NORMAL\n"),this.attributes.morph_vertex_id=ua;var d=a.isWebGPU?"uint":"float";o+="attribute "+d+" morph_vertex_id;\n"}else o+="#define MORPHING\n",s.useMorphPosition?(this.attributes.morph_pos0=ra,this.attributes.morph_pos1=oa,this.attributes.morph_pos2=la,this.attributes.morph_pos3=ca,o+="#define MORPHING_POS03\n",o+="attribute vec3 morph_pos0;\n",o+="attribute vec3 morph_pos1;\n",o+="attribute vec3 morph_pos2;\n",o+="attribute vec3 morph_pos3;\n"):s.useMorphNormal&&(this.attributes.morph_nrm0=ra,this.attributes.morph_nrm1=oa,this.attributes.morph_nrm2=la,this.attributes.morph_nrm3=ca,o+="#define MORPHING_NRM03\n",o+="attribute vec3 morph_nrm0;\n",o+="attribute vec3 morph_nrm1;\n",o+="attribute vec3 morph_nrm2;\n",o+="attribute vec3 morph_nrm3;\n"),s.useMorphNormal?(this.attributes.morph_nrm4=ha,this.attributes.morph_nrm5=pa,this.attributes.morph_nrm6=da,this.attributes.morph_nrm7=ua,o+="#define MORPHING_NRM47\n",o+="attribute vec3 morph_nrm4;\n",o+="attribute vec3 morph_nrm5;\n",o+="attribute vec3 morph_nrm6;\n",o+="attribute vec3 morph_nrm7;\n"):(this.attributes.morph_pos4=ha,this.attributes.morph_pos5=pa,this.attributes.morph_pos6=da,this.attributes.morph_pos7=ua,o+="#define MORPHING_POS47\n",o+="attribute vec3 morph_pos4;\n",o+="attribute vec3 morph_pos5;\n",o+="attribute vec3 morph_pos6;\n",o+="attribute vec3 morph_pos7;\n");s.skin?(this.attributes.vertex_boneWeights=Ui,this.attributes.vertex_boneIndices=zi,o+=Rg.skinCode(a,r),o+="#define SKIN\n"):s.useInstancing&&(o+="#define INSTANCING\n"),s.screenSpace&&(o+="#define SCREENSPACE\n"),s.pixelSnap&&(o+="#define PIXELSNAP\n"),o=this._vsAddTransformCode(o,a,r,s),this.needsNormal&&(o+=r.normalVS),o+="\n",o+=r.startVS,o+=l,o+=r.endVS,o+="}",Object.keys(Ly).forEach((function(e){o.indexOf(e)>=0&&(i.varyings+="varying "+Ly[e]+" "+e+";\n",i.varyingDefines+="#define VARYING_"+e.toUpperCase()+"\n")}));var u=this.shaderPassInfo.shaderDefines;this.vshader=u+this.varyings+o},t._fsGetBeginCode=function(){for(var e=this.shaderPassInfo.shaderDefines,t=0;t<this.defines.length;t++)e+="#define "+this.defines[t]+"\n";return e},t._fsGetPickPassCode=function(){var e=this._fsGetBeginCode();return e+="uniform vec4 uColor;\n",e+=this.varyings,e+=this.varyingDefines,e+=this.frontendDecl,e+=this.frontendCode,e+=Rg.begin(),e+=this.frontendFunc,e+="    gl_FragColor = uColor;\n",e+=Rg.end()},t._fsGetDepthPassCode=function(){var e=this.chunks,t=this._fsGetBeginCode();return t+="varying float vDepth;\n",t+=this.varyings,t+=this.varyingDefines,t+=e.packDepthPS,t+=this.frontendDecl,t+=this.frontendCode,t+=Rg.begin(),t+=this.frontendFunc,t+="    gl_FragColor = packFloat(vDepth);\n",t+=Rg.end()},t._fsGetShadowPassCode=function(){var e=this.device,t=this.options,n=this.chunks,i=this.varyings,a=this.shaderPassInfo.lightType,s=this.shaderPassInfo.shadowType;a!==Wu&&t.clusteredLightingEnabled&&(s!==im&&s!==am&&s!==sm&&s!==lm||(s=tm));var r=this._fsGetBeginCode();e.extStandardDerivatives&&e.isWebGL1&&(r+="uniform vec2 polygonOffset;\n"),s===sm?e.textureFloatHighPrecision?r+="#define VSM_EXPONENT 15.0\n\n":r+="#define VSM_EXPONENT 5.54\n\n":s===am&&(r+="#define VSM_EXPONENT 5.54\n\n"),a!==Wu&&(r+="uniform vec3 view_position;\n",r+="uniform float light_radius;\n"),r+=i,r+=this.varyingDefines,r+=this.frontendDecl,r+=this.frontendCode;var o=s===om||s===tm||s===rm||s===lm,l=a===ju&&s!==lm&&!t.clusteredLightingEnabled,c=o&&!e.supportsDepthShadow||l;c?r+=n.packDepthPS:s===im&&(r+="vec2 encodeFloatRG( float v ) {\n",r+="    vec2 enc = vec2(1.0, 255.0) * v;\n",r+="    enc = fract(enc);\n",r+="    enc -= enc.yy * vec2(1.0/255.0, 1.0/255.0);\n",r+="    return enc;\n",r+="}\n\n"),s===lm&&(r+=Mg.linearizeDepthPS),r+=Rg.begin(),r+=this.frontendFunc;var h=s===im||s===am||s===sm,p=e.isWebGL1&&e.extStandardDerivatives,d=!1;return a===Wu||!h&&a===Yu?r+="    float depth = gl_FragCoord.z;\n":(r+="    float depth = min(distance(view_position, vPositionW) / light_radius, 0.99999);\n",d=!0),p&&(r+="    float minValue = 2.3374370500153186e-10; //(1.0 / 255.0) / (256.0 * 256.0 * 256.0);\n",r+="    depth += polygonOffset.x * max(abs(dFdx(depth)), abs(dFdy(depth))) + minValue * polygonOffset.y;\n",d=!0),c?r+="    gl_FragColor = packFloat(depth);\n":h?r+=s===im?"    gl_FragColor = vec4(encodeFloatRG(depth), encodeFloatRG(depth*depth));\n":n.storeEVSMPS:s===lm?r+="    gl_FragColor.r = depth;\n":(d&&(r+="    gl_FragDepth = depth;\n"),r+="    gl_FragColor = vec4(1.0);\n"),r+=Rg.end()},t._fsGetLitPassCode=function(){var e=this.device,t=this.options,n=this.chunks,i=new oy,a=new oy,s=new oy,r=new oy;!1===t.opacityFadesSpecular&&i.append("uniform float material_alphaFade;"),t.useSpecular&&(this.defines.push("LIT_SPECULAR"),this.reflections&&this.defines.push("LIT_REFLECTIONS"),t.useClearCoat&&this.defines.push("LIT_CLEARCOAT"),t.fresnelModel>0&&this.defines.push("LIT_SPECULAR_FRESNEL"),t.conserveEnergy&&this.defines.push("LIT_CONSERVE_ENERGY"),t.useSheen&&this.defines.push("LIT_SHEEN"),t.useIridescence&&this.defines.push("LIT_IRIDESCENCE"));var o=[],l=0,c=!1,h=!1,p=!1,d=t.lights.some((function(e){return e._shape&&e._shape!==Ku}));t.clusteredLightingEnabled&&t.clusteredLightingAreaLightsEnabled&&(d=!0);var u="highp";e.areaLightLutFormat===ti&&(i.append("#define AREA_R8_G8_B8_A8_LUTS"),u="lowp"),(d||t.clusteredLightingEnabled)&&(i.append("#define AREA_LIGHTS"),i.append("uniform "+u+" sampler2D areaLightsLutTex1;"),i.append("uniform "+u+" sampler2D areaLightsLutTex2;"));for(var m=0;m<t.lights.length;m++){var f=t.lights[m],g=f._type;if(!t.clusteredLightingEnabled||g===Wu){var v=d&&f._shape?f._shape:Ku;i.append("uniform vec3 light"+m+"_color;"),f._shadowType===lm&&f.castShadows&&!t.noShadow&&(i.append("uniform float light"+m+"_shadowSearchArea;"),i.append("uniform vec4 light"+m+"_cameraParams;")),g===Wu?i.append("uniform vec3 light"+m+"_direction;"):(i.append("uniform vec3 light"+m+"_position;"),i.append("uniform float light"+m+"_radius;"),g===Yu&&(i.append("uniform vec3 light"+m+"_direction;"),i.append("uniform float light"+m+"_innerConeAngle;"),i.append("uniform float light"+m+"_outerConeAngle;"))),v!==Ku&&(g===Wu&&i.append("uniform vec3 light"+m+"_position;"),i.append("uniform vec3 light"+m+"_halfWidth;"),i.append("uniform vec3 light"+m+"_halfHeight;")),f.castShadows&&!t.noShadow&&(i.append("uniform mat4 light"+m+"_shadowMatrix;"),i.append("uniform float light"+m+"_shadowIntensity;"),g===Wu&&(i.append("uniform mat4 light"+m+"_shadowMatrixPalette[4];"),i.append("uniform float light"+m+"_shadowCascadeDistances[4];"),i.append("uniform float light"+m+"_shadowCascadeCount;")),i.append("uniform vec4 light"+m+"_shadowParams;"),g===Wu&&(c=!0),g===ju?i.append("uniform samplerCube light"+m+"_shadowMap;"):f._isPcf&&e.supportsDepthShadow?i.append("uniform sampler2DShadow light"+m+"_shadowMap;"):i.append("uniform sampler2D light"+m+"_shadowMap;"),l++,o[f._shadowType]=!0,f._isVsm&&(h=!0),f._shadowType===lm&&(p=!0)),f._cookie&&(f._cookie._cubemap?g===ju&&(i.append("uniform samplerCube light"+m+"_cookie;"),i.append("uniform float light"+m+"_cookieIntensity;"),f.castShadows&&!t.noShadow||i.append("uniform mat4 light"+m+"_shadowMatrix;")):g===Yu&&(i.append("uniform sampler2D light"+m+"_cookie;"),i.append("uniform float light"+m+"_cookieIntensity;"),f.castShadows&&!t.noShadow||i.append("uniform mat4 light"+m+"_shadowMatrix;"),f._cookieTransform&&(i.append("uniform vec4 light"+m+"_cookieMatrix;"),i.append("uniform vec2 light"+m+"_cookieOffset;"))))}}var y=this.needsNormal&&(t.useNormals||t.useClearCoatNormals||t.enableGGXSpecular&&!t.useHeights);if(y&&(t.hasTangents?a.append(t.fastTbn?n.TBNfastPS:n.TBNPS):e.extStandardDerivatives&&(t.useNormals||t.useClearCoatNormals)?a.append(n.TBNderivativePS.replace(/\$UV/g,this.lightingUv)):a.append(n.TBNObjectSpacePS)),a.append(n.sphericalPS),a.append(n.decodePS),a.append(Rg.gammaCode(t.gamma,n)),a.append(Rg.tonemapCode(t.toneMap,n)),a.append(Rg.fogCode(t.fog,n)),a.append(this.frontendCode),t.useCubeMapRotation&&i.append("#define CUBEMAP_ROTATION"),this.needsNormal&&(a.append(n.cubeMapRotatePS),a.append(t.cubeMapProjection>0?n.cubeMapProjectBoxPS:n.cubeMapProjectNonePS),a.append(t.skyboxIntensity?n.envMultiplyPS:n.envConstPS)),(this.lighting&&t.useSpecular||this.reflections)&&(t.useMetalness&&a.append(n.metalnessModulatePS),t.fresnelModel===Du&&a.append(n.fresnelSchlickPS),t.useIridescence&&a.append(n.iridescenceDiffractionPS)),t.useAo)switch(a.append(n.aoDiffuseOccPS),t.occludeSpecular){case qm:a.append(t.occludeSpecularFloat?n.aoSpecOccSimplePS:n.aoSpecOccConstSimplePS);break;case Km:a.append(t.occludeSpecularFloat?n.aoSpecOccPS:n.aoSpecOccConstPS)}if("envAtlasHQ"===t.reflectionSource)a.append(t.fixSeams?n.fixCubemapSeamsStretchPS:n.fixCubemapSeamsNonePS),a.append(n.envAtlasPS),a.append(n.reflectionEnvHQPS.replace(/\$DECODE_CUBEMAP/g,hy.decodeFunc(t.reflectionCubemapEncoding)).replace(/\$DECODE/g,hy.decodeFunc(t.reflectionEncoding)));else if("envAtlas"===t.reflectionSource)a.append(n.envAtlasPS),a.append(n.reflectionEnvPS.replace(/\$DECODE/g,hy.decodeFunc(t.reflectionEncoding)));else if("cubeMap"===t.reflectionSource)a.append(t.fixSeams?n.fixCubemapSeamsStretchPS:n.fixCubemapSeamsNonePS),a.append(n.reflectionCubePS.replace(/\$DECODE/g,hy.decodeFunc(t.reflectionEncoding)));else if("sphereMap"===t.reflectionSource){var _=e.fragmentUniformsCount>16?n.reflectionSpherePS:n.reflectionSphereLowPS;a.append(_.replace(/\$DECODE/g,hy.decodeFunc(t.reflectionEncoding)))}this.reflections&&(t.useClearCoat&&a.append(n.reflectionCCPS),t.useSheen&&a.append(n.reflectionSheenPS)),t.useRefraction&&(t.useDynamicRefraction?a.append(n.refractionDynamicPS):this.reflections&&a.append(n.refractionCubePS)),t.useSheen&&a.append(n.lightSheenPS),t.clusteredLightingEnabled&&(a.append(n.clusteredLightUtilsPS),t.clusteredLightingCookiesEnabled&&a.append(n.clusteredLightCookiesPS),t.clusteredLightingShadowsEnabled&&!t.noShadow&&(o[tm]=!0,o[rm]=!0,o[lm]=!0)),(l>0||t.clusteredLightingEnabled)&&(c&&a.append(n.shadowCascadesPS),(o[om]||o[tm])&&a.append(n.shadowStandardPS),o[rm]&&!e.isWebGL1&&a.append(n.shadowStandardGL2PS),h&&(a.append(n.shadowVSM_commonPS),o[im]&&a.append(n.shadowVSM8PS),o[am]&&a.append(e.extTextureHalfFloatLinear?n.shadowEVSMPS.replace(/\$/g,"16"):n.shadowEVSMnPS.replace(/\$/g,"16")),o[sm]&&a.append(e.extTextureFloatLinear?n.shadowEVSMPS.replace(/\$/g,"32"):n.shadowEVSMnPS.replace(/\$/g,"32"))),p&&(a.append(n.linearizeDepthPS),a.append(n.shadowPCSSPS)),e.isWebGL2||e.isWebGPU||e.extStandardDerivatives||a.append(n.biasConstPS)),t.enableGGXSpecular&&a.append("uniform float material_anisotropy;"),this.lighting&&(a.append(n.lightDiffuseLambertPS),(d||t.clusteredLightingAreaLightsEnabled)&&a.append(n.ltcPS));var w=!1;t.useSpecular&&(this.lighting&&a.append(t.shadingModel===Pm?n.lightSpecularPhongPS:t.enableGGXSpecular?n.lightSpecularAnisoGGXPS:n.lightSpecularBlinnPS),t.fresnelModel||this.reflections||t.diffuseMapEnabled||(i.append("uniform vec3 material_ambient;"),i.append("#define LIT_OLD_AMBIENT"),w=!0)),a.append(n.combinePS),t.lightMapEnabled&&a.append(t.useSpecular&&t.dirLightMapEnabled?n.lightmapDirAddPS:n.lightmapAddPS);var b=!t.lightMapEnabled||t.lightMapWithoutAmbient;b&&("ambientSH"===t.ambientSource?a.append(n.ambientSHPS):"envAtlas"===t.ambientSource?("envAtlas"!==t.reflectionSource&&"envAtlasHQ"!==t.reflectionSource&&a.append(n.envAtlasPS),a.append(n.ambientEnvPS.replace(/\$DECODE/g,hy.decodeFunc(t.ambientEncoding)))):a.append(n.ambientConstantPS)),t.useAmbientTint&&!w&&i.append("uniform vec3 material_ambient;"),t.useMsdf&&(t.msdfTextAttribute||i.append("#define UNIFORM_TEXT_PARAMETERS"),a.append(n.msdfPS)),this.needsNormal&&(a.append(n.viewDirPS),t.useSpecular&&a.append(t.enableGGXSpecular?n.reflDirAnisoPS:n.reflDirPS));var x,C=!1,S=!1,E=!1,T=!1,A=!1;if(t.clusteredLightingEnabled&&this.lighting&&(T=!0,C=!0,S=!0,A=!0,a.append(n.floatUnpackingPS),t.lightMaskDynamic&&i.append("#define CLUSTER_MESH_DYNAMIC_LIGHTS"),t.clusteredLightingCookiesEnabled&&i.append("#define CLUSTER_COOKIES"),t.clusteredLightingShadowsEnabled&&!t.noShadow&&(i.append("#define CLUSTER_SHADOWS"),i.append("#define CLUSTER_SHADOW_TYPE_"+cm[t.clusteredLightingShadowType])),t.clusteredLightingAreaLightsEnabled&&i.append("#define CLUSTER_AREALIGHTS"),i.append(Ty.shaderDefines),t.clusteredLightingShadowsEnabled&&!t.noShadow&&a.append(n.clusteredLightShadowsPS),a.append(n.clusteredLightPS)),t.twoSidedLighting&&i.append("uniform float twoSidedLightingNegScaleFactor;"),r.append(this._fsGetStartCode(r,e,n,t)),this.needsNormal&&(t.twoSidedLighting?r.append("    dVertexNormalW = normalize(gl_FrontFacing ? vNormalW * twoSidedLightingNegScaleFactor : -vNormalW * twoSidedLightingNegScaleFactor);"):r.append("    dVertexNormalW = normalize(vNormalW);"),(t.useHeights||t.useNormals)&&t.hasTangents&&(t.twoSidedLighting?(r.append("    dTangentW = gl_FrontFacing ? vTangentW * twoSidedLightingNegScaleFactor : -vTangentW * twoSidedLightingNegScaleFactor;"),r.append("    dBinormalW = gl_FrontFacing ? vBinormalW * twoSidedLightingNegScaleFactor : -vBinormalW * twoSidedLightingNegScaleFactor;")):(r.append("    dTangentW = vTangentW;"),r.append("    dBinormalW = vBinormalW;"))),r.append("    getViewDir();"),y&&r.append("    getTBN(dTangentW, dBinormalW, dVertexNormalW);")),r.append(this.frontendFunc),this.needsNormal&&(t.useSpecular&&s.append("    getReflDir(litArgs_worldNormal, dViewDirW, litArgs_gloss, dTBN);"),t.useClearCoat&&s.append("    ccReflDirW = normalize(-reflect(dViewDirW, litArgs_clearcoat_worldNormal));")),(this.lighting&&t.useSpecular||this.reflections)&&(t.useMetalness&&(s.append("    float f0 = 1.0 / litArgs_ior; f0 = (f0 - 1.0) / (f0 + 1.0); f0 *= f0;"),s.append("    litArgs_specularity = getSpecularModulate(litArgs_specularity, litArgs_albedo, litArgs_metalness, f0);"),s.append("    litArgs_albedo = getAlbedoModulate(litArgs_albedo, litArgs_metalness);")),t.useIridescence&&s.append("    vec3 iridescenceFresnel = getIridescence(saturate(dot(dViewDirW, litArgs_worldNormal)), litArgs_specularity, litArgs_iridescence_thickness);")),b&&(s.append("    addAmbient(litArgs_worldNormal);"),t.conserveEnergy&&t.useSpecular&&s.append("   dDiffuseLight = dDiffuseLight * (1.0 - litArgs_specularity);"),t.separateAmbient&&s.append("\n                    vec3 dAmbientLight = dDiffuseLight;\n                    dDiffuseLight = vec3(0);\n                ")),t.useAmbientTint&&!w&&s.append("    dDiffuseLight *= material_ambient;"),t.useAo&&!t.occludeDirect&&s.append("    occludeDiffuse(litArgs_ao);"),t.lightMapEnabled&&s.append("    addLightMap(\n                litArgs_lightmap, \n                litArgs_lightmapDir, \n                litArgs_worldNormal, \n                dViewDirW, \n                dReflDirW, \n                litArgs_gloss, \n                litArgs_specularity, \n                dVertexNormalW,\n                dTBN\n            #if defined(LIT_IRIDESCENCE)\n                , iridescenceFresnel,\n                litArgs_iridescence_intensity\n            #endif\n                );"),this.lighting||this.reflections){this.reflections&&(t.useClearCoat&&(s.append("    addReflectionCC(ccReflDirW, litArgs_clearcoat_gloss);"),t.fresnelModel>0?(s.append("    ccFresnel = getFresnelCC(dot(dViewDirW, litArgs_clearcoat_worldNormal));"),s.append("    ccReflection.rgb *= ccFresnel;")):s.append("    ccFresnel = 0.0;")),t.useSpecularityFactor&&s.append("    ccReflection.rgb *= litArgs_specularityFactor;"),t.useSheen&&s.append("    addReflectionSheen(litArgs_worldNormal, dViewDirW, litArgs_sheen_gloss);"),s.append("    addReflection(dReflDirW, litArgs_gloss);"),t.fresnelModel>0?s.append("    dReflection.rgb *= \n                        getFresnel(\n                            dot(dViewDirW, litArgs_worldNormal), \n                            litArgs_gloss, \n                            litArgs_specularity\n                        #if defined(LIT_IRIDESCENCE)\n                            , iridescenceFresnel,\n                            litArgs_iridescence_intensity\n                        #endif\n                            );"):s.append("    dReflection.rgb *= litArgs_specularity;"),t.useSpecularityFactor&&s.append("    dReflection.rgb *= litArgs_specularityFactor;")),d&&(s.append("    dSpecularLight *= litArgs_specularity;"),t.useSpecular&&s.append("    calcLTCLightValues(litArgs_gloss, litArgs_worldNormal, dViewDirW, litArgs_specularity, litArgs_clearcoat_gloss, litArgs_clearcoat_worldNormal, litArgs_clearcoat_specularity);"));for(var L=0;L<t.lights.length;L++){var M=t.lights[L],P=M._type;if(!t.clusteredLightingEnabled||P===Wu){x=!1;var O=d&&M._shape?M.shape:Ku,I=d&&M._shape?this._getLightSourceShapeString(O):"";if(O!==Ku&&s.append("    calc"+I+"LightValues(light"+L+"_position, light"+L+"_halfWidth, light"+L+"_halfHeight);"),P===Wu?(s.append("    dLightDirNormW = light"+L+"_direction;"),s.append("    dAtten = 1.0;")):(M._cookie&&(P!==Yu||M._cookie._cubemap?P===ju&&M._cookie._cubemap&&(A=!0,x=!0):(A=!0,x=!0)),s.append("    getLightDirPoint(light"+L+"_position);"),C=!0,x&&(P===Yu?s.append("    dAtten3 = getCookie2D"+(M._cookieFalloff?"":"Clip")+(M._cookieTransform?"Xform":"")+"(light"+L+"_cookie, light"+L+"_shadowMatrix, light"+L+"_cookieIntensity"+(M._cookieTransform?", light"+L+"_cookieMatrix, light"+L+"_cookieOffset":"")+")."+M._cookieChannel+";"):s.append("    dAtten3 = getCookieCube(light"+L+"_cookie, light"+L+"_shadowMatrix, light"+L+"_cookieIntensity)."+M._cookieChannel+";")),O===Ku?M._falloffMode===$u?(s.append("    dAtten = getFalloffLinear(light"+L+"_radius, dLightDirW);"),S=!0):(s.append("    dAtten = getFalloffInvSquared(light"+L+"_radius, dLightDirW);"),E=!0):(s.append("    dAtten = getFalloffWindow(light"+L+"_radius, dLightDirW);"),E=!0),s.append("    if (dAtten > 0.00001) {"),P===Yu&&(x&&!M._cookieFalloff||(s.append("    dAtten *= getSpotEffect(light"+L+"_direction, light"+L+"_innerConeAngle, light"+L+"_outerConeAngle, dLightDirNormW);"),T=!0))),O!==Ku?P===Wu?s.append("    dAttenD = getLightDiffuse(litArgs_worldNormal, dViewDirW, dLightDirW, dLightDirNormW);"):s.append("    dAttenD = get"+I+"LightDiffuse(litArgs_worldNormal, dViewDirW, dLightDirW, dLightDirNormW) * 16.0;"):s.append("    dAtten *= getLightDiffuse(litArgs_worldNormal, dViewDirW, dLightDirW, dLightDirNormW);"),M.castShadows&&!t.noShadow){var R=M._shadowType===lm,D=M._shadowType===im||M._shadowType===am||M._shadowType===sm,k=M._shadowType===om||M._shadowType===tm||M._shadowType===rm,F=null,B=void 0;switch(M._shadowType){case im:F="VSM8",B="0.0";break;case am:F="VSM16",B="5.54";break;case sm:F="VSM32",B=e.textureFloatHighPrecision?"15.0":"5.54";break;case om:F="PCF1x1";break;case rm:F="PCF5x5";break;case lm:F="PCSS";break;default:F="PCF3x3"}if(null!==F){M._normalOffsetBias&&!M._isVsm&&a.append("#define SHADOW_SAMPLE_NORMAL_OFFSET"),P===Wu&&a.append("#define SHADOW_SAMPLE_ORTHO"),((k||R)&&e.isWebGL2||e.isWebGPU||e.extStandardDerivatives)&&a.append("#define SHADOW_SAMPLE_SOURCE_ZBUFFER"),P===ju&&a.append("#define SHADOW_SAMPLE_POINT");var N=n.shadowSampleCoordPS;a.append(N.replace("$LIGHT",L)),a.append("#undef SHADOW_SAMPLE_NORMAL_OFFSET"),a.append("#undef SHADOW_SAMPLE_ORTHO"),a.append("#undef SHADOW_SAMPLE_SOURCE_ZBUFFER"),a.append("#undef SHADOW_SAMPLE_POINT");var U="light"+L+"_shadowMatrix";P===Wu&&M.numCascades>1&&(s.append("    getShadowCascadeMatrix(light"+L+"_shadowMatrixPalette, light"+L+"_shadowCascadeDistances, light"+L+"_shadowCascadeCount);"),U="cascadeShadowMat"),s.append("    dShadowCoord = getShadowSampleCoord"+L+"("+U+", light"+L+"_shadowParams, vPositionW, dLightPosW, dLightDirW, dLightDirNormW, dVertexNormalW);"),P===Wu&&s.append("    fadeShadow(light"+L+"_shadowCascadeDistances);");var z="SHADOWMAP_PASS(light"+L+"_shadowMap), dShadowCoord, light"+L+"_shadowParams";if(D)z=z+", "+B+", dLightDirW";else if(R){var V="vec2(light"+L+"_shadowSearchArea)";O!==Ku&&(V="vec2(length(light"+L+"_halfWidth), length(light"+L+"_halfHeight)) * light"+L+"_shadowSearchArea"),z=z+", light"+L+"_cameraParams, "+V+", dLightDirW"}P===ju?(F="Point"+F,R||(z+=", dLightDirW")):P===Yu&&(F="Spot"+F),s.append("    float shadow"+L+" = getShadow"+F+"("+z+");"),s.append("    dAtten *= mix(1.0, shadow"+L+", light"+L+"_shadowIntensity);")}}if(O!==Ku?t.conserveEnergy&&t.useSpecular?s.append("    dDiffuseLight += ((dAttenD * dAtten) * light"+L+"_color"+(x?" * dAtten3":"")+") * (1.0 - dLTCSpecFres);"):s.append("    dDiffuseLight += (dAttenD * dAtten) * light"+L+"_color"+(x?" * dAtten3":"")+";"):d&&t.conserveEnergy&&t.useSpecular?s.append("    dDiffuseLight += (dAtten * light"+L+"_color"+(x?" * dAtten3":"")+") * (1.0 - litArgs_specularity);"):s.append("    dDiffuseLight += dAtten * light"+L+"_color"+(x?" * dAtten3":"")+";"),t.useSpecular&&s.append("    dHalfDirW = normalize(-dLightDirNormW + dViewDirW);"),M.affectSpecularity)if(O!==Ku)t.useClearCoat&&s.append("    ccSpecularLight += ccLTCSpecFres * get"+I+"LightSpecular(litArgs_clearcoat_worldNormal, dViewDirW) * dAtten * light"+L+"_color"+(x?" * dAtten3":"")+";"),t.useSpecular&&s.append("    dSpecularLight += dLTCSpecFres * get"+I+"LightSpecular(litArgs_worldNormal, dViewDirW) * dAtten * light"+L+"_color"+(x?" * dAtten3":"")+";");else{var H=!1;P===Wu&&t.fresnelModel>0&&(H=!0),t.useClearCoat&&s.append("    ccSpecularLight += getLightSpecular(dHalfDirW, ccReflDirW, litArgs_clearcoat_worldNormal, dViewDirW, dLightDirNormW, litArgs_clearcoat_gloss, dTBN) * dAtten * light"+L+"_color"+(x?" * dAtten3":"")+(H?" * getFresnelCC(dot(dViewDirW, dHalfDirW));":";")),t.useSheen&&s.append("    sSpecularLight += getLightSpecularSheen(dHalfDirW, litArgs_worldNormal, dViewDirW, dLightDirNormW, litArgs_sheen_gloss) * dAtten * light"+L+"_color"+(x?" * dAtten3;":";")),t.useSpecular&&s.append("    dSpecularLight += getLightSpecular(dHalfDirW, dReflDirW, litArgs_worldNormal, dViewDirW, dLightDirNormW, litArgs_gloss, dTBN) * dAtten * light"+L+"_color"+(x?" * dAtten3":"")+(H?" \n                                    * getFresnel(\n                                        dot(dViewDirW, dHalfDirW), \n                                        litArgs_gloss, \n                                        litArgs_specularity\n                                    #if defined(LIT_IRIDESCENCE)\n                                        , iridescenceFresnel, \n                                        litArgs_iridescence_intensity\n                                    #endif\n                                    );":"* litArgs_specularity;"))}P!==Wu&&s.append("    }")}}t.clusteredLightingEnabled&&this.lighting&&(S=!0,E=!0,C=!0,s.append("    addClusteredLights(\n                                        litArgs_worldNormal, \n                                        dViewDirW, \n                                        dReflDirW,\n                                #if defined(LIT_CLEARCOAT)\n                                        ccReflDirW,\n                                #endif\n                                        litArgs_gloss, \n                                        litArgs_specularity, \n                                        dVertexNormalW, \n                                        dTBN, \n                                #if defined(LIT_IRIDESCENCE)\n                                        iridescenceFresnel,\n                                #endif\n                                        litArgs_clearcoat_worldNormal, \n                                        litArgs_clearcoat_gloss,\n                                        litArgs_sheen_gloss,\n                                        litArgs_iridescence_intensity\n                                    );")),d&&(t.useClearCoat&&s.append("    litArgs_clearcoat_specularity = 1.0;"),t.useSpecular&&s.append("    litArgs_specularity = vec3(1);")),t.useRefraction&&s.append("    addRefraction(\n                        litArgs_worldNormal, \n                        dViewDirW, \n                        litArgs_thickness, \n                        litArgs_gloss, \n                        litArgs_specularity, \n                        litArgs_albedo, \n                        litArgs_transmission,\n                        litArgs_ior\n                    #if defined(LIT_IRIDESCENCE)\n                        , iridescenceFresnel, \n                        litArgs_iridescence_intensity\n                    #endif\n                    );")}t.useAo&&(t.occludeDirect&&s.append("    occludeDiffuse(litArgs_ao);"),t.occludeSpecular!==qm&&t.occludeSpecular!==Km||s.append("    occludeSpecular(litArgs_gloss, litArgs_ao, litArgs_worldNormal, dViewDirW);")),t.useSpecularityFactor&&s.append("    dSpecularLight *= litArgs_specularityFactor;"),!1===t.opacityFadesSpecular&&(t.blendType!==wu&&t.blendType!==xu||(s.append("float specLum = dot((dSpecularLight + dReflection.rgb * dReflection.a), vec3( 0.2126, 0.7152, 0.0722 ));"),s.append("#ifdef LIT_CLEARCOAT\n specLum += dot(ccSpecularLight * litArgs_clearcoat_specularity + ccReflection.rgb * litArgs_clearcoat_specularity, vec3( 0.2126, 0.7152, 0.0722 ));\n#endif"),s.append("litArgs_opacity = clamp(litArgs_opacity + gammaCorrectInput(specLum), 0.0, 1.0);")),s.append("litArgs_opacity *= material_alphaFade;")),s.append(n.endPS),t.blendType===wu||t.blendType===Su||t.alphaToCoverage?s.append(n.outputAlphaPS):t.blendType===xu?s.append(n.outputAlphaPremulPS):s.append(n.outputAlphaOpaquePS),t.useMsdf&&s.append("    gl_FragColor = applyMsdf(gl_FragColor);"),s.append(n.outputPS),s.append(n.debugOutputPS),C&&a.prepend(n.lightDirPointPS),S&&a.prepend(n.falloffLinearPS),E&&a.prepend(n.falloffInvSquaredPS),T&&a.prepend(n.spotPS),A&&!t.clusteredLightingEnabled&&a.prepend(n.cookiePS);var G="",W="void evaluateBackend() {\n"+s.code+"\n}";a.append(W),r.append(n.debugProcessFrontendPS),r.append("    evaluateBackend();"),r.append(Rg.end());var j=i.code+a.code+r.code;return j.includes("dTBN")&&(G+="mat3 dTBN;\n"),j.includes("dVertexNormalW")&&(G+="vec3 dVertexNormalW;\n"),j.includes("dTangentW")&&(G+="vec3 dTangentW;\n"),j.includes("dBinormalW")&&(G+="vec3 dBinormalW;\n"),j.includes("dViewDirW")&&(G+="vec3 dViewDirW;\n"),j.includes("dReflDirW")&&(G+="vec3 dReflDirW;\n"),j.includes("dHalfDirW")&&(G+="vec3 dHalfDirW;\n"),j.includes("ccReflDirW")&&(G+="vec3 ccReflDirW;\n"),j.includes("dLightDirNormW")&&(G+="vec3 dLightDirNormW;\n"),j.includes("dLightDirW")&&(G+="vec3 dLightDirW;\n"),j.includes("dLightPosW")&&(G+="vec3 dLightPosW;\n"),j.includes("dShadowCoord")&&(G+="vec3 dShadowCoord;\n"),j.includes("dReflection")&&(G+="vec4 dReflection;\n"),j.includes("dDiffuseLight")&&(G+="vec3 dDiffuseLight;\n"),j.includes("dSpecularLight")&&(G+="vec3 dSpecularLight;\n"),j.includes("dAtten")&&(G+="float dAtten;\n"),j.includes("dAttenD")&&(G+="float dAttenD;\n"),j.includes("dAtten3")&&(G+="vec3 dAtten3;\n"),j.includes("dMsdf")&&(G+="vec4 dMsdf;\n"),j.includes("ccFresnel")&&(G+="float ccFresnel;\n"),j.includes("ccReflection")&&(G+="vec3 ccReflection;\n"),j.includes("ccSpecularLight")&&(G+="vec3 ccSpecularLight;\n"),j.includes("ccSpecularityNoFres")&&(G+="float ccSpecularityNoFres;\n"),j.includes("sSpecularLight")&&(G+="vec3 sSpecularLight;\n"),j.includes("sReflection")&&(G+="vec3 sReflection;\n"),this._fsGetBeginCode()+this.varyings+this.varyingDefines+this._fsGetBaseCode()+G+this.frontendDecl+j},t.generateFragmentShader=function(e,t,n,i){var a,s=this.options;this.frontendDecl=e,this.frontendCode=t,this.frontendFunc=n,this.lightingUv=i,s.pass===Ef?this.fshader=this._fsGetPickPassCode():s.pass===Sf?this.fshader=this._fsGetDepthPassCode():this.shadowPass?this.fshader=this._fsGetShadowPassCode():s.customFragmentShader?this.fshader=this._fsGetBeginCode()+s.customFragmentShader:this.fshader=this._fsGetLitPassCode(),null==(a=this.handleCompatibility)||a.call(this)},t.getDefinition=function(){var e=Vl.createDefinition(this.device,{name:"LitShader",attributes:this.attributes,vertexCode:this.vshader,fragmentCode:this.fshader});return this.shaderPassInfo.isForward&&(e.tag=ma),e},e}(),Py={generateKey:function(e){return"lit"+Object.keys(e).sort().map((function(t){return"chunks"===t?Py.generateChunksKey(e):"lights"===t?Py.generateLightsKey(e):t+e[t]})).join("\n")},generateLightsKey:function(e){return"lights:"+e.lights.map((function(t){return e.clusteredLightingEnabled&&t._type!==Wu?"":t.key+","})).join("")},generateChunksKey:function(e){var t;return"chunks:\n"+Object.keys(null!=(t=e.chunks)?t:{}).sort().map((function(t){return t+e.chunks[t]})).join("")}},Oy=[0,1,2,3,4,5,6,7],Iy=function(e){function t(){return e.apply(this,arguments)||this}Z(t,e);var n=t.prototype;return n.generateKey=function(e){var t="lit"+Oy.map((function(t,n){return e.usedUvs[n]?"1":"0"})).join("")+e.shaderChunk+Py.generateKey(e.litOptions);return t},n.createShaderDefinition=function(e,t){var n=new My(e,t.litOptions),i=new oy,a=new oy,s=new oy;i.append("uniform float textureBias;"),i.append(n.chunks.litShaderArgsPS),a.append(t.shaderChunk),s.code="evaluateFrontend();",s.code="\n"+s.code.split("\n").map((function(e){return"    "+e})).join("\n")+"\n\n";var r=t.usedUvs||[!0],o=[];return n.generateVertexShader(r,r,o),n.generateFragmentShader(i.code,a.code,s.code,"vUv0"),n.getDefinition()},t}(Rg),Ry=new Iy,Dy=new sy,ky=function(e){function t(){for(var t,n=arguments.length,i=new Array(n),a=0;a<n;a++)i[a]=arguments[a];return(t=e.call.apply(e,[this].concat(i))||this).usedUvs=[!0],t.shaderChunk="void evaluateFrontend() {}\n",t.chunks=null,t.useLighting=!0,t.useFog=!0,t.useGammaTonemap=!0,t.useSkybox=!0,t.shadingModel=Om,t.ambientSH=null,t.pixelSnap=!1,t.nineSlicedMode=null,t.fastTbn=!1,t.twoSidedLighting=!1,t.occludeDirect=!1,t.occludeSpecular=qm,t.occludeSpecularIntensity=1,t.opacityFadesSpecular=!0,t.conserveEnergy=!0,t.ggxSpecular=!1,t.fresnelModel=Du,t.dynamicRefraction=!1,t.hasAo=!1,t.hasSpecular=!1,t.hasSpecularityFactor=!1,t.hasLighting=!1,t.hasHeights=!1,t.hasNormals=!1,t.hasSheen=!1,t.hasRefraction=!1,t.hasIrridescence=!1,t.hasMetalness=!1,t.hasClearCoat=!1,t.hasClearCoatNormals=!1,t}return Z(t,e),t.prototype.getShaderVariant=function(e,t,n,i,a,s,r,o,l){Dy.usedUvs=this.usedUvs.slice(),Dy.shaderChunk=this.shaderChunk,ry.update(Dy.litOptions,this,t,n,a,s);var c=new Tg(r,o,l),h=Og(e);return h.register("lit",Ry),h.getProgram("lit",Dy,c,this.userId)},t}(tv),Fy=new pt,By=new pt,Ny=new pt,Uy=new Ot,zy=1e-6,Vy=function(){this.light=null,this.min=new pt,this.max=new pt},Hy=function(){function e(e){this.clusterTexture=void 0,this.device=e,this.name="Untitled",this.reportCount=0,this.boundsMin=new pt,this.boundsMax=new pt,this.boundsDelta=new pt,this._cells=new pt(1,1,1),this._cellsLimit=new pt,this.cells=this._cells,this.maxCellLightCount=4,this._maxAttenuation=0,this._maxColorValue=0,this._usedLights=[],this._usedLights.push(new Vy),this.lightsBuffer=new Ty(e),this.registerUniforms(e)}var t=e.prototype;return t.destroy=function(){this.lightsBuffer.destroy(),this.releaseClusterTexture()},t.releaseClusterTexture=function(){this.clusterTexture&&(this.clusterTexture.destroy(),this.clusterTexture=null)},t.registerUniforms=function(e){this._clusterSkipId=e.scope.resolve("clusterSkip"),this._clusterMaxCellsId=e.scope.resolve("clusterMaxCells"),this._clusterWorldTextureId=e.scope.resolve("clusterWorldTexture"),this._clusterTextureSizeId=e.scope.resolve("clusterTextureSize"),this._clusterTextureSizeData=new Float32Array(3),this._clusterBoundsMinId=e.scope.resolve("clusterBoundsMin"),this._clusterBoundsMinData=new Float32Array(3),this._clusterBoundsDeltaId=e.scope.resolve("clusterBoundsDelta"),this._clusterBoundsDeltaData=new Float32Array(3),this._clusterCellsCountByBoundsSizeId=e.scope.resolve("clusterCellsCountByBoundsSize"),this._clusterCellsCountByBoundsSizeData=new Float32Array(3),this._clusterCellsDotId=e.scope.resolve("clusterCellsDot"),this._clusterCellsDotData=new Float32Array(3),this._clusterCellsMaxId=e.scope.resolve("clusterCellsMax"),this._clusterCellsMaxData=new Float32Array(3),this._clusterCompressionLimit0Id=e.scope.resolve("clusterCompressionLimit0"),this._clusterCompressionLimit0Data=new Float32Array(2)},t.updateParams=function(e){e&&(this.cells=e.cells,this.maxCellLightCount=e.maxLightsPerCell,this.lightsBuffer.cookiesEnabled=e.cookiesEnabled,this.lightsBuffer.shadowsEnabled=e.shadowsEnabled,this.lightsBuffer.areaLightsEnabled=e.areaLightsEnabled)},t.updateCells=function(){if(this._cellsDirty){this._cellsDirty=!1;var e=this._cells.x,t=this._cells.y,n=this._cells.z,i=e*t*n,a=this.maxCellLightCount*i,s=Math.ceil(Math.sqrt(a));s=at.roundUp(s,this.maxCellLightCount);var r=Math.ceil(a/s);this._clusterCellsMaxData[0]=e,this._clusterCellsMaxData[1]=t,this._clusterCellsMaxData[2]=n,this._clusterCellsDotData[0]=this.maxCellLightCount,this._clusterCellsDotData[1]=e*n*this.maxCellLightCount,this._clusterCellsDotData[2]=e*this.maxCellLightCount,this.clusters=new Uint8ClampedArray(a),this.counts=new Int32Array(i),this._clusterTextureSizeData[0]=s,this._clusterTextureSizeData[1]=1/s,this._clusterTextureSizeData[2]=1/r,this.releaseClusterTexture(),this.clusterTexture=Ty.createTexture(this.device,s,r,Kn,"ClusterTexture")}},t.uploadTextures=function(){this.clusterTexture.lock().set(this.clusters),this.clusterTexture.unlock(),this.lightsBuffer.uploadTextures()},t.updateUniforms=function(){this._clusterSkipId.setValue(this._usedLights.length>1?0:1),this.lightsBuffer.updateUniforms(),this._clusterWorldTextureId.setValue(this.clusterTexture),this._clusterMaxCellsId.setValue(this.maxCellLightCount);var e=this.boundsDelta;this._clusterCellsCountByBoundsSizeData[0]=this._cells.x/e.x,this._clusterCellsCountByBoundsSizeData[1]=this._cells.y/e.y,this._clusterCellsCountByBoundsSizeData[2]=this._cells.z/e.z,this._clusterCellsCountByBoundsSizeId.setValue(this._clusterCellsCountByBoundsSizeData),this._clusterBoundsMinData[0]=this.boundsMin.x,this._clusterBoundsMinData[1]=this.boundsMin.y,this._clusterBoundsMinData[2]=this.boundsMin.z,this._clusterBoundsDeltaData[0]=e.x,this._clusterBoundsDeltaData[1]=e.y,this._clusterBoundsDeltaData[2]=e.z,this._clusterCompressionLimit0Data[0]=this._maxAttenuation,this._clusterCompressionLimit0Data[1]=this._maxColorValue,this._clusterTextureSizeId.setValue(this._clusterTextureSizeData),this._clusterBoundsMinId.setValue(this._clusterBoundsMinData),this._clusterBoundsDeltaId.setValue(this._clusterBoundsDeltaData),this._clusterCellsDotId.setValue(this._clusterCellsDotData),this._clusterCellsMaxId.setValue(this._clusterCellsMaxData),this._clusterCompressionLimit0Id.setValue(this._clusterCompressionLimit0Data)},t.evalLightCellMinMax=function(e,t,n){t.copy(e.min),t.sub(this.boundsMin),t.div(this.boundsDelta),t.mul2(t,this.cells),t.floor(),n.copy(e.max),n.sub(this.boundsMin),n.div(this.boundsDelta),n.mul2(n,this.cells),n.ceil(),t.max(pt.ZERO),n.min(this._cellsLimit)},t.collectLights=function(e){var t=this.lightsBuffer.maxLights,n=this._usedLights,i=1;e.forEach((function(e){var a,s=!!(e.mask&(_f|wf)),r=e.type===Yu&&0===e._outerConeAngle;e.enabled&&e.type!==Wu&&e.visibleThisFrame&&e.intensity>0&&s&&!r&&i<t&&(i<n.length?a=n[i]:(a=new Vy,n.push(a)),a.light=e,e.getBoundingBox(Uy),a.min.copy(Uy.getMin()),a.max.copy(Uy.getMax()),i++)})),n.length=i},t.evaluateBounds=function(){var e=this._usedLights,t=this.boundsMin,n=this.boundsMax;if(e.length>1){t.copy(e[1].min),n.copy(e[1].max);for(var i=2;i<e.length;i++)t.min(e[i].min),n.max(e[i].max)}else t.set(0,0,0),n.set(1,1,1);this.boundsDelta.sub2(n,t),this.lightsBuffer.setBounds(t,this.boundsDelta)},t.evaluateCompressionLimits=function(e){for(var t=0,n=0,i=this._usedLights,a=1;a<i.length;a++){var s=i[a].light;t=Math.max(s.attenuationEnd,t);var r=e?s._linearFinalColor:s._finalColor;n=Math.max(r[0],n),n=Math.max(r[1],n),n=Math.max(r[2],n)}this._maxAttenuation=t+zy,this._maxColorValue=n+zy,this.lightsBuffer.setCompressionRanges(this._maxAttenuation,this._maxColorValue)},t.updateClusters=function(e){this.counts.fill(0),this.clusters.fill(0);for(var t=this._cells.x,n=this._cells.z,i=this.counts,a=this._maxCellLightCount,s=this.clusters,r=this.maxCellLightCount,o=this._usedLights,l=1;l<o.length;l++){var c=o[l],h=c.light;this.lightsBuffer.addLightData(h,l,e),this.evalLightCellMinMax(c,By,Ny);for(var p=By.x,d=Ny.x,u=By.y,m=Ny.y,f=By.z,g=Ny.z,v=p;v<=d;v++)for(var y=f;y<=g;y++)for(var _=u;_<=m;_++){var w=v+t*(y+_*n),b=i[w];b<a&&(s[r*w+b]=l,i[w]=b+1)}}},t.update=function(e,t,n){this.updateParams(n),this.updateCells(),this.collectLights(e),this.evaluateBounds(),this.evaluateCompressionLimits(t),this.updateClusters(t),this.uploadTextures()},t.activate=function(){this.updateUniforms()},q(e,[{key:"maxCellLightCount",get:function(){return this._maxCellLightCount},set:function(e){e!==this._maxCellLightCount&&(this._maxCellLightCount=e,this._cellsDirty=!0)}},{key:"cells",get:function(){return this._cells},set:function(e){Fy.copy(e).floor(),this._cells.equals(Fy)||(this._cells.copy(Fy),this._cellsLimit.copy(Fy).sub(pt.ONE),this._cellsDirty=!0)}}]),e}(),Gy=function(){function e(e,t){this.texture=e,this.cached=!1,this.renderTargets=t}return e.prototype.destroy=function(){this.texture&&(this.texture.destroy(),this.texture=null);for(var e=this.renderTargets,t=0;t<e.length;t++)e[t].destroy();this.renderTargets.length=0},e.getShadowFormat=function(e,t){return t===sm?li:t===am?ri:t===rm?hi:t!==om&&t!==tm||!e.supportsDepthShadow?t!==lm||e.isWebGL1?ti:ci:hi},e.getShadowFiltering=function(e,t){return t!==om&&t!==tm&&t!==lm||e.supportsDepthShadow?t===sm?e.extTextureFloatLinear?In:On:t===am?e.extTextureHalfFloatLinear?In:On:In:On},e.create=function(e,t){return t._type===ju?this.createCubemap(e,t._shadowResolution,t._shadowType):this.create2dMap(e,t._shadowResolution,t._shadowType)},e.createAtlas=function(e,t,n){for(var i=this.create2dMap(e,t,n),a=i.renderTargets,s=a[0],r=0;r<5;r++)a.push(s);return i},e.create2dMap=function(t,n,i){var a=this.getShadowFormat(t,i),s=this.getShadowFiltering(t,i),r=new vl(t,{format:a,width:n,height:n,mipmaps:!1,minFilter:s,magFilter:s,addressU:Yt,addressV:Yt,name:"ShadowMap2D"}),o=null;return i===rm||(i===om||i===tm)&&t.supportsDepthShadow?(r.compareOnRead=!0,r.compareFunc=Nn,o=new Vr({depthBuffer:r})):o=new Vr({colorBuffer:r,depth:!0}),t.isWebGPU&&(o.flipY=!0),new e(r,[o])},e.createCubemap=function(t,n,i){for(var a=i!==lm||t.isWebGL1?ti:ci,s=new vl(t,{format:a,width:n,height:n,cubemap:!0,mipmaps:!1,minFilter:On,magFilter:On,addressU:Yt,addressV:Yt,name:"ShadowMapCube"}),r=[],o=0;o<6;o++){var l=new Vr({colorBuffer:s,face:o,depth:!0});r.push(l)}return new e(s,r)},e}(),Wy=[],jy=[],Xy=new vt,Yy=new vt,qy=function(e){this.size=Math.floor(1024*e.w),this.used=!1,this.lightId=-1,this.rect=e},Ky=function(){function e(e){this.device=e,this.version=1,this.shadowAtlasResolution=2048,this.shadowAtlas=null,this.shadowEdgePixels=3,this.cookieAtlasResolution=4,this.cookieAtlas=new vl(this.device,{name:"CookieAtlas",width:this.cookieAtlasResolution,height:this.cookieAtlasResolution,format:ti,cubemap:!1,mipmaps:!1,minFilter:On,magFilter:On,addressU:Yt,addressV:Yt}),this.cookieRenderTarget=new Vr({colorBuffer:this.cookieAtlas,depth:!1,flipY:!0}),this.slots=[],this.atlasSplit=[],this.cubeSlotsOffsets=[new ft(0,0),new ft(0,1),new ft(1,0),new ft(1,1),new ft(2,0),new ft(2,1)],this.scissorVec=new vt,this.allocateShadowAtlas(1),this.allocateCookieAtlas(1),this.allocateUniforms()}var t=e.prototype;return t.destroy=function(){this.destroyShadowAtlas(),this.destroyCookieAtlas()},t.destroyShadowAtlas=function(){var e;null==(e=this.shadowAtlas)||e.destroy(),this.shadowAtlas=null},t.destroyCookieAtlas=function(){var e,t;null==(e=this.cookieAtlas)||e.destroy(),this.cookieAtlas=null,null==(t=this.cookieRenderTarget)||t.destroy(),this.cookieRenderTarget=null},t.allocateShadowAtlas=function(e){if(!this.shadowAtlas||this.shadowAtlas.texture.width!==e){this.version++,this.destroyShadowAtlas(),this.shadowAtlas=Gy.createAtlas(this.device,e,tm),this.shadowAtlas.cached=!0;var t=4/this.shadowAtlasResolution;this.scissorVec.set(t,t,-2*t,-2*t)}},t.allocateCookieAtlas=function(e){this.cookieAtlas.width!==e&&(this.cookieRenderTarget.resize(e,e),this.version++)},t.allocateUniforms=function(){this._shadowAtlasTextureId=this.device.scope.resolve("shadowAtlasTexture"),this._shadowAtlasParamsId=this.device.scope.resolve("shadowAtlasParams"),this._shadowAtlasParams=new Float32Array(2),this._cookieAtlasTextureId=this.device.scope.resolve("cookieAtlasTexture")},t.updateUniforms=function(){var e=!0,t=this.shadowAtlas.renderTargets[0],n=!this.device.isWebGL1&&e?t.depthBuffer:t.colorBuffer;this._shadowAtlasTextureId.setValue(n),this._shadowAtlasParams[0]=this.shadowAtlasResolution,this._shadowAtlasParams[1]=this.shadowEdgePixels,this._shadowAtlasParamsId.setValue(this._shadowAtlasParams),this._cookieAtlasTextureId.setValue(this.cookieAtlas)},t.subdivide=function(e,t){var n=t.atlasSplit;if(!n){var i=Math.ceil(Math.sqrt(e));(n=jy)[0]=i,n.length=1}var a=function(e,t){return e.length===t.length&&e.every((function(e,n){return e===t[n]}))};if(!a(n,this.atlasSplit)){var s;this.version++,this.slots.length=0,this.atlasSplit.length=0,(s=this.atlasSplit).push.apply(s,n);var r=this.atlasSplit[0];if(r>1)for(var o=1/r,l=0;l<r;l++)for(var c=0;c<r;c++){var h=new vt(l*o,c*o,o,o),p=this.atlasSplit[1+l*r+c];if(p>1)for(var d=0;d<p;d++)for(var u=0;u<p;u++){var m=o/p,f=new vt(h.x+d*m,h.y+u*m,m,m);this.slots.push(new qy(f))}else this.slots.push(new qy(h))}else this.slots.push(new qy(new vt(0,0,1,1)));this.slots.sort((function(e,t){return t.size-e.size}))}},t.collectLights=function(e,t){var n=t.cookiesEnabled,i=t.shadowsEnabled,a=!1,s=!1,r=Wy;r.length=0;var o=function(e){for(var t=0;t<e.length;t++){var o=e[t];if(o.visibleThisFrame){var l=i&&o.castShadows,c=n&&!!o.cookie;a||(a=l),s||(s=c),(l||c)&&r.push(o)}}};return(n||i)&&o(e),r.sort((function(e,t){return t.maxScreenSize-e.maxScreenSize})),a&&this.allocateShadowAtlas(this.shadowAtlasResolution),s&&this.allocateCookieAtlas(this.cookieAtlasResolution),(a||s)&&this.subdivide(r.length,t),r},t.setupSlot=function(e,t){e.atlasViewport.copy(t);for(var n=e.numShadowFaces,i=0;i<n;i++)if(e.castShadows||e._cookie){if(Xy.copy(t),Yy.copy(t),e._type===Yu&&Xy.add(this.scissorVec),e._type===ju){var a=Xy.z/3,s=this.cubeSlotsOffsets[i];Xy.x+=a*s.x,Xy.y+=a*s.y,Xy.z=a,Xy.w=a,Yy.copy(Xy)}if(e.castShadows){var r=e.getRenderData(null,i);r.shadowViewport.copy(Xy),r.shadowScissor.copy(Yy)}}},t.assignSlot=function(e,t,n){e.atlasViewportAllocated=!0;var i=this.slots[t];i.lightId=e.id,i.used=!0,n&&(e.atlasSlotUpdated=!0,e.atlasVersion=this.version,e.atlasSlotIndex=t)},t.update=function(e,t){this.shadowAtlasResolution=t.shadowAtlasResolution,this.cookieAtlasResolution=t.cookieAtlasResolution;var n=this.collectLights(e,t);if(n.length>0){for(var i=this.slots,a=0;a<i.length;a++)i[a].used=!1;for(var s=Math.min(n.length,i.length),r=0;r<s;r++){var o=n[r];o.castShadows&&(o._shadowMap=this.shadowAtlas);var l=i[o.atlasSlotIndex];if(o.atlasVersion===this.version&&o.id===(null==l?void 0:l.lightId)){var c=i[o.atlasSlotIndex];c.size!==i[r].size||c.used||this.assignSlot(o,o.atlasSlotIndex,!1)}}for(var h=0,p=0;p<s;p++){for(;h<i.length&&i[h].used;)h++;var d=n[p];d.atlasViewportAllocated||this.assignSlot(d,h,!0);var u=i[d.atlasSlotIndex];this.setupSlot(d,u.rect)}}this.updateUniforms()},e}(),Zy=[new pt(-1,0,0),new pt(1,0,0),new pt(0,-1,0),new pt(0,1,0),new pt(0,0,-1),new pt(0,0,1)],Qy=function(){function e(){this.colors=new Float32Array(18)}return e.prototype.update=function(e,t){for(var n=this.colors,i=e.r,a=e.g,s=e.b,r=0;r<6;r++)n[3*r]=i,n[3*r+1]=a,n[3*r+2]=s;for(var o=0;o<t.length;o++){var l=t[o];if(l._type===Wu)for(var c=0;c<6;c++){var h=Math.max(Zy[c].dot(l._direction),0)*l._intensity,p=l._color;n[3*c]+=p.r*h,n[3*c+1]+=p.g*h,n[3*c+2]+=p.b*h}}},e}(),Jy=function(){function e(){this.cache=new Map}var t=e.prototype;return t.destroy=function(){this.clear(),this.cache=null},t.clear=function(){this.cache.forEach((function(e){e.forEach((function(e){e.destroy()}))})),this.cache.clear()},t.getKey=function(e){return(e._type===ju)+"-"+e._shadowType+"-"+e._shadowResolution},t.get=function(e,t){var n=this.getKey(t),i=this.cache.get(n);if(i&&i.length)return i.pop();var a=Gy.create(e,t);return a.cached=!0,a},t.add=function(e,t){var n=this.getKey(e),i=this.cache.get(n);i?i.push(t):this.cache.set(n,[t])},e}(),$y=function(){function e(e,t){this.shadowLights=[],this.renderer=void 0,this.shadowRenderer=void 0,this.device=void 0,this.renderer=e,this.shadowRenderer=t,this.device=e.device}var t=e.prototype;return t.cull=function(e,t,n){void 0===n&&(n=null);var i=this.renderer.scene.clusteredLightingEnabled;e.visibleThisFrame=!0,i||e._shadowMap||(e._shadowMap=Gy.create(this.device,e));for(var a=e._type,s=a===Yu?1:6,r=0;r<s;r++){var o=e.getRenderData(null,r),l=o.shadowCamera;l.nearClip=e.attenuationEnd/1e3,l.farClip=e.attenuationEnd,o.depthRangeCompensation=l.farClip-l.nearClip;var c=l._node,h=e._node;if(c.setPosition(h.getPosition()),a===Yu)l.fov=2*e._outerConeAngle,c.setRotation(h.getRotation()),c.rotateLocal(-90,0,0);else if(a===ju)if(i){var p=2/(this.shadowRenderer.lightTextureAtlas.shadowAtlasResolution*e.atlasViewport.z/3)*this.shadowRenderer.lightTextureAtlas.shadowEdgePixels;l.fov=Math.atan(1+p)*at.RAD_TO_DEG*2}else l.fov=90;this.renderer.updateCameraFrustum(l),this.shadowRenderer.cullShadowCasters(t,e,o.visibleCasters,l,n)}},t.prepareLights=function(e,t){for(var n,i=0;i<t.length;i++){var a=t[i];if(this.shadowRenderer.needsShadowRendering(a)&&a.atlasViewportAllocated){e.push(a);for(var s=0;s<a.numShadowFaces;s++)n=this.shadowRenderer.prepareFace(a,null,s)}}return n},t.prepareClusteredRenderPass=function(e,t){var n=this,i=this.shadowLights,a=this.prepareLights(i,t),s=i.length;s&&(this.shadowRenderer.setupRenderPass(e,a,!1),e._execute=function(){for(var e=0;e<s;e++)for(var t=i[e],a=0;a<t.numShadowFaces;a++)n.shadowRenderer.renderFace(t,null,a,!0);i.length=0})},t.setupNonClusteredFaceRenderPass=function(e,t,n,i){var a=this,s=this.shadowRenderer.prepareFace(t,null,n),r=new Eg(this.device,(function(){a.shadowRenderer.renderFace(t,null,n,!1)}));this.shadowRenderer.setupRenderPass(r,s,!0),i&&(r._after=function(){a.shadowRenderer.renderVsm(t,s)}),e.addRenderPass(r)},t.buildNonClusteredRenderPasses=function(e,t){for(var n=0;n<t.length;n++){var i=t[n];if(this.shadowRenderer.needsShadowRendering(i))for(var a=i._type===Yu,s=i.numShadowFaces,r=0;r<s;r++)this.setupNonClusteredFaceRenderPass(e,i,r,a)}},e}(),e_=new Ot,t_=new pt,n_=new St,i_=[new pt,new pt,new pt,new pt,new pt,new pt,new pt,new pt],a_={min:0,max:0};function s_(e,t,n){i_[0].x=i_[1].x=i_[2].x=i_[3].x=t.x,i_[1].y=i_[3].y=i_[7].y=i_[5].y=t.y,i_[2].z=i_[3].z=i_[6].z=i_[7].z=t.z,i_[4].x=i_[5].x=i_[6].x=i_[7].x=n.x,i_[0].y=i_[2].y=i_[4].y=i_[6].y=n.y,i_[0].z=i_[1].z=i_[4].z=i_[5].z=n.z;for(var i=9999999999,a=-9999999999,s=0;s<8;++s){e.transformPoint(i_[s],i_[s]);var r=i_[s].z;r<i&&(i=r),r>a&&(a=r)}return a_.min=i,a_.max=a,a_}var r_=function(){function e(e,t){this.renderer=void 0,this.shadowRenderer=void 0,this.device=void 0,this.renderer=e,this.shadowRenderer=t,this.device=e.device}var t=e.prototype;return t.cull=function(e,t,n,i){void 0===i&&(i=null),e.visibleThisFrame=!0,e._shadowMap||(e._shadowMap=Gy.create(this.device,e));var a=n._nearClip;this.generateSplitDistances(e,a,Math.min(n._farClip,e.shadowDistance));for(var s=e.shadowUpdateOverrides,r=0;r<e.numCascades&&(null==s?void 0:s[r])!==mf;r++){var o=e.getRenderData(n,r),l=o.shadowCamera;l.renderTarget=e._shadowMap.renderTargets[0],o.shadowViewport.copy(e.cascades[r]),o.shadowScissor.copy(e.cascades[r]);var c=l._node,h=e._node;c.setPosition(h.getPosition()),c.setRotation(h.getRotation()),c.rotateLocal(-90,0,0);var p=0===r?a:e._shadowCascadeDistances[r-1],d=e._shadowCascadeDistances[r],u=n.getFrustumCorners(p,d);t_.set(0,0,0);for(var m=n.node.getWorldTransform(),f=0;f<8;f++)m.transformPoint(u[f],u[f]),t_.add(u[f]);t_.mulScalar(1/8);for(var g=0,v=0;v<8;v++){var y=u[v].sub(t_).length();y>g&&(g=y)}var _=c.right,w=c.up,b=c.forward,x=.25*e._shadowResolution/g,C=Math.ceil(t_.dot(w)*x)/x,S=Math.ceil(t_.dot(_)*x)/x,E=w.mulScalar(C),T=_.mulScalar(S),A=t_.dot(b),L=b.mulScalar(A);t_.add2(E,T).add(L),c.setPosition(t_),c.translateLocal(0,0,1e6),l.nearClip=.01,l.farClip=2e6,l.orthoHeight=g,this.renderer.updateCameraFrustum(l),this.shadowRenderer.cullShadowCasters(t,e,o.visibleCasters,l,i);for(var M=!0,P=o.visibleCasters,O=0;O<P.length;O++){var I=P[O];M?(M=!1,e_.copy(I.aabb)):e_.add(I.aabb)}n_.copy(c.getWorldTransform()).invert();var R=s_(n_,e_.getMin(),e_.getMax());c.translateLocal(0,0,R.max+.1),l.farClip=R.max-R.min+.2,o.depthRangeCompensation=l.farClip,o.projectionCompensation=g}},t.generateSplitDistances=function(e,t,n){e._shadowCascadeDistances.fill(n);for(var i=1;i<e.numCascades;i++){var a=i/e.numCascades,s=t+(n-t)*a,r=t*Math.pow(n/t,a),o=at.lerp(s,r,e.cascadeDistribution);e._shadowCascadeDistances[i-1]=o}},t.addLightRenderPasses=function(e,t,n){for(var i,a=this,s=t.numShadowFaces,r=t.shadowUpdateOverrides,o=!0,l=0;l<s;l++)(null==r?void 0:r[l])===mf&&(o=!1),i=this.shadowRenderer.prepareFace(t,n,l);var c=new Eg(this.device,(function(){for(var e=0;e<s;e++)(null==r?void 0:r[e])!==mf&&a.shadowRenderer.renderFace(t,n,e,!o),(null==r?void 0:r[e])===ff&&(r[e]=mf)}));c._after=function(){a.shadowRenderer.renderVsm(t,n)},this.shadowRenderer.setupRenderPass(c,i,o),e.addRenderPass(c)},t.buildFrameGraph=function(e,t,n){for(var i=0;i<t.length;i++){var a=t[i];this.shadowRenderer.needsShadowRendering(a)&&this.addLightRenderPasses(e,a,n.camera)}},e}();function o_(e,t){return Math.exp(-e*e/(2*t*t))}function l_(e){for(var t=(e-1)/6,n=.5*(e-1),i=new Array(e),a=0,s=0;s<e;++s)i[s]=o_(s-n,t),a+=i[s];for(var r=0;r<e;++r)i[r]/=a;return i}var c_=new Set,h_=new St,p_=new St,d_=new Float32Array(2),u_=new vt(1,1,0,0),m_=new St,f_=function(){function e(e,t){this.shadowPassCache=[],this.device=e.device,this.renderer=e,this.lightTextureAtlas=t;var n=this.device.scope;this.polygonOffsetId=n.resolve("polygonOffset"),this.polygonOffset=new Float32Array(2),this.sourceId=n.resolve("source"),this.pixelOffsetId=n.resolve("pixelOffset"),this.weightId=n.resolve("weight[0]"),this.blurVsmShaderCode=[Mg.blurVSMPS,"#define GAUSS\n"+Mg.blurVSMPS];var i="#define PACKED\n";this.blurPackedVsmShaderCode=[i+this.blurVsmShaderCode[0],i+this.blurVsmShaderCode[1]],this.blurVsmShader=[{},{}],this.blurPackedVsmShader=[{},{}],this.blurVsmWeights={},this.shadowMapLightRadiusId=n.resolve("light_radius"),this.viewUniformFormat=null,this.viewBindGroupFormat=null,this.blendStateWrite=new yr,this.blendStateNoWrite=new yr,this.blendStateNoWrite.setColorWrite(!1,!1,!1,!1)}e.createShadowCamera=function(e,t,n,i){var a=yy.create("ShadowCamera",n,i);return a.clearColor=t>=im&&t<=sm?new st(0,0,0,0):new st(1,1,1,1),a.clearDepthBuffer=!0,a.clearStencilBuffer=!1,a},e.setShadowCameraSettings=function(e,t,n,i,a){var s=n===rm||(n===om||n===tm)&&t.supportsDepthShadow;i!==ju||a||(s=!1),e.clearColorBuffer=!s};var t=e.prototype;return t._cullShadowCastersInternal=function(e,t,n){for(var i=e.length,a=0;a<i;a++){var s=e[a];s.castShadow&&(s.cull&&!s._isVisible(n)||(s.visibleThisFrame=!0,t.push(s)))}},t.cullShadowCasters=function(e,t,n,i,a){if(n.length=0,a)this._cullShadowCastersInternal(a,n,i);else{for(var s=e.layerList,r=s.length,o=0;o<r;o++){var l=s[o];l._lightsSet.has(t)&&(c_.has(l)||(c_.add(l),this._cullShadowCastersInternal(l.shadowCasters,n,i)))}c_.clear()}n.sort(this.renderer.sortCompareDepth)},t.setupRenderState=function(e,t){var n=this.renderer.scene.clusteredLightingEnabled;e.isWebGL2||e.isWebGPU?t._type!==ju||n?(e.setDepthBias(!0),e.setDepthBiasValues(-1e3*t.shadowBias,-1e3*t.shadowBias)):e.setDepthBias(!1):e.extStandardDerivatives&&(t._type===ju?(this.polygonOffset[0]=0,this.polygonOffset[1]=0,this.polygonOffsetId.setValue(this.polygonOffset)):(this.polygonOffset[0]=-1e3*t.shadowBias,this.polygonOffset[1]=-1e3*t.shadowBias,this.polygonOffsetId.setValue(this.polygonOffset)));var i=e.isWebGL2||e.isWebGPU,a=n?t._isPcf&&i:t._isPcf&&i&&t._type!==ju;e.setBlendState(a?this.blendStateNoWrite:this.blendStateWrite),e.setDepthState(xr.DEFAULT),e.setStencilState(null,null)},t.restoreRenderState=function(e){e.isWebGL2||e.isWebGPU?e.setDepthBias(!1):e.extStandardDerivatives&&(this.polygonOffset[0]=0,this.polygonOffset[1]=0,this.polygonOffsetId.setValue(this.polygonOffset))},t.dispatchUniforms=function(e,t,n,i){var a=t._node;e._type!==Wu&&(this.renderer.dispatchViewPos(a.getPosition()),this.shadowMapLightRadiusId.setValue(e.attenuationEnd)),h_.setTRS(a.getPosition(),a.getRotation(),pt.ONE).invert(),p_.mul2(t.projectionMatrix,h_);var s=n.shadowViewport;t.rect=s,t.scissorRect=n.shadowScissor,m_.setViewport(s.x,s.y,s.z,s.w),n.shadowMatrix.mul2(m_,p_),e._type===Wu&&e._shadowMatrixPalette.set(n.shadowMatrix.data,16*i)},t.getShadowPass=function(e){var t,n=e._type,i=e._shadowType,a=null==(t=this.shadowPassCache[n])?void 0:t[i];if(!a){var s="ShadowPass_"+n+"_"+i;a=Yg.get(this.device).allocate(s,{isShadow:!0,lightType:n,shadowType:i}),this.shadowPassCache[n]||(this.shadowPassCache[n]=[]),this.shadowPassCache[n][i]=a}return a.index},t.submitCasters=function(e,t){for(var n=this.device,i=this.renderer,a=i.scene,s=1<<Tf,r=this.getShadowPass(t),o=e.length,l=0;l<o;l++){var c=e[l],h=c.mesh;c.ensureMaterial(n);var p=c.material;i.setBaseConstants(n,p),i.setSkinning(n,c),p.dirty&&(p.updateUniforms(n,a),p.dirty=!1),p.chunks&&(i.setupCullMode(!0,1,c),p.setParameters(n),c.setParameters(n,s));var d=c.getShaderInstance(r,0,a,this.viewUniformFormat,this.viewBindGroupFormat),u=d.shader;c._key[yf]=u.id,!u.failed&&n.setShader(u),i.setVertexBuffers(n,h),i.setMorphing(n,c.morphInstance),this.renderer.setupMeshUniformBuffers(d,c);var m=c.renderStyle;n.setIndexBuffer(h.indexBuffer[m]),i.drawInstance(n,c,h,m),i._shadowDrawCalls++}},t.needsShadowRendering=function(e){var t=e.enabled&&e.castShadows&&e.shadowUpdateMode!==mf&&e.visibleThisFrame;return e.shadowUpdateMode===ff&&(e.shadowUpdateMode=mf),t&&(this.renderer._shadowMapUpdates+=e.numShadowFaces),t},t.getLightRenderData=function(e,t,n){return e.getRenderData(e._type===Wu?t:null,n)},t.setupRenderPass=function(e,t,n){var i=t.renderTarget;e.init(i),e.depthStencilOps.clearDepthValue=1,e.depthStencilOps.clearDepth=n,i.depthBuffer?e.depthStencilOps.storeDepth=!0:(e.colorOps.clearValue.copy(t.clearColor),e.colorOps.clear=n,e.depthStencilOps.storeDepth=!1),e.requiresCubemaps=!1},t.prepareFace=function(t,n,i){var a=t._type,s=t._shadowType,r=this.renderer.scene.clusteredLightingEnabled,o=this.getLightRenderData(t,n,i).shadowCamera;e.setShadowCameraSettings(o,this.device,s,a,r);var l=a===Wu?0:i;return o.renderTarget=t._shadowMap.renderTargets[l],o},t.renderFace=function(e,t,n,i,a){void 0===a&&(a=!0);var s=this.device,r=this.getLightRenderData(e,t,n),o=r.shadowCamera;this.dispatchUniforms(e,o,r,n);var l=o.renderTarget,c=this.renderer;c.setCameraUniforms(o,l),s.supportsUniformBuffers&&c.setupViewUniformBuffers(r.viewBindGroups,this.viewUniformFormat,this.viewBindGroupFormat,1),a?(c.setupViewport(o,l),i&&c.clear(o)):c.clearView(o,l,!0,!1),this.setupRenderState(s,e),this.submitCasters(r.visibleCasters,e),this.restoreRenderState(s)},t.render=function(e,t,n){if(void 0===n&&(n=!0),this.needsShadowRendering(e)){for(var i=e.numShadowFaces,a=0;a<i;a++)this.prepareFace(e,t,a),this.renderFace(e,t,a,!0,n);this.renderVsm(e,t)}},t.renderVsm=function(e,t){e._isVsm&&e._vsmBlurSize>1&&(this.renderer.scene.clusteredLightingEnabled&&e._type!==Wu||this.applyVsmBlur(e,t))},t.getVsmBlurShader=function(e,t,n){var i=(e?this.blurPackedVsmShader:this.blurVsmShader)[t][n];if(!i){this.blurVsmWeights[n]=l_(n);var a=Mg.fullscreenQuadVS,s="#define SAMPLES "+n+"\n";s+=e?this.blurPackedVsmShaderCode[t]:this.blurVsmShaderCode[t];var r="blurVsm"+t+n+e;i=kg(this.device,a,s,r),e?this.blurPackedVsmShader[t][n]=i:this.blurVsmShader[t][n]=i}return i},t.applyVsmBlur=function(e,t){var n=this.device;n.setBlendState(yr.NOBLEND);var i=e.getRenderData(e._type===Wu?t:null,0).shadowCamera.renderTarget,a=this.renderer.shadowMapCache.get(n,e),s=a.renderTargets[0],r=e._shadowType===im,o=e.vsmBlurMode,l=e._vsmBlurSize,c=this.getVsmBlurShader(r,o,l);u_.z=e._shadowResolution-2,u_.w=u_.z,this.sourceId.setValue(i.colorBuffer),d_[0]=1/e._shadowResolution,d_[1]=0,this.pixelOffsetId.setValue(d_),o===pm&&this.weightId.setValue(this.blurVsmWeights[l]),Gg(n,s,c,null,u_),this.sourceId.setValue(s.colorBuffer),d_[1]=d_[0],d_[0]=0,this.pixelOffsetId.setValue(d_),Gg(n,i,c,null,u_),this.renderer.shadowMapCache.add(e,a)},t.initViewBindGroupFormat=function(){this.device.supportsUniformBuffers&&!this.viewUniformFormat&&(this.viewUniformFormat=new go(this.device,[new fo("matrix_viewProjection",gs)]),this.viewBindGroupFormat=new bo(this.device,[new _o(Ns,Is|Rs)],[]))},t.frameUpdate=function(){this.initViewBindGroupFormat()},e}(),g_=[],v_=function(){function e(e){this._empty=null,this._allocated=[],this._clusters=new Map,this.device=e}var t=e.prototype;return t.destroy=function(){this._empty&&(this._empty.destroy(),this._empty=null),this._allocated.forEach((function(e){e.destroy()})),this._allocated.length=0},t.assign=function(e){var t=this.empty;g_.push.apply(g_,this._allocated),this._allocated.length=0,this._clusters.clear();for(var n=e.length,i=0;i<n;i++){var a=e[i];a.lightClusters=null;var s=a.layer;if(s.hasClusteredLights&&s.meshInstances.length){var r,o=s.getLightIdHash(),l=this._clusters.get(o),c=null==l?void 0:l.lightClusters;c||(c=null!=(r=g_.pop())?r:new Hy(this.device),this._allocated.push(c),this._clusters.set(o,a)),a.lightClusters=c}a.lightClusters||(a.lightClusters=t)}g_.forEach((function(e){return e.destroy()})),g_.length=0},t.update=function(e,t,n){this.assign(e),this._clusters.forEach((function(e){var i=e.layer;e.lightClusters.update(i.clusteredLightsSet,t,n)}))},q(e,[{key:"count",get:function(){return this._allocated.length}},{key:"empty",get:function(){if(!this._empty){var e=new Hy(this.device);e.name="ClusterEmpty",e.update([],!1,null),this._empty=e}return this._empty}}]),e}(),y_="\n\tattribute vec2 vertex_position;\n\tvarying vec2 uv0;\n\tvoid main(void) {\n\t\tgl_Position = vec4(vertex_position, 0.5, 1.0);\n\t\tuv0 = vertex_position.xy * 0.5 + 0.5;\n\t\t#ifndef WEBGPU\n\t\t\tuv0.y = 1.0 - uv0.y;\n\t\t#endif\n\t}",__="\n\tvarying vec2 uv0;\n\tuniform sampler2D blitTexture;\n\tvoid main(void) {\n\t\tgl_FragColor = texture2D(blitTexture, uv0);\n\t}",w_="\n\tvarying vec2 uv0;\n\tuniform samplerCube blitTexture;\n\tuniform mat4 invViewProj;\n\tvoid main(void) {\n\t\tvec4 projPos = vec4(uv0 * 2.0 - 1.0, 0.5, 1.0);\n\t\tvec4 worldPos = invViewProj * projPos;\n\t\tgl_FragColor = textureCube(blitTexture, worldPos.xyz);\n\t}",b_=new vt,x_=[],C_=function(e){function t(t,n){var i;return(i=e.call(this,t)||this)._quadRenderer2D=null,i._quadRendererCube=null,i._filteredLights=[],i._cubeSlotsOffsets=n,i.requiresCubemaps=!1,i.blitTextureId=t.scope.resolve("blitTexture"),i.invViewProjId=t.scope.resolve("invViewProj"),i}Z(t,e);var n=t.prototype;return n.destroy=function(){var e,t;null==(e=this._quadRenderer2D)||e.destroy(),this._quadRenderer2D=null,null==(t=this._quadRendererCube)||t.destroy(),this._quadRendererCube=null},t.create=function(e,n){var i=new t(e.device,n);return i.init(e),i.colorOps.clear=!1,i.depthStencilOps.clearDepth=!1,i},n.update=function(e){var t=this._filteredLights;this.filter(e,t),this.executeEnabled=t.length>0},n.filter=function(e,t){for(var n=0;n<e.length;n++){var i=e[n];i._type!==Wu&&i.atlasViewportAllocated&&i.atlasSlotUpdated&&i.enabled&&i.cookie&&i.visibleThisFrame&&t.push(i)}},n.initInvViewProjMatrices=function(){if(!x_.length)for(var e=0;e<6;e++){var t=yy.create(null,ju,e),n=t.projectionMatrix,i=t.node.getLocalTransform().clone().invert();x_[e]=(new St).mul2(n,i).invert()}},n.execute=function(){var e=this.device;e.setBlendState(yr.NOBLEND),e.setCullMode(An),e.setDepthState(xr.NODEPTH),e.setStencilState();for(var t=this.renderTarget.colorBuffer.width,n=this._cubeSlotsOffsets,i=this._filteredLights,a=0;a<i.length;a++){var s=i[a],r=s.numShadowFaces,o=r>1?this.quadRendererCube:this.quadRenderer2D;r>1&&this.initInvViewProjMatrices(),this.blitTextureId.setValue(s.cookie);for(var l=0;l<r;l++){if(b_.copy(s.atlasViewport),r>1){var c=b_.z/3,h=n[l];b_.x+=c*h.x,b_.y+=c*h.y,b_.z=c,b_.w=c,this.invViewProjId.setValue(x_[l].data)}b_.mulScalar(t),o.render(b_)}}i.length=0},q(t,[{key:"quadRenderer2D",get:function(){if(!this._quadRenderer2D){var e=kg(this.device,y_,__,"cookieRenderer2d");this._quadRenderer2D=new Vg(e)}return this._quadRenderer2D}},{key:"quadRendererCube",get:function(){if(!this._quadRendererCube){var e=kg(this.device,y_,w_,"cookieRendererCube");this._quadRendererCube=new Vg(e)}return this._quadRendererCube}}]),t}(Eg),S_=0,E_=[0,0,0,0],T_=new St,A_=new St,L_=new St,M_=new ut,P_=new Dt,O_=(new St).setScale(1,-1,1),I_=new Set,R_=new Set,D_=(new St).set([1,0,0,0,0,1,0,0,0,0,.5,0,0,0,.5,1]),k_=new St,F_=new St,B_=new St,N_=new St,U_=new Set,z_=[],V_=[],H_=function(){function e(e){this.clustersDebugRendered=!1,this.processingMeshInstances=new Set,this.worldClustersAllocator=void 0,this.lights=[],this.localLights=[],this.device=e,this.scene=null,this.worldClustersAllocator=new v_(e),this.lightTextureAtlas=new Ky(e),this.shadowMapCache=new Jy,this.shadowRenderer=new f_(this,this.lightTextureAtlas),this._shadowRendererLocal=new $y(this,this.shadowRenderer),this._shadowRendererDirectional=new r_(this,this.shadowRenderer),this.cookiesRenderPass=C_.create(this.lightTextureAtlas.cookieRenderTarget,this.lightTextureAtlas.cubeSlotsOffsets),this.viewUniformFormat=null,this.viewBindGroupFormat=null,this._skinTime=0,this._morphTime=0,this._cullTime=0,this._shadowMapTime=0,this._lightClustersTime=0,this._layerCompositionUpdateTime=0,this._shadowDrawCalls=0,this._skinDrawCalls=0,this._instancedDrawCalls=0,this._shadowMapUpdates=0,this._numDrawCallsCulled=0,this._camerasRendered=0,this._lightClusters=0;var t=e.scope;this.boneTextureId=t.resolve("texture_poseMap"),this.boneTextureSizeId=t.resolve("texture_poseMapSize"),this.poseMatrixId=t.resolve("matrix_pose[0]"),this.modelMatrixId=t.resolve("matrix_model"),this.normalMatrixId=t.resolve("matrix_normal"),this.viewInvId=t.resolve("matrix_viewInverse"),this.viewPos=new Float32Array(3),this.viewPosId=t.resolve("view_position"),this.projId=t.resolve("matrix_projection"),this.projSkyboxId=t.resolve("matrix_projectionSkybox"),this.viewId=t.resolve("matrix_view"),this.viewId3=t.resolve("matrix_view3"),this.viewProjId=t.resolve("matrix_viewProjection"),this.flipYId=t.resolve("projectionFlipY"),this.tbnBasis=t.resolve("tbnBasis"),this.nearClipId=t.resolve("camera_near"),this.farClipId=t.resolve("camera_far"),this.cameraParams=new Float32Array(4),this.cameraParamsId=t.resolve("camera_params"),this.alphaTestId=t.resolve("alpha_ref"),this.opacityMapId=t.resolve("texture_opacityMap"),this.exposureId=t.resolve("exposure"),this.twoSidedLightingNegScaleFactorId=t.resolve("twoSidedLightingNegScaleFactor"),this.twoSidedLightingNegScaleFactorId.setValue(0),this.morphWeightsA=t.resolve("morph_weights_a"),this.morphWeightsB=t.resolve("morph_weights_b"),this.morphPositionTex=t.resolve("morphPositionTex"),this.morphNormalTex=t.resolve("morphNormalTex"),this.morphTexParams=t.resolve("morph_tex_params"),this.lightCube=new Qy,this.constantLightCube=t.resolve("lightCube[0]")}var t=e.prototype;return t.destroy=function(){this.shadowRenderer=null,this._shadowRendererLocal=null,this._shadowRendererDirectional=null,this.shadowMapCache.destroy(),this.shadowMapCache=null,this.cookiesRenderPass.destroy(),this.cookiesRenderPass=null,this.lightTextureAtlas.destroy(),this.lightTextureAtlas=null},t.sortCompare=function(e,t){if(e.layer===t.layer){if(e.drawOrder&&t.drawOrder)return e.drawOrder-t.drawOrder;if(e.zdist&&t.zdist)return t.zdist-e.zdist;if(e.zdist2&&t.zdist2)return e.zdist2-t.zdist2}return t._key[vf]-e._key[vf]},t.sortCompareMesh=function(e,t){if(e.layer===t.layer){if(e.drawOrder&&t.drawOrder)return e.drawOrder-t.drawOrder;if(e.zdist&&t.zdist)return t.zdist-e.zdist}var n=e._key[vf],i=t._key[vf];return n===i&&e.mesh&&t.mesh?t.mesh.id-e.mesh.id:i-n},t.sortCompareDepth=function(e,t){var n=e._key[yf],i=t._key[yf];return n===i&&e.mesh&&t.mesh?t.mesh.id-e.mesh.id:i-n},t.setupViewport=function(e,t){var n=this.device,i=t?t.width:n.width,a=t?t.height:n.height,s=e.rect,r=Math.floor(s.x*i),o=Math.floor(s.y*a),l=Math.floor(s.z*i),c=Math.floor(s.w*a);if(n.setViewport(r,o,l,c),e._scissorRectClear){var h=e.scissorRect;r=Math.floor(h.x*i),o=Math.floor(h.y*a),l=Math.floor(h.z*i),c=Math.floor(h.w*a)}n.setScissor(r,o,l,c)},t.setCameraUniforms=function(e,t){var n=null==t?void 0:t.flipY,i=1;if(e.xr&&e.xr.session){var a,s=e._node.parent;s&&(a=s.getWorldTransform());var r=e.xr.views;i=r.length;for(var o=0;o<i;o++){var l=r[o];s?(l.viewInvOffMat.mul2(a,l.viewInvMat),l.viewOffMat.copy(l.viewInvOffMat).invert()):(l.viewInvOffMat.copy(l.viewInvMat),l.viewOffMat.copy(l.viewMat)),l.viewMat3.setFromMat4(l.viewOffMat),l.projViewOffMat.mul2(l.projMat,l.viewOffMat),l.position[0]=l.viewInvOffMat.data[12],l.position[1]=l.viewInvOffMat.data[13],l.position[2]=l.viewInvOffMat.data[14],e.frustum.setFromMat4(l.projViewOffMat)}}else{var c=e.projectionMatrix;e.calculateProjection&&e.calculateProjection(c,Gf);var h=e.getProjectionMatrixSkybox();if(n&&(c=k_.mul2(O_,c),h=F_.mul2(O_,h)),this.device.isWebGPU&&(c=B_.mul2(D_,c),h=N_.mul2(D_,h)),this.projId.setValue(c.data),this.projSkyboxId.setValue(h.data),e.calculateTransform)e.calculateTransform(A_,Gf);else{var p=e._node.getPosition(),d=e._node.getRotation();A_.setTRS(p,d,pt.ONE)}this.viewInvId.setValue(A_.data),L_.copy(A_).invert(),this.viewId.setValue(L_.data),M_.setFromMat4(L_),this.viewId3.setValue(M_.data),T_.mul2(c,L_),this.viewProjId.setValue(T_.data),this.flipYId.setValue(n?-1:1),this.dispatchViewPos(e._node.getPosition()),e.frustum.setFromMat4(T_)}this.tbnBasis.setValue(n?-1:1);var u=e._nearClip,m=e._farClip;return this.nearClipId.setValue(u),this.farClipId.setValue(m),this.cameraParams[0]=1/m,this.cameraParams[1]=m,this.cameraParams[2]=u,this.cameraParams[3]=e.projection===Sm?1:0,this.cameraParamsId.setValue(this.cameraParams),this.exposureId.setValue(this.scene.physicalUnits?e.getExposure():this.scene.exposure),i},t.clear=function(e,t,n,i){var a=((null!=t?t:e._clearColorBuffer)?yn:0)|((null!=n?n:e._clearDepthBuffer)?_n:0)|((null!=i?i:e._clearStencilBuffer)?wn:0);a&&this.device.clear({color:[e._clearColor.r,e._clearColor.g,e._clearColor.b,e._clearColor.a],depth:e._clearDepth,stencil:e._clearStencil,flags:a})},t.setCamera=function(e,t,n,i){this.setCameraUniforms(e,t),this.clearView(e,t,n,!1)},t.clearView=function(e,t,n,i){var a=this.device;if(a.setRenderTarget(t),a.updateBegin(),i&&(a.setColorWrite(!0,!0,!0,!0),a.setDepthWrite(!0)),this.setupViewport(e,t),n){var s=e._clearOptions;a.clear(s||{color:[e._clearColor.r,e._clearColor.g,e._clearColor.b,e._clearColor.a],depth:e._clearDepth,flags:(e._clearColorBuffer?yn:0)|(e._clearDepthBuffer?_n:0)|(e._clearStencilBuffer?wn:0),stencil:e._clearStencil})}},t.setupCullMode=function(e,t,n){var i=n.material,a=An;if(e){var s=1;i.cull!==Mn&&i.cull!==Ln||(s=t*n.flipFacesFactor*n.node.worldScaleSign),a=s<0?i.cull===Mn?Ln:Mn:i.cull}this.device.setCullMode(a),a===An&&i.cull===An&&this.twoSidedLightingNegScaleFactorId.setValue(n.node.worldScaleSign)},t.updateCameraFrustum=function(e){if(e.xr&&e.xr.views.length){var t=e.xr.views[0];return T_.mul2(t.projMat,t.viewOffMat),void e.frustum.setFromMat4(T_)}var n=e.projectionMatrix;if(e.calculateProjection&&e.calculateProjection(n,Gf),e.calculateTransform)e.calculateTransform(A_,Gf);else{var i=e._node.getPosition(),a=e._node.getRotation();A_.setTRS(i,a,pt.ONE),this.viewInvId.setValue(A_.data)}L_.copy(A_).invert(),T_.mul2(n,L_),e.frustum.setFromMat4(T_)},t.setBaseConstants=function(e,t){e.setCullMode(t.cull),t.opacityMap&&this.opacityMapId.setValue(t.opacityMap),(t.opacityMap||t.alphaTest>0)&&this.alphaTestId.setValue(t.alphaTest)},t.updateCpuSkinMatrices=function(e){S_++;var t=e.length;if(0!==t)for(var n=0;n<t;n++){var i=e[n].skinInstance;i&&(i.updateMatrices(e[n].node,S_),i._dirty=!0)}},t.updateGpuSkinMatrices=function(e){for(var t,n=te(e);!(t=n()).done;){var i=t.value,a=i.skinInstance;a&&a._dirty&&(a.updateMatrixPalette(i.node,S_),a._dirty=!1)}},t.updateMorphing=function(e){for(var t,n=te(e);!(t=n()).done;){var i=t.value.morphInstance;i&&i._dirty&&i.update()}},t.gpuUpdate=function(e){this.updateGpuSkinMatrices(e),this.updateMorphing(e)},t.setVertexBuffers=function(e,t){e.setVertexBuffer(t.vertexBuffer)},t.setMorphing=function(e,t){if(t)if(t.morph.useTextureMorph)e.setVertexBuffer(t.morph.vertexBufferIds),this.morphPositionTex.setValue(t.texturePositions),this.morphNormalTex.setValue(t.textureNormals),this.morphTexParams.setValue(t._textureParams);else{for(var n=0;n<t._activeVertexBuffers.length;n++){var i=t._activeVertexBuffers[n];if(i){var a=Qi+(n+8);i.format.elements[0].name=a,i.format.elements[0].scopeId=e.scope.resolve(a),i.format.update(),e.setVertexBuffer(i)}}this.morphWeightsA.setValue(t._shaderMorphWeightsA),this.morphWeightsB.setValue(t._shaderMorphWeightsB)}},t.setSkinning=function(e,t){if(t.skinInstance)if(this._skinDrawCalls++,e.supportsBoneTextures){var n=t.skinInstance.boneTexture;this.boneTextureId.setValue(n),E_[0]=n.width,E_[1]=n.height,E_[2]=1/n.width,E_[3]=1/n.height,this.boneTextureSizeId.setValue(E_)}else this.poseMatrixId.setValue(t.skinInstance.matrixPalette)},t.dispatchViewPos=function(e){var t=this.viewPos;t[0]=e.x,t[1]=e.y,t[2]=e.z,this.viewPosId.setValue(t)},t.initViewBindGroupFormat=function(e){if(this.device.supportsUniformBuffers&&!this.viewUniformFormat){var t=[new fo("matrix_viewProjection",gs),new fo("cubeMapRotationMatrix",fs),new fo("view_position",rs),new fo("skyboxIntensity",as),new fo("exposure",as),new fo("textureBias",as)];e&&t.push.apply(t,[new fo("clusterCellsCountByBoundsSize",rs),new fo("clusterTextureSize",rs),new fo("clusterBoundsMin",rs),new fo("clusterBoundsDelta",rs),new fo("clusterCellsDot",rs),new fo("clusterCellsMax",rs),new fo("clusterCompressionLimit0",ss),new fo("shadowAtlasParams",ss),new fo("clusterMaxCells",is),new fo("clusterSkip",as)]),this.viewUniformFormat=new go(this.device,t);var n=[new _o(Ns,Is|Rs)],i=[new wo("lightsTextureFloat",Rs,ka,Va),new wo("lightsTexture8",Rs,ka,Va),new wo("shadowAtlasTexture",Rs,ka,Ha),new wo("cookieAtlasTexture",Rs,ka,za),new wo("areaLightsLutTex1",Rs,ka,za),new wo("areaLightsLutTex2",Rs,ka,za)];e&&i.push.apply(i,[new wo("clusterWorldTexture",Rs,ka,Va)]),this.viewBindGroupFormat=new bo(this.device,n,i)}},t.setupViewUniformBuffers=function(e,t,n,i){for(var a=this.device;e.length<i;){var s=new sl(a,t,!1),r=new $o(a,n,s);e.push(r)}var o=e[0];o.defaultUniformBuffer.update(),o.update(),a.setBindGroup(Fs,o)},t.setupMeshUniformBuffers=function(e,t){var n=this.device;if(n.supportsUniformBuffers){this.modelMatrixId.setValue(t.node.worldTransform.data),this.normalMatrixId.setValue(t.node.normalMatrix.data);var i=e.getBindGroup(n);i.defaultUniformBuffer.update(),i.update(),n.setBindGroup(ks,i)}},t.drawInstance=function(e,t,n,i,a){var s=t.instancingData;if(s)s.count>0&&(this._instancedDrawCalls++,e.setVertexBuffer(s.vertexBuffer),e.draw(n.primitive[i],s.count));else{var r=t.node.worldTransform;this.modelMatrixId.setValue(r.data),a&&this.normalMatrixId.setValue(t.node.normalMatrix.data),e.draw(n.primitive[i])}},t.drawInstance2=function(e,t,n,i){var a=t.instancingData;a?a.count>0&&(this._instancedDrawCalls++,e.draw(n.primitive[i],a.count,!0)):e.draw(n.primitive[i],void 0,!0)},t.cull=function(e,t,n){var i=n.opaque;i.length=0;var a=n.transparent;a.length=0;for(var s=e.frustumCulling,r=t.length,o=0;o<r;o++){var l=t[o];l.visible&&(s&&l.cull&&!l._isVisible(e)||(l.visibleThisFrame=!0,(l.transparent?a:i).push(l),(l.skinInstance||l.morphInstance)&&this.processingMeshInstances.add(l)))}},t.collectLights=function(e){this.lights.length=0,this.localLights.length=0;for(var t=this.scene._stats,n=e.layerList.length,i=0;i<n;i++){var a=e.layerList[i];if(!R_.has(a)){R_.add(a);for(var s=a._lights,r=0;r<s.length;r++){var o=s[r];I_.has(o)||(I_.add(o),this.lights.push(o),o._type!==Wu&&this.localLights.push(o))}}}t.lights=this.lights.length,I_.clear(),R_.clear()},t.cullLights=function(e,t){for(var n=this.scene.clusteredLightingEnabled,i=this.scene.physicalUnits,a=0;a<t.length;a++){var s=t[a];if(s.enabled)if(s._type!==Wu)if(s.getBoundingSphere(P_),e.frustum.containsSphere(P_)){s.visibleThisFrame=!0,s.usePhysicalUnits=i;var r=e.getScreenSize(P_);s.maxScreenSize=Math.max(s.maxScreenSize,r)}else n||s.castShadows&&!s.shadowMap&&(s.visibleThisFrame=!0);else s.usePhysicalUnits=this.scene.physicalUnits}},t.cullShadowmaps=function(e){for(var t=this.scene.clusteredLightingEnabled,n=0;n<this.localLights.length;n++){var i=this.localLights[n];i._type!==Wu&&(t?i.atlasSlotUpdated&&i.shadowUpdateMode===mf&&(i.shadowUpdateMode=ff):i.shadowUpdateMode===mf&&i.castShadows&&(i.getRenderData(null,0).shadowCamera.renderTarget||(i.shadowUpdateMode=ff)),i.visibleThisFrame&&i.castShadows&&i.shadowUpdateMode!==mf&&this._shadowRendererLocal.cull(i,e))}for(var a=e._renderActions,s=0;s<a.length;s++){var r=a[s];r.directionalLights.length=0;var o=r.camera.camera;if(r.firstCameraUse){for(var l=o.layers,c=0;c<l.length;c++){var h=e.getLayerById(l[c]);if(h)for(var p=h.splitLights[Wu],d=0;d<p.length;d++){var u=p[d];u.castShadows&&!U_.has(u)&&(U_.add(u),r.directionalLights.push(u),this._shadowRendererDirectional.cull(u,e,o))}}U_.clear()}}},t.cullComposition=function(e){this.processingMeshInstances.clear();for(var t=e._renderActions,n=0;n<t.length;n++){var i=t[n],a=i.layerIndex,s=e.layerList[a];if(s.enabled&&e.subLayerEnabled[a]){var r=i.camera;if(r){r.frameUpdate(i.renderTarget),i.firstCameraUse&&(this.updateCameraFrustum(r.camera),this._camerasRendered++),this.cullLights(r.camera,s._lights),s.onPreCull&&s.onPreCull(e.camerasMap.get(r));var o=s.getCulledInstances(r.camera),l=s.meshInstances;this.cull(r.camera,l,o),s.onPostCull&&s.onPostCull(e.camerasMap.get(r))}}}this.scene.clusteredLightingEnabled&&this.updateLightTextureAtlas(),this.cullShadowmaps(e)},t.updateShaders=function(e,t){for(var n=e.length,i=0;i<n;i++){var a=e[i].material;if(a&&!U_.has(a)&&(U_.add(a),a.getShaderVariant!==tv.prototype.getShaderVariant)){if(t&&(!a.useLighting||a.emitter&&!a.emitter.lighting))continue;a.clearVariants()}}U_.clear()},t.beginFrame=function(e){for(var t=this.scene,n=t.updateShaders,i=e.layerList,a=i.length,s=0;s<a;s++)for(var r=i[s].meshInstances,o=r.length,l=0;l<o;l++){var c=r[l];c.visibleThisFrame=!1,n&&z_.push(c),c.skinInstance&&V_.push(c)}if(n){var h=!t.updateShaders;this.updateShaders(z_,h),t.updateShaders=!1,t._shaderVersion++}this.updateCpuSkinMatrices(V_),z_.length=0,V_.length=0;for(var p=this.lights,d=p.length,u=0;u<d;u++)p[u].beginFrame()},t.updateLightTextureAtlas=function(){this.lightTextureAtlas.update(this.localLights,this.scene.lighting)},t.updateClusters=function(e){var t=e._renderActions;this.worldClustersAllocator.update(t,this.scene.gammaCorrection,this.scene.lighting)},t.updateLayerComposition=function(e,t){for(var n=e.layerList.length,i=0;i<n;i++)e.layerList[i]._postRenderCounter=0;for(var a=this.scene._shaderVersion,s=0;s<n;s++){var r=e.layerList[s];r._shaderVersion=a,r._preRenderCalledForCameras=0,r._postRenderCalledForCameras=0;var o=e.subLayerList[s];r._postRenderCounter|=o?2:1,r._postRenderCounterMax=r._postRenderCounter}e._update()},t.frameUpdate=function(){this.clustersDebugRendered=!1,this.initViewBindGroupFormat(this.scene.clusteredLightingEnabled)},e}(),G_=2.399963229728653,W_={circlePoint:function(e){var t=Math.sqrt(Math.random()),n=2*Math.random()*Math.PI;e.x=t*Math.cos(n),e.y=t*Math.sin(n)},circlePointDeterministic:function(e,t,n){var i=t*G_,a=Math.sqrt(t)/Math.sqrt(n);e.x=a*Math.cos(i),e.y=a*Math.sin(i)},spherePointDeterministic:function(e,t,n,i,a){void 0===i&&(i=0),void 0===a&&(a=1),i=1-2*i,a=1-2*a;var s=at.lerp(i,a,t/n),r=Math.sqrt(1-s*s),o=G_*t;e.x=Math.cos(o)*r,e.y=s,e.z=Math.sin(o)*r},radicalInverse:function(e){var t=(e<<16|e>>>16)>>>0;return 2.3283064365386963e-10*(t=((16711935&(t=((252645135&(t=((858993459&(t=((1431655765&t)<<1|(2863311530&t)>>>1)>>>0))<<2|(3435973836&t)>>>2)>>>0))<<4|(4042322160&t)>>>4)>>>0))<<8|(4278255360&t)>>>8)>>>0)}},j_=function(e){switch(e){case Wa:return"Cubemap";case Xa:return"Octahedral";default:return"Equirect"}},X_=function(e,t,n){if(e<=0)t[n+0]=0,t[n+1]=0,t[n+2]=0,t[n+3]=0;else if(e>=1)t[n+0]=255,t[n+1]=0,t[n+2]=0,t[n+3]=0;else{var i=1*e%1,a=255*e%1,s=65025*e%1,r=16581375*e%1;i-=a/255,a-=s/255,s-=r/255,t[n+0]=Math.min(255,Math.floor(256*i)),t[n+1]=Math.min(255,Math.floor(256*a)),t[n+2]=Math.min(255,Math.floor(256*s)),t[n+3]=Math.min(255,Math.floor(256*r))}},Y_=function(e){for(var t=e.length,n=Math.min(t,512),i=Math.ceil(t/n),a=new Uint8Array(n*i*4),s=0,r=0;r<t;r+=4)X_(.5*e[r+0]+.5,a,s+0),X_(.5*e[r+1]+.5,a,s+4),X_(.5*e[r+2]+.5,a,s+8),X_(e[r+3]/8,a,s+12),s+=16;return{width:n,height:i,data:a}},q_=function(e,t,n,i){var a=2*n*Math.PI,s=Math.pow(1-t,1/(i+1)),r=Math.sqrt(1-s*s);e.set(Math.cos(a)*r,Math.sin(a)*r,s).normalize()},K_=function(e,t,n){var i=2*n*Math.PI,a=Math.sqrt(1-t),s=Math.sqrt(t);e.set(Math.cos(i)*s,Math.sin(i)*s,a).normalize()},Z_=function(e,t,n,i){var a=2*n*Math.PI,s=Math.sqrt((1-t)/(1+(i*i-1)*t)),r=Math.sqrt(1-s*s);e.set(Math.cos(a)*r,Math.sin(a)*r,s).normalize()},Q_=function(e,t){var n=e*t,i=t/(1-e*e+n*n);return i*i*(1/Math.PI)},J_=function(e,t){for(var n=new pt,i=[],a=0;a<e;++a)q_(n,a/e,W_.radicalInverse(a),t),i.push(n.x,n.y,n.z,0);return i},$_=function(e,t){for(var n=t/e,i=new pt,a=[],s=0;s<e;++s){K_(i,s/e,W_.radicalInverse(s));var r=i.z/Math.PI,o=.5*Math.log2(n/r);a.push(i.x,i.y,i.z,o)}return a},ew={16:{2:26,8:20,32:17,128:16,512:16},32:{2:53,8:40,32:34,128:32,512:32},128:{2:214,8:163,32:139,128:130,512:128},1024:{2:1722,8:1310,32:1114,128:1041,512:1025}},tw=function(e,t){var n=ew[e];return n&&n[t]||e},nw=function(e,t,n){for(var i=n/e,a=1-Math.log2(t)/11,s=a*a,r=new pt,o=new pt,l=new pt(0,0,1),c=[],h=tw(e,t),p=0;p<h;++p){Z_(r,p/h,W_.radicalInverse(p),s);var d=r.z;if(o.set(r.x,r.y,r.z).mulScalar(2*d).sub(l),o.z>0){var u=Q_(Math.min(1,d),s)/4+.001,m=.5*Math.log2(i/u);c.push(o.x,o.y,o.z,m)}}for(;c.length<4*e;)c.push(0,0,0,0);return c},iw=function(e,t,n){var i=Y_(n);return new vl(e,{name:t,width:i.width,height:i.height,mipmaps:!1,minFilter:On,magFilter:On,levels:[i.data]})},aw=function(){function e(e){void 0===e&&(e=!0),this.map=new Map,this.destroyContent=e}var t=e.prototype;return t.destroy=function(){this.destroyContent&&this.map.forEach((function(e,t){e.destroy()}))},t.get=function(e,t){if(!this.map.has(e)){var n=t();return this.map.set(e,n),n}return this.map.get(e)},e}(),sw=new aw(!1),rw=new xl,ow=function(e,t,n){return rw.get(e,(function(){return new aw})).get(t,(function(){return iw(e,t,sw.get(t,n))}))},lw=function(e,t,n){return ow(e,"lambert-samples-"+t+"-"+n,(function(){return $_(t,n)}))},cw=function(e,t,n){return ow(e,"phong-samples-"+t+"-"+n,(function(){return J_(t,n)}))},hw=function(e,t,n,i){return ow(e,"ggx-samples-"+t+"-"+n+"-"+i,(function(){return nw(t,n,i)}))},pw="\nattribute vec2 vertex_position;\n\nuniform vec4 uvMod;\n\nvarying vec2 vUv0;\n\nvoid main(void) {\n    gl_Position = vec4(vertex_position, 0.5, 1.0);\n    vUv0 = getImageEffectUV((vertex_position.xy * 0.5 + 0.5) * uvMod.xy + uvMod.zw);\n}\n";function dw(e,t,n){var i;void 0===n&&(n={}),e instanceof Ur&&(e=arguments[1],t=arguments[2],n={},void 0!==arguments[3]&&(n.specularPower=arguments[3]),void 0!==arguments[4]&&(n.numSamples=arguments[4]));var a={none:"reproject",lambert:"prefilterSamplesUnweighted",phong:"prefilterSamplesUnweighted",ggx:"prefilterSamples"},s=n.hasOwnProperty("specularPower")?n.specularPower:1,r=n.hasOwnProperty("face")?n.face:null,o=n.hasOwnProperty("distribution")?n.distribution:1===s?"none":"phong",l=a[o]||"reproject",c=l.startsWith("prefilterSamples"),h=hy.decodeFunc(e.encoding),p=hy.encodeFunc(t.encoding),d="sample"+j_(e.projection),u="getDirection"+j_(t.projection),m=n.hasOwnProperty("numSamples")?n.numSamples:1024,f=l+"_"+h+"_"+p+"_"+d+"_"+u+"_"+m,g=e.device,v=Og(g).getCachedShader(f);if(!v){var y="#define PROCESS_FUNC "+l+"\n"+(c?"#define USE_SAMPLES_TEX\n":"")+(e.cubemap?"#define CUBEMAP_SOURCE\n":"")+"#define DECODE_FUNC "+h+"\n#define ENCODE_FUNC "+p+"\n#define SOURCE_FUNC "+d+"\n#define TARGET_FUNC "+u+"\n#define NUM_SAMPLES "+m+"\n#define NUM_SAMPLES_SQRT "+Math.round(Math.sqrt(m)).toFixed(1)+"\n";v=kg(g,pw,y+"\n"+Mg.reprojectPS,f)}g.setBlendState(yr.NOBLEND),g.scope.resolve(e.cubemap?"sourceCube":"sourceTex").setValue(e);var _=g.scope.resolve("params"),w=g.scope.resolve("params2"),b=g.scope.resolve("uvMod");if(null!=(i=n)&&i.seamPixels){var x=n.seamPixels,C=(n.rect?n.rect.z:t.width)-2*x,S=(n.rect?n.rect.w:t.height)-2*x;b.setValue([(C+2*x)/C,(S+2*x)/S,-x/C,-x/S])}else b.setValue([1,1,0,0]);var E=[0,s,e.fixCubemapSeams?1/e.width:0,t.fixCubemapSeams?1/t.width:0],T=[t.width*t.height*(t.cubemap?6:1),e.width*e.height*(e.cubemap?6:1)];if(c){var A=e.width*e.height*(e.cubemap?6:1),L="ggx"===o?hw(g,m,s,A):"lambert"===o?lw(g,m,A):cw(g,m,s);g.scope.resolve("samplesTex").setValue(L),g.scope.resolve("samplesTexInverseSize").setValue([1/L.width,1/L.height])}for(var M=0;M<(t.cubemap?6:1);M++)if(null===r||M===r){var P,O=new Vr({colorBuffer:t,face:M,depth:!1,flipY:g.isWebGPU});E[0]=M,_.setValue(E),w.setValue(T),Gg(g,O,v,null==(P=n)?void 0:P.rect),O.destroy()}}var uw=!0,mw=function(e,t){return void 0===t&&(t=0),1+Math.floor(Math.log2(Math.max(e,t)))},fw=function(e){return e.extTextureHalfFloat&&e.textureHalfFloatRenderable},gw=function(e){return e.extTextureFloat&&e.textureFloatRenderable},vw=function(e){return fw(e)?ri:gw(e)?li:ti},yw=function(e){return ti},_w=function(e,t,n,i){return new vl(e,{name:"lighting-"+t,cubemap:!0,width:t,height:t,format:n,type:n===ti?La:Ea,addressU:Yt,addressV:Yt,fixCubemapSeams:uw,mipmaps:!!i})},ww=function(){function e(){}return e.generateSkyboxCubemap=function(e,t){var n=e.device,i=_w(n,t||(e.cubemap?e.width:e.width/4),ti,!1);return dw(e,i,{numSamples:1024}),i},e.generateLightingSource=function(e,t){var n=e.device,i=vw(n),a=(null==t?void 0:t.target)||new vl(n,{name:"lighting-source",cubemap:!0,width:(null==t?void 0:t.size)||128,height:(null==t?void 0:t.size)||128,format:i,type:i===ti?La:Ea,addressU:Yt,addressV:Yt,fixCubemapSeams:!1,mipmaps:!0});return dw(e,a,{numSamples:e.mipmaps?1:1024}),a},e.generateAtlas=function(e,t){for(var n=e.device,i=yw(),a=(null==t?void 0:t.target)||new vl(n,{name:"envAtlas",width:(null==t?void 0:t.size)||512,height:(null==t?void 0:t.size)||512,format:i,type:La,projection:ja,addressU:Yt,addressV:Yt,mipmaps:!1}),s=a.width/512,r=new vt(0,0,512*s,256*s),o=mw(256)-mw(4),l=0;l<o;++l)dw(e,a,{numSamples:1,rect:r,seamPixels:s}),r.x+=r.w,r.y+=r.w,r.z=Math.max(1,Math.floor(.5*r.z)),r.w=Math.max(1,Math.floor(.5*r.w));r.set(0,256*s,256*s,128*s);for(var c=1;c<7;++c)dw(e,a,{numSamples:(null==t?void 0:t.numReflectionSamples)||1024,distribution:(null==t?void 0:t.distribution)||"ggx",specularPower:Math.max(1,2048>>2*c),rect:r,seamPixels:s}),r.y+=r.w,r.z=Math.max(1,Math.floor(.5*r.z)),r.w=Math.max(1,Math.floor(.5*r.w));return r.set(128*s,384*s,64*s,32*s),dw(e,a,{numSamples:(null==t?void 0:t.numAmbientSamples)||2048,distribution:"lambert",rect:r,seamPixels:s}),a},e.generatePrefilteredAtlas=function(e,t){for(var n=e[0].device,i=e[0].format,a=e[0].type,s=(null==t?void 0:t.target)||new vl(n,{name:"envPrefilteredAtlas",width:(null==t?void 0:t.size)||512,height:(null==t?void 0:t.size)||512,format:i,type:a,projection:ja,addressU:Yt,addressV:Yt,mipmaps:!1}),r=s.width/512,o=new vt(0,0,512*r,256*r),l=mw(512),c=0;c<l;++c)dw(e[0],s,{numSamples:1,rect:o,seamPixels:r}),o.x+=o.w,o.y+=o.w,o.z=Math.max(1,Math.floor(.5*o.z)),o.w=Math.max(1,Math.floor(.5*o.w));o.set(0,256*r,256*r,128*r);for(var h=1;h<e.length;++h)dw(e[h],s,{numSamples:1,rect:o,seamPixels:r}),o.y+=o.w,o.z=Math.max(1,Math.floor(.5*o.z)),o.w=Math.max(1,Math.floor(.5*o.w));return o.set(128*r,384*r,64*r,32*r),null!=t&&t.legacyAmbient?dw(e[5],s,{numSamples:1,rect:o,seamPixels:r}):dw(e[0],s,{numSamples:(null==t?void 0:t.numSamples)||2048,distribution:"lambert",rect:o,seamPixels:r}),s},e}(),bw=function(){function e(){this.forceUv1=!1,this.ambientTint=!1,this.diffuseTint=!1,this.specularTint=!1,this.metalnessTint=!1,this.glossTint=!1,this.emissiveTint=!1,this.opacityTint=!1,this.emissiveEncoding="linear",this.lightMapEncoding="linear",this.packedNormal=!1,this.glossInvert=!1,this.sheenGlossInvert=!1,this.clearCoatGlossInvert=!1,this.litOptions=new ay}return q(e,[{key:"pass",get:function(){return this.litOptions.pass}}]),e}(),xw=[],Cw=function(e){return Object.keys(e).filter((function(e){return"litOptions"!==e})).sort()},Sw=function(e){function t(){for(var t,n=arguments.length,i=new Array(n),a=0;a<n;a++)i[a]=arguments[a];return(t=e.call.apply(e,[this].concat(i))||this).optionsContext=new bw,t.optionsContextMin=new bw,t}Z(t,e);var n=t.prototype;return n.generateKey=function(e){var t;return e===this.optionsContextMin?(this.propsMin||(this.propsMin=Cw(e)),t=this.propsMin):e===this.optionsContext?(this.props||(this.props=Cw(e)),t=this.props):t=Cw(e),"standard:\n"+t.map((function(t){return t+e[t]})).join("\n")+Py.generateKey(e.litOptions)},n._getUvSourceExpression=function(e,t,n){var i,a=n[e],s=n[t],r=n.litOptions.pass===xf||n.litOptions.pass===Cf;return r&&n.litOptions.nineSlicedMode===Uf||r&&n.litOptions.nineSlicedMode===zf?i="nineSlicedUv":(i=0===a?"vUv"+s:"vUV"+s+"_"+a,n.heightMap&&"heightMapTransform"!==e&&(i+=" + dUvOffset")),i},n._addMapDef=function(e,t){return t?"#define "+e+"\n":"#undef "+e+"\n"},n._addMapDefs=function(e,t,n,i,a){return this._addMapDef("MAPFLOAT",e)+this._addMapDef("MAPCOLOR",t)+this._addMapDef("MAPVERTEX",n)+this._addMapDef("MAPTEXTURE",i)+this._addMapDef("MAPINVERT",a)},n._addMap=function(e,t,n,i,a,s){void 0===s&&(s=null);var r=e+"Map",o=r+"Uv",l=r+"Identifier",c=r+"Transform",h=r+"Channel",p=e+"VertexColorChannel",d=e+"VertexColor",u=e+"Mode",m=e+"Invert",f=n[e+"Tint"],g=n[d],v=n[r],y=n[l],_=n[u],w=i[t];if(v){var b=this._getUvSourceExpression(c,o,n);if(w=w.replace(/\$UV/g,b).replace(/\$CH/g,n[h]),a&&-1!==w.search(/\$SAMPLER/g)){var x="texture_"+r,C=a[y];C?x=C:a[y]=x,w=w.replace(/\$SAMPLER/g,x)}if(s&&(w="aaa"===n[h]?w.replace(/\$DECODE/g,"passThrough"):w.replace(/\$DECODE/g,hy.decodeFunc(n.litOptions.gamma||"srgb"!==s?s:"linear"))).indexOf("$texture2DSAMPLE")){var S={linear:"texture2D",srgb:"texture2DSRGB",rgbm:"texture2DRGBM",rgbe:"texture2DRGBE"};w=w.replace(/\$texture2DSAMPLE/g,S[s]||"texture2D")}}g&&(w=w.replace(/\$VC/g,n[p])),_&&(w=w.replace(/\$DETAILMODE/g,_));var E=!!(1&f),T=!!(2&f),A=!!n[m];return(w=this._addMapDefs(E,T,g,v,A)+w).replace(/\$/g,"")},n._correctChannel=function(e,t,n){if(n[e]>0){if(n[e]<t.length)return t.substring(0,n[e]);if(n[e]>t.length){for(var i=t,a=i.charAt(i.length-1),s=n[e]-i.length,r=0;r<s;r++)i+=a;return i}return t}},n.createShaderDefinition=function(e,t){var n=Yg.get(e).getByIndex(t.litOptions.pass).isForward,i=new My(e,t.litOptions),a=[],s=[],r=[],o=2,l={};for(var c in xw){var h=c+"Map";if(t[c+"VertexColor"]){var p=c+"VertexColorChannel";t[p]=this._correctChannel(c,t[p],xw)}if(t[h]){var d=h+"Channel",u=h+"Transform",m=h+"Uv";t[m]=Math.min(t[m],o-1),t[d]=this._correctChannel(c,t[d],xw);var f=t[m];a[f]=!0,s[f]=s[f]||t[h]&&!t[u],t[u]&&r.push({name:c,id:t[u],uv:t[m]})}}t.forceUv1&&(a[1]=!0,s[1]=void 0===s[1]||s[1]),i.generateVertexShader(a,s,r),t.litOptions.shadingModel===Pm?(t.litOptions.fresnelModel=0,t.litOptions.ambientSH=!1):t.litOptions.fresnelModel=0===t.litOptions.fresnelModel?Du:t.litOptions.fresnelModel;var g=new oy,v=new oy,y=new oy,_=new oy,w="";if(t.litOptions.nineSlicedMode===zf?g.append("const float textureBias = -1000.0;"):g.append("uniform float textureBias;"),n){if(t.heightMap&&(g.append("vec2 dUvOffset;"),v.append(this._addMap("height","parallaxPS",t,i.chunks,l)),y.append("getParallax();")),t.litOptions.blendType!==bu||t.litOptions.alphaTest||t.litOptions.alphaToCoverage?(g.append("float dAlpha;"),v.append(this._addMap("opacity","opacityPS",t,i.chunks,l)),y.append("getOpacity();"),_.append("litArgs_opacity = dAlpha;"),t.litOptions.alphaTest&&(v.append(i.chunks.alphaTestPS),y.append("alphaTest(dAlpha);"))):g.append("float dAlpha = 1.0;"),i.needsNormal){if((t.normalMap||t.clearCoatNormalMap)&&(v.append(t.packedNormal?i.chunks.normalXYPS:i.chunks.normalXYZPS),!t.litOptions.hasTangents)){var b=t.normalMap?"normalMap":"clearCoatNormalMap";w=this._getUvSourceExpression(b+"Transform",b+"Uv",t)}g.append("vec3 dNormalW;"),v.append(this._addMap("normalDetail","normalDetailMapPS",t,i.chunks,l)),v.append(this._addMap("normal","normalMapPS",t,i.chunks,l)),y.append("getNormal();"),_.append("litArgs_worldNormal = dNormalW;")}if(i.needsSceneColor&&g.append("uniform sampler2D uSceneColorMap;"),i.needsScreenSize&&g.append("uniform vec4 uScreenSize;"),i.needsTransforms&&(g.append("uniform mat4 matrix_viewProjection;"),g.append("uniform mat4 matrix_model;")),(t.diffuseDetail||t.aoDetail)&&v.append(i.chunks.detailModesPS),g.append("vec3 dAlbedo;"),t.diffuseDetail&&v.append(this._addMap("diffuseDetail","diffuseDetailMapPS",t,i.chunks,l,t.diffuseDetailEncoding)),v.append(this._addMap("diffuse","diffusePS",t,i.chunks,l,t.diffuseEncoding)),y.append("getAlbedo();"),_.append("litArgs_albedo = dAlbedo;"),t.litOptions.useRefraction&&(g.append("float dTransmission;"),v.append(this._addMap("refraction","transmissionPS",t,i.chunks,l)),y.append("getRefraction();"),_.append("litArgs_transmission = dTransmission;"),g.append("float dThickness;"),v.append(this._addMap("thickness","thicknessPS",t,i.chunks,l)),y.append("getThickness();"),_.append("litArgs_thickness = dThickness;")),t.litOptions.useIridescence&&(g.append("float dIridescence;"),v.append(this._addMap("iridescence","iridescencePS",t,i.chunks,l)),y.append("getIridescence();"),_.append("litArgs_iridescence_intensity = dIridescence;"),g.append("float dIridescenceThickness;"),v.append(this._addMap("iridescenceThickness","iridescenceThicknessPS",t,i.chunks,l)),y.append("getIridescenceThickness();"),_.append("litArgs_iridescence_thickness = dIridescenceThickness;")),i.lighting&&t.litOptions.useSpecular||i.reflections?(g.append("vec3 dSpecularity;"),g.append("float dGlossiness;"),t.litOptions.useSheen&&(g.append("vec3 sSpecularity;"),v.append(this._addMap("sheen","sheenPS",t,i.chunks,l,t.sheenEncoding)),y.append("getSheen();"),_.append("litArgs_sheen_specularity = sSpecularity;"),g.append("float sGlossiness;"),v.append(this._addMap("sheenGloss","sheenGlossPS",t,i.chunks,l)),y.append("getSheenGlossiness();"),_.append("litArgs_sheen_gloss = sGlossiness;")),t.litOptions.useMetalness&&(g.append("float dMetalness;"),v.append(this._addMap("metalness","metalnessPS",t,i.chunks,l)),y.append("getMetalness();"),_.append("litArgs_metalness = dMetalness;"),g.append("float dIor;"),v.append(this._addMap("ior","iorPS",t,i.chunks,l)),y.append("getIor();"),_.append("litArgs_ior = dIor;")),t.litOptions.useSpecularityFactor&&(g.append("float dSpecularityFactor;"),v.append(this._addMap("specularityFactor","specularityFactorPS",t,i.chunks,l)),y.append("getSpecularityFactor();"),_.append("litArgs_specularityFactor = dSpecularityFactor;")),t.useSpecularColor?v.append(this._addMap("specular","specularPS",t,i.chunks,l,t.specularEncoding)):v.append("void getSpecularity() { dSpecularity = vec3(1); }"),v.append(this._addMap("gloss","glossPS",t,i.chunks,l)),y.append("getGlossiness();"),y.append("getSpecularity();"),_.append("litArgs_specularity = dSpecularity;"),_.append("litArgs_gloss = dGlossiness;")):(g.append("vec3 dSpecularity = vec3(0.0);"),g.append("float dGlossiness = 0.0;")),t.aoDetail&&v.append(this._addMap("aoDetail","aoDetailMapPS",t,i.chunks,l)),(t.aoMap||t.aoVertexColor)&&(g.append("float dAo;"),v.append(this._addMap("ao","aoPS",t,i.chunks,l)),y.append("getAO();"),_.append("litArgs_ao = dAo;")),g.append("vec3 dEmission;"),v.append(this._addMap("emissive","emissivePS",t,i.chunks,l,t.emissiveEncoding)),y.append("getEmission();"),_.append("litArgs_emission = dEmission;"),t.litOptions.useClearCoat&&(g.append("float ccSpecularity;"),g.append("float ccGlossiness;"),g.append("vec3 ccNormalW;"),v.append(this._addMap("clearCoat","clearCoatPS",t,i.chunks,l)),v.append(this._addMap("clearCoatGloss","clearCoatGlossPS",t,i.chunks,l)),v.append(this._addMap("clearCoatNormal","clearCoatNormalPS",t,i.chunks,l)),y.append("getClearCoat();"),y.append("getClearCoatGlossiness();"),y.append("getClearCoatNormal();"),_.append("litArgs_clearcoat_specularity = ccSpecularity;"),_.append("litArgs_clearcoat_gloss = ccGlossiness;"),_.append("litArgs_clearcoat_worldNormal = ccNormalW;")),t.lightMap||t.lightVertexColor){var x=t.dirLightMap&&t.litOptions.useSpecular,C=x?"lightmapDirPS":"lightmapSinglePS";g.append("vec3 dLightmap;"),x&&g.append("vec3 dLightmapDir;"),v.append(this._addMap("light",C,t,i.chunks,l,t.lightMapEncoding)),y.append("getLightMap();"),_.append("litArgs_lightmap = dLightmap;"),x&&_.append("litArgs_lightmapDir = dLightmapDir;")}-1===v.code.indexOf("texture2DSRGB")&&-1===v.code.indexOf("texture2DRGBM")&&-1===v.code.indexOf("texture2DRGBE")||v.prepend(i.chunks.textureSamplePS)}else t.litOptions.alphaTest&&(g.append("float dAlpha;"),v.append(this._addMap("opacity","opacityPS",t,i.chunks,l)),v.append(i.chunks.alphaTestPS),y.append("getOpacity();"),y.append("alphaTest(dAlpha);"),_.append("litArgs_opacity = dAlpha;"));for(var S in g.append(i.chunks.litShaderArgsPS),v.append("void evaluateFrontend() { \n"+y.code+"\n"+_.code+"\n }\n"),y.code="evaluateFrontend();",l)g.append("uniform sampler2D "+l[S]+";");return y.code="\n"+y.code.split("\n").map((function(e){return"    "+e})).join("\n")+"\n\n",i.generateFragmentShader(g.code,v.code,y.code,w),i.getDefinition()},t}(Rg),Ew=new Sw,Tw=function(e,t){if(e.length!==t.length)return!1;for(var n=0;n<e.length;++n)if(e[n]!==t[n])return!1;return!0},Aw=function(e){return 1!==e.r||1!==e.g||1!==e.b},Lw=function(e){return 0!==e.r||0!==e.g||0!==e.b},Mw=function(){function e(){this._mapXForms=null}var t=e.prototype;return t.updateMinRef=function(e,t,n,i,a,s){this._updateSharedOptions(e,t,n,i,a),this._updateMinOptions(e,n),this._updateUVOptions(e,n,i,!0)},t.updateRef=function(e,t,n,i,a,s){this._updateSharedOptions(e,t,n,i,a),this._updateEnvOptions(e,n,t),this._updateMaterialOptions(e,n),a===Cf&&(e.litOptions.gamma&&(e.litOptions.gamma=Vm),e.litOptions.toneMap=Hm),e.litOptions.hasTangents=i&&0!=(i&rf),this._updateLightOptions(e,t,n,i,s),this._updateUVOptions(e,n,i,!1)},t._updateSharedOptions=function(e,t,n,i,a){e.forceUv1=n.forceUv1,n.userAttributes&&(e.litOptions.userAttributes=Object.fromEntries(n.userAttributes.entries())),e.litOptions.chunks=n.chunks||{},e.litOptions.pass=a,e.litOptions.alphaTest=n.alphaTest>0,e.litOptions.blendType=n.blendType,e.litOptions.screenSpace=i&&0!=(i&sf),e.litOptions.skin=i&&0!=(i&Qm),e.litOptions.useInstancing=i&&0!=(i&tf),e.litOptions.useMorphPosition=i&&0!=(i&of),e.litOptions.useMorphNormal=i&&0!=(i&lf),e.litOptions.useMorphTextureBased=i&&0!=(i&cf),e.litOptions.nineSlicedMode=n.nineSlicedMode||0,t.clusteredLightingEnabled&&n.useLighting?(e.litOptions.clusteredLightingEnabled=!0,e.litOptions.clusteredLightingCookiesEnabled=t.lighting.cookiesEnabled,e.litOptions.clusteredLightingShadowsEnabled=t.lighting.shadowsEnabled,e.litOptions.clusteredLightingShadowType=t.lighting.shadowType,e.litOptions.clusteredLightingAreaLightsEnabled=t.lighting.areaLightsEnabled):(e.litOptions.clusteredLightingEnabled=!1,e.litOptions.clusteredLightingCookiesEnabled=!1,e.litOptions.clusteredLightingShadowsEnabled=!1,e.litOptions.clusteredLightingAreaLightsEnabled=!1)},t._updateUVOptions=function(e,t,n,i){var a=!1,s=!1,r=!1;n&&(a=0!=(n&Jm),s=0!=(n&$m),r=0!=(n&ef)),e.litOptions.vertexColors=!1,this._mapXForms=[];var o={};for(var l in xw)this._updateTexOptions(e,t,l,a,s,r,i,o);this._mapXForms=null,e.litOptions.lightMapEnabled=e.lightMap,e.litOptions.dirLightMapEnabled=e.dirLightMap,e.litOptions.useHeights=e.heightMap,e.litOptions.useNormals=e.normalMap,e.litOptions.useClearCoatNormals=e.clearCoatNormalMap,e.litOptions.useAo=e.aoMap||e.aoVertexColor,e.litOptions.diffuseMapEnabled=e.diffuseMap},t._updateTexOptions=function(e,t,n,i,a,s,r,o){var l="opacity"===n;if(!r||l){var c=n+"Map",h=n+"VertexColor",p=n+"VertexColorChannel",d=c+"Channel",u=c+"Transform",m=c+"Uv",f=c+"Identifier";if("light"!==n&&(e[c]=!1,e[f]=void 0,e[d]="",e[u]=0,e[m]=0),e[h]=!1,e[p]="",l&&t.blendType===bu&&0===t.alphaTest&&!t.alphaToCoverage)return;if("height"!==n&&t[h]&&s&&(e[h]=t[h],e[p]=t[p],e.litOptions.vertexColors=!0),t[c]){var g=!0;if(0!==t[m]||i||(g=!1),1!==t[m]||a||(g=!1),g){var v=t[c].id,y=o[v];void 0===y&&(o[v]=n,y=n),e[c]=!!t[c],e[f]=y,e[u]=this._getMapTransformID(t.getUniform(u),t[m]),e[d]=t[d],e[m]=t[m]}}}},t._updateMinOptions=function(e,t){e.opacityTint=1!==t.opacity&&t.blendType!==bu,e.litOptions.lights=[]},t._updateMaterialOptions=function(e,t){var n,i,a,s,r=(t.diffuseTint||!t.diffuseMap&&!t.diffuseVertexColor)&&Aw(t.diffuse),o=!!(t.useMetalness||t.specularMap||t.sphereMap||t.cubeMap||Lw(t.specular)||t.specularityFactor>0&&t.useMetalness||t.enableGGXSpecular||t.clearCoat>0),l=!t.useMetalness||t.useMetalnessSpecularColor,c=o&&(t.specularTint||!t.specularMap&&!t.specularVertexColor)&&Aw(t.specular),h=o&&t.useMetalnessSpecularColor&&(t.specularityFactorTint||t.specularityFactor<1&&!t.specularityFactorMap),p=!t.emissiveMap||Aw(t.emissive)&&t.emissiveTint,d=1!==t.emissiveIntensity,u=!!t.normalMap&&(t.normalMap.format===ai||t.normalMap.type===Ma);e.opacityTint=1!==t.opacity&&t.blendType!==bu?1:0,e.ambientTint=t.ambientTint,e.diffuseTint=r?2:0,e.specularTint=c?2:0,e.specularityFactorTint=h?1:0,e.metalnessTint=t.useMetalness&&t.metalness<1?1:0,e.glossTint=1,e.emissiveTint=(p?2:0)+(d?1:0),e.diffuseEncoding=null==(n=t.diffuseMap)?void 0:n.encoding,e.diffuseDetailEncoding=null==(i=t.diffuseDetailMap)?void 0:i.encoding,e.emissiveEncoding=null==(a=t.emissiveMap)?void 0:a.encoding,e.lightMapEncoding=null==(s=t.lightMap)?void 0:s.encoding,e.packedNormal=u,e.refractionTint=1!==t.refraction?1:0,e.refractionIndexTint=t.refractionIndex!==1/1.5?1:0,e.thicknessTint=t.useDynamicRefraction&&1!==t.thickness?1:0,e.specularEncoding=t.specularEncoding||"linear",e.sheenEncoding=t.sheenEncoding||"linear",e.aoMapUv=t.aoUvSet,e.aoDetail=!!t.aoMap,e.diffuseDetail=!!t.diffuseMap,e.normalDetail=!!t.normalMap,e.diffuseDetailMode=t.diffuseDetailMode,e.aoDetailMode=t.aoDetailMode,e.clearCoatTint=1!==t.clearCoat?1:0,e.clearCoatGloss=!!t.clearCoatGloss,e.clearCoatGlossTint=1!==t.clearCoatGloss?1:0,e.iorTint=t.refractionIndex!==1/1.5?1:0,e.iridescenceTint=1!==t.iridescence?1:0,e.sheenTint=t.useSheen&&Aw(t.sheen)?2:0,e.sheenGlossTint=1,e.glossInvert=t.glossInvert,e.sheenGlossInvert=t.sheenGlossInvert,e.clearCoatGlossInvert=t.clearCoatGlossInvert,e.useSpecularColor=l,e.litOptions.separateAmbient=!1,e.litOptions.useAmbientTint=t.ambientTint,e.litOptions.customFragmentShader=t.customFragmentShader,e.litOptions.pixelSnap=t.pixelSnap,e.litOptions.shadingModel=t.shadingModel,e.litOptions.ambientSH=!!t.ambientSH,e.litOptions.fastTbn=t.fastTbn,e.litOptions.twoSidedLighting=t.twoSidedLighting,e.litOptions.occludeSpecular=t.occludeSpecular,e.litOptions.occludeSpecularFloat=1!==t.occludeSpecularIntensity,e.litOptions.useMsdf=!!t.msdfMap,e.litOptions.msdfTextAttribute=!!t.msdfTextAttribute,e.litOptions.alphaToCoverage=t.alphaToCoverage,e.litOptions.opacityFadesSpecular=t.opacityFadesSpecular,e.litOptions.cubeMapProjection=t.cubeMapProjection,e.litOptions.occludeDirect=t.occludeDirect,e.litOptions.conserveEnergy=t.conserveEnergy&&t.shadingModel!==Pm,e.litOptions.useSpecular=o,e.litOptions.useSpecularityFactor=(h||!!t.specularityFactorMap)&&t.useMetalnessSpecularColor,e.litOptions.enableGGXSpecular=t.enableGGXSpecular,e.litOptions.fresnelModel=t.fresnelModel,e.litOptions.useRefraction=(t.refraction||!!t.refractionMap)&&(t.useDynamicRefraction||!!e.litOptions.reflectionSource),e.litOptions.useClearCoat=!!t.clearCoat,e.litOptions.useSheen=t.useSheen,e.litOptions.useIridescence=t.useIridescence&&0!==t.iridescence,e.litOptions.useMetalness=t.useMetalness,e.litOptions.useDynamicRefraction=t.useDynamicRefraction},t._updateEnvOptions=function(e,t,n){e.litOptions.fog=t.useFog?n.fog:"none",e.litOptions.gamma=t.useGammaTonemap?n.gammaCorrection:Nm,e.litOptions.toneMap=t.useGammaTonemap?n.toneMapping:-1,e.litOptions.fixSeams=!!t.cubeMap&&t.cubeMap.fixCubemapSeams;var i=t.shadingModel===Pm,a=!1;if(t.envAtlas&&t.cubeMap&&!i?(e.litOptions.reflectionSource="envAtlasHQ",e.litOptions.reflectionEncoding=t.envAtlas.encoding,e.litOptions.reflectionCubemapEncoding=t.cubeMap.encoding):t.envAtlas&&!i?(e.litOptions.reflectionSource="envAtlas",e.litOptions.reflectionEncoding=t.envAtlas.encoding):t.cubeMap?(e.litOptions.reflectionSource="cubeMap",e.litOptions.reflectionEncoding=t.cubeMap.encoding):t.sphereMap?(e.litOptions.reflectionSource="sphereMap",e.litOptions.reflectionEncoding=t.sphereMap.encoding):t.useSkybox&&n.envAtlas&&n.skybox&&!i?(e.litOptions.reflectionSource="envAtlasHQ",e.litOptions.reflectionEncoding=n.envAtlas.encoding,e.litOptions.reflectionCubemapEncoding=n.skybox.encoding,a=!0):t.useSkybox&&n.envAtlas&&!i?(e.litOptions.reflectionSource="envAtlas",e.litOptions.reflectionEncoding=n.envAtlas.encoding,a=!0):t.useSkybox&&n.skybox?(e.litOptions.reflectionSource="cubeMap",e.litOptions.reflectionEncoding=n.skybox.encoding,a=!0):(e.litOptions.reflectionSource=null,e.litOptions.reflectionEncoding=null),t.ambientSH&&!i)e.litOptions.ambientSource="ambientSH",e.litOptions.ambientEncoding=null;else{var s=t.envAtlas||(t.useSkybox&&n.envAtlas?n.envAtlas:null);s&&!i?(e.litOptions.ambientSource="envAtlas",e.litOptions.ambientEncoding=s.encoding):(e.litOptions.ambientSource="constant",e.litOptions.ambientEncoding=null)}e.litOptions.skyboxIntensity=a&&(1!==n.skyboxIntensity||n.physicalUnits),e.litOptions.useCubeMapRotation=a&&n._skyboxRotationShaderInclude},t._updateLightOptions=function(e,t,n,i,a){if(e.lightMap=!1,e.lightMapChannel="",e.lightMapUv=0,e.lightMapTransform=0,e.litOptions.lightMapWithoutAmbient=!1,e.dirLightMap=!1,i&&(e.litOptions.noShadow=0!=(i&Zm),0!=(i&nf)&&(e.lightMapEncoding=t.lightmapPixelFormat===ti?"rgbm":"linear",e.lightMap=!0,e.lightMapChannel="rgb",e.lightMapUv=1,e.lightMapTransform=0,e.litOptions.lightMapWithoutAmbient=!n.lightMap,0!=(i&af)&&(e.dirLightMap=!0),0!=(i&hf)&&(e.litOptions.lightMapWithoutAmbient=!1))),n.useLighting){var s=[],r=i?i>>16:_f;e.litOptions.lightMaskDynamic=!!(r&_f),a&&(ry.collectLights(Wu,a[Wu],s,r),ry.collectLights(ju,a[ju],s,r),ry.collectLights(Yu,a[Yu],s,r)),e.litOptions.lights=s}else e.litOptions.lights=[];0===e.litOptions.lights.length&&(e.litOptions.noShadow=!0)},t._getMapTransformID=function(e,t){if(!e)return 0;var n=this._mapXForms[t];n||(n=[],this._mapXForms[t]=n);for(var i=0;i<n.length;i++)if(Tw(n[i][0].value,e[0].value)&&Tw(n[i][1].value,e[1].value))return i+1;return n.push(e)},e}();function Pw(e,t,n){void 0===t&&(t=!0),void 0===n&&(n=!0);var i={};return i[e+"Map"]="texture",i[e+"MapTiling"]="vec2",i[e+"MapOffset"]="vec2",i[e+"MapRotation"]="number",i[e+"MapUv"]="number",t&&(i[e+"MapChannel"]="string",n&&(i[e+"VertexColor"]="boolean",i[e+"VertexColorChannel"]="string")),i}var Ow=K({name:"string",chunks:"chunks",mappingFormat:"string",_engine:"boolean",ambient:"rgb",ambientTint:"boolean"},Pw("ao"),Pw("aoDetail",!0,!1),{aoDetailMode:"string",diffuse:"rgb",diffuseTint:"boolean"},Pw("diffuse"),Pw("diffuseDetail",!0,!1),{diffuseDetailMode:"string",specular:"rgb",specularTint:"boolean"},Pw("specular"),{occludeSpecular:"enum:occludeSpecular",specularityFactor:"number",specularityFactorTint:"boolean"},Pw("specularityFactor"),{useMetalness:"boolean",metalness:"number",enableGGXSpecular:"boolean",anisotropy:"number",metalnessTint:"boolean"},Pw("metalness"),{useMetalnessSpecularColor:"boolean",conserveEnergy:"boolean",shininess:"number",gloss:"number",glossInvert:"boolean"},Pw("gloss"),{clearCoat:"number"},Pw("clearCoat"),{clearCoatGloss:"number",clearCoatGlossInvert:"boolean"},Pw("clearCoatGloss"),{clearCoatBumpiness:"number"},Pw("clearCoatNormal",!1),{useSheen:"boolean",sheen:"rgb",sheenTint:"boolean"},Pw("sheen"),{sheenGloss:"number",sheenGlossTint:"boolean",sheenGlossInvert:"boolean"},Pw("sheenGloss"),{fresnelModel:"number",emissive:"rgb",emissiveTint:"boolean"},Pw("emissive"),{emissiveIntensity:"number"},Pw("normal",!1),{bumpiness:"number"},Pw("normalDetail",!1),{normalDetailMapBumpiness:"number"},Pw("height",!0,!1),{heightMapFactor:"number",alphaToCoverage:"boolean",alphaTest:"number",alphaFade:"number",opacity:"number"},Pw("opacity"),{opacityFadesSpecular:"boolean",reflectivity:"number",refraction:"number",refractionTint:"boolean"},Pw("refraction"),{refractionIndex:"number",thickness:"number",thicknessTint:"boolean"},Pw("thickness"),{attenuation:"rgb",attenuationDistance:"number",useDynamicRefraction:"boolean",sphereMap:"texture",cubeMap:"cubemap",cubeMapProjection:"number",cubeMapProjectionBox:"boundingbox",useIridescence:"boolean",iridescence:"number",iridescenceTint:"boolean"},Pw("iridescence"),{iridescenceThicknessTint:"boolean",iridescenceThicknessMin:"number",iridescenceThicknessMax:"number",iridescenceRefractionIndex:"number"},Pw("iridescenceThickness"),Pw("light"),{depthTest:"boolean",depthFunc:"enum:depthFunc",depthWrite:"boolean",depthBias:"number",slopeDepthBias:"number",cull:"enum:cull",blendType:"enum:blendType",shadingModel:"enum:shadingModel",useFog:"boolean",useLighting:"boolean",useSkybox:"boolean",useGammaTonemap:"boolean",envAtlas:"texture",twoSidedLighting:"boolean"}),Iw=[];for(var Rw in Ow)"texture"===Ow[Rw]&&Iw.push(Rw);var Dw=[];for(var kw in Ow)"cubemap"===Ow[kw]&&Dw.push(kw);var Fw={aoMapVertexColor:"boolean",diffuseMapTint:"boolean",diffuseMapVertexColor:"boolean",emissiveMapTint:"boolean",emissiveMapVertexColor:"boolean",glossMapVertexColor:"boolean",metalnessMapVertexColor:"boolean",opacityMapVertexColor:"boolean",specularAntialias:"boolean",specularMapTint:"boolean",specularMapVertexColor:"boolean"},Bw={},Nw={},Uw=new Set,zw=function(e){function t(){var t;return(t=e.call(this)||this).userAttributes=new Map,t._dirtyShader=!0,t._assetReferences={},t._activeParams=new Set,t._activeLightingParams=new Set,t.shaderOptBuilder=new Mw,t.reset(),t}Z(t,e);var n=t.prototype;return n.reset=function(){var e=this;Object.keys(Bw).forEach((function(t){e["_"+t]=Bw[t].value()})),this._chunks={},this._uniformCache={}},n.copy=function(t){var n=this;for(var i in e.prototype.copy.call(this,t),Object.keys(Bw).forEach((function(e){n[e]=t[e]})),t._chunks)t._chunks.hasOwnProperty(i)&&(this._chunks[i]=t._chunks[i]);return this},n.setAttribute=function(e,t){this.userAttributes.set(t,e)},n._setParameter=function(e,t){Uw.add(e),this.setParameter(e,t)},n._setParameters=function(e){var t=this;e.forEach((function(e){t._setParameter(e.name,e.value)}))},n._processParameters=function(e){var t=this,n=this[e];n.forEach((function(e){Uw.has(e)||delete t.parameters[e]})),this[e]=Uw,(Uw=n).clear()},n._updateMap=function(e){var t=e+"Map",n=this[t];if(n){this._setParameter("texture_"+t,n);var i=t+"Transform",a=this.getUniform(i);a&&this._setParameters(a)}},n._allocUniform=function(e,t){var n=this._uniformCache[e];return n||(n=t(),this._uniformCache[e]=n),n},n.getUniform=function(e,t,n){return Nw[e](this,t,n)},n.updateUniforms=function(e,t){var n=this,i=function(i){return n.getUniform(i,e,t)};for(var a in this._setParameter("material_ambient",i("ambient")),this.diffuseMap&&!this.diffuseTint||this._setParameter("material_diffuse",i("diffuse")),this.useMetalness?((!this.metalnessMap||this.metalness<1)&&this._setParameter("material_metalness",this.metalness),this.specularMap&&!this.specularTint||this._setParameter("material_specular",i("specular")),this.specularityFactorMap&&!this.specularityFactorTint||this._setParameter("material_specularityFactor",this.specularityFactor),this.sheenMap&&!this.sheenTint||this._setParameter("material_sheen",i("sheen")),this.sheenGlossMap&&!this.sheenGlossTint||this._setParameter("material_sheenGloss",this.sheenGloss),this._setParameter("material_refractionIndex",this.refractionIndex)):this.specularMap&&!this.specularTint||this._setParameter("material_specular",i("specular")),this.enableGGXSpecular&&this._setParameter("material_anisotropy",this.anisotropy),this.clearCoat>0&&(this._setParameter("material_clearCoat",this.clearCoat),this._setParameter("material_clearCoatGloss",this.clearCoatGloss),this._setParameter("material_clearCoatBumpiness",this.clearCoatBumpiness)),this._setParameter("material_gloss",i("gloss")),this.emissiveMap&&!this.emissiveTint||this._setParameter("material_emissive",i("emissive")),1!==this.emissiveIntensity&&this._setParameter("material_emissiveIntensity",this.emissiveIntensity),this.refraction>0&&this._setParameter("material_refraction",this.refraction),this.useDynamicRefraction&&(this._setParameter("material_thickness",this.thickness),this._setParameter("material_attenuation",i("attenuation")),this._setParameter("material_invAttenuationDistance",0===this.attenuationDistance?0:1/this.attenuationDistance)),this.useIridescence&&(this._setParameter("material_iridescence",this.iridescence),this._setParameter("material_iridescenceRefractionIndex",this.iridescenceRefractionIndex),this._setParameter("material_iridescenceThicknessMin",this.iridescenceThicknessMin),this._setParameter("material_iridescenceThicknessMax",this.iridescenceThicknessMax)),this._setParameter("material_opacity",this.opacity),!1===this.opacityFadesSpecular&&this._setParameter("material_alphaFade",this.alphaFade),this.occludeSpecular&&this._setParameter("material_occludeSpecularIntensity",this.occludeSpecularIntensity),this.cubeMapProjection===Mm&&this._setParameter(i("cubeMapProjectionBox")),xw)this._updateMap(a);this.ambientSH&&this._setParameter("ambientSH[0]",this.ambientSH),this.normalMap&&this._setParameter("material_bumpiness",this.bumpiness),this.normalMap&&this.normalDetailMap&&this._setParameter("material_normalDetailMapBumpiness",this.normalDetailMapBumpiness),this.heightMap&&this._setParameter("material_heightMapFactor",i("heightMapFactor"));var s=this.shadingModel===Pm;this.envAtlas&&this.cubeMap&&!s?(this._setParameter("texture_envAtlas",this.envAtlas),this._setParameter("texture_cubeMap",this.cubeMap)):this.envAtlas&&!s?this._setParameter("texture_envAtlas",this.envAtlas):this.cubeMap?this._setParameter("texture_cubeMap",this.cubeMap):this.sphereMap&&this._setParameter("texture_sphereMap",this.sphereMap),this._setParameter("material_reflectivity",this.reflectivity),this._processParameters("_activeParams"),this._dirtyShader&&this.clearVariants()},n.updateEnvUniforms=function(e,t){var n=this.shadingModel===Pm;!(this.envAtlas&&!n||this.cubeMap||this.sphereMap)&&this.useSkybox&&(t.envAtlas&&t.skybox&&!n?(this._setParameter("texture_envAtlas",t.envAtlas),this._setParameter("texture_cubeMap",t.skybox)):t.envAtlas&&!n?this._setParameter("texture_envAtlas",t.envAtlas):t.skybox&&this._setParameter("texture_cubeMap",t.skybox)),this._processParameters("_activeLightingParams")},n.getShaderVariant=function(e,t,n,i,a,s,r,o,l){this.updateEnvUniforms(e,t);var c=Yg.get(e).getByIndex(a),h=a===Sf||a===Ef||c.isShadow,p=h?Ew.optionsContextMin:Ew.optionsContext;h?this.shaderOptBuilder.updateMinRef(p,t,this,n,a,s):this.shaderOptBuilder.updateRef(p,t,this,n,a,s),this.onUpdateShader&&(p=this.onUpdateShader(p));var d=new Tg(r,o,l),u=Og(e);u.register("standard",Ew);var m=u.getProgram("standard",p,d,this.userId);return this._dirtyShader=!1,m},n.destroy=function(){for(var t in this._assetReferences)this._assetReferences[t]._unbind();this._assetReferences=null,e.prototype.destroy.call(this)},q(t,[{key:"shader",get:function(){return null},set:function(e){}},{key:"chunks",get:function(){return this._dirtyShader=!0,this._chunks},set:function(e){this._dirtyShader=!0,this._chunks=e}}]),t}(tv);zw.TEXTURE_PARAMETERS=Iw,zw.CUBEMAP_PARAMETERS=Dw;var Vw=function(e,t){Nw[e]=t},Hw=function(e,t,n,i){Object.defineProperty(zw.prototype,e,{get:i||function(){return this["_"+e]},set:n}),Bw[e]={value:t}},Gw=function(e){var t="_"+e.name,n=e.dirtyShaderFunc||function(){return!0},i=function(e){var i=this[t];i!==e&&(this._dirtyShader=this._dirtyShader||n(i,e),this[t]=e)};Hw(e.name,(function(){return e.defaultValue}),i,e.getterFunc)},Ww=function(e){var t="_"+e.name,n=e.dirtyShaderFunc||function(){return!0},i=function(e){var i=this[t];i.equals(e)||(this._dirtyShader=this._dirtyShader||n(i,e),this[t]=i.copy(e))};Hw(e.name,(function(){return e.defaultValue.clone()}),i,e.getterFunc)},jw=function(e){return e.defaultValue&&e.defaultValue.clone?Ww(e):Gw(e)};function Xw(e,t,n,i){void 0===t&&(t="rgb"),void 0===n&&(n=!0),void 0===i&&(i=0),xw[e]=t.length||-1,jw({name:e+"Map",defaultValue:null,dirtyShaderFunc:function(e,t){return!!e!=!!t||e&&(e.type!==t.type||e.fixCubemapSeams!==t.fixCubemapSeams||e.format!==t.format)}}),jw({name:e+"MapTiling",defaultValue:new ft(1,1)}),jw({name:e+"MapOffset",defaultValue:new ft(0,0)}),jw({name:e+"MapRotation",defaultValue:0}),jw({name:e+"MapUv",defaultValue:i}),t&&(jw({name:e+"MapChannel",defaultValue:t}),n&&(jw({name:e+"VertexColor",defaultValue:!1}),jw({name:e+"VertexColorChannel",defaultValue:t})));var a=e+"MapTiling",s=e+"MapOffset",r=e+"MapRotation",o=e+"MapTransform";Vw(o,(function(e,t,n){var i=e[a],l=e[s],c=e[r];if(1===i.x&&1===i.y&&0===l.x&&0===l.y&&0===c)return null;var h=e._allocUniform(o,(function(){return[{name:"texture_"+o+"0",value:new Float32Array(3)},{name:"texture_"+o+"1",value:new Float32Array(3)}]})),p=Math.cos(c*at.DEG_TO_RAD),d=Math.sin(c*at.DEG_TO_RAD),u=h[0].value;u[0]=p*i.x,u[1]=-d*i.y,u[2]=l.x;var m=h[1].value;return m[0]=d*i.x,m[1]=p*i.y,m[2]=1-i.y-l.y,h}))}function Yw(e,t){jw({name:e,defaultValue:t,getterFunc:function(){return this._dirtyShader=!0,this["_"+e]}}),Vw(e,(function(t,n,i){var a=t._allocUniform(e,(function(){return new Float32Array(3)})),s=t[e];return t.useGammaTonemap&&i.gammaCorrection?(a[0]=Math.pow(s.r,2.2),a[1]=Math.pow(s.g,2.2),a[2]=Math.pow(s.b,2.2)):(a[0]=s.r,a[1]=s.g,a[2]=s.b),a}))}function qw(e,t,n){jw({name:e,defaultValue:t,dirtyShaderFunc:function(e,t){return(0===e||1===e)!=(0===t||1===t)}}),Vw(e,n)}function Kw(e,t){jw({name:e,defaultValue:null,dirtyShaderFunc:function(e,t){return!!e==!!t}}),Vw(e,t)}function Zw(e,t){jw({name:e,defaultValue:t})}function Qw(){Yw("ambient",new st(.7,.7,.7)),Yw("diffuse",new st(1,1,1)),Yw("specular",new st(0,0,0)),Yw("emissive",new st(0,0,0)),Yw("sheen",new st(1,1,1)),Yw("attenuation",new st(1,1,1)),qw("emissiveIntensity",1),qw("specularityFactor",1),qw("sheenGloss",0),qw("gloss",.25,(function(e,t,n){return e.shadingModel===Pm?Math.pow(2,11*e.gloss):e.gloss})),qw("heightMapFactor",1,(function(e,t,n){return.025*e.heightMapFactor})),qw("opacity",1),qw("alphaFade",1),qw("alphaTest",0),qw("bumpiness",1),qw("normalDetailMapBumpiness",1),qw("reflectivity",1),qw("occludeSpecularIntensity",1),qw("refraction",0),qw("refractionIndex",1/1.5),qw("thickness",0),qw("attenuationDistance",0),qw("metalness",1),qw("anisotropy",0),qw("clearCoat",0),qw("clearCoatGloss",1),qw("clearCoatBumpiness",1),qw("aoUvSet",0,null),qw("iridescence",0),qw("iridescenceRefractionIndex",1/1.5),qw("iridescenceThicknessMin",0),qw("iridescenceThicknessMax",0),Kw("ambientSH"),Kw("cubeMapProjectionBox",(function(e,t,n){var i=e._allocUniform("cubeMapProjectionBox",(function(){return[{name:"envBoxMin",value:new Float32Array(3)},{name:"envBoxMax",value:new Float32Array(3)}]})),a=e.cubeMapProjectionBox.getMin(),s=i[0].value;s[0]=a.x,s[1]=a.y,s[2]=a.z;var r=e.cubeMapProjectionBox.getMax(),o=i[1].value;return o[0]=r.x,o[1]=r.y,o[2]=r.z,i})),Zw("ambientTint",!1),Zw("diffuseTint",!1),Zw("specularTint",!1),Zw("specularityFactorTint",!1),Zw("emissiveTint",!1),Zw("fastTbn",!1),Zw("useMetalness",!1),Zw("useMetalnessSpecularColor",!1),Zw("useSheen",!1),Zw("enableGGXSpecular",!1),Zw("occludeDirect",!1),Zw("normalizeNormalMap",!0),Zw("conserveEnergy",!0),Zw("opacityFadesSpecular",!0),Zw("occludeSpecular",qm),Zw("shadingModel",Om),Zw("fresnelModel",Du),Zw("useDynamicRefraction",!1),Zw("cubeMapProjection",Lm),Zw("customFragmentShader",null),Zw("useFog",!0),Zw("useLighting",!0),Zw("useGammaTonemap",!0),Zw("useSkybox",!0),Zw("forceUv1",!1),Zw("pixelSnap",!1),Zw("twoSidedLighting",!1),Zw("nineSlicedMode",void 0),Zw("msdfTextAttribute",!1),Zw("useIridescence",!1),Zw("glossInvert",!1),Zw("sheenGlossInvert",!1),Zw("clearCoatGlossInvert",!1),Xw("diffuse"),Xw("specular"),Xw("emissive"),Xw("thickness","g"),Xw("specularityFactor","g"),Xw("normal",""),Xw("metalness","g"),Xw("gloss","g"),Xw("opacity","a"),Xw("refraction","g"),Xw("height","g",!1),Xw("ao","g"),Xw("light","rgb",!0,1),Xw("msdf",""),Xw("diffuseDetail","rgb",!1),Xw("normalDetail",""),Xw("aoDetail","g",!1),Xw("clearCoat","g"),Xw("clearCoatGloss","g"),Xw("clearCoatNormal",""),Xw("sheen","rgb"),Xw("sheenGloss","g"),Xw("iridescence","g"),Xw("iridescenceThickness","g"),Zw("diffuseDetailMode",Im),Zw("aoDetailMode",Im),Kw("cubeMap"),Kw("sphereMap"),Kw("envAtlas");var e=function(e){var t=this._prefilteredCubemaps;e=e||[];for(var n=!1,i=!0,a=0;a<6;++a){var s=e[a]||null;t[a]!==s&&(t[a]=s,n=!0),i=i&&!!t[a]}n&&(i?this.envAtlas=ww.generatePrefilteredAtlas(t,{target:this.envAtlas}):this.envAtlas&&(this.envAtlas.destroy(),this.envAtlas=null),this._dirtyShader=!0)},t=[null,null,null,null,null,null];Hw("prefilteredCubemaps",(function(){return t.slice()}),e,(function(){return this._prefilteredCubemaps}))}Qw(),new pt(1,1,1),new pt(40,0,0);var Jw={drawCalls:[],shaderInstances:[],isNewMaterial:[],lightMaskChanged:[],clear:function(){this.drawCalls.length=0,this.shaderInstances.length=0,this.isNewMaterial.length=0,this.lightMaskChanged.length=0}};function $w(e){for(var t=[],n=0;n<e;++n){var i=Math.sqrt(n+.5)/Math.sqrt(e);t.push(i)}return t}function eb(e){for(var t=[],n=0;n<e;n++){var i=n/e,a=Math.sqrt(1-i*i);t.push(a)}return t}var tb=function(e){function t(t){var n,i=(n=e.call(this,t)||this).device;n._forwardDrawCalls=0,n._materialSwitches=0,n._depthMapTime=0,n._forwardTime=0,n._sortTime=0;var a=i.scope;return n.fogColorId=a.resolve("fog_color"),n.fogStartId=a.resolve("fog_start"),n.fogEndId=a.resolve("fog_end"),n.fogDensityId=a.resolve("fog_density"),n.ambientId=a.resolve("light_globalAmbient"),n.skyboxIntensityId=a.resolve("skyboxIntensity"),n.cubeMapRotationMatrixId=a.resolve("cubeMapRotationMatrix"),n.pcssDiskSamplesId=a.resolve("pcssDiskSamples[0]"),n.pcssSphereSamplesId=a.resolve("pcssSphereSamples[0]"),n.lightColorId=[],n.lightDir=[],n.lightDirId=[],n.lightShadowMapId=[],n.lightShadowMatrixId=[],n.lightShadowParamsId=[],n.lightShadowIntensity=[],n.lightRadiusId=[],n.lightPos=[],n.lightPosId=[],n.lightWidth=[],n.lightWidthId=[],n.lightHeight=[],n.lightHeightId=[],n.lightInAngleId=[],n.lightOutAngleId=[],n.lightCookieId=[],n.lightCookieIntId=[],n.lightCookieMatrixId=[],n.lightCookieOffsetId=[],n.lightShadowSearchAreaId=[],n.lightCameraParamsId=[],n.shadowMatrixPaletteId=[],n.shadowCascadeDistancesId=[],n.shadowCascadeCountId=[],n.screenSizeId=a.resolve("uScreenSize"),n._screenSize=new Float32Array(4),n.fogColor=new Float32Array(3),n.ambientColor=new Float32Array(3),n.pcssDiskSamples=$w(16),n.pcssSphereSamples=eb(16),n}Z(t,e);var n=t.prototype;return n.destroy=function(){e.prototype.destroy.call(this)},n.dispatchGlobalLights=function(e){if(this.ambientColor[0]=e.ambientLight.r,this.ambientColor[1]=e.ambientLight.g,this.ambientColor[2]=e.ambientLight.b,e.gammaCorrection)for(var t=0;t<3;t++)this.ambientColor[t]=Math.pow(this.ambientColor[t],2.2);if(e.physicalUnits)for(var n=0;n<3;n++)this.ambientColor[n]*=e.ambientLuminance;this.ambientId.setValue(this.ambientColor),this.skyboxIntensityId.setValue(e.physicalUnits?e.skyboxLuminance:e.skyboxIntensity),this.cubeMapRotationMatrixId.setValue(e._skyboxRotationMat3.data)},n._resolveLight=function(e,t){var n="light"+t;this.lightColorId[t]=e.resolve(n+"_color"),this.lightDir[t]=new Float32Array(3),this.lightDirId[t]=e.resolve(n+"_direction"),this.lightShadowMapId[t]=e.resolve(n+"_shadowMap"),this.lightShadowMatrixId[t]=e.resolve(n+"_shadowMatrix"),this.lightShadowParamsId[t]=e.resolve(n+"_shadowParams"),this.lightShadowIntensity[t]=e.resolve(n+"_shadowIntensity"),this.lightShadowSearchAreaId[t]=e.resolve(n+"_shadowSearchArea"),this.lightRadiusId[t]=e.resolve(n+"_radius"),this.lightPos[t]=new Float32Array(3),this.lightPosId[t]=e.resolve(n+"_position"),this.lightWidth[t]=new Float32Array(3),this.lightWidthId[t]=e.resolve(n+"_halfWidth"),this.lightHeight[t]=new Float32Array(3),this.lightHeightId[t]=e.resolve(n+"_halfHeight"),this.lightInAngleId[t]=e.resolve(n+"_innerConeAngle"),this.lightOutAngleId[t]=e.resolve(n+"_outerConeAngle"),this.lightCookieId[t]=e.resolve(n+"_cookie"),this.lightCookieIntId[t]=e.resolve(n+"_cookieIntensity"),this.lightCookieMatrixId[t]=e.resolve(n+"_cookieMatrix"),this.lightCookieOffsetId[t]=e.resolve(n+"_cookieOffset"),this.lightCameraParamsId[t]=e.resolve(n+"_cameraParams"),this.shadowMatrixPaletteId[t]=e.resolve(n+"_shadowMatrixPalette[0]"),this.shadowCascadeDistancesId[t]=e.resolve(n+"_shadowCascadeDistances[0]"),this.shadowCascadeCountId[t]=e.resolve(n+"_shadowCascadeCount")},n.setLTCDirectionalLight=function(e,t,n,i,a){this.lightPos[t][0]=i.x-n.x*a,this.lightPos[t][1]=i.y-n.y*a,this.lightPos[t][2]=i.z-n.z*a,this.lightPosId[t].setValue(this.lightPos[t]);var s=e.transformVector(new pt(-.5,0,0));this.lightWidth[t][0]=s.x*a,this.lightWidth[t][1]=s.y*a,this.lightWidth[t][2]=s.z*a,this.lightWidthId[t].setValue(this.lightWidth[t]);var r=e.transformVector(new pt(0,0,.5));this.lightHeight[t][0]=r.x*a,this.lightHeight[t][1]=r.y*a,this.lightHeight[t][2]=r.z*a,this.lightHeightId[t].setValue(this.lightHeight[t])},n.dispatchDirectLights=function(e,t,n,i){for(var a=0,s=this.device.scope,r=0;r<e.length;r++)if(e[r].mask&n){var o=e[r],l=o._node.getWorldTransform();if(this.lightColorId[a]||this._resolveLight(s,a),this.lightColorId[a].setValue(t.gammaCorrection?o._linearFinalColor:o._finalColor),l.getY(o._direction).mulScalar(-1),o._direction.normalize(),this.lightDir[a][0]=o._direction.x,this.lightDir[a][1]=o._direction.y,this.lightDir[a][2]=o._direction.z,this.lightDirId[a].setValue(this.lightDir[a]),o.shape!==Ku&&this.setLTCDirectionalLight(l,a,o._direction,i._node.getPosition(),i.farClip),o.castShadows){var c=o.getRenderData(i,0),h=o._getUniformBiasValues(c);this.lightShadowMapId[a].setValue(c.shadowBuffer),this.lightShadowMatrixId[a].setValue(c.shadowMatrix.data),this.shadowMatrixPaletteId[a].setValue(o._shadowMatrixPalette),this.shadowCascadeDistancesId[a].setValue(o._shadowCascadeDistances),this.shadowCascadeCountId[a].setValue(o.numCascades),this.lightShadowIntensity[a].setValue(o.shadowIntensity);var p=50/c.projectionCompensation,d=o.penumbraSize/c.shadowCamera.renderTarget.width;this.lightShadowSearchAreaId[a].setValue(d*p);var u=o._shadowCameraParams;u.length=4,u[0]=c.depthRangeCompensation,u[1]=c.shadowCamera._farClip,u[2]=c.shadowCamera._nearClip,u[3]=1,this.lightCameraParamsId[a].setValue(u);var m=o._shadowRenderParams;m.length=4,m[0]=o._shadowResolution,m[1]=h.normalBias,m[2]=h.bias,m[3]=0,this.lightShadowParamsId[a].setValue(m)}a++}return a},n.setLTCPositionalLight=function(e,t){var n=e.transformVector(new pt(-.5,0,0));this.lightWidth[t][0]=n.x,this.lightWidth[t][1]=n.y,this.lightWidth[t][2]=n.z,this.lightWidthId[t].setValue(this.lightWidth[t]);var i=e.transformVector(new pt(0,0,.5));this.lightHeight[t][0]=i.x,this.lightHeight[t][1]=i.y,this.lightHeight[t][2]=i.z,this.lightHeightId[t].setValue(this.lightHeight[t])},n.dispatchOmniLight=function(e,t,n,i){var a=n._node.getWorldTransform();if(this.lightColorId[i]||this._resolveLight(t,i),this.lightRadiusId[i].setValue(n.attenuationEnd),this.lightColorId[i].setValue(e.gammaCorrection?n._linearFinalColor:n._finalColor),a.getTranslation(n._position),this.lightPos[i][0]=n._position.x,this.lightPos[i][1]=n._position.y,this.lightPos[i][2]=n._position.z,this.lightPosId[i].setValue(this.lightPos[i]),n.shape!==Ku&&this.setLTCPositionalLight(a,i),n.castShadows){var s=n.getRenderData(null,0);this.lightShadowMapId[i].setValue(s.shadowBuffer);var r=n._getUniformBiasValues(s),o=n._shadowRenderParams;o.length=4,o[0]=n._shadowResolution,o[1]=r.normalBias,o[2]=r.bias,o[3]=1/n.attenuationEnd,this.lightShadowParamsId[i].setValue(o),this.lightShadowIntensity[i].setValue(n.shadowIntensity);var l=n.penumbraSize/s.shadowCamera.renderTarget.width;this.lightShadowSearchAreaId[i].setValue(l);var c=n._shadowCameraParams;c.length=4,c[0]=s.depthRangeCompensation,c[1]=s.shadowCamera._farClip,c[2]=s.shadowCamera._nearClip,c[3]=0,this.lightCameraParamsId[i].setValue(c)}n._cookie&&(this.lightCookieId[i].setValue(n._cookie),this.lightShadowMatrixId[i].setValue(a.data),this.lightCookieIntId[i].setValue(n.cookieIntensity))},n.dispatchSpotLight=function(e,t,n,i){var a=n._node.getWorldTransform();if(this.lightColorId[i]||this._resolveLight(t,i),this.lightInAngleId[i].setValue(n._innerConeAngleCos),this.lightOutAngleId[i].setValue(n._outerConeAngleCos),this.lightRadiusId[i].setValue(n.attenuationEnd),this.lightColorId[i].setValue(e.gammaCorrection?n._linearFinalColor:n._finalColor),a.getTranslation(n._position),this.lightPos[i][0]=n._position.x,this.lightPos[i][1]=n._position.y,this.lightPos[i][2]=n._position.z,this.lightPosId[i].setValue(this.lightPos[i]),n.shape!==Ku&&this.setLTCPositionalLight(a,i),a.getY(n._direction).mulScalar(-1),n._direction.normalize(),this.lightDir[i][0]=n._direction.x,this.lightDir[i][1]=n._direction.y,this.lightDir[i][2]=n._direction.z,this.lightDirId[i].setValue(this.lightDir[i]),n.castShadows){var s=n.getRenderData(null,0);this.lightShadowMapId[i].setValue(s.shadowBuffer),this.lightShadowMatrixId[i].setValue(s.shadowMatrix.data);var r=n._getUniformBiasValues(s),o=n._shadowRenderParams;o.length=4,o[0]=n._shadowResolution,o[1]=r.normalBias,o[2]=r.bias,o[3]=1/n.attenuationEnd,this.lightShadowParamsId[i].setValue(o),this.lightShadowIntensity[i].setValue(n.shadowIntensity);var l=n.penumbraSize/s.shadowCamera.renderTarget.width,c=s.shadowCamera._fov*Math.PI/180,h=1/Math.tan(c/2);this.lightShadowSearchAreaId[i].setValue(l*h);var p=n._shadowCameraParams;p.length=4,p[0]=s.depthRangeCompensation,p[1]=s.shadowCamera._farClip,p[2]=s.shadowCamera._nearClip,p[3]=0,this.lightCameraParamsId[i].setValue(p)}if(n._cookie){if(!n.castShadows){var d=yy.evalSpotCookieMatrix(n);this.lightShadowMatrixId[i].setValue(d.data)}this.lightCookieId[i].setValue(n._cookie),this.lightCookieIntId[i].setValue(n.cookieIntensity),n._cookieTransform&&(n._cookieTransformUniform[0]=n._cookieTransform.x,n._cookieTransformUniform[1]=n._cookieTransform.y,n._cookieTransformUniform[2]=n._cookieTransform.z,n._cookieTransformUniform[3]=n._cookieTransform.w,this.lightCookieMatrixId[i].setValue(n._cookieTransformUniform),n._cookieOffsetUniform[0]=n._cookieOffset.x,n._cookieOffsetUniform[1]=n._cookieOffset.y,this.lightCookieOffsetId[i].setValue(n._cookieOffsetUniform))}},n.dispatchLocalLights=function(e,t,n,i){for(var a=i,s=this.device.scope,r=e[ju],o=r.length,l=0;l<o;l++){var c=r[l];c.mask&n&&(this.dispatchOmniLight(t,s,c,a),a++)}for(var h=e[Yu],p=h.length,d=0;d<p;d++){var u=h[d];u.mask&n&&(this.dispatchSpotLight(t,s,u,a),a++)}},n.renderForwardPrepareMaterials=function(e,t,n,i,a){var s,r=function(e,t,n,i){Jw.drawCalls.push(e),Jw.shaderInstances.push(t),Jw.isNewMaterial.push(n),Jw.lightMaskChanged.push(i)};Jw.clear();for(var o,l,c=this.device,h=this.scene,p=h.clusteredLightingEnabled,d=null!=(s=null==i?void 0:i.getLightHash(p))?s:0,u=null,m=t.length,f=0;f<m;f++){var g=t[f];g.ensureMaterial(c);var v=g.material,y=g._shaderDefs,_=g.mask;v&&v===u&&y!==o&&(u=null),v!==u&&(this._materialSwitches++,v._scene=h,v.dirty&&(v.updateUniforms(c,h),v.dirty=!1));var w=g.getShaderInstance(a,d,h,this.viewUniformFormat,this.viewBindGroupFormat,n);r(g,w,v!==u,!u||_!==l),u=v,o=y,l=_}return null==c.endShaderBatch||c.endShaderBatch(),Jw},n.renderForwardInternal=function(e,t,n,i,a,s){for(var r=this.device,o=this.scene,l=1<<i,c=s?-1:1,h=this.scene.clusteredLightingEnabled,p=t.drawCalls.length,d=0;d<p;d++){var u,m,f=t.drawCalls[d],g=t.isNewMaterial[d],v=t.lightMaskChanged[d],y=t.shaderInstances[d],_=f.material;f._shaderDefs;var w=f.mask;if(g){var b=y.shader;if(!b.failed&&r.setShader(b),b.failed)break;if(_.setParameters(r),v){var x=this.dispatchDirectLights(n[Wu],o,w,e);h||this.dispatchLocalLights(n,o,w,x)}this.alphaTestId.setValue(_.alphaTest),r.setBlendState(_.blendState),r.setDepthState(_.depthState),r.setAlphaToCoverage(_.alphaToCoverage),_.depthBias||_.slopeDepthBias?(r.setDepthBias(!0),r.setDepthBiasValues(_.depthBias,_.slopeDepthBias)):r.setDepthBias(!1)}this.setupCullMode(e._cullFaces,c,f);var C=null!=(u=f.stencilFront)?u:_.stencilFront,S=null!=(m=f.stencilBack)?m:_.stencilBack;r.setStencilState(C,S);var E=f.mesh;f.setParameters(r,l),this.setVertexBuffers(r,E),this.setMorphing(r,f.morphInstance),this.setSkinning(r,f),this.setupMeshUniformBuffers(y,f);var T=f.renderStyle;if(r.setIndexBuffer(E.indexBuffer[T]),null==a||a(f,d),e.xr&&e.xr.session&&e.xr.views.length)for(var A=e.xr.views,L=0;L<A.length;L++){var M=A[L];r.setViewport(M.viewport.x,M.viewport.y,M.viewport.z,M.viewport.w),this.projId.setValue(M.projMat.data),this.projSkyboxId.setValue(M.projMat.data),this.viewId.setValue(M.viewOffMat.data),this.viewInvId.setValue(M.viewInvOffMat.data),this.viewId3.setValue(M.viewMat3.data),this.viewProjId.setValue(M.projViewOffMat.data),this.viewPosId.setValue(M.position),0===L?this.drawInstance(r,f,E,T,!0):this.drawInstance2(r,f,E,T),this._forwardDrawCalls++}else this.drawInstance(r,f,E,T,!0),this._forwardDrawCalls++;d<p-1&&!t.isNewMaterial[d+1]&&_.setParameters(r,f.parameters)}},n.renderForward=function(e,t,n,i,a,s,r){var o=this.renderForwardPrepareMaterials(e,t,n,s,i);this.renderForwardInternal(e,o,n,i,a,r),Jw.clear()},n.setSceneConstants=function(){var e=this.scene;if(this.dispatchGlobalLights(e),e.fog!==Mu){if(this.fogColor[0]=e.fogColor.r,this.fogColor[1]=e.fogColor.g,this.fogColor[2]=e.fogColor.b,e.gammaCorrection)for(var t=0;t<3;t++)this.fogColor[t]=Math.pow(this.fogColor[t],2.2);this.fogColorId.setValue(this.fogColor),e.fog===Pu?(this.fogStartId.setValue(e.fogStart),this.fogEndId.setValue(e.fogEnd)):this.fogDensityId.setValue(e.fogDensity)}var n=this.device;this._screenSize[0]=n.width,this._screenSize[1]=n.height,this._screenSize[2]=1/n.width,this._screenSize[3]=1/n.height,this.screenSizeId.setValue(this._screenSize),this.pcssDiskSamplesId.setValue(this.pcssDiskSamples),this.pcssSphereSamplesId.setValue(this.pcssSphereSamples)},n.buildFrameGraph=function(e,t){var n=this,i=this.scene.clusteredLightingEnabled,a=this.device.isWebGL1;if(e.reset(),this.update(t),i){if(this.scene.lighting.cookiesEnabled){var s=this.cookiesRenderPass;s.update(this.lights),e.addRenderPass(s)}var r=new Eg(this.device);r.requiresCubemaps=!1,e.addRenderPass(r),this.scene.lighting.shadowsEnabled&&this._shadowRendererLocal.prepareClusteredRenderPass(r,this.localLights),r._after=function(){n.updateClusters(t)}}else this._shadowRendererLocal.buildNonClusteredRenderPasses(e,this.localLights);for(var o=0,l=!0,c=null,h=t._renderActions,p=function(){var i=h[d],s=t.layerList[i.layerIndex],r=i.camera,p=r.camera.renderPassDepthGrab;if(p&&a&&i.firstCameraUse&&(p.update(n.scene),e.addRenderPass(p)),!i.isLayerEnabled(t))return 0;var u=s.id===zu;if(a&&u&&!r.renderSceneColorMap)return 0;var m=u&&(r.renderSceneColorMap||r.renderSceneDepthMap);i.hasDirectionalShadowLights&&r&&n._shadowRendererDirectional.buildFrameGraph(e,i.directionalLights,r),l&&(l=!1,o=d,c=i.renderTarget);for(var f=d+1;h[f]&&!h[f].isLayerEnabled(t);)f++;var g=h[f],v=!!g&&t.layerList[g.layerIndex].id===zu&&(r.renderSceneColorMap||r.renderSceneDepthMap)&&!a;if(!g||g.renderTarget!==c||g.hasDirectionalShadowLights||v||m){if(u&&o===d||n.addMainRenderPass(e,t,c,o,d),u&&(r.renderSceneColorMap&&e.addRenderPass(r.camera.renderPassColorGrab),r.renderSceneDepthMap&&!a&&e.addRenderPass(r.camera.renderPassDepthGrab)),i.triggerPostprocess&&null!=r&&r.onPostprocessing){var y=new Eg(n.device,(function(){n.renderPassPostprocessing(i)}));y.requiresCubemaps=!1,e.addRenderPass(y)}l=!0}},d=o;d<h.length;d++)p()},n.addMainRenderPass=function(e,t,n,i,a){var s=this,r={start:i,end:a},o=new Eg(this.device,(function(){s.renderPassRenderActions(t,r)})),l=t._renderActions,c=l[i],h=l[a],p=c.camera;p&&(c.firstCameraUse&&p.onPreRender&&(o._before=function(){p.onPreRender()}),h.lastCameraUse&&p.onPostRender&&(o._after=function(){p.onPostRender()})),o.init(n),o.fullSizeClearRect=p.camera.fullSizeClearRect,o.fullSizeClearRect&&(c.clearColor&&o.setClearColor(p.camera.clearColor),c.clearDepth&&o.setClearDepth(p.camera.clearDepth),c.clearStencil&&o.setClearStencil(p.camera.clearStencil)),e.addRenderPass(o)},n.update=function(e){this.frameUpdate(),this.shadowRenderer.frameUpdate();var t=this.scene.clusteredLightingEnabled;this.scene._updateSky(this.device),this.updateLayerComposition(e,t),this.collectLights(e),this.beginFrame(e),this.setSceneConstants(),this.cullComposition(e),this.gpuUpdate(this.processingMeshInstances)},n.renderPassPostprocessing=function(e){e.camera.onPostprocessing()},n.renderPassRenderActions=function(e,t){for(var n=e._renderActions,i=t.start;i<=t.end;i++)this.renderRenderAction(e,n[i],i===t.start)},n.renderRenderAction=function(e,t,n){var i=this.scene.clusteredLightingEnabled,a=this.device,s=t.layerIndex,r=e.layerList[s],o=e.subLayerList[s],l=t.camera,c=e.camerasMap.get(l);if(t.isLayerEnabled(e)){if(!o&&r.onPreRenderOpaque?r.onPreRenderOpaque(c):o&&r.onPreRenderTransparent&&r.onPreRenderTransparent(c),r._preRenderCalledForCameras&1<<c||(r.onPreRender&&r.onPreRender(c),r._preRenderCalledForCameras|=1<<c),l){var h,p,d;this.setupViewport(l.camera,t.renderTarget),n&&l.camera.fullSizeClearRect||this.clear(l.camera,t.clearColor,t.clearDepth,t.clearStencil),r.sortVisible(l.camera,o);var u=r.getCulledInstances(l.camera),m=o?u.transparent:u.opaque;this.scene.immediate.onPreRenderLayer(r,m,o),r.requiresLightCube&&(this.lightCube.update(this.scene.ambientLight,r._lights),this.constantLightCube.setValue(this.lightCube.colors)),i&&t.lightClusters&&(t.lightClusters.activate(),this.clustersDebugRendered||this.scene.lighting.debugLayer!==r.id||(this.clustersDebugRendered=!0)),this.scene._activeCamera=l.camera;var f=this.setCameraUniforms(l.camera,t.renderTarget);a.supportsUniformBuffers&&this.setupViewUniformBuffers(t.viewBindGroups,this.viewUniformFormat,this.viewBindGroupFormat,f);var g=!!(l.camera._flipFaces^(null==t||null==(h=t.renderTarget)?void 0:h.flipY)),v=null!=(p=null==(d=l.camera.shaderPassInfo)?void 0:d.index)?p:r.shaderPass,y=this._forwardDrawCalls;this.renderForward(l.camera,m,r.splitLights,v,r.onDrawCall,r,g),r._forwardDrawCalls+=this._forwardDrawCalls-y,a.setBlendState(yr.NOBLEND),a.setStencilState(null,null),a.setAlphaToCoverage(!1),a.setDepthBias(!1)}!o&&r.onPostRenderOpaque?r.onPostRenderOpaque(c):o&&r.onPostRenderTransparent&&r.onPostRenderTransparent(c),!r.onPostRender||r._postRenderCalledForCameras&1<<c||(r._postRenderCounter&=~(o?2:1),0===r._postRenderCounter&&(r.onPostRender(c),r._postRenderCalledForCameras|=1<<c,r._postRenderCounter=r._postRenderCounterMax))}},t}(H_);function nb(e,t){return e.drawOrder-t.drawOrder}function ib(e,t){var n=e._key[vf],i=t._key[vf];return n===i&&e.mesh&&t.mesh?t.mesh.id-e.mesh.id:i-n}function ab(e,t){return t.zdist-e.zdist}function sb(e,t){return e.zdist-t.zdist}var rb,ob=[null,nb,ib,ab,sb],lb=0,cb=[],hb=new Set,pb=function(){this.opaque=[],this.transparent=[]},db=function(){function e(e){var t,n,i,a;void 0===e&&(e={}),this.meshInstances=[],this.meshInstancesSet=new Set,this.shadowCasters=[],this.shadowCastersSet=new Set,this._visibleInstances=new WeakMap,this._lights=[],this._lightsSet=new Set,this._clusteredLightsSet=new Set,this._splitLights=[[],[],[]],this._splitLightsDirty=!0,this.requiresLightCube=!1,this.cameras=[],this.camerasSet=new Set,this._dirtyCameras=!1,void 0!==e.id?(this.id=e.id,lb=Math.max(this.id+1,lb)):this.id=lb++,this.name=e.name,this._enabled=null==(t=e.enabled)||t,this._refCounter=this._enabled?1:0,this.opaqueSortMode=null!=(n=e.opaqueSortMode)?n:qf,this.transparentSortMode=null!=(i=e.transparentSortMode)?i:Kf,e.renderTarget&&(this.renderTarget=e.renderTarget),this.shaderPass=null!=(a=e.shaderPass)?a:xf,this._clearColorBuffer=!!e.clearColorBuffer,this._clearDepthBuffer=!!e.clearDepthBuffer,this._clearStencilBuffer=!!e.clearStencilBuffer,this.onPreCull=e.onPreCull,this.onPreRender=e.onPreRender,this.onPreRenderOpaque=e.onPreRenderOpaque,this.onPreRenderTransparent=e.onPreRenderTransparent,this.onPostCull=e.onPostCull,this.onPostRender=e.onPostRender,this.onPostRenderOpaque=e.onPostRenderOpaque,this.onPostRenderTransparent=e.onPostRenderTransparent,this.onDrawCall=e.onDrawCall,this.onEnable=e.onEnable,this.onDisable=e.onDisable,this._enabled&&this.onEnable&&this.onEnable(),this.layerReference=e.layerReference,this.customSortCallback=null,this.customCalculateSortValues=null,this._lightHash=0,this._lightHashDirty=!1,this._lightIdHash=0,this._lightIdHashDirty=!1,this._shaderVersion=-1}var t=e.prototype;return t.incrementCounter=function(){0===this._refCounter&&(this._enabled=!0,this.onEnable&&this.onEnable()),this._refCounter++},t.decrementCounter=function(){if(1===this._refCounter)this._enabled=!1,this.onDisable&&this.onDisable();else if(0===this._refCounter)return;this._refCounter--},t.addMeshInstances=function(e,t){for(var n=this.meshInstances,i=this.meshInstancesSet,a=0;a<e.length;a++){var s=e[a];i.has(s)||(n.push(s),i.add(s),hb.add(s.material))}if(t||this.addShadowCasters(e),hb.size>0){var r=this._shaderVersion;hb.forEach((function(e){r>=0&&e._shaderVersion!==r&&(e.getShaderVariant!==tv.prototype.getShaderVariant&&e.clearVariants(),e._shaderVersion=r)})),hb.clear()}},t.removeMeshInstances=function(e,t){for(var n=this.meshInstances,i=this.meshInstancesSet,a=0;a<e.length;a++){var s=e[a];if(i.has(s)){i.delete(s);var r=n.indexOf(s);r>=0&&n.splice(r,1)}}t||this.removeShadowCasters(e)},t.addShadowCasters=function(e){for(var t=this.shadowCasters,n=this.shadowCastersSet,i=0;i<e.length;i++){var a=e[i];a.castShadow&&!n.has(a)&&(n.add(a),t.push(a))}},t.removeShadowCasters=function(e){for(var t=this.shadowCasters,n=this.shadowCastersSet,i=0;i<e.length;i++){var a=e[i];if(n.has(a)){n.delete(a);var s=t.indexOf(a);s>=0&&t.splice(s,1)}}},t.clearMeshInstances=function(e){void 0===e&&(e=!1),this.meshInstances.length=0,this.meshInstancesSet.clear(),e||(this.shadowCasters.length=0,this.shadowCastersSet.clear())},t.markLightsDirty=function(){this._lightHashDirty=!0,this._lightIdHashDirty=!0,this._splitLightsDirty=!0},t.addLight=function(e){var t=e.light;this._lightsSet.has(t)||(this._lightsSet.add(t),this._lights.push(t),this.markLightsDirty()),t.type!==Wu&&this._clusteredLightsSet.add(t)},t.removeLight=function(e){var t=e.light;this._lightsSet.has(t)&&(this._lightsSet.delete(t),this._lights.splice(this._lights.indexOf(t),1),this.markLightsDirty()),t.type!==Wu&&this._clusteredLightsSet.delete(t)},t.clearLights=function(){var e=this;this._lightsSet.forEach((function(t){return t.removeLayer(e)})),this._lightsSet.clear(),this._clusteredLightsSet.clear(),this._lights.length=0,this.markLightsDirty()},t.evaluateLightHash=function(e,t,n){for(var i=0,a=this._lights,s=0;s<a.length;s++){var r=a[s].type!==Wu;(e&&r||t&&!r)&&cb.push(n?a[s].id:a[s].key)}return cb.length>0&&(cb.sort(),i=Or(cb),cb.length=0),i},t.getLightHash=function(e){return this._lightHashDirty&&(this._lightHashDirty=!1,this._lightHash=this.evaluateLightHash(!e,!0,!1)),this._lightHash},t.getLightIdHash=function(){return this._lightIdHashDirty&&(this._lightIdHashDirty=!1,this._lightIdHash=this.evaluateLightHash(!0,!1,!0)),this._lightIdHash},t.addCamera=function(e){this.camerasSet.has(e.camera)||(this.camerasSet.add(e.camera),this.cameras.push(e),this._dirtyCameras=!0)},t.removeCamera=function(e){if(this.camerasSet.has(e.camera)){this.camerasSet.delete(e.camera);var t=this.cameras.indexOf(e);this.cameras.splice(t,1),this._dirtyCameras=!0}},t.clearCameras=function(){this.cameras.length=0,this.camerasSet.clear(),this._dirtyCameras=!0},t._calculateSortDistances=function(e,t,n,i){for(var a=0;a<t;a++){var s=e[a];if(!(s.layer<=Bu))if(s.calculateSortDistance)s.zdist=s.calculateSortDistance(s,n,i);else{var r=s.aabb.center,o=r.x-n.x,l=r.y-n.y,c=r.z-n.z;s.zdist=o*i.x+l*i.y+c*i.z}}},t.getCulledInstances=function(e){var t=this._visibleInstances.get(e);return t||(t=new pb,this._visibleInstances.set(e,t)),t},t.sortVisible=function(e,t){var n=t?this.transparentSortMode:this.opaqueSortMode;if(n!==Xf){var i=this.getCulledInstances(e),a=t?i.transparent:i.opaque,s=e.node;if(n===Qf){var r=s.getPosition(),o=s.forward;this.customCalculateSortValues&&this.customCalculateSortValues(a,a.length,r,o),this.customSortCallback&&a.sort(this.customSortCallback)}else{if(n===Kf||n===Zf){var l=s.getPosition(),c=s.forward;this._calculateSortDistances(a,a.length,l,c)}a.sort(ob[n])}}},q(e,[{key:"enabled",get:function(){return this._enabled},set:function(e){e!==this._enabled&&(this._enabled=e,e?(this.incrementCounter(),this.onEnable&&this.onEnable()):(this.decrementCounter(),this.onDisable&&this.onDisable()))}},{key:"clearColorBuffer",get:function(){return this._clearColorBuffer},set:function(e){this._clearColorBuffer=e,this._dirtyCameras=!0}},{key:"clearDepthBuffer",get:function(){return this._clearDepthBuffer},set:function(e){this._clearDepthBuffer=e,this._dirtyCameras=!0}},{key:"clearStencilBuffer",get:function(){return this._clearStencilBuffer},set:function(e){this._clearStencilBuffer=e,this._dirtyCameras=!0}},{key:"hasClusteredLights",get:function(){return this._clusteredLightsSet.size>0}},{key:"clusteredLightsSet",get:function(){return this._clusteredLightsSet}},{key:"splitLights",get:function(){if(this._splitLightsDirty){this._splitLightsDirty=!1;for(var e=this._splitLights,t=0;t<e.length;t++)e[t].length=0;for(var n=this._lights,i=0;i<n.length;i++){var a=n[i];a.enabled&&e[a._type].push(a)}for(var s=0;s<e.length;s++)e[s].sort((function(e,t){return e.key-t.key}))}return this._splitLights}}]),e}(),ub=function(e,t){return e.priority-t.priority},mb=function(e){return e.sort(ub)},fb=function(){function e(){this.layerIndex=0,this.layer=null,this.camera=null,this.renderTarget=null,this.lightClusters=null,this.clearColor=!1,this.clearDepth=!1,this.clearStencil=!1,this.triggerPostprocess=!1,this.firstCameraUse=!1,this.lastCameraUse=!1,this.directionalLights=[],this.viewBindGroups=[]}var t=e.prototype;return t.destroy=function(){this.viewBindGroups.forEach((function(e){e.defaultUniformBuffer.destroy(),e.destroy()})),this.viewBindGroups.length=0},t.isLayerEnabled=function(e){return e.layerList[this.layerIndex].enabled&&e.subLayerEnabled[this.layerIndex]},q(e,[{key:"hasDirectionalShadowLights",get:function(){return this.directionalLights.length>0}}]),e}(),gb=function(e){function t(t){var n;return void 0===t&&(t="Untitled"),(n=e.call(this)||this).layerList=[],n.layerIdMap=new Map,n.layerNameMap=new Map,n.subLayerList=[],n.subLayerEnabled=[],n.cameras=[],n.camerasMap=new Map,n._renderActions=[],n.name=t,n._opaqueOrder={},n._transparentOrder={},n._dirtyCameras=!1,n}Z(t,e);var n=t.prototype;return n.destroy=function(){this._renderActions.forEach((function(e){return e.destroy()})),this._renderActions=null},n._update=function(){var e=this.layerList.length;if(!this._dirtyCameras)for(var t=0;t<e;t++)if(this.layerList[t]._dirtyCameras){this._dirtyCameras=!0;break}if(this._dirtyCameras){this._dirtyCameras=!1,this.cameras.length=0;for(var n=0;n<e;n++){var i=this.layerList[n];i._dirtyCameras=!1;for(var a=0;a<i.cameras.length;a++){var s=i.cameras[a];this.cameras.indexOf(s)<0&&this.cameras.push(s)}}this.cameras.length>1&&mb(this.cameras),this.camerasMap.clear();for(var r=0;r<this.cameras.length;r++)this.camerasMap.set(this.cameras[r],r);for(var o=[],l=0,c=0;c<this.cameras.length;c++){var h=this.cameras[c];o.length=0;for(var p=!0,d=l,u=null,m=!1,f=0;f<e;f++){var g=this.layerList[f],v=this.subLayerEnabled[f];g&&v&&g.cameras.length>0&&h.layers.indexOf(g.id)>=0&&(o.push(g),m||g.id!==h.disablePostEffectsLayer||(m=!0,u&&(u.triggerPostprocess=!0)),u=this.addRenderAction(this._renderActions,l,g,f,h,p,m),l++,p=!1)}d<l&&(u.lastCameraUse=!0),!m&&u&&(u.triggerPostprocess=!0),h.renderTarget&&h.postEffectsEnabled&&this.propagateRenderTarget(d-1,h)}for(var y=l;y<this._renderActions.length;y++)this._renderActions[y].destroy();this._renderActions.length=l,this._logRenderActions()}},n.addRenderAction=function(e,t,n,i,a,s,r){var o=e[t];o||(o=e[t]=new fb);var l=n.renderTarget;a&&a.renderTarget&&n.id!==zu&&(l=a.renderTarget);for(var c=!1,h=t-1;h>=0;h--)if(e[h].camera===a&&e[h].renderTarget===l){c=!0;break}var p=s||!c,d=!!p&&a.clearColorBuffer,u=!!p&&a.clearDepthBuffer,m=!!p&&a.clearStencilBuffer;return d||(d=n.clearColorBuffer),u||(u=n.clearDepthBuffer),m||(m=n.clearStencilBuffer),r&&a.postEffectsEnabled&&(l=null),o.triggerPostprocess=!1,o.layerIndex=i,o.layer=n,o.camera=a,o.renderTarget=l,o.clearColor=d,o.clearDepth=u,o.clearStencil=m,o.firstCameraUse=s,o.lastCameraUse=!1,o},n.propagateRenderTarget=function(e,t){for(var n=e;n>=0;n--){var i=this._renderActions[n],a=this.layerList[i.layerIndex];if(i.renderTarget&&a.id!==zu)break;if(a.id!==zu){var s=null==i?void 0:i.camera.camera;if(s&&(!t.camera.rect.equals(s.rect)||!t.camera.scissorRect.equals(s.scissorRect)))break;i.renderTarget=t.renderTarget}}},n._logRenderActions=function(){},n._isLayerAdded=function(e){return this.layerIdMap.get(e.id)===e},n._isSublayerAdded=function(e,t){for(var n=0;n<this.layerList.length;n++)if(this.layerList[n]===e&&this.subLayerList[n]===t)return!0;return!1},n.push=function(e){this._isLayerAdded(e)||(this.layerList.push(e),this.layerList.push(e),this._opaqueOrder[e.id]=this.subLayerList.push(!1)-1,this._transparentOrder[e.id]=this.subLayerList.push(!0)-1,this.subLayerEnabled.push(!0),this.subLayerEnabled.push(!0),this._updateLayerMaps(),this._dirtyCameras=!0,this.fire("add",e))},n.insert=function(e,t){if(!this._isLayerAdded(e)){this.layerList.splice(t,0,e,e),this.subLayerList.splice(t,0,!1,!0);var n=this.layerList.length;this._updateOpaqueOrder(t,n-1),this._updateTransparentOrder(t,n-1),this.subLayerEnabled.splice(t,0,!0,!0),this._updateLayerMaps(),this._dirtyCameras=!0,this.fire("add",e)}},n.remove=function(e){var t=this.layerList.indexOf(e);for(delete this._opaqueOrder[t],delete this._transparentOrder[t];t>=0;)this.layerList.splice(t,1),this.subLayerList.splice(t,1),this.subLayerEnabled.splice(t,1),t=this.layerList.indexOf(e),this._dirtyCameras=!0,this.fire("remove",e);var n=this.layerList.length;this._updateOpaqueOrder(0,n-1),this._updateTransparentOrder(0,n-1),this._updateLayerMaps()},n.pushOpaque=function(e){this._isSublayerAdded(e,!1)||(this.layerList.push(e),this._opaqueOrder[e.id]=this.subLayerList.push(!1)-1,this.subLayerEnabled.push(!0),this._updateLayerMaps(),this._dirtyCameras=!0,this.fire("add",e))},n.insertOpaque=function(e,t){if(!this._isSublayerAdded(e,!1)){this.layerList.splice(t,0,e),this.subLayerList.splice(t,0,!1);var n=this.subLayerList.length;this._updateOpaqueOrder(t,n-1),this.subLayerEnabled.splice(t,0,!0),this._updateLayerMaps(),this._dirtyCameras=!0,this.fire("add",e)}},n.removeOpaque=function(e){for(var t=0,n=this.layerList.length;t<n;t++)if(this.layerList[t]===e&&!this.subLayerList[t]){this.layerList.splice(t,1),this.subLayerList.splice(t,1),n--,this._updateOpaqueOrder(t,n-1),this.subLayerEnabled.splice(t,1),this._dirtyCameras=!0,this.layerList.indexOf(e)<0&&this.fire("remove",e);break}this._updateLayerMaps()},n.pushTransparent=function(e){this._isSublayerAdded(e,!0)||(this.layerList.push(e),this._transparentOrder[e.id]=this.subLayerList.push(!0)-1,this.subLayerEnabled.push(!0),this._updateLayerMaps(),this._dirtyCameras=!0,this.fire("add",e))},n.insertTransparent=function(e,t){if(!this._isSublayerAdded(e,!0)){this.layerList.splice(t,0,e),this.subLayerList.splice(t,0,!0);var n=this.subLayerList.length;this._updateTransparentOrder(t,n-1),this.subLayerEnabled.splice(t,0,!0),this._updateLayerMaps(),this._dirtyCameras=!0,this.fire("add",e)}},n.removeTransparent=function(e){for(var t=0,n=this.layerList.length;t<n;t++)if(this.layerList[t]===e&&this.subLayerList[t]){this.layerList.splice(t,1),this.subLayerList.splice(t,1),n--,this._updateTransparentOrder(t,n-1),this.subLayerEnabled.splice(t,1),this._dirtyCameras=!0,this.layerList.indexOf(e)<0&&this.fire("remove",e);break}this._updateLayerMaps()},n._getSublayerIndex=function(e,t){var n=this.layerList.indexOf(e);if(n<0)return-1;if(this.subLayerList[n]!==t){if((n=this.layerList.indexOf(e,n+1))<0)return-1;if(this.subLayerList[n]!==t)return-1}return n},n.getOpaqueIndex=function(e){return this._getSublayerIndex(e,!1)},n.getTransparentIndex=function(e){return this._getSublayerIndex(e,!0)},n._updateLayerMaps=function(){this.layerIdMap.clear(),this.layerNameMap.clear();for(var e=0;e<this.layerList.length;e++){var t=this.layerList[e];this.layerIdMap.set(t.id,t),this.layerNameMap.set(t.name,t)}},n.getLayerById=function(e){var t;return null!=(t=this.layerIdMap.get(e))?t:null},n.getLayerByName=function(e){var t;return null!=(t=this.layerNameMap.get(e))?t:null},n._updateOpaqueOrder=function(e,t){for(var n=e;n<=t;n++)!1===this.subLayerList[n]&&(this._opaqueOrder[this.layerList[n].id]=n)},n._updateTransparentOrder=function(e,t){for(var n=e;n<=t;n++)!0===this.subLayerList[n]&&(this._transparentOrder[this.layerList[n].id]=n)},n._sortLayersDescending=function(e,t,n){for(var i=-1,a=-1,s=0,r=e.length;s<r;s++){var o=e[s];n.hasOwnProperty(o)&&(i=Math.max(i,n[o]))}for(var l=0,c=t.length;l<c;l++){var h=t[l];n.hasOwnProperty(h)&&(a=Math.max(a,n[h]))}return-1===i&&-1!==a?1:-1===a&&-1!==i?-1:a-i},n.sortTransparentLayers=function(e,t){return this._sortLayersDescending(e,t,this._transparentOrder)},n.sortOpaqueLayers=function(e,t){return this._sortLayersDescending(e,t,this._opaqueOrder)},t}(re),vb=new pt,yb={bias:0,normalBias:0},_b={r:0,g:1,b:2,a:3},wb={directional:Wu,omni:ju,point:ju,spot:Yu},bb=[[new vt(0,0,1,1)],[new vt(0,0,.5,.5),new vt(0,.5,.5,.5)],[new vt(0,0,.5,.5),new vt(0,.5,.5,.5),new vt(.5,0,.5,.5)],[new vt(0,0,.5,.5),new vt(0,.5,.5,.5),new vt(.5,0,.5,.5),new vt(.5,.5,.5,.5)]],xb=0,Cb=function(){function e(e,t,n,i){this.light=i,this.camera=t,this.shadowCamera=f_.createShadowCamera(e,i._shadowType,i._type,n),this.shadowMatrix=new St,this.shadowViewport=new vt(0,0,1,1),this.shadowScissor=new vt(0,0,1,1),this.depthRangeCompensation=0,this.projectionCompensation=0,this.face=n,this.visibleCasters=[],this.viewBindGroups=[]}return e.prototype.destroy=function(){this.viewBindGroups.forEach((function(e){e.defaultUniformBuffer.destroy(),e.destroy()})),this.viewBindGroups.length=0},q(e,[{key:"shadowBuffer",get:function(){var e=this.shadowCamera.renderTarget;if(e){var t=this.light;return t._type===ju?e.colorBuffer:t._isPcf&&t.device.supportsDepthShadow?e.depthBuffer:e.colorBuffer}return null}}]),e}(),Sb=function(){function e(e){this.layers=new Set,this.device=e,this.id=xb++,this._type=Wu,this._color=new st(.8,.8,.8),this._intensity=1,this._affectSpecularity=!0,this._luminance=0,this._castShadows=!1,this._enabled=!1,this._mask=_f,this.isStatic=!1,this.key=0,this.bakeDir=!0,this.bakeNumSamples=1,this.bakeArea=0,this.attenuationStart=10,this.attenuationEnd=10,this._falloffMode=$u,this._shadowType=tm,this._vsmBlurSize=11,this.vsmBlurMode=pm,this.vsmBias=.0025,this._cookie=null,this.cookieIntensity=1,this._cookieFalloff=!0,this._cookieChannel="rgb",this._cookieTransform=null,this._cookieTransformUniform=new Float32Array(4),this._cookieOffset=null,this._cookieOffsetUniform=new Float32Array(2),this._cookieTransformSet=!1,this._cookieOffsetSet=!1,this._innerConeAngle=40,this._outerConeAngle=45,this.cascades=null,this._shadowMatrixPalette=null,this._shadowCascadeDistances=null,this.numCascades=1,this.cascadeDistribution=.5,this._shape=Ku,this._finalColor=new Float32Array([.8,.8,.8]);var t=Math.pow(this._finalColor[0],2.2);this._linearFinalColor=new Float32Array([t,t,t]),this._position=new pt(0,0,0),this._direction=new pt(0,0,0),this._innerConeAngleCos=Math.cos(this._innerConeAngle*Math.PI/180),this._updateOuterAngle(this._outerConeAngle),this._usePhysicalUnits=void 0,this._shadowMap=null,this._shadowRenderParams=[],this._shadowCameraParams=[],this.shadowDistance=40,this._shadowResolution=1024,this.shadowBias=-5e-4,this.shadowIntensity=1,this._normalOffsetBias=0,this.shadowUpdateMode=gf,this.shadowUpdateOverrides=null,this._penumbraSize=1,this._isVsm=!1,this._isPcf=!0,this._cookieMatrix=null,this._atlasViewport=null,this.atlasViewportAllocated=!1,this.atlasVersion=0,this.atlasSlotIndex=0,this.atlasSlotUpdated=!1,this._node=null,this._renderData=[],this.visibleThisFrame=!1,this.maxScreenSize=0}var t=e.prototype;return t.destroy=function(){this._destroyShadowMap(),this.releaseRenderData(),this._renderData=null},t.releaseRenderData=function(){if(this._renderData){for(var e=0;e<this._renderData.length;e++)this._renderData[e].destroy();this._renderData.length=0}},t.addLayer=function(e){this.layers.add(e)},t.removeLayer=function(e){this.layers.delete(e)},t._updateOuterAngle=function(e){var t=e*Math.PI/180;this._outerConeAngleCos=Math.cos(t),this._outerConeAngleSin=Math.sin(t)},t.beginFrame=function(){this.visibleThisFrame=this._type===Wu&&this._enabled,this.maxScreenSize=0,this.atlasViewportAllocated=!1,this.atlasSlotUpdated=!1},t._destroyShadowMap=function(){if(this.releaseRenderData(),this._shadowMap&&(this._shadowMap.cached||this._shadowMap.destroy(),this._shadowMap=null),this.shadowUpdateMode===mf&&(this.shadowUpdateMode=ff),this.shadowUpdateOverrides)for(var e=0;e<this.shadowUpdateOverrides.length;e++)this.shadowUpdateOverrides[e]===mf&&(this.shadowUpdateOverrides[e]=ff)},t.getRenderData=function(e,t){for(var n=0;n<this._renderData.length;n++){var i=this._renderData[n];if(i.camera===e&&i.face===t)return i}var a=new Cb(this.device,e,t,this);return this._renderData.push(a),a},t.clone=function(){var t=new e(this.device);return t.type=this._type,t.setColor(this._color),t.intensity=this._intensity,t.affectSpecularity=this._affectSpecularity,t.luminance=this._luminance,t.castShadows=this.castShadows,t._enabled=this._enabled,t.attenuationStart=this.attenuationStart,t.attenuationEnd=this.attenuationEnd,t.falloffMode=this._falloffMode,t.shadowType=this._shadowType,t.vsmBlurSize=this._vsmBlurSize,t.vsmBlurMode=this.vsmBlurMode,t.vsmBias=this.vsmBias,t.penumbraSize=this.penumbraSize,t.shadowUpdateMode=this.shadowUpdateMode,t.mask=this.mask,this.shadowUpdateOverrides&&(t.shadowUpdateOverrides=this.shadowUpdateOverrides.slice()),t.innerConeAngle=this._innerConeAngle,t.outerConeAngle=this._outerConeAngle,t.numCascades=this.numCascades,t.cascadeDistribution=this.cascadeDistribution,t.shape=this._shape,t.shadowBias=this.shadowBias,t.normalOffsetBias=this._normalOffsetBias,t.shadowResolution=this._shadowResolution,t.shadowDistance=this.shadowDistance,t.shadowIntensity=this.shadowIntensity,t},e.getLightUnitConversion=function(e,t,n){switch(void 0===t&&(t=Math.PI/4),void 0===n&&(n=0),e){case Yu:var i=Math.cos(t),a=Math.cos(n);return 2*Math.PI*(1-a+(a-i)/2);case ju:return 4*Math.PI;case Wu:return 1}},t._getUniformBiasValues=function(e){var t=e.shadowCamera._farClip;switch(this._type){case ju:yb.bias=this.shadowBias,yb.normalBias=this._normalOffsetBias;break;case Yu:this._isVsm?yb.bias=-2e-4:(yb.bias=20*this.shadowBias,this.device.isWebGL1&&this.device.extStandardDerivatives&&(yb.bias*=-100)),yb.normalBias=this._isVsm?this.vsmBias/(this.attenuationEnd/7):this._normalOffsetBias;break;case Wu:this._isVsm?yb.bias=-2e-4:(yb.bias=this.shadowBias/t*100,this.device.isWebGL1&&this.device.extStandardDerivatives&&(yb.bias*=-100)),yb.normalBias=this._isVsm?this.vsmBias/(t/7):this._normalOffsetBias}return yb},t.getColor=function(){return this._color},t.getBoundingSphere=function(e){if(this._type===Yu){var t=this.attenuationEnd,n=this._outerConeAngle,i=this._outerConeAngleCos,a=this._node;vb.copy(a.up),n>45?(e.radius=t*this._outerConeAngleSin,vb.mulScalar(-t*i)):(e.radius=t/(2*i),vb.mulScalar(-e.radius)),e.center.add2(a.getPosition(),vb)}else this._type===ju&&(e.center=this._node.getPosition(),e.radius=this.attenuationEnd)},t.getBoundingBox=function(e){if(this._type===Yu){var t=this.attenuationEnd,n=this._outerConeAngle,i=this._node,a=Math.abs(Math.sin(n*at.DEG_TO_RAD)*t);e.center.set(0,.5*-t,0),e.halfExtents.set(a,.5*t,a),e.setFromTransformedAabb(e,i.getWorldTransform(),!0)}else this._type===ju&&(e.center.copy(this._node.getPosition()),e.halfExtents.set(this.attenuationEnd,this.attenuationEnd,this.attenuationEnd))},t._updateFinalColor=function(){var t=this._color,n=t.r,i=t.g,a=t.b,s=this._intensity;this._usePhysicalUnits&&(s=this._luminance/e.getLightUnitConversion(this._type,this._outerConeAngle*at.DEG_TO_RAD,this._innerConeAngle*at.DEG_TO_RAD));var r=this._finalColor,o=this._linearFinalColor;r[0]=n*s,r[1]=i*s,r[2]=a*s,s>=1?(o[0]=Math.pow(n,2.2)*s,o[1]=Math.pow(i,2.2)*s,o[2]=Math.pow(a,2.2)*s):(o[0]=Math.pow(r[0],2.2),o[1]=Math.pow(r[1],2.2),o[2]=Math.pow(r[2],2.2))},t.setColor=function(){1===arguments.length?this._color.set(arguments[0].r,arguments[0].g,arguments[0].b):3===arguments.length&&this._color.set(arguments[0],arguments[1],arguments[2]),this._updateFinalColor()},t.layersDirty=function(){this.layers.forEach((function(e){e.markLightsDirty()}))},t.updateKey=function(){var e=this._type<<29|(this._castShadows?1:0)<<28|this._shadowType<<25|this._falloffMode<<23|(0!==this._normalOffsetBias?1:0)<<22|(this._cookie?1:0)<<21|(this._cookieFalloff?1:0)<<20|_b[this._cookieChannel.charAt(0)]<<18|(this._cookieTransform?1:0)<<12|this._shape<<10|this.numCascades-1<<8|(this.affectSpecularity?1:0)<<7|this.mask<<6;3===this._cookieChannel.length&&(e|=_b[this._cookieChannel.charAt(1)]<<16,e|=_b[this._cookieChannel.charAt(2)]<<14),e!==this.key&&this.layersDirty(),this.key=e},q(e,[{key:"numCascades",get:function(){return this.cascades.length},set:function(e){this.cascades&&this.numCascades===e||(this.cascades=bb[e-1],this._shadowMatrixPalette=new Float32Array(64),this._shadowCascadeDistances=new Float32Array(4),this._destroyShadowMap(),this.updateKey())}},{key:"shadowMap",get:function(){return this._shadowMap},set:function(e){this._shadowMap!==e&&(this._destroyShadowMap(),this._shadowMap=e)}},{key:"mask",get:function(){return this._mask},set:function(e){this._mask!==e&&(this._mask=e,this.updateKey())}},{key:"numShadowFaces",get:function(){var e=this._type;return e===Wu?this.numCascades:e===ju?6:1}},{key:"type",get:function(){return this._type},set:function(e){if(this._type!==e){this._type=e,this._destroyShadowMap(),this.updateKey();var t=this._shadowType;this._shadowType=null,this.shadowUpdateOverrides=null,this.shadowType=t}}},{key:"shape",get:function(){return this._shape},set:function(e){if(this._shape!==e){this._shape=e,this._destroyShadowMap(),this.updateKey();var t=this._shadowType;this._shadowType=null,this.shadowType=t}}},{key:"usePhysicalUnits",get:function(){return this._usePhysicalUnits},set:function(e){this._usePhysicalUnits!==e&&(this._usePhysicalUnits=e,this._updateFinalColor())}},{key:"shadowType",get:function(){return this._shadowType},set:function(e){if(this._shadowType!==e){var t=this.device;this._type===ju&&e!==tm&&e!==lm&&(e=tm);var n=t.supportsDepthShadow;e!==rm||n||(e=tm),e!==sm||t.textureFloatRenderable&&t.textureFloatFilterable||(e=am),e!==am||t.textureHalfFloatRenderable||(e=im),this._isVsm=e>=im&&e<=sm,this._isPcf=e===om||e===tm||e===rm,this._shadowType=e,this._destroyShadowMap(),this.updateKey()}}},{key:"enabled",get:function(){return this._enabled},set:function(e){this._enabled!==e&&(this._enabled=e,this.layersDirty())}},{key:"castShadows",get:function(){return this._castShadows&&this._mask!==bf&&0!==this._mask},set:function(e){this._castShadows!==e&&(this._castShadows=e,this._destroyShadowMap(),this.layersDirty(),this.updateKey())}},{key:"shadowResolution",get:function(){return this._shadowResolution},set:function(e){this._shadowResolution!==e&&(e=this._type===ju?Math.min(e,this.device.maxCubeMapSize):Math.min(e,this.device.maxTextureSize),this._shadowResolution=e,this._destroyShadowMap())}},{key:"vsmBlurSize",get:function(){return this._vsmBlurSize},set:function(e){this._vsmBlurSize!==e&&(e%2==0&&e++,this._vsmBlurSize=e)}},{key:"normalOffsetBias",get:function(){return this._normalOffsetBias},set:function(e){this._normalOffsetBias!==e&&((!this._normalOffsetBias&&e||this._normalOffsetBias&&!e)&&this.updateKey(),this._normalOffsetBias=e)}},{key:"falloffMode",get:function(){return this._falloffMode},set:function(e){this._falloffMode!==e&&(this._falloffMode=e,this.updateKey())}},{key:"innerConeAngle",get:function(){return this._innerConeAngle},set:function(e){this._innerConeAngle!==e&&(this._innerConeAngle=e,this._innerConeAngleCos=Math.cos(e*Math.PI/180),this._usePhysicalUnits&&this._updateFinalColor())}},{key:"outerConeAngle",get:function(){return this._outerConeAngle},set:function(e){this._outerConeAngle!==e&&(this._outerConeAngle=e,this._updateOuterAngle(e),this._usePhysicalUnits&&this._updateFinalColor())}},{key:"penumbraSize",get:function(){return this._penumbraSize},set:function(e){this._penumbraSize=e}},{key:"intensity",get:function(){return this._intensity},set:function(e){this._intensity!==e&&(this._intensity=e,this._updateFinalColor())}},{key:"affectSpecularity",get:function(){return this._affectSpecularity},set:function(e){this._type===Wu&&(this._affectSpecularity=e,this.updateKey())}},{key:"luminance",get:function(){return this._luminance},set:function(e){this._luminance!==e&&(this._luminance=e,this._updateFinalColor())}},{key:"cookieMatrix",get:function(){return this._cookieMatrix||(this._cookieMatrix=new St),this._cookieMatrix}},{key:"atlasViewport",get:function(){return this._atlasViewport||(this._atlasViewport=new vt(0,0,1,1)),this._atlasViewport}},{key:"cookie",get:function(){return this._cookie},set:function(e){this._cookie!==e&&(this._cookie=e,this.updateKey())}},{key:"cookieFalloff",get:function(){return this._cookieFalloff},set:function(e){this._cookieFalloff!==e&&(this._cookieFalloff=e,this.updateKey())}},{key:"cookieChannel",get:function(){return this._cookieChannel},set:function(e){if(this._cookieChannel!==e){if(e.length<3)for(var t=e.charAt(e.length-1),n=3-e.length,i=0;i<n;i++)e+=t;this._cookieChannel=e,this.updateKey()}}},{key:"cookieTransform",get:function(){return this._cookieTransform},set:function(e){this._cookieTransform!==e&&(this._cookieTransform=e,this._cookieTransformSet=!!e,e&&!this._cookieOffset&&(this.cookieOffset=new ft,this._cookieOffsetSet=!1),this.updateKey())}},{key:"cookieOffset",get:function(){return this._cookieOffset},set:function(e){this._cookieOffset!==e&&((this._cookieTransformSet||e)&&!e&&this._cookieOffset?this._cookieOffset.set(0,0):this._cookieOffset=e,this._cookieOffsetSet=!!e,e&&!this._cookieTransform&&(this.cookieTransform=new vt(1,1,0,0),this._cookieTransformSet=!1),this.updateKey())}}]),e}(),Eb=function(){function e(e,t,n){this._areaLightsEnabled=!1,this._cells=new pt(10,3,10),this._maxLightsPerCell=255,this._shadowsEnabled=!0,this._shadowType=tm,this._shadowAtlasResolution=2048,this._cookiesEnabled=!1,this._cookieAtlasResolution=2048,this.debugLayer=void 0,this.atlasSplit=null,this._supportsAreaLights=e,this._maxTextureSize=t,this._dirtyLightsFnc=n}return e.prototype.applySettings=function(e){var t,n,i,a,s,r,o;this.shadowsEnabled=null!=(t=e.lightingShadowsEnabled)?t:this.shadowsEnabled,this.cookiesEnabled=null!=(n=e.lightingCookiesEnabled)?n:this.cookiesEnabled,this.areaLightsEnabled=null!=(i=e.lightingAreaLightsEnabled)?i:this.areaLightsEnabled,this.shadowAtlasResolution=null!=(a=e.lightingShadowAtlasResolution)?a:this.shadowAtlasResolution,this.cookieAtlasResolution=null!=(s=e.lightingCookieAtlasResolution)?s:this.cookieAtlasResolution,this.maxLightsPerCell=null!=(r=e.lightingMaxLightsPerCell)?r:this.maxLightsPerCell,this.shadowType=null!=(o=e.lightingShadowType)?o:this.shadowType,e.lightingCells&&(this.cell=new pt(e.lightingCells))},q(e,[{key:"cells",get:function(){return this._cells},set:function(e){this._cells.copy(e)}},{key:"maxLightsPerCell",get:function(){return this._maxLightsPerCell},set:function(e){this._maxLightsPerCell=at.clamp(e,1,255)}},{key:"cookieAtlasResolution",get:function(){return this._cookieAtlasResolution},set:function(e){this._cookieAtlasResolution=at.clamp(e,32,this._maxTextureSize)}},{key:"shadowAtlasResolution",get:function(){return this._shadowAtlasResolution},set:function(e){this._shadowAtlasResolution=at.clamp(e,32,this._maxTextureSize)}},{key:"shadowType",get:function(){return this._shadowType},set:function(e){this._shadowType!==e&&(this._shadowType=e,this._dirtyLightsFnc())}},{key:"cookiesEnabled",get:function(){return this._cookiesEnabled},set:function(e){this._cookiesEnabled!==e&&(this._cookiesEnabled=e,this._dirtyLightsFnc())}},{key:"areaLightsEnabled",get:function(){return this._areaLightsEnabled},set:function(e){this._supportsAreaLights&&this._areaLightsEnabled!==e&&(this._areaLightsEnabled=e,this._dirtyLightsFnc())}},{key:"shadowsEnabled",get:function(){return this._shadowsEnabled},set:function(e){this._shadowsEnabled!==e&&(this._shadowsEnabled=e,this._dirtyLightsFnc())}}]),e}(),Tb="\n\tattribute vec2 vertex_position;\n\tvarying vec2 uv0;\n\tvoid main(void) {\n\t\tgl_Position = vec4(vertex_position, 0.5, 1.0);\n\t\tuv0 = vertex_position.xy * 0.5 + 0.5;\n\t}\n\t",Ab=new yr(!0,cn,Zt,Zt),Lb=function(){function e(e){var t=this;this.morph=e,e.incRefCount(),this.device=e.device,this._weights=[],this._weightMap=new Map;for(var n=0;n<e._targets.length;n++){var i=e._targets[n];i.name&&this._weightMap.set(i.name,n),this.setWeight(n,i.defaultWeight)}if(this._activeTargets=[],e.useTextureMorph){this.shaderCache={},this.maxSubmitCount=this.device.maxTextures,this._shaderMorphWeights=new Float32Array(this.maxSubmitCount);var a=function(n,i){return t[i]=e._createTexture(n,e._renderTextureFormat),new Vr({colorBuffer:t[i],depth:!1})};e.morphPositions&&(this.rtPositions=a("MorphRTPos","texturePositions")),e.morphNormals&&(this.rtNormals=a("MorphRTNrm","textureNormals")),this._textureParams=new Float32Array([e.morphTextureWidth,e.morphTextureHeight,1/e.morphTextureWidth,1/e.morphTextureHeight]);for(var s=0;s<this.maxSubmitCount;s++)this["morphBlendTex"+s]=this.device.scope.resolve("morphBlendTex"+s);this.morphFactor=this.device.scope.resolve("morphFactor[0]"),this.zeroTextures=!1}else this.maxSubmitCount=8,this._shaderMorphWeights=new Float32Array(this.maxSubmitCount),this._shaderMorphWeightsA=new Float32Array(this._shaderMorphWeights.buffer,0,4),this._shaderMorphWeightsB=new Float32Array(this._shaderMorphWeights.buffer,16,4),this._activeVertexBuffers=new Array(this.maxSubmitCount)}var t=e.prototype;return t.destroy=function(){this.shader=null;var e=this.morph;e&&(this.morph=null,e.decRefCount(),e.refCount<1&&e.destroy()),this.rtPositions&&(this.rtPositions.destroy(),this.rtPositions=null),this.texturePositions&&(this.texturePositions.destroy(),this.texturePositions=null),this.rtNormals&&(this.rtNormals.destroy(),this.rtNormals=null),this.textureNormals&&(this.textureNormals.destroy(),this.textureNormals=null)},t.clone=function(){return new e(this.morph)},t._getWeightIndex=function(e){return"string"==typeof e?this._weightMap.get(e):e},t.getWeight=function(e){var t=this._getWeightIndex(e);return this._weights[t]},t.setWeight=function(e,t){var n=this._getWeightIndex(e);this._weights[n]=t,this._dirty=!0},t._getFragmentShader=function(e){var t="";e>0&&(t+="varying vec2 uv0;\nuniform highp float morphFactor["+e+"];\n");for(var n=0;n<e;n++)t+="uniform highp sampler2D morphBlendTex"+n+";\n";t+="void main (void) {\n    highp vec4 color = vec4(0, 0, 0, 1);\n";for(var i=0;i<e;i++)t+="    color.xyz += morphFactor["+i+"] * texture2D(morphBlendTex"+i+", uv0).xyz;\n";return t+="    gl_FragColor = color;\n}\n"},t._getShader=function(e){var t=this.shaderCache[e];if(!t){var n=this._getFragmentShader(e);t=kg(this.device,Tb,n,"textureMorph"+e),this.shaderCache[e]=t}return t},t._updateTextureRenderTarget=function(e,t){for(var n=this,i=this.device,a=function(t,a){n.morphFactor.setValue(n._shaderMorphWeights),i.setBlendState(a?Ab:yr.NOBLEND);var s=n._getShader(t);Gg(i,e,s)},s=0,r=!1,o=this._activeTargets.length,l=0;l<o;l++){var c=this._activeTargets[l],h=c.target[t];h&&(this["morphBlendTex"+s].setValue(h),this._shaderMorphWeights[s]=c.weight,++s>=this.maxSubmitCount&&(a(s,r),s=0,r=!0))}(s>0||0===o&&!this.zeroTextures)&&a(s,r)},t._updateTextureMorph=function(){this.device,(this._activeTargets.length>0||!this.zeroTextures)&&(this.rtPositions&&this._updateTextureRenderTarget(this.rtPositions,"texturePositions"),this.rtNormals&&this._updateTextureRenderTarget(this.rtNormals,"textureNormals"),this.zeroTextures=0===this._activeTargets.length)},t._updateVertexMorph=function(){for(var e=this.maxSubmitCount,t=0;t<e;t++)this._shaderMorphWeights[t]=0,this._activeVertexBuffers[t]=null;for(var n=0,i=this.morph.morphPositions?4:0,a=0;a<this._activeTargets.length;a++){var s=this._activeTargets[a].target;s._vertexBufferPositions&&(this._activeVertexBuffers[n]=s._vertexBufferPositions,this._shaderMorphWeights[n]=this._activeTargets[a].weight,n++),s._vertexBufferNormals&&(this._activeVertexBuffers[i]=s._vertexBufferNormals,this._shaderMorphWeights[i]=this._activeTargets[a].weight,i++)}},t.update=function(){this._dirty=!1;for(var e=this.morph._targets,t=0,n=1e-5,i=0;i<e.length;i++){var a=Math.abs(this.getWeight(i));if(a>n){this._activeTargets.length<=t&&(this._activeTargets[t]={});var s=this._activeTargets[t++];s.absWeight=a,s.weight=this.getWeight(i),s.target=e[i]}}this._activeTargets.length=t;var r=this.morph.maxActiveTargets;this._activeTargets.length>r&&(this._activeTargets.sort((function(e,t){return e.absWeight<t.absWeight?1:t.absWeight<e.absWeight?-1:0})),this._activeTargets.length=r),this.morph.useTextureMorph?this._updateTextureMorph():this._updateVertexMorph()},e}(),Mb=function(){function e(){this.graph=null,this.meshInstances=[],this.skinInstances=[],this.morphInstances=[],this.cameras=[],this.lights=[],this._shadersVersion=0,this._immutable=!1}var t=e.prototype;return t.getGraph=function(){return this.graph},t.setGraph=function(e){this.graph=e},t.getCameras=function(){return this.cameras},t.setCameras=function(e){this.cameras=e},t.getLights=function(){return this.lights},t.setLights=function(e){this.lights=e},t.getMaterials=function(){for(var e=[],t=0;t<this.meshInstances.length;t++){var n=this.meshInstances[t];-1===e.indexOf(n.material)&&e.push(n.material)}return e},t.clone=function(){for(var t=[],n=[],i=function e(i){var a=i.clone();t.push(i),n.push(a);for(var s=0;s<i._children.length;s++)a.addChild(e(i._children[s]));return a}(this.graph),a=[],s=[],r=[],o=0;o<this.skinInstances.length;o++){for(var l=this.skinInstances[o].skin,c=new rv(l),h=[],p=0;p<l.boneNames.length;p++){var d=l.boneNames[p],u=i.findByName(d);h.push(u)}c.bones=h,s.push(c)}for(var m=0;m<this.morphInstances.length;m++){var f=this.morphInstances[m].morph,g=new Lb(f);r.push(g)}for(var v=0;v<this.meshInstances.length;v++){var y=this.meshInstances[v],_=t.indexOf(y.node),w=new Dv(y.mesh,y.material,n[_]);if(y.skinInstance){var b=this.skinInstances.indexOf(y.skinInstance);w.skinInstance=s[b]}if(y.morphInstance){var x=this.morphInstances.indexOf(y.morphInstance);w.morphInstance=r[x]}a.push(w)}var C=new e;return C.graph=i,C.meshInstances=a,C.skinInstances=s,C.morphInstances=r,C.getGraph().syncHierarchy(),C},t.destroy=function(){for(var e=this.meshInstances,t=0;t<e.length;t++)e[t].destroy();this.meshInstances.length=0},t.generateWireframe=function(){Dv._prepareRenderStyleForArray(this.meshInstances,Tm)},e}(),Pb=function(e){function t(t,n,i){var a,s=(void 0===i?{}:i).preferHighPrecision,r=void 0!==s&&s;(a=e.call(this)||this)._aabb=void 0,a.preferHighPrecision=void 0,a.device=n||ig.get(),a.preferHighPrecision=r,a._targets=t.slice();var o=a.device;if(o.supportsMorphTargetTexturesCore){var l=o.extTextureHalfFloat&&o.textureHalfFloatRenderable?ri:void 0,c=o.extTextureFloat&&o.textureFloatRenderable?li:void 0;a._renderTextureFormat=a.preferHighPrecision?null!=c?c:l:null!=l?l:c;var h=o.extTextureHalfFloat&&o.textureHalfFloatUpdatable?ri:void 0,p=o.extTextureFloat?oi:void 0;a._textureFormat=a.preferHighPrecision?null!=p?p:h:null!=h?h:p,void 0!==a._renderTextureFormat&&void 0!==a._textureFormat&&(a._useTextureMorph=!0)}return a._init(),a._updateMorphFlags(),a}Z(t,e);var n=t.prototype;return n._init=function(){if(this._useTextureMorph&&(this._useTextureMorph=this._initTextureBased()),!this._useTextureMorph)for(var e=0;e<this._targets.length;e++)this._targets[e]._initVertexBuffers(this.device);for(var t=0;t<this._targets.length;t++)this._targets[t]._postInit()},n._findSparseSet=function(e,t,n,i){for(var a=1,s=e[0].length,r=0;r<s;r+=3){for(var o=!1,l=0;l<e.length;l++){var c=e[l];if(0!==c[r]||0!==c[r+1]||0!==c[r+2]){o=!0;break}}o?(t.push(a+i),n.push(r/3),a++):t.push(0+i)}return a},n._initTextureBased=function(){for(var e=this.device.isWebGPU,t=e?0:.2,n=[],i=[],a=0;a<this._targets.length;a++){var s=this._targets[a];s.options.deltaPositions&&(n.push(s.options.deltaPositions),i.push({target:s,name:"texturePositions"})),s.options.deltaNormals&&(n.push(s.options.deltaNormals),i.push({target:s,name:"textureNormals"}))}var r=[],o=[],l=this._findSparseSet(n,r,o,t),c=Math.min(this.device.maxTextureSize,4096),h=Math.ceil(Math.sqrt(l));h=Math.min(h,c);var p=Math.ceil(l/h);if(p>c)return!1;this.morphTextureWidth=h,this.morphTextureHeight=p;var d=!1,u=3,m=my.float2Half;this._textureFormat===ri&&(d=!0,u=4);for(var f=[],g=0;g<n.length;g++)f.push(this._createTexture("MorphTarget",this._textureFormat));for(var v=0;v<n.length;v++){var y=n[v],_=f[v],w=_.lock();if(d)for(var b=0;b<o.length;b++){var x=3*o[b],C=b*u+u;w[C]=m(y[x]),w[C+1]=m(y[x+1]),w[C+2]=m(y[x+2])}else for(var S=0;S<o.length;S++){var E=3*o[S],T=S*u+u;w[T]=y[E],w[T+1]=y[E+1],w[T+2]=y[E+2]}_.unlock(),i[v].target._setTexture(i[v].name,_)}var A=[{semantic:ua,components:1,type:e?es:ts}];return this.vertexBufferIds=new Mr(this.device,new Fr(this.device,A,r.length),r.length,mn,e?new Uint32Array(r):new Float32Array(r)),!0},n.destroy=function(){var e;null==(e=this.vertexBufferIds)||e.destroy(),this.vertexBufferIds=null;for(var t=0;t<this._targets.length;t++)this._targets[t].destroy();this._targets.length=0},n._updateMorphFlags=function(){this._morphPositions=!1,this._morphNormals=!1;for(var e=0;e<this._targets.length;e++){var t=this._targets[e];t.morphPositions&&(this._morphPositions=!0),t.morphNormals&&(this._morphNormals=!0)}},n._createTexture=function(e,t){return new vl(this.device,{width:this.morphTextureWidth,height:this.morphTextureHeight,format:t,cubemap:!1,mipmaps:!1,minFilter:On,magFilter:On,addressU:Yt,addressV:Yt,name:e})},q(t,[{key:"aabb",get:function(){if(!this._aabb){for(var e=new pt,t=new pt,n=0;n<this._targets.length;n++){var i=this._targets[n].aabb;e.min(i.getMin()),t.max(i.getMax())}this._aabb=new Ot,this._aabb.setMinMax(e,t)}return this._aabb}},{key:"morphPositions",get:function(){return this._morphPositions}},{key:"morphNormals",get:function(){return this._morphNormals}},{key:"maxActiveTargets",get:function(){return this._useTextureMorph?this._targets.length:this._morphPositions&&this._morphNormals?4:8}},{key:"useTextureMorph",get:function(){return this._useTextureMorph}},{key:"targets",get:function(){return this._targets}}]),t}(ng),Ob=function(){function e(e){this.used=!1,2===arguments.length&&(e=arguments[1]),this.options=e,this._name=e.name,this._defaultWeight=e.defaultWeight||0,this._aabb=e.aabb,this.deltaPositions=e.deltaPositions}var t=e.prototype;return t.destroy=function(){var e,t,n,i;null==(e=this._vertexBufferPositions)||e.destroy(),this._vertexBufferPositions=null,null==(t=this._vertexBufferNormals)||t.destroy(),this._vertexBufferNormals=null,null==(n=this.texturePositions)||n.destroy(),this.texturePositions=null,null==(i=this.textureNormals)||i.destroy(),this.textureNormals=null},t.clone=function(){return new e(this.options)},t._postInit=function(){this.options.preserveData||(this.options=null),this.used=!0},t._initVertexBuffers=function(e){var t=this.options;this._vertexBufferPositions=this._createVertexBuffer(e,t.deltaPositions,t.deltaPositionsType),this._vertexBufferNormals=this._createVertexBuffer(e,t.deltaNormals,t.deltaNormalsType),this._vertexBufferPositions&&(this.deltaPositions=this._vertexBufferPositions.lock())},t._createVertexBuffer=function(e,t,n){return void 0===n&&(n=ts),t?new Mr(e,new Fr(e,[{semantic:Ji,components:3,type:n}]),t.length/3,mn,t):null},t._setTexture=function(e,t){this[e]=t},q(e,[{key:"name",get:function(){return this._name}},{key:"defaultWeight",get:function(){return this._defaultWeight}},{key:"aabb",get:function(){return this._aabb||(this._aabb=new Ot,this.deltaPositions&&this._aabb.compute(this.deltaPositions)),this._aabb}},{key:"morphPositions",get:function(){return!!this._vertexBufferPositions||!!this.texturePositions}},{key:"morphNormals",get:function(){return!!this._vertexBufferNormals||!!this.textureNormals}}]),e}(),Ib=function(e){function t(){return e.apply(this,arguments)||this}Z(t,e);var n=t.prototype;return n.generateKey=function(e){var t="particle";for(var n in e)e.hasOwnProperty(n)&&(t+=e[n]);return t},n._animTex=function(e){var t="";return t+=e.animTexLoop?Mg.particleAnimFrameLoopVS:Mg.particleAnimFrameClampVS,t+=Mg.particleAnimTexVS},n.createShaderDefinition=function(e,t){var n="#define PARTICLE_"+(t.useCpu?"CPU":"GPU")+"\n",i="#define PARTICLE\n"+n,a="#define VERTEXSHADER\n"+n;t.mesh&&(a+="#define USE_MESH\n"),t.localSpace&&(a+="#define LOCAL_SPACE\n"),t.screenSpace&&(a+="#define SCREEN_SPACE\n"),t.animTex&&(a+="\nuniform vec2 animTexTilesParams;\n"),t.animTex&&(a+="\nuniform vec4 animTexParams;\n"),t.animTex&&(a+="\nuniform vec2 animTexIndexParams;\n"),2===t.normal&&(a+="\nvarying mat3 ParticleMat;\n"),1===t.normal&&(a+="\nvarying vec3 Normal;\n"),t.soft&&(a+="\nvarying float vDepth;\n");var s=t.customFace?Mg.particle_customFaceVS:Mg.particle_billboardVS;return t.useCpu?(t.soft>0&&(a+=Mg.screenDepthPS),a+=Mg.particle_cpuVS,t.localSpace&&(a+=Mg.particle_localShiftVS),t.animTex&&(a+=this._animTex(t)),t.alignToMotion&&(a+=Mg.particle_pointAlongVS),a+=t.mesh?Mg.particle_meshVS:s,1===t.normal&&(a+=Mg.particle_normalVS),2===t.normal&&(a+=Mg.particle_TBNVS),t.stretch>0&&(a+=Mg.particle_stretchVS),a+=Mg.particle_cpu_endVS,t.soft>0&&(a+=Mg.particle_softVS)):(a+=Mg.particle_initVS,a+=t.pack8?Mg.particleInputRgba8PS:Mg.particleInputFloatPS,t.soft>0&&(a+=Mg.screenDepthPS),a+=Mg.particleVS,t.localSpace&&(a+=Mg.particle_localShiftVS),t.animTex&&(a+=this._animTex(t)),t.wrap&&(a+=Mg.particle_wrapVS),t.alignToMotion&&(a+=Mg.particle_pointAlongVS),a+=t.mesh?Mg.particle_meshVS:s,1===t.normal&&(a+=Mg.particle_normalVS),2===t.normal&&(a+=Mg.particle_TBNVS),t.stretch>0&&(a+=Mg.particle_stretchVS),a+=Mg.particle_endVS,t.soft>0&&(a+=Mg.particle_softVS)),a+="}\n",t.normal>0&&(1===t.normal?i+="\nvarying vec3 Normal;\n":2===t.normal&&(i+="\nvarying mat3 ParticleMat;\n"),i+="\nuniform vec3 lightCube[6];\n"),t.soft&&(i+="\nvarying float vDepth;\n"),0===t.normal&&"none"===t.fog&&(t.srgb=!1),i+=Mg.decodePS,i+=Rg.gammaCode(t.gamma),i+=Rg.tonemapCode(t.toneMap),"linear"===t.fog?i+=Mg.fogLinearPS:"exp"===t.fog?i+=Mg.fogExpPS:"exp2"===t.fog?i+=Mg.fogExp2PS:i+=Mg.fogNonePS,2===t.normal&&(i+="\nuniform sampler2D normalMap;\n"),t.soft>0&&(i+=Mg.screenDepthPS),i+=Mg.particlePS,t.soft>0&&(i+=Mg.particle_softPS),1===t.normal&&(i+="\nvec3 normal = Normal;\n"),2===t.normal&&(i+=Mg.particle_normalMapPS),t.normal>0&&(i+=t.halflambert?Mg.particle_halflambertPS:Mg.particle_lambertPS),t.normal>0&&(i+=Mg.particle_lightingPS),t.blend===wu?i+=Mg.particle_blendNormalPS:t.blend===_u?i+=Mg.particle_blendAddPS:t.blend===Cu&&(i+=Mg.particle_blendMultiplyPS),i+=Mg.particle_endPS,Vl.createDefinition(e,{name:"ParticleShader",vertexCode:a,fragmentCode:i})},t}(Rg),Rb=new Ib,Db=1,kb=4,Fb=new St,Bb=new St,Nb=new pt,Ub=new pt,zb=new pt,Vb=new pt,Hb=new pt,Gb=new pt,Wb=new pt,jb=new pt,Xb=new pt,Yb=new pt,qb=new pt,Kb=new pt,Zb=new pt;function Qb(e){return e-Math.floor(e)}function Jb(e){return Math.max(Math.min(e,1),0)}function $b(e,t){return e-t*Math.floor(e/t)}function ex(e){var t=Qb(e),n=Qb(255*e),i=Qb(65025*e),a=Qb(160581375*e);return[t-=n/255,n-=i/255,i-=a/255,a-=a/255]}function tx(e){var t=Qb(e),n=Qb(255*e);return[t-=n/255,n-=n/255]}var nx=function(){function e(e){this._emitter=e}var t=e.prototype;return t.calcSpawnPosition=function(e,t,n,i,a){var s=this._emitter,r=Math.random(),o=Math.random(),l=Math.random(),c=Math.random();if(s.useCpu&&(e[a*kb+0+2*s.numParticlesPot*kb]=r,e[a*kb+1+2*s.numParticlesPot*kb]=o,e[a*kb+2+2*s.numParticlesPot*kb]=l),Ub.x=r-.5,Ub.y=o-.5,Ub.z=l-.5,s.emitterShape===ym){var h=Math.max(Math.abs(Ub.x),Math.max(Math.abs(Ub.y),Math.abs(Ub.z))),p=h+(.5-h)*n[0],d=h+(.5-h)*n[1],u=h+(.5-h)*n[2];Ub.x=p*(h===Math.abs(Ub.x)?Math.sign(Ub.x):2*Ub.x),Ub.y=d*(h===Math.abs(Ub.y)?Math.sign(Ub.y):2*Ub.y),Ub.z=u*(h===Math.abs(Ub.z)?Math.sign(Ub.z):2*Ub.z),s.localSpace?Nb.copy(t.transformPoint(Ub)):Nb.copy(i).add(t.transformPoint(Ub))}else{Ub.normalize();var m=0===s.emitterRadius?0:s.emitterRadiusInner/s.emitterRadius,f=c*(1-m)+m;s.localSpace?Nb.copy(Ub.mulScalar(f*s.emitterRadius)):Nb.copy(i).add(Ub.mulScalar(f*s.emitterRadius))}var g=-at.lerp(s.rate,s.rate2,r)*a;if(s.pack8){var v=(Nb.x-s.worldBounds.center.x)/s.worldBoundsSize.x+.5,y=(Nb.y-s.worldBounds.center.y)/s.worldBoundsSize.y+.5,_=(Nb.z-s.worldBounds.center.z)/s.worldBoundsSize.z+.5,w=at.lerp(s.startAngle*at.DEG_TO_RAD,s.startAngle2*at.DEG_TO_RAD,r);w=w%(2*Math.PI)/(2*Math.PI);var b=tx(v);e[a*kb]=b[0],e[a*kb+1]=b[1];var x=tx(y);e[a*kb+2]=x[0],e[a*kb+3]=x[1];var C=tx(_);e[a*kb+0+s.numParticlesPot*kb]=C[0],e[a*kb+1+s.numParticlesPot*kb]=C[1];var S=tx(w);e[a*kb+2+s.numParticlesPot*kb]=S[0],e[a*kb+3+s.numParticlesPot*kb]=S[1];var E=1;e[a*kb+3+s.numParticlesPot*kb*2]=E;var T=Math.max(s.lifetime,(s.numParticles-1)*Math.max(s.rate,s.rate2)),A=ex(g=(g+T)/(T+(s.lifetime+1)));e[a*kb+0+s.numParticlesPot*kb*3]=A[0],e[a*kb+1+s.numParticlesPot*kb*3]=A[1],e[a*kb+2+s.numParticlesPot*kb*3]=A[2],e[a*kb+3+s.numParticlesPot*kb*3]=A[3]}else e[a*kb]=Nb.x,e[a*kb+1]=Nb.y,e[a*kb+2]=Nb.z,e[a*kb+3]=at.lerp(s.startAngle*at.DEG_TO_RAD,s.startAngle2*at.DEG_TO_RAD,r),e[a*kb+3+s.numParticlesPot*kb]=g},t.update=function(e,t,n,i,a,s,r,o){var l,c,h,p=this._emitter;if(p.meshInstance.node){for(var d=p.meshInstance.node.worldTransform,u=0;u<12;u++)Fb.data[u]=d.data[u];Bb.copy(Fb),Bb.invert(),rb=p.meshInstance.node.localScale,Db=Math.max(Math.max(rb.x,rb.y),rb.z)}s=null===p.meshInstance.node||p.localSpace?pt.ZERO:p.meshInstance.node.getPosition();for(var m,f,g,v,y,_,w,b,x=p.camera?p.camera._node.getPosition():pt.ZERO,C=p.useMesh?17:15,S=p.precision-1,E=0;E<p.numParticles;E++){var T=Math.floor(p.vbCPU[E*p.numParticleVerts*(p.useMesh?6:4)+3]),A=n[T*kb+0+2*p.numParticlesPot*kb];zb.x=A,zb.y=n[T*kb+1+2*p.numParticlesPot*kb],zb.z=n[T*kb+2+2*p.numParticlesPot*kb];var L=p.rate+(p.rate2-p.rate)*A,M=p.lifetime,P=n[T*kb+3+p.numParticlesPot*kb]+r,O=Jb(P/M),I=0,R=0,D=0;(P-r<=0||P>=M)&&this.calcSpawnPosition(n,i,a,s,T);var k=P>0&&P<M;k&&(h=O*S,m=Math.floor(h),f=Math.ceil(h),h%=1,g=(l=p.qRotSpeed[m])+((c=p.qRotSpeed[f])-l)*h,v=(l=p.qRotSpeed2[m])+((c=p.qRotSpeed2[f])-l)*h,I=(l=p.qScale[m])+((c=p.qScale[f])-l)*h,y=(l=p.qScale2[m])+((c=p.qScale2[f])-l)*h,_=(l=p.qAlpha[m])+((c=p.qAlpha[f])-l)*h,w=(l=p.qAlpha2[m])+((c=p.qAlpha2[f])-l)*h,b=(l=p.qRadialSpeed[m])+((c=p.qRadialSpeed[f])-l)*h,b+=100*A%1*((l=p.qRadialSpeed2[m])+((c=p.qRadialSpeed2[f])-l)*h-b),Vb.x=n[T*kb],Vb.y=n[T*kb+1],Vb.z=n[T*kb+2],p.localSpace?Xb.copy(Vb):Xb.copy(Vb).sub(s),Xb.normalize().mulScalar(b),m*=3,f*=3,l=p.qLocalVelocity[m],c=p.qLocalVelocity[f],Gb.x=l+(c-l)*h,l=p.qLocalVelocity[m+1],c=p.qLocalVelocity[f+1],Gb.y=l+(c-l)*h,l=p.qLocalVelocity[m+2],c=p.qLocalVelocity[f+2],Gb.z=l+(c-l)*h,l=p.qLocalVelocity2[m],c=p.qLocalVelocity2[f],jb.x=l+(c-l)*h,l=p.qLocalVelocity2[m+1],c=p.qLocalVelocity2[f+1],jb.y=l+(c-l)*h,l=p.qLocalVelocity2[m+2],c=p.qLocalVelocity2[f+2],jb.z=l+(c-l)*h,l=p.qVelocity[m],c=p.qVelocity[f],Hb.x=l+(c-l)*h,l=p.qVelocity[m+1],c=p.qVelocity[f+1],Hb.y=l+(c-l)*h,l=p.qVelocity[m+2],c=p.qVelocity[f+2],Hb.z=l+(c-l)*h,l=p.qVelocity2[m],c=p.qVelocity2[f],Wb.x=l+(c-l)*h,l=p.qVelocity2[m+1],c=p.qVelocity2[f+1],Wb.y=l+(c-l)*h,l=p.qVelocity2[m+2],c=p.qVelocity2[f+2],Wb.z=l+(c-l)*h,Gb.x+=(jb.x-Gb.x)*zb.x,Gb.y+=(jb.y-Gb.y)*zb.y,Gb.z+=(jb.z-Gb.z)*zb.z,p.initialVelocity>0&&(p.emitterShape===_m?(Ub.copy(zb).mulScalar(2).sub(pt.ONE).normalize(),Gb.add(Ub.mulScalar(p.initialVelocity))):Gb.add(pt.FORWARD.mulScalar(p.initialVelocity))),Hb.x+=(Wb.x-Hb.x)*zb.x,Hb.y+=(Wb.y-Hb.y)*zb.y,Hb.z+=(Wb.z-Hb.z)*zb.z,g+=(v-g)*zb.y,I=(I+1e4*A%1*(y-I))*Db,R=1e3*A%1*(w-_),p.meshInstance.node&&(p.localSpace?(Gb.x/=rb.x,Gb.y/=rb.y,Gb.z/=rb.z):Fb.transformPoint(Gb,Gb)),p.localSpace?(Bb.transformPoint(Hb,Hb),Gb.add(Hb).add(Xb)):(Gb.add(Hb.mul(rb)),Gb.add(Xb.mul(rb))),Kb.copy(Gb),Yb.copy(Vb).add(Gb.mulScalar(r)),qb.copy(Yb),n[T*kb]=qb.x,n[T*kb+1]=qb.y,n[T*kb+2]=qb.z,n[T*kb+3]+=g*r,p.wrap&&p.wrapBounds&&(p.localSpace||qb.sub(s),qb.x=$b(qb.x,p.wrapBounds.x)-.5*p.wrapBounds.x,qb.y=$b(qb.y,p.wrapBounds.y)-.5*p.wrapBounds.y,qb.z=$b(qb.z,p.wrapBounds.z)-.5*p.wrapBounds.z,p.localSpace||qb.add(s)),p.sort>0&&(1===p.sort?(Zb.copy(qb).sub(x),p.particleDistance[T]=-(Zb.x*Zb.x+Zb.y*Zb.y+Zb.z*Zb.z)):2===p.sort?p.particleDistance[T]=P:3===p.sort&&(p.particleDistance[T]=-P))),o?P<0&&(n[T*kb+3+2*p.numParticlesPot*kb]=-1):(P>=M&&(P-=Math.max(M,(p.numParticles-1)*L),n[T*kb+3+2*p.numParticlesPot*kb]=p.loop?1:-1),P<0&&p.loop&&(n[T*kb+3+2*p.numParticlesPot*kb]=1)),n[T*kb+3+2*p.numParticlesPot*kb]<0&&(k=!1),n[T*kb+3+p.numParticlesPot*kb]=P;for(var F=0;F<p.numParticleVerts;F++){var B=(E*p.numParticleVerts+F)*(p.useMesh?6:4),N=p.vbCPU[B],U=p.vbCPU[B+1],z=p.vbCPU[B+2];k||(N=U=z=0);var V=E*p.numParticleVerts*C+F*C;e[V]=qb.x,e[V+1]=qb.y,e[V+2]=qb.z,e[V+3]=O,e[V+4]=p.alignToMotion?D:n[T*kb+3],e[V+5]=I,e[V+6]=R,e[V+7]=Kb.x,e[V+8]=N,e[V+9]=U,e[V+10]=z,e[V+11]=Kb.y,e[V+12]=T,e[V+13]=Kb.z,e[V+14]=p.vbCPU[B+3],p.useMesh&&(e[V+15]=p.vbCPU[B+4],e[V+16]=p.vbCPU[B+5])}}if(p.sort>dm&&p.camera){for(var H=p.useMesh?6:4,G=p.particleDistance,W=0;W<p.numParticles;W++)t[W][0]=W,t[W][1]=G[Math.floor(p.vbCPU[W*p.numParticleVerts*H+3])];p.vbOld.set(p.vbCPU),t.sort((function(e,t){return e[1]-t[1]}));for(var j=0;j<p.numParticles;j++)for(var X=t[j][0]*p.numParticleVerts*H,Y=j*p.numParticleVerts*H,q=0;q<p.numParticleVerts*H;q++)p.vbCPU[Y+q]=p.vbOld[X+q]}},e}(),ix=new ut,ax=new ut,sx=new ut,rx=function(){function e(e,t){this._emitter=e,this.frameRandomUniform=new Float32Array(3),this.emitterPosUniform=new Float32Array(3),this.emitterScaleUniform=new Float32Array([1,1,1]),this.worldBoundsMulUniform=new Float32Array(3),this.worldBoundsAddUniform=new Float32Array(3),this.inBoundsSizeUniform=new Float32Array(3),this.inBoundsCenterUniform=new Float32Array(3),this.constantParticleTexIN=t.scope.resolve("particleTexIN"),this.constantParticleTexOUT=t.scope.resolve("particleTexOUT"),this.constantEmitterPos=t.scope.resolve("emitterPos"),this.constantEmitterScale=t.scope.resolve("emitterScale"),this.constantSpawnBounds=t.scope.resolve("spawnBounds"),this.constantSpawnPosInnerRatio=t.scope.resolve("spawnPosInnerRatio"),this.constantSpawnBoundsSphere=t.scope.resolve("spawnBoundsSphere"),this.constantSpawnBoundsSphereInnerRatio=t.scope.resolve("spawnBoundsSphereInnerRatio"),this.constantInitialVelocity=t.scope.resolve("initialVelocity"),this.constantFrameRandom=t.scope.resolve("frameRandom"),this.constantDelta=t.scope.resolve("delta"),this.constantRate=t.scope.resolve("rate"),this.constantRateDiv=t.scope.resolve("rateDiv"),this.constantLifetime=t.scope.resolve("lifetime"),this.constantGraphSampleSize=t.scope.resolve("graphSampleSize"),this.constantGraphNumSamples=t.scope.resolve("graphNumSamples"),this.constantInternalTex0=t.scope.resolve("internalTex0"),this.constantInternalTex1=t.scope.resolve("internalTex1"),this.constantInternalTex2=t.scope.resolve("internalTex2"),this.constantInternalTex3=t.scope.resolve("internalTex3"),this.constantEmitterMatrix=t.scope.resolve("emitterMatrix"),this.constantEmitterMatrixInv=t.scope.resolve("emitterMatrixInv"),this.constantNumParticles=t.scope.resolve("numParticles"),this.constantNumParticlesPot=t.scope.resolve("numParticlesPot"),this.constantLocalVelocityDivMult=t.scope.resolve("localVelocityDivMult"),this.constantVelocityDivMult=t.scope.resolve("velocityDivMult"),this.constantRotSpeedDivMult=t.scope.resolve("rotSpeedDivMult"),this.constantSeed=t.scope.resolve("seed"),this.constantStartAngle=t.scope.resolve("startAngle"),this.constantStartAngle2=t.scope.resolve("startAngle2"),this.constantOutBoundsMul=t.scope.resolve("outBoundsMul"),this.constantOutBoundsAdd=t.scope.resolve("outBoundsAdd"),this.constantInBoundsSize=t.scope.resolve("inBoundsSize"),this.constantInBoundsCenter=t.scope.resolve("inBoundsCenter"),this.constantMaxVel=t.scope.resolve("maxVel"),this.constantFaceTangent=t.scope.resolve("faceTangent"),this.constantFaceBinorm=t.scope.resolve("faceBinorm")}var t=e.prototype;return t._setInputBounds=function(){this.inBoundsSizeUniform[0]=this._emitter.prevWorldBoundsSize.x,this.inBoundsSizeUniform[1]=this._emitter.prevWorldBoundsSize.y,this.inBoundsSizeUniform[2]=this._emitter.prevWorldBoundsSize.z,this.constantInBoundsSize.setValue(this.inBoundsSizeUniform),this.inBoundsCenterUniform[0]=this._emitter.prevWorldBoundsCenter.x,this.inBoundsCenterUniform[1]=this._emitter.prevWorldBoundsCenter.y,this.inBoundsCenterUniform[2]=this._emitter.prevWorldBoundsCenter.z,this.constantInBoundsCenter.setValue(this.inBoundsCenterUniform)},t.randomize=function(){this.frameRandomUniform[0]=Math.random(),this.frameRandomUniform[1]=Math.random(),this.frameRandomUniform[2]=Math.random()},t.update=function(e,t,n,i,a){var s=this._emitter;e.setBlendState(yr.NOBLEND),e.setDepthState(xr.NODEPTH),e.setCullMode(An),this.randomize(),this.constantGraphSampleSize.setValue(1/s.precision),this.constantGraphNumSamples.setValue(s.precision),this.constantNumParticles.setValue(s.numParticles),this.constantNumParticlesPot.setValue(s.numParticlesPot),this.constantInternalTex0.setValue(s.internalTex0),this.constantInternalTex1.setValue(s.internalTex1),this.constantInternalTex2.setValue(s.internalTex2),this.constantInternalTex3.setValue(s.internalTex3);var r=s.meshInstance.node,o=null===r?pt.ONE:r.localScale;if(s.pack8){this.worldBoundsMulUniform[0]=s.worldBoundsMul.x,this.worldBoundsMulUniform[1]=s.worldBoundsMul.y,this.worldBoundsMulUniform[2]=s.worldBoundsMul.z,this.constantOutBoundsMul.setValue(this.worldBoundsMulUniform),this.worldBoundsAddUniform[0]=s.worldBoundsAdd.x,this.worldBoundsAddUniform[1]=s.worldBoundsAdd.y,this.worldBoundsAddUniform[2]=s.worldBoundsAdd.z,this.constantOutBoundsAdd.setValue(this.worldBoundsAddUniform),this._setInputBounds();var l=s.maxVel*Math.max(Math.max(o.x,o.y),o.z);l=Math.max(l,1),this.constantMaxVel.setValue(l)}var c=null===r||s.localSpace?pt.ZERO:r.getPosition(),h=null===r?St.IDENTITY:r.getWorldTransform();s.emitterShape===ym?(ix.setFromMat4(t),this.constantSpawnBounds.setValue(ix.data),this.constantSpawnPosInnerRatio.setValue(n)):(this.constantSpawnBoundsSphere.setValue(s.emitterRadius),this.constantSpawnBoundsSphereInnerRatio.setValue(0===s.emitterRadius?0:s.emitterRadiusInner/s.emitterRadius)),this.constantInitialVelocity.setValue(s.initialVelocity),ax.setFromMat4(h),sx.invertMat4(h),this.emitterPosUniform[0]=c.x,this.emitterPosUniform[1]=c.y,this.emitterPosUniform[2]=c.z,this.constantEmitterPos.setValue(this.emitterPosUniform),this.constantFrameRandom.setValue(this.frameRandomUniform),this.constantDelta.setValue(i),this.constantRate.setValue(s.rate),this.constantRateDiv.setValue(s.rate2-s.rate),this.constantStartAngle.setValue(s.startAngle*at.DEG_TO_RAD),this.constantStartAngle2.setValue(s.startAngle2*at.DEG_TO_RAD),this.constantSeed.setValue(s.seed),this.constantLifetime.setValue(s.lifetime),this.emitterScaleUniform[0]=o.x,this.emitterScaleUniform[1]=o.y,this.emitterScaleUniform[2]=o.z,this.constantEmitterScale.setValue(this.emitterScaleUniform),this.constantEmitterMatrix.setValue(ax.data),this.constantEmitterMatrixInv.setValue(sx.data),this.constantLocalVelocityDivMult.setValue(s.localVelocityUMax),this.constantVelocityDivMult.setValue(s.velocityUMax),this.constantRotSpeedDivMult.setValue(s.rotSpeedUMax[0]);var p=s.swapTex?s.particleTexOUT:s.particleTexIN;p=s.beenReset?s.particleTexStart:p;var d=s.swapTex?s.particleTexIN:s.particleTexOUT;this.constantParticleTexIN.setValue(p),Gg(e,s.swapTex?s.rtParticleTexIN:s.rtParticleTexOUT,a?s.shaderParticleUpdateOnStop:s.loop?s.shaderParticleUpdateRespawn:s.shaderParticleUpdateNoRespawn),s.material.setParameter("particleTexOUT",p),s.material.setParameter("particleTexIN",d),s.beenReset=!1,s.swapTex=!s.swapTex,s.prevWorldBoundsSize.copy(s.worldBoundsSize),s.prevWorldBoundsCenter.copy(s.worldBounds.center),s.pack8&&this._setInputBounds()},e}(),ox=[[-1,-1],[1,-1],[1,1],[-1,1]];function lx(e,t,n,i,a,s,r){void 0===a&&(a=li);var o=On;r&&a===ti&&(o=In);var l=new vl(e,{width:t,height:n,format:a,cubemap:!1,mipmaps:!1,minFilter:o,magFilter:o,addressU:Yt,addressV:Yt,name:"ParticleSystemTexture"}),c=l.lock();if(a===ti){for(var h=new Uint8Array(i.length),p=0;p<i.length;p++)h[p]=i[p]*s*255;i=h}return c.set(i),l.unlock(),l}function cx(e){return Math.max(Math.min(e,1),0)}var hx,px,dx=new ct([0,0,1,0]),ux=new ct([0,1,1,1]),mx=new ht([0,0,1,0],[0,0,1,0],[0,0,1,0]),fx=new ht([0,1,1,1],[0,1,1,1],[0,1,1,1]),gx=2,vx=4,yx=new Float32Array(3),_x=new St,wx=new pt,bx=new pt,xx=new pt;function Cx(e,t){void 0!==px[e]&&null!==px[e]?hx[e]=px[e]:hx[e]=t}function Sx(e,t,n){return(255*e<<16|255*t<<8|255*n)/(1<<24)}function Ex(e,t){for(var n=e.length/3,i=new Array(4*n),a=0;a<n;a++)i[4*a]=e[3*a],i[4*a+1]=e[3*a+1],i[4*a+2]=e[3*a+2],i[4*a+3]=Sx(t[3*a],t[3*a+1],t[3*a+2]);return i}function Tx(e,t){for(var n=new Array(4*t.length),i=0;i<t.length;i++)n[4*i]=e[3*i],n[4*i+1]=e[3*i+1],n[4*i+2]=e[3*i+2],n[4*i+3]=t[i];return n}function Ax(e,t,n,i,a){for(var s=new Array(4*e.length),r=0;r<e.length;r++)s[4*r]=e[r],s[4*r+1]=t[r],s[4*r+2]=0,s[4*r+3]=Sx(n[r],i[r],a[r]);return s}function Lx(e,t){for(var n=new Array(4*e.length),i=0;i<e.length;i++)n[4*i]=e[i],n[4*i+1]=t[i],n[4*i+2]=0,n[4*i+3]=0;return n}function Mx(e){var t=Math.max(e.rate,e.rate2)*e.numParticles+e.lifetime;return Date.now()+1e3*t}function Px(e,t){for(var n=new Float32Array(e.length),i=0;i<e.length;i++)n[i]=e[i]-t[i];return n}function Ox(e,t){for(var n=t.length,i=e.length/n,a=0;a<i;a++)for(var s=0;s<n;s++){var r=Math.abs(e[a*n+s]);t[s]=Math.max(t[s],r)}}function Ix(e,t){for(var n=t.length,i=e.length/n,a=0;a<i;a++)for(var s=0;s<n;s++)e[a*n+s]/=0===t[s]?1:t[s],e[a*n+s]*=.5,e[a*n+s]+=.5}function Rx(e,t,n){var i=Px(t,e);return Ox(i,n),Ix(i,n),i}var Dx=new xl,kx=function(){function e(e,t){this.graphicsDevice=e;var n=e,i=32;this.precision=i,this._addTimeTime=0,hx=this,px=t,Cx("numParticles",1),this.numParticles>e.maxTextureSize&&(this.numParticles=e.maxTextureSize),Cx("rate",1),Cx("rate2",this.rate),Cx("lifetime",50),Cx("emitterExtents",new pt(0,0,0)),Cx("emitterExtentsInner",new pt(0,0,0)),Cx("emitterRadius",0),Cx("emitterRadiusInner",0),Cx("emitterShape",ym),Cx("initialVelocity",1),Cx("wrap",!1),Cx("localSpace",!1),Cx("screenSpace",!1),Cx("wrapBounds",null),Cx("colorMap",this.defaultParamTexture),Cx("normalMap",null),Cx("loop",!0),Cx("preWarm",!1),Cx("sort",dm),Cx("mode",gm),Cx("scene",null),Cx("lighting",!1),Cx("halfLambert",!1),Cx("intensity",1),Cx("stretch",0),Cx("alignToMotion",!1),Cx("depthSoftening",0),Cx("mesh",null),Cx("particleNormal",new pt(0,1,0)),Cx("orientation",wm),Cx("depthWrite",!1),Cx("noFog",!1),Cx("blendType",wu),Cx("node",null),Cx("startAngle",0),Cx("startAngle2",this.startAngle),Cx("animTilesX",1),Cx("animTilesY",1),Cx("animStartFrame",0),Cx("animNumFrames",1),Cx("animNumAnimations",1),Cx("animIndex",0),Cx("randomizeAnimIndex",!1),Cx("animSpeed",1),Cx("animLoop",!0),this._gpuUpdater=new rx(this,n),this._cpuUpdater=new nx(this),this.emitterPosUniform=new Float32Array(3),this.wrapBoundsUniform=new Float32Array(3),this.emitterScaleUniform=new Float32Array([1,1,1]),Cx("colorGraph",fx),Cx("colorGraph2",this.colorGraph),Cx("scaleGraph",ux),Cx("scaleGraph2",this.scaleGraph),Cx("alphaGraph",ux),Cx("alphaGraph2",this.alphaGraph),Cx("localVelocityGraph",mx),Cx("localVelocityGraph2",this.localVelocityGraph),Cx("velocityGraph",mx),Cx("velocityGraph2",this.velocityGraph),Cx("rotationSpeedGraph",dx),Cx("rotationSpeedGraph2",this.rotationSpeedGraph),Cx("radialSpeedGraph",dx),Cx("radialSpeedGraph2",this.radialSpeedGraph),this.animTilesParams=new Float32Array(2),this.animParams=new Float32Array(4),this.animIndexParams=new Float32Array(2),this.internalTex0=null,this.internalTex1=null,this.internalTex2=null,this.colorParam=null,this.vbToSort=null,this.vbOld=null,this.particleDistance=null,this.camera=null,this.swapTex=!1,this.useMesh=!0,this.useCpu=!e.supportsGpuParticles,this.pack8=!0,this.localBounds=new Ot,this.worldBoundsNoTrail=new Ot,this.worldBoundsTrail=[new Ot,new Ot],this.worldBounds=new Ot,this.worldBoundsSize=new pt,this.prevWorldBoundsSize=new pt,this.prevWorldBoundsCenter=new pt,this.prevEmitterExtents=this.emitterExtents,this.prevEmitterRadius=this.emitterRadius,this.worldBoundsMul=new pt,this.worldBoundsAdd=new pt,this.timeToSwitchBounds=0,this.shaderParticleUpdateRespawn=null,this.shaderParticleUpdateNoRespawn=null,this.shaderParticleUpdateOnStop=null,this.numParticleVerts=0,this.numParticleIndices=0,this.material=null,this.meshInstance=null,this.drawOrder=0,this.seed=Math.random(),this.fixedTimeStep=1/60,this.maxSubSteps=10,this.simTime=0,this.simTimeTotal=0,this.beenReset=!1,this._layer=null,this.rebuild()}var t=e.prototype;return t.onChangeCamera=function(){this.regenShader(),this.resetMaterial()},t.calculateBoundsMad=function(){this.worldBoundsMul.x=1/this.worldBoundsSize.x,this.worldBoundsMul.y=1/this.worldBoundsSize.y,this.worldBoundsMul.z=1/this.worldBoundsSize.z,this.worldBoundsAdd.copy(this.worldBounds.center).mul(this.worldBoundsMul).mulScalar(-1),this.worldBoundsAdd.x+=.5,this.worldBoundsAdd.y+=.5,this.worldBoundsAdd.z+=.5},t.calculateWorldBounds=function(){if(this.node){this.prevWorldBoundsSize.copy(this.worldBoundsSize),this.prevWorldBoundsCenter.copy(this.worldBounds.center),this.useCpu||(this.emitterShape===ym?!this.emitterExtents.equals(this.prevEmitterExtents):this.emitterRadius!==this.prevEmitterRadius)&&this.calculateLocalBounds();var e=this.node.getWorldTransform();this.localSpace?this.worldBoundsNoTrail.copy(this.localBounds):this.worldBoundsNoTrail.setFromTransformedAabb(this.localBounds,e),this.worldBoundsTrail[0].add(this.worldBoundsNoTrail),this.worldBoundsTrail[1].add(this.worldBoundsNoTrail);var t=this.simTimeTotal;t>=this.timeToSwitchBounds&&(this.worldBoundsTrail[0].copy(this.worldBoundsTrail[1]),this.worldBoundsTrail[1].copy(this.worldBoundsNoTrail),this.timeToSwitchBounds=t+this.lifetime),this.worldBounds.copy(this.worldBoundsTrail[0]),this.worldBoundsSize.copy(this.worldBounds.halfExtents).mulScalar(2),this.localSpace?(this.meshInstance.aabb.setFromTransformedAabb(this.worldBounds,e),this.meshInstance.mesh.aabb.setFromTransformedAabb(this.worldBounds,e)):(this.meshInstance.aabb.copy(this.worldBounds),this.meshInstance.mesh.aabb.copy(this.worldBounds)),this.meshInstance._aabbVer=1-this.meshInstance._aabbVer,this.pack8&&this.calculateBoundsMad()}},t.resetWorldBounds=function(){this.node&&(this.worldBoundsNoTrail.setFromTransformedAabb(this.localBounds,this.localSpace?St.IDENTITY:this.node.getWorldTransform()),this.worldBoundsTrail[0].copy(this.worldBoundsNoTrail),this.worldBoundsTrail[1].copy(this.worldBoundsNoTrail),this.worldBounds.copy(this.worldBoundsTrail[0]),this.worldBoundsSize.copy(this.worldBounds.halfExtents).mulScalar(2),this.prevWorldBoundsSize.copy(this.worldBoundsSize),this.prevWorldBoundsCenter.copy(this.worldBounds.center),this.simTimeTotal=0,this.timeToSwitchBounds=0)},t.calculateLocalBounds=function(){for(var e,t,n,i=Number.MAX_VALUE,a=Number.MAX_VALUE,s=Number.MAX_VALUE,r=-Number.MAX_VALUE,o=-Number.MAX_VALUE,l=-Number.MAX_VALUE,c=0,h=0,p=this.lifetime/this.precision,d=[this.qVelocity,this.qVelocity2],u=[this.qLocalVelocity,this.qLocalVelocity2],m=[0,0],f=[0,0],g=[0,0],v=[0,0],y=[0,0],_=0;_<this.precision+1;_++){for(var w=Math.min(_,this.precision-1),b=0;b<2;b++)e=u[b][3*w+0]*p+m[b],t=u[b][3*w+1]*p+f[b],n=u[b][3*w+2]*p+g[b],i=Math.min(e,i),a=Math.min(t,a),s=Math.min(n,s),r=Math.max(e,r),o=Math.max(t,o),l=Math.max(n,l),m[b]=e,f[b]=t,g[b]=n;for(var x=0;x<2;x++)y[x]+=p*Math.sqrt(d[x][3*w+0]*d[x][3*w+0]+d[x][3*w+1]*d[x][3*w+1]+d[x][3*w+2]*d[x][3*w+2]);v[0]+=this.qRadialSpeed[w]*p,v[1]+=this.qRadialSpeed2[w]*p,c=Math.max(c,Math.max(Math.abs(v[0]),Math.abs(v[1]))),h=Math.max(h,this.qScale[w])}this.emitterShape===ym?(e=.5*this.emitterExtents.x,t=.5*this.emitterExtents.y,n=.5*this.emitterExtents.z):(e=this.emitterRadius,t=this.emitterRadius,n=this.emitterRadius);var C=Math.max(y[0],y[1]);bx.x=i-h-e-c-C,bx.y=a-h-t-c-C,bx.z=s-h-n-c-C,xx.x=r+h+e+c+C,xx.y=o+h+t+c+C,xx.z=l+h+n+c+C,this.localBounds.setMinMax(bx,xx)},t.rebuild=function(){var e=this.graphicsDevice;null===this.colorMap&&(this.colorMap=this.defaultParamTexture),this.spawnBounds=this.emitterShape===ym?this.emitterExtents:this.emitterRadius,this.useCpu=this.useCpu||this.sort>dm||e.maxVertexTextures<=1||e.fragmentUniformsCount<64||e.forceCpuParticles||!e.extTextureFloat,this._destroyResources(),this.pack8=(this.pack8||!e.textureFloatRenderable)&&!this.useCpu,gx=this.useCpu||this.pack8?4:2,this.useMesh=!1,this.mesh&&(this.numParticles*this.mesh.vertexBuffer.numVertices>65535||(this.useMesh=!0)),this.numParticlesPot=at.nextPowerOfTwo(this.numParticles),this.rebuildGraphs(),this.calculateLocalBounds(),this.resetWorldBounds(),this.node&&(this.worldBounds.setFromTransformedAabb(this.localBounds,this.localSpace?St.IDENTITY:this.node.getWorldTransform()),this.worldBoundsTrail[0].copy(this.worldBounds),this.worldBoundsTrail[1].copy(this.worldBounds),this.worldBoundsSize.copy(this.worldBounds.halfExtents).mulScalar(2),this.prevWorldBoundsSize.copy(this.worldBoundsSize),this.prevWorldBoundsCenter.copy(this.worldBounds.center),this.pack8&&this.calculateBoundsMad()),this.vbToSort=new Array(this.numParticles);for(var t=0;t<this.numParticles;t++)this.vbToSort[t]=[0,0];this.particleDistance=new Float32Array(this.numParticles),this._gpuUpdater.randomize(),this.particleTex=new Float32Array(this.numParticlesPot*gx*vx);var n=null===this.node||this.localSpace?pt.ZERO:this.node.getPosition();this.emitterShape===ym&&(null===this.node||this.localSpace?_x.setTRS(pt.ZERO,Et.IDENTITY,this.spawnBounds):_x.setTRS(pt.ZERO,this.node.getRotation(),wx.copy(this.spawnBounds).mul(this.node.localScale)),yx[0]=0!==this.emitterExtents.x?this.emitterExtentsInner.x/this.emitterExtents.x:0,yx[1]=0!==this.emitterExtents.y?this.emitterExtentsInner.y/this.emitterExtents.y:0,yx[2]=0!==this.emitterExtents.z?this.emitterExtentsInner.z/this.emitterExtents.z:0);for(var i=0;i<this.numParticles;i++)this._cpuUpdater.calcSpawnPosition(this.particleTex,_x,yx,n,i),this.useCpu&&(this.particleTex[i*vx+3+2*this.numParticlesPot*vx]=1);this.particleTexStart=new Float32Array(this.numParticlesPot*gx*vx);for(var a=0;a<this.particleTexStart.length;a++)this.particleTexStart[a]=this.particleTex[a];this.useCpu||(this.pack8?(this.particleTexIN=lx(e,this.numParticlesPot,gx,this.particleTex,ti,1,!1),this.particleTexOUT=lx(e,this.numParticlesPot,gx,this.particleTex,ti,1,!1),this.particleTexStart=lx(e,this.numParticlesPot,gx,this.particleTexStart,ti,1,!1)):(this.particleTexIN=lx(e,this.numParticlesPot,gx,this.particleTex),this.particleTexOUT=lx(e,this.numParticlesPot,gx,this.particleTex),this.particleTexStart=lx(e,this.numParticlesPot,gx,this.particleTexStart)),this.rtParticleTexIN=new Vr({colorBuffer:this.particleTexIN,depth:!1}),this.rtParticleTexOUT=new Vr({colorBuffer:this.particleTexOUT,depth:!1}),this.swapTex=!1);var s=(this.localSpace?"#define LOCAL_SPACE\n":"")+Mg.particleUpdaterInitPS+(this.pack8?Mg.particleInputRgba8PS+Mg.particleOutputRgba8PS:Mg.particleInputFloatPS+Mg.particleOutputFloatPS)+(this.emitterShape===ym?Mg.particleUpdaterAABBPS:Mg.particleUpdaterSpherePS)+Mg.particleUpdaterStartPS,r=s+Mg.particleUpdaterRespawnPS+Mg.particleUpdaterEndPS,o=s+Mg.particleUpdaterNoRespawnPS+Mg.particleUpdaterEndPS,l=s+Mg.particleUpdaterOnStopPS+Mg.particleUpdaterEndPS,c=this.emitterShape+""+this.pack8+this.localSpace;this.shaderParticleUpdateRespawn=kg(e,Mg.fullscreenQuadVS,r,"fsQuad0"+c),this.shaderParticleUpdateNoRespawn=kg(e,Mg.fullscreenQuadVS,o,"fsQuad1"+c),this.shaderParticleUpdateOnStop=kg(e,Mg.fullscreenQuadVS,l,"fsQuad2"+c),this.numParticleVerts=this.useMesh?this.mesh.vertexBuffer.numVertices:4,this.numParticleIndices=this.useMesh?this.mesh.indexBuffer[0].numIndices:6,this._allocate(this.numParticles);var h=new og(e);h.vertexBuffer=this.vertexBuffer,h.indexBuffer[0]=this.indexBuffer,h.primitive[0].type=Ri,h.primitive[0].base=0,h.primitive[0].count=this.numParticles*this.numParticleIndices,h.primitive[0].indexed=!0,this.material=new tv,this.material.name=this.node.name,this.material.cull=An,this.material.alphaWrite=!1,this.material.blendType=this.blendType,this.material.depthWrite=this.depthWrite,this.material.emitter=this,this.regenShader(),this.resetMaterial();var p=!this.meshInstance||this.meshInstance.visible;this.meshInstance=new Dv(h,this.material,this.node),this.meshInstance.pick=!1,this.meshInstance.updateKey(),this.meshInstance.cull=!0,this.meshInstance._noDepthDrawGl1=!0,this.localSpace?this.meshInstance.aabb.setFromTransformedAabb(this.worldBounds,this.node.getWorldTransform()):this.meshInstance.aabb.copy(this.worldBounds),this.meshInstance._updateAabb=!1,this.meshInstance.visible=p,this._initializeTextures(),this.resetTime(),this.addTime(0,!1),this.preWarm&&this.prewarm(this.lifetime)},t._isAnimated=function(){return this.animNumFrames>=1&&(this.animTilesX>1||this.animTilesY>1)&&(this.colorMap&&this.colorMap!==this.defaultParamTexture||this.normalMap)},t.rebuildGraphs=function(){var e=this.precision,t=this.graphicsDevice;this.qLocalVelocity=this.localVelocityGraph.quantize(e),this.qVelocity=this.velocityGraph.quantize(e),this.qColor=this.colorGraph.quantizeClamped(e,0,1),this.qRotSpeed=this.rotationSpeedGraph.quantize(e),this.qScale=this.scaleGraph.quantize(e),this.qAlpha=this.alphaGraph.quantize(e),this.qRadialSpeed=this.radialSpeedGraph.quantize(e),this.qLocalVelocity2=this.localVelocityGraph2.quantize(e),this.qVelocity2=this.velocityGraph2.quantize(e),this.qColor2=this.colorGraph2.quantizeClamped(e,0,1),this.qRotSpeed2=this.rotationSpeedGraph2.quantize(e),this.qScale2=this.scaleGraph2.quantize(e),this.qAlpha2=this.alphaGraph2.quantize(e),this.qRadialSpeed2=this.radialSpeedGraph2.quantize(e);for(var n=0;n<e;n++)this.qRotSpeed[n]*=at.DEG_TO_RAD,this.qRotSpeed2[n]*=at.DEG_TO_RAD;if(this.localVelocityUMax=new Float32Array(3),this.velocityUMax=new Float32Array(3),this.colorUMax=new Float32Array(3),this.rotSpeedUMax=[0],this.scaleUMax=[0],this.alphaUMax=[0],this.radialSpeedUMax=[0],this.qLocalVelocityDiv=Rx(this.qLocalVelocity,this.qLocalVelocity2,this.localVelocityUMax),this.qVelocityDiv=Rx(this.qVelocity,this.qVelocity2,this.velocityUMax),this.qColorDiv=Rx(this.qColor,this.qColor2,this.colorUMax),this.qRotSpeedDiv=Rx(this.qRotSpeed,this.qRotSpeed2,this.rotSpeedUMax),this.qScaleDiv=Rx(this.qScale,this.qScale2,this.scaleUMax),this.qAlphaDiv=Rx(this.qAlpha,this.qAlpha2,this.alphaUMax),this.qRadialSpeedDiv=Rx(this.qRadialSpeed,this.qRadialSpeed2,this.radialSpeedUMax),this.pack8){var i=[0,0,0];Ox(this.qVelocity,i);var a=[0,0,0];Ox(this.qVelocity2,a);var s=[0,0,0];Ox(this.qLocalVelocity,s);var r=[0,0,0];Ox(this.qLocalVelocity2,r);var o=[0];Ox(this.qRadialSpeed,o);var l=[0];Ox(this.qRadialSpeed2,l);var c=Math.max(i[0],a[0]);c=Math.max(c,i[1]),c=Math.max(c,a[1]),c=Math.max(c,i[2]),c=Math.max(c,a[2]);var h=Math.max(s[0],r[0]);h=Math.max(h,s[1]),h=Math.max(h,r[1]),h=Math.max(h,s[2]),h=Math.max(h,r[2]);var p=Math.max(o[0],l[0]);this.maxVel=c+h+p}this.useCpu||(this.internalTex0=lx(t,e,1,Ex(this.qLocalVelocity,this.qLocalVelocityDiv)),this.internalTex1=lx(t,e,1,Ex(this.qVelocity,this.qVelocityDiv)),this.internalTex2=lx(t,e,1,Ax(this.qRotSpeed,this.qScale,this.qScaleDiv,this.qRotSpeedDiv,this.qAlphaDiv)),this.internalTex3=lx(t,e,1,Lx(this.qRadialSpeed,this.qRadialSpeedDiv))),this.colorParam=lx(t,e,1,Tx(this.qColor,this.qAlpha),ti,1,!0)},t._initializeTextures=function(){this.colorMap&&(this.material.setParameter("colorMap",this.colorMap),this.lighting&&this.normalMap&&this.material.setParameter("normalMap",this.normalMap))},t.regenShader=function(){var e=Og(this.graphicsDevice);e.register("particle",Rb);var t=null!==this.normalMap;this.normalOption=0,this.lighting&&(this.normalOption=t?2:1),this.material.getShaderVariant=function(t,n,i,a,s,r,o,l){this.emitter.scene&&this.emitter.camera!==this.emitter.scene._activeCamera&&(this.emitter.camera=this.emitter.scene._activeCamera,this.emitter.onChangeCamera());var c=this.emitter.inTools,h=new Tg(o,l);return e.getProgram("particle",{pass:xf,useCpu:this.emitter.useCpu,normal:this.emitter.normalOption,halflambert:this.emitter.halfLambert,stretch:this.emitter.stretch,alignToMotion:this.emitter.alignToMotion,soft:this.emitter.depthSoftening,mesh:this.emitter.useMesh,gamma:this.emitter.scene?this.emitter.scene.gammaCorrection:0,toneMap:this.emitter.scene?this.emitter.scene.toneMapping:0,fog:this.emitter.scene&&!this.emitter.noFog?this.emitter.scene.fog:"none",wrap:this.emitter.wrap&&this.emitter.wrapBounds,localSpace:this.emitter.localSpace,screenSpace:!c&&this.emitter.screenSpace,blend:this.blendType,animTex:this.emitter._isAnimated(),animTexLoop:this.emitter.animLoop,pack8:this.emitter.pack8,customFace:this.emitter.orientation!==wm},h)},this.material.shader=this.material.getShaderVariant()},t.resetMaterial=function(){var e=this.material;e.setParameter("stretch",this.stretch),this._isAnimated()&&(e.setParameter("animTexTilesParams",this.animTilesParams),e.setParameter("animTexParams",this.animParams),e.setParameter("animTexIndexParams",this.animIndexParams)),e.setParameter("colorMult",this.intensity),this.useCpu||(e.setParameter("internalTex0",this.internalTex0),e.setParameter("internalTex1",this.internalTex1),e.setParameter("internalTex2",this.internalTex2),e.setParameter("internalTex3",this.internalTex3)),e.setParameter("colorParam",this.colorParam),e.setParameter("numParticles",this.numParticles),e.setParameter("numParticlesPot",this.numParticlesPot),e.setParameter("lifetime",this.lifetime),e.setParameter("rate",this.rate),e.setParameter("rateDiv",this.rate2-this.rate),e.setParameter("seed",this.seed),e.setParameter("scaleDivMult",this.scaleUMax[0]),e.setParameter("alphaDivMult",this.alphaUMax[0]),e.setParameter("radialSpeedDivMult",this.radialSpeedUMax[0]),e.setParameter("graphNumSamples",this.precision),e.setParameter("graphSampleSize",1/this.precision),e.setParameter("emitterScale",new Float32Array([1,1,1])),this.pack8&&(this._gpuUpdater._setInputBounds(),e.setParameter("inBoundsSize",this._gpuUpdater.inBoundsSizeUniform),e.setParameter("inBoundsCenter",this._gpuUpdater.inBoundsCenterUniform),e.setParameter("maxVel",this.maxVel)),this.wrap&&this.wrapBounds&&(this.wrapBoundsUniform[0]=this.wrapBounds.x,this.wrapBoundsUniform[1]=this.wrapBounds.y,this.wrapBoundsUniform[2]=this.wrapBounds.z,e.setParameter("wrapBounds",this.wrapBoundsUniform)),this.colorMap&&e.setParameter("colorMap",this.colorMap),this.lighting&&this.normalMap&&e.setParameter("normalMap",this.normalMap),this.depthSoftening>0&&e.setParameter("softening",1/(this.depthSoftening*this.depthSoftening*100)),this.stretch>0&&(e.cull=An),this._compParticleFaceParams()},t._compParticleFaceParams=function(){var e,t;if(this.orientation===wm)e=new Float32Array([1,0,0]),t=new Float32Array([0,0,1]);else{var n;n=this.orientation===bm?this.particleNormal.normalize():(null===this.node?St.IDENTITY:this.node.getWorldTransform()).transformVector(this.particleNormal).normalize();var i=new pt(1,0,0);1===Math.abs(i.dot(n))&&i.set(0,0,1);var a=(new pt).cross(n,i).normalize();i.cross(a,n).normalize(),e=new Float32Array([i.x,i.y,i.z]),t=new Float32Array([a.x,a.y,a.z])}this.material.setParameter("faceTangent",e),this.material.setParameter("faceBinorm",t)},t._allocate=function(e){var t=e*this.numParticleVerts,n=e*this.numParticleIndices;if(void 0===this.vertexBuffer||this.vertexBuffer.getNumVertices()!==t){if(this.useCpu){var i=[{semantic:Ji,components:4,type:ts},{semantic:$i,components:4,type:ts},{semantic:ea,components:4,type:ts},{semantic:ta,components:1,type:ts},{semantic:na,components:this.useMesh?4:2,type:ts}],a=new Fr(this.graphicsDevice,i);this.vertexBuffer=new Mr(this.graphicsDevice,a,t,fn),this.indexBuffer=new lc(this.graphicsDevice,Xn,n)}else{var s=[{semantic:Ji,components:4,type:ts}];this.useMesh&&s.push({semantic:$i,components:2,type:ts});var r=new Fr(this.graphicsDevice,s);this.vertexBuffer=new Mr(this.graphicsDevice,r,t,fn),this.indexBuffer=new lc(this.graphicsDevice,Xn,n)}var o,l,c,h=new Float32Array(this.vertexBuffer.lock());if(this.useMesh){l=(o=new Float32Array(this.mesh.vertexBuffer.lock())).length/this.mesh.vertexBuffer.numVertices;for(var p=0;p<this.mesh.vertexBuffer.format.elements.length;p++)if(this.mesh.vertexBuffer.format.elements[p].name===Gi){c=this.mesh.vertexBuffer.format.elements[p].offset/4;break}}for(var d=0;d<t;d++){var u=Math.floor(d/this.numParticleVerts);if(this.useMesh){var m=d%this.numParticleVerts;h[6*d]=o[m*l],h[6*d+1]=o[m*l+1],h[6*d+2]=o[m*l+2],h[6*d+3]=u,h[6*d+4]=o[m*l+c+0],h[6*d+5]=1-o[m*l+c+1]}else{var f=d%4;h[4*d]=ox[f][0],h[4*d+1]=ox[f][1],h[4*d+2]=0,h[4*d+3]=u}}this.useCpu&&(this.vbCPU=new Float32Array(h),this.vbOld=new Float32Array(this.vbCPU.length)),this.vertexBuffer.unlock(),this.useMesh&&this.mesh.vertexBuffer.unlock();var g=0,v=new Uint16Array(this.indexBuffer.lock());this.useMesh&&(o=new Uint16Array(this.mesh.indexBuffer[0].lock()));for(var y=0;y<e;y++)if(this.useMesh)for(var _=0;_<this.numParticleIndices;_++)v[y*this.numParticleIndices+_]=o[_]+y*this.numParticleVerts;else{var w=4*y;v[g++]=w,v[g++]=w+1,v[g++]=w+2,v[g++]=w,v[g++]=w+2,v[g++]=w+3}this.indexBuffer.unlock(),this.useMesh&&this.mesh.indexBuffer[0].unlock()}},t.reset=function(){if(this.beenReset=!0,this.seed=Math.random(),this.material.setParameter("seed",this.seed),this.useCpu)for(var e=0;e<this.particleTexStart.length;e++)this.particleTex[e]=this.particleTexStart[e];else this._initializeTextures();this.resetWorldBounds(),this.resetTime();var t=this.loop;this.loop=!0,this.addTime(0,!1),this.loop=t,this.preWarm&&this.prewarm(this.lifetime)},t.prewarm=function(e){for(var t=e/this.lifetime,n=Math.min(Math.floor(t*this.precision),this.precision),i=e/n,a=0;a<n;a++)this.addTime(i,!1)},t.resetTime=function(){this.endTime=Mx(this)},t.finishFrame=function(){this.useCpu&&this.vertexBuffer.unlock()},t.addTime=function(e,t){var n,i=this.graphicsDevice;if(this.simTimeTotal+=e,this.calculateWorldBounds(),this._isAnimated()){var a=this.animTilesParams;a[0]=1/this.animTilesX,a[1]=1/this.animTilesY;var s=this.animParams;s[0]=this.animStartFrame,s[1]=this.animNumFrames*this.animSpeed,s[2]=this.animNumFrames-1,s[3]=this.animNumAnimations-1;var r=this.animIndexParams;r[0]=this.animIndex,r[1]=this.randomizeAnimIndex}this.scene&&this.camera!==this.scene._activeCamera&&(this.camera=this.scene._activeCamera,this.onChangeCamera()),this.emitterShape===ym&&(yx[0]=0!==this.emitterExtents.x?this.emitterExtentsInner.x/this.emitterExtents.x:0,yx[1]=0!==this.emitterExtents.y?this.emitterExtentsInner.y/this.emitterExtents.y:0,yx[2]=0!==this.emitterExtents.z?this.emitterExtentsInner.z/this.emitterExtents.z:0,null===this.meshInstance.node?_x.setTRS(pt.ZERO,Et.IDENTITY,this.emitterExtents):_x.setTRS(pt.ZERO,this.meshInstance.node.getRotation(),wx.copy(this.emitterExtents).mul(this.meshInstance.node.localScale)));var o=null===this.meshInstance.node?pt.ONE:this.meshInstance.node.localScale;if(this.emitterScaleUniform[0]=o.x,this.emitterScaleUniform[1]=o.y,this.emitterScaleUniform[2]=o.z,this.material.setParameter("emitterScale",this.emitterScaleUniform),this.localSpace&&this.meshInstance.node&&(n=this.meshInstance.node.getPosition(),this.emitterPosUniform[0]=n.x,this.emitterPosUniform[1]=n.y,this.emitterPosUniform[2]=n.z,this.material.setParameter("emitterPos",this.emitterPosUniform)),this._compParticleFaceParams(),this.useCpu){var l=new Float32Array(this.vertexBuffer.lock());this._cpuUpdater.update(l,this.vbToSort,this.particleTex,_x,yx,n,e,t)}else this._gpuUpdater.update(i,_x,yx,e,t);this.loop||Date.now()>this.endTime&&(this.onFinished&&this.onFinished(),this.meshInstance.visible=!1),this.meshInstance&&(this.meshInstance.drawOrder=this.drawOrder)},t._destroyResources=function(){this.particleTexIN&&(this.particleTexIN.destroy(),this.particleTexIN=null),this.particleTexOUT&&(this.particleTexOUT.destroy(),this.particleTexOUT=null),this.particleTexStart&&this.particleTexStart.destroy&&(this.particleTexStart.destroy(),this.particleTexStart=null),this.rtParticleTexIN&&(this.rtParticleTexIN.destroy(),this.rtParticleTexIN=null),this.rtParticleTexOUT&&(this.rtParticleTexOUT.destroy(),this.rtParticleTexOUT=null),this.internalTex0&&(this.internalTex0.destroy(),this.internalTex0=null),this.internalTex1&&(this.internalTex1.destroy(),this.internalTex1=null),this.internalTex2&&(this.internalTex2.destroy(),this.internalTex2=null),this.internalTex3&&(this.internalTex3.destroy(),this.internalTex3=null),this.colorParam&&(this.colorParam.destroy(),this.colorParam=null),this.vertexBuffer&&(this.vertexBuffer.destroy(),this.vertexBuffer=void 0),this.indexBuffer&&(this.indexBuffer.destroy(),this.indexBuffer=void 0),this.material&&(this.material.destroy(),this.material=null)},t.destroy=function(){this.camera=null,this._destroyResources()},q(e,[{key:"defaultParamTexture",get:function(){var e=this;return Dx.get(this.graphicsDevice,(function(){for(var t=16,n=.5*t+.5,i=new Float32Array(t*t*4),a=0;a<t;a++)for(var s=0;s<t;s++){var r=s+1-n,o=a+1-n,l=cx(1-cx(Math.sqrt(r*r+o*o)/t)-.5),c=a*t+s;i[4*c]=1,i[4*c+1]=1,i[4*c+2]=1,i[4*c+3]=l}var h=lx(e.graphicsDevice,t,t,i,ti,1,!0);return h.minFilter=In,h.magFilter=In,h}))}}]),e}(),Fx=function(e){function t(){return e.apply(this,arguments)||this}Z(t,e);var n=t.prototype;return n.generateKey=function(e){return"cubemap"===e.type?"skybox-"+e.type+"-"+e.encoding+"-"+e.useIntensity+"-"+e.gamma+"-"+e.toneMapping+"-"+e.fixSeams+"-"+e.mip:"skybox-"+e.type+"-"+e.encoding+"-"+e.useIntensity+"-"+e.gamma+"-"+e.toneMapping},n.createShaderDefinition=function(e,t){var n="";if("cubemap"===t.type){var i=[128,64,16,8,4,2];n+=t.mip?Mg.fixCubemapSeamsStretchPS:Mg.fixCubemapSeamsNonePS,n+=t.useIntensity?Mg.envMultiplyPS:Mg.envConstPS,n+=Mg.decodePS,n+=Rg.gammaCode(t.gamma),n+=Rg.tonemapCode(t.toneMapping),n+=Mg.skyboxHDRPS.replace(/\$DECODE/g,hy.decodeFunc(t.encoding)).replace(/\$FIXCONST/g,1-1/i[t.mip]+"")}else n+=t.useIntensity?Mg.envMultiplyPS:Mg.envConstPS,n+=Mg.decodePS,n+=Rg.gammaCode(t.gamma),n+=Rg.tonemapCode(t.toneMapping),n+=Mg.sphericalPS,n+=Mg.envAtlasPS,n+=Mg.skyboxEnvPS.replace(/\$DECODE/g,hy.decodeFunc(t.encoding));return Vl.createDefinition(e,{name:"SkyboxShader",attributes:{aPosition:Fi},vertexCode:Mg.skyboxVS,fragmentCode:n})},t}(Rg),Bx=new Fx,Nx=function(){function e(e,t,n){this.meshInstance=void 0;var i=new tv;i.getShaderVariant=function(i,a,s,r,o,l,c,h){var p={pass:o,encoding:n.encoding,useIntensity:1!==t.skyboxIntensity||t.physicalUnits,gamma:o===Cf?t.gammaCorrection?Vm:Nm:t.gammaCorrection,toneMapping:o===Cf?Hm:t.toneMapping};n.cubemap?(p.type="cubemap",p.mip=n.fixCubemapSeams?t.skyboxMip:0,p.fixSeams=n.fixCubemapSeams):p.type="envAtlas";var d=new Tg(c,h),u=Og(e);return u.register("skybox",Bx),u.getProgram("skybox",p,d)},n.cubemap?i.setParameter("texture_cubeMap",n):(i.setParameter("texture_envAtlas",n),i.setParameter("mipLevel",t._skyboxMip)),i.cull=Mn,i.depthWrite=!1;var a=t.layers.getLayerById(Vu);if(a){var s=new Cv("Skybox"),r=bg(e),o=new Dv(r,i,s);this.meshInstance=o,o.cull=!1,o._noDepthDrawGl1=!0,o.pick=!1,a.addMeshInstances([o]),this.skyLayer=a}}return e.prototype.destroy=function(){this.meshInstance&&(this.skyLayer&&this.skyLayer.removeMeshInstances([this.meshInstance]),this.meshInstance.destroy(),this.meshInstance=null)},e}(),Ux=new Cv;Ux.worldTransform=St.IDENTITY,Ux._dirtyWorld=Ux._dirtyNormal=!1;var zx=function(){function e(e,t,n){this.material=t,this.layer=n,this.positions=[],this.colors=[],this.mesh=new og(e),this.meshInstance=null}var t=e.prototype;return t.addLines=function(e,t){for(var n=this.positions,i=e.length,a=0;a<i;a++){var s=e[a];n.push(s.x,s.y,s.z)}var r=this.colors;if(t.length)for(var o=0;o<i;o++){var l=t[o];r.push(l.r,l.g,l.b,l.a)}else for(var c=0;c<i;c++)r.push(t.r,t.g,t.b,t.a)},t.addLinesArrays=function(e,t){for(var n=this.positions,i=0;i<e.length;i+=3)n.push(e[i],e[i+1],e[i+2]);var a=this.colors;if(t.length)for(var s=0;s<t.length;s+=4)a.push(t[s],t[s+1],t[s+2],t[s+3]);else for(var r=e.length/3,o=0;o<r;o++)a.push(t.r,t.g,t.b,t.a)},t.onPreRender=function(e,t){this.positions.length>0&&this.material.transparent===t&&(this.mesh.setPositions(this.positions),this.mesh.setColors(this.colors),this.mesh.update(Pi,!1),this.meshInstance||(this.meshInstance=new Dv(this.mesh,this.material,Ux)),this.positions.length=0,this.colors.length=0,e.push(this.meshInstance))},e}(),Vx=function(){function e(e){this.device=e,this.map=new Map}var t=e.prototype;return t.getBatch=function(e,t){var n=this.map.get(e);return n||(n=new zx(this.device,e,t),this.map.set(e,n)),n},t.onPreRender=function(e,t){this.map.forEach((function(n){n.onPreRender(e,t)}))},e}(),Hx=[],Gx=function(){function e(e){this.device=e,this.quadMesh=null,this.textureShader=null,this.depthTextureShader=null,this.cubeLocalPos=null,this.cubeWorldPos=null,this.batchesMap=new Map,this.allBatches=new Set,this.updatedLayers=new Set,this._materialDepth=null,this._materialNoDepth=null,this.layerMeshInstances=new Map}var t=e.prototype;return t.createMaterial=function(e){var t=new nv;return t.vertexColors=!0,t.blendType=wu,t.depthTest=e,t.update(),t},t.getBatch=function(e,t){var n=this.batchesMap.get(e);n||(n=new Vx(this.device),this.batchesMap.set(e,n)),this.allBatches.add(n);var i=t?this.materialDepth:this.materialNoDepth;return n.getBatch(i,e)},t.getShader=function(e,t){if(!this[e]){var n="\n\t\t\t\tattribute vec2 vertex_position;\n\t\t\t\tuniform mat4 matrix_model;\n\t\t\t\tvarying vec2 uv0;\n\t\t\t\tvoid main(void) {\n\t\t\t\t\tgl_Position = matrix_model * vec4(vertex_position, 0, 1);\n\t\t\t\t\tuv0 = vertex_position.xy + 0.5;\n\t\t\t\t}\n\t\t\t";this[e]=kg(this.device,n,t,"DebugShader:"+e)}return this[e]},t.getTextureShader=function(){return this.getShader("textureShader","\n\t\t\tvarying vec2 uv0;\n\t\t\tuniform sampler2D colorMap;\n\t\t\tvoid main (void) {\n\t\t\t\tgl_FragColor = vec4(texture2D(colorMap, uv0).xyz, 1);\n\t\t\t}\n\t\t")},t.getUnfilterableTextureShader=function(){return this.getShader("textureShaderUnfilterable","\n\t\t\tvarying vec2 uv0;\n\t\t\tuniform highp sampler2D colorMap;\n\t\t\tvoid main (void) {\n\t\t\t\tivec2 uv = ivec2(uv0 * textureSize(colorMap, 0));\n\t\t\t\tgl_FragColor = vec4(texelFetch(colorMap, uv, 0).xyz, 1);\n\t\t\t}\n\t\t")},t.getDepthTextureShader=function(){return this.getShader("depthTextureShader","\n\t\t\t"+Mg.screenDepthPS+"\n\t\t\tvarying vec2 uv0;\n\t\t\tvoid main() {\n\t\t\t\tfloat depth = getLinearScreenDepth(uv0) * camera_params.x;\n\t\t\t\tgl_FragColor = vec4(vec3(depth), 1.0);\n\t\t\t}\n\t\t")},t.getQuadMesh=function(){return this.quadMesh||(this.quadMesh=new og(this.device),this.quadMesh.setPositions([-.5,-.5,0,.5,-.5,0,-.5,.5,0,.5,.5,0]),this.quadMesh.update(Di)),this.quadMesh},t.drawMesh=function(e,t,n,i,a){if(!i){var s=this.getGraphNode(t);i=new Dv(n,e,s)}var r=this.layerMeshInstances.get(a);r||(r=[],this.layerMeshInstances.set(a,r)),r.push(i)},t.drawWireAlignedBox=function(e,t,n,i,a){Hx.push(e.x,e.y,e.z,e.x,t.y,e.z,e.x,t.y,e.z,t.x,t.y,e.z,t.x,t.y,e.z,t.x,e.y,e.z,t.x,e.y,e.z,e.x,e.y,e.z,e.x,e.y,t.z,e.x,t.y,t.z,e.x,t.y,t.z,t.x,t.y,t.z,t.x,t.y,t.z,t.x,e.y,t.z,t.x,e.y,t.z,e.x,e.y,t.z,e.x,e.y,e.z,e.x,e.y,t.z,e.x,t.y,e.z,e.x,t.y,t.z,t.x,t.y,e.z,t.x,t.y,t.z,t.x,e.y,e.z,t.x,e.y,t.z),this.getBatch(a,i).addLinesArrays(Hx,n),Hx.length=0},t.drawWireSphere=function(e,t,n,i,a,s){for(var r=2*Math.PI/i,o=0,l=0;l<i;l++){var c=Math.sin(o),h=Math.cos(o);o+=r;var p=Math.sin(o),d=Math.cos(o);Hx.push(e.x+t*c,e.y,e.z+t*h),Hx.push(e.x+t*p,e.y,e.z+t*d),Hx.push(e.x+t*c,e.y+t*h,e.z),Hx.push(e.x+t*p,e.y+t*d,e.z),Hx.push(e.x,e.y+t*c,e.z+t*h),Hx.push(e.x,e.y+t*p,e.z+t*d)}this.getBatch(s,a).addLinesArrays(Hx,n),Hx.length=0},t.getGraphNode=function(e){var t=new Cv("ImmediateDebug");return t.worldTransform=e,t._dirtyWorld=t._dirtyNormal=!1,t},t.onPreRenderLayer=function(e,t,n){if(this.batchesMap.forEach((function(i,a){a===e&&i.onPreRender(t,n)})),!this.updatedLayers.has(e)){this.updatedLayers.add(e);var i=this.layerMeshInstances.get(e);if(i){for(var a=0;a<i.length;a++)t.push(i[a]);i.length=0}}},t.onPostRender=function(){this.allBatches.clear(),this.updatedLayers.clear()},q(e,[{key:"materialDepth",get:function(){return this._materialDepth||(this._materialDepth=this.createMaterial(!0)),this._materialDepth}},{key:"materialNoDepth",get:function(){return this._materialNoDepth||(this._materialNoDepth=this.createMaterial(!1)),this._materialNoDepth}}]),e}(),Wx=function(e){function t(t){var n;return(n=e.call(this)||this).ambientBake=!1,n.ambientBakeOcclusionBrightness=0,n.ambientBakeOcclusionContrast=0,n.ambientLight=new st(0,0,0),n.ambientLuminance=0,n.exposure=1,n.fogColor=new st(0,0,0),n.fogDensity=0,n.fogEnd=1e3,n.fogStart=1,n.lightmapSizeMultiplier=1,n.lightmapMaxResolution=2048,n.lightmapMode=Hf,n.lightmapFilterEnabled=!1,n.lightmapHDR=!1,n.root=null,n.sky=null,n.physicalUnits=!1,n.device=t||ig.get(),n._gravity=new pt(0,-9.8,0),n._layers=null,n._fog=Mu,n._gammaCorrection=Um,n._toneMapping=0,n._skyboxCubeMap=null,n._prefilteredCubemaps=[],n._envAtlas=null,n._internalEnvAtlas=null,n._skyboxIntensity=1,n._skyboxLuminance=0,n._skyboxMip=0,n._skyboxRotationShaderInclude=!1,n._skyboxRotation=new Et,n._skyboxRotationMat3=new ut,n._skyboxRotationMat4=new St,n._ambientBakeNumSamples=1,n._ambientBakeSpherePart=.4,n._lightmapFilterRange=10,n._lightmapFilterSmoothness=.2,n._clusteredLightingEnabled=!0,n._lightingParams=new Eb(n.device.supportsAreaLights,n.device.maxTextureSize,(function(){n.updateShaders=!0})),n._stats={meshInstances:0,lights:0,dynamicLights:0,bakedLights:0,updateShadersTime:0},n.updateShaders=!0,n._shaderVersion=0,n.immediate=new Gx(n.device),n}Z(t,e);var n=t.prototype;return n.destroy=function(){this._resetSky(),this.root=null,this.off()},n.drawLine=function(e,t,n,i,a){void 0===n&&(n=st.WHITE),void 0===i&&(i=!0),void 0===a&&(a=this.defaultDrawLayer),this.immediate.getBatch(a,i).addLines([e,t],[n,n])},n.drawLines=function(e,t,n,i){void 0===n&&(n=!0),void 0===i&&(i=this.defaultDrawLayer),this.immediate.getBatch(i,n).addLines(e,t)},n.drawLineArrays=function(e,t,n,i){void 0===n&&(n=!0),void 0===i&&(i=this.defaultDrawLayer),this.immediate.getBatch(i,n).addLinesArrays(e,t)},n.applySettings=function(e){var t,n,i,a,s=this,r=e.physics,o=e.render;this._gravity.set(r.gravity[0],r.gravity[1],r.gravity[2]),this.ambientLight.set(o.global_ambient[0],o.global_ambient[1],o.global_ambient[2]),this.ambientLuminance=o.ambientLuminance,this._fog=o.fog,this.fogColor.set(o.fog_color[0],o.fog_color[1],o.fog_color[2]),this.fogStart=o.fog_start,this.fogEnd=o.fog_end,this.fogDensity=o.fog_density,this._gammaCorrection=o.gamma_correction,this._toneMapping=o.tonemapping,this.lightmapSizeMultiplier=o.lightmapSizeMultiplier,this.lightmapMaxResolution=o.lightmapMaxResolution,this.lightmapMode=o.lightmapMode,this.exposure=o.exposure,this._skyboxIntensity=null!=(t=o.skyboxIntensity)?t:1,this._skyboxLuminance=null!=(n=o.skyboxLuminance)?n:2e4,this._skyboxMip=null!=(i=o.skyboxMip)?i:0,o.skyboxRotation&&(this.skyboxRotation=(new Et).setFromEulerAngles(o.skyboxRotation[0],o.skyboxRotation[1],o.skyboxRotation[2])),this.clusteredLightingEnabled=null!=(a=o.clusteredLightingEnabled)&&a,this.lighting.applySettings(o),["lightmapFilterEnabled","lightmapFilterRange","lightmapFilterSmoothness","ambientBake","ambientBakeNumSamples","ambientBakeSpherePart","ambientBakeOcclusionBrightness","ambientBakeOcclusionContrast"].forEach((function(e){o.hasOwnProperty(e)&&(s[e]=o[e])})),this._resetSky()},n._getSkyboxTex=function(){var e=this._prefilteredCubemaps;return this._skyboxMip?e[[0,1,3,4,5,6][this._skyboxMip]]||this._envAtlas||e[0]||this._skyboxCubeMap:this._skyboxCubeMap||e[0]||this._envAtlas},n._updateSky=function(e){if(!this.sky){var t=this._getSkyboxTex();t&&(this.sky=new Nx(e,this,t),this.fire("set:skybox",t))}},n._resetSky=function(){var e;null==(e=this.sky)||e.destroy(),this.sky=null,this.updateShaders=!0},n.setSkybox=function(e){e?(this.skybox=e[0]||null,e[1]&&!e[1].cubemap?this.envAtlas=e[1]:this.prefilteredCubemaps=e.slice(1)):(this.skybox=null,this.envAtlas=null)},q(t,[{key:"defaultDrawLayer",get:function(){return this.layers.getLayerById(Hu)}},{key:"ambientBakeNumSamples",get:function(){return this._ambientBakeNumSamples},set:function(e){this._ambientBakeNumSamples=at.clamp(Math.floor(e),1,255)}},{key:"ambientBakeSpherePart",get:function(){return this._ambientBakeSpherePart},set:function(e){this._ambientBakeSpherePart=at.clamp(e,.001,1)}},{key:"clusteredLightingEnabled",get:function(){return this._clusteredLightingEnabled},set:function(e){this.device.isWebGPU&&!e||(this._clusteredLightingEnabled||!e?this._clusteredLightingEnabled=e:console.error("Turning on disabled clustered lighting is not currently supported"))}},{key:"envAtlas",get:function(){return this._envAtlas},set:function(e){e!==this._envAtlas&&(this._envAtlas=e,e&&(e.addressU=Yt,e.addressV=Yt,e.minFilter=In,e.magFilter=In,e.mipmaps=!1),this._prefilteredCubemaps=[],this._internalEnvAtlas&&(this._internalEnvAtlas.destroy(),this._internalEnvAtlas=null),this._resetSky())}},{key:"fog",get:function(){return this._fog},set:function(e){e!==this._fog&&(this._fog=e,this.updateShaders=!0)}},{key:"gammaCorrection",get:function(){return this._gammaCorrection},set:function(e){e!==this._gammaCorrection&&(this._gammaCorrection=e,this.updateShaders=!0)}},{key:"layers",get:function(){return this._layers},set:function(e){var t=this._layers;this._layers=e,this.fire("set:layers",t,e)}},{key:"lighting",get:function(){return this._lightingParams}},{key:"lightmapFilterRange",get:function(){return this._lightmapFilterRange},set:function(e){this._lightmapFilterRange=Math.max(e,.001)}},{key:"lightmapFilterSmoothness",get:function(){return this._lightmapFilterSmoothness},set:function(e){this._lightmapFilterSmoothness=Math.max(e,.001)}},{key:"prefilteredCubemaps",get:function(){return this._prefilteredCubemaps},set:function(e){e=e||[];var t=this._prefilteredCubemaps,n=t.length!==e.length||t.some((function(t,n){return t!==e[n]}));if(n){var i=6===e.length&&e.every((function(e){return!!e}));i?(this._internalEnvAtlas=ww.generatePrefilteredAtlas(e,{target:this._internalEnvAtlas}),this._envAtlas=this._internalEnvAtlas):(this._internalEnvAtlas&&(this._internalEnvAtlas.destroy(),this._internalEnvAtlas=null),this._envAtlas=null),this._prefilteredCubemaps=e.slice(),this._resetSky()}}},{key:"skybox",get:function(){return this._skyboxCubeMap},set:function(e){e!==this._skyboxCubeMap&&(this._skyboxCubeMap=e,this._resetSky())}},{key:"skyboxIntensity",get:function(){return this._skyboxIntensity},set:function(e){e!==this._skyboxIntensity&&(this._skyboxIntensity=e,this._resetSky())}},{key:"skyboxLuminance",get:function(){return this._skyboxLuminance},set:function(e){e!==this._skyboxLuminance&&(this._skyboxLuminance=e,this._resetSky())}},{key:"skyboxMip",get:function(){return this._skyboxMip},set:function(e){e!==this._skyboxMip&&(this._skyboxMip=e,this._resetSky())}},{key:"skyboxRotation",get:function(){return this._skyboxRotation},set:function(e){if(!this._skyboxRotation.equals(e)){var t=e.equals(Et.IDENTITY);this._skyboxRotation.copy(e),t?this._skyboxRotationMat3.setIdentity():(this._skyboxRotationMat4.setTRS(pt.ZERO,e,pt.ONE),this._skyboxRotationMat3.invertMat4(this._skyboxRotationMat4)),this._skyboxRotationShaderInclude||t||(this._skyboxRotationShaderInclude=!0,this._resetSky())}}},{key:"toneMapping",get:function(){return this._toneMapping},set:function(e){e!==this._toneMapping&&(this._toneMapping=e,this.updateShaders=!0)}},{key:"lightmapPixelFormat",get:function(){return this.lightmapHDR&&this.device.getHdrFormat(!1,!0,!1,!0)||ti}}]),t}(re),jx=function(e,t,n){this.device=e,this.inverseBindPose=t,this.boneNames=n},Xx=[0,0,1,0,0,1,0,0,1,0,0,1],Yx=[0,1,3,2,3,1],qx=function(e){function t(t,n){var i;return(i=e.call(this)||this)._device=t,i._pixelsPerUnit=n&&void 0!==n.pixelsPerUnit?n.pixelsPerUnit:1,i._renderMode=n&&void 0!==n.renderMode?n.renderMode:Nf,i._atlas=n&&void 0!==n.atlas?n.atlas:null,i._frameKeys=n&&void 0!==n.frameKeys?n.frameKeys:null,i._meshes=[],i._updatingProperties=!1,i._meshesDirty=!1,i._atlas&&i._frameKeys&&i._createMeshes(),i}Z(t,e);var n=t.prototype;return n._createMeshes=function(){for(var e=this._meshes.length,t=0;t<e;t++){var n=this._meshes[t];n&&n.destroy()}var i=this._frameKeys.length;this._meshes=new Array(i);for(var a=this.renderMode===Uf||this._renderMode===zf?this._create9SliceMesh:this._createSimpleMesh,s=0;s<i;s++){var r=this._atlas.frames[this._frameKeys[s]];this._meshes[s]=r?a.call(this,r):null}this.fire("set:meshes")},n._createSimpleMesh=function(e){var t=e.rect,n=this._atlas.texture.width,i=this._atlas.texture.height,a=t.z/this._pixelsPerUnit,s=t.w/this._pixelsPerUnit,r=e.pivot.x,o=e.pivot.y,l=[-r*a,-o*s,0,(1-r)*a,-o*s,0,(1-r)*a,(1-o)*s,0,-r*a,(1-o)*s,0],c=t.x/n,h=1-t.y/i,p=(t.x+t.z)/n,d=1-(t.y+t.w)/i,u=[c,h,p,h,p,d,c,d];return ug(this._device,l,{uvs:u,normals:Xx,indices:Yx})},n._create9SliceMesh=function(){for(var e=ft.ONE,t=3,n=3,i=[],a=[],s=[],r=[],o=0,l=0;l<=t;l++)for(var c=0===l||l===t?0:1,h=0;h<=n;h++){var p=-e.x+2*e.x*(l<=1?0:3)/t,d=0,u=-(-e.y+2*e.y*(h<=1?0:3)/n),m=0===h||h===n?0:1;i.push(-p,d,u),a.push(0,1,0),s.push(c,m),l<t&&h<n&&(r.push(o+n+1,o+1,o),r.push(o+n+1,o+n+2,o+1)),o++}var f={normals:a,uvs:s,indices:r};return ug(this._device,i,f)},n._onSetFrames=function(e){this._updatingProperties?this._meshesDirty=!0:this._createMeshes()},n._onFrameChanged=function(e,t){var n=this._frameKeys.indexOf(e);n<0||(t?this.renderMode===Nf&&(this._meshes[n]=this._createSimpleMesh(t)):this._meshes[n]=null,this.fire("set:meshes"))},n._onFrameRemoved=function(e){var t=this._frameKeys.indexOf(e);t<0||(this._meshes[t]=null,this.fire("set:meshes"))},n.startUpdate=function(){this._updatingProperties=!0,this._meshesDirty=!1},n.endUpdate=function(){this._updatingProperties=!1,this._meshesDirty&&this._atlas&&this._frameKeys&&this._createMeshes(),this._meshesDirty=!1},n.destroy=function(){for(var e,t=te(this._meshes);!(e=t()).done;){var n=e.value;n&&n.destroy()}this._meshes.length=0},q(t,[{key:"frameKeys",get:function(){return this._frameKeys},set:function(e){this._frameKeys=e,this._atlas&&this._frameKeys&&(this._updatingProperties?this._meshesDirty=!0:this._createMeshes()),this.fire("set:frameKeys",e)}},{key:"atlas",get:function(){return this._atlas},set:function(e){e!==this._atlas&&(this._atlas&&(this._atlas.off("set:frames",this._onSetFrames,this),this._atlas.off("set:frame",this._onFrameChanged,this),this._atlas.off("remove:frame",this._onFrameRemoved,this)),this._atlas=e,this._atlas&&this._frameKeys&&(this._atlas.on("set:frames",this._onSetFrames,this),this._atlas.on("set:frame",this._onFrameChanged,this),this._atlas.on("remove:frame",this._onFrameRemoved,this),this._updatingProperties?this._meshesDirty=!0:this._createMeshes()),this.fire("set:atlas",e))}},{key:"pixelsPerUnit",get:function(){return this._pixelsPerUnit},set:function(e){this._pixelsPerUnit!==e&&(this._pixelsPerUnit=e,this.fire("set:pixelsPerUnit",e),this._atlas&&this._frameKeys&&this.renderMode===Nf&&(this._updatingProperties?this._meshesDirty=!0:this._createMeshes()))}},{key:"renderMode",get:function(){return this._renderMode},set:function(e){if(this._renderMode!==e){var t=this._renderMode;this._renderMode=e,this.fire("set:renderMode",e),t!==Nf&&e!==Nf||this._atlas&&this._frameKeys&&(this._updatingProperties?this._meshesDirty=!0:this._createMeshes())}}},{key:"meshes",get:function(){return this._meshes}}]),t}(re),Kx=function(e){function t(){var t;return(t=e.call(this)||this)._texture=null,t._frames=null,t}Z(t,e);var n=t.prototype;return n.setFrame=function(e,t){var n=this._frames[e];n?(n.rect.copy(t.rect),n.pivot.copy(t.pivot),n.border.copy(t.border)):(n={rect:t.rect.clone(),pivot:t.pivot.clone(),border:t.border.clone()},this._frames[e]=n),this.fire("set:frame",e.toString(),n)},n.removeFrame=function(e){var t=this._frames[e];t&&(delete this._frames[e],this.fire("remove:frame",e.toString(),t))},n.destroy=function(){this._texture&&this._texture.destroy()},q(t,[{key:"texture",get:function(){return this._texture},set:function(e){this._texture=e,this.fire("set:texture",e)}},{key:"frames",get:function(){return this._frames},set:function(e){this._frames=e,this.fire("set:frames",e)}}]),t}(re),Zx=function(e,t,n,i){this.time=e,this.position=t,this.rotation=n,this.scale=i},Qx=function(){this._name="",this._keys=[]},Jx=function(){function e(){this.name="",this.duration=0,this._nodes=[],this._nodeDict={}}var t=e.prototype;return t.getNode=function(e){return this._nodeDict[e]},t.addNode=function(e){this._nodes.push(e),this._nodeDict[e._name]=e},q(e,[{key:"nodes",get:function(){return this._nodes}}]),e}(),$x=function(){function e(){this._written=!1,this._name="",this._keyFrames=[],this._quat=new Et,this._pos=new pt,this._scale=new pt,this._targetNode=null}var t=e.prototype;return t.getTarget=function(){return this._targetNode},t.setTarget=function(e){this._targetNode=e},e}(),eC=function(){function e(e){var t=this;this.looping=!0,this._animation=null,this._time=0,this._interpolatedKeys=[],this._interpolatedKeyDict={},this._currKeyIndices={},this.graph=null;var n=function e(n){var i=new $x;i._name=n.name,t._interpolatedKeys.push(i),t._interpolatedKeyDict[n.name]=i,t._currKeyIndices[n.name]=0;for(var a=0;a<n._children.length;a++)e(n._children[a])};n(e)}var t=e.prototype;return t.addTime=function(e){if(null!==this._animation){var t=this._animation._nodes,n=this._animation.duration;if(this._time===n&&!this.looping)return;if(this._time+=e,this._time>n){this._time=this.looping?0:n;for(var i=0;i<t.length;i++){var a=t[i]._name;this._currKeyIndices[a]=0}}else if(this._time<0){this._time=this.looping?n:0;for(var s=0;s<t.length;s++){var r=t[s],o=r._name;this._currKeyIndices[o]=r._keys.length-2}}for(var l=e>=0?1:-1,c=0;c<t.length;c++){var h=t[c],p=h._name,d=h._keys,u=this._interpolatedKeyDict[p];if(void 0!==u){var m=!1;if(1!==d.length)for(var f=this._currKeyIndices[p];f<d.length-1&&f>=0;f+=l){var g=d[f],v=d[f+1];if(g.time<=this._time&&v.time>=this._time){var y=(this._time-g.time)/(v.time-g.time);u._pos.lerp(g.position,v.position,y),u._quat.slerp(g.rotation,v.rotation,y),u._scale.lerp(g.scale,v.scale,y),u._written=!0,this._currKeyIndices[p]=f,m=!0;break}}(1===d.length||!m&&0===this._time&&this.looping)&&(u._pos.copy(d[0].position),u._quat.copy(d[0].rotation),u._scale.copy(d[0].scale),u._written=!0)}}}},t.blend=function(e,t,n){for(var i=this._interpolatedKeys.length,a=0;a<i;a++){var s=e._interpolatedKeys[a],r=t._interpolatedKeys[a],o=this._interpolatedKeys[a];s._written&&r._written?(o._quat.slerp(s._quat,t._interpolatedKeys[a]._quat,n),o._pos.lerp(s._pos,t._interpolatedKeys[a]._pos,n),o._scale.lerp(s._scale,r._scale,n),o._written=!0):s._written?(o._quat.copy(s._quat),o._pos.copy(s._pos),o._scale.copy(s._scale),o._written=!0):r._written&&(o._quat.copy(r._quat),o._pos.copy(r._pos),o._scale.copy(r._scale),o._written=!0)}},t.setGraph=function(e){if(this.graph=e,e)for(var t=0;t<this._interpolatedKeys.length;t++){var n=this._interpolatedKeys[t],i=e.findByName(n._name);this._interpolatedKeys[t].setTarget(i)}else for(var a=0;a<this._interpolatedKeys.length;a++)this._interpolatedKeys[a].setTarget(null)},t.updateGraph=function(){if(this.graph)for(var e=0;e<this._interpolatedKeys.length;e++){var t=this._interpolatedKeys[e];if(t._written){var n=t.getTarget();n.localPosition.copy(t._pos),n.localRotation.copy(t._quat),n.localScale.copy(t._scale),n._dirtyLocal||n._dirtifyLocal(),t._written=!1}}},q(e,[{key:"animation",get:function(){return this._animation},set:function(e){this._animation=e,this.currentTime=0}},{key:"currentTime",get:function(){return this._time},set:function(e){this._time=e;for(var t=this._interpolatedKeys.length,n=0;n<t;n++){var i=this._interpolatedKeys[n]._name;this._currKeyIndices[i]=0}this.addTime(0),this.updateGraph()}},{key:"numNodes",get:function(){return this._interpolatedKeys.length}}]),e}(),tC=new vt,nC=function(){function e(e){this.device=e,this.needsDepthBuffer=!1}var t=e.prototype;return t.render=function(e,t,n){},t.drawQuad=function(e,t,n){var i;if(n){var a=e?e.width:this.device.width,s=e?e.height:this.device.height;i=tC.set(n.x*a,n.y*s,n.z*a,n.w*s)}this.device.setBlendState(yr.NOBLEND),Gg(this.device,e,t,i)},e}();function iC(e,t){return Math.atan2(e*t,Math.sqrt(e*e+t*t+1))}function aC(e,t,n){var i=2*(e+.5)/n-1,a=2*(t+.5)/n-1,s=1/n,r=(i*=1-1/n)-s,o=(a*=1-1/n)-s,l=i+s,c=a+s,h=iC(r,o)-iC(r,c)-iC(l,o)+iC(l,c);return 0===e&&0===t||e===n-1&&0===t||0===e&&t===n-1||e===n-1&&t===n-1?h/=3:0!==e&&0!==t&&e!==n-1&&t!==n-1||(h*=.5),h}function sC(e,t,n){if(t.format!==ti)return null;if(!t._levels[0]||!t._levels[0][0])return null;var i=t.width;if(!t._levels[0][0].length){if(!(t._levels[0][0]instanceof HTMLImageElement))return null;for(var a=kg(e,Mg.fullscreenQuadVS,Mg.fullscreenQuadPS,"fsQuadSimple"),s=e.scope.resolve("source"),r=0;r<6;r++){var o=t._levels[0][r],l=new vl(e,{name:"prefiltered-cube",cubemap:!1,type:Ea,format:t.format,width:i,height:i,mipmaps:!1});l._levels[0]=o,l.upload();var c=new vl(e,{name:"prefiltered-cube",cubemap:!1,type:Ea,format:t.format,width:i,height:i,mipmaps:!1}),h=new Vr({colorBuffer:c,depth:!1});s.setValue(l),e.setBlendState(yr.NOBLEND),Gg(e,h,a);var p=e.gl;p.bindFramebuffer(p.FRAMEBUFFER,h.impl._glFrameBuffer);var d=new Uint8Array(i*i*4);p.readPixels(0,0,l.width,l.height,p.RGBA,p.UNSIGNED_BYTE,d),t._levels[0][r]=d}}for(var u=[],m=0;m<i;m++)for(var f=0;f<i;f++){var g=f/(i-1)*2-1,v=m/(i-1)*2-1;u[m*i+f]=new pt(g,v,1).normalize()}for(var y=new Float32Array(27),_=0,w=3,b=6,x=9,C=12,S=15,E=18,T=21,A=24,L=0,M=1,P=2,O=3,I=4,R=5,D=0,k=0;k<6;k++)for(var F=0;F<i;F++)for(var B=0;B<i;B++){var N=F*i+B,U=aC(B,F,i),z=4*U/17,V=8*U/17,H=15*U/17,G=5*U/68,W=15*U/68,j=u[N],X=void 0,Y=void 0,q=void 0;k===L?(X=j.z,Y=-j.y,q=-j.x):k===M?(X=-j.z,Y=-j.y,q=j.x):k===P?(X=j.x,Y=j.z,q=j.y):k===O?(X=j.x,Y=-j.z,q=-j.y):k===I?(X=j.x,Y=-j.y,q=j.z):k===R&&(X=-j.x,Y=-j.y,q=-j.z),n||(X=-X);for(var K=t._levels[0][k][4*N+3]/255,Z=0;Z<3;Z++){var Q=t._levels[0][k][4*N+Z]/255;t.type===Ta?(Q*=8*K,Q*=Q):Q=Math.pow(Q,2.2),y[_+Z]+=Q*z,y[w+Z]+=Q*V*X,y[b+Z]+=Q*V*Y,y[x+Z]+=Q*V*q,y[C+Z]+=Q*H*X*q,y[S+Z]+=Q*H*q*Y,y[E+Z]+=Q*H*Y*X,y[T+Z]+=Q*G*(3*q*q-1),y[A+Z]+=Q*W*(X*X-Y*Y),D+=U}}for(var J=0;J<y.length;J++)y[J]*=4*Math.PI/D;return y}nC.quadVertexShader="\n        attribute vec2 aPosition;\n        varying vec2 vUv0;\n        void main(void)\n        {\n            gl_Position = vec4(aPosition, 0.0, 1.0);\n            vUv0 = getImageEffectUV((aPosition.xy + 1.0) * 0.5);\n        }\n    ";var rC,oC=function(){function e(e,t){var n=this;this.processedCache=new Map,this.definitionsCache=new Map,this._generators=new Map,this._device=e,this._isClearingCache=!1,this._precached=!1,this._programsCollection=[],this._defaultStdMatOption=new bw,this._defaultStdMatOptionMin=new bw,t.shaderOptBuilder.updateRef(this._defaultStdMatOption,{},t,null,[],xf,null),t.shaderOptBuilder.updateMinRef(this._defaultStdMatOptionMin,{},t,null,Tf,null),e.on("destroy:shader",(function(e){n.removeFromCache(e)}))}var t=e.prototype;return t.destroy=function(){this.clearCache()},t.register=function(e,t){this._generators.has(e)||this._generators.set(e,t)},t.unregister=function(e){this._generators.has(e)&&this._generators.delete(e)},t.isRegistered=function(e){return this._generators.has(e)},t.generateShaderDefinition=function(e,t,n,i){var a=this.definitionsCache.get(n);if(!a){var s,r,o,l;null!=(s=i.litOptions)&&s.lights&&(l=i.litOptions.lights,i.litOptions.lights=l.map((function(e){var t=e.clone?e.clone():e;return t.key=e.key,t}))),this.storeNewProgram(t,i),null!=(r=i.litOptions)&&r.lights&&(i.litOptions.lights=l),this._precached;var c=this._device;(a=e.createShaderDefinition(c,i)).name=null!=(o=a.name)?o:i.pass?t+"-pass:"+i.pass:t,this.definitionsCache.set(n,a)}return a},t.getCachedShader=function(e){return this.processedCache.get(e)},t.setCachedShader=function(e,t){this.processedCache.set(e,t)},t.getProgram=function(e,t,n,i){var a=this._generators.get(e);if(!a)return null;var s=Pr(a.generateKey(t)),r=s+"#"+Pr(n.generateKey(this._device)),o=this.getCachedShader(r);if(!o){var l,c=this.generateShaderDefinition(a,e,s,t),h="";void 0!==t.pass&&(h="-"+(l=Yg.get(this._device).getByIndex(t.pass)).name),this._device.fire("shader:generate",{userMaterialId:i,shaderPassInfo:l,definition:c});var p={name:""+c.name+h+"-proc",attributes:c.attributes,vshader:c.vshader,fshader:c.fshader,processingOptions:n};o=new Qo(this._device,p),this.setCachedShader(r,o)}return o},t.storeNewProgram=function(e,t){var n={};if("standard"===e){var i=this._getDefaultStdMatOptions(t.pass);for(var a in t)(t.hasOwnProperty(a)&&i[a]!==t[a]||"pass"===a)&&(n[a]=t[a]);for(var s in t.litOptions)n[s]=t.litOptions[s]}else n=t;this._programsCollection.push(JSON.stringify({name:e,options:n}))},t.dumpPrograms=function(){var e="let device = pc.app ? pc.app.graphicsDevice : pc.Application.getApplication().graphicsDevice;\n";e+="let shaders = [",this._programsCollection[0]&&(e+="\n\t"+this._programsCollection[0]);for(var t=1;t<this._programsCollection.length;++t)e+=",\n\t"+this._programsCollection[t];e+="\n];\n",e+="device.getProgramLibrary().precompile(shaders);\n",e+='if (pc.version != "'+k+'" || pc.revision != "'+F+'")\n',e+='\tconsole.warn("precompile-shaders.js: engine version mismatch, rebuild shaders lib with current engine");';var n=document.createElement("a");n.setAttribute("href","data:text/plain;charset=utf-8,"+encodeURIComponent(e)),n.setAttribute("download","precompile-shaders.js"),n.style.display="none",document.body.appendChild(n),n.click(),document.body.removeChild(n)},t.clearCache=function(){this._isClearingCache=!0,this.processedCache.forEach((function(e){e.destroy()})),this.processedCache.clear(),this._isClearingCache=!1},t.removeFromCache=function(e){var t=this;this._isClearingCache||this.processedCache.forEach((function(n,i){e===n&&t.processedCache.delete(i)}))},t._getDefaultStdMatOptions=function(e){var t=Yg.get(this._device).getByIndex(e);return e===Sf||e===Ef||t.isShadow?this._defaultStdMatOptionMin:this._defaultStdMatOption},t.precompile=function(e){if(e)for(var t=new Array(e.length),n=0;n<e.length;n++){if("standard"===e[n].name){var i=e[n].options,a=this._getDefaultStdMatOptions(i.pass);for(var s in a)a.hasOwnProperty(s)&&void 0===i[s]&&(i[s]=a[s])}t[n]=this.getProgram(e[n].name,e[n].options)}this._precached=!0},e}(),lC={bakeDirLmEndPS:"\n\tvec4 dirLm = texture2D(texture_dirLightMap, vUv1);\n\tif (bakeDir > 0.5) {\n\t\tif (dAtten > 0.00001) {\n\t\t\tdirLm.xyz = dirLm.xyz * 2.0 - vec3(1.0);\n\t\t\tdAtten = saturate(dAtten);\n\t\t\tgl_FragColor.rgb = normalize(dLightDirNormW.xyz*dAtten + dirLm.xyz*dirLm.w) * 0.5 + vec3(0.5);\n\t\t\tgl_FragColor.a = dirLm.w + dAtten;\n\t\t\tgl_FragColor.a = max(gl_FragColor.a, 1.0 / 255.0);\n\t\t} else {\n\t\t\tgl_FragColor = dirLm;\n\t\t}\n\t} else {\n\t\tgl_FragColor.rgb = dirLm.xyz;\n\t\tgl_FragColor.a = max(dirLm.w, dAtten > 0.00001? (1.0/255.0) : 0.0);\n\t}\n",bakeLmEndPS:"\n#ifdef LIGHTMAP_RGBM\n\tgl_FragColor.rgb = dDiffuseLight;\n\tgl_FragColor.rgb = pow(gl_FragColor.rgb, vec3(0.5));\n\tgl_FragColor.rgb /= 8.0;\n\tgl_FragColor.a = clamp( max( max( gl_FragColor.r, gl_FragColor.g ), max( gl_FragColor.b, 1.0 / 255.0 ) ), 0.0,1.0 );\n\tgl_FragColor.a = ceil(gl_FragColor.a * 255.0) / 255.0;\n\tgl_FragColor.rgb /= gl_FragColor.a;\n#else\n\tgl_FragColor = vec4(dDiffuseLight, 1.0);\n#endif\n",dilatePS:"\nvarying vec2 vUv0;\nuniform sampler2D source;\nuniform vec2 pixelOffset;\nvoid main(void) {\n\tvec4 c = texture2D(source, vUv0);\n\tc = c.a>0.0? c : texture2D(source, vUv0 - pixelOffset);\n\tc = c.a>0.0? c : texture2D(source, vUv0 + vec2(0, -pixelOffset.y));\n\tc = c.a>0.0? c : texture2D(source, vUv0 + vec2(pixelOffset.x, -pixelOffset.y));\n\tc = c.a>0.0? c : texture2D(source, vUv0 + vec2(-pixelOffset.x, 0));\n\tc = c.a>0.0? c : texture2D(source, vUv0 + vec2(pixelOffset.x, 0));\n\tc = c.a>0.0? c : texture2D(source, vUv0 + vec2(-pixelOffset.x, pixelOffset.y));\n\tc = c.a>0.0? c : texture2D(source, vUv0 + vec2(0, pixelOffset.y));\n\tc = c.a>0.0? c : texture2D(source, vUv0 + pixelOffset);\n\tgl_FragColor = c;\n}\n",bilateralDeNoisePS:"\nfloat normpdf3(in vec3 v, in float sigma) {\n\treturn 0.39894 * exp(-0.5 * dot(v, v) / (sigma * sigma)) / sigma;\n}\nvec3 decodeRGBM(vec4 rgbm) {\n\tvec3 color = (8.0 * rgbm.a) * rgbm.rgb;\n\treturn color * color;\n}\nfloat saturate(float x) {\n\treturn clamp(x, 0.0, 1.0);\n}\nvec4 encodeRGBM(vec3 color) {\n\tvec4 encoded;\n\tencoded.rgb = pow(color.rgb, vec3(0.5));\n\tencoded.rgb *= 1.0 / 8.0;\n\tencoded.a = saturate( max( max( encoded.r, encoded.g ), max( encoded.b, 1.0 / 255.0 ) ) );\n\tencoded.a = ceil(encoded.a * 255.0) / 255.0;\n\tencoded.rgb /= encoded.a;\n\treturn encoded;\n}\n#define MSIZE 15\nvarying vec2 vUv0;\nuniform sampler2D source;\nuniform vec2 pixelOffset;\nuniform vec2 sigmas;\nuniform float bZnorm;\nuniform float kernel[MSIZE];\nvoid main(void) {\n\t\n\tvec4 pixelRgbm = texture2D(source, vUv0);\n\tif (pixelRgbm.a <= 0.0) {\n\t\tgl_FragColor = pixelRgbm;\n\t\treturn ;\n\t}\n\tfloat sigma = sigmas.x;\n\tfloat bSigma = sigmas.y;\n\tvec3 pixelHdr = decodeRGBM(pixelRgbm);\n\tvec3 accumulatedHdr = vec3(0.0);\n\tfloat accumulatedFactor = 0.0;\n\tconst int kSize = (MSIZE-1)/2;\n\tfor (int i = -kSize; i <= kSize; ++i) {\n\t\tfor (int j = -kSize; j <= kSize; ++j) {\n\t\t\t\n\t\t\tvec2 coord = vUv0 + vec2(float(i), float(j)) * pixelOffset;\n\t\t\tvec4 rgbm = texture2D(source, coord);\n\t\t\tif (rgbm.a > 0.0) {\n\t\t\t\tvec3 hdr = decodeRGBM(rgbm);\n\t\t\t\tfloat factor = kernel[kSize + j] * kernel[kSize + i];\n\t\t\t\tfactor *= normpdf3(hdr - pixelHdr, bSigma) * bZnorm;\n\t\t\t\taccumulatedHdr += factor * hdr;\n\t\t\t\taccumulatedFactor += factor;\n\t\t\t}\n\t\t}\n\t}\n\tgl_FragColor = encodeRGBM(accumulatedHdr / accumulatedFactor);\n}\n"},cC="NONE",hC="FILL_WINDOW",pC="KEEP_ASPECT",dC="AUTO",uC="FIXED";function mC(){return rC}function fC(e){rC=e,ig.set(null==e?void 0:e.graphicsDevice)}var gC=function(){function e(){}return e.push=function(t,n){n&&e._types.length>0?console.assert("Script Ordering Error. Contact support@playcanvas.com"):e._types.push(t)},e}();gC._types=[];var vC=!1,yC=!1,_C={app:null,create:function(e,t){if(vC){var n=t(_C.app);n._pcScriptName=e,gC.push(n,vC),this.fire("created",e,t)}},attribute:function(e,t,n,i){},createLoadingScreen:function(e){yC||(yC=!0,e(mC()))}};Object.defineProperty(_C,"legacy",{get:function(){return vC},set:function(e){vC=e}}),oe.attach(_C);var wC=function(){function e(){this.renderPasses=[],this.renderTargetMap=new Map}var t=e.prototype;return t.addRenderPass=function(e){this.renderPasses.push(e)},t.reset=function(){this.renderPasses.length=0},t.compile=function(){for(var e=this.renderTargetMap,t=this.renderPasses,n=0;n<t.length;n++){var i=t[n],a=i.renderTarget;if(void 0!==a){var s=e.get(a);if(s){for(var r=i.colorArrayOps.length,o=0;o<r;o++)i.colorArrayOps[o].clear||(s.colorArrayOps[o].store=!0);i.depthStencilOps.clearDepth||(s.depthStencilOps.storeDepth=!0),i.depthStencilOps.clearStencil||(s.depthStencilOps.storeStencil=!0)}e.set(a,i)}}for(var l=null,c=null,h=0;h<t.length;h++){var p=t[h],d=p.renderTarget,u=null==d?void 0:d.colorBuffer;if(null!=u&&u.cubemap){if(l===u)for(var m=c.colorArrayOps.length,f=0;f<m;f++)c.colorArrayOps[f].mipmaps=!1;l=d.colorBuffer,c=p}else p.requiresCubemaps&&(l=null,c=null)}e.clear()},t.render=function(e){this.compile();for(var t=this.renderPasses,n=0;n<t.length;n++)t[n].render()},e}(),bC=function(){function e(e,t){this.texture0=e,this.texture1=t}return e.prototype.destroy=function(){var e,t;null==(e=this.texture0)||e.destroy(),null==(t=this.texture1)||t.destroy()},e}(),xC=new xl,CC=function(){function e(){}return e.createTexture=function(e,t,n,i){return void 0===i&&(i=""),new vl(e,{name:"AreaLightLUT"+i,width:n,height:n,format:t,addressU:Yt,addressV:Yt,type:Ea,magFilter:In,minFilter:On,anisotropy:1,mipmaps:!1})},e.applyTextures=function(e,t,n){xC.remove(e),xC.get(e,(function(){return new bC(t,t===n?null:n)})),e.scope.resolve("areaLightsLutTex1").setValue(t),e.scope.resolve("areaLightsLutTex2").setValue(n)},e.createPlaceholder=function(t){var n=e.createTexture(t,t.areaLightLutFormat,2,"placeholder");n.lock().fill(0),n.unlock(),e.applyTextures(t,n,n)},e.set=function(t,n,i){function a(t,n,i){var a=e.createTexture(t,i,64);return a.lock().set(n),a.unlock(),a}function s(e,t,n){for(var i=e.length,a=new Float32Array(i),s=0;s<i;s++){var r=s%4;a[s]=(e[s]+t[r])*n[r]}return a}function r(e){for(var t=e.length,n=new Uint16Array(t),i=my.float2Half,a=0;a<t;a++)n[a]=i(e[a]);return n}function o(e){for(var t=e.length,n=new Uint8ClampedArray(t),i=0;i<t;i++)n[i]=255*e[i];return n}var l,c,h=n,p=i,d=t.areaLightLutFormat;if(d===li)l=h,c=p;else if(d===ri)l=r(h),c=r(p);else{var u=[-.306897,0,0,0],m=[1.442787,1,1,1];l=o(s(h,[0,.2976,.01381,0],[.999,3.08737,1.6546,.603249])),c=o(s(p,u,m))}var f=a(t,l,d),g=a(t,c,d);e.applyTextures(t,f,g)},e}(),SC="en-US",EC={en:"en-US",es:"en-ES",zh:"zh-CN","zh-HK":"zh-TW","zh-TW":"zh-HK","zh-MO":"zh-HK",fr:"fr-FR",de:"de-DE",it:"it-IT",ru:"ru-RU",ja:"ja-JP"},TC={};function AC(e,t){for(var n=0,i=e.length;n<i;n++)TC[e[n]]=t}function LC(e){var t=e.indexOf("-");return-1!==t?e.substring(0,t):e}function MC(e,t){var n=e.indexOf("-");return-1!==n?t+e.substring(n):t}function PC(e,t){if(t[e])return e;var n=EC[e];if(n&&t[n])return n;var i=LC(e);return t[n=EC[i]]?n:t[i]?i:SC}AC(["ja","ko","th","vi","zh","id"],(function(e){return 0})),AC(["fa","hi"],(function(e){return e>=0&&e<=1?0:1})),AC(["fr","pt"],(function(e){return e>=0&&e<2?0:1})),AC(["da"],(function(e){return 1===e||!Number.isInteger(e)&&e>=0&&e<=1?0:1})),AC(["de","en","it","el","es","tr","fi","sv","nb","no","ur"],(function(e){return 1===e?0:1})),AC(["ru","uk"],(function(e){if(Number.isInteger(e)){var t=e%10,n=e%100;if(1===t&&11!==n)return 0;if(t>=2&&t<=4&&(n<12||n>14))return 1;if(0===t||t>=5&&t<=9||n>=11&&n<=14)return 2}return 3})),AC(["pl"],(function(e){if(Number.isInteger(e)){if(1===e)return 0;var t=e%10,n=e%100;if(t>=2&&t<=4&&(n<12||n>14))return 1;if(t>=0&&t<=1||t>=5&&t<=9||n>=12&&n<=14)return 2}return 3})),AC(["ar"],(function(e){if(0===e)return 0;if(1===e)return 1;if(2===e)return 2;if(Number.isInteger(e)){var t=e%100;if(t>=3&&t<=10)return 3;if(t>=11&&t<=99)return 4}return 5}));var OC=TC[LC(SC)];function IC(e){return TC[e]||OC}var RC,DC=new RegExp("^\\s*(?:(?:[a-z]+[a-z0-9\\-\\+\\.]*:)?//|data:|blob:)","i"),kC="animation",FC="audio",BC="image",NC="json",UC="model",zC="material",VC="text",HC="texture",GC="textureatlas",WC="cubemap",jC="shader",XC="css",YC="html",qC="script",KC="container",ZC=function(){function e(e,t,n,i,a,s){void 0===e&&(e=""),void 0===t&&(t=""),void 0===n&&(n=null),void 0===i&&(i=null),void 0===a&&(a=null),void 0===s&&(s=null),this.url=e,this.filename=t,this.hash=n,this.size=i,this.opt=a,this.contents=s}return e.prototype.equals=function(e){return this.url===e.url&&this.filename===e.filename&&this.hash===e.hash&&this.size===e.size&&this.opt===e.opt&&this.contents===e.contents},e}(),QC=-1,JC={pvr:"extCompressedTexturePVRTC",dxt:"extCompressedTextureS3TC",etc2:"extCompressedTextureETC",etc1:"extCompressedTextureETC1",basis:"canvas"},$C=["pvr","dxt","etc2","etc1","basis"],eS=function(e){function t(t,n,i,a,s){var r;return(r=e.call(this)||this)._id=QC--,r._name=t||"",r.type=n,r.tags=new Xe(J(r)),r._preload=!1,r._file=null,r._data=a||{},r.options=s||{},r._resources=[],r._i18n={},r.loaded=!1,r.loading=!1,r.registry=null,i&&(r.file=i),r}Z(t,e);var n=t.prototype;return n.getFileUrl=function(){var e=this.file;if(!e||!e.url)return null;var t=e.url;if(this.registry&&this.registry.prefix&&!DC.test(t)&&(t=this.registry.prefix+t),"script"!==this.type&&e.hash){var n=-1!==t.indexOf("?")?"&":"?";t+=n+"t="+e.hash}return t},n.getAbsoluteUrl=function(e){if(e.startsWith("blob:")||e.startsWith("data:"))return e;var t=ce.getDirectory(this.file.url);return ce.join(t,e)},n.getLocalizedAssetId=function(e){return e=PC(e,this._i18n),this._i18n[e]||null},n.addLocalizedAssetId=function(e,t){this._i18n[e]=t,this.fire("add:localized",e,t)},n.removeLocalizedAssetId=function(e){var t=this._i18n[e];t&&(delete this._i18n[e],this.fire("remove:localized",e,t))},n.ready=function(e,t){t=t||this,this.loaded?e.call(t,this):this.once("load",(function(n){e.call(t,n)}))},n.reload=function(){this.loaded&&(this.loaded=!1,this.registry.load(this))},n.unload=function(){if(this.loaded||0!==this._resources.length){this.fire("unload",this),this.registry.fire("unload:"+this.id,this);var e=this._resources;this.resources=[],this.loaded=!1,this.file&&this.registry._loader.clearCache(this.getFileUrl(),this.type);for(var t=0;t<e.length;++t){var n=e[t];n&&n.destroy&&n.destroy()}}},t.fetchArrayBuffer=function(e,t,n,i){var a;void 0===i&&(i=0),null!=n&&null!=(a=n.file)&&a.contents?setTimeout((function(){t(null,n.file.contents)})):Qd.get(e,{cache:!0,responseType:"arraybuffer",retry:i>0,maxRetries:i},t)},q(t,[{key:"id",get:function(){return this._id},set:function(e){this._id=e}},{key:"name",get:function(){return this._name},set:function(e){if(this._name!==e){var t=this._name;this._name=e,this.fire("name",this,this._name,t)}}},{key:"file",get:function(){return this._file},set:function(e){var t=this;if(e&&e.variants&&-1!==["texture","textureatlas","bundle"].indexOf(this.type)){var n,i=(null==(n=this.registry)||null==(n=n._loader)?void 0:n._app)||mC(),a=null==i?void 0:i.graphicsDevice;if(a)for(var s=function(){var n=$C[r];if(e.variants[n]&&a[JC[n]])return e=e.variants[n],0;if(i.enableBundles){var s=i.bundles.listBundlesForAsset(t);if(s&&s.find((function(e){var t;return null==e||null==(t=e.file)?void 0:t.variants[n]})))return 0}},r=0,o=$C.length;r<o&&0!==s();r++);}var l=this._file,c=e?new ZC(e.url,e.filename,e.hash,e.size,e.opt,e.contents):null;(!!c!=!!l||c&&!c.equals(l))&&(this._file=c,this.fire("change",this,"file",c,l),this.reload())}},{key:"data",get:function(){return this._data},set:function(e){var t=this._data;this._data=e,e!==t&&(this.fire("change",this,"data",e,t),this.loaded&&this.registry._loader.patch(this,this.registry))}},{key:"resource",get:function(){return this._resources[0]},set:function(e){var t=this._resources[0];this._resources[0]=e,this.fire("change",this,"resource",e,t)}},{key:"resources",get:function(){return this._resources},set:function(e){var t=this._resources;this._resources=e,this.fire("change",this,"resources",e,t)}},{key:"preload",get:function(){return this._preload},set:function(e){e=!!e,this._preload!==e&&(this._preload=e,this._preload&&!this.loaded&&!this.loading&&this.registry&&this.registry.load(this))}},{key:"loadFaces",get:function(){return this._loadFaces},set:function(e){e=!!e,this.hasOwnProperty("_loadFaces")&&e===this._loadFaces||(this._loadFaces=e,this.loaded&&this.registry._loader.patch(this,this.registry))}}]),t}(re),tS=function(){function e(e){void 0===e&&(e=null),this._index={},this._key=void 0,this._key=e}var t=e.prototype;return t.addItem=function(e){for(var t,n=te(e.tags._list);!(t=n()).done;){var i=t.value;this.add(i,e)}},t.removeItem=function(e){for(var t,n=te(e.tags._list);!(t=n()).done;){var i=t.value;this.remove(i,e)}},t.add=function(e,t){this._index[e]&&-1!==this._index[e].list.indexOf(t)||(this._index[e]||(this._index[e]={list:[]},this._key&&(this._index[e].keys={})),this._index[e].list.push(t),this._key&&(this._index[e].keys[t[this._key]]=t))},t.remove=function(e,t){if(this._index[e]&&(!this._key||this._index[e].keys[t[this._key]])){var n=this._index[e].list.indexOf(t);-1!==n&&(this._index[e].list.splice(n,1),this._key&&delete this._index[e].keys[t[this._key]],0===this._index[e].list.length&&delete this._index[e])}},t.find=function(e){for(var t,n,i,a,s,r=this,o={},l=[],c=function(e,t){return r._index[e].list.length-r._index[t].list.length},h=0;h<e.length;h++){if((n=e[h])instanceof Array){if(0===n.length)continue;if(1!==n.length){s=!1;for(var p=0;p<n.length;p++)if(!this._index[n[p]]){s=!0;break}if(s)continue;1===(a=(i=n.slice(0).sort(c)).slice(1)).length&&(a=a[0]);for(var d=0;d<this._index[i[0]].list.length;d++)t=this._index[i[0]].list[d],(this._key?!o[t[this._key]]:-1===l.indexOf(t))&&t.tags.has(a)&&(this._key&&(o[t[this._key]]=!0),l.push(t));continue}n=n[0]}if(n&&"string"==typeof n&&this._index[n])for(var u=0;u<this._index[n].list.length;u++)t=this._index[n].list[u],this._key?o[t[this._key]]||(o[t[this._key]]=!0,l.push(t)):-1===l.indexOf(t)&&l.push(t)}return l},e}(),nS=function(e){function t(t){var n;return(n=e.call(this)||this)._assets=new Set,n._idToAsset=new Map,n._urlToAsset=new Map,n._nameToAsset=new Map,n._tags=new tS("_id"),n.prefix=null,n._loader=t,n}Z(t,e);var n=t.prototype;return n.list=function(e){void 0===e&&(e={});var t=Array.from(this._assets);return void 0!==e.preload?t.filter((function(t){return t.preload===e.preload})):t},n.add=function(e){var t,n;this._assets.has(e)||(this._assets.add(e),this._idToAsset.set(e.id,e),null!=(t=e.file)&&t.url&&this._urlToAsset.set(e.file.url,e),this._nameToAsset.has(e.name)||this._nameToAsset.set(e.name,new Set),this._nameToAsset.get(e.name).add(e),e.on("name",this._onNameChange,this),e.registry=this,this._tags.addItem(e),e.tags.on("add",this._onTagAdd,this),e.tags.on("remove",this._onTagRemove,this),this.fire("add",e),this.fire("add:"+e.id,e),null!=(n=e.file)&&n.url&&this.fire("add:url:"+e.file.url,e),e.preload&&this.load(e))},n.remove=function(e){var t,n;if(!this._assets.has(e))return!1;if(this._assets.delete(e),this._idToAsset.delete(e.id),null!=(t=e.file)&&t.url&&this._urlToAsset.delete(e.file.url),e.off("name",this._onNameChange,this),this._nameToAsset.has(e.name)){var i=this._nameToAsset.get(e.name);i.delete(e),0===i.size&&this._nameToAsset.delete(e.name)}return this._tags.removeItem(e),e.tags.off("add",this._onTagAdd,this),e.tags.off("remove",this._onTagRemove,this),e.fire("remove",e),this.fire("remove",e),this.fire("remove:"+e.id,e),null!=(n=e.file)&&n.url&&this.fire("remove:url:"+e.file.url,e),!0},n.get=function(e){return this._idToAsset.get(Number(e))},n.getByUrl=function(e){return this._urlToAsset.get(e)},n.load=function(e){var t=this;if(!e.loading&&!e.loaded){var n=e.file,i=function(i){i instanceof Array?e.resources=i:e.resource=i,t._loader.patch(e,t),t.fire("load",e),t.fire("load:"+e.id,e),n&&n.url&&t.fire("load:url:"+n.url,e),e.fire("load",e)},a=function(n,a,s){if(e.loaded=!0,e.loading=!1,n)t.fire("error",n,e),t.fire("error:"+e.id,n,e),e.fire("error",n,e);else{if(!_C.legacy&&"script"===e.type){var r=t._loader.getHandler("script");r._cache[e.id]&&r._cache[e.id].parentNode===document.head&&document.head.removeChild(r._cache[e.id]),r._cache[e.id]=s}i(a)}};if(n||"cubemap"===e.type)this.fire("load:start",e),this.fire("load:"+e.id+":start",e),e.loading=!0,this._loader.load(e.getFileUrl(),e.type,a,e);else{var s=this._loader.open(e.type,e.data);e.loaded=!0,i(s)}}},n.loadFromUrl=function(e,t,n){this.loadFromUrlAndFilename(e,null,t,n)},n.loadFromUrlAndFilename=function(e,t,n,i){var a=this,s=ce.getBasename(t||e),r={filename:t||s,url:e},o=this.getByUrl(e);if(o){if(o.loaded)return void i(o.loadFromUrlError||null,o)}else o=new eS(s,n,r),this.add(o);var l=function(e){e.once("load",(function(e){"material"===n?a._loadTextures(e,(function(t,n){i(t,e)})):i(null,e)})),e.once("error",(function(t){t&&(a.loadFromUrlError=t),i(t,e)})),a.load(e)};o.resource?i(null,o):"model"===n?this._loadModel(o,l):l(o)},n._loadModel=function(e,t){var n=this,i=e.getFileUrl(),a=ce.getExtension(i);if(".json"===a||".glb"===a){var s=ce.getDirectory(i),r=ce.getBasename(i),o=ce.join(s,r.replace(a,".mapping.json"));this._loader.load(o,"json",(function(i,a){i?(e.data={mapping:[]},t(e)):n._loadMaterials(e,a,(function(n,i){e.data=a,t(e)}))}))}else t(e)},n._loadMaterials=function(e,t,n){for(var i=this,a=[],s=0,r=function(e,t){i._loadTextures(t,(function(e,i){a.push(t),a.length===s&&n(null,a)}))},o=0;o<t.mapping.length;o++){var l=t.mapping[o].path;if(l){s++;var c=e.getAbsoluteUrl(l);this.loadFromUrl(c,"material",r)}}0===s&&n(null,a)},n._loadTextures=function(e,t){var n=[],i=0,a=e.data;if("path"===a.mappingFormat){for(var s=function(e,a){e&&console.error(e),n.push(a),n.length===i&&t(null,n)},r=Iw,o=0;o<r.length;o++){var l=a[r[o]];if(l&&"string"==typeof l){i++;var c=e.getAbsoluteUrl(l);this.loadFromUrl(c,"texture",s)}}0===i&&t(null,n)}else t(null,n)},n._onTagAdd=function(e,t){this._tags.add(e,t)},n._onTagRemove=function(e,t){this._tags.remove(e,t)},n._onNameChange=function(e,t,n){if(this._nameToAsset.has(n)){var i=this._nameToAsset.get(n);i.delete(e),0===i.size&&this._nameToAsset.delete(n)}this._nameToAsset.has(e.name)||this._nameToAsset.set(e.name,new Set),this._nameToAsset.get(e.name).add(e)},n.findByTag=function(){return this._tags.find(arguments)},n.filter=function(e){return Array.from(this._assets).filter((function(t){return e(t)}))},n.find=function(e,t){var n=this._nameToAsset.get(e);if(!n)return null;for(var i,a=te(n);!(i=a()).done;){var s=i.value;if(!t||s.type===t)return s}return null},n.findAll=function(e,t){var n=this._nameToAsset.get(e);if(!n)return[];var i=Array.from(n);return t?i.filter((function(e){return e.type===t})):i},t}(re),iS=function(){function e(e){this._assets=e,this._bundleAssets={},this._assetsInBundles={},this._urlsInBundles={},this._fileRequests={},this._assets.on("add",this._onAssetAdded,this),this._assets.on("remove",this._onAssetRemoved,this)}var t=e.prototype;return t._onAssetAdded=function(e){if("bundle"===e.type){this._bundleAssets[e.id]=e,this._registerBundleEventListeners(e.id);for(var t=0,n=e.data.assets.length;t<n;t++)this._indexAssetInBundle(e.data.assets[t],e)}else this._assetsInBundles[e.id]&&this._indexAssetFileUrls(e)},t._registerBundleEventListeners=function(e){this._assets.on("load:"+e,this._onBundleLoaded,this),this._assets.on("error:"+e,this._onBundleError,this)},t._unregisterBundleEventListeners=function(e){this._assets.off("load:"+e,this._onBundleLoaded,this),this._assets.off("error:"+e,this._onBundleError,this)},t._indexAssetInBundle=function(e,t){if(this._assetsInBundles[e]){var n=this._assetsInBundles[e];-1===n.indexOf(t)&&n.push(t)}else this._assetsInBundles[e]=[t];var i=this._assets.get(e);i&&this._indexAssetFileUrls(i)},t._indexAssetFileUrls=function(e){var t=this._getAssetFileUrls(e);if(t)for(var n=0,i=t.length;n<i;n++){var a=t[n];this._urlsInBundles[a]=this._assetsInBundles[e.id]}},t._getAssetFileUrls=function(e){var t=e.getFileUrl();if(!t)return null;var n=[t=this._normalizeUrl(t)];if("font"===e.type)for(var i=e.data.info.maps.length,a=1;a<i;a++)n.push(t.replace(".png",a+".png"));return n},t._normalizeUrl=function(e){return e&&e.split("?")[0]},t._onAssetRemoved=function(e){if("bundle"===e.type){for(var t in delete this._bundleAssets[e.id],this._unregisterBundleEventListeners(e.id),this._assetsInBundles){var n=this._assetsInBundles[t],i=n.indexOf(e);if(-1!==i&&(n.splice(i,1),!n.length))for(var a in delete this._assetsInBundles[t],this._urlsInBundles)this._urlsInBundles[a]===n&&delete this._urlsInBundles[a]}this._onBundleError("Bundle "+e.id+" was removed",e)}else if(this._assetsInBundles[e.id]){delete this._assetsInBundles[e.id];for(var s=this._getAssetFileUrls(e),r=0,o=s.length;r<o;r++)delete this._urlsInBundles[s[r]]}},t._onBundleLoaded=function(e){var t=this;e.resource?requestAnimationFrame((function(){if(t._fileRequests)for(var n in t._fileRequests){var i=t._urlsInBundles[n];if(i&&-1!==i.indexOf(e)){var a=decodeURIComponent(n),s=null;e.resource.hasBlobUrl(a)||(s="Bundle "+e.id+" does not contain URL "+n);for(var r=t._fileRequests[n],o=0,l=r.length;o<l;o++)s?r[o](s):r[o](null,e.resource.getBlobUrl(a));delete t._fileRequests[n]}}})):this._onBundleError("Bundle "+e.id+" failed to load",e)},t._onBundleError=function(e,t){for(var n in this._fileRequests)if(!this._findLoadedOrLoadingBundleForUrl(n)){for(var i=this._fileRequests[n],a=0,s=i.length;a<s;a++)i[a](e);delete this._fileRequests[n]}},t._findLoadedOrLoadingBundleForUrl=function(e){var t=this._urlsInBundles[e];if(!t)return null;for(var n=t.length,i=0;i<n;i++)if(t[i].loaded&&t[i].resource)return t[i];for(var a=0;a<n;a++)if(t[a].loading)return t[a];return null},t.listBundlesForAsset=function(e){return this._assetsInBundles[e.id]||null},t.list=function(){var e=[];for(var t in this._bundleAssets)e.push(this._bundleAssets[t]);return e},t.hasUrl=function(e){return!!this._urlsInBundles[e]},t.canLoadUrl=function(e){return!!this._findLoadedOrLoadingBundleForUrl(e)},t.loadUrl=function(e,t){var n=this._findLoadedOrLoadingBundleForUrl(e);if(n)if(n.loaded){var i=decodeURIComponent(e);if(!n.resource.hasBlobUrl(i))return void t("Bundle "+n.id+" does not contain URL "+e);t(null,n.resource.getBlobUrl(i))}else this._fileRequests.hasOwnProperty(e)?this._fileRequests[e].push(t):this._fileRequests[e]=[t];else t("URL "+e+" not found in any bundles")},t.destroy=function(){for(var e in this._assets.off("add",this._onAssetAdded,this),this._assets.off("remove",this._onAssetRemoved,this),this._bundleAssets)this._unregisterBundleEventListeners(e);this._assets=null,this._bundleAssets=null,this._assetsInBundles=null,this._urlsInBundles=null,this._fileRequests=null},e}(),aS=function(e){function t(){var t;return(t=e.call(this)||this).anim=void 0,t.animation=void 0,t.audiolistener=void 0,t.audiosource=void 0,t.button=void 0,t.camera=void 0,t.collision=void 0,t.element=void 0,t.joint=void 0,t.layoutchild=void 0,t.layoutgroup=void 0,t.light=void 0,t.model=void 0,t.particlesystem=void 0,t.render=void 0,t.rigidbody=void 0,t.screen=void 0,t.script=void 0,t.scrollbar=void 0,t.scrollview=void 0,t.sound=void 0,t.sprite=void 0,t.zone=void 0,t.list=[],t}Z(t,e);var n=t.prototype;return n.add=function(e){var t=e.id;if(this[t])throw new Error("ComponentSystem name '"+t+"' already registered or not allowed");this[t]=e,this.list.push(e)},n.remove=function(e){var t=e.id;if(!this[t])throw new Error("No ComponentSystem named '"+t+"' registered");delete this[t];var n=this.list.indexOf(this[t]);-1!==n&&this.list.splice(n,1)},n.destroy=function(){this.off();for(var e=0;e<this.list.length;e++)this.list[e].destroy()},t}(re),sS=function(){function e(e){this._blobUrls={};for(var t=0,n=e.length;t<n;t++)e[t].url&&(this._blobUrls[e[t].name]=e[t].url)}var t=e.prototype;return t.hasBlobUrl=function(e){return!!this._blobUrls[e]},t.getBlobUrl=function(e){return this._blobUrls[e]},t.destroy=function(){for(var e in this._blobUrls)URL.revokeObjectURL(this._blobUrls[e]);this._blobUrls=null},e}();function rS(e){var t,n;if("undefined"!=typeof TextDecoder)try{t=new TextDecoder("utf-8"),n=new TextDecoder("windows-1252")}catch(e){console.warn("TextDecoder not supported - pc.Untar module will not work")}else console.warn("TextDecoder not supported - pc.Untar module will not work");function i(e){this._fields=e}function a(e){this._arrayBuffer=e||new ArrayBuffer(0),this._bufferView=new DataView(this._arrayBuffer),this._globalPaxHeader=null,this._paxHeader=null,this._bytesRead=0}i.parse=function(e,n,a){for(var s=new Uint8Array(e,n,a),r=0,o=[];r<a;){var l=void 0;for(l=r;l<a&&32!==s[l];l++);if(l>=a)throw new Error("Invalid PAX header data format.");var c=parseInt(t.decode(new Uint8Array(e,n+r,l-r)),10),h=t.decode(new Uint8Array(e,n+l+1,c-(l-r)-2)).split("=");if(2!==h.length)throw new Error("Invalid PAX header data format.");0===h[1].length&&(h[1]=null),o.push({name:h[0],value:h[1]}),r+=c}return new i(o)},i.prototype.applyHeader=function(e){for(var t=0;t<this._fields.length;t++){var n=this._fields[t].name,i=this._fields[t].value;"path"===n&&(n="name"),null===i?delete e[n]:e[n]=i}},e||(RC=a),a.prototype._hasNext=function(){return this._bytesRead+4<this._arrayBuffer.byteLength&&0!==this._bufferView.getUint32(this._bytesRead)},a.prototype._readNextFile=function(){var t=new DataView(this._arrayBuffer,this._bytesRead,512),a=n.decode(t);this._bytesRead+=512;var s=a.substring(0,100).replace(/\0/g,""),r=a.substring(257,263),o=parseInt(a.substring(124,136),8),l=a.substring(156,157),c=this._bytesRead,h=null,p=!1;switch(l){case"0":case"":if(p=!0,!e){var d=new Blob([this._arrayBuffer.slice(this._bytesRead,this._bytesRead+o)]);h=URL.createObjectURL(d)}break;case"g":this._globalPaxHeader=i.parse(this._arrayBuffer,this._bytesRead,o);break;case"x":this._paxHeader=i.parse(this._arrayBuffer,this._bytesRead,o)}this._bytesRead+=o;var u=o%512;if(0!==u&&(this._bytesRead+=512-u),!p)return null;if(-1!==r.indexOf("ustar")){var m=a.substring(345,500).replace(/\0/g,"");m.length>0&&(s=m.trim()+s.trim())}var f={name:s,start:c,size:o,url:h};return this._globalPaxHeader&&this._globalPaxHeader.applyHeader(f),this._paxHeader&&(this._paxHeader.applyHeader(f),this._paxHeader=null),f},a.prototype.untar=function(e){if(!t)return console.error("Cannot untar because TextDecoder interface is not available for this platform."),[];for(var n=[];this._hasNext();){var i=this._readNextFile();i&&(e&&i.name&&(i.name=e+i.name),n.push(i))}return n},e&&(self.onmessage=function(e){var t=e.data.id;try{var n=new a(e.data.arrayBuffer).untar(e.data.prefix);postMessage({id:t,files:n,arrayBuffer:e.data.arrayBuffer},[e.data.arrayBuffer])}catch(e){postMessage({id:t,error:e.toString()})}})}var oS=null;function lS(){if(!oS){var e="("+rS.toString()+")(true)\n\n",t=new Blob([e],{type:"application/javascript"});oS=URL.createObjectURL(t)}return oS}var cS=function(){function e(e){this._requestId=0,this._pendingRequests={},this._filenamePrefix=e,this._worker=new Worker(lS()),this._worker.addEventListener("message",this._onMessage.bind(this))}var t=e.prototype;return t._onMessage=function(e){var t=e.data.id;if(this._pendingRequests[t]){var n=this._pendingRequests[t];if(delete this._pendingRequests[t],e.data.error)n(e.data.error);else{for(var i=e.data.arrayBuffer,a=0,s=e.data.files.length;a<s;a++){var r=e.data.files[a],o=new Blob([i.slice(r.start,r.start+r.size)]);r.url=URL.createObjectURL(o)}n(null,e.data.files)}}},t.untar=function(e,t){var n=this._requestId++;this._pendingRequests[n]=t,this._worker.postMessage({id:n,prefix:this._filenamePrefix,arrayBuffer:e},[e])},t.hasPendingRequests=function(){return Object.keys(this._pendingRequests).length>0},t.destroy=function(){this._worker&&(this._worker.terminate(),this._worker=null,this._pendingRequests=null)},e}();rS();var hS=function(){function e(e){this.handlerType="bundle",this._assets=e.assets,this._worker=null,this.maxRetries=0}var t=e.prototype;return t.load=function(e,t){"string"==typeof e&&(e={load:e,original:e});var n=this;Qd.get(e.load,{responseType:Zd.ResponseType.ARRAY_BUFFER,retry:this.maxRetries>0,maxRetries:this.maxRetries},(function(i,a){if(i)t("Error loading bundle resource "+e.original+": "+i);else try{n._untar(a,t)}catch(n){t("Error loading bundle resource "+e.original+": "+n)}}))},t._untar=function(e,t){var n=this;if(we.workers)n._worker||(n._worker=new cS(n._assets.prefix)),n._worker.untar(e,(function(e,i){t(e,i),n._worker.hasPendingRequests()||(n._worker.destroy(),n._worker=null)}));else{var i=new RC(e).untar(n._assets.prefix);t(null,i)}},t.open=function(e,t){return new sS(t)},t.patch=function(e,t){},e}(),pS=function(){function e(e){this._handlers={},this._requests={},this._cache={},this._app=e}var t=e.prototype;return t.addHandler=function(e,t){this._handlers[e]=t,t._loader=this},t.removeHandler=function(e){delete this._handlers[e]},t.getHandler=function(e){return this._handlers[e]},e.makeKey=function(e,t){return e+"-"+t},t.load=function(t,n,i,a){var s=this._handlers[n];if(s)if(t){var r=e.makeKey(t,n);if(void 0!==this._cache[r])i(null,this._cache[r]);else if(this._requests[r])this._requests[r].push(i);else{this._requests[r]=[i];var o=this,l=function(e,t){e?o._onFailure(r,e):s.load(t,(function(e,n,i){if(o._requests[r])if(e)o._onFailure(r,e);else try{o._onSuccess(r,s.open(t.original,n,a),i)}catch(e){o._onFailure(r,e)}}),a)},c=t.split("?")[0];if(this._app.enableBundles&&this._app.bundles.hasUrl(c)){if(!this._app.bundles.canLoadUrl(c))return void l("Bundle for "+t+" not loaded yet");this._app.bundles.loadUrl(c,(function(e,t){l(e,{load:t,original:c})}))}else l(null,{load:t,original:a&&a.file.filename||t})}}else this._loadNull(s,i,a);else i("No resource handler for asset type: '"+n+"' when loading ["+t+"]")},t._loadNull=function(e,t,n){var i=function(i,a,s){if(i)t(i);else try{t(null,e.open(null,a,n),s)}catch(e){t(e)}};e.load(null,i,n)},t._onSuccess=function(e,t,n){null!==t?this._cache[e]=t:delete this._cache[e];for(var i=0;i<this._requests[e].length;i++)this._requests[e][i](null,t,n);delete this._requests[e]},t._onFailure=function(e,t){if(console.error(t),this._requests[e]){for(var n=0;n<this._requests[e].length;n++)this._requests[e][n](t);delete this._requests[e]}},t.open=function(e,t){var n=this._handlers[e];return n?n.open(null,t):(console.warn("No resource handler found for: "+e),t)},t.patch=function(e,t){var n=this._handlers[e.type];n?n.patch&&n.patch(e,t):console.warn("No resource handler found for: "+e.type)},t.clearCache=function(t,n){var i=e.makeKey(t,n);delete this._cache[i]},t.getFromCache=function(t,n){var i=e.makeKey(t,n);if(this._cache[i])return this._cache[i]},t.enableRetry=function(e){for(var t in void 0===e&&(e=5),e=Math.max(0,e)||0,this._handlers)this._handlers[t].maxRetries=e},t.disableRetry=function(){for(var e in this._handlers)this._handlers[e].maxRetries=0},t.destroy=function(){this._handlers={},this._requests={},this._cache={}},e}(),dS=function(){function e(){}var t=e.prototype;return t._validate=function(e){if(!e.header)throw new Error('pc.I18n#addData: Missing "header" field');if(!e.header.version)throw new Error('pc.I18n#addData: Missing "header.version" field');if(1!==e.header.version)throw new Error('pc.I18n#addData: Invalid "header.version" field');if(!e.data)throw new Error('pc.I18n#addData: Missing "data" field');if(!Array.isArray(e.data))throw new Error('pc.I18n#addData: "data" field must be an array');for(var t=0,n=e.data.length;t<n;t++){var i=e.data[t];if(!i.info)throw new Error('pc.I18n#addData: missing "data['+t+'].info" field');if(!i.info.locale)throw new Error('pc.I18n#addData: missing "data['+t+'].info.locale" field');if("string"!=typeof i.info.locale)throw new Error('pc.I18n#addData: "data['+t+'].info.locale" must be a string');if(!i.messages)throw new Error('pc.I18n#addData: missing "data['+t+'].messages" field')}},t.parse=function(e){return e.data},e}(),uS=function(e){function t(t){var n;return(n=e.call(this)||this).locale=SC,n._translations={},n._availableLangs={},n._app=t,n._assets=[],n._parser=new dS,n}Z(t,e),t.findAvailableLocale=function(e,t){return PC(e,t)};var n=t.prototype;return n.findAvailableLocale=function(e){if(this._translations[e])return e;var t=LC(e);return this._findFallbackLocale(e,t)},n.getText=function(e,t){var n,i=e;t||(t=this._locale,n=this._lang);var a=this._translations[t];return a||(n||(n=LC(t)),t=this._findFallbackLocale(t,n),a=this._translations[t]),a&&a.hasOwnProperty(e)&&(i=a[e],Array.isArray(i)&&(i=i[0]),null==i&&(i=e)),i},n.getPluralText=function(e,t,n){var i,a,s=e;n?a=IC(i=LC(n)):(n=this._locale,i=this._lang,a=this._pluralFn);var r=this._translations[n];if(r||(a=IC(i=LC(n=this._findFallbackLocale(n,i))),r=this._translations[n]),r&&r[e]&&a){var o=a(t);null==(s=r[e][o])&&(s=e)}return s},n.addData=function(e){var t;try{t=this._parser.parse(e)}catch(e){return void console.error(e)}for(var n=0,i=t.length;n<i;n++){var a=t[n],s=a.info.locale,r=a.messages;if(!this._translations[s]){this._translations[s]={};var o=LC(s);this._availableLangs[o]||(this._availableLangs[o]=s)}Object.assign(this._translations[s],r),this.fire("data:add",s,r)}},n.removeData=function(e){var t;try{t=this._parser.parse(e)}catch(e){return void console.error(e)}for(var n=0,i=t.length;n<i;n++){var a=t[n],s=a.info.locale,r=this._translations[s];if(r){var o=a.messages;for(var l in o)delete r[l];0===Object.keys(r).length&&(delete this._translations[s],delete this._availableLangs[LC(s)]),this.fire("data:remove",s,o)}}},n.destroy=function(){this._translations=null,this._availableLangs=null,this._assets=null,this._parser=null,this.off()},n._findFallbackLocale=function(e,t){var n=EC[e];return n&&this._translations[n]||(n=EC[t])&&this._translations[n]||(n=this._availableLangs[t])&&this._translations[n]?n:SC},n._onAssetAdd=function(e){e.on("load",this._onAssetLoad,this),e.on("change",this._onAssetChange,this),e.on("remove",this._onAssetRemove,this),e.on("unload",this._onAssetUnload,this),e.resource&&this._onAssetLoad(e)},n._onAssetLoad=function(e){this.addData(e.resource)},n._onAssetChange=function(e){e.resource&&this.addData(e.resource)},n._onAssetRemove=function(e){e.off("load",this._onAssetLoad,this),e.off("change",this._onAssetChange,this),e.off("remove",this._onAssetRemove,this),e.off("unload",this._onAssetUnload,this),e.resource&&this.removeData(e.resource),this._app.assets.once("add:"+e.id,this._onAssetAdd,this)},n._onAssetUnload=function(e){e.resource&&this.removeData(e.resource)},q(t,[{key:"assets",get:function(){return this._assets},set:function(e){for(var t={},n=0,i=e.length;n<i;n++)t[e[n]instanceof eS?e[n].id:e[n]]=!0;for(var a=this._assets.length;a--;){var s=this._assets[a];if(!t[s]){this._app.assets.off("add:"+s,this._onAssetAdd,this);var r=this._app.assets.get(s);r&&this._onAssetRemove(r),this._assets.splice(a,1)}}for(var o in t){var l=parseInt(o,10);if(-1===this._assets.indexOf(l)){this._assets.push(l);var c=this._app.assets.get(l);c?this._onAssetAdd(c):this._app.assets.once("add:"+l,this._onAssetAdd,this)}}}},{key:"locale",get:function(){return this._locale},set:function(e){if(this._locale!==e){var t=LC(e);if("in"!==t||(e=MC(e,t="id"),this._locale!==e)){var n=this._locale;this._locale=e,this._lang=t,this._pluralFn=IC(this._lang),this.fire("set:locale",e,n)}}}}]),t}(re),mS=function(e){function t(t){var n;return(n=e.call(this)||this).app=t,n._scripts={},n._list=[],n}Z(t,e);var n=t.prototype;return n.destroy=function(){this.app=null,this.off()},n.add=function(e){var t=this,n=e.__name;return this._scripts.hasOwnProperty(n)?(setTimeout((function(){if(e.prototype.swap){var i=t._scripts[n],a=t._list.indexOf(i);t._list[a]=e,t._scripts[n]=e,t.fire("swap",n,e),t.fire("swap:"+n,e)}else console.warn("script registry already has '"+n+"' script, define 'swap' method for new script type to enable code hot swapping")})),!1):(this._scripts[n]=e,this._list.push(e),this.fire("add",n,e),this.fire("add:"+n,e),setTimeout((function(){if(t._scripts.hasOwnProperty(n)&&t.app&&t.app.systems&&t.app.systems.script){var e,i=t.app.systems.script._components,a=[],s=[];for(i.loopIndex=0;i.loopIndex<i.length;i.loopIndex++){var r=i.items[i.loopIndex];if(r._scriptsIndex[n]&&r._scriptsIndex[n].awaiting){r._scriptsData&&r._scriptsData[n]&&(e=r._scriptsData[n].attributes);var o=r.create(n,{preloading:!0,ind:r._scriptsIndex[n].ind,attributes:e});o&&a.push(o)}}for(var l=0;l<a.length;l++)a[l].__initializeAttributes();for(var c=0;c<a.length;c++)a[c].enabled&&(a[c]._initialized=!0,s.push(a[c]),a[c].initialize&&a[c].initialize());for(var h=0;h<s.length;h++)s[h].enabled&&!s[h]._postInitialized&&(s[h]._postInitialized=!0,s[h].postInitialize&&s[h].postInitialize())}})),!0)},n.remove=function(e){var t=e,n=e;if("string"!=typeof n?n=t.__name:t=this.get(n),this.get(n)!==t)return!1;delete this._scripts[n];var i=this._list.indexOf(t);return this._list.splice(i,1),this.fire("remove",n,t),this.fire("remove:"+n,t),!0},n.get=function(e){return this._scripts[e]||null},n.has=function(e){if("string"==typeof e)return this._scripts.hasOwnProperty(e);if(!e)return!1;var t=e.__name;return this._scripts[t]===e},n.list=function(){return this._list},t}(re),fS=[],gS=function(e){function t(t,n){var i;return void 0===n&&(n=mC()),(i=e.call(this,t)||this).anim=void 0,i.animation=void 0,i.audiolistener=void 0,i.button=void 0,i.camera=void 0,i.collision=void 0,i.element=void 0,i.layoutchild=void 0,i.layoutgroup=void 0,i.light=void 0,i.model=void 0,i.particlesystem=void 0,i.render=void 0,i.rigidbody=void 0,i.screen=void 0,i.script=void 0,i.scrollbar=void 0,i.scrollview=void 0,i.sound=void 0,i.sprite=void 0,i.c={},i._app=void 0,i._destroying=!1,i._guid=null,i._template=!1,i._app=n,i}Z(t,e);var n=t.prototype;return n.addComponent=function(e,t){var n=this._app.systems[e];return n?this.c[e]?null:n.addComponent(this,t):null},n.removeComponent=function(e){var t=this._app.systems[e];t&&this.c[e]&&t.removeComponent(this)},n.findComponent=function(e){var t=this.findOne((function(t){return t.c&&t.c[e]}));return t&&t.c[e]},n.findComponents=function(e){return this.find((function(t){return t.c&&t.c[e]})).map((function(t){return t.c[e]}))},n.getGuid=function(){return this._guid||this.setGuid(le.create()),this._guid},n.setGuid=function(e){var t=this._app._entityIndex;this._guid&&delete t[this._guid],this._guid=e,t[this._guid]=this},n._notifyHierarchyStateChanged=function(e,t){var n=!1;e===this&&0===fS.length&&(n=!0),e._beingEnabled=!0,e._onHierarchyStateChanged(t),e._onHierarchyStatePostChanged&&fS.push(e);for(var i=e._children,a=0,s=i.length;a<s;a++)i[a]._enabled&&this._notifyHierarchyStateChanged(i[a],t);if(e._beingEnabled=!1,n){for(var r=0;r<fS.length;r++)fS[r]._onHierarchyStatePostChanged();fS.length=0}},n._onHierarchyStateChanged=function(t){e.prototype._onHierarchyStateChanged.call(this,t);var n=this.c;for(var i in n)if(n.hasOwnProperty(i)){var a=n[i];a.enabled&&(t?a.onEnable():a.onDisable())}},n._onHierarchyStatePostChanged=function(){var e=this.c;for(var t in e)e.hasOwnProperty(t)&&e[t].onPostStateChange()},n.findByGuid=function(e){if(this._guid===e)return this;var t=this._app._entityIndex[e];return t&&(t===this||t.isDescendantOf(this))?t:null},n.destroy=function(){for(var t in this._destroying=!0,this.c)this.c[t].enabled=!1;for(var n in this.c)this.c[n].system.removeComponent(this);e.prototype.destroy.call(this),this._guid&&delete this._app._entityIndex[this._guid],this._destroying=!1},n.clone=function(){var e={},t=this._cloneRecursively(e);return e[this.getGuid()]=t,vS(this,this,t,e),t},n._cloneRecursively=function(n){var i=new this.constructor(void 0,this._app);for(var a in e.prototype._cloneInternal.call(this,i),this.c)this.c[a].system.cloneComponent(this,i);for(var s=0;s<this._children.length;s++){var r=this._children[s];if(r instanceof t){var o=r._cloneRecursively(n);i.addChild(o),n[r.getGuid()]=o}}return i},t}(Cv);function vS(e,t,n,i){if(t instanceof gS){var a=t.c;for(var s in a)for(var r=a[s],o=r.system.getPropertiesOfType("entity"),l=0,c=o.length;l<c;l++){var h=o[l].name,p=r[h];if(e.findByGuid(p)){var d=i[p].getGuid();d&&(n.c[s][h]=d)}}a.script&&!n._app.useLegacyScriptAttributeCloning&&n.script.resolveDuplicatedEntityReferenceProperties(a.script,i),a.render&&n.render.resolveDuplicatedEntityReferenceProperties(a.render,i),a.anim&&n.anim.resolveDuplicatedEntityReferenceProperties(a.anim,i);for(var u=t.children.filter((function(e){return e instanceof gS})),m=n.children.filter((function(e){return e instanceof gS})),f=0,g=u.length;f<g;f++)vS(e,u[f],m[f],i)}}var yS=function(){function e(e,t){this.name=void 0,this.url=void 0,this.data=null,this._loading=!1,this._onLoadedCallbacks=[],this.name=e,this.url=t}return q(e,[{key:"loaded",get:function(){return!!this.data}},{key:"loading",get:function(){return this._loading}}]),e}(),_S=function(){function e(e){this._app=void 0,this._list=[],this._index={},this._urlIndex={},this._app=e}var t=e.prototype;return t.destroy=function(){this._app=null},t.list=function(){return this._list},t.add=function(e,t){if(this._index.hasOwnProperty(e))return!1;var n=new yS(e,t),i=this._list.push(n);return this._index[n.name]=i-1,this._urlIndex[n.url]=i-1,!0},t.find=function(e){return this._index.hasOwnProperty(e)?this._list[this._index[e]]:null},t.findByUrl=function(e){return this._urlIndex.hasOwnProperty(e)?this._list[this._urlIndex[e]]:null},t.remove=function(e){if(this._index.hasOwnProperty(e)){var t=this._index[e],n=this._list[t];delete this._urlIndex[n.url],delete this._index[e],this._list.splice(t,1);for(var i=0;i<this._list.length;i++)n=this._list[i],this._index[n.name]=i,this._urlIndex[n.url]=i}},t._loadSceneData=function(e,t,n){var i=this._app,a=e;"string"==typeof e&&(e=this.findByUrl(a)||this.find(a)||new yS("Untitled",a)),(a=e.url)?e.loaded?n(null,e):(i.assets&&i.assets.prefix&&!DC.test(a)&&(a=ce.join(i.assets.prefix,a)),e._onLoadedCallbacks.push(n),e._loading||i.loader.getHandler("hierarchy").load(a,(function(n,i){e.data=i,e._loading=!1;for(var a=0;a<e._onLoadedCallbacks.length;a++)e._onLoadedCallbacks[a](n,e);t||(e.data=null),e._onLoadedCallbacks.length=0})),e._loading=!0):n("Cannot find scene to load")},t.loadSceneData=function(e,t){this._loadSceneData(e,!0,t)},t.unloadSceneData=function(e){"string"==typeof e&&(e=this.findByUrl(e)),e&&(e.data=null)},t._loadSceneHierarchy=function(e,t,n){var i=this;this._loadSceneData(e,!1,(function(e,a){if(e)n&&n(e);else{t&&t(a);var s=i._app,r=function(){var e=s.loader.getHandler("hierarchy");s.systems.script.preloading=!0;var t=e.open(a.url,a.data);s.systems.script.preloading=!1,s.loader.clearCache(a.url,"hierarchy"),s.root.addChild(t),s.systems.fire("initialize",t),s.systems.fire("postInitialize",t),s.systems.fire("postPostInitialize",t),n&&n(null,t)};s._preloadScripts(a.data,r)}}))},t.loadSceneHierarchy=function(e,t){this._loadSceneHierarchy(e,null,t)},t.loadSceneSettings=function(e,t){var n=this;this._loadSceneData(e,!1,(function(e,i){e?t&&t(e):(n._app.applySceneSettings(i.data.settings),t&&t(null))}))},t.changeScene=function(e,t){var n=this._app,i=function(e){for(var t=n.root.children;t.length;)t[0].destroy();n.applySceneSettings(e.data.settings)};this._loadSceneHierarchy(e,i,t)},t.loadScene=function(e,t){var n=this,i=this._app,a=i.loader.getHandler("scene");i.assets&&i.assets.prefix&&!DC.test(e)&&(e=ce.join(i.assets.prefix,e)),a.load(e,(function(s,r){if(s)t&&t(s);else{var o=function(){i.systems.script.preloading=!0;var s=a.open(e,r),o=n.findByUrl(e);o&&!o.loaded&&(o.data=r),i.systems.script.preloading=!1,i.loader.clearCache(e,"scene"),i.loader.patch({resource:s,type:"scene"},i.assets),i.root.addChild(s.root),i.systems.rigidbody&&"undefined"!=typeof Ammo&&i.systems.rigidbody.gravity.set(s._gravity.x,s._gravity.y,s._gravity.z),t&&t(null,s)};i._preloadScripts(r,o)}}))},e}(),wS=function(){function e(e){this.frame={fps:0,ms:0,dt:0,updateStart:0,updateTime:0,renderStart:0,renderTime:0,physicsStart:0,physicsTime:0,cullTime:0,sortTime:0,skinTime:0,morphTime:0,instancingTime:0,triangles:0,otherPrimitives:0,shaders:0,materials:0,cameras:0,shadowMapUpdates:0,shadowMapTime:0,depthMapTime:0,forwardTime:0,lightClustersTime:0,lightClusters:0,_timeToCountFrames:0,_fpsAccum:0},this.drawCalls={forward:0,depth:0,shadow:0,immediate:0,misc:0,total:0,skinned:0,instanced:0,removedByInstancing:0},this.misc={renderTargetCreationTime:0},this.particles={updatesPerFrame:0,_updatesPerFrame:0,frameTime:0,_frameTime:0},this.shaders=e._shaderStats,this.vram=e._vram,Object.defineProperty(this.vram,"totalUsed",{get:function(){return this.tex+this.vb+this.ib}}),Object.defineProperty(this.vram,"geom",{get:function(){return this.vb+this.ib}})}return q(e,[{key:"scene",get:function(){return mC().scene._stats}},{key:"lightmapper",get:function(){var e;return null==(e=mC().lightmapper)?void 0:e.stats}},{key:"batcher",get:function(){var e=mC()._batcher;return e?e._stats:null}}]),e}(),bS=function(){function e(e){this.length=e,this.count=0}var t=e.prototype;return t.inc=function(){this.count++},t.done=function(){return this.count===this.length},e}();t.app=null;var xS=function(e){function n(i){var a;return a=e.call(this)||this,n._applications[i.id]=J(a),fC(J(a)),t.app=J(a),a._destroyRequested=!1,a._inFrameUpdate=!1,a._time=0,a.timeScale=1,a.maxDeltaTime=.1,a.frame=0,a.autoRender=!0,a.renderNextFrame=!1,a.useLegacyScriptAttributeCloning=_C.legacy,a._librariesLoaded=!1,a._fillMode=pC,a._resolutionMode=uC,a._allowResize=!0,a.context=J(a),a}Z(n,e);var i=n.prototype;return i.init=function(e){var t=this,n=e.graphicsDevice;this.graphicsDevice=n,ig.set(n),this._initDefaultMaterial(),this._initProgramLibrary(),this.stats=new wS(n),this._soundManager=e.soundManager,this.loader=new pS(this),Ty.init(n),this._entityIndex={},this.scene=new Wx(n),this._registerSceneImmediate(this.scene),this.root=new gS,this.root._enabledInHierarchy=!0,this.assets=new nS(this.loader),e.assetPrefix&&(this.assets.prefix=e.assetPrefix),this.bundles=new iS(this.assets),this.enableBundles="undefined"!=typeof TextDecoder,this.scriptsOrder=e.scriptsOrder||[],this.scripts=new mS(this),this.i18n=new uS(this),this.scenes=new _S(this),this.defaultLayerWorld=new db({name:"World",id:Uu}),this.defaultLayerDepth=new db({name:"Depth",id:zu,enabled:!1,opaqueSortMode:Xf}),this.defaultLayerSkybox=new db({name:"Skybox",id:Vu,opaqueSortMode:Xf}),this.defaultLayerUi=new db({name:"UI",id:Gu,transparentSortMode:Yf}),this.defaultLayerImmediate=new db({name:"Immediate",id:Hu,opaqueSortMode:Xf});var i=new gb("default");i.pushOpaque(this.defaultLayerWorld),i.pushOpaque(this.defaultLayerDepth),i.pushOpaque(this.defaultLayerSkybox),i.pushTransparent(this.defaultLayerWorld),i.pushOpaque(this.defaultLayerImmediate),i.pushTransparent(this.defaultLayerImmediate),i.pushTransparent(this.defaultLayerUi),this.scene.layers=i,CC.createPlaceholder(n),this.renderer=new tb(n),this.renderer.scene=this.scene,this.frameGraph=new wC,this.lightmapper=null,e.lightmapper&&(this.lightmapper=new e.lightmapper(n,this.root,this.scene,this.renderer,this.assets),this.once("prerender",this._firstBake,this)),this._batcher=null,e.batchManager&&(this._batcher=new e.batchManager(n,this.root,this.scene),this.once("prerender",this._firstBatch,this)),this.keyboard=e.keyboard||null,this.mouse=e.mouse||null,this.touch=e.touch||null,this.gamepads=e.gamepads||null,this.elementInput=e.elementInput||null,this.elementInput&&(this.elementInput.app=this),this.xr=e.xr?new e.xr(this):null,this.elementInput&&this.elementInput.attachSelectEvents(),this._inTools=!1,this._skyboxAsset=null,this._scriptPrefix=e.scriptPrefix||"",this.enableBundles&&this.loader.addHandler("bundle",new hS(this)),e.resourceHandlers.forEach((function(e){var n=new e(t);t.loader.addHandler(n.handlerType,n)})),this.systems=new aS,e.componentSystems.forEach((function(e){t.systems.add(new e(t))})),this._visibilityChangeHandler=this.onVisibilityChange.bind(this),"undefined"!=typeof document&&(void 0!==document.hidden?(this._hiddenAttr="hidden",document.addEventListener("visibilitychange",this._visibilityChangeHandler,!1)):void 0!==document.mozHidden?(this._hiddenAttr="mozHidden",document.addEventListener("mozvisibilitychange",this._visibilityChangeHandler,!1)):void 0!==document.msHidden?(this._hiddenAttr="msHidden",document.addEventListener("msvisibilitychange",this._visibilityChangeHandler,!1)):void 0!==document.webkitHidden&&(this._hiddenAttr="webkitHidden",document.addEventListener("webkitvisibilitychange",this._visibilityChangeHandler,!1))),this.tick=SS(this)},n.getApplication=function(e){return e?n._applications[e]:mC()},i._initDefaultMaterial=function(){var e=new zw;e.name="Default Material",e.shadingModel=Om,Jg(this.graphicsDevice,e)},i._initProgramLibrary=function(){var e=new oC(this.graphicsDevice,new zw);Ig(this.graphicsDevice,e)},i.configure=function(e,t){var n=this;Qd.get(e,(function(e,i){if(e)t(e);else{var a=i.application_properties,s=i.scenes,r=i.assets;n._parseApplicationProperties(a,(function(e){n._parseScenes(s),n._parseAssets(r),t(e||null)}))}}))},i.preload=function(e){var t=this;this.fire("preload:start");var n=this.assets.list({preload:!0}),i=new bS(n.length),a=!1,s=function(){t.graphicsDevice&&!a&&i.done()&&(a=!0,t.fire("preload:end"),e())},r=n.length;if(i.length)for(var o=function(e){i.inc(),t.fire("preload:progress",i.count/r),i.done()&&s()},l=function(e,n){i.inc(),t.fire("preload:progress",i.count/r),i.done()&&s()},c=0;c<n.length;c++)n[c].loaded?(i.inc(),this.fire("preload:progress",i.count/r),i.done()&&s()):(n[c].once("load",o),n[c].once("error",l),this.assets.load(n[c]));else s()},i._preloadScripts=function(e,t){var n=this;if(_C.legacy){this.systems.script.preloading=!0;var i=this._getScriptReferences(e),a=i.length,s=new bS(a),r=/^http(s)?:\/\//;if(a)for(var o=function(e,i){e&&console.error(e),s.inc(),s.done()&&(n.systems.script.preloading=!1,t())},l=0;l<a;l++){var c=i[l];!r.test(c.toLowerCase())&&this._scriptPrefix&&(c=ce.join(this._scriptPrefix,i[l])),this.loader.load(c,"script",o)}else this.systems.script.preloading=!1,t()}else t()},i._parseApplicationProperties=function(e,t){if("number"==typeof e.maxAssetRetries&&e.maxAssetRetries>0&&this.loader.enableRetry(e.maxAssetRetries),e.useDevicePixelRatio||(e.useDevicePixelRatio=e.use_device_pixel_ratio),e.resolutionMode||(e.resolutionMode=e.resolution_mode),e.fillMode||(e.fillMode=e.fill_mode),this._width=e.width,this._height=e.height,e.useDevicePixelRatio&&(this.graphicsDevice.maxPixelRatio=window.devicePixelRatio),this.setCanvasResolution(e.resolutionMode,this._width,this._height),this.setCanvasFillMode(e.fillMode,this._width,this._height),e.layers&&e.layerOrder){var n=new gb("application"),i={};for(var a in e.layers){var s=e.layers[a];s.id=parseInt(a,10),s.enabled=s.id!==zu,i[a]=new db(s)}for(var r=0,o=e.layerOrder.length;r<o;r++){var l=e.layerOrder[r],c=i[l.layer];c&&(l.transparent?n.pushTransparent(c):n.pushOpaque(c),n.subLayerEnabled[r]=l.enabled)}this.scene.layers=n}if(e.batchGroups){var h=this.batcher;if(h)for(var p=0,d=e.batchGroups.length;p<d;p++){var u=e.batchGroups[p];h.addGroup(u.name,u.dynamic,u.maxAabbSize,u.id,u.layers)}}e.i18nAssets&&(this.i18n.assets=e.i18nAssets),this._loadLibraries(e.libraries,t)},i._loadLibraries=function(e,t){var n=this,i=e.length,a=i,s=/^http(s)?:\/\//;if(i)for(var r=function(e,i){a--,e?t(e):0===a&&(n.onLibrariesLoaded(),t(null))},o=0;o<i;++o){var l=e[o];!s.test(l.toLowerCase())&&this._scriptPrefix&&(l=ce.join(this._scriptPrefix,l)),this.loader.load(l,"script",r)}else this.onLibrariesLoaded(),t(null)},i._parseScenes=function(e){if(e)for(var t=0;t<e.length;t++)this.scenes.add(e[t].name,e[t].url)},i._parseAssets=function(e){var t=[],n={},i={};if(_C.legacy){if(this.enableBundles)for(var a in e)"bundle"===e[a].type&&(i[a]=!0,t.push(e[a]));for(var s in e)i[s]||t.push(e[s])}else{for(var r=0;r<this.scriptsOrder.length;r++){var o=this.scriptsOrder[r];e[o]&&(n[o]=!0,t.push(e[o]))}if(this.enableBundles)for(var l in e)"bundle"===e[l].type&&(i[l]=!0,t.push(e[l]));for(var c in e)n[c]||i[c]||t.push(e[c])}for(var h=0;h<t.length;h++){var p=t[h],d=new eS(p.name,p.type,p.file,p.data);if(d.id=parseInt(p.id,10),d.preload=!!p.preload&&p.preload,d.loaded="script"===p.type&&p.data&&p.data.loadingType>0,d.tags.add(p.tags),p.i18n)for(var u in p.i18n)d.addLocalizedAssetId(u,p.i18n[u]);this.assets.add(d)}},i._getScriptReferences=function(e){var t=[];e.settings.priority_scripts&&(t=e.settings.priority_scripts);for(var n=[],i={},a=0;a<t.length;a++)n.push(t[a]),i[t[a]]=!0;var s=e.entities;for(var r in s)if(s[r].components.script)for(var o=s[r].components.script.scripts,l=0;l<o.length;l++)i[o[l].url]||(n.push(o[l].url),i[o[l].url]=!0);return n},i.start=function(){this.frame=0,this.fire("start",{timestamp:Ye(),target:this}),this._librariesLoaded||this.onLibrariesLoaded(),this.systems.fire("initialize",this.root),this.fire("initialize"),this.systems.fire("postInitialize",this.root),this.systems.fire("postPostInitialize",this.root),this.fire("postinitialize"),this.tick()},i.inputUpdate=function(e){this.controller&&this.controller.update(e),this.mouse&&this.mouse.update(),this.keyboard&&this.keyboard.update(),this.gamepads&&this.gamepads.update()},i.update=function(e){this.frame++,this.graphicsDevice.updateClientRect(),_C.legacy&&this.systems.fire("fixedUpdate",1/60),this.systems.fire(this._inTools?"toolsUpdate":"update",e),this.systems.fire("animationUpdate",e),this.systems.fire("postUpdate",e),this.fire("update",e),this.inputUpdate(e)},i.frameStart=function(){this.graphicsDevice.frameStart()},i.frameEnd=function(){this.graphicsDevice.frameEnd()},i.render=function(){this.fire("prerender"),this.root.syncHierarchy(),this._batcher&&this._batcher.updateAll(),this.renderComposition(this.scene.layers),this.fire("postrender")},i.renderComposition=function(e){this.renderer.buildFrameGraph(this.frameGraph,e),this.frameGraph.render(this.graphicsDevice)},i._fillFrameStatsBasic=function(e,t,n){var i=this.stats.frame;i.dt=t,i.ms=n,e>i._timeToCountFrames?(i.fps=i._fpsAccum,i._fpsAccum=0,i._timeToCountFrames=e+1e3):i._fpsAccum++,this.stats.drawCalls.total=this.graphicsDevice._drawCallsPerFrame,this.graphicsDevice._drawCallsPerFrame=0},i._fillFrameStats=function(){var e=this.stats.frame;e.cameras=this.renderer._camerasRendered,e.materials=this.renderer._materialSwitches,e.shaders=this.graphicsDevice._shaderSwitchesPerFrame,e.shadowMapUpdates=this.renderer._shadowMapUpdates,e.shadowMapTime=this.renderer._shadowMapTime,e.depthMapTime=this.renderer._depthMapTime,e.forwardTime=this.renderer._forwardTime;var t=this.graphicsDevice._primsPerFrame;e.triangles=t[Ri]/3+Math.max(t[Di]-2,0)+Math.max(t[ki]-2,0),e.cullTime=this.renderer._cullTime,e.sortTime=this.renderer._sortTime,e.skinTime=this.renderer._skinTime,e.morphTime=this.renderer._morphTime,e.lightClusters=this.renderer._lightClusters,e.lightClustersTime=this.renderer._lightClustersTime,e.otherPrimitives=0;for(var n=0;n<t.length;n++)n<Ri&&(e.otherPrimitives+=t[n]),t[n]=0;this.renderer._camerasRendered=0,this.renderer._materialSwitches=0,this.renderer._shadowMapUpdates=0,this.graphicsDevice._shaderSwitchesPerFrame=0,this.renderer._cullTime=0,this.renderer._layerCompositionUpdateTime=0,this.renderer._lightClustersTime=0,this.renderer._sortTime=0,this.renderer._skinTime=0,this.renderer._morphTime=0,this.renderer._shadowMapTime=0,this.renderer._depthMapTime=0,this.renderer._forwardTime=0,(e=this.stats.drawCalls).forward=this.renderer._forwardDrawCalls,e.culled=this.renderer._numDrawCallsCulled,e.depth=0,e.shadow=this.renderer._shadowDrawCalls,e.skinned=this.renderer._skinDrawCalls,e.immediate=0,e.instanced=0,e.removedByInstancing=0,e.misc=e.total-(e.forward+e.shadow),this.renderer._depthDrawCalls=0,this.renderer._shadowDrawCalls=0,this.renderer._forwardDrawCalls=0,this.renderer._numDrawCallsCulled=0,this.renderer._skinDrawCalls=0,this.renderer._immediateRendered=0,this.renderer._instancedDrawCalls=0,this.stats.misc.renderTargetCreationTime=this.graphicsDevice.renderTargetCreationTime,(e=this.stats.particles).updatesPerFrame=e._updatesPerFrame,e.frameTime=e._frameTime,e._updatesPerFrame=0,e._frameTime=0},i.setCanvasFillMode=function(e,t,n){this._fillMode=e,this.resizeCanvas(t,n)},i.setCanvasResolution=function(e,t,n){this._resolutionMode=e,e===dC&&void 0===t&&(t=this.graphicsDevice.canvas.clientWidth,n=this.graphicsDevice.canvas.clientHeight),this.graphicsDevice.resizeCanvas(t,n)},i.isHidden=function(){return document[this._hiddenAttr]},i.onVisibilityChange=function(){this.isHidden()?this._soundManager&&this._soundManager.suspend():this._soundManager&&this._soundManager.resume()},i.resizeCanvas=function(e,t){if(this._allowResize&&(!this.xr||!this.xr.session)){var n=window.innerWidth,i=window.innerHeight;if(this._fillMode===pC){var a=this.graphicsDevice.canvas.width/this.graphicsDevice.canvas.height;a>n/i?t=(e=n)/a:e=(t=i)*a}else this._fillMode===hC&&(e=n,t=i);return this.graphicsDevice.canvas.style.width=e+"px",this.graphicsDevice.canvas.style.height=t+"px",this.updateCanvasSize(),{width:e,height:t}}},i.updateCanvasSize=function(){var e;if(this._allowResize&&(null==(e=this.xr)||!e.active)&&this._resolutionMode===dC){var t=this.graphicsDevice.canvas;this.graphicsDevice.resizeCanvas(t.clientWidth,t.clientHeight)}},i.onLibrariesLoaded=function(){this._librariesLoaded=!0,this.systems.rigidbody&&this.systems.rigidbody.onLibraryLoaded()},i.applySceneSettings=function(e){var t;if(this.systems.rigidbody&&"undefined"!=typeof Ammo){var n=e.physics.gravity;this.systems.rigidbody.gravity.set(n[0],n[1],n[2])}this.scene.applySettings(e),e.render.hasOwnProperty("skybox")&&(e.render.skybox?(t=this.assets.get(e.render.skybox))?this.setSkybox(t):this.assets.once("add:"+e.render.skybox,this.setSkybox,this):this.setSkybox(null))},i.setAreaLightLuts=function(e,t){e&&t&&CC.set(this.graphicsDevice,e,t)},i.setSkybox=function(e){var t=this;if(e!==this._skyboxAsset){var n=function(){t.setSkybox(null)},i=function(){t.scene.setSkybox(t._skyboxAsset?t._skyboxAsset.resources:null)};this._skyboxAsset&&(this.assets.off("load:"+this._skyboxAsset.id,i,this),this.assets.off("remove:"+this._skyboxAsset.id,n,this),this._skyboxAsset.off("change",i,this)),this._skyboxAsset=e,this._skyboxAsset&&(this.assets.on("load:"+this._skyboxAsset.id,i,this),this.assets.once("remove:"+this._skyboxAsset.id,n,this),this._skyboxAsset.on("change",i,this),0!==this.scene.skyboxMip||this._skyboxAsset.loadFaces||(this._skyboxAsset.loadFaces=!0),this.assets.load(this._skyboxAsset)),i()}},i._firstBake=function(){var e;null==(e=this.lightmapper)||e.bake(null,this.scene.lightmapMode)},i._firstBatch=function(){var e;null==(e=this.batcher)||e.generate()},i._processTimestamp=function(e){return e},i.drawLine=function(e,t,n,i,a){this.scene.drawLine(e,t,n,i,a)},i.drawLines=function(e,t,n,i){void 0===n&&(n=!0),void 0===i&&(i=this.scene.defaultDrawLayer),this.scene.drawLines(e,t,n,i)},i.drawLineArrays=function(e,t,n,i){void 0===n&&(n=!0),void 0===i&&(i=this.scene.defaultDrawLayer),this.scene.drawLineArrays(e,t,n,i)},i.drawWireSphere=function(e,t,n,i,a,s){void 0===n&&(n=st.WHITE),void 0===i&&(i=20),void 0===a&&(a=!0),void 0===s&&(s=this.scene.defaultDrawLayer),this.scene.immediate.drawWireSphere(e,t,n,i,a,s)},i.drawWireAlignedBox=function(e,t,n,i,a){void 0===n&&(n=st.WHITE),void 0===i&&(i=!0),void 0===a&&(a=this.scene.defaultDrawLayer),this.scene.immediate.drawWireAlignedBox(e,t,n,i,a)},i.drawMeshInstance=function(e,t){void 0===t&&(t=this.scene.defaultDrawLayer),this.scene.immediate.drawMesh(null,null,null,e,t)},i.drawMesh=function(e,t,n,i){void 0===i&&(i=this.scene.defaultDrawLayer),this.scene.immediate.drawMesh(t,n,e,null,i)},i.drawQuad=function(e,t,n){void 0===n&&(n=this.scene.defaultDrawLayer),this.scene.immediate.drawMesh(t,e,this.scene.immediate.getQuadMesh(),null,n)},i.drawTexture=function(e,t,n,i,a,s,r,o){if(void 0===r&&(r=this.scene.defaultDrawLayer),void 0===o&&(o=!0),!1!==o||this.graphicsDevice.isWebGPU){var l=new St;l.setTRS(new pt(e,t,0),Et.IDENTITY,new pt(n,-i,0)),s||((s=new tv).cull=An,s.setParameter("colorMap",a),s.shader=o?this.scene.immediate.getTextureShader():this.scene.immediate.getUnfilterableTextureShader(),s.update()),this.drawQuad(l,s,r)}},i.drawDepthTexture=function(e,t,n,i,a){void 0===a&&(a=this.scene.defaultDrawLayer);var s=new tv;s.cull=An,s.shader=this.scene.immediate.getDepthTextureShader(),s.update(),this.drawTexture(e,t,n,i,null,s,a)},i.destroy=function(){var e,t,i,a;if(this._inFrameUpdate)this._destroyRequested=!0;else{var s=this.graphicsDevice.canvas.id;this.fire("destroy",this),this.off("librariesloaded"),"undefined"!=typeof document&&(document.removeEventListener("visibilitychange",this._visibilityChangeHandler,!1),document.removeEventListener("mozvisibilitychange",this._visibilityChangeHandler,!1),document.removeEventListener("msvisibilitychange",this._visibilityChangeHandler,!1),document.removeEventListener("webkitvisibilitychange",this._visibilityChangeHandler,!1)),this._visibilityChangeHandler=null,this.root.destroy(),this.root=null,this.mouse&&(this.mouse.off(),this.mouse.detach(),this.mouse=null),this.keyboard&&(this.keyboard.off(),this.keyboard.detach(),this.keyboard=null),this.touch&&(this.touch.off(),this.touch.detach(),this.touch=null),this.elementInput&&(this.elementInput.detach(),this.elementInput=null),this.gamepads&&(this.gamepads.destroy(),this.gamepads=null),this.controller&&(this.controller=null),this.systems.destroy(),this.scene.layers&&this.scene.layers.destroy();for(var r=this.assets.list(),o=0;o<r.length;o++)r[o].unload(),r[o].off();this.assets.off(),this.bundles.destroy(),this.bundles=null,this.i18n.destroy(),this.i18n=null;var l=this.loader.getHandler("script");null==l||l.clearCache(),this.loader.destroy(),this.loader=null,this.scene.destroy(),this.scene=null,this.systems=null,this.context=null,this.scripts.destroy(),this.scripts=null,this.scenes.destroy(),this.scenes=null,null==(e=this.lightmapper)||e.destroy(),this.lightmapper=null,this._batcher&&(this._batcher.destroy(),this._batcher=null),this._entityIndex={},this.defaultLayerDepth.onPreRenderOpaque=null,this.defaultLayerDepth.onPostRenderOpaque=null,this.defaultLayerDepth.onDisable=null,this.defaultLayerDepth.onEnable=null,this.defaultLayerDepth=null,this.defaultLayerWorld=null,null==(t=this.xr)||t.end(),null==(i=this.xr)||i.destroy(),this.renderer.destroy(),this.renderer=null,this.graphicsDevice.destroy(),this.graphicsDevice=null,this.tick=null,this.off(),null==(a=this._soundManager)||a.destroy(),this._soundManager=null,_C.app=null,n._applications[s]=null,mC()===this&&fC(null)}},i.getEntityFromIndex=function(e){return this._entityIndex[e]},i._registerSceneImmediate=function(e){this.on("postrender",e.immediate.onPostRender,e.immediate)},q(n,[{key:"soundManager",get:function(){return this._soundManager}},{key:"batcher",get:function(){return this._batcher}},{key:"fillMode",get:function(){return this._fillMode}},{key:"resolutionMode",get:function(){return this._resolutionMode}}]),n}(re);xS._applications={};var CS={},SS=function(e){var n,i=e;return function(e,a){var s;if(i.graphicsDevice){fC(i),n&&(window.cancelAnimationFrame(n),n=null),t.app=i;var r=i._processTimestamp(e)||Ye(),o=r-(i._time||r),l=o/1e3;if(l=at.clamp(l,0,i.maxDeltaTime),l*=i.timeScale,i._time=r,n=null!=(s=i.xr)&&s.session?i.xr.session.requestAnimationFrame(i.tick):we.browser?window.requestAnimationFrame(i.tick):null,!i.graphicsDevice.contextLost){i._fillFrameStatsBasic(r,l,o),i._inFrameUpdate=!0,i.fire("frameupdate",o);var c,h=!0;a?(h=null==(c=i.xr)?void 0:c.update(a),i.graphicsDevice.defaultFramebuffer=a.session.renderState.baseLayer.framebuffer):i.graphicsDevice.defaultFramebuffer=null,h&&(i.update(l),i.fire("framerender"),(i.autoRender||i.renderNextFrame)&&(i.updateCanvasSize(),i.frameStart(),i.render(),i.frameEnd(),i.renderNextFrame=!1),CS.timestamp=Ye(),CS.target=i,i.fire("frameend",CS)),i._inFrameUpdate=!1,i._destroyRequested&&i.destroy()}}}},ES=function(){this.elementInput=void 0,this.keyboard=void 0,this.mouse=void 0,this.touch=void 0,this.gamepads=void 0,this.scriptPrefix=void 0,this.assetPrefix=void 0,this.scriptsOrder=void 0,this.soundManager=void 0,this.graphicsDevice=void 0,this.lightmapper=void 0,this.batchManager=void 0,this.xr=void 0,this.componentSystems=[],this.resourceHandlers=[]},TS=new Dt,AS=function(){function e(e,t){this.scene=e,this.light=t,this.store(),t.numCascades=1,t.type!==Wu&&(t._node.getWorldTransform(),t.getBoundingSphere(TS),this.lightBounds=new Ot,this.lightBounds.center.copy(TS.center),this.lightBounds.halfExtents.set(TS.radius,TS.radius,TS.radius))}var t=e.prototype;return t.store=function(){this.mask=this.light.mask,this.shadowUpdateMode=this.light.shadowUpdateMode,this.enabled=this.light.enabled,this.intensity=this.light.intensity,this.rotation=this.light._node.getLocalRotation().clone(),this.numCascades=this.light.numCascades},t.restore=function(){var e=this.light;e.mask=this.mask,e.shadowUpdateMode=this.shadowUpdateMode,e.enabled=this.enabled,e.intensity=this.intensity,e._node.setLocalRotation(this.rotation),e.numCascades=this.numCascades},t.startBake=function(){this.light.enabled=!0,this.light._destroyShadowMap(),this.light.beginFrame()},t.endBake=function(e){var t=this.light;t.enabled=!1,t.shadowMap&&(t.shadowMap.cached&&e.add(t,t.shadowMap),t.shadowMap=null)},e}(),LS=new ft,MS=function(e){function t(){return e.apply(this,arguments)||this}return Z(t,e),t.prototype.prepareVirtualLight=function(e,t){var n=this.light;if(n._node.setLocalRotation(this.rotation),e>0){var i=n.bakeArea;W_.circlePointDeterministic(LS,e,t),LS.mulScalar(.5*i),n._node.rotateLocal(LS.x,0,LS.y)}n._node.getWorldTransform();var a=this.scene.gammaCorrection?2.2:1,s=Math.pow(this.intensity,a);n.intensity=Math.pow(s/t,1/a)},q(t,[{key:"numVirtualLights",get:function(){return this.light.type===Wu?this.light.bakeNumSamples:1}}]),t}(AS),PS=new pt,OS=function(e){function t(t){var n=new gS("AmbientLight");return n.addComponent("light",{type:"directional",affectDynamic:!0,affectLightmapped:!1,bake:!0,bakeNumSamples:t.ambientBakeNumSamples,castShadows:!0,normalOffsetBias:.05,shadowBias:.2,shadowDistance:1,shadowResolution:2048,shadowType:tm,color:st.WHITE,intensity:1,bakeDir:!1}),e.call(this,t,n.light.light)||this}return Z(t,e),t.prototype.prepareVirtualLight=function(e,t){W_.spherePointDeterministic(PS,e,t,0,this.scene.ambientBakeSpherePart),this.light._node.lookAt(PS.mulScalar(-1)),this.light._node.rotateLocal(90,0,0);var n=this.scene.gammaCorrection?2.2:1,i=2*Math.PI*this.scene.ambientBakeSpherePart,a=Math.pow(i,n);this.light.intensity=Math.pow(a/t,1/n)},q(t,[{key:"numVirtualLights",get:function(){return this.light.bakeNumSamples}}]),t}(AS),IS=function(){function e(e,t){void 0===t&&(t=null),this.node=e,this.component=e.render||e.model,t=t||this.component.meshInstances,this.store(),this.meshInstances=t,this.bounds=null,this.renderTargets=[]}var t=e.prototype;return t.store=function(){this.castShadows=this.component.castShadows},t.restore=function(){this.component.castShadows=this.castShadows},e}(),RS=15,DS=function(){function e(e){this.device=e,this.shaderDilate=kg(e,Mg.fullscreenQuadVS,lC.dilatePS,"lmDilate"),this.constantTexSource=e.scope.resolve("source"),this.constantPixelOffset=e.scope.resolve("pixelOffset"),this.pixelOffset=new Float32Array(2),this.shaderDenoise=null,this.sigmas=null,this.constantSigmas=null,this.kernel=null}var t=e.prototype;return t.setSourceTexture=function(e){this.constantTexSource.setValue(e)},t.prepare=function(e,t){this.pixelOffset[0]=1/e,this.pixelOffset[1]=1/t,this.constantPixelOffset.setValue(this.pixelOffset)},t.prepareDenoise=function(e,t){this.shaderDenoise||(this.shaderDenoise=kg(this.device,Mg.fullscreenQuadVS,lC.bilateralDeNoisePS,"lmBilateralDeNoise"),this.sigmas=new Float32Array(2),this.constantSigmas=this.device.scope.resolve("sigmas"),this.constantKernel=this.device.scope.resolve("kernel[0]"),this.bZnorm=this.device.scope.resolve("bZnorm")),this.sigmas[0]=e,this.sigmas[1]=t,this.constantSigmas.setValue(this.sigmas),this.evaluateDenoiseUniforms(e,t)},t.evaluateDenoiseUniforms=function(e,t){function n(e,t){return.39894*Math.exp(-.5*e*e/(t*t))/t}this.kernel=this.kernel||new Float32Array(RS);for(var i=this.kernel,a=Math.floor((RS-1)/2),s=0;s<=a;++s){var r=n(s,e);i[a+s]=r,i[a-s]=r}this.constantKernel.setValue(this.kernel);var o=1/n(0,t);this.bZnorm.setValue(o)},e}(),kS=2048,FS=0,BS=1,NS=new pt,US=function(){function e(e,t,n,i,a){this.device=e,this.root=t,this.scene=n,this.renderer=i,this.assets=a,this.shadowMapCache=i.shadowMapCache,this._tempSet=new Set,this._initCalled=!1,this.passMaterials=[],this.ambientAOMaterial=null,this.fog="",this.ambientLight=new st,this.renderTargets=new Map,this.stats={renderPasses:0,lightmapCount:0,totalRenderTime:0,forwardTime:0,fboTime:0,shadowMapTime:0,compileTime:0,shadersLinked:0}}var t=e.prototype;return t.destroy=function(){var e;Ev.decRef(this.blackTex),this.blackTex=null,Ev.destroy(),this.device=null,this.root=null,this.scene=null,this.renderer=null,this.assets=null,null==(e=this.camera)||e.destroy(),this.camera=null},t.initBake=function(e){if(!this._initCalled){this._initCalled=!0,this.lightmapFilters=new DS(e),this.constantBakeDir=e.scope.resolve("bakeDir"),this.materials=[],this.blackTex=new vl(this.device,{width:4,height:4,format:ti,type:Ta,name:"lightmapBlack"}),Ev.incRef(this.blackTex);var t=new iy;t.clearColor.set(0,0,0,0),t.clearColorBuffer=!0,t.clearDepthBuffer=!1,t.clearStencilBuffer=!1,t.frustumCulling=!1,t.projection=Sm,t.aspectRatio=1,t.node=new Cv,this.camera=t}if(this.scene.clusteredLightingEnabled){var n=new Eb(e.supportsAreaLights,e.maxTextureSize,(function(){}));this.lightingParams=n;var i=this.scene.lighting;n.shadowsEnabled=i.shadowsEnabled,n.shadowAtlasResolution=i.shadowAtlasResolution,n.cookiesEnabled=i.cookiesEnabled,n.cookieAtlasResolution=i.cookieAtlasResolution,n.areaLightsEnabled=i.areaLightsEnabled,n.cells=new pt(3,3,3),n.maxLightsPerCell=4,this.worldClusters=new Hy(e),this.worldClusters.name="ClusterLightmapper"}},t.finishBake=function(e){function t(e){Ev.decRef(e.colorBuffer),e.destroy()}this.materials=[],this.renderTargets.forEach((function(e){t(e)})),this.renderTargets.clear(),e.forEach((function(e){e.renderTargets.forEach((function(e){t(e)})),e.renderTargets.length=0})),this.ambientAOMaterial=null,this.worldClusters&&(this.worldClusters.destroy(),this.worldClusters=null)},t.createMaterialForPass=function(e,t,n,i){var a=new zw;if(a.name="lmMaterial-pass:"+n+"-ambient:"+i,a.chunks.APIVersion=tr,a.chunks.transformVS="#define UV1LAYOUT\n"+Mg.transformVS,n===FS){var s=lC.bakeLmEndPS;i?s="\n                    dDiffuseLight = ((dDiffuseLight - 0.5) * max("+t.ambientBakeOcclusionContrast.toFixed(1)+" + 1.0, 0.0)) + 0.5;\n                    dDiffuseLight += vec3("+t.ambientBakeOcclusionBrightness.toFixed(1)+");\n                    dDiffuseLight = saturate(dDiffuseLight);\n                    dDiffuseLight *= dAmbientLight;\n                "+s:(a.ambient=new st(0,0,0),a.ambientTint=!0),a.chunks.basePS=Mg.basePS+(t.lightmapPixelFormat===ti?"\n#define LIGHTMAP_RGBM\n":""),a.chunks.endPS=s,a.lightMap=this.blackTex}else a.chunks.basePS=Mg.basePS+"\nuniform sampler2D texture_dirLightMap;\nuniform float bakeDir;\n",a.chunks.endPS=lC.bakeDirLmEndPS;return a.chunks.outputAlphaPS="\n",a.chunks.outputAlphaOpaquePS="\n",a.chunks.outputAlphaPremulPS="\n",a.cull=An,a.forceUv1=!0,a.update(),a},t.createMaterials=function(e,t,n){for(var i=0;i<n;i++)this.passMaterials[i]||(this.passMaterials[i]=this.createMaterialForPass(e,t,i,!1));this.ambientAOMaterial||(this.ambientAOMaterial=this.createMaterialForPass(e,t,0,!0),this.ambientAOMaterial.onUpdateShader=function(e){return e.litOptions.lightMapWithoutAmbient=!0,e.litOptions.separateAmbient=!0,e})},t.createTexture=function(e,t){return new vl(this.device,{width:e,height:e,format:this.scene.lightmapPixelFormat,mipmaps:!1,type:this.scene.lightmapPixelFormat===ti?Ta:Ea,minFilter:On,magFilter:On,addressU:Yt,addressV:Yt,name:t})},t.collectModels=function(e,t,n){var i,a,s;if(e.enabled){var r;if(null!=(i=e.model)&&i.model&&null!=(a=e.model)&&a.enabled&&(n&&n.push(new IS(e)),e.model.lightmapped&&t&&(r=e.model.model.meshInstances)),null!=(s=e.render)&&s.enabled&&(n&&n.push(new IS(e)),e.render.lightmapped&&t&&(r=e.render.meshInstances)),r){for(var o=!0,l=0;l<r.length;l++)if(!r[l].mesh.vertexBuffer.format.hasUv1){o=!1;break}if(o){for(var c=[],h=0;h<r.length;h++){var p=r[h].mesh;this._tempSet.has(p)?t.push(new IS(e,[r[h]])):c.push(r[h]),this._tempSet.add(p)}this._tempSet.clear(),c.length>0&&t.push(new IS(e,c))}}for(var d=0;d<e._children.length;d++)this.collectModels(e._children[d],t,n)}},t.prepareShadowCasters=function(e){for(var t=[],n=0;n<e.length;n++){var i=e[n].component;if(i.castShadows=i.castShadowsLightmap,i.castShadowsLightmap)for(var a=e[n].meshInstances,s=0;s<a.length;s++)a[s].visibleThisFrame=!0,t.push(a[s])}return t},t.updateTransforms=function(e){for(var t=0;t<e.length;t++)for(var n=e[t].meshInstances,i=0;i<n.length;i++)n[i].node.getWorldTransform()},t.calculateLightmapSize=function(e){var t,n,i,a=this.scene.lightmapSizeMultiplier||16,s=NS;e.model?(i=e.model.lightmapSizeMultiplier,e.model.asset?(t=this.assets.get(e.model.asset).data).area&&(n=t.area):e.model._area&&(t=e.model)._area&&(n=t._area)):e.render&&(i=e.render.lightmapSizeMultiplier,"asset"!==e.render.type&&e.render._area&&(t=e.render)._area&&(n=t._area));var r={x:1,y:1,z:1,uv:1};n&&(r.x=n.x,r.y=n.y,r.z=n.z,r.uv=n.uv);var o=i||1;r.x*=o,r.y*=o,r.z*=o;var l=e.render||e.model,c=this.computeNodeBounds(l.meshInstances);s.copy(c.halfExtents);var h=r.x*s.y*s.z+r.y*s.x*s.z+r.z*s.x*s.y;return h/=r.uv,h=Math.sqrt(h),Math.min(at.nextPowerOfTwo(h*a),this.scene.lightmapMaxResolution||kS)},t.setLightmapping=function(e,t,n,i){for(var a=0;a<e.length;a++)for(var s=e[a],r=s.meshInstances,o=0;o<r.length;o++){var l=r[o];if(l.setLightmapped(t),t){i&&(l._shaderDefs|=i),l.mask=wf;for(var c=0;c<n;c++){var h=s.renderTargets[c].colorBuffer;h.minFilter=In,h.magFilter=In,l.setRealtimeLightmap(Dv.lightmapParamNames[c],h)}}}},t.bake=function(e,t){void 0===t&&(t=Hf);var n=this.device;if(!n.isWebGPU){var i=Ye();this.scene._updateSky(n),this.stats.renderPasses=0,this.stats.shadowMapTime=0,this.stats.forwardTime=0;var a=n._shaderStats.linked,s=n._renderTargetCreationTime,r=n._shaderStats.compileTime,o=[],l=[];if(e){for(var c=0;c<e.length;c++)this.collectModels(e[c],o,null);this.collectModels(this.root,null,l)}else this.collectModels(this.root,o,l);if(o.length>0){this.renderer.shadowRenderer.frameUpdate();var h=t===Hf?2:1;this.setLightmapping(o,!1,h),this.initBake(n),this.bakeInternal(h,o,l);var p=nf;t===Hf&&(p|=af),this.scene.ambientBake&&(p|=hf),this.setLightmapping(o,!0,h,p),this.finishBake(o)}var d=Ye();this.stats.totalRenderTime=d-i,this.stats.shadersLinked=n._shaderStats.linked-a,this.stats.compileTime=n._shaderStats.compileTime-r,this.stats.fboTime=n._renderTargetCreationTime-s,this.stats.lightmapCount=o.length}},t.allocateTextures=function(e,t){for(var n=0;n<e.length;n++){for(var i=e[n],a=this.calculateLightmapSize(i.node),s=0;s<t;s++){var r=this.createTexture(a,"lightmapper_lightmap_"+n);Ev.incRef(r),i.renderTargets[s]=new Vr({colorBuffer:r,depth:!1})}if(!this.renderTargets.has(a)){var o=this.createTexture(a,"lightmapper_temp_lightmap_"+a);Ev.incRef(o),this.renderTargets.set(a,new Vr({colorBuffer:o,depth:!1}))}}},t.prepareLightsToBake=function(e,t,n){if(this.scene.ambientBake){var i=new OS(this.scene);n.push(i)}for(var a=this.renderer.lights,s=0;s<a.length;s++){var r=a[s],o=new MS(this.scene,r);t.push(o),r.enabled&&0!=(r.mask&bf)&&(r.mask=bf|wf|_f,r.shadowUpdateMode=r.type===Wu?gf:ff,n.push(o))}n.sort()},t.restoreLights=function(e){for(var t=0;t<e.length;t++)e[t].restore()},t.setupScene=function(){this.fog=this.scene.fog,this.ambientLight.copy(this.scene.ambientLight),this.scene.fog=Mu,this.scene.ambientBake||this.scene.ambientLight.set(0,0,0),this.renderer.setSceneConstants()},t.restoreScene=function(){this.scene.fog=this.fog,this.scene.ambientLight.copy(this.ambientLight)},t.computeNodeBounds=function(e){var t=new Ot;if(e.length>0){t.copy(e[0].aabb);for(var n=1;n<e.length;n++)t.add(e[n].aabb)}return t},t.computeNodesBounds=function(e){for(var t=0;t<e.length;t++){var n=e[t].meshInstances;e[t].bounds=this.computeNodeBounds(n)}},t.computeBounds=function(e){for(var t=new Ot,n=0;n<e.length;n++){t.copy(e[0].aabb);for(var i=1;i<e.length;i++)t.add(e[i].aabb)}return t},t.backupMaterials=function(e){for(var t=0;t<e.length;t++)this.materials[t]=e[t].material},t.restoreMaterials=function(e){for(var t=0;t<e.length;t++)e[t].material=this.materials[t]},t.lightCameraPrepare=function(e,t){var n,i=t.light;return i.type===Yu&&((n=i.getRenderData(null,0).shadowCamera)._node.setPosition(i._node.getPosition()),n._node.setRotation(i._node.getRotation()),n._node.rotateLocal(-90,0,0),n.projection=Cm,n.nearClip=i.attenuationEnd/1e3,n.farClip=i.attenuationEnd,n.aspectRatio=1,n.fov=2*i._outerConeAngle,this.renderer.updateCameraFrustum(n)),n},t.lightCameraPrepareAndCull=function(e,t,n,i){var a=e.light,s=!0;if(a.type===Wu){NS.copy(i.center),NS.y+=i.halfExtents.y,this.camera.node.setPosition(NS),this.camera.node.setEulerAngles(-90,0,0),this.camera.nearClip=0,this.camera.farClip=2*i.halfExtents.y;var r=Math.max(i.halfExtents.x,i.halfExtents.z);this.camera.orthoHeight=r}else e.lightBounds.intersects(t.bounds)||(s=!1);if(a.type===Yu){for(var o=!1,l=t.meshInstances,c=0;c<l.length;c++)if(l[c]._isVisible(n)){o=!0;break}o||(s=!1)}return s},t.setupLightArray=function(e,t){e[Wu].length=0,e[ju].length=0,e[Yu].length=0,e[t.type][0]=t,t.visibleThisFrame=!0},t.renderShadowMap=function(e,t,n,i){var a=i.light,s=this.scene.clusteredLightingEnabled;if(!t&&a.castShadows){a.shadowMap||s||(a.shadowMap=this.shadowMapCache.get(this.device,a)),a.type===Wu?this.renderer._shadowRendererDirectional.cull(a,e,this.camera,n):this.renderer._shadowRendererLocal.cull(a,e,n);var r=!1;this.renderer.shadowRenderer.render(a,this.camera,r)}return!0},t.postprocessTextures=function(e,t,n){var i=1,a=this.lightmapFilters.shaderDilate,s=this.scene.lightmapFilterEnabled;s&&this.lightmapFilters.prepareDenoise(this.scene.lightmapFilterRange,this.scene.lightmapFilterSmoothness),e.setBlendState(yr.NOBLEND),e.setDepthState(xr.NODEPTH),e.setStencilState(null,null);for(var r=0;r<t.length;r++)for(var o=t[r],l=0;l<n;l++){var c=o.renderTargets[l],h=c.colorBuffer,p=this.renderTargets.get(h.width),d=p.colorBuffer;this.lightmapFilters.prepare(h.width,h.height);for(var u=0;u<i;u++)this.lightmapFilters.setSourceTexture(h),Gg(e,p,s&&0===l&&0===u?this.lightmapFilters.shaderDenoise:a),this.lightmapFilters.setSourceTexture(d),Gg(e,c,a)}},t.bakeInternal=function(e,t,n){var i=this.scene,a=i.layers,s=this.device,r=i.clusteredLightingEnabled;this.createMaterials(s,i,e),this.setupScene(),a._update(),this.computeNodesBounds(t),this.allocateTextures(t,e),this.renderer.collectLights(a);var o=[],l=[];this.prepareLightsToBake(a,o,l),this.updateTransforms(n);var c=this.prepareShadowCasters(n);this.renderer.updateCpuSkinMatrices(c),this.renderer.gpuUpdate(c);var h,p,d,u,m=this.computeBounds(c);for(h=0;h<t.length;h++)for(d=t[h].meshInstances,p=0;p<d.length;p++)(u=d[p]).setLightmapped(!1),u.mask=bf,u.setRealtimeLightmap(Dv.lightmapParamNames[0],u.material.lightMap?u.material.lightMap:this.blackTex),u.setRealtimeLightmap(Dv.lightmapParamNames[1],this.blackTex);for(p=0;p<l.length;p++)l[p].light.enabled=!1;var f,g,v=[[],[],[]],y=!1;for(h=0;h<l.length;h++){var _=l[h],w=_ instanceof OS,b=_.light.type===Wu,x=_.numVirtualLights;e>1&&x>1&&_.light.bakeDir&&(x=1);for(var C=0;C<x;C++){x>1&&_.prepareVirtualLight(C,x),_.startBake();var S=!1,E=this.lightCameraPrepare(s,_);for(g=0;g<t.length;g++){var T=t[g];if(d=T.meshInstances,this.lightCameraPrepareAndCull(_,T,E,m)){this.setupLightArray(v,_.light);var A=b?[]:[_.light];for(r&&this.renderer.lightTextureAtlas.update(A,this.lightingParams),S=this.renderShadowMap(a,S,c,_),r&&this.worldClusters.update(A,this.scene.gammaCorrection,this.lightingParams),this.backupMaterials(d),f=0;f<e&&!(f>0&&C>0)&&!(w&&f>0);f++){var L=T.renderTargets[f],M=T.renderTargets[f].colorBuffer.width,P=this.renderTargets.get(M),O=P.colorBuffer;0===f?y=i.updateShaders:y&&(i.updateShaders=!0);var I=this.passMaterials[f];for(w&&C+1===x&&0===f&&(I=this.ambientAOMaterial),p=0;p<d.length;p++)d[p].material=I;for(this.renderer.updateShaders(d),this.renderer.setCamera(this.camera,P,!0),f===BS&&this.constantBakeDir.setValue(_.light.bakeDir?1:0),r&&this.worldClusters.activate(),this.renderer._forwardTime=0,this.renderer._shadowMapTime=0,this.renderer.renderForward(this.camera,d,v,Cf),s.updateEnd(),T.renderTargets[f]=P,this.renderTargets.set(M,L),p=0;p<d.length;p++)(u=d[p]).setRealtimeLightmap(Dv.lightmapParamNames[f],O),u._shaderDefs|=nf}this.restoreMaterials(d)}}_.endBake(this.shadowMapCache)}}for(this.postprocessTextures(s,t,e),g=0;g<n.length;g++)n[g].restore();this.restoreLights(o),this.restoreScene(),r||this.shadowMapCache.clear()},e}(),zS=function(e){function t(t,n){var i;return(i=e.call(this)||this).system=void 0,i.entity=void 0,i.system=t,i.entity=n,i.system.schema&&!i._accessorsBuilt&&i.buildAccessors(i.system.schema),i.on("set",(function(e,t,n){this.fire("set_"+e,e,t,n)})),i.on("set_enabled",i.onSetEnabled,J(i)),i}Z(t,e),t._buildAccessors=function(e,t){t.forEach((function(t){var n="object"==typeof t?t.name:t;Object.defineProperty(e,n,{get:function(){return this.data[n]},set:function(e){var t=this.data,i=t[n];t[n]=e,this.fire("set",n,i,e)},configurable:!0})})),e._accessorsBuilt=!0};var n=t.prototype;return n.buildAccessors=function(e){t._buildAccessors(this,e)},n.onSetEnabled=function(e,t,n){t!==n&&this.entity.enabled&&(n?this.onEnable():this.onDisable())},n.onEnable=function(){},n.onDisable=function(){},n.onPostStateChange=function(){},q(t,[{key:"data",get:function(){var e=this.system.store[this.entity.getGuid()];return e?e.data:null}}]),t}(re),VS=function(e){function t(t){var n;return(n=e.call(this)||this).app=t,n.store={},n.schema=[],n}Z(t,e);var n=t.prototype;return n.addComponent=function(e,t){void 0===t&&(t={});var n=new this.ComponentType(this,e),i=new this.DataType;return this.store[e.getGuid()]={entity:e,data:i},e[this.id]=n,e.c[this.id]=n,this.initializeComponentData(n,t,[]),this.fire("add",e,n),n},n.removeComponent=function(e){var t=this.store[e.getGuid()],n=e.c[this.id];this.fire("beforeremove",e,n),delete this.store[e.getGuid()],e[this.id]=void 0,delete e.c[this.id],this.fire("remove",e,t.data)},n.cloneComponent=function(e,t){var n=this.store[e.getGuid()];return this.addComponent(t,n.data)},n.initializeComponentData=function(e,t,n){void 0===t&&(t={});for(var i=0,a=n.length;i<a;i++){var s=n[i],r=void 0,o=void 0;"object"==typeof s?(r=s.name,o=s.type):(r=s,o=void 0);var l=t[r];void 0!==l?(void 0!==o&&(l=HS(l,o)),e[r]=l):e[r]=e.data[r]}e.enabled&&e.entity.enabled&&e.onEnable()},n.getPropertiesOfType=function(e){var t=[];return(this.schema||[]).forEach((function(n){n&&"object"==typeof n&&n.type===e&&t.push(n)})),t},n.destroy=function(){this.off()},t}(re);function HS(e,t){if(!e)return e;switch(t){case"rgb":return e instanceof st?e.clone():new st(e[0],e[1],e[2]);case"rgba":return e instanceof st?e.clone():new st(e[0],e[1],e[2],e[3]);case"vec2":return e instanceof ft?e.clone():new ft(e[0],e[1]);case"vec3":return e instanceof pt?e.clone():new pt(e[0],e[1],e[2]);case"vec4":return e instanceof vt?e.clone():new vt(e[0],e[1],e[2],e[3]);case"boolean":case"number":case"string":case"entity":return e;default:throw new Error("Could not convert unhandled type: "+t)}}var GS=0,WS=1,jS=2,XS=function(){function e(){this._left=1/0,this._right=-1/0,this._len=0,this._recip=0,this._p0=0,this._p1=0,this._t=0,this._hermite={valid:!1,p0:0,m0:0,p1:0,m1:0}}var t=e.prototype;return t.update=function(e,t){if(e<this._left||e>=this._right){var n=t.length;if(n)if(e<t[0])this._left=-1/0,this._right=t[0],this._len=0,this._recip=0,this._p0=this._p1=0;else if(e>=t[n-1])this._left=t[n-1],this._right=1/0,this._len=0,this._recip=0,this._p0=this._p1=n-1;else{var i=this._findKey(e,t);this._left=t[i],this._right=t[i+1],this._len=this._right-this._left;var a=1/this._len;this._recip=isFinite(a)?a:0,this._p0=i,this._p1=i+1}else this._left=-1/0,this._right=1/0,this._len=0,this._recip=0,this._p0=this._p1=0}this._t=0===this._recip?0:(e-this._left)*this._recip,this._hermite.valid=!1},t._findKey=function(e,t){for(var n=0;e>=t[n+1];)n++;return n},t.eval=function(e,t,n){var i=n._data,a=n._components,s=this._p0*a;if(t===GS)for(var r=0;r<a;++r)e[r]=i[s+r];else{var o=this._t,l=this._p1*a;switch(t){case WS:for(var c=0;c<a;++c)e[c]=at.lerp(i[s+c],i[l+c],o);break;case jS:var h=this._hermite;if(!h.valid){var p=o*o,d=o+o,u=1-o,m=u*u;h.valid=!0,h.p0=(1+d)*m,h.m0=o*m,h.p1=p*(3-d),h.m1=p*(o-1)}for(var f=(3*this._p0+1)*a,g=(3*this._p0+2)*a,v=(3*this._p1+1)*a,y=(3*this._p1+0)*a,_=0;_<a;++_)e[_]=h.p0*i[f+_]+h.m0*i[g+_]*this._len+h.p1*i[v+_]+h.m1*i[y+_]*this._len}}},e}(),YS=function(e){this._name=e.name+"Snapshot",this._time=-1,this._cache=[],this._results=[];for(var t=0;t<e._inputs.length;++t)this._cache[t]=new XS;for(var n=e._curves,i=e._outputs,a=0;a<n.length;++a){for(var s=i[n[a]._output],r=[],o=0;o<s._components;++o)r[o]=0;this._results[a]=r}},qS=function(){function e(e,t,n,i,a,s){this._name=e.name,this._track=e,this._snapshot=new YS(e),this._playing=i,this._time=t,this._speed=n,this._loop=a,this._blendWeight=1,this._blendOrder=0,this._eventHandler=s,this.alignCursorToCurrentTime()}var t=e.prototype;return t.nextEventAheadOfTime=function(e){return!!this.nextEvent&&(this.isReverse?this.nextEvent.time<=e:this.nextEvent.time>=e)},t.nextEventBehindTime=function(e){return!!this.nextEvent&&(e===this.track.duration?this.isReverse?this.nextEvent.time>=e:this.nextEvent.time<=e:this.isReverse?this.nextEvent.time>e:this.nextEvent.time<e)},t.resetEventCursor=function(){this._eventCursor=this.isReverse?this._track.events.length-1:0},t.moveEventCursor=function(){this._eventCursor+=this.isReverse?-1:1,this._eventCursor>=this.track.events.length?this._eventCursor=0:this._eventCursor<0&&(this._eventCursor=this.track.events.length-1)},t.clipFrameTime=function(t){var n=e.eventFrame;n.start=0,n.end=t,n.residual=0,this.isReverse?t<0&&(n.start=this.track.duration,n.end=0,n.residual=t+this.track.duration):t>this.track.duration&&(n.start=0,n.end=this.track.duration,n.residual=t-this.track.duration)},t.alignCursorToCurrentTime=function(){for(this.resetEventCursor();this.nextEventBehindTime(this._time)&&this._eventCursor!==this.eventCursorEnd;)this.moveEventCursor()},t.fireNextEvent=function(){this._eventHandler.fire(this.nextEvent.name,K({track:this.track},this.nextEvent)),this.moveEventCursor()},t.fireNextEventInFrame=function(e,t){return!(!this.nextEventAheadOfTime(e)||!this.nextEventBehindTime(t)||(this.fireNextEvent(),0))},t.activeEventsForFrame=function(t,n){var i=e.eventFrame;this.clipFrameTime(n);for(var a=this.eventCursor;this.fireNextEventInFrame(t,i.end)&&a!==this.eventCursor;);this.loop&&Math.abs(i.residual)>0&&this.activeEventsForFrame(i.start,i.residual)},t.progressForTime=function(e){return e*this._speed/this._track.duration},t._update=function(e){if(this._playing){var t=this._time,n=this._track.duration,i=this._speed,a=this._loop;this._track.events.length>0&&n>0&&this.activeEventsForFrame(t,t+i*e),t+=i*e,i>=0?t>n&&(a?t=t%n||0:(t=this._track.duration,this.pause())):t<0&&(a?t=n+(t%n||0):(t=0,this.pause())),this._time=t}this._time!==this._snapshot._time&&this._track.eval(this._time,this._snapshot)},t.play=function(){this._playing=!0,this._time=0},t.stop=function(){this._playing=!1,this._time=0},t.pause=function(){this._playing=!1},t.resume=function(){this._playing=!0},t.reset=function(){this._time=0},q(e,[{key:"name",get:function(){return this._name},set:function(e){this._name=e}},{key:"track",get:function(){return this._track},set:function(e){this._track=e,this._snapshot=new YS(e)}},{key:"snapshot",get:function(){return this._snapshot}},{key:"time",get:function(){return this._time},set:function(e){this._time=e,this.alignCursorToCurrentTime()}},{key:"speed",get:function(){return this._speed},set:function(e){var t=Math.sign(e)!==Math.sign(this._speed);this._speed=e,t&&this.alignCursorToCurrentTime()}},{key:"loop",get:function(){return this._loop},set:function(e){this._loop=e}},{key:"blendWeight",get:function(){return this._blendWeight},set:function(e){this._blendWeight=e}},{key:"blendOrder",get:function(){return this._blendOrder},set:function(e){this._blendOrder=e}},{key:"eventCursor",get:function(){return this._eventCursor},set:function(e){this._eventCursor=e}},{key:"eventCursorEnd",get:function(){return this.isReverse?0:this._track.events.length-1}},{key:"nextEvent",get:function(){return this._track.events[this._eventCursor]}},{key:"isReverse",get:function(){return this._speed<0}}]),e}();qS.eventFrame={start:0,end:0,residual:0};var KS="NONE",ZS="PREV_STATE",QS="NEXT_STATE",JS="PREV_STATE_NEXT_STATE",$S="NEXT_STATE_PREV_STATE",eE="GREATER_THAN",tE="LESS_THAN",nE="GREATER_THAN_EQUAL_TO",iE="LESS_THAN_EQUAL_TO",aE="EQUAL_TO",sE="NOT_EQUAL_TO",rE="INTEGER",oE="FLOAT",lE="BOOLEAN",cE="TRIGGER",hE="1D",pE="2D_DIRECTIONAL",dE="2D_CARTESIAN",uE="DIRECT",mE="START",fE="END",gE="ANY",vE=[mE,fE,gE],yE="OVERWRITE",_E="ADDITIVE",wE=function(){function e(){}return e.dot=function(e,t){for(var n=e.length,i=0,a=0;a<n;++a)i+=e[a]*t[a];return i},e.normalize=function(t){var n=e.dot(t,t);if(n>0){n=1/Math.sqrt(n);for(var i=t.length,a=0;a<i;++a)t[a]*=n}},e.set=function(t,n,i){var a=t.length;if("quaternion"===i){var s=e.dot(n,n);s>0&&(s=1/Math.sqrt(s));for(var r=0;r<a;++r)t[r]=n[r]*s}else for(var o=0;o<a;++o)t[o]=n[o]},e.blendVec=function(e,t,n,i){for(var a=i?1:1-n,s=e.length,r=0;r<s;++r)e[r]=e[r]*a+t[r]*n},e.blendQuat=function(t,n,i,a){var s=t.length,r=a?1:1-i;e.dot(t,n)<0&&(i=-i);for(var o=0;o<s;++o)t[o]=t[o]*r+n[o]*i;a||e.normalize(t)},e.blend=function(t,n,i,a,s){"quaternion"===a?e.blendQuat(t,n,i,s):e.blendVec(t,n,i,s)},e.stableSort=function(e,t){for(var n=e.length,i=0;i<n-1;++i)for(var a=i+1;a<n;++a)if(t(e[a],e[i])){var s=e[i];e[i]=e[a],e[a]=s}},e}(),bE=function(){function e(t,n){this._component=t,this.mask=new Int8Array(t.layers.length),this.weights=new Float32Array(t.layers.length),this.totalWeight=0,this.counter=0,this.layerCounter=0,this.valueType=n,this.dirty=!0,this.value=n===e.TYPE_QUAT?[0,0,0,1]:[0,0,0],this.baseValue=null,this.setter=null}var t=e.prototype;return t.getWeight=function(e){return this.dirty&&this.updateWeights(),this._normalizeWeights&&0===this.totalWeight||!this.mask[e]?0:this._normalizeWeights?this.weights[e]/this.totalWeight:at.clamp(this.weights[e],0,1)},t._layerBlendType=function(e){return this._component.layers[e].blendType},t.setMask=function(e,t){this.mask[e]=t,this._normalizeWeights&&(this._component.layers[e].blendType===yE&&(this.mask=this.mask.fill(0,0,e)),this.dirty=!0)},t.updateWeights=function(){this.totalWeight=0;for(var e=0;e<this.weights.length;e++)this.weights[e]=this._component.layers[e].weight,this.totalWeight+=this.mask[e]*this.weights[e];this.dirty=!1},t.updateValue=function(t,n){if(0===this.counter&&(wE.set(this.value,e.IDENTITY_QUAT_ARR,this.valueType),this._normalizeWeights||wE.blend(this.value,this.baseValue,1,this.valueType)),this.mask[t]&&0!==this.getWeight(t)){if(this._layerBlendType(t)!==_E||this._normalizeWeights)wE.blend(this.value,n,this.getWeight(t),this.valueType);else if(this.valueType===e.TYPE_QUAT){var i=e.q1.set(this.value[0],this.value[1],this.value[2],this.value[3]),a=e.q2.set(this.baseValue[0],this.baseValue[1],this.baseValue[2],this.baseValue[3]),s=e.q3.set(n[0],n[1],n[2],n[3]),r=a.invert().mul(s);r.slerp(Et.IDENTITY,r,this.getWeight(t)),i.mul(r),e.quatArr[0]=i.x,e.quatArr[1]=i.y,e.quatArr[2]=i.z,e.quatArr[3]=i.w,wE.set(this.value,e.quatArr,this.valueType)}else e.vecArr[0]=n[0]-this.baseValue[0],e.vecArr[1]=n[1]-this.baseValue[1],e.vecArr[2]=n[2]-this.baseValue[2],wE.blend(this.value,e.vecArr,this.getWeight(t),this.valueType,!0);this.setter&&this.setter(this.value)}},t.unbind=function(){this.setter&&this.setter(this.baseValue)},q(e,[{key:"_normalizeWeights",get:function(){return this._component.normalizeWeights}}]),e}();bE.TYPE_QUAT="quaternion",bE.TYPE_VEC3="vector3",bE.q1=new Et,bE.q2=new Et,bE.q3=new Et,bE.quatArr=[0,0,0,1],bE.vecArr=[0,0,0],bE.IDENTITY_QUAT_ARR=[0,0,0,1];var xE,CE=function(){function e(e){this._binder=e,this._clips=[],this._inputs=[],this._outputs=[],this._targets={}}var t=e.prototype;return t.addClip=function(e){for(var t=this._targets,n=this._binder,i=e.track.curves,a=e.snapshot,s=[],r=[],o=0;o<i.length;++o)for(var l=i[o].paths,c=0;c<l.length;++c){var h=l[c],p=n.resolve(h),d=t[p&&p.targetPath||null];if(!d&&p){d={target:p,value:[],curves:0,blendCounter:0};for(var u=0;u<d.target.components;++u)d.value.push(0);if(t[p.targetPath]=d,n.animComponent){if(!n.animComponent.targets[p.targetPath]){var m=void 0;m="localRotation"===p.targetPath.substring(p.targetPath.length-13)?bE.TYPE_QUAT:bE.TYPE_VEC3,n.animComponent.targets[p.targetPath]=new bE(n.animComponent,m)}n.animComponent.targets[p.targetPath].layerCounter++,n.animComponent.targets[p.targetPath].setMask(n.layerIndex,1)}}d&&(d.curves++,s.push(a._results[o]),r.push(d))}this._clips.push(e),this._inputs.push(s),this._outputs.push(r)},t.removeClip=function(e){for(var t=this._targets,n=this._binder,i=this._clips,a=i[e].track.curves,s=0;s<a.length;++s)for(var r=a[s].paths,o=0;o<r.length;++o){var l=r[o],c=this._binder.resolve(l);c&&(c.curves--,0===c.curves&&(n.unresolve(l),delete t[c.targetPath],n.animComponent&&n.animComponent.targets[c.targetPath].layerCounter--))}i.splice(e,1),this._inputs.splice(e,1),this._outputs.splice(e,1)},t.removeClips=function(){for(;this._clips.length>0;)this.removeClip(0)},t.updateClipTrack=function(e,t){this._clips.forEach((function(n){n.name.includes(e)&&(n.track=t)})),this.rebind()},t.findClip=function(e){for(var t=this._clips,n=0;n<t.length;++n){var i=t[n];if(i.name===e)return i}return null},t.rebind=function(){var e=this;this._binder.rebind(),this._targets={};var t=[].concat(this.clips);this.removeClips(),t.forEach((function(t){e.addClip(t)}))},t.assignMask=function(e){return this._binder.assignMask(e)},t.update=function(e,t){void 0===t&&(t=!0);var n=this._clips,i=n.map((function(e,t){return t}));wE.stableSort(i,(function(e,t){return n[e].blendOrder<n[t].blendOrder}));for(var a=0;a<i.length;++a){var s=i[a],r=n[s],o=this._inputs[s],l=this._outputs[s],c=r.blendWeight;if(c>0&&r._update(e),!t)break;var h=void 0,p=void 0,d=void 0;if(c>=1)for(var u=0;u<o.length;++u)h=o[u],d=(p=l[u]).value,wE.set(d,h,p.target.type),p.blendCounter++;else if(c>0)for(var m=0;m<o.length;++m)h=o[m],d=(p=l[m]).value,0===p.blendCounter?wE.set(d,h,p.target.type):wE.blend(d,h,c,p.target.type),p.blendCounter++}var f=this._targets,g=this._binder;for(var v in f)if(f.hasOwnProperty(v)){var y=f[v];if(g.animComponent&&y.target.isTransform){var _=g.animComponent.targets[v];_.counter===_.layerCounter&&(_.counter=0),_.path||(_.path=v,_.baseValue=y.target.get(),_.setter=y.target.set),_.updateValue(g.layerIndex,y.value),_.counter++}else y.target.set(y.value);y.blendCounter=0}this._binder.update(e)},q(e,[{key:"clips",get:function(){return this._clips}}]),e}(),SE=function(){function e(e){this._events=[].concat(e),this._events.sort((function(e,t){return e.time-t.time}))}return q(e,[{key:"events",get:function(){return this._events}}]),e}(),EE=function(){function e(e,t,n,i,a,s){void 0===s&&(s=new SE([])),this._name=e,this._duration=t,this._inputs=n,this._outputs=i,this._curves=a,this._animEvents=s}return e.prototype.eval=function(e,t){t._time=e;for(var n=this._inputs,i=this._outputs,a=this._curves,s=t._cache,r=t._results,o=0;o<n.length;++o)s[o].update(e,n[o]._data);for(var l=0;l<a.length;++l){var c=a[l],h=i[c._output],p=r[l];s[c._input].eval(p,c._interpolation,h)}},q(e,[{key:"name",get:function(){return this._name}},{key:"duration",get:function(){return this._duration}},{key:"inputs",get:function(){return this._inputs}},{key:"outputs",get:function(){return this._outputs}},{key:"curves",get:function(){return this._curves}},{key:"events",get:function(){return this._animEvents.events},set:function(e){this._animEvents=e}}]),e}();xE=EE,EE.EMPTY=Object.freeze(new xE("empty",Number.MAX_VALUE,[],[],[]));var TE=function(){function e(){}e.joinPath=function(e,t){t=t||".";var n=function(e){return e.replace(/\\/g,"\\\\").replace(new RegExp("\\"+t,"g"),"\\"+t)};return e.map(n).join(t)},e.splitPath=function(e,t){t=t||".";for(var n=[],i="",a=0;a<e.length;){var s=e[a++];"\\"===s&&a<e.length?i+="\\"===(s=e[a++])||s===t?s:"\\"+s:s===t?(n.push(i),i=""):i+=s}return i.length>0&&n.push(i),n},e.encode=function(e,t,n){return(Array.isArray(e)?e.join("/"):e)+"/"+t+"/"+(Array.isArray(n)?n.join("/"):n)};var t=e.prototype;return t.resolve=function(e){return null},t.unresolve=function(e){},t.update=function(e){},e}(),AE=function(){function e(e,t,n,i){e.set?(this._set=e.set,this._get=e.get):this._set=e,this._type=t,this._components=n,this._targetPath=i,this._isTransform="localRotation"===this._targetPath.substring(this._targetPath.length-13)||"localPosition"===this._targetPath.substring(this._targetPath.length-13)||"localScale"===this._targetPath.substring(this._targetPath.length-10)}return q(e,[{key:"set",get:function(){return this._set}},{key:"get",get:function(){return this._get}},{key:"type",get:function(){return this._type}},{key:"components",get:function(){return this._components}},{key:"targetPath",get:function(){return this._targetPath}},{key:"isTransform",get:function(){return this._isTransform}}]),e}(),LE=function(){function e(t){var n=this;if(this._isPathInMask=function(e,t){var i=n._mask[e];return!!i&&!!(i.children||t&&!1!==i.value)},this.graph=t,t){this._mask=null;var i={},a=function e(t){i[t.name]=t;for(var n=0;n<t.children.length;++n)e(t.children[n])};a(t),this.nodes=i,this.targetCache={};var s=function(e){for(var t,n=e;n&&!(n instanceof gS);)n=n.parent;return n&&(n.render?t=n.render.meshInstances:n.model&&(t=n.model.meshInstances)),t};this.nodeCounts={},this.activeNodes=[],this.handlers={localPosition:function(t){var n=t.localPosition,i=function(e){n.set.apply(n,e)};return e.createAnimTarget(i,"vector",3,t,"localPosition")},localRotation:function(t){var n=t.localRotation,i=function(e){n.set.apply(n,e)};return e.createAnimTarget(i,"quaternion",4,t,"localRotation")},localScale:function(t){var n=t.localScale,i=function(e){n.set.apply(n,e)};return e.createAnimTarget(i,"vector",3,t,"localScale")},weight:function(t,n){n=0===n.indexOf("name.")?n.replace("name.",""):Number(n);var i,a=s(t);if(a)for(var r=function(){if(a[o].node.name===t.name&&a[o].morphInstance){var e=a[o].morphInstance,s=function(t){e.setWeight(n,t[0])};i||(i=[]),i.push(s)}},o=0;o<a.length;++o)r();if(i){var l=function(e){for(var t=0;t<i.length;++t)i[t](e)};return e.createAnimTarget(l,"number",1,t,"weight."+n)}return null},materialTexture:function(t,i){var a=s(t);if(a){for(var r,o=0;o<a.length;++o)if(a[o].node.name===t.name){r=a[o];break}if(r){var l=function(e){var t=n.animComponent.system.app.assets.get(e[0]);t&&t.resource&&"texture"===t.type&&(r.material[i]=t.resource,r.material.update())};return e.createAnimTarget(l,"vector",1,t,"materialTexture","material")}}return null}}}}var t=e.prototype;return t._isPathActive=function(e){if(!this._mask)return!0;for(var t=[e.entityPath[0],this.graph.name],n=0;n<t.length;++n){var i=t[n];if(this._isPathInMask(i,1===e.entityPath.length))return!0;for(var a=1;a<e.entityPath.length;a++)if(i+="/"+e.entityPath[a],this._isPathInMask(i,a===e.entityPath.length-1))return!0}return!1},t.findNode=function(e){return this._isPathActive(e)?(this.graph&&((t=this.graph.findByPath(e.entityPath))||(t=this.graph.findByPath(e.entityPath.slice(1)))),t||(t=this.nodes[e.entityPath[e.entityPath.length-1]||""]),t):null;var t},e.createAnimTarget=function(e,t,n,i,a,s){var r=TE.encode(i.path,s||"entity",a);return new AE(e,t,n,r)},t.resolve=function(e){var t=TE.encode(e.entityPath,e.component,e.propertyPath),n=this.targetCache[t];if(n)return n;var i=this.findNode(e);if(!i)return null;var a=this.handlers[e.propertyPath];return a&&(n=a(i))?(this.targetCache[t]=n,this.nodeCounts[i.path]?this.nodeCounts[i.path]++:(this.activeNodes.push(i),this.nodeCounts[i.path]=1),n):null},t.unresolve=function(e){if("graph"===e.component){var t=this.nodes[e.entityPath[e.entityPath.length-1]||""];if(this.nodeCounts[t.path]--,0===this.nodeCounts[t.path]){var n=this.activeNodes,i=n.indexOf(t.node),a=n.length;i<a-1&&(n[i]=n[a-1]),n.pop()}}},t.update=function(e){for(var t=this.activeNodes,n=0;n<t.length;++n)t[n]._dirtifyLocal()},t.assignMask=function(e){return e!==this._mask&&(this._mask=e,!0)},e}(),ME=function(e){function t(t,n){var i;return(i=e.call(this,t,n)||this)._animations={},i._assets=[],i._loop=!0,i.animEvaluator=null,i.model=null,i.skeleton=null,i.fromSkel=null,i.toSkel=null,i.animationsIndex={},i.prevAnim=null,i.currAnim=null,i.blend=0,i.blending=!1,i.blendSpeed=0,i.activate=!0,i.speed=1,i}Z(t,e);var n=t.prototype;return n.play=function(e,t){if(void 0===t&&(t=0),this.enabled&&this.entity.enabled&&this.animations[e]){if(this.prevAnim=this.currAnim,this.currAnim=e,this.model){this.skeleton||this.animEvaluator||this._createAnimationController();var n=this.animations[this.prevAnim],i=this.animations[this.currAnim];if(this.blending=t>0&&!!this.prevAnim,this.blending&&(this.blend=0,this.blendSpeed=1/t),this.skeleton&&(this.blending?(this.fromSkel.animation=n,this.fromSkel.addTime(this.skeleton._time),this.toSkel.animation=i):this.skeleton.animation=i),this.animEvaluator){var a=this.animEvaluator;if(this.blending)for(;a.clips.length>1;)a.removeClip(0);else this.animEvaluator.removeClips();var s=new qS(this.animations[this.currAnim],0,1,!0,this.loop);s.name=this.currAnim,s.blendWeight=this.blending?0:1,s.reset(),this.animEvaluator.addClip(s)}}this.playing=!0}},n.getAnimation=function(e){return this.animations[e]},n.setModel=function(e){e!==this.model&&(this._resetAnimationController(),this.model=e,this.animations&&this.currAnim&&this.animations[this.currAnim]&&this.play(this.currAnim))},n.onSetAnimations=function(){var e=this.entity.model;if(e){var t=e.model;t&&t!==this.model&&this.setModel(t)}if(!this.currAnim&&this.activate&&this.enabled&&this.entity.enabled){var n=Object.keys(this._animations);n.length>0&&this.play(n[0])}},n._resetAnimationController=function(){this.skeleton=null,this.fromSkel=null,this.toSkel=null,this.animEvaluator=null},n._createAnimationController=function(){var e=this.model,t=this.animations,n=!1,i=!1;for(var a in t)t.hasOwnProperty(a)&&(t[a].constructor===EE?i=!0:n=!0);var s=e.getGraph();n?(this.fromSkel=new eC(s),this.toSkel=new eC(s),this.skeleton=new eC(s),this.skeleton.looping=this.loop,this.skeleton.setGraph(s)):i&&(this.animEvaluator=new CE(new LE(this.entity)))},n.loadAnimationAssets=function(e){var t=this;if(e&&e.length)for(var n=this.system.app.assets,i=function(e){if(e.resources.length>1)for(var n=0;n<e.resources.length;n++)t.animations[e.resources[n].name]=e.resources[n],t.animationsIndex[e.id]=e.resources[n].name;else t.animations[e.name]=e.resource,t.animationsIndex[e.id]=e.name;t.animations=t.animations},a=function(e){e.off("change",t.onAssetChanged,t),e.on("change",t.onAssetChanged,t),e.off("remove",t.onAssetRemoved,t),e.on("remove",t.onAssetRemoved,t),e.resource?i(e):(e.once("load",i,t),t.enabled&&t.entity.enabled&&n.load(e))},s=0,r=e.length;s<r;s++){var o=n.get(e[s]);o?a(o):n.on("add:"+e[s],a)}},n.onAssetChanged=function(e,t,n,i){if("resource"===t||"resources"===t)if("resources"===t&&n&&0===n.length&&(n=null),n){var a=!1;if(n.length>1){if(i&&i.length>1)for(var s=0;s<i.length;s++)delete this.animations[i[s].name];else delete this.animations[e.name];a=!1;for(var r=0;r<n.length;r++)this.animations[n[r].name]=n[r],a||this.currAnim!==n[r].name||this.playing&&this.enabled&&this.entity.enabled&&(a=!0,this.play(n[r].name));a||(this._stopCurrentAnimation(),this.onSetAnimations())}else{if(i&&i.length>1)for(var o=0;o<i.length;o++)delete this.animations[i[o].name];this.animations[e.name]=n[0]||n,a=!1,this.currAnim===e.name&&this.playing&&this.enabled&&this.entity.enabled&&(a=!0,this.play(e.name)),a||(this._stopCurrentAnimation(),this.onSetAnimations())}this.animationsIndex[e.id]=e.name}else{if(i.length>1)for(var l=0;l<i.length;l++)delete this.animations[i[l].name],this.currAnim===i[l].name&&this._stopCurrentAnimation();else delete this.animations[e.name],this.currAnim===e.name&&this._stopCurrentAnimation();delete this.animationsIndex[e.id]}},n.onAssetRemoved=function(e){if(e.off("remove",this.onAssetRemoved,this),this.animations){if(e.resources.length>1)for(var t=0;t<e.resources.length;t++)delete this.animations[e.resources[t].name],this.currAnim===e.resources[t].name&&this._stopCurrentAnimation();else delete this.animations[e.name],this.currAnim===e.name&&this._stopCurrentAnimation();delete this.animationsIndex[e.id]}},n._stopCurrentAnimation=function(){if(this.currAnim=null,this.playing=!1,this.skeleton&&(this.skeleton.currentTime=0,this.skeleton.animation=null),this.animEvaluator){for(var e=0;e<this.animEvaluator.clips.length;++e)this.animEvaluator.clips[e].stop();this.animEvaluator.update(0),this.animEvaluator.removeClips()}},n.onEnable=function(){e.prototype.onEnable.call(this);var t=this.assets,n=this.system.app.assets;if(t)for(var i=0,a=t.length;i<a;i++){var s=t[i];s instanceof eS||(s=n.get(s)),s&&!s.resource&&n.load(s)}if(this.activate&&!this.currAnim){var r=Object.keys(this.animations);r.length>0&&this.play(r[0])}},n.onBeforeRemove=function(){for(var e=0;e<this.assets.length;e++){var t=this.assets[e];"number"==typeof t&&(t=this.system.app.assets.get(t)),t&&(t.off("change",this.onAssetChanged,this),t.off("remove",this.onAssetRemoved,this))}this.skeleton=null,this.fromSkel=null,this.toSkel=null,this.animEvaluator=null},n.update=function(e){if(this.blending&&(this.blend+=e*this.blendSpeed,this.blend>=1&&(this.blend=1)),this.playing){var t=this.skeleton;if(null!==t&&null!==this.model){if(this.blending)t.blend(this.fromSkel,this.toSkel,this.blend);else{var n=e*this.speed;t.addTime(n),(this.speed>0&&t._time===t.animation.duration&&!this.loop||this.speed<0&&0===t._time&&!this.loop)&&(this.playing=!1)}this.blending&&1===this.blend&&(t.animation=this.toSkel.animation),t.updateGraph()}}var i=this.animEvaluator;if(i){for(var a=0;a<i.clips.length;++a){var s=i.clips[a];s.speed=this.speed,this.playing?s.resume():s.pause()}this.blending&&i.clips.length>1&&(i.clips[1].blendWeight=this.blend),i.update(e)}this.blending&&1===this.blend&&(this.blending=!1)},q(t,[{key:"animations",get:function(){return this._animations},set:function(e){this._animations=e,this.onSetAnimations()}},{key:"assets",get:function(){return this._assets},set:function(e){var t=this._assets;if(t&&t.length)for(var n=0;n<t.length;n++)if(t[n]){var i=this.system.app.assets.get(t[n]);if(i){i.off("change",this.onAssetChanged,this),i.off("remove",this.onAssetRemoved,this);var a=this.animationsIndex[i.id];this.currAnim===a&&this._stopCurrentAnimation(),delete this.animations[a],delete this.animationsIndex[i.id]}}this._assets=e;var s=e.map((function(e){return e instanceof eS?e.id:e}));this.loadAnimationAssets(s)}},{key:"currentTime",get:function(){if(this.skeleton)return this.skeleton._time;if(this.animEvaluator){var e=this.animEvaluator.clips;if(e.length>0)return e[e.length-1].time}return 0},set:function(e){if(this.skeleton&&(this.skeleton.currentTime=e,this.skeleton.addTime(0),this.skeleton.updateGraph()),this.animEvaluator)for(var t=this.animEvaluator.clips,n=0;n<t.length;++n)t[n].time=e}},{key:"duration",get:function(){return this.currAnim?this.animations[this.currAnim].duration:0}},{key:"loop",get:function(){return this._loop},set:function(e){if(this._loop=e,this.skeleton&&(this.skeleton.looping=e),this.animEvaluator)for(var t=0;t<this.animEvaluator.clips.length;++t)this.animEvaluator.clips[t].loop=e}}]),t}(zS),PE=function(){this.enabled=!0},OE=["enabled"],IE=function(e){function t(t){var n;return(n=e.call(this,t)||this).id="animation",n.ComponentType=ME,n.DataType=PE,n.schema=OE,n.on("beforeremove",n.onBeforeRemove,J(n)),n.app.systems.on("update",n.onUpdate,J(n)),n}Z(t,e);var n=t.prototype;return n.initializeComponentData=function(t,n,i){for(var a,s=te(["activate","enabled","loop","speed","assets"]);!(a=s()).done;){var r=a.value;n.hasOwnProperty(r)&&(t[r]=n[r])}e.prototype.initializeComponentData.call(this,t,n,OE)},n.cloneComponent=function(e,t){this.addComponent(t,{}),t.animation.assets=e.animation.assets.slice(),t.animation.speed=e.animation.speed,t.animation.loop=e.animation.loop,t.animation.activate=e.animation.activate,t.animation.enabled=e.animation.enabled;var n={},i=e.animation.animations;for(var a in i)i.hasOwnProperty(a)&&(n[a]=i[a]);t.animation.animations=n;var s={},r=e.animation.animationsIndex;for(var o in r)r.hasOwnProperty(o)&&(s[o]=r[o]);return t.animation.animationsIndex=s,t.animation},n.onBeforeRemove=function(e,t){t.onBeforeRemove()},n.onUpdate=function(e){var t=this.store;for(var n in t)if(t.hasOwnProperty(n)){var i=t[n];i.data.enabled&&i.entity.enabled&&i.entity.animation.update(e)}},n.destroy=function(){e.prototype.destroy.call(this),this.app.systems.off("update",this.onUpdate,this)},t}(VS);zS._buildAccessors(ME.prototype,OE);var RE=function(){function e(e,t,n,i,a){void 0===a&&(a=1),this._state=e,this._parent=t,this._name=n,Array.isArray(i)?(this._point=new ft(i[0],i[1]),this._pointLength=this._point.length()):(this._point=i,this._pointLength=i),this._speed=a,this._weightedSpeed=1,this._weight=1,this._animTrack=null}return q(e,[{key:"parent",get:function(){return this._parent}},{key:"name",get:function(){return this._name}},{key:"path",get:function(){return this._parent?this._parent.path+"."+this._name:this._name}},{key:"point",get:function(){return this._point}},{key:"pointLength",get:function(){return this._pointLength}},{key:"weight",get:function(){return this._parent?this._parent.weight*this._weight:this._weight},set:function(e){this._weight=e}},{key:"normalizedWeight",get:function(){var e=this._state.totalWeight;return 0===e?0:this.weight/e}},{key:"speed",get:function(){return this._weightedSpeed*this._speed}},{key:"absoluteSpeed",get:function(){return Math.abs(this._speed)}},{key:"weightedSpeed",get:function(){return this._weightedSpeed},set:function(e){this._weightedSpeed=e}},{key:"animTrack",get:function(){return this._animTrack},set:function(e){this._animTrack=e}}]),e}(),DE=function(e){function t(t,n,i,a,s,r,o,l,c){var h;(h=e.call(this,t,n,i,a)||this)._parameters=s,h._parameterValues=new Array(s.length),h._children=[],h._findParameter=c,h._syncAnimations=!1!==o,h._pointCache={};for(var p=0;p<r.length;p++){var d=r[p];d.children?h._children.push(l(d.type,J(h),null,i,1,d.parameter?[d.parameter]:d.parameters,d.children,l,c)):h._children.push(new RE(t,J(h),d.name,d.point,d.speed))}return h}Z(t,e);var n=t.prototype;return n.getChild=function(e){for(var t=0;t<this._children.length;t++)if(this._children[t].name===e)return this._children[t];return null},n.updateParameterValues=function(){for(var e=!0,t=0;t<this._parameterValues.length;t++){var n=this._findParameter(this._parameters[t]).value;this._parameterValues[t]!==n&&(this._parameterValues[t]=n,e=!1)}return e},n.getNodeWeightedDuration=function(e){return this._children[e].animTrack.duration/this._children[e].speedMultiplier*this._children[e].weight},n.getNodeCount=function(){for(var e=0,n=0;n<this._children.length;n++)this._children[n].constructor===t?e+=this._children[n].getNodeCount():e++;return e},q(t,[{key:"weight",get:function(){return this.calculateWeights(),this._parent?this._parent.weight*this._weight:this._weight}},{key:"syncAnimations",get:function(){return this._syncAnimations}}]),t}(RE),kE=function(e){function t(t,n,i,a,s,r,o,l,c){return r.sort((function(e,t){return e.point-t.point})),e.call(this,t,n,i,a,s,r,o,l,c)||this}return Z(t,e),t.prototype.calculateWeights=function(){if(!this.updateParameterValues()){var e=0;this._children[0].weight=0;for(var t=0;t<this._children.length;t++){var n=this._children[t];if(t!==this._children.length-1){var i=this._children[t+1];if(n.point===i.point)n.weight=.5,i.weight=.5;else if(at.between(this._parameterValues[0],n.point,i.point,!0)){var a=Math.abs(n.point-i.point),s=(a-Math.abs(n.point-this._parameterValues[0]))/a;n.weight=s,i.weight=1-s}else i.weight=0}this._syncAnimations&&(e+=n.animTrack.duration/n.absoluteSpeed*n.weight)}if(this._syncAnimations)for(var r=0;r<this._children.length;r++){var o=this._children[r];o.weightedSpeed=o.animTrack.duration/o.absoluteSpeed/e}}},t}(DE),FE=function(e){function t(){return e.apply(this,arguments)||this}Z(t,e);var n=t.prototype;return n.pointDistanceCache=function(e,t){var n=""+e+t;return this._pointCache[n]||(this._pointCache[n]=this._children[t].point.clone().sub(this._children[e].point)),this._pointCache[n]},n.calculateWeights=function(){var e;if(!this.updateParameterValues()){var n,i;(e=t._p).set.apply(e,this._parameterValues),n=0,i=0;for(var a=0;a<this._children.length;a++){var s=this._children[a],r=s.point;t._pip.set(t._p.x,t._p.y).sub(r);for(var o=Number.MAX_VALUE,l=0;l<this._children.length;l++)if(a!==l){var c=this.pointDistanceCache(a,l),h=at.clamp(1-t._pip.dot(c)/c.lengthSq(),0,1);h<o&&(o=h)}s.weight=o,n+=o,this._syncAnimations&&(i+=s.animTrack.duration/s.absoluteSpeed*s.weight)}for(var p=0;p<this._children.length;p++){var d=this._children[p];d.weight=d._weight/n,this._syncAnimations&&(d.weightedSpeed=d.animTrack.duration/d.absoluteSpeed/i)}}},t}(DE);FE._p=new ft,FE._pip=new ft;var BE=function(e){function t(){return e.apply(this,arguments)||this}Z(t,e);var n=t.prototype;return n.pointCache=function(e,t){var n=""+e+t;return this._pointCache[n]||(this._pointCache[n]=new ft((this._children[t].pointLength-this._children[e].pointLength)/((this._children[t].pointLength+this._children[e].pointLength)/2),2*ft.angleRad(this._children[e].point,this._children[t].point))),this._pointCache[n]},n.calculateWeights=function(){var e;if(!this.updateParameterValues()){var n,i;(e=t._p).set.apply(e,this._parameterValues);var a=t._p.length();n=0,i=0;for(var s=0;s<this._children.length;s++){for(var r=this._children[s],o=r.point,l=r.pointLength,c=Number.MAX_VALUE,h=0;h<this._children.length;h++)if(s!==h){var p=this.pointCache(s,h),d=this._children[h].pointLength;t._pip.set((a-l)/((d+l)/2),2*ft.angleRad(o,t._p));var u=at.clamp(1-Math.abs(t._pip.dot(p)/p.lengthSq()),0,1);u<c&&(c=u)}r.weight=c,n+=c,this._syncAnimations&&(i+=r.animTrack.duration/r.absoluteSpeed*r.weight)}for(var m=0;m<this._children.length;m++){var f=this._children[m];if(f.weight=f._weight/n,this._syncAnimations){var g=f.animTrack.duration/i*n;f.weightedSpeed=f.absoluteSpeed*g}}}},t}(DE);BE._p=new ft,BE._pip=new ft;var NE=function(e){function t(){return e.apply(this,arguments)||this}return Z(t,e),t.prototype.calculateWeights=function(){if(!this.updateParameterValues()){for(var e=0,t=0,n=0;n<this._children.length;n++)if(e+=Math.max(this._parameterValues[n],0),this._syncAnimations){var i=this._children[n];t+=i.animTrack.duration/i.absoluteSpeed*i.weight}for(var a=0;a<this._children.length;a++){var s=this._children[a],r=Math.max(this._parameterValues[a],0);e?(s.weight=r/e,this._syncAnimations&&(s.weightedSpeed=s.animTrack.duration/s.absoluteSpeed/t)):(s.weight=0,this._syncAnimations&&(s.weightedSpeed=0))}}},t}(DE),UE=function(){function e(e,t,n,i,a){void 0===n&&(n=1),void 0===i&&(i=!0),this._animations={},this._animationList=[],this._controller=e,this._name=t,this._speed=n,this._loop=i,this._hasAnimations=!1,this._blendTree=a?this._createTree(a.type,this,null,t,1,a.parameter?[a.parameter]:a.parameters,a.children,a.syncAnimations,this._createTree,this._controller.findParameter):new RE(this,null,t,1,n)}var t=e.prototype;return t._createTree=function(e,t,n,i,a,s,r,o,l,c){switch(e){case hE:return new kE(t,n,i,a,s,r,o,l,c);case dE:return new FE(t,n,i,a,s,r,o,l,c);case pE:return new BE(t,n,i,a,s,r,o,l,c);case uE:return new NE(t,n,i,a,s,r,o,l,c)}},t._getNodeFromPath=function(e){for(var t=this._blendTree,n=1;n<e.length;n++)t=t.getChild(e[n]);return t},t.addAnimation=function(e,t){var n=e.join("."),i=this._animationList.findIndex((function(e){return e.path===n}));if(i>=0)this._animationList[i].animTrack=t;else{var a=this._getNodeFromPath(e);a.animTrack=t,this._animationList.push(a)}this._updateHasAnimations()},t._updateHasAnimations=function(){this._hasAnimations=this._animationList.length>0&&this._animationList.every((function(e){return e.animTrack&&e.animTrack!==EE.EMPTY}))},q(e,[{key:"name",get:function(){return this._name}},{key:"animations",get:function(){return this._animationList},set:function(e){this._animationList=e,this._updateHasAnimations()}},{key:"hasAnimations",get:function(){return this._hasAnimations}},{key:"speed",get:function(){return this._speed},set:function(e){this._speed=e}},{key:"loop",get:function(){return this._loop},set:function(e){this._loop=e}},{key:"nodeCount",get:function(){return this._blendTree&&this._blendTree.constructor!==RE?this._blendTree.getNodeCount():1}},{key:"playable",get:function(){return-1!==vE.indexOf(this.name)||this.animations.length===this.nodeCount}},{key:"looping",get:function(){if(this.animations.length>0){var e=this.name+"."+this.animations[0].animTrack.name,t=this._controller.animEvaluator.findClip(e);if(t)return t.loop}return!1}},{key:"totalWeight",get:function(){for(var e=0,t=0;t<this.animations.length;t++)e+=this.animations[t].weight;return e}},{key:"timelineDuration",get:function(){for(var e=0,t=0;t<this.animations.length;t++){var n=this.animations[t];n.animTrack.duration>e&&(e=n.animTrack.duration)}return e}}]),e}(),zE=function(){function e(e){var t=e.from,n=e.to,i=e.time,a=void 0===i?0:i,s=e.priority,r=void 0===s?0:s,o=e.conditions,l=void 0===o?[]:o,c=e.exitTime,h=void 0===c?null:c,p=e.transitionOffset,d=void 0===p?null:p,u=e.interruptionSource,m=void 0===u?KS:u;this._from=t,this._to=n,this._time=a,this._priority=r,this._conditions=l,this._exitTime=h,this._transitionOffset=d,this._interruptionSource=m}return q(e,[{key:"from",get:function(){return this._from}},{key:"to",get:function(){return this._to},set:function(e){this._to=e}},{key:"time",get:function(){return this._time}},{key:"priority",get:function(){return this._priority}},{key:"conditions",get:function(){return this._conditions}},{key:"exitTime",get:function(){return this._exitTime}},{key:"transitionOffset",get:function(){return this._transitionOffset}},{key:"interruptionSource",get:function(){return this._interruptionSource}},{key:"hasExitTime",get:function(){return!!this.exitTime}}]),e}(),VE=function(){function e(e,t,n,i,a,s,r){var o=this;this.findParameter=function(e){return o._findParameter(e)},this._animEvaluator=e,this._states={},this._stateNames=[],this._eventHandler=a,this._findParameter=s,this._consumeTrigger=r;for(var l=0;l<t.length;l++)this._states[t[l].name]=new UE(this,t[l].name,t[l].speed,t[l].loop,t[l].blendTree),this._stateNames.push(t[l].name);this._transitions=n.map((function(e){return new zE(K({},e))})),this._findTransitionsFromStateCache={},this._findTransitionsBetweenStatesCache={},this._previousStateName=null,this._activeStateName=mE,this._activeStateDuration=0,this._activeStateDurationDirty=!0,this._playing=!1,this._activate=i,this._currTransitionTime=1,this._totalTransitionTime=1,this._isTransitioning=!1,this._transitionInterruptionSource=KS,this._transitionPreviousStates=[],this._timeInState=0,this._timeInStateBefore=0}var t=e.prototype;return t.assignMask=function(e){return this._animEvaluator.assignMask(e)},t._findState=function(e){return this._states[e]},t._getActiveStateProgressForTime=function(e){if(this.activeStateName===mE||this.activeStateName===fE||this.activeStateName===gE)return 1;var t=this._animEvaluator.findClip(this.activeStateAnimations[0].name);return t?t.progressForTime(e):null},t._findTransitionsFromState=function(e){var t=this._findTransitionsFromStateCache[e];return t||(t=this._transitions.filter((function(t){return t.from===e})),mb(t),this._findTransitionsFromStateCache[e]=t),t},t._findTransitionsBetweenStates=function(e,t){var n=this._findTransitionsBetweenStatesCache[e+"->"+t];return n||(n=this._transitions.filter((function(n){return n.from===e&&n.to===t})),mb(n),this._findTransitionsBetweenStatesCache[e+"->"+t]=n),n},t._transitionHasConditionsMet=function(e){for(var t=e.conditions,n=0;n<t.length;n++){var i=t[n],a=this._findParameter(i.parameterName);switch(i.predicate){case eE:if(!(a.value>i.value))return!1;break;case tE:if(!(a.value<i.value))return!1;break;case nE:if(!(a.value>=i.value))return!1;break;case iE:if(!(a.value<=i.value))return!1;break;case aE:if(a.value!==i.value)return!1;break;case sE:if(a.value===i.value)return!1}}return!0},t._findTransition=function(e,t){var n=this,i=[];if(e&&t)i=i.concat(this._findTransitionsBetweenStates(e,t));else if(this._isTransitioning)switch(this._transitionInterruptionSource){case ZS:i=(i=i.concat(this._findTransitionsFromState(this._previousStateName))).concat(this._findTransitionsFromState(gE));break;case QS:i=(i=i.concat(this._findTransitionsFromState(this._activeStateName))).concat(this._findTransitionsFromState(gE));break;case JS:i=(i=(i=i.concat(this._findTransitionsFromState(this._previousStateName))).concat(this._findTransitionsFromState(this._activeStateName))).concat(this._findTransitionsFromState(gE));break;case $S:i=(i=(i=i.concat(this._findTransitionsFromState(this._activeStateName))).concat(this._findTransitionsFromState(this._previousStateName))).concat(this._findTransitionsFromState(gE))}else i=(i=i.concat(this._findTransitionsFromState(this._activeStateName))).concat(this._findTransitionsFromState(gE));if(i=i.filter((function(e){if(e.to===n.activeStateName)return!1;if(e.hasExitTime){var t=n._getActiveStateProgressForTime(n._timeInStateBefore),i=n._getActiveStateProgressForTime(n._timeInState);if(e.exitTime<1&&n.activeState.loop&&(t-=Math.floor(t),i-=Math.floor(i)),i===t){if(i!==e.exitTime)return null}else if(!(e.exitTime>t&&e.exitTime<=i))return null}return n._transitionHasConditionsMet(e)})),i.length>0){var a=i[0];if(a.to===fE){var s=this._findTransitionsFromState(mE)[0];a.to=s.to}return a}return null},t.updateStateFromTransition=function(e){var t,n,i;this.previousState=e.from?this.activeStateName:null,this.activeState=e.to,this._activeStateDurationDirty=!0;for(var a=0;a<e.conditions.length;a++){var s=e.conditions[a];this._findParameter(s.parameterName).type===cE&&this._consumeTrigger(s.parameterName)}if(this.previousState){this._isTransitioning||(this._transitionPreviousStates=[]),this._transitionPreviousStates.push({name:this._previousStateName,weight:1});for(var r=Math.min(0!==this._totalTransitionTime?this._currTransitionTime/this._totalTransitionTime:1,1),o=0;o<this._transitionPreviousStates.length;o++){this._isTransitioning?o!==this._transitionPreviousStates.length-1?this._transitionPreviousStates[o].weight*=1-r:this._transitionPreviousStates[o].weight=r:this._transitionPreviousStates[o].weight=1,t=this._findState(this._transitionPreviousStates[o].name);for(var l=0;l<t.animations.length;l++)n=t.animations[l],(i=this._animEvaluator.findClip(n.name+".previous."+o))||((i=this._animEvaluator.findClip(n.name)).name=n.name+".previous."+o),o!==this._transitionPreviousStates.length-1&&i.pause()}}this._isTransitioning=!0,this._totalTransitionTime=e.time,this._currTransitionTime=0,this._transitionInterruptionSource=e.interruptionSource;var c=this.activeState,h=e.transitionOffset&&e.transitionOffset>0&&e.transitionOffset<1,p=0,d=0;if(h){var u=c.timelineDuration*e.transitionOffset;p=u,d=u}this._timeInState=p,this._timeInStateBefore=d;for(var m=0;m<c.animations.length;m++){if(i=this._animEvaluator.findClip(c.animations[m].name))i.reset();else{var f=Number.isFinite(c.animations[m].speed)?c.animations[m].speed:c.speed;(i=new qS(c.animations[m].animTrack,this._timeInState,f,!0,c.loop,this._eventHandler)).name=c.animations[m].name,this._animEvaluator.addClip(i)}if(e.time>0?i.blendWeight=0:i.blendWeight=c.animations[m].normalizedWeight,i.play(),h)i.time=c.timelineDuration*e.transitionOffset;else{var g=c.speed>=0?0:this.activeStateDuration;i.time=g}}},t._transitionToState=function(e){if(this._findState(e)){var t=this._findTransition(this._activeStateName,e);t||(this._animEvaluator.removeClips(),t=new zE({from:null,to:e})),this.updateStateFromTransition(t)}},t.assignAnimation=function(e,t,n,i){var a=e.split("."),s=this._findState(a[0]);s||(s=new UE(this,a[0],n),this._states[a[0]]=s,this._stateNames.push(a[0])),s.addAnimation(a,t),this._animEvaluator.updateClipTrack(s.name,t),void 0!==n&&(s.speed=n),void 0!==i&&(s.loop=i),!this._playing&&this._activate&&this.playable&&this.play(),this._activeStateDurationDirty=!0},t.removeNodeAnimations=function(e){if(-1!==vE.indexOf(e))return!1;var t=this._findState(e);return!!t&&(t.animations=[],!0)},t.play=function(e){e&&this._transitionToState(e),this._playing=!0},t.pause=function(){this._playing=!1},t.reset=function(){this._previousStateName=null,this._activeStateName=mE,this._playing=!1,this._currTransitionTime=1,this._totalTransitionTime=1,this._isTransitioning=!1,this._timeInState=0,this._timeInStateBefore=0,this._animEvaluator.removeClips()},t.rebind=function(){this._animEvaluator.rebind()},t.update=function(e){if(this._playing){var t,n,i;(this.activeState.loop||this._timeInState<this.activeStateDuration)&&(this._timeInStateBefore=this._timeInState,this._timeInState+=e*this.activeState.speed,!this.activeState.loop&&this._timeInState>this.activeStateDuration&&(this._timeInState=this.activeStateDuration,e=this.activeStateDuration-this._timeInStateBefore));var a=this._findTransition(this._activeStateName);if(a&&this.updateStateFromTransition(a),this._isTransitioning)if(this._currTransitionTime+=e,this._currTransitionTime<=this._totalTransitionTime){for(var s=0!==this._totalTransitionTime?this._currTransitionTime/this._totalTransitionTime:1,r=0;r<this._transitionPreviousStates.length;r++){t=this._findState(this._transitionPreviousStates[r].name);for(var o=this._transitionPreviousStates[r].weight,l=0;l<t.animations.length;l++)n=t.animations[l],(i=this._animEvaluator.findClip(n.name+".previous."+r))&&(i.blendWeight=(1-s)*n.normalizedWeight*o)}t=this.activeState;for(var c=0;c<t.animations.length;c++)n=t.animations[c],this._animEvaluator.findClip(n.name).blendWeight=s*n.normalizedWeight}else{this._isTransitioning=!1;for(var h=this.activeStateAnimations.length,p=this._animEvaluator.clips.length,d=0;d<p-h;d++)this._animEvaluator.removeClip(0);this._transitionPreviousStates=[],t=this.activeState;for(var u=0;u<t.animations.length;u++)n=t.animations[u],(i=this._animEvaluator.findClip(n.name))&&(i.blendWeight=n.normalizedWeight)}else if(this.activeState._blendTree.constructor!==RE){t=this.activeState;for(var m=0;m<t.animations.length;m++)n=t.animations[m],(i=this._animEvaluator.findClip(n.name))&&(i.blendWeight=n.normalizedWeight,n.parent.syncAnimations&&(i.speed=n.speed))}this._animEvaluator.update(e,this.activeState.hasAnimations)}},q(e,[{key:"animEvaluator",get:function(){return this._animEvaluator}},{key:"activeState",get:function(){return this._findState(this._activeStateName)},set:function(e){this._activeStateName=e}},{key:"activeStateName",get:function(){return this._activeStateName}},{key:"activeStateAnimations",get:function(){return this.activeState.animations}},{key:"previousState",get:function(){return this._findState(this._previousStateName)},set:function(e){this._previousStateName=e}},{key:"previousStateName",get:function(){return this._previousStateName}},{key:"playable",get:function(){for(var e=!0,t=0;t<this._stateNames.length;t++)this._states[this._stateNames[t]].playable||(e=!1);return e}},{key:"playing",get:function(){return this._playing},set:function(e){this._playing=e}},{key:"activeStateProgress",get:function(){return this._getActiveStateProgressForTime(this._timeInState)}},{key:"activeStateDuration",get:function(){if(this._activeStateDurationDirty){for(var e=0,t=0;t<this.activeStateAnimations.length;t++){var n=this._animEvaluator.findClip(this.activeStateAnimations[t].name);n&&(e=Math.max(e,n.track.duration))}this._activeStateDuration=e,this._activeStateDurationDirty=!1}return this._activeStateDuration}},{key:"activeStateCurrentTime",get:function(){return this._timeInState},set:function(e){this._timeInStateBefore=e,this._timeInState=e;for(var t=0;t<this.activeStateAnimations.length;t++){var n=this.animEvaluator.findClip(this.activeStateAnimations[t].name);n&&(n.time=e)}}},{key:"transitioning",get:function(){return this._isTransitioning}},{key:"transitionProgress",get:function(){return this._currTransitionTime/this._totalTransitionTime}},{key:"states",get:function(){return this._stateNames}}]),e}(),HE=new ft,GE=new pt,WE=new vt,jE=new st,XE=new Et,YE=function(e){function t(t,n,i,a,s){var r;return(r=e.call(this,n)||this).animComponent=t,r._mask=a,r.layerName=i,r.layerIndex=s,r}Z(t,e),t._packFloat=function(e){return e[0]},t._packBoolean=function(e){return!!e[0]},t._packVec2=function(e){return HE.x=e[0],HE.y=e[1],HE},t._packVec3=function(e){return GE.x=e[0],GE.y=e[1],GE.z=e[2],GE},t._packVec4=function(e){return WE.x=e[0],WE.y=e[1],WE.z=e[2],WE.w=e[3],WE},t._packColor=function(e){return jE.r=e[0],jE.g=e[1],jE.b=e[2],jE.a=e[3],jE},t._packQuat=function(e){return XE.x=e[0],XE.y=e[1],XE.z=e[2],XE.w=e[3],XE};var n=t.prototype;return n.resolve=function(e){var t,n,i,a=TE.encode(e.entityPath,e.component,e.propertyPath),s=this.targetCache[a];if(s)return s;switch(e.component){case"entity":t=this._getEntityFromHierarchy(e.entityPath),i=TE.encode(t.path,"entity",e.propertyPath),n=t;break;case"graph":if(!(n=this.findNode(e)))return null;i=TE.encode(n.path,"graph",e.propertyPath);break;default:if(!(n=(t=this._getEntityFromHierarchy(e.entityPath)).findComponent(e.component)))return null;i=TE.encode(t.path,e.component,e.propertyPath)}return s=this._createAnimTargetForProperty(n,e.propertyPath,i),this.targetCache[a]=s,s},n.update=function(e){var t=this.activeNodes;if(t)for(var n=0;n<t.length;n++)t[n]._dirtifyLocal()},n._getEntityFromHierarchy=function(e){if(!this.animComponent.entity.name===e[0])return null;var t=this.animComponent.entity;return 1===e.length?t:t._parent.findByPath(e)},n._resolvePath=function(e,t,n){for(var i=t.length-(n?0:1),a=0;a<i;a++)e=e[t[a]];return e},n._setter=function(e,t,n){var i=this._resolvePath(e,t),a=t[t.length-1],s="set"+a.substring(0,1).toUpperCase()+a.substring(1);if(i[s]){var r=i["get"+a.substring(0,1).toUpperCase()+a.substring(1)].bind(i)();r=[r.x,r.y,r.z,r.w];var o=i[s].bind(i);return{set:function(e){o(n(e))},get:function(){return r}}}var l=i[a];if("object"==typeof l&&l.hasOwnProperty("copy"))return function(e){l.copy(n(e))};if(-1!==[ft,pt,vt,st,Et].indexOf(i.constructor)&&t.length>1){var c=t.length>2?this._resolvePath(e,t.slice(0,-1)):e,h=t[t.length-2];return function(e){i[a]=n(e),c[h]=i}}return function(e){i[a]=n(e)}},n._createAnimTargetForProperty=function(e,n,i){if(this.handlers&&n[0].startsWith("weight."))return this.handlers.weight(e,n[0].replace("weight.",""));if(this.handlers&&"material"===n[0]&&2===n.length){var a=n[1];if(a.endsWith("Map"))return this.handlers.materialTexture(e,a)}var s,r,o,l=this._resolvePath(e,n,!0);if(void 0===l)return null;if("number"==typeof l)s=this._setter(e,n,t._packFloat),r="vector",o=1;else if("boolean"==typeof l)s=this._setter(e,n,t._packBoolean),r="vector",o=1;else if("object"==typeof l)switch(l.constructor){case ft:s=this._setter(e,n,t._packVec2),r="vector",o=2;break;case pt:s=this._setter(e,n,t._packVec3),r="vector",o=3;break;case vt:s=this._setter(e,n,t._packVec4),r="vector",o=4;break;case st:s=this._setter(e,n,t._packColor),r="vector",o=4;break;case Et:s=this._setter(e,n,t._packQuat),r="quaternion",o=4;break;default:return null}return-1!==n.indexOf("material")?new AE((function(t){s(t),e.material.update()}),r,o,i):new AE(s,r,o,i)},n.rebind=function(){this.targetCache={},this.animComponent.rootBone?this.graph=this.animComponent.rootBone:this.graph=this.animComponent.entity;var e={},t=function t(n){e[n.name]=n;for(var i=0;i<n.children.length;++i)t(n.children[i])};t(this.graph),this.nodes=e},t}(LE),qE=function(){function e(e,t,n,i,a,s){void 0===i&&(i=1),void 0===a&&(a=yE),void 0===s&&(s=!0),this._name=e,this._controller=t,this._component=n,this._weight=i,this._blendType=a,this._normalizedWeight=s,this._mask=null,this._blendTime=0,this._blendTimeElapsed=0,this._startingWeight=0,this._targetWeight=0}var t=e.prototype;return t.play=function(e){this._controller.play(e)},t.pause=function(){this._controller.pause()},t.reset=function(){this._controller.reset()},t.rebind=function(){this._controller.rebind()},t.update=function(e){this._blendTime&&(this._blendTimeElapsed<this._blendTime?(this.weight=at.lerp(this._startingWeight,this._targetWeight,this._blendTimeElapsed/this._blendTime),this._blendTimeElapsed+=e):(this.weight=this._targetWeight,this._blendTime=0,this._blendTimeElapsed=0,this._startingWeight=0,this._targetWeight=0)),this._controller.update(e)},t.blendToWeight=function(e,t){this._startingWeight=this.weight,this._targetWeight=e,this._blendTime=Math.max(0,t),this._blendTimeElapsed=0},t.assignMask=function(e){this._controller.assignMask(e)&&this._component.rebind(),this._mask=e},t.assignAnimation=function(e,t,n,i){t instanceof EE&&(this._controller.assignAnimation(e,t,n,i),0===this._controller._transitions.length&&this._controller._transitions.push(new zE({from:"START",to:e})),this._component.activate&&this._component.playable&&(this._component.playing=!0))},t.removeNodeAnimations=function(e){this._controller.removeNodeAnimations(e)&&(this._component.playing=!1)},t.getAnimationAsset=function(e){return this._component.animationAssets[this.name+":"+e]},t.transition=function(e,t,n){void 0===t&&(t=0),void 0===n&&(n=null),this._controller.updateStateFromTransition(new zE({from:this._controller.activeStateName,to:e,time:t,transitionOffset:n}))},q(e,[{key:"name",get:function(){return this._name}},{key:"playing",get:function(){return this._controller.playing},set:function(e){this._controller.playing=e}},{key:"playable",get:function(){return this._controller.playable}},{key:"activeState",get:function(){return this._controller.activeStateName}},{key:"previousState",get:function(){return this._controller.previousStateName}},{key:"activeStateProgress",get:function(){return this._controller.activeStateProgress}},{key:"activeStateDuration",get:function(){return this._controller.activeStateDuration}},{key:"activeStateCurrentTime",get:function(){return this._controller.activeStateCurrentTime},set:function(e){var t=this._controller,n=t.playing;t.playing=!0,t.activeStateCurrentTime=e,n||t.update(0),t.playing=n}},{key:"transitioning",get:function(){return this._controller.transitioning}},{key:"transitionProgress",get:function(){return this.transitioning?this._controller.transitionProgress:null}},{key:"states",get:function(){return this._controller.states}},{key:"weight",get:function(){return this._weight},set:function(e){this._weight=e,this._component.dirtifyTargets()}},{key:"blendType",get:function(){return this._blendType},set:function(e){e!==this._blendType&&(this._blendType=e,this._controller.normalizeWeights&&this._component.rebind())}},{key:"mask",get:function(){return this._mask},set:function(e){this._controller.assignMask(e)&&this._component.rebind(),this._mask=e}}]),e}(),KE=function(){function e(e){if(this._layers=[],this._parameters={},Array.isArray(e.layers))this._layers=e.layers;else for(var t in e.layers){for(var n=e.layers[t],i={name:n.name,blendType:n.blendType,weight:n.weight,states:[],transitions:[]},a=0;a<n.states.length;a++)i.states.push(e.states[n.states[a]]);for(var s=0;s<n.transitions.length;s++){var r=e.transitions[n.transitions[s]];if(r.conditions&&!Array.isArray(r.conditions)){for(var o=Object.keys(r.conditions),l=[],c=0;c<o.length;c++){var h=r.conditions[o[c]];h.parameterName&&l.push(h)}r.conditions=l}Number.isInteger(r.from)&&(r.from=e.states[r.from].name),Number.isInteger(r.to)&&(r.to=e.states[r.to].name),i.transitions.push(r)}this._layers.push(i)}for(var p in e.parameters){var d=e.parameters[p];this._parameters[d.name]={type:d.type,value:d.value}}}return q(e,[{key:"parameters",get:function(){return Object.assign({},this._parameters)}},{key:"layers",get:function(){return this._layers}}]),e}(),ZE=function(e){function t(t,n){var i;return(i=e.call(this,t,n)||this).findParameter=function(e){return i._parameters[e]},i.consumeTrigger=function(e){i._consumedTriggers.add(e)},i._stateGraphAsset=null,i._animationAssets={},i._speed=1,i._activate=!0,i._playing=!1,i._rootBone=null,i._stateGraph=null,i._layers=[],i._layerIndices={},i._parameters={},i._targets={},i._consumedTriggers=new Set,i._normalizeWeights=!1,i}Z(t,e);var n=t.prototype;return n._onStateGraphAssetChangeEvent=function(e){var t=this.animationAssets,n=this.layers.map((function(e){return e.mask}));this.removeStateGraph(),this._stateGraph=new KE(e._data),this.loadStateGraph(this._stateGraph),this.animationAssets=t,this.loadAnimationAssets(),this.layers.forEach((function(e,t){e.mask=n[t]})),this.rebind()},n.dirtifyTargets=function(){for(var e=Object.values(this._targets),t=0;t<e.length;t++)e[t].dirty=!0},n._addLayer=function(e){var t,n=e.name,i=e.states,a=e.transitions,s=e.weight,r=e.mask,o=e.blendType;t=this.rootBone?this.rootBone:this.entity;var l=this._layers.length,c=new YE(this,t,n,r,l),h=new CE(c),p=new VE(h,i,a,this._activate,this,this.findParameter,this.consumeTrigger);return this._layers.push(new qE(n,p,this,s,o)),this._layerIndices[n]=l,this._layers[l]},n.addLayer=function(e,t,n,i){var a=this.findAnimationLayer(e);if(a)return a;var s=[{name:"START",speed:1}],r=[];return this._addLayer({name:e,states:s,transitions:r,weight:t,mask:n,blendType:i})},n._assignParameters=function(e){this._parameters={};for(var t=Object.keys(e.parameters),n=0;n<t.length;n++){var i=t[n];this._parameters[i]={type:e.parameters[i].type,value:e.parameters[i].value}}},n.loadStateGraph=function(e){this._stateGraph=e,this._assignParameters(e),this._layers=[];for(var t=!1,n=0;n<e.layers.length;n++){var i=e.layers[n];this._addLayer(K({},i)),i.states.some((function(e){return e.blendTree}))&&(t=!0)}t||this.setupAnimationAssets()},n.setupAnimationAssets=function(){for(var e=0;e<this._layers.length;e++)for(var t=this._layers[e],n=t.name,i=0;i<t.states.length;i++){var a=t.states[i];if(-1===vE.indexOf(a)){var s=n+":"+a;this._animationAssets[s]||(this._animationAssets[s]={asset:null})}}this.loadAnimationAssets()},n.loadAnimationAssets=function(){for(var e=0;e<this._layers.length;e++)for(var t=this._layers[e],n=0;n<t.states.length;n++){var i=t.states[n];if(-1===vE.indexOf(i)){var a=this._animationAssets[t.name+":"+i];if(a&&a.asset){var s=a.asset,r=this.system.app.assets.get(s);r&&(r.resource?this.onAnimationAssetLoaded(t.name,i,r):(r.once("load",function(e,t){return function(n){this.onAnimationAssetLoaded(e,t,n)}.bind(this)}.bind(this)(t.name,i)),this.system.app.assets.load(r)))}else this.findAnimationLayer(t.name).assignAnimation(i,EE.EMPTY)}}},n.onAnimationAssetLoaded=function(e,t,n){this.findAnimationLayer(e).assignAnimation(t,n.resource)},n.removeStateGraph=function(){this._stateGraph=null,this._stateGraphAsset=null,this._animationAssets={},this._layers=[],this._layerIndices={},this._parameters={},this._playing=!1,this.unbind(),this._targets={}},n.reset=function(){this._assignParameters(this._stateGraph);for(var e=0;e<this._layers.length;e++){var t=this._layers[e].playing;this._layers[e].reset(),this._layers[e].playing=t}},n.unbind=function(){var e=this;this._normalizeWeights||Object.keys(this._targets).forEach((function(t){e._targets[t].unbind()}))},n.rebind=function(){this._targets={};for(var e=0;e<this._layers.length;e++)this._layers[e].rebind()},n.findAnimationLayer=function(e){var t=this._layerIndices[e];return this._layers[t]||null},n.addAnimationState=function(e,t,n,i,a){void 0===n&&(n=1),void 0===i&&(i=!0),void 0===a&&(a="Base"),this._stateGraph||this.loadStateGraph(new KE({layers:[{name:a,states:[{name:"START",speed:1},{name:e,speed:n,loop:i,defaultState:!0}],transitions:[{from:"START",to:e}]}],parameters:{}}));var s,r=this.findAnimationLayer(a);r?r.assignAnimation(e,t,n,i):null==(s=this.addLayer(a))||s.assignAnimation(e,t,n,i)},n.assignAnimation=function(e,t,n,i,a){if(void 0===i&&(i=1),void 0===a&&(a=!0),!this._stateGraph&&-1===e.indexOf("."))return this.loadStateGraph(new KE({layers:[{name:"Base",states:[{name:"START",speed:1},{name:e,speed:i,loop:a,defaultState:!0}],transitions:[{from:"START",to:e}]}],parameters:{}})),void this.baseLayer.assignAnimation(e,t);var s=n?this.findAnimationLayer(n):this.baseLayer;s&&s.assignAnimation(e,t,i,a)},n.removeNodeAnimations=function(e,t){var n=t?this.findAnimationLayer(t):this.baseLayer;n&&n.removeNodeAnimations(e)},n.getParameterValue=function(e,t){var n=this._parameters[e];if(n&&n.type===t)return n.value},n.setParameterValue=function(e,t,n){var i=this._parameters[e];i&&i.type===t&&(i.value=n)},n.getFloat=function(e){return this.getParameterValue(e,oE)},n.setFloat=function(e,t){this.setParameterValue(e,oE,t)},n.getInteger=function(e){return this.getParameterValue(e,rE)},n.setInteger=function(e,t){"number"==typeof t&&t%1==0&&this.setParameterValue(e,rE,t)},n.getBoolean=function(e){return this.getParameterValue(e,lE)},n.setBoolean=function(e,t){this.setParameterValue(e,lE,!!t)},n.getTrigger=function(e){return this.getParameterValue(e,cE)},n.setTrigger=function(e,t){void 0===t&&(t=!1),this.setParameterValue(e,cE,!0),t&&this._consumedTriggers.add(e)},n.resetTrigger=function(e){this.setParameterValue(e,cE,!1)},n.onBeforeRemove=function(){Number.isFinite(this._stateGraphAsset)&&this.system.app.assets.get(this._stateGraphAsset).off("change",this._onStateGraphAssetChangeEvent,this)},n.update=function(e){for(var t=this,n=0;n<this.layers.length;n++)this.layers[n].update(e*this.speed);this._consumedTriggers.forEach((function(e){t.parameters[e].value=!1})),this._consumedTriggers.clear()},n.resolveDuplicatedEntityReferenceProperties=function(e,t){e.rootBone&&t[e.rootBone.getGuid()]?this.rootBone=t[e.rootBone.getGuid()]:this.rebind()},q(t,[{key:"stateGraphAsset",get:function(){return this._stateGraphAsset},set:function(e){var t,n,i=this;null!==e?(this._stateGraphAsset&&this.system.app.assets.get(this._stateGraphAsset).off("change",this._onStateGraphAssetChangeEvent,this),e instanceof eS?(t=e.id,(n=this.system.app.assets.get(t))||(this.system.app.assets.add(e),n=this.system.app.assets.get(t))):(t=e,n=this.system.app.assets.get(t)),n&&this._stateGraphAsset!==t&&(n.resource?(this._stateGraph=n.resource,this.loadStateGraph(this._stateGraph),n.on("change",this._onStateGraphAssetChangeEvent,this)):(n.once("load",(function(e){i._stateGraph=e.resource,i.loadStateGraph(i._stateGraph)})),n.on("change",this._onStateGraphAssetChangeEvent,this),this.system.app.assets.load(n)),this._stateGraphAsset=t)):this.removeStateGraph()}},{key:"normalizeWeights",get:function(){return this._normalizeWeights},set:function(e){this._normalizeWeights=e,this.unbind()}},{key:"animationAssets",get:function(){return this._animationAssets},set:function(e){this._animationAssets=e,this.loadAnimationAssets()}},{key:"speed",get:function(){return this._speed},set:function(e){this._speed=e}},{key:"activate",get:function(){return this._activate},set:function(e){this._activate=e}},{key:"playing",get:function(){return this._playing},set:function(e){this._playing=e}},{key:"rootBone",get:function(){return this._rootBone},set:function(e){if("string"==typeof e){var t=this.entity.root.findByGuid(e);this._rootBone=t}else this._rootBone=e instanceof gS?e:null;this.rebind()}},{key:"stateGraph",get:function(){return this._stateGraph},set:function(e){this._stateGraph=e}},{key:"layers",get:function(){return this._layers}},{key:"layerIndices",get:function(){return this._layerIndices},set:function(e){this._layerIndices=e}},{key:"parameters",get:function(){return this._parameters},set:function(e){this._parameters=e}},{key:"targets",get:function(){return this._targets},set:function(e){this._targets=e}},{key:"playable",get:function(){for(var e=0;e<this._layers.length;e++)if(!this._layers[e].playable)return!1;return!0}},{key:"baseLayer",get:function(){return this._layers.length>0?this._layers[0]:null}}]),t}(zS),QE=function(){this.enabled=!0},JE=["enabled"],$E=function(e){function t(t){var n;return(n=e.call(this,t)||this).id="anim",n.ComponentType=ZE,n.DataType=QE,n.schema=JE,n.on("beforeremove",n.onBeforeRemove,J(n)),n.app.systems.on("animationUpdate",n.onAnimationUpdate,J(n)),n}Z(t,e);var n=t.prototype;return n.initializeComponentData=function(t,n,i){var a=this;e.prototype.initializeComponentData.call(this,t,n,JE);var s=["animationAssets","stateGraph","layers","masks"];Object.keys(n).forEach((function(e){s.includes(e)||(t[e]=n[e])})),n.stateGraph&&(t.stateGraph=n.stateGraph,t.loadStateGraph(t.stateGraph)),n.layers?n.layers.forEach((function(e,n){e._controller.states.forEach((function(i){e._controller._states[i]._animationList.forEach((function(i){if(i.animTrack&&i.animTrack!==EE.EMPTY)t.layers[n].assignAnimation(i.name,i.animTrack);else{var s=a.app.assets.get(e._component._animationAssets[e.name+":"+i.name].asset);s&&!s.loaded&&s.once("load",(function(){t.layers[n].assignAnimation(i.name,s.resource)}))}}))}))})):n.animationAssets&&(t.animationAssets=Object.assign(t.animationAssets,n.animationAssets)),n.masks&&Object.keys(n.masks).forEach((function(e){if(t.layers[e]){var i=n.masks[e].mask,a={};Object.keys(i).forEach((function(e){a[decodeURI(e)]=i[e]})),t.layers[e].mask=a}}))},n.onAnimationUpdate=function(e){var t=this.store;for(var n in t)if(t.hasOwnProperty(n)){var i=t[n].entity.anim;i.data.enabled&&i.entity.enabled&&i.playing&&i.update(e)}},n.cloneComponent=function(e,t){var n;e.anim.rootBone&&e.anim.rootBone!==e||(n={},e.anim.layers.forEach((function(e,i){if(e.mask){var a={};Object.keys(e.mask).forEach((function(n){var i=n.split("/");i.shift();var s=[t.name].concat(i).join("/");a[s]=e.mask[n]})),n[i]={mask:a}}})));var i={stateGraphAsset:e.anim.stateGraphAsset,animationAssets:e.anim.animationAssets,speed:e.anim.speed,activate:e.anim.activate,playing:e.anim.playing,rootBone:e.anim.rootBone,stateGraph:e.anim.stateGraph,layers:e.anim.layers,layerIndices:e.anim.layerIndices,parameters:e.anim.parameters,normalizeWeights:e.anim.normalizeWeights,masks:n};return this.addComponent(t,i)},n.onBeforeRemove=function(e,t){t.onBeforeRemove()},n.destroy=function(){e.prototype.destroy.call(this),this.app.systems.off("animationUpdate",this.onAnimationUpdate,this)},t}(VS);zS._buildAccessors(ZE.prototype,JE);var eT=function(e){function t(t,n){return e.call(this,t,n)||this}Z(t,e);var n=t.prototype;return n.setCurrentListener=function(){if(this.enabled&&this.entity.audiolistener&&this.entity.enabled){this.system.current=this.entity;var e=this.system.current.getPosition();this.system.manager.listener.setPosition(e)}},n.onEnable=function(){this.setCurrentListener()},n.onDisable=function(){this.system.current===this.entity&&(this.system.current=null)},t}(zS),tT=function(){this.enabled=!0},nT=["enabled"],iT=function(e){function t(t){var n;return(n=e.call(this,t)||this).id="audiolistener",n.ComponentType=eT,n.DataType=tT,n.schema=nT,n.manager=t.soundManager,n.current=null,n.app.systems.on("update",n.onUpdate,J(n)),n}Z(t,e);var n=t.prototype;return n.initializeComponentData=function(t,n,i){i=["enabled"],e.prototype.initializeComponentData.call(this,t,n,i)},n.onUpdate=function(e){if(this.current){var t=this.current.getPosition();this.manager.listener.setPosition(t);var n=this.current.getWorldTransform();this.manager.listener.setOrientation(n)}},n.destroy=function(){e.prototype.destroy.call(this),this.app.systems.off("update",this.onUpdate,this)},t}(VS);zS._buildAccessors(eT.prototype,nT);var aT=function(e){function t(t,n){var i;return(i=e.call(this,t,n)||this).on("set_assets",i.onSetAssets,J(i)),i.on("set_loop",i.onSetLoop,J(i)),i.on("set_volume",i.onSetVolume,J(i)),i.on("set_pitch",i.onSetPitch,J(i)),i.on("set_minDistance",i.onSetMinDistance,J(i)),i.on("set_maxDistance",i.onSetMaxDistance,J(i)),i.on("set_rollOffFactor",i.onSetRollOffFactor,J(i)),i.on("set_distanceModel",i.onSetDistanceModel,J(i)),i.on("set_3d",i.onSet3d,J(i)),i}Z(t,e);var n=t.prototype;return n.play=function(e){if(this.enabled&&this.entity.enabled){var t;this.channel&&this.stop();var n=this.data;if(n.sources[e])if(n["3d"]){var i=this.entity.getPosition();t=this.system.manager.playSound3d(n.sources[e],i,n),n.currentSource=e,n.channel=t}else t=this.system.manager.playSound(n.sources[e],n),n.currentSource=e,n.channel=t}},n.pause=function(){this.channel&&this.channel.pause()},n.unpause=function(){this.channel&&this.channel.paused&&this.channel.unpause()},n.stop=function(){this.channel&&(this.channel.stop(),this.channel=null)},n.onSetAssets=function(e,t,n){var i=[],a=n.length;if(t&&t.length)for(var s=0;s<t.length;s++)if(t[s]){var r=this.system.app.assets.get(t[s]);r&&(r.off("change",this.onAssetChanged,this),r.off("remove",this.onAssetRemoved,this),this.currentSource===r.name&&this.stop())}if(a)for(var o=0;o<a;o++)t.indexOf(n[o])<0&&(n[o]instanceof eS?i.push(n[o].id):i.push(n[o]));!this.system._inTools&&i.length&&this.loadAudioSourceAssets(i)},n.onAssetChanged=function(e,t,n,i){"resource"===t&&this.data.sources&&(this.data.sources[e.name]=n,this.data.currentSource===e.name&&this.channel&&(this.channel.paused?(this.play(e.name),this.pause()):this.play(e.name)))},n.onAssetRemoved=function(e){e.off("remove",this.onAssetRemoved,this),this.data.sources[e.name]&&(delete this.data.sources[e.name],this.data.currentSource===e.name&&(this.stop(),this.data.currentSource=null))},n.onSetLoop=function(e,t,n){t!==n&&this.channel&&this.channel.setLoop(n)},n.onSetVolume=function(e,t,n){t!==n&&this.channel&&this.channel.setVolume(n)},n.onSetPitch=function(e,t,n){t!==n&&this.channel&&this.channel.setPitch(n)},n.onSetMaxDistance=function(e,t,n){t!==n&&this.channel instanceof tu&&this.channel.setMaxDistance(n)},n.onSetMinDistance=function(e,t,n){t!==n&&this.channel instanceof tu&&this.channel.setMinDistance(n)},n.onSetRollOffFactor=function(e,t,n){t!==n&&this.channel instanceof tu&&this.channel.setRollOffFactor(n)},n.onSetDistanceModel=function(e,t,n){t!==n&&this.channel instanceof tu&&this.channel.setDistanceModel(n)},n.onSet3d=function(e,t,n){if(t!==n&&this.system.initialized&&this.currentSource){var i=!1,a=!1;this.channel&&(i=this.channel.paused,a=this.channel.suspended),this.play(this.currentSource),this.channel&&(this.channel.paused=i,this.channel.suspended=a)}},n.onEnable=function(){var e=this.data.assets;if(e)for(var t=this.system.app.assets,n=0,i=e.length;n<i;n++){var a=e[n];a instanceof eS||(a=t.get(a)),a&&!a.resource&&t.load(a)}this.system.initialized&&(this.data.activate&&!this.channel?this.play(this.currentSource):this.unpause())},n.onDisable=function(){this.pause()},n.loadAudioSourceAssets=function(e){var t=this,n=e.map((function(e){return t.system.app.assets.get(e)})),i={},a=null,s=n.length,r=function(e){s--},o=function(){t.data.sources=i,t.data.currentSource=a,t.enabled&&t.activate&&a&&t.onEnable()};n.forEach((function(n,l){n?(a=a||n.name,n.off("change",t.onAssetChanged,t),n.on("change",t.onAssetChanged,t),n.off("remove",t.onAssetRemoved,t),n.on("remove",t.onAssetRemoved,t),n.off("error",r,t),n.on("error",r,t),n.ready((function(e){i[e.name]=e.resource,0==--s&&o()})),!n.resource&&t.enabled&&t.entity.enabled&&t.system.app.assets.load(n)):(0==--s&&o(),t.system.app.assets.on("add:"+e[l],(function(e){e.ready((function(e){t.data.sources[e.name]=e.resource})),e.resource||t.system.app.assets.load(e)})))}))},t}(zS),sT=function(){this.enabled=!0,this.assets=[],this.activate=!0,this.volume=1,this.pitch=1,this.loop=!1,this["3d"]=!0,this.minDistance=1,this.maxDistance=1e4,this.rollOffFactor=1,this.distanceModel=Wt,this.paused=!0,this.sources={},this.currentSource=null,this.channel=null},rT=["enabled","assets","volume","pitch","loop","activate","3d","minDistance","maxDistance","rollOffFactor","distanceModel","sources","currentSource","channel"],oT=function(e){function t(t){var n;return(n=e.call(this,t)||this).id="audiosource",n.ComponentType=aT,n.DataType=sT,n.schema=rT,n.manager=t.soundManager,n.initialized=!1,n.app.systems.on("initialize",n.onInitialize,J(n)),n.app.systems.on("update",n.onUpdate,J(n)),n.on("remove",n.onRemove,J(n)),n}Z(t,e);var n=t.prototype;return n.initializeComponentData=function(t,n,i){i=["activate","volume","pitch","loop","3d","minDistance","maxDistance","rollOffFactor","distanceModel","enabled","assets"],e.prototype.initializeComponentData.call(this,t,n,i),t.paused=!(t.enabled&&t.activate)},n.onInitialize=function(e){e.audiosource&&e.enabled&&e.audiosource.enabled&&e.audiosource.activate&&e.audiosource.play(e.audiosource.currentSource);for(var t=e._children,n=0,i=t.length;n<i;n++)t[n]instanceof gS&&this.onInitialize(t[n]);this.initialized=!0},n.onUpdate=function(e){var t=this.store;for(var n in t)if(t.hasOwnProperty(n)){var i=t[n],a=i.entity,s=i.data;if(s.enabled&&a.enabled&&s.channel instanceof tu){var r=a.getPosition();s.channel.setPosition(r)}}},n.onRemove=function(e,t){t.channel&&(t.channel.stop(),t.channel=null)},n.setVolume=function(e){this.manager.setVolume(e)},n.destroy=function(){e.prototype.destroy.call(this),this.app.systems.off("initialize",this.onInitialize,this),this.app.systems.off("update",this.onUpdate,this)},t}(VS);zS._buildAccessors(aT.prototype,rT);var lT=function(e){function t(t,n,i){var a;if(a=e.call(this)||this,!(t&&t instanceof zS))throw new Error("The parentComponent argument is required and must be a Component");if(!n||"string"!=typeof n)throw new Error("The propertyName argument is required and must be a string");if(i&&"object"!=typeof i)throw new Error("If provided, the eventConfig argument must be an object");return a._parentComponent=t,a._entityPropertyName=n,a._entity=null,a._app=t.system.app,a._configureEventListeners(i||{},{"entity#destroy":a._onEntityDestroy}),a._toggleLifecycleListeners("on"),a}Z(t,e);var n=t.prototype;return n._configureEventListeners=function(e,t){var n=this._parseEventListenerConfig(e,"external",this._parentComponent),i=this._parseEventListenerConfig(t,"internal",this);this._eventListenerConfigs=n.concat(i),this._listenerStatusFlags={},this._gainListeners={},this._loseListeners={}},n._parseEventListenerConfig=function(e,t,n){return Object.keys(e).map((function(i,a){var s=i.split("#"),r=s[0],o=s[1],l=e[i];if(2!==s.length||"string"!=typeof r||0===r.length||"string"!=typeof o||0===o.length)throw new Error("Invalid event listener description: `"+i+"`");if("function"!=typeof l)throw new Error("Invalid or missing callback for event listener `"+i+"`");return{id:t+"_"+a+"_"+i,sourceName:r,eventName:o,callback:l,scope:n}}),this)},n._toggleLifecycleListeners=function(e){this._parentComponent[e]("set_"+this._entityPropertyName,this._onSetEntity,this),this._parentComponent.system[e]("beforeremove",this._onParentComponentRemove,this),this._app.systems[e]("postPostInitialize",this._updateEntityReference,this),this._app[e]("tools:sceneloaded",this._onSceneLoaded,this);for(var t=[],n=0;n<this._eventListenerConfigs.length;++n){var i=this._eventListenerConfigs[n],a=this._app.systems[i.sourceName];a&&(-1===t.indexOf(a)&&t.push(a),a&&"gain"===i.eventName&&(this._gainListeners[i.sourceName]=i),a&&"lose"===i.eventName&&(this._loseListeners[i.sourceName]=i))}for(var s=0;s<t.length;++s)t[s][e]("add",this._onComponentAdd,this),t[s][e]("beforeremove",this._onComponentRemove,this)},n._onSetEntity=function(e,t,n){if(n instanceof gS)this._updateEntityReference();else{if(null!=n&&"string"!=typeof n)return void console.warn("Entity field `"+this._entityPropertyName+"` was set to unexpected type '"+typeof n+"'");t!==n&&this._updateEntityReference()}},n.onParentComponentEnable=function(){this._entity||this._updateEntityReference()},n._onSceneLoaded=function(){this._updateEntityReference()},n._updateEntityReference=function(){var e,t=this._parentComponent.data[this._entityPropertyName];if(t instanceof gS)t=(e=t).getGuid(),this._parentComponent.data[this._entityPropertyName]=t;else{var n=this._parentComponent.system.app.root;e=this._parentComponent.entity.isDescendantOf(n)&&t?n.findByGuid(t):null}this._entity!==e&&(this._entity&&this._onBeforeEntityChange(),this._entity=e,this._entity&&this._onAfterEntityChange(),this.fire("set:entity",this._entity))},n._onBeforeEntityChange=function(){this._toggleEntityListeners("off"),this._callAllGainOrLoseListeners(this._loseListeners)},n._onAfterEntityChange=function(){this._toggleEntityListeners("on"),this._callAllGainOrLoseListeners(this._gainListeners)},n._onComponentAdd=function(e,t){var n=t.system.id;e===this._entity&&(this._callGainOrLoseListener(n,this._gainListeners),this._toggleComponentListeners("on",n))},n._onComponentRemove=function(e,t){var n=t.system.id;e===this._entity&&(this._callGainOrLoseListener(n,this._loseListeners),this._toggleComponentListeners("off",n,!0))},n._callAllGainOrLoseListeners=function(e){for(var t in this._entity.c)this._callGainOrLoseListener(t,e)},n._callGainOrLoseListener=function(e,t){if(this._entity.c.hasOwnProperty(e)&&t[e]){var n=t[e];n.callback.call(n.scope)}},n._toggleEntityListeners=function(e,t){if(this._entity)for(var n=0;n<this._eventListenerConfigs.length;++n)this._safeToggleListener(e,this._eventListenerConfigs[n],t)},n._toggleComponentListeners=function(e,t,n){for(var i=0;i<this._eventListenerConfigs.length;++i){var a=this._eventListenerConfigs[i];a.sourceName===t&&this._safeToggleListener(e,a,n)}},n._safeToggleListener=function(e,t,n){var i="on"===e;if(!i||!this._listenerStatusFlags[t.id]){var a=this._getEventSource(t.sourceName,n);a&&(a[e](t.eventName,t.callback,t.scope),this._listenerStatusFlags[t.id]=i)}},n._getEventSource=function(e,t){if("entity"===e)return this._entity;var n=this._entity[e];return n||(t||console.warn("Entity has no component with name "+e),null)},n._onEntityDestroy=function(e){this._entity===e&&(this._toggleEntityListeners("off",!0),this._entity=null)},n._onParentComponentRemove=function(e,t){t===this._parentComponent&&(this._toggleLifecycleListeners("off"),this._toggleEntityListeners("off",!0))},n.hasComponent=function(e){return!(!this._entity||!this._entity.c||!this._entity.c[e])},q(t,[{key:"entity",get:function(){return this._entity}}]),t}(re),cT=0,hT=1,pT="group",dT="image",uT="text",mT="stretch",fT="contain",gT="cover",vT={DEFAULT:"DEFAULT",HOVER:"HOVER",PRESSED:"PRESSED",INACTIVE:"INACTIVE"},yT={};yT[vT.DEFAULT]="_defaultTint",yT[vT.HOVER]="hoverTint",yT[vT.PRESSED]="pressedTint",yT[vT.INACTIVE]="inactiveTint";var _T={};_T[vT.DEFAULT]="_defaultSpriteAsset",_T[vT.HOVER]="hoverSpriteAsset",_T[vT.PRESSED]="pressedSpriteAsset",_T[vT.INACTIVE]="inactiveSpriteAsset";var wT={};wT[vT.DEFAULT]="_defaultSpriteFrame",wT[vT.HOVER]="hoverSpriteFrame",wT[vT.PRESSED]="pressedSpriteFrame",wT[vT.INACTIVE]="inactiveSpriteFrame";var bT=function(e){function t(t,n){var i;return(i=e.call(this,t,n)||this)._visualState=vT.DEFAULT,i._isHovering=!1,i._hoveringCounter=0,i._isPressed=!1,i._defaultTint=new st(1,1,1,1),i._defaultSpriteAsset=null,i._defaultSpriteFrame=0,i._imageReference=new lT(J(i),"imageEntity",{"element#gain":i._onImageElementGain,"element#lose":i._onImageElementLose,"element#set:color":i._onSetColor,"element#set:opacity":i._onSetOpacity,"element#set:spriteAsset":i._onSetSpriteAsset,"element#set:spriteFrame":i._onSetSpriteFrame}),i._toggleLifecycleListeners("on",t),i}Z(t,e);var n=t.prototype;return n._toggleLifecycleListeners=function(e,t){this[e]("set_active",this._onSetActive,this),this[e]("set_transitionMode",this._onSetTransitionMode,this),this[e]("set_hoverTint",this._onSetTransitionValue,this),this[e]("set_pressedTint",this._onSetTransitionValue,this),this[e]("set_inactiveTint",this._onSetTransitionValue,this),this[e]("set_hoverSpriteAsset",this._onSetTransitionValue,this),this[e]("set_hoverSpriteFrame",this._onSetTransitionValue,this),this[e]("set_pressedSpriteAsset",this._onSetTransitionValue,this),this[e]("set_pressedSpriteFrame",this._onSetTransitionValue,this),this[e]("set_inactiveSpriteAsset",this._onSetTransitionValue,this),this[e]("set_inactiveSpriteFrame",this._onSetTransitionValue,this),t.app.systems.element[e]("add",this._onElementComponentAdd,this),t.app.systems.element[e]("beforeremove",this._onElementComponentRemove,this)},n._onSetActive=function(e,t,n){t!==n&&this._updateVisualState()},n._onSetTransitionMode=function(e,t,n){t!==n&&(this._cancelTween(),this._resetToDefaultVisualState(t),this._forceReapplyVisualState())},n._onSetTransitionValue=function(e,t,n){t!==n&&this._forceReapplyVisualState()},n._onElementComponentRemove=function(e){this.entity===e&&this._toggleHitElementListeners("off")},n._onElementComponentAdd=function(e){this.entity===e&&this._toggleHitElementListeners("on")},n._onImageElementLose=function(){this._cancelTween(),this._resetToDefaultVisualState(this.transitionMode)},n._onImageElementGain=function(){this._storeDefaultVisualState(),this._forceReapplyVisualState()},n._toggleHitElementListeners=function(e){if(this.entity.element){var t="on"===e;if(t&&this._hasHitElementListeners)return;this.entity.element[e]("mouseenter",this._onMouseEnter,this),this.entity.element[e]("mouseleave",this._onMouseLeave,this),this.entity.element[e]("mousedown",this._onMouseDown,this),this.entity.element[e]("mouseup",this._onMouseUp,this),this.entity.element[e]("touchstart",this._onTouchStart,this),this.entity.element[e]("touchend",this._onTouchEnd,this),this.entity.element[e]("touchleave",this._onTouchLeave,this),this.entity.element[e]("touchcancel",this._onTouchCancel,this),this.entity.element[e]("selectstart",this._onSelectStart,this),this.entity.element[e]("selectend",this._onSelectEnd,this),this.entity.element[e]("selectenter",this._onSelectEnter,this),this.entity.element[e]("selectleave",this._onSelectLeave,this),this.entity.element[e]("click",this._onClick,this),this._hasHitElementListeners=t}},n._storeDefaultVisualState=function(){if(this._imageReference.hasComponent("element")){var e=this._imageReference.entity.element;e.type!==pT&&(this._storeDefaultColor(e.color),this._storeDefaultOpacity(e.opacity),this._storeDefaultSpriteAsset(e.spriteAsset),this._storeDefaultSpriteFrame(e.spriteFrame))}},n._storeDefaultColor=function(e){this._defaultTint.r=e.r,this._defaultTint.g=e.g,this._defaultTint.b=e.b},n._storeDefaultOpacity=function(e){this._defaultTint.a=e},n._storeDefaultSpriteAsset=function(e){this._defaultSpriteAsset=e},n._storeDefaultSpriteFrame=function(e){this._defaultSpriteFrame=e},n._onSetColor=function(e){this._isApplyingTint||(this._storeDefaultColor(e),this._forceReapplyVisualState())},n._onSetOpacity=function(e){this._isApplyingTint||(this._storeDefaultOpacity(e),this._forceReapplyVisualState())},n._onSetSpriteAsset=function(e){this._isApplyingSprite||(this._storeDefaultSpriteAsset(e),this._forceReapplyVisualState())},n._onSetSpriteFrame=function(e){this._isApplyingSprite||(this._storeDefaultSpriteFrame(e),this._forceReapplyVisualState())},n._onMouseEnter=function(e){this._isHovering=!0,this._updateVisualState(),this._fireIfActive("mouseenter",e)},n._onMouseLeave=function(e){this._isHovering=!1,this._isPressed=!1,this._updateVisualState(),this._fireIfActive("mouseleave",e)},n._onMouseDown=function(e){this._isPressed=!0,this._updateVisualState(),this._fireIfActive("mousedown",e)},n._onMouseUp=function(e){this._isPressed=!1,this._updateVisualState(),this._fireIfActive("mouseup",e)},n._onTouchStart=function(e){this._isPressed=!0,this._updateVisualState(),this._fireIfActive("touchstart",e)},n._onTouchEnd=function(e){e.event.preventDefault(),this._isPressed=!1,this._updateVisualState(),this._fireIfActive("touchend",e)},n._onTouchLeave=function(e){this._isPressed=!1,this._updateVisualState(),this._fireIfActive("touchleave",e)},n._onTouchCancel=function(e){this._isPressed=!1,this._updateVisualState(),this._fireIfActive("touchcancel",e)},n._onSelectStart=function(e){this._isPressed=!0,this._updateVisualState(),this._fireIfActive("selectstart",e)},n._onSelectEnd=function(e){this._isPressed=!1,this._updateVisualState(),this._fireIfActive("selectend",e)},n._onSelectEnter=function(e){this._hoveringCounter++,1===this._hoveringCounter&&(this._isHovering=!0,this._updateVisualState()),this._fireIfActive("selectenter",e)},n._onSelectLeave=function(e){this._hoveringCounter--,0===this._hoveringCounter&&(this._isHovering=!1,this._isPressed=!1,this._updateVisualState()),this._fireIfActive("selectleave",e)},n._onClick=function(e){this._fireIfActive("click",e)},n._fireIfActive=function(e,t){this.data.active&&this.fire(e,t)},n._updateVisualState=function(e){var t=this._visualState,n=this._determineVisualState();if((t!==n||e)&&this.enabled)switch(this._visualState=n,t===vT.HOVER&&this._fireIfActive("hoverend"),t===vT.PRESSED&&this._fireIfActive("pressedend"),n===vT.HOVER&&this._fireIfActive("hoverstart"),n===vT.PRESSED&&this._fireIfActive("pressedstart"),this.transitionMode){case cT:var i=this[yT[this._visualState]];this._applyTint(i);break;case hT:var a=_T[this._visualState],s=wT[this._visualState],r=this[a],o=this[s];this._applySprite(r,o)}},n._forceReapplyVisualState=function(){this._updateVisualState(!0)},n._resetToDefaultVisualState=function(e){if(this._imageReference.hasComponent("element"))switch(e){case cT:this._cancelTween(),this._applyTintImmediately(this._defaultTint);break;case hT:this._applySprite(this._defaultSpriteAsset,this._defaultSpriteFrame)}},n._determineVisualState=function(){return this.active?this._isPressed?vT.PRESSED:this._isHovering?vT.HOVER:vT.DEFAULT:vT.INACTIVE},n._applySprite=function(e,t){t=t||0,this._imageReference.hasComponent("element")&&(this._isApplyingSprite=!0,this._imageReference.entity.element.spriteAsset!==e&&(this._imageReference.entity.element.spriteAsset=e),this._imageReference.entity.element.spriteFrame!==t&&(this._imageReference.entity.element.spriteFrame=t),this._isApplyingSprite=!1)},n._applyTint=function(e){this._cancelTween(),0===this.fadeDuration?this._applyTintImmediately(e):this._applyTintWithTween(e)},n._applyTintImmediately=function(e){if(e&&this._imageReference.hasComponent("element")&&this._imageReference.entity.element.type!==pT){var t=xT(e);this._isApplyingTint=!0,t.equals(this._imageReference.entity.element.color)||(this._imageReference.entity.element.color=t),this._imageReference.entity.element.opacity!==e.a&&(this._imageReference.entity.element.opacity=e.a),this._isApplyingTint=!1}},n._applyTintWithTween=function(e){if(e&&this._imageReference.hasComponent("element")&&this._imageReference.entity.element.type!==pT){var t=xT(e),n=this._imageReference.entity.element.color,i=this._imageReference.entity.element.opacity;t.equals(n)&&e.a===i||(this._tweenInfo={startTime:Ye(),from:new st(n.r,n.g,n.b,i),to:e.clone(),lerpColor:new st})}},n._updateTintTween=function(){var e=Ye()-this._tweenInfo.startTime,t=0===this.fadeDuration?1:e/this.fadeDuration;if(t=at.clamp(t,0,1),Math.abs(t-1)>1e-5){var n=this._tweenInfo.lerpColor;n.lerp(this._tweenInfo.from,this._tweenInfo.to,t),this._applyTintImmediately(new st(n.r,n.g,n.b,n.a))}else this._applyTintImmediately(this._tweenInfo.to),this._cancelTween()},n._cancelTween=function(){delete this._tweenInfo},n.onUpdate=function(){this._tweenInfo&&this._updateTintTween()},n.onEnable=function(){this._isHovering=!1,this._hoveringCounter=0,this._isPressed=!1,this._imageReference.onParentComponentEnable(),this._toggleHitElementListeners("on"),this._forceReapplyVisualState()},n.onDisable=function(){this._toggleHitElementListeners("off"),this._resetToDefaultVisualState(this.transitionMode)},n.onRemove=function(){this._toggleLifecycleListeners("off",this.system),this.onDisable()},t}(zS);function xT(e){return new st(e.r,e.g,e.b)}var CT=function(){this.enabled=!0,this.active=!0,this.imageEntity=null,this.hitPadding=new vt,this.transitionMode=cT,this.hoverTint=new st(.75,.75,.75),this.pressedTint=new st(.5,.5,.5),this.inactiveTint=new st(.25,.25,.25),this.fadeDuration=0,this.hoverSpriteAsset=null,this.hoverSpriteFrame=0,this.pressedSpriteAsset=null,this.pressedSpriteFrame=0,this.inactiveSpriteAsset=null,this.inactiveSpriteFrame=0},ST=["enabled","active",{name:"imageEntity",type:"entity"},{name:"hitPadding",type:"vec4"},"transitionMode",{name:"hoverTint",type:"rgba"},{name:"pressedTint",type:"rgba"},{name:"inactiveTint",type:"rgba"},"fadeDuration","hoverSpriteAsset","hoverSpriteFrame","pressedSpriteAsset","pressedSpriteFrame","inactiveSpriteAsset","inactiveSpriteFrame"],ET=function(e){function t(t){var n;return(n=e.call(this,t)||this).id="button",n.ComponentType=bT,n.DataType=CT,n.schema=ST,n.on("beforeremove",n._onRemoveComponent,J(n)),n.app.systems.on("update",n.onUpdate,J(n)),n}Z(t,e);var n=t.prototype;return n.initializeComponentData=function(t,n,i){e.prototype.initializeComponentData.call(this,t,n,ST)},n.onUpdate=function(e){var t=this.store;for(var n in t){var i=t[n].entity,a=i.button;a.enabled&&i.enabled&&a.onUpdate()}},n._onRemoveComponent=function(e,t){t.onRemove()},n.destroy=function(){e.prototype.destroy.call(this),this.app.systems.off("update",this.onUpdate,this)},t}(VS);zS._buildAccessors(bT.prototype,ST);var TT,AT,LT,MT=new pt,PT=new Et,OT=function(e){function t(t,n){var i;return(i=e.call(this,t,n)||this)._compoundParent=null,i._hasOffset=!1,i.entity.on("insert",i._onInsert,J(i)),i.on("set_type",i.onSetType,J(i)),i.on("set_halfExtents",i.onSetHalfExtents,J(i)),i.on("set_linearOffset",i.onSetOffset,J(i)),i.on("set_angularOffset",i.onSetOffset,J(i)),i.on("set_radius",i.onSetRadius,J(i)),i.on("set_height",i.onSetHeight,J(i)),i.on("set_axis",i.onSetAxis,J(i)),i.on("set_asset",i.onSetAsset,J(i)),i.on("set_renderAsset",i.onSetRenderAsset,J(i)),i.on("set_model",i.onSetModel,J(i)),i.on("set_render",i.onSetRender,J(i)),i}Z(t,e);var n=t.prototype;return n.onSetType=function(e,t,n){t!==n&&this.system.changeType(this,t,n)},n.onSetHalfExtents=function(e,t,n){var i=this.data.type;this.data.initialized&&"box"===i&&this.system.recreatePhysicalShapes(this)},n.onSetOffset=function(e,t,n){this._hasOffset=!this.data.linearOffset.equals(pt.ZERO)||!this.data.angularOffset.equals(Et.IDENTITY),this.data.initialized&&this.system.recreatePhysicalShapes(this)},n.onSetRadius=function(e,t,n){var i=this.data.type;!this.data.initialized||"sphere"!==i&&"capsule"!==i&&"cylinder"!==i&&"cone"!==i||this.system.recreatePhysicalShapes(this)},n.onSetHeight=function(e,t,n){var i=this.data.type;!this.data.initialized||"capsule"!==i&&"cylinder"!==i&&"cone"!==i||this.system.recreatePhysicalShapes(this)},n.onSetAxis=function(e,t,n){var i=this.data.type;!this.data.initialized||"capsule"!==i&&"cylinder"!==i&&"cone"!==i||this.system.recreatePhysicalShapes(this)},n.onSetAsset=function(e,t,n){var i=this.system.app.assets;if(t){var a=i.get(t);a&&a.off("remove",this.onAssetRemoved,this)}if(n){n instanceof eS&&(this.data.asset=n.id);var s=i.get(this.data.asset);s&&(s.off("remove",this.onAssetRemoved,this),s.on("remove",this.onAssetRemoved,this))}this.data.initialized&&"mesh"===this.data.type&&(n||(this.data.model=null),this.system.recreatePhysicalShapes(this))},n.onSetRenderAsset=function(e,t,n){var i=this.system.app.assets;if(t){var a=i.get(t);a&&a.off("remove",this.onRenderAssetRemoved,this)}if(n){n instanceof eS&&(this.data.renderAsset=n.id);var s=i.get(this.data.renderAsset);s&&(s.off("remove",this.onRenderAssetRemoved,this),s.on("remove",this.onRenderAssetRemoved,this))}this.data.initialized&&"mesh"===this.data.type&&(n||(this.data.render=null),this.system.recreatePhysicalShapes(this))},n.onSetModel=function(e,t,n){this.data.initialized&&"mesh"===this.data.type&&this.system.implementations.mesh.doRecreatePhysicalShape(this)},n.onSetRender=function(e,t,n){this.onSetModel(e,t,n)},n.onAssetRemoved=function(e){e.off("remove",this.onAssetRemoved,this),this.data.asset===e.id&&(this.asset=null)},n.onRenderAssetRemoved=function(e){e.off("remove",this.onRenderAssetRemoved,this),this.data.renderAsset===e.id&&(this.renderAsset=null)},n._getCompoundChildShapeIndex=function(e){for(var t=this.data.shape,n=t.getNumChildShapes(),i=0;i<n;i++)if(t.getChildShape(i).ptr===e.ptr)return i;return null},n._onInsert=function(e){if("undefined"!=typeof Ammo)if(this._compoundParent)this.system.recreatePhysicalShapes(this);else if(!this.entity.rigidbody)for(var t=this.entity.parent;t;){if(t.collision&&"compound"===t.collision.type){0===t.collision.shape.getNumChildShapes()?this.system.recreatePhysicalShapes(t.collision):this.system.recreatePhysicalShapes(this);break}t=t.parent}},n._updateCompound=function(){var e=this.entity;if(e._dirtyWorld){for(var t=e._dirtyLocal,n=e;n&&!t&&(!n.collision||n.collision!==this._compoundParent);)n._dirtyLocal&&(t=!0),n=n.parent;if(t){e.forEach(this.system.implementations.compound._updateEachDescendantTransform,e);var i=this._compoundParent.entity.rigidbody;i&&i.activate()}}},n.getShapePosition=function(){var e=this.entity.getPosition();if(this._hasOffset){var t=this.entity.getRotation(),n=this.data.linearOffset;return PT.copy(t).transformVector(n,MT),MT.add(e)}return e},n.getShapeRotation=function(){var e=this.entity.getRotation();return this._hasOffset?PT.copy(e).mul(this.data.angularOffset):e},n.onEnable=function(){if("mesh"===this.data.type&&(this.data.asset||this.data.renderAsset)&&this.data.initialized){var e=this.system.app.assets.get(this.data.asset||this.data.renderAsset);if(e&&(!e.resource||!this.data.shape))return void this.system.recreatePhysicalShapes(this)}if(this.entity.rigidbody)this.entity.rigidbody.enabled&&this.entity.rigidbody.enableSimulation();else if(this._compoundParent&&this!==this._compoundParent)if(0===this._compoundParent.shape.getNumChildShapes())this.system.recreatePhysicalShapes(this._compoundParent);else{var t=this.system._getNodeTransform(this.entity,this._compoundParent.entity);this._compoundParent.shape.addChildShape(t,this.data.shape),Ammo.destroy(t),this._compoundParent.entity.rigidbody&&this._compoundParent.entity.rigidbody.activate()}else this.entity.trigger&&this.entity.trigger.enable()},n.onDisable=function(){this.entity.rigidbody?this.entity.rigidbody.disableSimulation():this._compoundParent&&this!==this._compoundParent?this._compoundParent.entity._destroying||(this.system._removeCompoundChild(this._compoundParent,this.data.shape),this._compoundParent.entity.rigidbody&&this._compoundParent.entity.rigidbody.activate()):this.entity.trigger&&this.entity.trigger.disable()},n.onBeforeRemove=function(){this.asset&&(this.asset=null),this.renderAsset&&(this.renderAsset=null),this.entity.off("insert",this._onInsert,this),this.off()},t}(zS),IT=function(){this.enabled=!0,this.type="box",this.halfExtents=new pt(.5,.5,.5),this.linearOffset=new pt,this.angularOffset=new Et,this.radius=.5,this.axis=1,this.height=2,this.asset=null,this.renderAsset=null,this.shape=null,this.model=null,this.render=null,this.initialized=!1},RT="static",DT="dynamic",kT="kinematic",FT=1,BT=2,NT=4,UT=1,zT=2,VT=3,HT=4,GT=5,WT=0,jT=1,XT=1,YT=2,qT=4,KT=8,ZT=16,QT=32,JT=64,$T=128,eA=256,tA=512,nA=1024,iA=2048,aA=4096,sA=8192,rA=16384,oA=0,lA=65535,cA=2,hA=65533,pA=65529,dA=function(){function e(e,t,n){this.entity=t.entity,this.component=t,this.app=e,"undefined"==typeof Ammo||TT||(TT=new Ammo.btVector3,AT=new Ammo.btQuaternion,LT=new Ammo.btTransform),this.initialize(n)}var t=e.prototype;return t.initialize=function(e){var t=this.entity,n=e.shape;if(n&&"undefined"!=typeof Ammo){t.trigger&&t.trigger.destroy();var i=1,a=this.component;if(a){var s=a.getShapePosition(),r=a.getShapeRotation();TT.setValue(s.x,s.y,s.z),AT.setValue(r.x,r.y,r.z,r.w)}else{var o=t.getPosition(),l=t.getRotation();TT.setValue(o.x,o.y,o.z),AT.setValue(l.x,l.y,l.z,l.w)}LT.setOrigin(TT),LT.setRotation(AT);var c=this.app.systems.rigidbody.createBody(i,n,LT);c.setRestitution(0),c.setFriction(0),c.setDamping(0,0),TT.setValue(0,0,0),c.setLinearFactor(TT),c.setAngularFactor(TT),c.setCollisionFlags(c.getCollisionFlags()|NT),c.entity=t,this.body=c,this.component.enabled&&t.enabled&&this.enable()}},t.destroy=function(){var e=this.body;e&&(this.disable(),this.app.systems.rigidbody.destroyBody(e))},t._getEntityTransform=function(e){var t=this.component;if(t){var n=t.getShapePosition(),i=t.getShapeRotation();TT.setValue(n.x,n.y,n.z),AT.setValue(i.x,i.y,i.z,i.w)}else{var a=this.entity.getPosition(),s=this.entity.getRotation();TT.setValue(a.x,a.y,a.z),AT.setValue(s.x,s.y,s.z,s.w)}e.setOrigin(TT),e.setRotation(AT)},t.updateTransform=function(){this._getEntityTransform(LT);var e=this.body;e.setWorldTransform(LT),e.activate()},t.enable=function(){var e=this.body;if(e){var t=this.app.systems;t.rigidbody.addBody(e,ZT,hA^ZT),t.rigidbody._triggers.push(this),e.forceActivationState(UT),this.updateTransform()}},t.disable=function(){var e=this.body;if(e){var t=this.app.systems,n=t.rigidbody._triggers.indexOf(this);n>-1&&t.rigidbody._triggers.splice(n,1),t.rigidbody.removeBody(e),e.forceActivationState(GT)}},e}(),uA=new St,mA=new pt,fA=new pt,gA=new Et,vA=new Cv,yA=["enabled","type","halfExtents","linearOffset","angularOffset","radius","axis","height","asset","renderAsset","shape","model","render"],_A=function(){function e(e){this.system=e}var t=e.prototype;return t.beforeInitialize=function(e,t){t.shape=null,t.model=new Mb,t.model.graph=new Cv},t.afterInitialize=function(e,t){this.recreatePhysicalShapes(e),e.data.initialized=!0},t.reset=function(e,t){this.beforeInitialize(e,t),this.afterInitialize(e,t)},t.recreatePhysicalShapes=function(e){var t=e.entity,n=e.data;if("undefined"!=typeof Ammo){t.trigger&&(t.trigger.destroy(),delete t.trigger),n.shape&&(e._compoundParent&&(this.system._removeCompoundChild(e._compoundParent,n.shape),e._compoundParent.entity.rigidbody&&e._compoundParent.entity.rigidbody.activate()),this.destroyShape(n)),n.shape=this.createPhysicalShape(e.entity,n);var i=!e._compoundParent;if("compound"!==n.type||e._compoundParent&&e!==e._compoundParent){if("compound"!==n.type&&(e._compoundParent&&e===e._compoundParent&&t.forEach(this.system.implementations.compound._updateEachDescendant,e),!e.rigidbody)){e._compoundParent=null;for(var a=t.parent;a;){if(a.collision&&"compound"===a.collision.type){e._compoundParent=a.collision;break}a=a.parent}}}else e._compoundParent=e,t.forEach(this._addEachDescendant,e);e._compoundParent&&e!==e._compoundParent&&(i&&0===e._compoundParent.shape.getNumChildShapes()?this.system.recreatePhysicalShapes(e._compoundParent):(this.system.updateCompoundChildTransform(t),e._compoundParent.entity.rigidbody&&e._compoundParent.entity.rigidbody.activate())),t.rigidbody?(t.rigidbody.disableSimulation(),t.rigidbody.createBody(),t.enabled&&t.rigidbody.enabled&&t.rigidbody.enableSimulation()):e._compoundParent||(t.trigger?t.trigger.initialize(n):t.trigger=new dA(this.system.app,e,n))}},t.createPhysicalShape=function(e,t){},t.updateTransform=function(e,t,n,i){e.entity.trigger&&e.entity.trigger.updateTransform()},t.destroyShape=function(e){e.shape&&(Ammo.destroy(e.shape),e.shape=null)},t.beforeRemove=function(e,t){t.data.shape&&(t._compoundParent&&!t._compoundParent.entity._destroying&&(this.system._removeCompoundChild(t._compoundParent,t.data.shape),t._compoundParent.entity.rigidbody&&t._compoundParent.entity.rigidbody.activate()),t._compoundParent=null,this.destroyShape(t.data))},t.remove=function(e,t){e.rigidbody&&e.rigidbody.body&&e.rigidbody.disableSimulation(),e.trigger&&(e.trigger.destroy(),delete e.trigger)},t.clone=function(e,t){var n=this.system.store[e.getGuid()],i={enabled:n.data.enabled,type:n.data.type,halfExtents:[n.data.halfExtents.x,n.data.halfExtents.y,n.data.halfExtents.z],linearOffset:[n.data.linearOffset.x,n.data.linearOffset.y,n.data.linearOffset.z],angularOffset:[n.data.angularOffset.x,n.data.angularOffset.y,n.data.angularOffset.z,n.data.angularOffset.w],radius:n.data.radius,axis:n.data.axis,height:n.data.height,asset:n.data.asset,renderAsset:n.data.renderAsset,model:n.data.model,render:n.data.render};return this.system.addComponent(t,i)},e}(),wA=function(e){function t(){return e.apply(this,arguments)||this}return Z(t,e),t.prototype.createPhysicalShape=function(e,t){if("undefined"!=typeof Ammo){var n=t.halfExtents,i=new Ammo.btVector3(n?n.x:.5,n?n.y:.5,n?n.z:.5),a=new Ammo.btBoxShape(i);return Ammo.destroy(i),a}},t}(_A),bA=function(e){function t(){return e.apply(this,arguments)||this}return Z(t,e),t.prototype.createPhysicalShape=function(e,t){if("undefined"!=typeof Ammo)return new Ammo.btSphereShape(t.radius)},t}(_A),xA=function(e){function t(){return e.apply(this,arguments)||this}return Z(t,e),t.prototype.createPhysicalShape=function(e,t){var n,i,a,s=null!=(n=t.axis)?n:1,r=null!=(i=t.radius)?i:.5,o=Math.max((null!=(a=t.height)?a:2)-2*r,0),l=null;if("undefined"!=typeof Ammo)switch(s){case 0:l=new Ammo.btCapsuleShapeX(r,o);break;case 1:l=new Ammo.btCapsuleShape(r,o);break;case 2:l=new Ammo.btCapsuleShapeZ(r,o)}return l},t}(_A),CA=function(e){function t(){return e.apply(this,arguments)||this}return Z(t,e),t.prototype.createPhysicalShape=function(e,t){var n,i,a,s=null!=(n=t.axis)?n:1,r=null!=(i=t.radius)?i:.5,o=null!=(a=t.height)?a:1,l=null,c=null;if("undefined"!=typeof Ammo)switch(s){case 0:l=new Ammo.btVector3(.5*o,r,r),c=new Ammo.btCylinderShapeX(l);break;case 1:l=new Ammo.btVector3(r,.5*o,r),c=new Ammo.btCylinderShape(l);break;case 2:l=new Ammo.btVector3(r,r,.5*o),c=new Ammo.btCylinderShapeZ(l)}return l&&Ammo.destroy(l),c},t}(_A),SA=function(e){function t(){return e.apply(this,arguments)||this}return Z(t,e),t.prototype.createPhysicalShape=function(e,t){var n,i,a,s=null!=(n=t.axis)?n:1,r=null!=(i=t.radius)?i:.5,o=null!=(a=t.height)?a:1,l=null;if("undefined"!=typeof Ammo)switch(s){case 0:l=new Ammo.btConeShapeX(r,o);break;case 1:l=new Ammo.btConeShape(r,o);break;case 2:l=new Ammo.btConeShapeZ(r,o)}return l},t}(_A),EA=function(e){function t(){return e.apply(this,arguments)||this}Z(t,e);var n=t.prototype;return n.beforeInitialize=function(e,t){},n.createAmmoMesh=function(e,t,n){var i;if(this.system._triMeshCache[e.id])i=this.system._triMeshCache[e.id];else{for(var a,s,r=e.vertexBuffer,o=r.getFormat(),l=0;l<o.elements.length;l++){var c=o.elements[l];if(c.name===Fi){s=new Float32Array(r.lock(),c.offset),a=c.stride/4;break}}var h=[];e.getIndices(h);var p,d,u,m=e.primitive[0].count/3,f=new Ammo.btVector3,g=new Ammo.btVector3,v=new Ammo.btVector3,y=e.primitive[0].base;i=new Ammo.btTriangleMesh,this.system._triMeshCache[e.id]=i;for(var _=0;_<m;_++)p=h[y+3*_]*a,d=h[y+3*_+1]*a,u=h[y+3*_+2]*a,f.setValue(s[p],s[p+1],s[p+2]),g.setValue(s[d],s[d+1],s[d+2]),v.setValue(s[u],s[u+1],s[u+2]),i.addTriangle(f,g,v,!0);Ammo.destroy(f),Ammo.destroy(g),Ammo.destroy(v)}var w=!0,b=new Ammo.btBvhTriangleMeshShape(i,w),x=this.system._getNodeScaling(t);b.setLocalScaling(x),Ammo.destroy(x);var C=this.system._getNodeTransform(t);n.addChildShape(C,b),Ammo.destroy(C)},n.createPhysicalShape=function(e,t){if("undefined"!=typeof Ammo&&(t.model||t.render)){var n=new Ammo.btCompoundShape;if(t.model)for(var i=t.model.meshInstances,a=0;a<i.length;a++)this.createAmmoMesh(i[a].mesh,i[a].node,n);else if(t.render)for(var s=t.render.meshes,r=0;r<s.length;r++)this.createAmmoMesh(s[r],vA,n);var o=e.getWorldTransform().getScale(),l=new Ammo.btVector3(o.x,o.y,o.z);return n.setLocalScaling(l),Ammo.destroy(l),n}},n.recreatePhysicalShapes=function(e){var t=e.data;(t.renderAsset||t.asset)&&e.enabled&&e.entity.enabled?this.loadAsset(e,t.renderAsset||t.asset,t.renderAsset?"render":"model"):this.doRecreatePhysicalShape(e)},n.loadAsset=function(e,t,n){var i=this,a=e.data,s=this.system.app.assets,r=s.get(t);r?(r.ready((function(t){a[n]=t.resource,i.doRecreatePhysicalShape(e)})),s.load(r)):s.once("add:"+t,(function(t){t.ready((function(t){a[n]=t.resource,i.doRecreatePhysicalShape(e)})),s.load(t)}))},n.doRecreatePhysicalShape=function(e){var t=e.entity,n=e.data;n.model||n.render?(this.destroyShape(n),n.shape=this.createPhysicalShape(t,n),t.rigidbody?(t.rigidbody.disableSimulation(),t.rigidbody.createBody(),t.enabled&&t.rigidbody.enabled&&t.rigidbody.enableSimulation()):t.trigger?t.trigger.initialize(n):t.trigger=new dA(this.system.app,e,n)):(this.beforeRemove(t,e),this.remove(t,n))},n.updateTransform=function(t,n,i,a){if(t.shape){var s=t.entity.getWorldTransform().getScale(),r=t.shape.getLocalScaling();s.x===r.x()&&s.y===r.y()&&s.z===r.z()||this.doRecreatePhysicalShape(t)}e.prototype.updateTransform.call(this,t,n,i,a)},n.destroyShape=function(e){if(e.shape){for(var t=e.shape.getNumChildShapes(),n=0;n<t;n++){var i=e.shape.getChildShape(n);Ammo.destroy(i)}Ammo.destroy(e.shape),e.shape=null}},t}(_A),TA=function(e){function t(){return e.apply(this,arguments)||this}Z(t,e);var n=t.prototype;return n.createPhysicalShape=function(e,t){if("undefined"!=typeof Ammo)return new Ammo.btCompoundShape},n._addEachDescendant=function(e){e.collision&&!e.rigidbody&&(e.collision._compoundParent=this,e!==this.entity&&e.collision.system.recreatePhysicalShapes(e.collision))},n._updateEachDescendant=function(e){e.collision&&e.collision._compoundParent===this&&(e.collision._compoundParent=null,e===this.entity||e.rigidbody||e.collision.system.recreatePhysicalShapes(e.collision))},n._updateEachDescendantTransform=function(e){e.collision&&e.collision._compoundParent===this.collision._compoundParent&&this.collision.system.updateCompoundChildTransform(e)},t}(_A),AA=function(e){function t(t){var n;return(n=e.call(this,t)||this).id="collision",n.ComponentType=OT,n.DataType=IT,n.schema=yA,n.implementations={},n._triMeshCache={},n.on("beforeremove",n.onBeforeRemove,J(n)),n.on("remove",n.onRemove,J(n)),n}Z(t,e);var n=t.prototype;return n.initializeComponentData=function(t,n,i){for(var a,s={},r=0,o=(i=["type","halfExtents","radius","axis","height","shape","model","asset","render","renderAsset","enabled","linearOffset","angularOffset"]).length;r<o;r++){var l=i[r];s[l]=n[l]}if(n.hasOwnProperty("asset")?(-1!==(a=i.indexOf("model"))&&i.splice(a,1),-1!==(a=i.indexOf("render"))&&i.splice(a,1)):n.hasOwnProperty("model")&&-1!==(a=i.indexOf("asset"))&&i.splice(a,1),s.type||(s.type=t.data.type),t.data.type=s.type,Array.isArray(s.halfExtents)&&(s.halfExtents=new pt(s.halfExtents)),Array.isArray(s.linearOffset)&&(s.linearOffset=new pt(s.linearOffset)),Array.isArray(s.angularOffset)){var c=s.angularOffset;3===c.length?s.angularOffset=(new Et).setFromEulerAngles(c[0],c[1],c[2]):s.angularOffset=new Et(s.angularOffset)}var h=this._createImplementation(s.type);h.beforeInitialize(t,s),e.prototype.initializeComponentData.call(this,t,s,i),h.afterInitialize(t,s)},n._createImplementation=function(e){if(void 0===this.implementations[e]){var t;switch(e){case"box":t=new wA(this);break;case"sphere":t=new bA(this);break;case"capsule":t=new xA(this);break;case"cylinder":t=new CA(this);break;case"cone":t=new SA(this);break;case"mesh":t=new EA(this);break;case"compound":t=new TA(this)}this.implementations[e]=t}return this.implementations[e]},n._getImplementation=function(e){return this.implementations[e.collision.data.type]},n.cloneComponent=function(e,t){return this._getImplementation(e).clone(e,t)},n.onBeforeRemove=function(e,t){this.implementations[t.data.type].beforeRemove(e,t),t.onBeforeRemove()},n.onRemove=function(e,t){this.implementations[t.type].remove(e,t)},n.updateCompoundChildTransform=function(e){if(this._removeCompoundChild(e.collision._compoundParent,e.collision.data.shape),e.enabled&&e.collision.enabled){var t=this._getNodeTransform(e,e.collision._compoundParent.entity);e.collision._compoundParent.shape.addChildShape(t,e.collision.data.shape),Ammo.destroy(t)}},n._removeCompoundChild=function(e,t){if(e.shape.removeChildShape)e.shape.removeChildShape(t);else{var n=e._getCompoundChildShapeIndex(t);null!==n&&e.shape.removeChildShapeByIndex(n)}},n.onTransformChanged=function(e,t,n,i){this.implementations[e.data.type].updateTransform(e,t,n,i)},n.changeType=function(e,t,n){this.implementations[t].beforeRemove(e.entity,e),this.implementations[t].remove(e.entity,e.data),this._createImplementation(n).reset(e,e.data)},n.recreatePhysicalShapes=function(e){this.implementations[e.data.type].recreatePhysicalShapes(e)},n._calculateNodeRelativeTransform=function(e,t){if(e===t){var n=e.getWorldTransform().getScale();uA.setScale(n.x,n.y,n.z)}else this._calculateNodeRelativeTransform(e.parent,t),uA.mul(e.getLocalTransform())},n._getNodeScaling=function(e){var t=e.getWorldTransform().getScale();return new Ammo.btVector3(t.x,t.y,t.z)},n._getNodeTransform=function(e,t){var n,i;t?(this._calculateNodeRelativeTransform(e,t),n=mA,i=gA,uA.getTranslation(n),i.setFromMat4(uA)):(n=e.getPosition(),i=e.getRotation());var a=new Ammo.btQuaternion,s=new Ammo.btTransform;s.setIdentity();var r=s.getOrigin(),o=e.collision;if(o&&o._hasOffset){var l=o.data.linearOffset,c=o.data.angularOffset,h=fA;gA.copy(i).transformVector(l,h),h.add(n),gA.copy(i).mul(c),r.setValue(h.x,h.y,h.z),a.setValue(gA.x,gA.y,gA.z,gA.w)}else r.setValue(n.x,n.y,n.z),a.setValue(i.x,i.y,i.z,i.w);return s.setRotation(a),Ammo.destroy(a),Ammo.destroy(r),s},n.destroy=function(){for(var t in this._triMeshCache)Ammo.destroy(this._triMeshCache[t]);this._triMeshCache=null,e.prototype.destroy.call(this)},t}(VS);zS._buildAccessors(OT.prototype,yA);var LA=new xl,MA=function(){function e(e,t,n){this._entity=e,this._element=e.element,this.model=new Mb,this.node=new Cv,this.model.graph=this.node,this.mesh=t,this.meshInstance=new Dv(this.mesh,n,this.node),this.meshInstance.name="ImageElement: "+e.name,this.meshInstance.castShadow=!1,this.meshInstance.receiveShadow=!1,this._meshDirty=!1,this.model.meshInstances.push(this.meshInstance),this._entity.addChild(this.model.graph),this.model._entity=this._entity,this.unmaskMeshInstance=null}var t=e.prototype;return t.destroy=function(){this.setMaterial(null),this._element.removeModelFromLayers(this.model),this.model.destroy(),this.model=null,this.node=null,this.mesh=null,this.meshInstance=null,this._entity=null,this._element=null},t.setMesh=function(e){this.meshInstance&&(this.mesh=e,this.meshInstance.mesh=e,this.meshInstance.visible=!!e,this.unmaskMeshInstance&&(this.unmaskMeshInstance.mesh=e),this.forceUpdateAabb())},t.setMask=function(e){if(this.meshInstance){if(e)for(var t in this.unmaskMeshInstance=new Dv(this.mesh,this.meshInstance.material,this.node),this.unmaskMeshInstance.name="Unmask: "+this._entity.name,this.unmaskMeshInstance.castShadow=!1,this.unmaskMeshInstance.receiveShadow=!1,this.unmaskMeshInstance.pick=!1,this.model.meshInstances.push(this.unmaskMeshInstance),this.meshInstance.parameters)this.unmaskMeshInstance.setParameter(t,this.meshInstance.parameters[t].data);else{var n=this.model.meshInstances.indexOf(this.unmaskMeshInstance);n>=0&&this.model.meshInstances.splice(n,1),this.unmaskMeshInstance=null}this._entity.enabled&&this._element.enabled&&(this._element.removeModelFromLayers(this.model),this._element.addModelToLayers(this.model))}},t.setMaterial=function(e){this.meshInstance&&(this.meshInstance.material=e,this.unmaskMeshInstance&&(this.unmaskMeshInstance.material=e))},t.setParameter=function(e,t){this.meshInstance&&(this.meshInstance.setParameter(e,t),this.unmaskMeshInstance&&this.unmaskMeshInstance.setParameter(e,t))},t.deleteParameter=function(e){this.meshInstance&&(this.meshInstance.deleteParameter(e),this.unmaskMeshInstance&&this.unmaskMeshInstance.deleteParameter(e))},t.setUnmaskDrawOrder=function(){if(this.meshInstance){var e=function e(t){var n,i=t.children,a=i.length;if(a){for(var s=0;s<a;s++)i[s].element&&(n=i[s]);if(!n)return null;var r=e(n);return r||n}return null};if(this.unmaskMeshInstance){var t=e(this._entity);t&&t.element?this.unmaskMeshInstance.drawOrder=t.element.drawOrder+t.element.getMaskOffset():this.unmaskMeshInstance.drawOrder=this.meshInstance.drawOrder+this._element.getMaskOffset()}}},t.setDrawOrder=function(e){this.meshInstance&&(this.meshInstance.drawOrder=e)},t.setCull=function(e){if(this.meshInstance){var t=this._element,n=null;e&&t._isScreenSpace()&&(n=function(e){return t.isVisibleForCamera(e)}),this.meshInstance.cull=e,this.meshInstance.isVisibleFunc=n,this.unmaskMeshInstance&&(this.unmaskMeshInstance.cull=e,this.unmaskMeshInstance.isVisibleFunc=n)}},t.setScreenSpace=function(e){this.meshInstance&&(this.meshInstance.screenSpace=e,this.unmaskMeshInstance&&(this.unmaskMeshInstance.screenSpace=e))},t.setLayer=function(e){this.meshInstance&&(this.meshInstance.layer=e,this.unmaskMeshInstance&&(this.unmaskMeshInstance.layer=e))},t.forceUpdateAabb=function(e){this.meshInstance&&(this.meshInstance._aabbVer=-1,this.unmaskMeshInstance&&(this.unmaskMeshInstance._aabbVer=-1))},t.setAabbFunc=function(e){this.meshInstance&&(this.meshInstance._updateAabbFunc=e,this.unmaskMeshInstance&&(this.unmaskMeshInstance._updateAabbFunc=e))},e}(),PA=function(){function e(e){this._element=e,this._entity=e.entity,this._system=e.system,this._textureAsset=null,this._texture=null,this._materialAsset=null,this._material=null,this._spriteAsset=null,this._sprite=null,this._spriteFrame=0,this._pixelsPerUnit=null,this._targetAspectRatio=-1,this._rect=new vt(0,0,1,1),this._mask=!1,this._maskRef=0,this._outerScale=new ft,this._outerScaleUniform=new Float32Array(2),this._innerOffset=new vt,this._innerOffsetUniform=new Float32Array(4),this._atlasRect=new vt,this._atlasRectUniform=new Float32Array(4),this._defaultMesh=this._createMesh(),this._renderable=new MA(this._entity,this._defaultMesh,this._material),this._color=new st(1,1,1,1),this._colorUniform=new Float32Array([1,1,1]),this._renderable.setParameter("material_emissive",this._colorUniform),this._renderable.setParameter("material_opacity",1),this._updateAabbFunc=this._updateAabb.bind(this),this._onScreenChange(this._element.screen),this._element.on("resize",this._onParentResizeOrPivotChange,this),this._element.on("set:pivot",this._onParentResizeOrPivotChange,this),this._element.on("screen:set:screenspace",this._onScreenSpaceChange,this),this._element.on("set:screen",this._onScreenChange,this),this._element.on("set:draworder",this._onDrawOrderChange,this),this._element.on("screen:set:resolution",this._onResolutionChange,this)}var t=e.prototype;return t.destroy=function(){this.textureAsset=null,this.spriteAsset=null,this.materialAsset=null,this._renderable.setMesh(this._defaultMesh),this._renderable.destroy(),this._defaultMesh=null,this._element.off("resize",this._onParentResizeOrPivotChange,this),this._element.off("set:pivot",this._onParentResizeOrPivotChange,this),this._element.off("screen:set:screenspace",this._onScreenSpaceChange,this),this._element.off("set:screen",this._onScreenChange,this),this._element.off("set:draworder",this._onDrawOrderChange,this),this._element.off("screen:set:resolution",this._onResolutionChange,this)},t._onResolutionChange=function(e){},t._onParentResizeOrPivotChange=function(){this._renderable.mesh&&this._updateMesh(this._renderable.mesh)},t._onScreenSpaceChange=function(e){this._updateMaterial(e)},t._onScreenChange=function(e,t){e?this._updateMaterial(e.screen.screenSpace):this._updateMaterial(!1)},t._onDrawOrderChange=function(e){this._renderable.setDrawOrder(e),this.mask&&this._element.screen&&this._element.screen.screen.once("syncdraworder",(function(){this._renderable.setUnmaskDrawOrder()}),this)},t._hasUserMaterial=function(){return!!this._materialAsset||!!this._material&&-1===this._system.defaultImageMaterials.indexOf(this._material)},t._use9Slicing=function(){return this.sprite&&(this.sprite.renderMode===Uf||this.sprite.renderMode===zf)},t._updateMaterial=function(e){var t=!!this._mask,n=!(!this.sprite||this.sprite.renderMode!==Uf),i=!(!this.sprite||this.sprite.renderMode!==zf);this._hasUserMaterial()||(this._material=this._system.getImageElementMaterial(e,t,n,i)),this._renderable&&(this._renderable.setCull(!this._element._isScreenSpace()||this._element._isScreenCulled()),this._renderable.setMaterial(this._material),this._renderable.setScreenSpace(e),this._renderable.setLayer(e?ku:Nu))},t._createMesh=function(){var e=this._element,t=e.calculatedWidth,n=e.calculatedHeight,i=this._rect,a=this._system.app.graphicsDevice,s=new Float32Array([t,0,0,0,0,1,i.x+i.z,1-i.y,t,n,0,0,0,1,i.x+i.z,1-(i.y+i.w),0,0,0,0,0,1,i.x,1-i.y,0,n,0,0,0,1,i.x,1-(i.y+i.w)]),r=LA.get(a,(function(){return new Fr(a,[{semantic:Fi,components:3,type:ts},{semantic:Bi,components:3,type:ts},{semantic:Gi,components:2,type:ts}])})),o=new Mr(a,r,4,mn,s.buffer),l=new og(a);return l.vertexBuffer=o,l.primitive[0].type=Di,l.primitive[0].base=0,l.primitive[0].count=4,l.primitive[0].indexed=!1,l.aabb.setMinMax(pt.ZERO,new pt(t,n,0)),this._updateMesh(l),l},t._updateMesh=function(e){var t=this._element,n=t.calculatedWidth,i=t.calculatedHeight;if(t.fitMode!==mT&&this._targetAspectRatio>0){var a=t.calculatedWidth/t.calculatedHeight;t.fitMode===fT&&a>this._targetAspectRatio||t.fitMode===gT&&a<this._targetAspectRatio?n=t.calculatedHeight*this._targetAspectRatio:i=t.calculatedWidth/this._targetAspectRatio}var s=t._isScreenSpace();if(this._updateMaterial(s),this._renderable&&this._renderable.forceUpdateAabb(),!this.sprite||this.sprite.renderMode!==Uf&&this.sprite.renderMode!==zf){var r=e.vertexBuffer,o=new Float32Array(r.lock()),l=t.pivot.x,c=t.pivot.y;o[0]=n-l*n,o[1]=0-c*i,o[8]=n-l*n,o[9]=i-c*i,o[16]=0-l*n,o[17]=0-c*i,o[24]=0-l*n,o[25]=i-c*i;var h=1,p=1,d=this._rect;if(this._sprite&&this._sprite.frameKeys[this._spriteFrame]&&this._sprite.atlas){var u=this._sprite.atlas.frames[this._sprite.frameKeys[this._spriteFrame]];u&&(d=u.rect,h=this._sprite.atlas.texture.width,p=this._sprite.atlas.texture.height)}o[6]=(d.x+d.z)/h,o[7]=1-d.y/p,o[14]=(d.x+d.z)/h,o[15]=1-(d.y+d.w)/p,o[22]=d.x/h,o[23]=1-d.y/p,o[30]=d.x/h,o[31]=1-(d.y+d.w)/p,r.unlock();var m=new pt(0-l*n,0-c*i,0),f=new pt(n-l*n,i-c*i,0);e.aabb.setMinMax(m,f),this._renderable&&(this._renderable.node.setLocalScale(1,1,1),this._renderable.node.setLocalPosition(0,0,0),this._renderable.setAabbFunc(null))}else{var g=this._sprite.atlas.frames[this._sprite.frameKeys[this._spriteFrame]],v=2/g.rect.z,y=2/g.rect.w;this._innerOffset.set(g.border.x*v,g.border.y*y,g.border.z*v,g.border.w*y);var _=this.sprite.atlas.texture;this._atlasRect.set(g.rect.x/_.width,g.rect.y/_.height,g.rect.z/_.width,g.rect.w/_.height);var w=null!==this._pixelsPerUnit?this._pixelsPerUnit:this.sprite.pixelsPerUnit,b=g.rect.z/w,x=g.rect.w/w;this._outerScale.set(Math.max(n,this._innerOffset.x*b),Math.max(i,this._innerOffset.y*x));var C=b,S=x;this._outerScale.x/=b,this._outerScale.y/=x,C*=at.clamp(n/(this._innerOffset.x*b),1e-4,1),S*=at.clamp(i/(this._innerOffset.y*x),1e-4,1),this._renderable&&(this._innerOffsetUniform[0]=this._innerOffset.x,this._innerOffsetUniform[1]=this._innerOffset.y,this._innerOffsetUniform[2]=this._innerOffset.z,this._innerOffsetUniform[3]=this._innerOffset.w,this._renderable.setParameter("innerOffset",this._innerOffsetUniform),this._atlasRectUniform[0]=this._atlasRect.x,this._atlasRectUniform[1]=this._atlasRect.y,this._atlasRectUniform[2]=this._atlasRect.z,this._atlasRectUniform[3]=this._atlasRect.w,this._renderable.setParameter("atlasRect",this._atlasRectUniform),this._outerScaleUniform[0]=this._outerScale.x,this._outerScaleUniform[1]=this._outerScale.y,this._renderable.setParameter("outerScale",this._outerScaleUniform),this._renderable.setAabbFunc(this._updateAabbFunc),this._renderable.node.setLocalScale(C,S,1),this._renderable.node.setLocalPosition((.5-t.pivot.x)*n,(.5-t.pivot.y)*i,0))}this._meshDirty=!1},t._updateSprite=function(){var e=!1,t=null;if(this._targetAspectRatio=-1,this._sprite&&this._sprite.atlas){t=this._sprite.meshes[this.spriteFrame],e=this._sprite.renderMode===Uf||this._sprite.renderMode===zf;var n=this._sprite.atlas.frames[this._sprite.frameKeys[this._spriteFrame]];(null==n?void 0:n.rect.w)>0&&(this._targetAspectRatio=n.rect.z/n.rect.w)}this.mesh=e?t:this._defaultMesh,this.refreshMesh()},t.refreshMesh=function(){this.mesh&&(this._element._beingInitialized?this._meshDirty=!0:this._updateMesh(this.mesh))},t._updateAabb=function(e){return e.center.set(0,0,0),e.halfExtents.set(.5*this._outerScale.x,.5*this._outerScale.y,.001),e.setFromTransformedAabb(e,this._renderable.node.getWorldTransform()),e},t._toggleMask=function(){this._element._dirtifyMask();var e=this._element._isScreenSpace();this._updateMaterial(e),this._renderable.setMask(!!this._mask)},t._onMaterialLoad=function(e){this.material=e.resource},t._onMaterialAdded=function(e){this._system.app.assets.off("add:"+e.id,this._onMaterialAdded,this),this._materialAsset===e.id&&this._bindMaterialAsset(e)},t._bindMaterialAsset=function(e){this._entity.enabled&&(e.on("load",this._onMaterialLoad,this),e.on("change",this._onMaterialChange,this),e.on("remove",this._onMaterialRemove,this),e.resource?this._onMaterialLoad(e):this._system.app.assets.load(e))},t._unbindMaterialAsset=function(e){e.off("load",this._onMaterialLoad,this),e.off("change",this._onMaterialChange,this),e.off("remove",this._onMaterialRemove,this)},t._onMaterialChange=function(){},t._onMaterialRemove=function(){},t._onTextureAdded=function(e){this._system.app.assets.off("add:"+e.id,this._onTextureAdded,this),this._textureAsset===e.id&&this._bindTextureAsset(e)},t._bindTextureAsset=function(e){this._entity.enabled&&(e.on("load",this._onTextureLoad,this),e.on("change",this._onTextureChange,this),e.on("remove",this._onTextureRemove,this),e.resource?this._onTextureLoad(e):this._system.app.assets.load(e))},t._unbindTextureAsset=function(e){e.off("load",this._onTextureLoad,this),e.off("change",this._onTextureChange,this),e.off("remove",this._onTextureRemove,this)},t._onTextureLoad=function(e){this.texture=e.resource},t._onTextureChange=function(e){},t._onTextureRemove=function(e){},t._onSpriteAssetAdded=function(e){this._system.app.assets.off("add:"+e.id,this._onSpriteAssetAdded,this),this._spriteAsset===e.id&&this._bindSpriteAsset(e)},t._bindSpriteAsset=function(e){this._entity.enabled&&(e.on("load",this._onSpriteAssetLoad,this),e.on("change",this._onSpriteAssetChange,this),e.on("remove",this._onSpriteAssetRemove,this),e.resource?this._onSpriteAssetLoad(e):this._system.app.assets.load(e))},t._unbindSpriteAsset=function(e){e.off("load",this._onSpriteAssetLoad,this),e.off("change",this._onSpriteAssetChange,this),e.off("remove",this._onSpriteAssetRemove,this),e.data.textureAtlasAsset&&this._system.app.assets.off("load:"+e.data.textureAtlasAsset,this._onTextureAtlasLoad,this)},t._onSpriteAssetLoad=function(e){if(e&&e.resource)if(e.resource.atlas)this.sprite=e.resource;else{var t=e.data.textureAtlasAsset;if(t){var n=this._system.app.assets;n.off("load:"+t,this._onTextureAtlasLoad,this),n.once("load:"+t,this._onTextureAtlasLoad,this)}}else this.sprite=null},t._onSpriteAssetChange=function(e){this._onSpriteAssetLoad(e)},t._onSpriteAssetRemove=function(e){},t._bindSprite=function(e){e.on("set:meshes",this._onSpriteMeshesChange,this),e.on("set:pixelsPerUnit",this._onSpritePpuChange,this),e.on("set:atlas",this._onAtlasTextureChange,this),e.atlas&&e.atlas.on("set:texture",this._onAtlasTextureChange,this)},t._unbindSprite=function(e){e.off("set:meshes",this._onSpriteMeshesChange,this),e.off("set:pixelsPerUnit",this._onSpritePpuChange,this),e.off("set:atlas",this._onAtlasTextureChange,this),e.atlas&&e.atlas.off("set:texture",this._onAtlasTextureChange,this)},t._onSpriteMeshesChange=function(){this._sprite&&(this._spriteFrame=at.clamp(this._spriteFrame,0,this._sprite.frameKeys.length-1)),this._updateSprite()},t._onSpritePpuChange=function(){this.sprite.renderMode!==Nf&&null===this._pixelsPerUnit&&this._updateSprite()},t._onAtlasTextureChange=function(){this.sprite&&this.sprite.atlas&&this.sprite.atlas.texture?(this._renderable.setParameter("texture_emissiveMap",this._sprite.atlas.texture),this._renderable.setParameter("texture_opacityMap",this._sprite.atlas.texture)):(this._renderable.deleteParameter("texture_emissiveMap"),this._renderable.deleteParameter("texture_opacityMap"))},t._onTextureAtlasLoad=function(e){var t=this._spriteAsset;t instanceof eS?this._onSpriteAssetLoad(t):this._onSpriteAssetLoad(this._system.app.assets.get(t))},t.onEnable=function(){if(this._materialAsset){var e=this._system.app.assets.get(this._materialAsset);e&&e.resource!==this._material&&this._bindMaterialAsset(e)}if(this._textureAsset){var t=this._system.app.assets.get(this._textureAsset);t&&t.resource!==this._texture&&this._bindTextureAsset(t)}if(this._spriteAsset){var n=this._system.app.assets.get(this._spriteAsset);n&&n.resource!==this._sprite&&this._bindSpriteAsset(n)}this._element.addModelToLayers(this._renderable.model)},t.onDisable=function(){this._element.removeModelFromLayers(this._renderable.model)},t._setStencil=function(e){this._renderable.meshInstance.stencilFront=e,this._renderable.meshInstance.stencilBack=e;var t=0;if(this._element.maskedBy&&(t=this._element.maskedBy.element._image._maskRef),this._renderable.unmaskMeshInstance){var n=new Nr({ref:t+1,func:Un,zpass:wa});this._renderable.unmaskMeshInstance.stencilFront=n,this._renderable.unmaskMeshInstance.stencilBack=n}},t._removeMaterialAssetEvents=function(){if(this._materialAsset){var e=this._system.app.assets;e.off("add:"+this._materialAsset,this._onMaterialAdded,this);var t=e.get(this._materialAsset);t&&(t.off("load",this._onMaterialLoad,this),t.off("change",this._onMaterialChange,this),t.off("remove",this._onMaterialRemove,this))}},q(e,[{key:"color",get:function(){return this._color},set:function(e){var t=e.r,n=e.g,i=e.b;this._color.r===t&&this._color.g===n&&this._color.b===i||(this._color.r=t,this._color.g=n,this._color.b=i,this._colorUniform[0]=t,this._colorUniform[1]=n,this._colorUniform[2]=i,this._renderable.setParameter("material_emissive",this._colorUniform)),this._element&&this._element.fire("set:color",this._color)}},{key:"opacity",get:function(){return this._color.a},set:function(e){e!==this._color.a&&(this._color.a=e,this._renderable.setParameter("material_opacity",e)),this._element&&this._element.fire("set:opacity",e)}},{key:"rect",get:function(){return this._rect},set:function(e){var t,n,i,a;e instanceof vt?(t=e.x,n=e.y,i=e.z,a=e.w):(t=e[0],n=e[1],i=e[2],a=e[3]),t===this._rect.x&&n===this._rect.y&&i===this._rect.z&&a===this._rect.w||(this._rect.set(t,n,i,a),this._renderable.mesh&&(this._element._beingInitialized?this._meshDirty=!0:this._updateMesh(this._renderable.mesh)))}},{key:"material",get:function(){return this._material},set:function(e){if(this._material!==e){if(!e){var t=this._element._isScreenSpace();e=this.mask?t?this._system.defaultScreenSpaceImageMaskMaterial:this._system.defaultImageMaskMaterial:t?this._system.defaultScreenSpaceImageMaterial:this._system.defaultImageMaterial}if(this._material=e,this._materialAsset){var n=this._system.app.assets.get(this._materialAsset);n&&n.resource===e||(this._removeMaterialAssetEvents(),this._materialAsset=null)}e&&(this._renderable.setMaterial(e),this._hasUserMaterial()?(this._renderable.deleteParameter("material_opacity"),this._renderable.deleteParameter("material_emissive")):(this._colorUniform[0]=this._color.r,this._colorUniform[1]=this._color.g,this._colorUniform[2]=this._color.b,this._renderable.setParameter("material_emissive",this._colorUniform),this._renderable.setParameter("material_opacity",this._color.a)))}}},{key:"materialAsset",get:function(){return this._materialAsset},set:function(e){var t=this._system.app.assets,n=e;if(e instanceof eS&&(n=e.id),this._materialAsset!==n)if(this._removeMaterialAssetEvents(),this._materialAsset=n,this._materialAsset){var i=t.get(this._materialAsset);i?this._bindMaterialAsset(i):(this._materialAsset=null,this.material=null,this._materialAsset=n,t.on("add:"+this._materialAsset,this._onMaterialAdded,this))}else this._materialAsset=null,this.material=null,this._materialAsset=n}},{key:"texture",get:function(){return this._texture},set:function(e){if(this._texture!==e){if(this._textureAsset){var t=this._system.app.assets.get(this._textureAsset);t&&t.resource!==e&&(this.textureAsset=null)}if(this._texture=e,e){this._spriteAsset&&(this.spriteAsset=null),this._renderable.setParameter("texture_emissiveMap",this._texture),this._renderable.setParameter("texture_opacityMap",this._texture),this._colorUniform[0]=this._color.r,this._colorUniform[1]=this._color.g,this._colorUniform[2]=this._color.b,this._renderable.setParameter("material_emissive",this._colorUniform),this._renderable.setParameter("material_opacity",this._color.a);var n=this._texture.width/this._texture.height;n!==this._targetAspectRatio&&(this._targetAspectRatio=n,this._element.fitMode!==mT&&this.refreshMesh())}else this._renderable.deleteParameter("texture_emissiveMap"),this._renderable.deleteParameter("texture_opacityMap"),this._targetAspectRatio=-1,this._element.fitMode!==mT&&this.refreshMesh()}}},{key:"textureAsset",get:function(){return this._textureAsset},set:function(e){var t=this._system.app.assets,n=e;if(e instanceof eS&&(n=e.id),this._textureAsset!==n){if(this._textureAsset){t.off("add:"+this._textureAsset,this._onTextureAdded,this);var i=t.get(this._textureAsset);i&&(i.off("load",this._onTextureLoad,this),i.off("change",this._onTextureChange,this),i.off("remove",this._onTextureRemove,this))}if(this._textureAsset=n,this._textureAsset){var a=t.get(this._textureAsset);a?this._bindTextureAsset(a):(this.texture=null,t.on("add:"+this._textureAsset,this._onTextureAdded,this))}else this.texture=null}}},{key:"spriteAsset",get:function(){return this._spriteAsset},set:function(e){var t=this._system.app.assets,n=e;if(e instanceof eS&&(n=e.id),this._spriteAsset!==n){if(this._spriteAsset){t.off("add:"+this._spriteAsset,this._onSpriteAssetAdded,this);var i=t.get(this._spriteAsset);i&&this._unbindSpriteAsset(i)}if(this._spriteAsset=n,this._spriteAsset){var a=t.get(this._spriteAsset);a?this._bindSpriteAsset(a):(this.sprite=null,t.on("add:"+this._spriteAsset,this._onSpriteAssetAdded,this))}else this.sprite=null}this._element&&this._element.fire("set:spriteAsset",n)}},{key:"sprite",get:function(){return this._sprite},set:function(e){if(this._sprite!==e){if(this._sprite&&this._unbindSprite(this._sprite),this._spriteAsset){var t=this._system.app.assets.get(this._spriteAsset);t&&t.resource!==e&&(this.spriteAsset=null)}this._sprite=e,this._sprite&&(this._bindSprite(this._sprite),this._textureAsset&&(this.textureAsset=null)),this._sprite&&this._sprite.atlas&&this._sprite.atlas.texture?(this._renderable.setParameter("texture_emissiveMap",this._sprite.atlas.texture),this._renderable.setParameter("texture_opacityMap",this._sprite.atlas.texture)):(this._renderable.deleteParameter("texture_emissiveMap"),this._renderable.deleteParameter("texture_opacityMap")),this._sprite&&(this._spriteFrame=at.clamp(this._spriteFrame,0,this._sprite.frameKeys.length-1)),this._updateSprite()}}},{key:"spriteFrame",get:function(){return this._spriteFrame},set:function(e){var t=this._spriteFrame;this._sprite?this._spriteFrame=at.clamp(e,0,this._sprite.frameKeys.length-1):this._spriteFrame=e,this._spriteFrame!==t&&this._updateSprite(),this._element&&this._element.fire("set:spriteFrame",e)}},{key:"mesh",get:function(){return this._renderable.mesh},set:function(e){this._renderable.setMesh(e),this._defaultMesh===e?this._renderable.setAabbFunc(null):this._renderable.setAabbFunc(this._updateAabbFunc)}},{key:"mask",get:function(){return this._mask},set:function(e){this._mask!==e&&(this._mask=e,this._toggleMask())}},{key:"pixelsPerUnit",get:function(){return this._pixelsPerUnit},set:function(e){this._pixelsPerUnit!==e&&(this._pixelsPerUnit=e,!this._sprite||this._sprite.renderMode!==Uf&&this._sprite.renderMode!==zf||this._updateSprite())}},{key:"aabb",get:function(){return this._renderable.meshInstance?this._renderable.meshInstance.aabb:null}}]),e}(),OA=function(e){function t(t){var n;return(n=e.call(this)||this)._app=t,t.i18n.on("set:locale",n._onSetLocale,J(n)),n._autoLoad=!1,n._disableLocalization=!1,n._defaultAsset=null,n._localizedAsset=null,n}Z(t,e);var n=t.prototype;return n._bindDefaultAsset=function(){var e=this._app.assets.get(this._defaultAsset);e?this._onDefaultAssetAdd(e):this._app.assets.once("add:"+this._defaultAsset,this._onDefaultAssetAdd,this)},n._unbindDefaultAsset=function(){if(this._defaultAsset){this._app.assets.off("add:"+this._defaultAsset,this._onDefaultAssetAdd,this);var e=this._app.assets.get(this._defaultAsset);e&&(e.off("add:localized",this._onLocaleAdd,this),e.off("remove:localized",this._onLocaleRemove,this),e.off("remove",this._onDefaultAssetRemove,this))}},n._onDefaultAssetAdd=function(e){this._defaultAsset===e.id&&(e.on("add:localized",this._onLocaleAdd,this),e.on("remove:localized",this._onLocaleRemove,this),e.once("remove",this._onDefaultAssetRemove,this))},n._onDefaultAssetRemove=function(e){this._defaultAsset===e.id&&(e.off("add:localized",this._onLocaleAdd,this),e.off("remove:localized",this._onLocaleAdd,this),this._app.assets.once("add:"+this._defaultAsset,this._onDefaultAssetAdd,this))},n._bindLocalizedAsset=function(){if(this._autoLoad){var e=this._app.assets.get(this._localizedAsset);e&&(e.on("load",this._onLocalizedAssetLoad,this),e.on("change",this._onLocalizedAssetChange,this),e.on("remove",this._onLocalizedAssetRemove,this),e.resource?this._onLocalizedAssetLoad(e):this._app.assets.load(e))}},n._unbindLocalizedAsset=function(){var e=this._app.assets.get(this._localizedAsset);e&&(e.off("load",this._onLocalizedAssetLoad,this),e.off("change",this._onLocalizedAssetChange,this),e.off("remove",this._onLocalizedAssetRemove,this))},n._onLocalizedAssetAdd=function(e){this._localizedAsset===e.id&&this._bindLocalizedAsset()},n._onLocalizedAssetLoad=function(e){this.fire("load",e)},n._onLocalizedAssetChange=function(e,t,n,i){this.fire("change",e,t,n,i)},n._onLocalizedAssetRemove=function(e){this._localizedAsset===e.id&&(this.localizedAsset=this._defaultAsset),this.fire("remove",e)},n._onLocaleAdd=function(e,t){this._app.i18n.locale===e&&this._onSetLocale(e)},n._onLocaleRemove=function(e,t){this._app.i18n.locale===e&&this._onSetLocale(e)},n._onSetLocale=function(e){if(this._defaultAsset){var t=this._app.assets.get(this._defaultAsset);if(t&&!this._disableLocalization){var n=t.getLocalizedAssetId(e);this.localizedAsset=n||this._defaultAsset}else this.localizedAsset=this._defaultAsset}else this.localizedAsset=null},n.destroy=function(){this.defaultAsset=null,this._app.i18n.off("set:locale",this._onSetLocale,this),this.off()},q(t,[{key:"defaultAsset",get:function(){return this._defaultAsset},set:function(e){var t=e instanceof eS?e.id:e;this._defaultAsset!==t&&(this._defaultAsset&&this._unbindDefaultAsset(),this._defaultAsset=t,this._defaultAsset&&this._bindDefaultAsset(),this._onSetLocale(this._app.i18n.locale))}},{key:"localizedAsset",get:function(){return this._localizedAsset},set:function(e){var t=e instanceof eS?e.id:e;this._localizedAsset!==t&&(this._localizedAsset&&(this._app.assets.off("add:"+this._localizedAsset,this._onLocalizedAssetAdd,this),this._unbindLocalizedAsset(),this._localizedAsset=null),this._localizedAsset=t,this._localizedAsset&&(this._app.assets.get(this._localizedAsset)?this._bindLocalizedAsset():this._app.assets.once("add:"+this._localizedAsset,this._onLocalizedAssetAdd,this)))}},{key:"autoLoad",get:function(){return this._autoLoad},set:function(e){this._autoLoad!==e&&(this._autoLoad=e,this._autoLoad&&this._localizedAsset&&(this._unbindLocalizedAsset(),this._bindLocalizedAsset()))}},{key:"disableLocalization",get:function(){return this._disableLocalization},set:function(e){this._disableLocalization!==e&&(this._disableLocalization=e,this._onSetLocale(this._app.i18n.locale))}}]),t}(re),IA="msdf",RA="bitmap",DA=0,kA=1,FA=2,BA=3,NA=4,UA=5,zA=6,VA=7,HA=8,GA=" \t\n\r\v\f",WA=/[A-Z|a-z|0-9|_|-|/]/,jA=function(){function e(e){this._symbols=e,this._index=0,this._last=0,this._cur=this._symbols.length>0?this._symbols[0]:null,this._buf=[],this._mode="text",this._error=null}var t=e.prototype;return t.read=function(){for(var e=this._read();e===HA;)e=this._read();return e!==DA&&e!==kA&&(this._last=this._index),e},t.buf=function(){return this._buf},t.last=function(){return this._last},t.error=function(){return this._error},t.debugPrint=function(){for(var e=["EOF","ERROR","TEXT","OPEN_BRACKET","CLOSE_BRACKET","EQUALS","STRING","IDENTIFIER","WHITESPACE"],t=this.read(),n="";n+=(n.length>0?"\n":"")+e[t]+" '"+this.buf().join("")+"'",t!==DA&&t!==kA;)t=this.read();return n},t._read=function(){return this._buf=[],this._eof()?DA:"text"===this._mode?this._text():this._tag()},t._text=function(){for(;;)switch(this._cur){case null:return this._buf.length>0?FA:DA;case"[":return this._mode="tag",this._buf.length>0?FA:this._tag();case"\\":this._next(),"["===this._cur?this._store():this._output("\\");break;default:this._store()}},t._tag=function(){switch(this._cur){case null:return this._error="unexpected end of input reading tag",kA;case"[":return this._store(),BA;case"]":return this._store(),this._mode="text",NA;case"=":return this._store(),UA;case" ":case"\t":case"\n":case"\r":case"\v":case"\f":return this._whitespace();case'"':return this._string();default:return this._isIdentifierSymbol(this._cur)?this._identifier():(this._error="unrecognized character",kA)}},t._whitespace=function(){for(this._store();-1!==GA.indexOf(this._cur);)this._store();return HA},t._string=function(){for(this._next();;)switch(this._cur){case null:return this._error="unexpected end of input reading string",kA;case'"':return this._next(),zA;default:this._store()}},t._identifier=function(){for(this._store();null!==this._cur&&this._isIdentifierSymbol(this._cur);)this._store();return VA},t._isIdentifierSymbol=function(e){return 1===e.length&&null!==e.match(WA)},t._eof=function(){return null===this._cur},t._next=function(){return this._eof()||(this._index++,this._cur=this._index<this._symbols.length?this._symbols[this._index]:null),this._cur},t._store=function(){return this._buf.push(this._cur),this._next()},t._output=function(e){this._buf.push(e)},e}(),XA=function(){function e(e){this._scanner=new jA(e),this._error=null}var t=e.prototype;return t.parse=function(e,t){for(;;)switch(this._scanner.read()){case DA:return!0;case kA:return!1;case FA:Array.prototype.push.apply(e,this._scanner.buf());break;case BA:if(!this._parseTag(e,t))return!1;break;default:return!1}},t.error=function(){return"Error evaluating markup at #"+this._scanner.last().toString()+" ("+(this._scanner.error()||this._error)+")"},t._parseTag=function(e,t){var n=this._scanner.read();if(n!==VA)return this._error="expected identifier",!1;var i=this._scanner.buf().join("");if("/"===i[0]){for(var a=t.length-1;a>=0;--a)if(i==="/"+t[a].name&&null===t[a].end)return t[a].end=e.length,(n=this._scanner.read())===NA||(this._error="expected close bracket",!1);return this._error="failed to find matching tag",!1}var s={name:i,value:null,attributes:{},start:e.length,end:null};if((n=this._scanner.read())===UA){if((n=this._scanner.read())!==zA)return this._error="expected string",!1;s.value=this._scanner.buf().join(""),n=this._scanner.read()}for(;;){switch(n){case NA:return t.push(s),!0;case VA:var r=this._scanner.buf().join("");if((n=this._scanner.read())!==UA)return this._error="expected equals",!1;if((n=this._scanner.read())!==zA)return this._error="expected string",!1;var o=this._scanner.buf().join("");s.attributes[r]=o;break;default:return this._error="expected close bracket or identifier",!1}n=this._scanner.read()}},e}();function YA(e,t){for(var n in t)if(t.hasOwnProperty(n)){var i=t[n];i instanceof Object?(e.hasOwnProperty(n)||(e[n]={}),YA(e[n],t[n])):e[n]=i}}function qA(e){if(0===e.length)return null;for(var t={},n=0;n<e.length;++n){var i=e[n],a={};a[i.name]={value:i.value,attributes:i.attributes},YA(t,a)}return t}function KA(e,t){if(0===e.length)return null;for(var n={},i=0;i<e.length;++i){var a=e[i];n.hasOwnProperty(a.start)?null===n[a.start].open?n[a.start].open=[a]:n[a.start].open.push(a):n[a.start]={open:[a],close:null},n.hasOwnProperty(a.end)?null===n[a.end].close?n[a.end].close=[a]:n[a.end].close.push(a):n[a.end]={open:null,close:[a]}}var s=[];function r(e){s=s.filter((function(t){return void 0===e.find((function(e){return e===t}))}))}function o(e){for(var t=0;t<e.length;++t)s.push(e[t])}for(var l=Object.keys(n).sort((function(e,t){return e-t})),c=[],h=0;h<l.length;++h){var p=n[l[h]];null!==p.close&&r(p.close),null!==p.open&&o(p.open),c.push({start:l[h],tags:qA(s)})}for(var d=[],u=null,m=0;m<c.length;++m){for(var f=c[m];d.length<f.start;)d.push(u?u.tags:null);u=f}for(;d.length<t;)d.push(null);return d}function ZA(e){var t=new XA(e),n=[],i=[];if(!t.parse(n,i))return console.warn(t.error()),{symbols:e,tags:null};var a=i.find((function(e){return null===e.end}));return a?(console.warn("Markup error: found unclosed tag='"+a.name+"'"),{symbols:e,tags:null}):{symbols:n,tags:KA(i,n.length)}}var QA=function(){function e(){}return e.evaluate=function(e){return ZA(e)},e}(),JA=function(){this.count=0,this.quad=0,this.lines={},this.positions=[],this.normals=[],this.uvs=[],this.colors=[],this.indices=[],this.outlines=[],this.shadows=[],this.meshInstance=null};function $A(e,t){var n=new og(e);return n.setPositions(t.positions),n.setNormals(t.normals),n.setColors32(t.colors),n.setUvs(0,t.uvs),n.setIndices(t.indices),n.setVertexStream(ra,t.outlines,3,void 0,ts,!1),n.setVertexStream(oa,t.shadows,3,void 0,ts,!1),n.update(),n}var eL=/^[\r\n]$/,tL=/^[ \t]$/,nL=/^[ \t\-]|[\u200b]$/,iL=/^[a-z0-9]$/i,aL=/^[\u1100-\u11ff]|[\u3000-\u9fff]|[\ua960-\ua97f]|[\uac00-\ud7ff]$/,sL=/^[〕〉》」』】〙〗〟ヽヾーァィゥェォッャュョヮヵヶぁぃぅぇぉっゃゅょゎゕゖㇰㇱㇲㇳㇴㇵㇶㇷㇸㇹㇺㇻㇼㇽㇾㇿ々〻]$/,rL=["​","؜","‎","‏","‪","‫","‬","‭","‮","⁦","⁧","⁨","⁩"],oL={width:0,height:0,xadvance:0,xoffset:0,yoffset:0},lL=new st,cL=new ft,hL=function(){function e(e){this._element=e,this._system=e.system,this._entity=e.entity,this._text="",this._symbols=[],this._colorPalette=[],this._outlinePalette=[],this._shadowPalette=[],this._symbolColors=null,this._symbolOutlineParams=null,this._symbolShadowParams=null,this._i18nKey=null,this._fontAsset=new OA(this._system.app),this._fontAsset.disableLocalization=!0,this._fontAsset.on("load",this._onFontLoad,this),this._fontAsset.on("change",this._onFontChange,this),this._fontAsset.on("remove",this._onFontRemove,this),this._font=null,this._color=new st(1,1,1,1),this._colorUniform=new Float32Array(3),this._spacing=1,this._fontSize=32,this._fontMinY=0,this._fontMaxY=0,this._originalFontSize=32,this._maxFontSize=32,this._minFontSize=8,this._autoFitWidth=!1,this._autoFitHeight=!1,this._maxLines=-1,this._lineHeight=32,this._scaledLineHeight=32,this._wrapLines=!1,this._drawOrder=0,this._alignment=new ft(.5,.5),this._autoWidth=!0,this._autoHeight=!0,this.width=0,this.height=0,this._node=new Cv,this._model=new Mb,this._model.graph=this._node,this._entity.addChild(this._node),this._meshInfo=[],this._material=null,this._aabbDirty=!0,this._aabb=new Ot,this._noResize=!1,this._currentMaterialType=null,this._maskedMaterialSrc=null,this._rtlReorder=!1,this._unicodeConverter=!1,this._rtl=!1,this._outlineColor=new st(0,0,0,1),this._outlineColorUniform=new Float32Array(4),this._outlineThicknessScale=.2,this._outlineThickness=0,this._shadowColor=new st(0,0,0,1),this._shadowColorUniform=new Float32Array(4),this._shadowOffsetScale=.005,this._shadowOffset=new ft(0,0),this._shadowOffsetUniform=new Float32Array(2),this._enableMarkup=!1,this._onScreenChange(this._element.screen),e.on("resize",this._onParentResize,this),e.on("set:screen",this._onScreenChange,this),e.on("screen:set:screenspace",this._onScreenSpaceChange,this),e.on("set:draworder",this._onDrawOrderChange,this),e.on("set:pivot",this._onPivotChange,this),this._system.app.i18n.on("set:locale",this._onLocaleSet,this),this._system.app.i18n.on("data:add",this._onLocalizationData,this),this._system.app.i18n.on("data:remove",this._onLocalizationData,this),this._rangeStart=0,this._rangeEnd=0}var t=e.prototype;return t.destroy=function(){this._setMaterial(null),this._model&&(this._element.removeModelFromLayers(this._model),this._model.destroy(),this._model=null),this._fontAsset.destroy(),this.font=null,this._element.off("resize",this._onParentResize,this),this._element.off("set:screen",this._onScreenChange,this),this._element.off("screen:set:screenspace",this._onScreenSpaceChange,this),this._element.off("set:draworder",this._onDrawOrderChange,this),this._element.off("set:pivot",this._onPivotChange,this),this._system.app.i18n.off("set:locale",this._onLocaleSet,this),this._system.app.i18n.off("data:add",this._onLocalizationData,this),this._system.app.i18n.off("data:remove",this._onLocalizationData,this)},t._onParentResize=function(e,t){this._noResize||this._font&&this._updateText()},t._onScreenChange=function(e){e?this._updateMaterial(e.screen.screenSpace):this._updateMaterial(!1)},t._onScreenSpaceChange=function(e){this._updateMaterial(e)},t._onDrawOrderChange=function(e){if(this._drawOrder=e,this._model)for(var t=0,n=this._model.meshInstances.length;t<n;t++)this._model.meshInstances[t].drawOrder=e},t._onPivotChange=function(e){this._font&&this._updateText()},t._onLocaleSet=function(e){if(this._i18nKey){if(this.fontAsset){var t=this._system.app.assets.get(this.fontAsset);t&&t.resource&&t.resource===this._font||(this.font=null)}this._resetLocalizedText()}},t._onLocalizationData=function(e,t){this._i18nKey&&t[this._i18nKey]&&this._resetLocalizedText()},t._resetLocalizedText=function(){this._setText(this._system.app.i18n.getText(this._i18nKey))},t._setText=function(e){if(this.unicodeConverter){var t=this._system.getUnicodeConverter();t?e=t(e):console.warn("Element created with unicodeConverter option but no unicodeConverter function registered")}this._text!==e&&(this._font&&this._updateText(e),this._text=e)},t._updateText=function(e){var t;if(void 0===e&&(e=this._text),this._symbols=Ue.getSymbols(e.normalize?e.normalize("NFC"):e),0===this._symbols.length&&(this._symbols=[" "]),this._enableMarkup){var n=QA.evaluate(this._symbols);this._symbols=n.symbols,t=n.tags||[]}if(this._rtlReorder){var i=this._system.app.systems.element.getRtlReorder();if(i){var a=i(this._symbols);this._rtl=a.rtl,this._symbols=a.mapping.map((function(e){return this._symbols[e]}),this),t&&(t=a.mapping.map((function(e){return t[e]})))}else console.warn("Element created with rtlReorder option but no rtlReorder function registered")}else this._rtl=!1;var s=function(e,t){return e.toString(!0).toLowerCase()+":"+t.toFixed(2)},r=function(e,t){return e.toString(!0).toLowerCase()+":"+t.x.toFixed(2)+":"+t.y.toFixed(2)};if(t){var o={},l={},c={};this._colorPalette=[Math.round(255*this._color.r),Math.round(255*this._color.g),Math.round(255*this._color.b)],this._outlinePalette=[Math.round(255*this._outlineColor.r),Math.round(255*this._outlineColor.g),Math.round(255*this._outlineColor.b),Math.round(255*this._outlineColor.a),Math.round(255*this._outlineThickness)],this._shadowPalette=[Math.round(255*this._shadowColor.r),Math.round(255*this._shadowColor.g),Math.round(255*this._shadowColor.b),Math.round(255*this._shadowColor.a),Math.round(127*this._shadowOffset.x),Math.round(127*this._shadowOffset.y)],this._symbolColors=[],this._symbolOutlineParams=[],this._symbolShadowParams=[],o[this._color.toString(!1).toLowerCase()]=0,l[s(this._outlineColor,this._outlineThickness)]=0,c[r(this._shadowColor,this._shadowOffset)]=0;for(var h=0,p=this._symbols.length;h<p;++h){var d=t[h],u=0;if(d&&d.color&&d.color.value){var m=d.color.value;if(7===m.length&&"#"===m[0]){var f=m.substring(1).toLowerCase();o.hasOwnProperty(f)?u=o[f]:/^([0-9a-f]{2}){3}$/.test(f)&&(u=this._colorPalette.length/3,o[f]=u,this._colorPalette.push(parseInt(f.substring(0,2),16)),this._colorPalette.push(parseInt(f.substring(2,4),16)),this._colorPalette.push(parseInt(f.substring(4,6),16)))}}this._symbolColors.push(u);var g=0;if(d&&d.outline&&(d.outline.attributes.color||d.outline.attributes.thickness)){var v=d.outline.attributes.color?lL.fromString(d.outline.attributes.color):this._outlineColor,y=Number(d.outline.attributes.thickness);(Number.isNaN(v.r)||Number.isNaN(v.g)||Number.isNaN(v.b)||Number.isNaN(v.a))&&(v=this._outlineColor),Number.isNaN(y)&&(y=this._outlineThickness);var _=s(v,y);l.hasOwnProperty(_)?g=l[_]:(g=this._outlinePalette.length/5,l[_]=g,this._outlinePalette.push(Math.round(255*v.r),Math.round(255*v.g),Math.round(255*v.b),Math.round(255*v.a),Math.round(255*y)))}this._symbolOutlineParams.push(g);var w=0;if(d&&d.shadow&&(d.shadow.attributes.color||d.shadow.attributes.offset||d.shadow.attributes.offsetX||d.shadow.attributes.offsetY)){var b=d.shadow.attributes.color?lL.fromString(d.shadow.attributes.color):this._shadowColor,x=Number(d.shadow.attributes.offset),C=Number(d.shadow.attributes.offsetX),S=Number(d.shadow.attributes.offsetY);(Number.isNaN(b.r)||Number.isNaN(b.g)||Number.isNaN(b.b)||Number.isNaN(b.a))&&(b=this._shadowColor);var E=cL.set(Number.isNaN(C)?Number.isNaN(x)?this._shadowOffset.x:x:C,Number.isNaN(S)?Number.isNaN(x)?this._shadowOffset.y:x:S),T=r(b,E);c.hasOwnProperty(T)?w=c[T]:(w=this._shadowPalette.length/6,c[T]=w,this._shadowPalette.push(Math.round(255*b.r),Math.round(255*b.g),Math.round(255*b.b),Math.round(255*b.a),Math.round(127*E.x),Math.round(127*E.y)))}this._symbolShadowParams.push(w)}}else this._colorPalette=[],this._symbolColors=null,this._symbolOutlineParams=null,this._symbolShadowParams=null;this._updateMaterialEmissive(),this._updateMaterialOutline(),this._updateMaterialShadow();for(var A=this._calculateCharsPerTexture(),L=!1,M=this._element,P=M._isScreenSpace(),O=M._isScreenCulled(),I=function(e){return M.isVisibleForCamera(e)},R=0,D=this._meshInfo.length;R<D;R++){var k=A[R]||0,F=this._meshInfo[R];if(F.count!==k){if(L||(M.removeModelFromLayers(this._model),L=!0),F.count=k,F.positions.length=F.normals.length=3*k*4,F.indices.length=3*k*2,F.uvs.length=2*k*4,F.colors.length=4*k*4,F.outlines.length=4*k*3,F.shadows.length=4*k*3,F.meshInstance&&this._removeMeshInstance(F.meshInstance),0===k){F.meshInstance=null;continue}for(var B=0;B<k;B++)F.indices[3*B*2+0]=4*B,F.indices[3*B*2+1]=4*B+1,F.indices[3*B*2+2]=4*B+3,F.indices[3*B*2+3]=4*B+2,F.indices[3*B*2+4]=4*B+3,F.indices[3*B*2+5]=4*B+1,F.normals[4*B*3+0]=0,F.normals[4*B*3+1]=0,F.normals[4*B*3+2]=-1,F.normals[4*B*3+3]=0,F.normals[4*B*3+4]=0,F.normals[4*B*3+5]=-1,F.normals[4*B*3+6]=0,F.normals[4*B*3+7]=0,F.normals[4*B*3+8]=-1,F.normals[4*B*3+9]=0,F.normals[4*B*3+10]=0,F.normals[4*B*3+11]=-1;var N=$A(this._system.app.graphicsDevice,F),U=new Dv(N,this._material,this._node);if(U.name="Text Element: "+this._entity.name,U.castShadow=!1,U.receiveShadow=!1,U.cull=!P,U.screenSpace=P,U.drawOrder=this._drawOrder,O&&(U.cull=!0,U.isVisibleFunc=I),this._setTextureParams(U,this._font.textures[R]),U.setParameter("material_emissive",this._colorUniform),U.setParameter("material_opacity",this._color.a),U.setParameter("font_sdfIntensity",this._font.intensity),U.setParameter("font_pxrange",this._getPxRange(this._font)),U.setParameter("font_textureWidth",this._font.data.info.maps[R].width),U.setParameter("outline_color",this._outlineColorUniform),U.setParameter("outline_thickness",this._outlineThicknessScale*this._outlineThickness),U.setParameter("shadow_color",this._shadowColorUniform),this._symbolShadowParams)this._shadowOffsetUniform[0]=0,this._shadowOffsetUniform[1]=0;else{var z=-this._font.data.info.maps[R].width/this._font.data.info.maps[R].height;this._shadowOffsetUniform[0]=this._shadowOffsetScale*this._shadowOffset.x,this._shadowOffsetUniform[1]=z*this._shadowOffsetScale*this._shadowOffset.y}U.setParameter("shadow_offset",this._shadowOffsetUniform),F.meshInstance=U,this._model.meshInstances.push(U)}}this._element.maskedBy&&this._element._setMaskedBy(this._element.maskedBy),L&&this._element.enabled&&this._entity.enabled&&this._element.addModelToLayers(this._model),this._updateMeshes(),this._rangeStart=0,this._rangeEnd=this._symbols.length,this._updateRenderRange()},t._removeMeshInstance=function(e){e.destroy();var t=this._model.meshInstances.indexOf(e);-1!==t&&this._model.meshInstances.splice(t,1)},t._setMaterial=function(e){if(this._material=e,this._model)for(var t=0,n=this._model.meshInstances.length;t<n;t++)this._model.meshInstances[t].material=e},t._updateMaterial=function(e){var t=this._element,n=t._isScreenCulled(),i=function(e){return t.isVisibleForCamera(e)},a=this._font&&this._font.type===IA;if(this._material=this._system.getTextElementMaterial(e,a,this._enableMarkup),this._model)for(var s=0,r=this._model.meshInstances.length;s<r;s++){var o=this._model.meshInstances[s];o.cull=!e,o.material=this._material,o.screenSpace=e,n?(o.cull=!0,o.isVisibleFunc=i):o.isVisibleFunc=null}},t._updateMaterialEmissive=function(){this._symbolColors?(this._colorUniform[0]=1,this._colorUniform[1]=1,this._colorUniform[2]=1):(this._colorUniform[0]=this._color.r,this._colorUniform[1]=this._color.g,this._colorUniform[2]=this._color.b)},t._updateMaterialOutline=function(){this._symbolOutlineParams?(this._outlineColorUniform[0]=0,this._outlineColorUniform[1]=0,this._outlineColorUniform[2]=0,this._outlineColorUniform[3]=1):(this._outlineColorUniform[0]=this._outlineColor.r,this._outlineColorUniform[1]=this._outlineColor.g,this._outlineColorUniform[2]=this._outlineColor.b,this._outlineColorUniform[3]=this._outlineColor.a)},t._updateMaterialShadow=function(){this._symbolOutlineParams?(this._shadowColorUniform[0]=0,this._shadowColorUniform[1]=0,this._shadowColorUniform[2]=0,this._shadowColorUniform[3]=0):(this._shadowColorUniform[0]=this._shadowColor.r,this._shadowColorUniform[1]=this._shadowColor.g,this._shadowColorUniform[2]=this._shadowColor.b,this._shadowColorUniform[3]=this._shadowColor.a)},t._isWordBoundary=function(e){return nL.test(e)},t._isValidNextChar=function(e){return null!==e&&!sL.test(e)},t._isNextCJKBoundary=function(e,t){return aL.test(e)&&(nL.test(t)||iL.test(t))},t._isNextCJKWholeWord=function(e){return aL.test(e)},t._updateMeshes=function(){var e=this._font.data,t=this,n=Math.min(this._minFontSize,this._maxFontSize),i=this._maxFontSize,a=this._shouldAutoFit();a&&(this._fontSize=this._maxFontSize);var s=32,r=this._symbols.length,o=0,l=0,c=0,h=0,p=1,d=0,u=0,m=0,f=0,g=0,v=0,y=Math.abs(this._element.anchor.x-this._element.anchor.z)>=1e-4,_=this._element.calculatedWidth;(this.autoWidth&&!y||!this._wrapLines)&&(_=Number.POSITIVE_INFINITY);var w,b,x,C,S=0,E=0;function T(e,n,i){t._lineWidths.push(Math.abs(i));var a=m>n?n+1:m,s=m>n?m+1:n,r=e.slice(a,s);if(v)for(var c=r.length;c--&&v>0;)eL.test(r[c])&&(r.splice(c,1),v--);t._lineContents.push(r.join("")),o=0,l-=t._scaledLineHeight,p++,f=0,g=0,v=0,d=0,m=n}for(var A=!0;A;){A=!1,this._scaledLineHeight=a?this._lineHeight*this._fontSize/(this._maxFontSize||1e-4):this._lineHeight,this.width=0,this.height=0,this._lineWidths=[],this._lineContents=[],o=0,l=0,c=0,h=0,p=1,d=0,u=0,m=0,f=0,g=0,v=0;var L=this._fontSize/s;S=this._fontMinY*L,E=this._fontMaxY*L;for(var M=0;M<this._meshInfo.length;M++)this._meshInfo[M].quad=0,this._meshInfo[M].lines={};for(var P=255,O=255,I=255,R=65535,D=65535,k=0,F=65535,B=65535,N=32639,U=0;U<r;U++)if(w=this._symbols[U],C=U+1>=r?null:this._symbols[U+1],eL.test(w))v++,(!this._wrapLines||this._maxLines<0||p<this._maxLines)&&(T(this._symbols,U,h),u=U+1,m=U+1);else{var z=0,V=0,H=0,G=1,W=void 0;if(!(b=e.chars[w]))if(-1!==rL.indexOf(w))b=oL;else if(e.chars[" "])b=e.chars[" "];else for(var j in e.chars){b=e.chars[j];break}if(b){var X=0;if(g>0){var Y=this._font.data.kerning;if(Y){var q=Y[Ue.getCodePoint(this._symbols[U-1])||0];q&&(X=q[Ue.getCodePoint(this._symbols[U])||0]||0)}}W=b.scale||1,G=L*((b.width+b.height)/2)/W,H=(b.xadvance+X)*L,z=(b.xoffset-X)*L,V=b.yoffset*L}else console.error("Couldn't substitute missing character: '"+w+"'");var K=tL.test(w),Z=b&&b.map||0,Q=-this._font.data.info.maps[Z].width/this._font.data.info.maps[Z].height,J=this._meshInfo[Z],$=o+this._spacing*H;if($>_&&g>0&&!K&&(this._maxLines<0||p<this._maxLines)){if(0!==f){var ee=Math.max(U-u,0);if(this._meshInfo.length<=1)J.lines[p-1]-=ee,J.quad-=ee;else for(var te=U,ne=u;ne<te;ne++){var ie=this._symbols[ne],ae=e.chars[ie],se=this._meshInfo[ae&&ae.map||0];se.lines[p-1]-=1,se.quad-=1}U-=ee+1,T(this._symbols,u,d);continue}u=U,T(this._symbols,U,h)}x=J.quad,J.lines[p-1]=x;var re=o-z,oe=re+G,le=l-V,ce=le+G;if(this._rtl){var he=G-z-this._spacing*H-z;re-=he,oe-=he}J.positions[4*x*3+0]=re,J.positions[4*x*3+1]=le,J.positions[4*x*3+2]=c,J.positions[4*x*3+3]=oe,J.positions[4*x*3+4]=le,J.positions[4*x*3+5]=c,J.positions[4*x*3+6]=oe,J.positions[4*x*3+7]=ce,J.positions[4*x*3+8]=c,J.positions[4*x*3+9]=re,J.positions[4*x*3+10]=ce,J.positions[4*x*3+11]=c,this.width=Math.max(this.width,$);var pe=void 0;if(this._shouldAutoFitWidth()&&this.width>this._element.calculatedWidth&&(pe=Math.floor(this._element.fontSize*this._element.calculatedWidth/(this.width||1e-4)),(pe=at.clamp(pe,n,i))!==this._element.fontSize)){this._fontSize=pe,A=!0;break}if(this.height=Math.max(this.height,E-(l+S)),this._shouldAutoFitHeight()&&this.height>this._element.calculatedHeight&&(pe=at.clamp(this._fontSize-1,n,i))!==this._element.fontSize){this._fontSize=pe,A=!0;break}o+=this._spacing*H,K||(h=o),(this._isWordBoundary(w)||this._isValidNextChar(C)&&(this._isNextCJKBoundary(w,C)||this._isNextCJKWholeWord(C)))&&(f++,d=h,u=U+1),g++;var de=this._getUv(w);if(J.uvs[4*x*2+0]=de[0],J.uvs[4*x*2+1]=1-de[1],J.uvs[4*x*2+2]=de[2],J.uvs[4*x*2+3]=1-de[1],J.uvs[4*x*2+4]=de[2],J.uvs[4*x*2+5]=1-de[3],J.uvs[4*x*2+6]=de[0],J.uvs[4*x*2+7]=1-de[3],this._symbolColors){var ue=3*this._symbolColors[U];P=this._colorPalette[ue],O=this._colorPalette[ue+1],I=this._colorPalette[ue+2]}if(J.colors[4*x*4+0]=P,J.colors[4*x*4+1]=O,J.colors[4*x*4+2]=I,J.colors[4*x*4+3]=255,J.colors[4*x*4+4]=P,J.colors[4*x*4+5]=O,J.colors[4*x*4+6]=I,J.colors[4*x*4+7]=255,J.colors[4*x*4+8]=P,J.colors[4*x*4+9]=O,J.colors[4*x*4+10]=I,J.colors[4*x*4+11]=255,J.colors[4*x*4+12]=P,J.colors[4*x*4+13]=O,J.colors[4*x*4+14]=I,J.colors[4*x*4+15]=255,this._symbolOutlineParams){var me=5*this._symbolOutlineParams[U];R=this._outlinePalette[me]+256*this._outlinePalette[me+1],D=this._outlinePalette[me+2]+256*this._outlinePalette[me+3],k=this._outlinePalette[me+4]}if(J.outlines[4*x*3+0]=R,J.outlines[4*x*3+1]=D,J.outlines[4*x*3+2]=k,J.outlines[4*x*3+3]=R,J.outlines[4*x*3+4]=D,J.outlines[4*x*3+5]=k,J.outlines[4*x*3+6]=R,J.outlines[4*x*3+7]=D,J.outlines[4*x*3+8]=k,J.outlines[4*x*3+9]=R,J.outlines[4*x*3+10]=D,J.outlines[4*x*3+11]=k,this._symbolShadowParams){var fe=6*this._symbolShadowParams[U];F=this._shadowPalette[fe]+256*this._shadowPalette[fe+1],B=this._shadowPalette[fe+2]+256*this._shadowPalette[fe+3],N=this._shadowPalette[fe+4]+127+256*Math.round(Q*this._shadowPalette[fe+5]+127)}J.shadows[4*x*3+0]=F,J.shadows[4*x*3+1]=B,J.shadows[4*x*3+2]=N,J.shadows[4*x*3+3]=F,J.shadows[4*x*3+4]=B,J.shadows[4*x*3+5]=N,J.shadows[4*x*3+6]=F,J.shadows[4*x*3+7]=B,J.shadows[4*x*3+8]=N,J.shadows[4*x*3+9]=F,J.shadows[4*x*3+10]=B,J.shadows[4*x*3+11]=N,J.quad++}A||m<r&&T(this._symbols,r,o)}this._noResize=!0,this.autoWidth=this._autoWidth,this.autoHeight=this._autoHeight,this._noResize=!1;for(var ge=this._element.pivot.x,ve=this._element.pivot.y,ye=this._alignment.x,_e=this._alignment.y,we=0;we<this._meshInfo.length;we++)if(0!==this._meshInfo[we].count){var be=0;for(var xe in this._meshInfo[we].lines){for(var Ce=this._meshInfo[we].lines[xe],Se=this._lineWidths[parseInt(xe,10)],Ee=-ge*this._element.calculatedWidth+ye*(this._element.calculatedWidth-Se)*(this._rtl?-1:1),Te=(1-ve)*this._element.calculatedHeight-E-(1-_e)*(this._element.calculatedHeight-this.height),Ae=be;Ae<=Ce;Ae++)this._meshInfo[we].positions[4*Ae*3]+=Ee,this._meshInfo[we].positions[4*Ae*3+3]+=Ee,this._meshInfo[we].positions[4*Ae*3+6]+=Ee,this._meshInfo[we].positions[4*Ae*3+9]+=Ee,this._meshInfo[we].positions[4*Ae*3+1]+=Te,this._meshInfo[we].positions[4*Ae*3+4]+=Te,this._meshInfo[we].positions[4*Ae*3+7]+=Te,this._meshInfo[we].positions[4*Ae*3+10]+=Te;if(this._rtl)for(var Le=be;Le<=Ce;Le++){for(var Me=4*Le*3,Pe=0;Pe<4;++Pe)this._meshInfo[we].positions[Me+3*Pe]=this._element.calculatedWidth-this._meshInfo[we].positions[Me+3*Pe]+2*Ee;var Oe=this._meshInfo[we].positions[Me+3],Ie=this._meshInfo[we].positions[Me+6];this._meshInfo[we].positions[Me+3]=this._meshInfo[we].positions[Me+0],this._meshInfo[we].positions[Me+6]=this._meshInfo[we].positions[Me+9],this._meshInfo[we].positions[Me+0]=Oe,this._meshInfo[we].positions[Me+9]=Ie}be=Ce+1}for(var Re=4*this._meshInfo[we].count,De=4*this._meshInfo[we].quad,ke=new Cc(this._meshInfo[we].meshInstance.mesh.vertexBuffer),Fe=0;Fe<Re;Fe++)Fe>=De?(ke.element[Fi].set(0,0,0),ke.element[Gi].set(0,0),ke.element[Vi].set(0,0,0,0),ke.element[ra].set(0,0,0,0),ke.element[oa].set(0,0,0,0)):(ke.element[Fi].set(this._meshInfo[we].positions[3*Fe+0],this._meshInfo[we].positions[3*Fe+1],this._meshInfo[we].positions[3*Fe+2]),ke.element[Gi].set(this._meshInfo[we].uvs[2*Fe+0],this._meshInfo[we].uvs[2*Fe+1]),ke.element[Vi].set(this._meshInfo[we].colors[4*Fe+0],this._meshInfo[we].colors[4*Fe+1],this._meshInfo[we].colors[4*Fe+2],this._meshInfo[we].colors[4*Fe+3]),ke.element[ra].set(this._meshInfo[we].outlines[3*Fe+0],this._meshInfo[we].outlines[3*Fe+1],this._meshInfo[we].outlines[3*Fe+2]),ke.element[oa].set(this._meshInfo[we].shadows[3*Fe+0],this._meshInfo[we].shadows[3*Fe+1],this._meshInfo[we].shadows[3*Fe+2])),ke.next();ke.end(),this._meshInfo[we].meshInstance.mesh.aabb.compute(this._meshInfo[we].positions),this._meshInfo[we].meshInstance._aabbVer=-1}this._aabbDirty=!0},t._onFontRender=function(){this.font=this._font},t._onFontLoad=function(e){this.font!==e.resource&&(this.font=e.resource)},t._onFontChange=function(e,t,n,i){if("data"===t){this._font.data=n;for(var a=this._font.data.info.maps.length,s=0;s<a;s++)if(this._meshInfo[s]){var r=this._meshInfo[s].meshInstance;r&&(r.setParameter("font_sdfIntensity",this._font.intensity),r.setParameter("font_pxrange",this._getPxRange(this._font)),r.setParameter("font_textureWidth",this._font.data.info.maps[s].width))}}},t._onFontRemove=function(e){},t._setTextureParams=function(e,t){this._font&&(this._font.type===IA?(e.deleteParameter("texture_emissiveMap"),e.deleteParameter("texture_opacityMap"),e.setParameter("texture_msdfMap",t)):this._font.type===RA&&(e.deleteParameter("texture_msdfMap"),e.setParameter("texture_emissiveMap",t),e.setParameter("texture_opacityMap",t)))},t._getPxRange=function(e){for(var t=Object.keys(this._font.data.chars),n=0;n<t.length;n++){var i=this._font.data.chars[t[n]];if(i.range)return(i.scale||1)*i.range}return 2},t._getUv=function(e){var t=this._font.data;if(!t.chars[e]){var n=" ";return t.chars[n]?this._getUv(n):[0,0,0,0]}var i=t.chars[e].map,a=t.info.maps[i].width,s=t.info.maps[i].height,r=t.chars[e].x,o=t.chars[e].y,l=r,c=o,h=r+t.chars[e].width,p=o-t.chars[e].height,d=1-t.chars[e].height/s;return[l/a,d-c/s,h/a,d-p/s]},t.onEnable=function(){this._fontAsset.autoLoad=!0,this._model&&this._element.addModelToLayers(this._model)},t.onDisable=function(){this._fontAsset.autoLoad=!1,this._model&&this._element.removeModelFromLayers(this._model)},t._setStencil=function(e){if(this._model)for(var t=this._model.meshInstances,n=0;n<t.length;n++)t[n].stencilFront=e,t[n].stencilBack=e},t._shouldAutoFitWidth=function(){return this._autoFitWidth&&!this._autoWidth},t._shouldAutoFitHeight=function(){return this._autoFitHeight&&!this._autoHeight},t._shouldAutoFit=function(){return this._autoFitWidth&&!this._autoWidth||this._autoFitHeight&&!this._autoHeight},t._calculateCharsPerTexture=function(e){var t={};void 0===e&&(e=this._symbols.length);for(var n=0,i=e;n<i;n++){var a=this._symbols[n],s=this._font.data.chars[a];s||(s=this._font.data.chars[" "])||(s=this._font.data.chars[Object.keys(this._font.data.chars)[0]]);var r=s.map;t[r]?t[r]++:t[r]=1}return t},t._updateRenderRange=function(){for(var e=0===this._rangeStart?0:this._calculateCharsPerTexture(this._rangeStart),t=0===this._rangeEnd?0:this._calculateCharsPerTexture(this._rangeEnd),n=0,i=this._meshInfo.length;n<i;n++){var a=e[n]||0,s=t[n]||0,r=this._meshInfo[n].meshInstance;if(r){var o=r.mesh;o&&(o.primitive[0].base=3*a*2,o.primitive[0].count=3*(s-a)*2)}}},q(e,[{key:"text",get:function(){return this._text},set:function(e){this._i18nKey=null;var t=null!=e&&e.toString()||"";this._setText(t)}},{key:"key",get:function(){return this._i18nKey},set:function(e){var t=null!==e?e.toString():null;this._i18nKey!==t&&(this._i18nKey=t,t?(this._fontAsset.disableLocalization=!1,this._resetLocalizedText()):this._fontAsset.disableLocalization=!0)}},{key:"color",get:function(){return this._color},set:function(e){var t=e.r,n=e.g,i=e.b;if((this._color.r!==t||this._color.g!==n||this._color.b!==i)&&(this._color.r=t,this._color.g=n,this._color.b=i,this._model)){if(this._symbolColors)this._font&&this._updateText();else{this._colorUniform[0]=this._color.r,this._colorUniform[1]=this._color.g,this._colorUniform[2]=this._color.b;for(var a=0,s=this._model.meshInstances.length;a<s;a++)this._model.meshInstances[a].setParameter("material_emissive",this._colorUniform)}this._element&&this._element.fire("set:color",this._color)}}},{key:"opacity",get:function(){return this._color.a},set:function(e){if(this._color.a!==e&&(this._color.a=e,this._model))for(var t=0,n=this._model.meshInstances.length;t<n;t++)this._model.meshInstances[t].setParameter("material_opacity",e);this._element&&this._element.fire("set:opacity",e)}},{key:"lineHeight",get:function(){return this._lineHeight},set:function(e){var t=this._lineHeight;this._lineHeight=e,this._scaledLineHeight=e,t!==e&&this._font&&this._updateText()}},{key:"wrapLines",get:function(){return this._wrapLines},set:function(e){var t=this._wrapLines;this._wrapLines=e,t!==e&&this._font&&this._updateText()}},{key:"lines",get:function(){return this._lineContents}},{key:"spacing",get:function(){return this._spacing},set:function(e){var t=this._spacing;this._spacing=e,t!==e&&this._font&&this._updateText()}},{key:"fontSize",get:function(){return this._fontSize},set:function(e){var t=this._fontSize;this._fontSize=e,this._originalFontSize=e,t!==e&&this._font&&this._updateText()}},{key:"fontAsset",get:function(){return this._fontAsset.localizedAsset},set:function(e){this._fontAsset.defaultAsset=e}},{key:"font",get:function(){return this._font},set:function(e){var t;if(this._font&&(t=this._font.type,this._font.off&&this._font.off("render",this._onFontRender,this)),this._font=e,this._fontMinY=0,this._fontMaxY=0,e){var n=this._font.data;for(var i in n.chars){var a=n.chars[i];a.bounds&&(this._fontMinY=Math.min(this._fontMinY,a.bounds[1]),this._fontMaxY=Math.max(this._fontMaxY,a.bounds[3]))}if(this._font.on&&this._font.on("render",this._onFontRender,this),this._fontAsset.localizedAsset&&this._system.app.assets.get(this._fontAsset.localizedAsset).resource!==this._font&&(this._fontAsset.defaultAsset=null),e.type!==t){var s=this._element._isScreenSpace();this._updateMaterial(s)}for(var r=0,o=this._font.textures.length;r<o;r++)if(this._meshInfo[r]){var l=this._meshInfo[r].meshInstance;l&&(l.setParameter("font_sdfIntensity",this._font.intensity),l.setParameter("font_pxrange",this._getPxRange(this._font)),l.setParameter("font_textureWidth",this._font.data.info.maps[r].width),this._setTextureParams(l,this._font.textures[r]))}else this._meshInfo[r]=new JA;for(var c=!1,h=this._font.textures.length;h<this._meshInfo.length;h++)this._meshInfo[h].meshInstance&&(c||(this._element.removeModelFromLayers(this._model),c=!0),this._removeMeshInstance(this._meshInfo[h].meshInstance));this._meshInfo.length>this._font.textures.length&&(this._meshInfo.length=this._font.textures.length),this._updateText()}}},{key:"alignment",get:function(){return this._alignment},set:function(e){e instanceof ft?this._alignment.set(e.x,e.y):this._alignment.set(e[0],e[1]),this._font&&this._updateText()}},{key:"autoWidth",get:function(){return this._autoWidth},set:function(e){var t=this._autoWidth;if(this._autoWidth=e,e&&Math.abs(this._element.anchor.x-this._element.anchor.z)<1e-4&&(this._element.width=this.width),t!==e){var n=this._shouldAutoFit()?this._maxFontSize:this._originalFontSize;n!==this._fontSize&&(this._fontSize=n,this._font&&this._updateText())}}},{key:"autoHeight",get:function(){return this._autoHeight},set:function(e){var t=this._autoHeight;if(this._autoHeight=e,e&&Math.abs(this._element.anchor.y-this._element.anchor.w)<1e-4&&(this._element.height=this.height),t!==e){var n=this._shouldAutoFit()?this._maxFontSize:this._originalFontSize;n!==this._fontSize&&(this._fontSize=n,this._font&&this._updateText())}}},{key:"rtlReorder",get:function(){return this._rtlReorder},set:function(e){this._rtlReorder!==e&&(this._rtlReorder=e,this._font&&this._updateText())}},{key:"unicodeConverter",get:function(){return this._unicodeConverter},set:function(e){this._unicodeConverter!==e&&(this._unicodeConverter=e,this._setText(this._text))}},{key:"aabb",get:function(){if(this._aabbDirty){for(var e=!1,t=0;t<this._meshInfo.length;t++)this._meshInfo[t].meshInstance&&(e?this._aabb.add(this._meshInfo[t].meshInstance.aabb):(this._aabb.copy(this._meshInfo[t].meshInstance.aabb),e=!0));this._aabbDirty=!1}return this._aabb}},{key:"outlineColor",get:function(){return this._outlineColor},set:function(e){var t=e instanceof st?e.r:e[0],n=e instanceof st?e.g:e[1],i=e instanceof st?e.b:e[2],a=e instanceof st?e.a:e[3];if((this._outlineColor.r!==t||this._outlineColor.g!==n||this._outlineColor.b!==i||this._outlineColor.a!==a)&&(this._outlineColor.r=t,this._outlineColor.g=n,this._outlineColor.b=i,this._outlineColor.a=a,this._model)){if(this._symbolOutlineParams)this._font&&this._updateText();else{this._outlineColorUniform[0]=this._outlineColor.r,this._outlineColorUniform[1]=this._outlineColor.g,this._outlineColorUniform[2]=this._outlineColor.b,this._outlineColorUniform[3]=this._outlineColor.a;for(var s=0,r=this._model.meshInstances.length;s<r;s++)this._model.meshInstances[s].setParameter("outline_color",this._outlineColorUniform)}this._element&&this._element.fire("set:outline",this._color)}}},{key:"outlineThickness",get:function(){return this._outlineThickness},set:function(e){var t=this._outlineThickness;if(this._outlineThickness=e,t!==e&&this._font){if(!this._model)return;if(this._symbolOutlineParams)this._font&&this._updateText();else for(var n=0,i=this._model.meshInstances.length;n<i;n++)this._model.meshInstances[n].setParameter("outline_thickness",this._outlineThicknessScale*this._outlineThickness)}}},{key:"shadowColor",get:function(){return this._shadowColor},set:function(e){var t=e instanceof st?e.r:e[0],n=e instanceof st?e.g:e[1],i=e instanceof st?e.b:e[2],a=e instanceof st?e.a:e[3];if((this._shadowColor.r!==t||this._shadowColor.g!==n||this._shadowColor.b!==i||this._shadowColor.a!==a)&&(this._shadowColor.r=t,this._shadowColor.g=n,this._shadowColor.b=i,this._shadowColor.a=a,this._model))if(this._symbolShadowParams)this._font&&this._updateText();else{this._shadowColorUniform[0]=this._shadowColor.r,this._shadowColorUniform[1]=this._shadowColor.g,this._shadowColorUniform[2]=this._shadowColor.b,this._shadowColorUniform[3]=this._shadowColor.a;for(var s=0,r=this._model.meshInstances.length;s<r;s++)this._model.meshInstances[s].setParameter("shadow_color",this._shadowColorUniform)}}},{key:"shadowOffset",get:function(){return this._shadowOffset},set:function(e){var t=e instanceof ft?e.x:e[0],n=e instanceof ft?e.y:e[1];if((this._shadowOffset.x!==t||this._shadowOffset.y!==n)&&(this._shadowOffset.set(t,n),this._font&&this._model))if(this._symbolShadowParams)this._updateText();else for(var i=0,a=this._model.meshInstances.length;i<a;i++){var s=-this._font.data.info.maps[i].width/this._font.data.info.maps[i].height;this._shadowOffsetUniform[0]=this._shadowOffsetScale*this._shadowOffset.x,this._shadowOffsetUniform[1]=s*this._shadowOffsetScale*this._shadowOffset.y,this._model.meshInstances[i].setParameter("shadow_offset",this._shadowOffsetUniform)}}},{key:"minFontSize",get:function(){return this._minFontSize},set:function(e){this._minFontSize!==e&&(this._minFontSize=e,this.font&&this._shouldAutoFit()&&this._updateText())}},{key:"maxFontSize",get:function(){return this._maxFontSize},set:function(e){this._maxFontSize!==e&&(this._maxFontSize=e,this.font&&this._shouldAutoFit()&&this._updateText())}},{key:"autoFitWidth",get:function(){return this._autoFitWidth},set:function(e){this._autoFitWidth!==e&&(this._autoFitWidth=e,this._fontSize=this._shouldAutoFit()?this._maxFontSize:this._originalFontSize,this.font&&this._updateText())}},{key:"autoFitHeight",get:function(){return this._autoFitHeight},set:function(e){this._autoFitHeight!==e&&(this._autoFitHeight=e,this._fontSize=this._shouldAutoFit()?this._maxFontSize:this._originalFontSize,this.font&&this._updateText())}},{key:"maxLines",get:function(){return this._maxLines},set:function(e){this._maxLines!==e&&(null===e&&-1===this._maxLines||(this._maxLines=null===e?-1:e,this.font&&this._wrapLines&&this._updateText()))}},{key:"enableMarkup",get:function(){return this._enableMarkup},set:function(e){if(e=!!e,this._enableMarkup!==e){this._enableMarkup=e,this.font&&this._updateText();var t=this._element._isScreenSpace();this._updateMaterial(t)}}},{key:"symbols",get:function(){return this._symbols}},{key:"symbolColors",get:function(){return null===this._symbolColors?null:this._symbolColors.map((function(e){return this._colorPalette.slice(3*e,3*e+3)}),this)}},{key:"symbolOutlineParams",get:function(){return null===this._symbolOutlineParams?null:this._symbolOutlineParams.map((function(e){return this._outlinePalette.slice(5*e,5*e+5)}),this)}},{key:"symbolShadowParams",get:function(){return null===this._symbolShadowParams?null:this._symbolShadowParams.map((function(e){return this._shadowPalette.slice(6*e,6*e+6)}),this)}},{key:"rtl",get:function(){return this._rtl}},{key:"rangeStart",get:function(){return this._rangeStart},set:function(e){(e=Math.max(0,Math.min(e,this._symbols.length)))!==this._rangeStart&&(this._rangeStart=e,this._updateRenderRange())}},{key:"rangeEnd",get:function(){return this._rangeEnd},set:function(e){(e=Math.max(this._rangeStart,Math.min(e,this._symbols.length)))!==this._rangeEnd&&(this._rangeEnd=e,this._updateRenderRange())}}]),e}(),pL=new pt,dL=new St,uL=new pt,mL=new pt,fL=new St,gL=new St,vL=new St,yL=new St,_L=function(e){function t(t,n){var i;return(i=e.call(this,t,n)||this)._beingInitialized=!1,i._anchor=new vt,i._localAnchor=new vt,i._pivot=new ft,i._width=i._calculatedWidth=32,i._height=i._calculatedHeight=32,i._margin=new vt(0,0,-32,-32),i._modelTransform=new St,i._screenToWorld=new St,i._anchorTransform=new St,i._anchorDirty=!0,i._parentWorldTransform=new St,i._screenTransform=new St,i._screenCorners=[new pt,new pt,new pt,new pt],i._canvasCorners=[new ft,new ft,new ft,new ft],i._worldCorners=[new pt,new pt,new pt,new pt],i._cornersDirty=!0,i._canvasCornersDirty=!0,i._worldCornersDirty=!0,i.entity.on("insert",i._onInsert,J(i)),i._patch(),i.screen=null,i._type=pT,i._image=null,i._text=null,i._group=null,i._drawOrder=0,i._fitMode=mT,i._useInput=!1,i._layers=[Gu],i._addedModels=[],i._batchGroupId=-1,i._offsetReadAt=0,i._maskOffset=.5,i._maskedBy=null,i}Z(t,e);var n=t.prototype;return n._patch=function(){this.entity._sync=this._sync,this.entity.setPosition=this._setPosition,this.entity.setLocalPosition=this._setLocalPosition},n._unpatch=function(){this.entity._sync=gS.prototype._sync,this.entity.setPosition=gS.prototype.setPosition,this.entity.setLocalPosition=gS.prototype.setLocalPosition},n._setPosition=function(e,t,n){this.element.screen?(e instanceof pt?pL.copy(e):pL.set(e,t,n),this.getWorldTransform(),dL.copy(this.element._screenToWorld).invert(),dL.transformPoint(pL,this.localPosition),this._dirtyLocal||this._dirtifyLocal()):gS.prototype.setPosition.call(this,e,t,n)},n._setLocalPosition=function(e,t,n){e instanceof pt?this.localPosition.copy(e):this.localPosition.set(e,t,n);var i=this.element,a=this.localPosition,s=i._pivot;i._margin.x=a.x-i._calculatedWidth*s.x,i._margin.z=i._localAnchor.z-i._localAnchor.x-i._calculatedWidth-i._margin.x,i._margin.y=a.y-i._calculatedHeight*s.y,i._margin.w=i._localAnchor.w-i._localAnchor.y-i._calculatedHeight-i._margin.y,this._dirtyLocal||this._dirtifyLocal()},n._sync=function(){var e=this.element,t=e.screen;if(t){if(e._anchorDirty){var n=0,i=0,a=0,s=1;if(this._parent&&this._parent.element)n=this._parent.element.calculatedWidth,i=this._parent.element.calculatedHeight,a=this._parent.element.pivot.x,s=this._parent.element.pivot.y;else{var r=t.screen.resolution;n=r.x/t.screen.scale,i=r.y/t.screen.scale}e._anchorTransform.setTranslate(n*(e.anchor.x-a),-i*(s-e.anchor.y),0),e._anchorDirty=!1,e._calculateLocalAnchors()}e._sizeDirty&&e._calculateSize(!1,!1)}if(this._dirtyLocal){this.localTransform.setTRS(this.localPosition,this.localRotation,this.localScale);var o=this.localPosition,l=e._pivot;e._margin.x=o.x-e._calculatedWidth*l.x,e._margin.z=e._localAnchor.z-e._localAnchor.x-e._calculatedWidth-e._margin.x,e._margin.y=o.y-e._calculatedHeight*l.y,e._margin.w=e._localAnchor.w-e._localAnchor.y-e._calculatedHeight-e._margin.y,this._dirtyLocal=!1}if(!t)return this._dirtyWorld&&(e._cornersDirty=!0,e._canvasCornersDirty=!0,e._worldCornersDirty=!0),void gS.prototype._sync.call(this);if(this._dirtyWorld){if(null===this._parent)this.worldTransform.copy(this.localTransform);else if(this._parent.element?e._screenToWorld.mul2(this._parent.element._modelTransform,e._anchorTransform):e._screenToWorld.copy(e._anchorTransform),e._modelTransform.mul2(e._screenToWorld,this.localTransform),t){e._screenToWorld.mul2(t.screen._screenMatrix,e._screenToWorld),t.screen.screenSpace||e._screenToWorld.mul2(t.worldTransform,e._screenToWorld),this.worldTransform.mul2(e._screenToWorld,this.localTransform);var c=e._parentWorldTransform;c.setIdentity();var h=this._parent;h&&h.element&&h!==t&&(fL.setTRS(pt.ZERO,h.getLocalRotation(),h.getLocalScale()),c.mul2(h.element._parentWorldTransform,fL));var p=uL;p.set(0,0,this.localPosition.z);var d=mL;d.set(e._absLeft+e._pivot.x*e.calculatedWidth,e._absBottom+e._pivot.y*e.calculatedHeight,0),fL.setTranslate(-d.x,-d.y,-d.z),gL.setTRS(p,this.getLocalRotation(),this.getLocalScale()),vL.setTranslate(d.x,d.y,d.z),e._screenTransform.mul2(e._parentWorldTransform,vL).mul(gL).mul(fL),e._cornersDirty=!0,e._canvasCornersDirty=!0,e._worldCornersDirty=!0}else this.worldTransform.copy(e._modelTransform);this._dirtyWorld=!1}},n._onInsert=function(e){var t=this._parseUpToScreen();this.entity._dirtifyWorld(),this._updateScreen(t.screen),this._dirtifyMask()},n._dirtifyMask=function(){for(var e=this.entity;e;){var t=e.parent;if((null===t||t.screen)&&e.element){this.system._prerender&&this.system._prerender.length||(this.system._prerender=[],this.system.app.once("prerender",this._onPrerender,this));var n=this.system._prerender.indexOf(this.entity);n>=0&&this.system._prerender.splice(n,1),this.system._prerender.indexOf(e)<0&&this.system._prerender.push(e)}e=t}},n._onPrerender=function(){for(var e=0;e<this.system._prerender.length;e++){var t=this.system._prerender[e];if(t.element){var n=1;t.element.syncMask(n)}}this.system._prerender.length=0},n._bindScreen=function(e){e._bindElement(this)},n._unbindScreen=function(e){e._unbindElement(this)},n._updateScreen=function(e){this.screen&&this.screen!==e&&this._unbindScreen(this.screen.screen);var t=this.screen;this.screen=e,this.screen&&this._bindScreen(this.screen.screen),this._calculateSize(this._hasSplitAnchorsX,this._hasSplitAnchorsY),this.fire("set:screen",this.screen,t),this._anchorDirty=!0;for(var n=this.entity.children,i=0,a=n.length;i<a;i++)n[i].element&&n[i].element._updateScreen(e);this.screen&&this.screen.screen.syncDrawOrder()},n.syncMask=function(e){var t=this._parseUpToScreen();this._updateMask(t.mask,e)},n._setMaskedBy=function(e){var t=this._image||this._text;if(e){var n=e.element._image._maskRef;null==t||t._setStencil(new Nr({ref:n,func:Un})),this._maskedBy=e}else null==t||t._setStencil(null),this._maskedBy=null},n._updateMask=function(e,t){if(e){if(this._setMaskedBy(e),this.mask){var n=e.element._image._maskRef,i=new Nr({ref:n,func:Un,zpass:ya});this._image._setStencil(i),this._image._maskRef=t,t++,e=this.entity}for(var a=this.entity.children,s=0,r=a.length;s<r;s++){var o;null==(o=a[s].element)||o._updateMask(e,t)}this.mask&&t--}else{if(this._setMaskedBy(null),this.mask){var l=new Nr({ref:t,func:Wn,zpass:va});this._image._setStencil(l),this._image._maskRef=t,t++,e=this.entity}for(var c=this.entity.children,h=0,p=c.length;h<p;h++){var d;null==(d=c[h].element)||d._updateMask(e,t)}this.mask&&t--}},n._parseUpToScreen=function(){for(var e={screen:null,mask:null},t=this.entity._parent;t&&!t.screen;)t.element&&t.element.mask&&(e.mask||(e.mask=t)),t=t.parent;return t&&t.screen&&(e.screen=t),e},n._onScreenResize=function(e){this._anchorDirty=!0,this._cornersDirty=!0,this._worldCornersDirty=!0,this._calculateSize(this._hasSplitAnchorsX,this._hasSplitAnchorsY),this.fire("screen:set:resolution",e)},n._onScreenSpaceChange=function(){this.fire("screen:set:screenspace",this.screen.screen.screenSpace)},n._onScreenRemove=function(){this.screen&&(this.screen._destroying?this.screen=null:this._updateScreen(null))},n._calculateLocalAnchors=function(){var e=1e3,t=1e3,n=this.entity._parent;if(n&&n.element)e=n.element.calculatedWidth,t=n.element.calculatedHeight;else if(this.screen){var i=this.screen.screen.resolution,a=this.screen.screen.scale;e=i.x/a,t=i.y/a}this._localAnchor.set(this._anchor.x*e,this._anchor.y*t,this._anchor.z*e,this._anchor.w*t)},n.getOffsetPosition=function(e,t){var n=this.entity.getLocalPosition().clone();return n.x+=e,n.y+=t,this._screenToWorld.transformPoint(n,n),n},n.onLayersChanged=function(e,t){this.addModelToLayers(this._image?this._image._renderable.model:this._text._model),e.off("add",this.onLayerAdded,this),e.off("remove",this.onLayerRemoved,this),t.on("add",this.onLayerAdded,this),t.on("remove",this.onLayerRemoved,this)},n.onLayerAdded=function(e){this.layers.indexOf(e.id)<0||(this._image?e.addMeshInstances(this._image._renderable.model.meshInstances):this._text&&e.addMeshInstances(this._text._model.meshInstances))},n.onLayerRemoved=function(e){this.layers.indexOf(e.id)<0||(this._image?e.removeMeshInstances(this._image._renderable.model.meshInstances):this._text&&e.removeMeshInstances(this._text._model.meshInstances))},n.onEnable=function(){var e;this._image&&this._image.onEnable(),this._text&&this._text.onEnable(),this._group&&this._group.onEnable(),this.useInput&&this.system.app.elementInput&&this.system.app.elementInput.addElement(this),this.system.app.scene.on("set:layers",this.onLayersChanged,this),this.system.app.scene.layers&&(this.system.app.scene.layers.on("add",this.onLayerAdded,this),this.system.app.scene.layers.on("remove",this.onLayerRemoved,this)),this._batchGroupId>=0&&(null==(e=this.system.app.batcher)||e.insert(av.ELEMENT,this.batchGroupId,this.entity)),this.fire("enableelement")},n.onDisable=function(){var e;this.system.app.scene.off("set:layers",this.onLayersChanged,this),this.system.app.scene.layers&&(this.system.app.scene.layers.off("add",this.onLayerAdded,this),this.system.app.scene.layers.off("remove",this.onLayerRemoved,this)),this._image&&this._image.onDisable(),this._text&&this._text.onDisable(),this._group&&this._group.onDisable(),this.system.app.elementInput&&this.useInput&&this.system.app.elementInput.removeElement(this),this._batchGroupId>=0&&(null==(e=this.system.app.batcher)||e.remove(av.ELEMENT,this.batchGroupId,this.entity)),this.fire("disableelement")},n.onRemove=function(){this.entity.off("insert",this._onInsert,this),this._unpatch(),this._image&&this._image.destroy(),this._text&&this._text.destroy(),this.system.app.elementInput&&this.useInput&&this.system.app.elementInput.removeElement(this),this.screen&&this.screen.screen&&(this._unbindScreen(this.screen.screen),this.screen.screen.syncDrawOrder()),this.off()},n._calculateSize=function(e,t){if(this.entity._parent||this.screen){this._calculateLocalAnchors();var n=this._absRight-this._absLeft,i=this._absTop-this._absBottom;e?this._setWidth(n):this._setCalculatedWidth(n,!1),t?this._setHeight(i):this._setCalculatedHeight(i,!1);var a=this.entity.getLocalPosition();a.x=this._margin.x+this._calculatedWidth*this._pivot.x,a.y=this._margin.y+this._calculatedHeight*this._pivot.y,this.entity.setLocalPosition(a),this._sizeDirty=!1}},n._setWidth=function(e){this._width=e,this._setCalculatedWidth(e,!1),this.fire("set:width",this._width)},n._setHeight=function(e){this._height=e,this._setCalculatedHeight(e,!1),this.fire("set:height",this._height)},n._setCalculatedWidth=function(e,t){if(!(Math.abs(e-this._calculatedWidth)<=1e-4)){if(this._calculatedWidth=e,this.entity._dirtifyLocal(),t){var n=this.entity.getLocalPosition(),i=this._pivot;this._margin.x=n.x-this._calculatedWidth*i.x,this._margin.z=this._localAnchor.z-this._localAnchor.x-this._calculatedWidth-this._margin.x}this._flagChildrenAsDirty(),this.fire("set:calculatedWidth",this._calculatedWidth),this.fire("resize",this._calculatedWidth,this._calculatedHeight)}},n._setCalculatedHeight=function(e,t){if(!(Math.abs(e-this._calculatedHeight)<=1e-4)){if(this._calculatedHeight=e,this.entity._dirtifyLocal(),t){var n=this.entity.getLocalPosition(),i=this._pivot;this._margin.y=n.y-this._calculatedHeight*i.y,this._margin.w=this._localAnchor.w-this._localAnchor.y-this._calculatedHeight-this._margin.y}this._flagChildrenAsDirty(),this.fire("set:calculatedHeight",this._calculatedHeight),this.fire("resize",this._calculatedWidth,this._calculatedHeight)}},n._flagChildrenAsDirty=function(){for(var e=this.entity._children,t=0,n=e.length;t<n;t++)e[t].element&&(e[t].element._anchorDirty=!0,e[t].element._sizeDirty=!0)},n.addModelToLayers=function(e){this._addedModels.push(e);for(var t=0;t<this.layers.length;t++){var n=this.system.app.scene.layers.getLayerById(this.layers[t]);n&&n.addMeshInstances(e.meshInstances)}},n.removeModelFromLayers=function(e){var t=this._addedModels.indexOf(e);t>=0&&this._addedModels.splice(t,1);for(var n=0;n<this.layers.length;n++){var i=this.system.app.scene.layers.getLayerById(this.layers[n]);i&&i.removeMeshInstances(e.meshInstances)}},n.getMaskOffset=function(){var e=this.system.app.frame;this._offsetReadAt!==e&&(this._maskOffset=.5,this._offsetReadAt=e);var t=this._maskOffset;return this._maskOffset-=.001,t},n.isVisibleForCamera=function(e){var t,n,i,a;if(this.maskedBy){var s=this.maskedBy.element.screenCorners;t=Math.min(Math.min(s[0].x,s[1].x),Math.min(s[2].x,s[3].x)),n=Math.max(Math.max(s[0].x,s[1].x),Math.max(s[2].x,s[3].x)),a=Math.min(Math.min(s[0].y,s[1].y),Math.min(s[2].y,s[3].y)),i=Math.max(Math.max(s[0].y,s[1].y),Math.max(s[2].y,s[3].y))}else{var r=this.system.app.graphicsDevice.width,o=this.system.app.graphicsDevice.height,l=e._rect.z*r,c=e._rect.w*o;n=(t=e._rect.x*r)+l,a=(i=(1-e._rect.y)*o)-c}var h=this.screenCorners,p=Math.min(Math.min(h[0].x,h[1].x),Math.min(h[2].x,h[3].x)),d=Math.max(Math.max(h[0].x,h[1].x),Math.max(h[2].x,h[3].x)),u=Math.min(Math.min(h[0].y,h[1].y),Math.min(h[2].y,h[3].y)),m=Math.max(Math.max(h[0].y,h[1].y),Math.max(h[2].y,h[3].y));return!(d<t||p>n||u>i||m<a)},n._isScreenSpace=function(){return!(!this.screen||!this.screen.screen)&&this.screen.screen.screenSpace},n._isScreenCulled=function(){return!(!this.screen||!this.screen.screen)&&this.screen.screen.cull},n._dirtyBatch=function(){var e;-1!==this.batchGroupId&&(null==(e=this.system.app.batcher)||e.markGroupDirty(this.batchGroupId))},q(t,[{key:"_absLeft",get:function(){return this._localAnchor.x+this._margin.x}},{key:"_absRight",get:function(){return this._localAnchor.z-this._margin.z}},{key:"_absTop",get:function(){return this._localAnchor.w-this._margin.w}},{key:"_absBottom",get:function(){return this._localAnchor.y+this._margin.y}},{key:"_hasSplitAnchorsX",get:function(){return Math.abs(this._anchor.x-this._anchor.z)>.001}},{key:"_hasSplitAnchorsY",get:function(){return Math.abs(this._anchor.y-this._anchor.w)>.001}},{key:"aabb",get:function(){return this._image?this._image.aabb:this._text?this._text.aabb:null}},{key:"anchor",get:function(){return this._anchor},set:function(e){var t;e instanceof vt?this._anchor.copy(e):(t=this._anchor).set.apply(t,e),this.entity._parent||this.screen?this._calculateSize(this._hasSplitAnchorsX,this._hasSplitAnchorsY):this._calculateLocalAnchors(),this._anchorDirty=!0,this.entity._dirtyLocal||this.entity._dirtifyLocal(),this.fire("set:anchor",this._anchor)}},{key:"batchGroupId",get:function(){return this._batchGroupId},set:function(e){var t,n;this._batchGroupId!==e&&(this.entity.enabled&&this._batchGroupId>=0&&(null==(t=this.system.app.batcher)||t.remove(av.ELEMENT,this.batchGroupId,this.entity)),this.entity.enabled&&e>=0&&(null==(n=this.system.app.batcher)||n.insert(av.ELEMENT,e,this.entity)),e<0&&this._batchGroupId>=0&&this.enabled&&this.entity.enabled&&(this._image&&this._image._renderable.model?this.addModelToLayers(this._image._renderable.model):this._text&&this._text._model&&this.addModelToLayers(this._text._model)),this._batchGroupId=e)}},{key:"bottom",get:function(){return this._margin.y},set:function(e){this._margin.y=e;var t=this.entity.getLocalPosition(),n=this._absTop,i=this._localAnchor.y+e;this._setHeight(n-i),t.y=e+this._calculatedHeight*this._pivot.y,this.entity.setLocalPosition(t)}},{key:"calculatedWidth",get:function(){return this._calculatedWidth},set:function(e){this._setCalculatedWidth(e,!0)}},{key:"calculatedHeight",get:function(){return this._calculatedHeight},set:function(e){this._setCalculatedHeight(e,!0)}},{key:"canvasCorners",get:function(){if(!this._canvasCornersDirty||!this.screen||!this.screen.screen.screenSpace)return this._canvasCorners;for(var e=this.system.app.graphicsDevice,t=this.screenCorners,n=e.canvas.clientWidth/e.width,i=e.canvas.clientHeight/e.height,a=0;a<4;a++)this._canvasCorners[a].set(t[a].x*n,(e.height-t[a].y)*i);return this._canvasCornersDirty=!1,this._canvasCorners}},{key:"drawOrder",get:function(){return this._drawOrder},set:function(e){var t=0;this.screen&&(t=this.screen.screen.priority),e>16777215&&(e=16777215),this._drawOrder=(t<<24)+e,this.fire("set:draworder",this._drawOrder)}},{key:"height",get:function(){return this._height},set:function(e){this._height=e,this._hasSplitAnchorsY||this._setCalculatedHeight(e,!0),this.fire("set:height",this._height)}},{key:"layers",get:function(){return this._layers},set:function(e){if(this._addedModels.length)for(var t=0;t<this._layers.length;t++){var n=this.system.app.scene.layers.getLayerById(this._layers[t]);if(n)for(var i=0;i<this._addedModels.length;i++)n.removeMeshInstances(this._addedModels[i].meshInstances)}if(this._layers=e,this.enabled&&this.entity.enabled&&this._addedModels.length)for(var a=0;a<this._layers.length;a++){var s=this.system.app.scene.layers.getLayerById(this._layers[a]);if(s)for(var r=0;r<this._addedModels.length;r++)s.addMeshInstances(this._addedModels[r].meshInstances)}}},{key:"left",get:function(){return this._margin.x},set:function(e){this._margin.x=e;var t=this.entity.getLocalPosition(),n=this._absRight,i=this._localAnchor.x+e;this._setWidth(n-i),t.x=e+this._calculatedWidth*this._pivot.x,this.entity.setLocalPosition(t)}},{key:"margin",get:function(){return this._margin},set:function(e){this._margin.copy(e),this._calculateSize(!0,!0),this.fire("set:margin",this._margin)}},{key:"maskedBy",get:function(){return this._maskedBy}},{key:"pivot",get:function(){return this._pivot},set:function(e){var t=this.pivot,n=this.margin,i=t.x,a=t.y;e instanceof ft?t.copy(e):t.set.apply(t,e);var s=n.x+n.z,r=t.x-i;n.x+=s*r,n.z-=s*r;var o=n.y+n.w,l=t.y-a;n.y+=o*l,n.w-=o*l,this._anchorDirty=!0,this._cornersDirty=!0,this._worldCornersDirty=!0,this._calculateSize(!1,!1),this._flagChildrenAsDirty(),this.fire("set:pivot",t)}},{key:"right",get:function(){return this._margin.z},set:function(e){this._margin.z=e;var t=this.entity.getLocalPosition(),n=this._absLeft,i=this._localAnchor.z-e;this._setWidth(i-n),t.x=this._localAnchor.z-this._localAnchor.x-e-this._calculatedWidth*(1-this._pivot.x),this.entity.setLocalPosition(t)}},{key:"screenCorners",get:function(){if(!this._cornersDirty||!this.screen)return this._screenCorners;var e=this.entity.parent&&this.entity.parent.element&&this.entity.parent.element.screenCorners[0];this._screenCorners[0].set(this._absLeft,this._absBottom,0),this._screenCorners[1].set(this._absRight,this._absBottom,0),this._screenCorners[2].set(this._absRight,this._absTop,0),this._screenCorners[3].set(this._absLeft,this._absTop,0);for(var t=this.screen.screen.screenSpace,n=0;n<4;n++)this._screenTransform.transformPoint(this._screenCorners[n],this._screenCorners[n]),t&&this._screenCorners[n].mulScalar(this.screen.screen.scale),e&&this._screenCorners[n].add(e);return this._cornersDirty=!1,this._canvasCornersDirty=!0,this._worldCornersDirty=!0,this._screenCorners}},{key:"textWidth",get:function(){return this._text?this._text.width:0}},{key:"textHeight",get:function(){return this._text?this._text.height:0}},{key:"top",get:function(){return this._margin.w},set:function(e){this._margin.w=e;var t=this.entity.getLocalPosition(),n=this._absBottom,i=this._localAnchor.w-e;this._setHeight(i-n),t.y=this._localAnchor.w-this._localAnchor.y-e-this._calculatedHeight*(1-this._pivot.y),this.entity.setLocalPosition(t)}},{key:"type",get:function(){return this._type},set:function(e){e!==this._type&&(this._type=e,this._image&&(this._image.destroy(),this._image=null),this._text&&(this._text.destroy(),this._text=null),e===dT?this._image=new PA(this):e===uT&&(this._text=new hL(this)))}},{key:"useInput",get:function(){return this._useInput},set:function(e){this._useInput!==e&&(this._useInput=e,this.system.app.elementInput?e?this.enabled&&this.entity.enabled&&this.system.app.elementInput.addElement(this):this.system.app.elementInput.removeElement(this):this._useInput,this.fire("set:useInput",e))}},{key:"fitMode",get:function(){return this._fitMode},set:function(e){this._fitMode=e,this._calculateSize(!0,!0),this._image&&this._image.refreshMesh()}},{key:"width",get:function(){return this._width},set:function(e){this._width=e,this._hasSplitAnchorsX||this._setCalculatedWidth(e,!0),this.fire("set:width",this._width)}},{key:"worldCorners",get:function(){if(!this._worldCornersDirty)return this._worldCorners;if(this.screen){var e=this.screenCorners;if(!this.screen.screen.screenSpace){fL.copy(this.screen.screen._screenMatrix),fL.data[13]=-fL.data[13],fL.mul2(this.screen.getWorldTransform(),fL);for(var t=0;t<4;t++)fL.transformPoint(e[t],this._worldCorners[t])}}else{var n=this.entity.getLocalPosition();fL.setTranslate(-n.x,-n.y,-n.z),gL.setTRS(pt.ZERO,this.entity.getLocalRotation(),this.entity.getLocalScale()),vL.setTranslate(n.x,n.y,n.z);var i=this.entity.parent?this.entity.parent:this.entity;yL.copy(i.getWorldTransform()),yL.mul(vL).mul(gL).mul(fL),uL.set(n.x-this.pivot.x*this.calculatedWidth,n.y-this.pivot.y*this.calculatedHeight,n.z),yL.transformPoint(uL,this._worldCorners[0]),uL.set(n.x+(1-this.pivot.x)*this.calculatedWidth,n.y-this.pivot.y*this.calculatedHeight,n.z),yL.transformPoint(uL,this._worldCorners[1]),uL.set(n.x+(1-this.pivot.x)*this.calculatedWidth,n.y+(1-this.pivot.y)*this.calculatedHeight,n.z),yL.transformPoint(uL,this._worldCorners[2]),uL.set(n.x-this.pivot.x*this.calculatedWidth,n.y+(1-this.pivot.y)*this.calculatedHeight,n.z),yL.transformPoint(uL,this._worldCorners[3])}return this._worldCornersDirty=!1,this._worldCorners}}]),t}(zS);function wL(e){Object.defineProperty(_L.prototype,e,{get:function(){return this._text?this._text[e]:this._image?this._image[e]:null},set:function(t){this._text?(this._text[e]!==t&&this._dirtyBatch(),this._text[e]=t):this._image&&(this._image[e]!==t&&this._dirtyBatch(),this._image[e]=t)}})}wL("fontSize"),wL("minFontSize"),wL("maxFontSize"),wL("maxLines"),wL("autoFitWidth"),wL("autoFitHeight"),wL("color"),wL("font"),wL("fontAsset"),wL("spacing"),wL("lineHeight"),wL("wrapLines"),wL("lines"),wL("alignment"),wL("autoWidth"),wL("autoHeight"),wL("rtlReorder"),wL("unicodeConverter"),wL("text"),wL("key"),wL("texture"),wL("textureAsset"),wL("material"),wL("materialAsset"),wL("sprite"),wL("spriteAsset"),wL("spriteFrame"),wL("pixelsPerUnit"),wL("opacity"),wL("rect"),wL("mask"),wL("outlineColor"),wL("outlineThickness"),wL("shadowColor"),wL("shadowOffset"),wL("enableMarkup"),wL("rangeStart"),wL("rangeEnd");var bL=function(){this.enabled=!0},xL=["enabled"],CL=function(e){function t(t){var n;(n=e.call(this,t)||this).id="element",n.ComponentType=_L,n.DataType=bL,n.schema=xL,n._unicodeConverter=null,n._rtlReorder=null,n._defaultTexture=new vl(t.graphicsDevice,{width:1,height:1,format:ti,name:"element-system"});var i=n._defaultTexture.lock(),a=new Uint8Array(4);return a[0]=255,a[1]=255,a[2]=255,a[3]=255,i.set(a),n._defaultTexture.unlock(),n.defaultImageMaterial=null,n.defaultImage9SlicedMaterial=null,n.defaultImage9TiledMaterial=null,n.defaultImageMaskMaterial=null,n.defaultImage9SlicedMaskMaterial=null,n.defaultImage9TiledMaskMaterial=null,n.defaultScreenSpaceImageMaterial=null,n.defaultScreenSpaceImage9SlicedMaterial=null,n.defaultScreenSpaceImage9TiledMaterial=null,n.defaultScreenSpaceImageMask9SlicedMaterial=null,n.defaultScreenSpaceImageMask9TiledMaterial=null,n.defaultScreenSpaceImageMaskMaterial=null,n._defaultTextMaterials={},n.defaultImageMaterials=[],n.on("beforeremove",n.onRemoveComponent,J(n)),n}Z(t,e);var n=t.prototype;return n.destroy=function(){e.prototype.destroy.call(this),this._defaultTexture.destroy()},n.initializeComponentData=function(t,n,i){t._beingInitialized=!0,void 0!==n.anchor&&(n.anchor instanceof vt?t.anchor.copy(n.anchor):t.anchor.set(n.anchor[0],n.anchor[1],n.anchor[2],n.anchor[3])),void 0!==n.pivot&&(n.pivot instanceof ft?t.pivot.copy(n.pivot):t.pivot.set(n.pivot[0],n.pivot[1]));var a,s=Math.abs(t.anchor.x-t.anchor.z)>.001,r=Math.abs(t.anchor.y-t.anchor.w)>.001,o=!1;void 0!==n.margin&&(n.margin instanceof vt?t.margin.copy(n.margin):t._margin.set(n.margin[0],n.margin[1],n.margin[2],n.margin[3]),o=!0),void 0!==n.left&&(t._margin.x=n.left,o=!0),void 0!==n.bottom&&(t._margin.y=n.bottom,o=!0),void 0!==n.right&&(t._margin.z=n.right,o=!0),void 0!==n.top&&(t._margin.w=n.top,o=!0),o&&(t.margin=t._margin);var l=!1;void 0===n.width||s?s&&(l=!0):t.width=n.width,void 0===n.height||r?r&&(l=!0):t.height=n.height,l&&(t.anchor=t.anchor),void 0!==n.enabled&&(t.enabled=n.enabled),void 0!==n.useInput&&(t.useInput=n.useInput),void 0!==n.fitMode&&(t.fitMode=n.fitMode),t.batchGroupId=void 0===n.batchGroupId||null===n.batchGroupId?-1:n.batchGroupId,n.layers&&Array.isArray(n.layers)&&(t.layers=n.layers.slice(0)),void 0!==n.type&&(t.type=n.type),t.type===dT?(void 0!==n.rect&&(t.rect=n.rect),void 0!==n.color&&((a=n.color)instanceof st||(a=new st(n.color[0],n.color[1],n.color[2])),t.color=a),void 0!==n.opacity&&(t.opacity=n.opacity),void 0!==n.textureAsset&&(t.textureAsset=n.textureAsset),n.texture&&(t.texture=n.texture),void 0!==n.spriteAsset&&(t.spriteAsset=n.spriteAsset),n.sprite&&(t.sprite=n.sprite),void 0!==n.spriteFrame&&(t.spriteFrame=n.spriteFrame),void 0!==n.pixelsPerUnit&&null!==n.pixelsPerUnit&&(t.pixelsPerUnit=n.pixelsPerUnit),void 0!==n.materialAsset&&(t.materialAsset=n.materialAsset),n.material&&(t.material=n.material),void 0!==n.mask&&(t.mask=n.mask)):t.type===uT&&(void 0!==n.autoWidth&&(t.autoWidth=n.autoWidth),void 0!==n.autoHeight&&(t.autoHeight=n.autoHeight),void 0!==n.rtlReorder&&(t.rtlReorder=n.rtlReorder),void 0!==n.unicodeConverter&&(t.unicodeConverter=n.unicodeConverter),null!==n.text&&void 0!==n.text?t.text=n.text:null!==n.key&&void 0!==n.key&&(t.key=n.key),void 0!==n.color&&((a=n.color)instanceof st||(a=new st(a[0],a[1],a[2])),t.color=a),void 0!==n.opacity&&(t.opacity=n.opacity),void 0!==n.spacing&&(t.spacing=n.spacing),void 0!==n.fontSize&&(t.fontSize=n.fontSize,n.lineHeight||(t.lineHeight=n.fontSize)),void 0!==n.lineHeight&&(t.lineHeight=n.lineHeight),void 0!==n.maxLines&&(t.maxLines=n.maxLines),void 0!==n.wrapLines&&(t.wrapLines=n.wrapLines),void 0!==n.minFontSize&&(t.minFontSize=n.minFontSize),void 0!==n.maxFontSize&&(t.maxFontSize=n.maxFontSize),n.autoFitWidth&&(t.autoFitWidth=n.autoFitWidth),n.autoFitHeight&&(t.autoFitHeight=n.autoFitHeight),void 0!==n.fontAsset&&(t.fontAsset=n.fontAsset),void 0!==n.font&&(t.font=n.font),void 0!==n.alignment&&(t.alignment=n.alignment),void 0!==n.outlineColor&&(t.outlineColor=n.outlineColor),void 0!==n.outlineThickness&&(t.outlineThickness=n.outlineThickness),void 0!==n.shadowColor&&(t.shadowColor=n.shadowColor),void 0!==n.shadowOffset&&(t.shadowOffset=n.shadowOffset),void 0!==n.enableMarkup&&(t.enableMarkup=n.enableMarkup));var c=t._parseUpToScreen();c.screen&&t._updateScreen(c.screen),e.prototype.initializeComponentData.call(this,t,n,i),t._beingInitialized=!1,t.type===dT&&t._image._meshDirty&&t._image._updateMesh(t._image.mesh)},n.onRemoveComponent=function(e,t){t.onRemove()},n.cloneComponent=function(e,t){var n=e.element,i={enabled:n.enabled,width:n.width,height:n.height,anchor:n.anchor.clone(),pivot:n.pivot.clone(),margin:n.margin.clone(),alignment:n.alignment&&n.alignment.clone()||n.alignment,autoWidth:n.autoWidth,autoHeight:n.autoHeight,type:n.type,rect:n.rect&&n.rect.clone()||n.rect,rtlReorder:n.rtlReorder,unicodeConverter:n.unicodeConverter,materialAsset:n.materialAsset,material:n.material,color:n.color&&n.color.clone()||n.color,opacity:n.opacity,textureAsset:n.textureAsset,texture:n.texture,spriteAsset:n.spriteAsset,sprite:n.sprite,spriteFrame:n.spriteFrame,pixelsPerUnit:n.pixelsPerUnit,spacing:n.spacing,lineHeight:n.lineHeight,wrapLines:n.wrapLines,layers:n.layers,fontSize:n.fontSize,minFontSize:n.minFontSize,maxFontSize:n.maxFontSize,autoFitWidth:n.autoFitWidth,autoFitHeight:n.autoFitHeight,maxLines:n.maxLines,fontAsset:n.fontAsset,font:n.font,useInput:n.useInput,fitMode:n.fitMode,batchGroupId:n.batchGroupId,mask:n.mask,outlineColor:n.outlineColor&&n.outlineColor.clone()||n.outlineColor,outlineThickness:n.outlineThickness,shadowColor:n.shadowColor&&n.shadowColor.clone()||n.shadowColor,shadowOffset:n.shadowOffset&&n.shadowOffset.clone()||n.shadowOffset,enableMarkup:n.enableMarkup};return void 0!==n.key&&null!==n.key?i.key=n.key:i.text=n.text,this.addComponent(t,i)},n.getTextElementMaterial=function(e,t,n){var i=(e&&1)|(t&&2)|(n&&4),a=this._defaultTextMaterials[i];if(a)return a;var s="TextMaterial";return a=new zw,t?(a.msdfMap=this._defaultTexture,a.msdfTextAttribute=n,a.emissive.set(1,1,1)):(s="Bitmap"+s,a.emissive.set(.5,.5,.5),a.emissiveMap=this._defaultTexture,a.emissiveTint=!0,a.opacityMap=this._defaultTexture,a.opacityMapChannel="a"),e&&(s="ScreenSpace"+s,a.depthTest=!1),a.name="default"+s,a.useLighting=!1,a.useGammaTonemap=!1,a.useFog=!1,a.useSkybox=!1,a.diffuse.set(0,0,0),a.opacity=.5,a.blendType=xu,a.depthWrite=!1,a.emissiveVertexColor=!0,a.update(),this._defaultTextMaterials[i]=a,a},n._createBaseImageMaterial=function(){var e=new zw;return e.diffuse.set(0,0,0),e.emissive.set(.5,.5,.5),e.emissiveMap=this._defaultTexture,e.emissiveTint=!0,e.opacityMap=this._defaultTexture,e.opacityMapChannel="a",e.opacityTint=!0,e.opacity=0,e.useLighting=!1,e.useGammaTonemap=!1,e.useFog=!1,e.useSkybox=!1,e.blendType=xu,e.depthWrite=!1,e},n.getImageElementMaterial=function(e,t,n,i){return e?t?n?(this.defaultScreenSpaceImageMask9SlicedMaterial||(this.defaultScreenSpaceImageMask9SlicedMaterial=this._createBaseImageMaterial(),this.defaultScreenSpaceImageMask9SlicedMaterial.name="defaultScreenSpaceImageMask9SlicedMaterial",this.defaultScreenSpaceImageMask9SlicedMaterial.nineSlicedMode=Uf,this.defaultScreenSpaceImageMask9SlicedMaterial.depthTest=!1,this.defaultScreenSpaceImageMask9SlicedMaterial.alphaTest=1,this.defaultScreenSpaceImageMask9SlicedMaterial.redWrite=!1,this.defaultScreenSpaceImageMask9SlicedMaterial.greenWrite=!1,this.defaultScreenSpaceImageMask9SlicedMaterial.blueWrite=!1,this.defaultScreenSpaceImageMask9SlicedMaterial.alphaWrite=!1,this.defaultScreenSpaceImageMask9SlicedMaterial.update(),this.defaultImageMaterials.push(this.defaultScreenSpaceImageMask9SlicedMaterial)),this.defaultScreenSpaceImageMask9SlicedMaterial):i?(this.defaultScreenSpaceImageMask9TiledMaterial||(this.defaultScreenSpaceImageMask9TiledMaterial=this.defaultScreenSpaceImage9TiledMaterial.clone(),this.defaultScreenSpaceImageMask9TiledMaterial.name="defaultScreenSpaceImageMask9TiledMaterial",this.defaultScreenSpaceImageMask9TiledMaterial.nineSlicedMode=zf,this.defaultScreenSpaceImageMask9TiledMaterial.depthTest=!1,this.defaultScreenSpaceImageMask9TiledMaterial.alphaTest=1,this.defaultScreenSpaceImageMask9TiledMaterial.redWrite=!1,this.defaultScreenSpaceImageMask9TiledMaterial.greenWrite=!1,this.defaultScreenSpaceImageMask9TiledMaterial.blueWrite=!1,this.defaultScreenSpaceImageMask9TiledMaterial.alphaWrite=!1,this.defaultScreenSpaceImageMask9TiledMaterial.update(),this.defaultImageMaterials.push(this.defaultScreenSpaceImageMask9TiledMaterial)),this.defaultScreenSpaceImageMask9TiledMaterial):(this.defaultScreenSpaceImageMaskMaterial||(this.defaultScreenSpaceImageMaskMaterial=this._createBaseImageMaterial(),this.defaultScreenSpaceImageMaskMaterial.name="defaultScreenSpaceImageMaskMaterial",this.defaultScreenSpaceImageMaskMaterial.depthTest=!1,this.defaultScreenSpaceImageMaskMaterial.alphaTest=1,this.defaultScreenSpaceImageMaskMaterial.redWrite=!1,this.defaultScreenSpaceImageMaskMaterial.greenWrite=!1,this.defaultScreenSpaceImageMaskMaterial.blueWrite=!1,this.defaultScreenSpaceImageMaskMaterial.alphaWrite=!1,this.defaultScreenSpaceImageMaskMaterial.update(),this.defaultImageMaterials.push(this.defaultScreenSpaceImageMaskMaterial)),this.defaultScreenSpaceImageMaskMaterial):n?(this.defaultScreenSpaceImage9SlicedMaterial||(this.defaultScreenSpaceImage9SlicedMaterial=this._createBaseImageMaterial(),this.defaultScreenSpaceImage9SlicedMaterial.name="defaultScreenSpaceImage9SlicedMaterial",this.defaultScreenSpaceImage9SlicedMaterial.nineSlicedMode=Uf,this.defaultScreenSpaceImage9SlicedMaterial.depthTest=!1,this.defaultScreenSpaceImage9SlicedMaterial.update(),this.defaultImageMaterials.push(this.defaultScreenSpaceImage9SlicedMaterial)),this.defaultScreenSpaceImage9SlicedMaterial):i?(this.defaultScreenSpaceImage9TiledMaterial||(this.defaultScreenSpaceImage9TiledMaterial=this._createBaseImageMaterial(),this.defaultScreenSpaceImage9TiledMaterial.name="defaultScreenSpaceImage9TiledMaterial",this.defaultScreenSpaceImage9TiledMaterial.nineSlicedMode=zf,this.defaultScreenSpaceImage9TiledMaterial.depthTest=!1,this.defaultScreenSpaceImage9TiledMaterial.update(),this.defaultImageMaterials.push(this.defaultScreenSpaceImage9TiledMaterial)),this.defaultScreenSpaceImage9TiledMaterial):(this.defaultScreenSpaceImageMaterial||(this.defaultScreenSpaceImageMaterial=this._createBaseImageMaterial(),this.defaultScreenSpaceImageMaterial.name="defaultScreenSpaceImageMaterial",this.defaultScreenSpaceImageMaterial.depthTest=!1,this.defaultScreenSpaceImageMaterial.update(),this.defaultImageMaterials.push(this.defaultScreenSpaceImageMaterial)),this.defaultScreenSpaceImageMaterial):t?n?(this.defaultImage9SlicedMaskMaterial||(this.defaultImage9SlicedMaskMaterial=this._createBaseImageMaterial(),this.defaultImage9SlicedMaskMaterial.name="defaultImage9SlicedMaskMaterial",this.defaultImage9SlicedMaskMaterial.nineSlicedMode=Uf,this.defaultImage9SlicedMaskMaterial.alphaTest=1,this.defaultImage9SlicedMaskMaterial.redWrite=!1,this.defaultImage9SlicedMaskMaterial.greenWrite=!1,this.defaultImage9SlicedMaskMaterial.blueWrite=!1,this.defaultImage9SlicedMaskMaterial.alphaWrite=!1,this.defaultImage9SlicedMaskMaterial.update(),this.defaultImageMaterials.push(this.defaultImage9SlicedMaskMaterial)),this.defaultImage9SlicedMaskMaterial):i?(this.defaultImage9TiledMaskMaterial||(this.defaultImage9TiledMaskMaterial=this._createBaseImageMaterial(),this.defaultImage9TiledMaskMaterial.name="defaultImage9TiledMaskMaterial",this.defaultImage9TiledMaskMaterial.nineSlicedMode=zf,this.defaultImage9TiledMaskMaterial.alphaTest=1,this.defaultImage9TiledMaskMaterial.redWrite=!1,this.defaultImage9TiledMaskMaterial.greenWrite=!1,this.defaultImage9TiledMaskMaterial.blueWrite=!1,this.defaultImage9TiledMaskMaterial.alphaWrite=!1,this.defaultImage9TiledMaskMaterial.update(),this.defaultImageMaterials.push(this.defaultImage9TiledMaskMaterial)),this.defaultImage9TiledMaskMaterial):(this.defaultImageMaskMaterial||(this.defaultImageMaskMaterial=this._createBaseImageMaterial(),this.defaultImageMaskMaterial.name="defaultImageMaskMaterial",this.defaultImageMaskMaterial.alphaTest=1,this.defaultImageMaskMaterial.redWrite=!1,this.defaultImageMaskMaterial.greenWrite=!1,this.defaultImageMaskMaterial.blueWrite=!1,this.defaultImageMaskMaterial.alphaWrite=!1,this.defaultImageMaskMaterial.update(),this.defaultImageMaterials.push(this.defaultImageMaskMaterial)),this.defaultImageMaskMaterial):n?(this.defaultImage9SlicedMaterial||(this.defaultImage9SlicedMaterial=this._createBaseImageMaterial(),this.defaultImage9SlicedMaterial.name="defaultImage9SlicedMaterial",this.defaultImage9SlicedMaterial.nineSlicedMode=Uf,this.defaultImage9SlicedMaterial.update(),this.defaultImageMaterials.push(this.defaultImage9SlicedMaterial)),this.defaultImage9SlicedMaterial):i?(this.defaultImage9TiledMaterial||(this.defaultImage9TiledMaterial=this._createBaseImageMaterial(),this.defaultImage9TiledMaterial.name="defaultImage9TiledMaterial",this.defaultImage9TiledMaterial.nineSlicedMode=zf,this.defaultImage9TiledMaterial.update(),this.defaultImageMaterials.push(this.defaultImage9TiledMaterial)),this.defaultImage9TiledMaterial):(this.defaultImageMaterial||(this.defaultImageMaterial=this._createBaseImageMaterial(),this.defaultImageMaterial.name="defaultImageMaterial",this.defaultImageMaterial.update(),this.defaultImageMaterials.push(this.defaultImageMaterial)),this.defaultImageMaterial)},n.registerUnicodeConverter=function(e){this._unicodeConverter=e},n.registerRtlReorder=function(e){this._rtlReorder=e},n.getUnicodeConverter=function(){return this._unicodeConverter},n.getRtlReorder=function(){return this._rtlReorder},t}(VS);zS._buildAccessors(_L.prototype,xL);var SL="free",EL="limited",TL="locked",AL=["angularDampingX","angularDampingY","angularDampingZ","angularEquilibriumX","angularEquilibriumY","angularEquilibriumZ","angularLimitsX","angularLimitsY","angularLimitsZ","angularMotionX","angularMotionY","angularMotionZ","angularSpringX","angularSpringY","angularSpringZ","angularStiffnessX","angularStiffnessY","angularStiffnessZ","breakForce","enableCollision","enabled","entityA","entityB","linearDampingX","linearDampingY","linearDampingZ","linearEquilibriumX","linearEquilibriumY","linearEquilibriumZ","linearLimitsX","linearLimitsY","linearLimitsZ","linearMotionX","linearMotionY","linearMotionZ","linearSpringX","linearSpringY","linearSpringZ","linearStiffnessX","linearStiffnessY","linearStiffnessZ"],LL=function(e){function t(t,n){var i;return(i=e.call(this,t,n)||this)._constraint=null,i._entityA=null,i._entityB=null,i._breakForce=34e37,i._enableCollision=!0,i._linearMotionX=TL,i._linearLimitsX=new ft(0,0),i._linearSpringX=!1,i._linearStiffnessX=0,i._linearDampingX=1,i._linearEquilibriumX=0,i._linearMotionY=TL,i._linearLimitsY=new ft(0,0),i._linearSpringY=!1,i._linearStiffnessY=0,i._linearDampingY=1,i._linearEquilibriumY=0,i._linearMotionZ=TL,i._linearLimitsZ=new ft(0,0),i._linearSpringZ=!1,i._linearStiffnessZ=0,i._linearDampingZ=1,i._linearEquilibriumZ=0,i._angularMotionX=TL,i._angularLimitsX=new ft(0,0),i._angularSpringX=!1,i._angularStiffnessX=0,i._angularDampingX=1,i._angularEquilibriumX=0,i._angularMotionY=TL,i._angularLimitsY=new ft(0,0),i._angularSpringY=!1,i._angularStiffnessY=0,i._angularDampingY=1,i._angularEquilibriumY=0,i._angularMotionZ=TL,i._angularLimitsZ=new ft(0,0),i._angularSpringZ=!1,i._angularEquilibriumZ=0,i._angularDampingZ=1,i._angularStiffnessZ=0,i.on("set_enabled",i._onSetEnabled,J(i)),i}Z(t,e);var n=t.prototype;return n._convertTransform=function(e,t){var n=e.getTranslation(),i=new Et;i.setFromMat4(e);var a=new Ammo.btVector3(n.x,n.y,n.z),s=new Ammo.btQuaternion(i.x,i.y,i.z,i.w);t.setOrigin(a),t.setRotation(s),Ammo.destroy(a),Ammo.destroy(s)},n._updateAngularLimits=function(){var e=this._constraint;if(e){var t,n,i,a,s,r;this._angularMotionX===EL?(t=this._angularLimitsX.x*at.DEG_TO_RAD,a=this._angularLimitsX.y*at.DEG_TO_RAD):this._angularMotionX===SL?(t=1,a=0):t=a=0,this._angularMotionY===EL?(n=this._angularLimitsY.x*at.DEG_TO_RAD,s=this._angularLimitsY.y*at.DEG_TO_RAD):this._angularMotionY===SL?(n=1,s=0):n=s=0,this._angularMotionZ===EL?(i=this._angularLimitsZ.x*at.DEG_TO_RAD,r=this._angularLimitsZ.y*at.DEG_TO_RAD):this._angularMotionZ===SL?(i=1,r=0):i=r=0;var o=new Ammo.btVector3(t,n,i);e.setAngularLowerLimit(o),o.setValue(a,s,r),e.setAngularUpperLimit(o),Ammo.destroy(o)}},n._updateLinearLimits=function(){var e=this._constraint;if(e){var t,n,i,a,s,r;this._linearMotionX===EL?(t=this._linearLimitsX.x,a=this._linearLimitsX.y):this._linearMotionX===SL?(t=1,a=0):t=a=0,this._linearMotionY===EL?(n=this._linearLimitsY.x,s=this._linearLimitsY.y):this._linearMotionY===SL?(n=1,s=0):n=s=0,this._linearMotionZ===EL?(i=this._linearLimitsZ.x,r=this._linearLimitsZ.y):this._linearMotionZ===SL?(i=1,r=0):i=r=0;var o=new Ammo.btVector3(t,n,i);e.setLinearLowerLimit(o),o.setValue(a,s,r),e.setLinearUpperLimit(o),Ammo.destroy(o)}},n._createConstraint=function(){if(this._entityA&&this._entityA.rigidbody){this._destroyConstraint();var e=new St,t=this._entityA.rigidbody.body;t.activate();var n=this.entity.getWorldTransform(),i=this._entityA.getWorldTransform().clone().invert();e.mul2(i,n);var a=new Ammo.btTransform;if(this._convertTransform(e,a),this._entityB&&this._entityB.rigidbody){var s=this._entityB.rigidbody.body;s.activate();var r=this._entityB.getWorldTransform().clone().invert();e.mul2(r,n);var o=new Ammo.btTransform;this._convertTransform(e,o),this._constraint=new Ammo.btGeneric6DofSpringConstraint(t,s,a,o,!this._enableCollision),Ammo.destroy(o)}else this._constraint=new Ammo.btGeneric6DofSpringConstraint(t,a,!this._enableCollision);Ammo.destroy(a);for(var l=["X","Y","Z","X","Y","Z"],c=0;c<6;c++){var h=c<3?"_linear":"_angular";this._constraint.enableSpring(c,this[h+"Spring"+l[c]]),this._constraint.setDamping(c,this[h+"Damping"+l[c]]),this._constraint.setEquilibriumPoint(c,this[h+"Equilibrium"+l[c]]),this._constraint.setStiffness(c,this[h+"Stiffness"+l[c]])}this._constraint.setBreakingImpulseThreshold(this._breakForce),this._updateLinearLimits(),this._updateAngularLimits(),this.system.app.systems.rigidbody.dynamicsWorld.addConstraint(this._constraint,!this._enableCollision)}},n._destroyConstraint=function(){this._constraint&&(this.system.app.systems.rigidbody.dynamicsWorld.removeConstraint(this._constraint),Ammo.destroy(this._constraint),this._constraint=null)},n.initFromData=function(e){for(var t=0,n=AL;t<n.length;t++){var i=n[t];e.hasOwnProperty(i)&&(e[i]instanceof ft?this["_"+i].copy(e[i]):this["_"+i]=e[i])}this._createConstraint()},n.onEnable=function(){this._createConstraint()},n.onDisable=function(){this._destroyConstraint()},n._onSetEnabled=function(e,t,n){},n._onBeforeRemove=function(){this.fire("remove")},q(t,[{key:"entityA",get:function(){return this._entityA},set:function(e){this._destroyConstraint(),this._entityA=e,this._createConstraint()}},{key:"entityB",get:function(){return this._entityB},set:function(e){this._destroyConstraint(),this._entityB=e,this._createConstraint()}},{key:"breakForce",get:function(){return this._breakForce},set:function(e){this._constraint&&this._breakForce!==e&&(this._constraint.setBreakingImpulseThreshold(e),this._breakForce=e)}},{key:"enableCollision",get:function(){return this._enableCollision},set:function(e){this._destroyConstraint(),this._enableCollision=e,this._createConstraint()}},{key:"angularLimitsX",get:function(){return this._angularLimitsX},set:function(e){this._angularLimitsX.equals(e)||(this._angularLimitsX.copy(e),this._updateAngularLimits())}},{key:"angularMotionX",get:function(){return this._angularMotionX},set:function(e){this._angularMotionX!==e&&(this._angularMotionX=e,this._updateAngularLimits())}},{key:"angularLimitsY",get:function(){return this._angularLimitsY},set:function(e){this._angularLimitsY.equals(e)||(this._angularLimitsY.copy(e),this._updateAngularLimits())}},{key:"angularMotionY",get:function(){return this._angularMotionY},set:function(e){this._angularMotionY!==e&&(this._angularMotionY=e,this._updateAngularLimits())}},{key:"angularLimitsZ",get:function(){return this._angularLimitsZ},set:function(e){this._angularLimitsZ.equals(e)||(this._angularLimitsZ.copy(e),this._updateAngularLimits())}},{key:"angularMotionZ",get:function(){return this._angularMotionZ},set:function(e){this._angularMotionZ!==e&&(this._angularMotionZ=e,this._updateAngularLimits())}},{key:"linearLimitsX",get:function(){return this._linearLimitsX},set:function(e){this._linearLimitsX.equals(e)||(this._linearLimitsX.copy(e),this._updateLinearLimits())}},{key:"linearMotionX",get:function(){return this._linearMotionX},set:function(e){this._linearMotionX!==e&&(this._linearMotionX=e,this._updateLinearLimits())}},{key:"linearLimitsY",get:function(){return this._linearLimitsY},set:function(e){this._linearLimitsY.equals(e)||(this._linearLimitsY.copy(e),this._updateLinearLimits())}},{key:"linearMotionY",get:function(){return this._linearMotionY},set:function(e){this._linearMotionY!==e&&(this._linearMotionY=e,this._updateLinearLimits())}},{key:"linearLimitsZ",get:function(){return this._linearLimitsZ},set:function(e){this._linearLimitsZ.equals(e)||(this._linearLimitsZ.copy(e),this._updateLinearLimits())}},{key:"linearMotionZ",get:function(){return this._linearMotionZ},set:function(e){this._linearMotionZ!==e&&(this._linearMotionZ=e,this._updateLinearLimits())}}]),t}(zS),ML={Damping:"setDamping",Equilibrium:"setEquilibriumPoint",Spring:"enableSpring",Stiffness:"setStiffness"};["linear","angular"].forEach((function(e){["Damping","Equilibrium","Spring","Stiffness"].forEach((function(t){["X","Y","Z"].forEach((function(n){var i=e+t+n,a="_"+i,s="linear"===e?0:3;"Y"===n&&(s+=1),"Z"===n&&(s+=2),Object.defineProperty(LL.prototype,i,{get:function(){return this[a]},set:function(e){this[a]!==e&&(this[a]=e,this._constraint[ML[t]](s,e))}})}))}))}));var PL=function(){this.enabled=!0},OL=["enabled"],IL=function(e){function t(t){var n;return(n=e.call(this,t)||this).id="joint",n.app=t,n.ComponentType=LL,n.DataType=PL,n.schema=OL,n}return Z(t,e),t.prototype.initializeComponentData=function(e,t,n){e.initFromData(t)},t}(VS);zS._buildAccessors(LL.prototype,OL);var RL=function(e){function t(t,n){var i;return(i=e.call(this,t,n)||this)._minWidth=0,i._minHeight=0,i._maxWidth=null,i._maxHeight=null,i._fitWidthProportion=0,i._fitHeightProportion=0,i._excludeFromLayout=!1,i}return Z(t,e),q(t,[{key:"minWidth",get:function(){return this._minWidth},set:function(e){e!==this._minWidth&&(this._minWidth=e,this.fire("resize"))}},{key:"minHeight",get:function(){return this._minHeight},set:function(e){e!==this._minHeight&&(this._minHeight=e,this.fire("resize"))}},{key:"maxWidth",get:function(){return this._maxWidth},set:function(e){e!==this._maxWidth&&(this._maxWidth=e,this.fire("resize"))}},{key:"maxHeight",get:function(){return this._maxHeight},set:function(e){e!==this._maxHeight&&(this._maxHeight=e,this.fire("resize"))}},{key:"fitWidthProportion",get:function(){return this._fitWidthProportion},set:function(e){e!==this._fitWidthProportion&&(this._fitWidthProportion=e,this.fire("resize"))}},{key:"fitHeightProportion",get:function(){return this._fitHeightProportion},set:function(e){e!==this._fitHeightProportion&&(this._fitHeightProportion=e,this.fire("resize"))}},{key:"excludeFromLayout",get:function(){return this._excludeFromLayout},set:function(e){e!==this._excludeFromLayout&&(this._excludeFromLayout=e,this.fire("resize"))}}]),t}(zS),DL=function(){this.enabled=!0},kL=["enabled"],FL=function(e){function t(t){var n;return(n=e.call(this,t)||this).id="layoutchild",n.ComponentType=RL,n.DataType=DL,n.schema=kL,n}Z(t,e);var n=t.prototype;return n.initializeComponentData=function(t,n,i){void 0!==n.enabled&&(t.enabled=n.enabled),void 0!==n.minWidth&&(t.minWidth=n.minWidth),void 0!==n.minHeight&&(t.minHeight=n.minHeight),void 0!==n.maxWidth&&(t.maxWidth=n.maxWidth),void 0!==n.maxHeight&&(t.maxHeight=n.maxHeight),void 0!==n.fitWidthProportion&&(t.fitWidthProportion=n.fitWidthProportion),void 0!==n.fitHeightProportion&&(t.fitHeightProportion=n.fitHeightProportion),void 0!==n.excludeFromLayout&&(t.excludeFromLayout=n.excludeFromLayout),e.prototype.initializeComponentData.call(this,t,n,i)},n.cloneComponent=function(e,t){var n=e.layoutchild;return this.addComponent(t,{enabled:n.enabled,minWidth:n.minWidth,minHeight:n.minHeight,maxWidth:n.maxWidth,maxHeight:n.maxHeight,fitWidthProportion:n.fitWidthProportion,fitHeightProportion:n.fitHeightProportion,excludeFromLayout:n.excludeFromLayout})},t}(VS);zS._buildAccessors(RL.prototype,kL);var BL=0,NL=1,UL=2,zL=3,VL={};VL[eg]={axis:"x",size:"width",calculatedSize:"calculatedWidth",minSize:"minWidth",maxSize:"maxWidth",fitting:"widthFitting",fittingProportion:"fitWidthProportion"},VL[tg]={axis:"y",size:"height",calculatedSize:"calculatedHeight",minSize:"minHeight",maxSize:"maxHeight",fitting:"heightFitting",fittingProportion:"fitHeightProportion"};var HL={};HL[eg]=tg,HL[tg]=eg;var GL={minWidth:0,minHeight:0,maxWidth:Number.POSITIVE_INFINITY,maxHeight:Number.POSITIVE_INFINITY,width:null,height:null,fitWidthProportion:0,fitHeightProportion:0},WL={NONE:"NONE",APPLY_STRETCHING:"APPLY_STRETCHING",APPLY_SHRINKING:"APPLY_SHRINKING"},jL=new ft;function XL(e){var t,n=VL[e],i=VL[HL[e]];function a(e,t){return-t[n.size]*e.pivot[n.axis]}function s(e,t){return-t[i.size]*e.pivot[i.axis]}function r(e,t){return t[n.size]*(1-e.pivot[n.axis])}function o(e,n){e=e.filter(l),t=n,jL.x=t.containerSize.x-t.padding.x-t.padding.z,jL.y=t.containerSize.y-t.padding.y-t.padding.w,c(e);var i=p(h(e)),a=u(i,d(i)),s=_(i,a);return w(i,a,s),b(i,a,s),x(i)}function l(e){var t=e.entity.layoutchild;return!t||!t.enabled||!t.excludeFromLayout}function c(e){for(var t=0;t<e.length;++t){var n=e[t],i=n.anchor;0===i.x&&0===i.y&&0===i.z&&0===i.w||(n.anchor=vt.ZERO)}}function h(e){if(!t.wrap)return[e];for(var i=[[]],a=C(e),s=0,r=t[n.fitting]===UL,o=0;o<e.length;++o){i[i.length-1].length>0&&(s+=t.spacing[n.axis]);var l=a[o][n.size];s+=l,!r&&s>jL[n.axis]&&0!==i[i.length-1].length&&(s=l,i.push([])),i[i.length-1].push(e[o]),r&&s>jL[n.axis]&&o!==e.length-1&&(s=0,i.push([]))}return i}function p(e){var n=t.orientation===eg&&t.reverseX||t.orientation===tg&&t.reverseY,i=t.orientation===eg&&t.reverseY||t.orientation===tg&&t.reverseX;if(n)for(var a=0;a<e.length;++a)n&&e[a].reverse();return i&&e.reverse(),e}function d(e){for(var i=[],a=0;a<e.length;++a){var s=C(e[a]),r=f(s,n),o=m(t[n.fitting],r,jL[n.axis]);o===WL.APPLY_STRETCHING?g(s,r,n):o===WL.APPLY_SHRINKING&&v(s,r,n),i.push(s)}return i}function u(e,n){for(var a=[],s=[],r=0;r<e.length;++r){var o=e[r];o.largestElement=null,o.largestSize={width:Number.NEGATIVE_INFINITY,height:Number.NEGATIVE_INFINITY};for(var l=0;l<o.length;++l){var c=n[r][l];c[i.size]>o.largestSize[i.size]&&(o.largestElement=o[l],o.largestSize=c)}a.push(o.largestElement),s.push(o.largestSize)}var h=f(s,i),p=m(t[i.fitting],h,jL[i.axis]);p===WL.APPLY_STRETCHING?g(s,h,i):p===WL.APPLY_SHRINKING&&v(s,h,i);for(var d=0;d<e.length;++d)for(var u=e[d],y=0;y<u.length;++y){var _=n[d][y],w=_[i.size],b=1===e.length?jL[i.axis]:u.largestSize[i.size],x=m(t[i.fitting],w,b);x===WL.APPLY_STRETCHING?_[i.size]=Math.min(b,_[i.maxSize]):x===WL.APPLY_SHRINKING&&(_[i.size]=Math.max(b,_[i.minSize]))}return n}function m(e,t,n){switch(e){case BL:return WL.NONE;case NL:return t<n?WL.APPLY_STRETCHING:WL.NONE;case UL:return t>=n?WL.APPLY_SHRINKING:WL.NONE;case zL:return t<n?WL.APPLY_STRETCHING:WL.APPLY_SHRINKING;default:throw new Error("Unrecognized fitting mode: "+e)}}function f(e,n){return T(e,n.size)+(e.length-1)*t.spacing[n.axis]}function g(e,t,n){for(var i=M(e,n.maxSize),a=A(e,n.fittingProportion),s=I(a,i),r=jL[n.axis]-t,o=0;o<e.length;++o){var l=i[o],c=y(l,r,a,s),h=e[l][n.size]+c,p=e[l][n.maxSize],d=Math.min(h,p);e[l][n.size]=d,r-=c-Math.max(h-d,0)}}function v(e,t,n){for(var i=M(e,n.minSize,!0),a=L(A(e,n.fittingProportion)),s=I(a,i),r=t-jL[n.axis],o=0;o<e.length;++o){var l=i[o],c=y(l,r,a,s),h=e[l][n.size]-c,p=e[l][n.minSize],d=Math.max(h,p);e[l][n.size]=d,r-=c-Math.max(d-h,0)}}function y(e,t,n,i){var a=n[e],s=i[e];return Math.abs(a)<1e-5&&Math.abs(s)<1e-5?t:t*a/s}function _(e,o){var l={};l[n.axis]=0,l[i.axis]=0,e[n.size]=Number.NEGATIVE_INFINITY;for(var c=[],h=0;h<e.length;++h){var p=e[h];if(0!==p.length){for(var d=[],u=o[h],m=0;m<p.length;++m){var f=p[m],g=u[m];l[i.axis]-=s(f,g),l[n.axis]-=a(f,g),d[m]={},d[m][n.axis]=l[n.axis],d[m][i.axis]=l[i.axis],l[i.axis]+=s(f,g),l[n.axis]+=r(f,g)+t.spacing[n.axis]}p[n.size]=l[n.axis]-t.spacing[n.axis],p[i.size]=p.largestSize[i.size],e[n.size]=Math.max(e[n.size],p[n.size]),l[n.axis]=0,l[i.axis]+=p[i.size]+t.spacing[i.axis],c.push(d)}else c.push([])}return e[i.size]=l[i.axis]-t.spacing[i.axis],c}function w(e,a,s){for(var r=t.alignment[n.axis],o=t.alignment[i.axis],l=t.padding[n.axis],c=t.padding[i.axis],h=0;h<e.length;++h)for(var p=e[h],d=a[h],u=s[h],m=(jL[n.axis]-p[n.size])*r+l,f=(jL[i.axis]-e[i.size])*o+c,g=0;g<p.length;++g){var v=(p[i.size]-d[g][i.size])*t.alignment[i.axis];u[g][n.axis]+=m,u[g][i.axis]+=f+v}}function b(e,a,s){for(var r=0;r<e.length;++r)for(var o=e[r],l=a[r],c=s[r],h=0;h<o.length;++h){var p=o[h];p[n.calculatedSize]=l[h][n.size],p[i.calculatedSize]=l[h][i.size],t.orientation===eg?p.entity.setLocalPosition(c[h][n.axis],c[h][i.axis],p.entity.getLocalPosition().z):p.entity.setLocalPosition(c[h][i.axis],c[h][n.axis],p.entity.getLocalPosition().z)}}function x(e){var n=e.width,i=e.height,a=(jL.x-n)*t.alignment.x+t.padding.x,s=(jL.y-i)*t.alignment.y+t.padding.y;return{bounds:new vt(a,s,n,i)}}function C(e){for(var t=[],n=0;n<e.length;++n){var i=e[n],a=Math.max(S(i,"minWidth"),0),s=Math.max(S(i,"minHeight"),0),r=Math.max(S(i,"maxWidth"),a),o=Math.max(S(i,"maxHeight"),s),l=E(S(i,"width"),a,r),c=E(S(i,"height"),s,o),h=S(i,"fitWidthProportion"),p=S(i,"fitHeightProportion");t.push({minWidth:a,minHeight:s,maxWidth:r,maxHeight:o,width:l,height:c,fitWidthProportion:h,fitHeightProportion:p})}return t}function S(e,t){var n=e.entity.layoutchild;return n&&n.enabled&&void 0!==n[t]&&null!==n[t]?n[t]:void 0!==e[t]?e[t]:GL[t]}function E(e,t,n){return Math.min(Math.max(e,t),n)}function T(e,t){return e.reduce((function(e,n){return e+n[t]}),0)}function A(e,t){var n=T(e,t),i=[],a=e.length;if(0===n)for(var s=0;s<a;++s)i.push(1/a);else for(var r=0;r<a;++r)i.push(e[r][t]/n);return i}function L(e){if(1===e.length)return[1];for(var t=[],n=e.length,i=0;i<n;++i)t.push((1-e[i])/(n-1));return t}function M(e,t,n){return e.forEach(P),e.slice().sort((function(e,i){return n?i[t]-e[t]:e[t]-i[t]})).map(O)}function P(e,t){e.index=t}function O(e){return e.index}function I(e,t){var n=[];n[t[e.length-1]]=e[t[e.length-1]];for(var i=e.length-2;i>=0;--i)n[t[i]]=n[t[i+1]]+e[t[i]];return n}return o}var YL={};YL[eg]=XL(eg),YL[tg]=XL(tg);var qL=function(){function e(){}return e.prototype.calculateLayout=function(e,t){var n=YL[t.orientation];if(n)return n(e,t);throw new Error("Unrecognized orientation value: "+t.orientation)},e}();function KL(e){return e.element}function ZL(e){return e.enabled&&e.element&&e.element.enabled}var QL=function(e){function t(t,n){var i;return(i=e.call(this,t,n)||this)._orientation=eg,i._reverseX=!1,i._reverseY=!0,i._alignment=new ft(0,1),i._padding=new vt,i._spacing=new ft,i._widthFitting=BL,i._heightFitting=BL,i._wrap=!1,i._layoutCalculator=new qL,i._listenForReflowEvents(i.entity,"on"),i.entity.children.forEach((function(e){i._listenForReflowEvents(e,"on")})),i.entity.on("childinsert",i._onChildInsert,J(i)),i.entity.on("childremove",i._onChildRemove,J(i)),t.app.systems.element.on("add",i._onElementOrLayoutComponentAdd,J(i)),t.app.systems.element.on("beforeremove",i._onElementOrLayoutComponentRemove,J(i)),t.app.systems.layoutchild.on("add",i._onElementOrLayoutComponentAdd,J(i)),t.app.systems.layoutchild.on("beforeremove",i._onElementOrLayoutComponentRemove,J(i)),i}Z(t,e);var n=t.prototype;return n._isSelfOrChild=function(e){return e===this.entity||-1!==this.entity.children.indexOf(e)},n._listenForReflowEvents=function(e,t){e.element&&(e.element[t]("enableelement",this._scheduleReflow,this),e.element[t]("disableelement",this._scheduleReflow,this),e.element[t]("resize",this._scheduleReflow,this),e.element[t]("set:pivot",this._scheduleReflow,this)),e.layoutchild&&(e.layoutchild[t]("set_enabled",this._scheduleReflow,this),e.layoutchild[t]("resize",this._scheduleReflow,this))},n._onElementOrLayoutComponentAdd=function(e){this._isSelfOrChild(e)&&(this._listenForReflowEvents(e,"on"),this._scheduleReflow())},n._onElementOrLayoutComponentRemove=function(e){this._isSelfOrChild(e)&&(this._listenForReflowEvents(e,"off"),this._scheduleReflow())},n._onChildInsert=function(e){this._listenForReflowEvents(e,"on"),this._scheduleReflow()},n._onChildRemove=function(e){this._listenForReflowEvents(e,"off"),this._scheduleReflow()},n._scheduleReflow=function(){this.enabled&&this.entity&&this.entity.enabled&&!this._isPerformingReflow&&this.system.scheduleReflow(this)},n.reflow=function(){var e=KL(this.entity),t=this.entity.children.filter(ZL).map(KL);if(e&&0!==t.length){var n=Math.max(e.calculatedWidth,0),i=Math.max(e.calculatedHeight,0),a={orientation:this._orientation,reverseX:this._reverseX,reverseY:this._reverseY,alignment:this._alignment,padding:this._padding,spacing:this._spacing,widthFitting:this._widthFitting,heightFitting:this._heightFitting,wrap:this._wrap,containerSize:new ft(n,i)};this._isPerformingReflow=!0;var s=this._layoutCalculator.calculateLayout(t,a);this._isPerformingReflow=!1,this.fire("reflow",s)}},n.onEnable=function(){this._scheduleReflow()},n.onRemove=function(){var e=this;this.entity.off("childinsert",this._onChildInsert,this),this.entity.off("childremove",this._onChildRemove,this),this._listenForReflowEvents(this.entity,"off"),this.entity.children.forEach((function(t){e._listenForReflowEvents(t,"off")})),this.system.app.systems.element.off("add",this._onElementOrLayoutComponentAdd,this),this.system.app.systems.element.off("beforeremove",this._onElementOrLayoutComponentRemove,this),this.system.app.systems.layoutchild.off("add",this._onElementOrLayoutComponentAdd,this),this.system.app.systems.layoutchild.off("beforeremove",this._onElementOrLayoutComponentRemove,this)},q(t,[{key:"orientation",get:function(){return this._orientation},set:function(e){e!==this._orientation&&(this._orientation=e,this._scheduleReflow())}},{key:"reverseX",get:function(){return this._reverseX},set:function(e){e!==this._reverseX&&(this._reverseX=e,this._scheduleReflow())}},{key:"reverseY",get:function(){return this._reverseY},set:function(e){e!==this._reverseY&&(this._reverseY=e,this._scheduleReflow())}},{key:"alignment",get:function(){return this._alignment},set:function(e){e.equals(this._alignment)||(this._alignment.copy(e),this._scheduleReflow())}},{key:"padding",get:function(){return this._padding},set:function(e){e.equals(this._padding)||(this._padding.copy(e),this._scheduleReflow())}},{key:"spacing",get:function(){return this._spacing},set:function(e){e.equals(this._spacing)||(this._spacing.copy(e),this._scheduleReflow())}},{key:"widthFitting",get:function(){return this._widthFitting},set:function(e){e!==this._widthFitting&&(this._widthFitting=e,this._scheduleReflow())}},{key:"heightFitting",get:function(){return this._heightFitting},set:function(e){e!==this._heightFitting&&(this._heightFitting=e,this._scheduleReflow())}},{key:"wrap",get:function(){return this._wrap},set:function(e){e!==this._wrap&&(this._wrap=e,this._scheduleReflow())}}]),t}(zS),JL=function(){this.enabled=!0},$L=["enabled"],eM=100,tM=function(e){function t(t){var n;return(n=e.call(this,t)||this).id="layoutgroup",n.ComponentType=QL,n.DataType=JL,n.schema=$L,n._reflowQueue=[],n.on("beforeremove",n._onRemoveComponent,J(n)),n.app.systems.on("postUpdate",n._onPostUpdate,J(n)),n}Z(t,e);var n=t.prototype;return n.initializeComponentData=function(t,n,i){void 0!==n.enabled&&(t.enabled=n.enabled),void 0!==n.orientation&&(t.orientation=n.orientation),void 0!==n.reverseX&&(t.reverseX=n.reverseX),void 0!==n.reverseY&&(t.reverseY=n.reverseY),void 0!==n.alignment&&(t.alignment=Array.isArray(n.alignment)?new ft(n.alignment):n.alignment),void 0!==n.padding&&(t.padding=Array.isArray(n.padding)?new vt(n.padding):n.padding),void 0!==n.spacing&&(t.spacing=Array.isArray(n.spacing)?new ft(n.spacing):n.spacing),void 0!==n.widthFitting&&(t.widthFitting=n.widthFitting),void 0!==n.heightFitting&&(t.heightFitting=n.heightFitting),void 0!==n.wrap&&(t.wrap=n.wrap),e.prototype.initializeComponentData.call(this,t,n,i)},n.cloneComponent=function(e,t){var n=e.layoutgroup;return this.addComponent(t,{enabled:n.enabled,orientation:n.orientation,reverseX:n.reverseX,reverseY:n.reverseY,alignment:n.alignment,padding:n.padding,spacing:n.spacing,widthFitting:n.widthFitting,heightFitting:n.heightFitting,wrap:n.wrap})},n.scheduleReflow=function(e){-1===this._reflowQueue.indexOf(e)&&this._reflowQueue.push(e)},n._onPostUpdate=function(){this._processReflowQueue()},n._processReflowQueue=function(){if(0!==this._reflowQueue.length)for(var e=0;this._reflowQueue.length>0;){var t=this._reflowQueue.slice();this._reflowQueue.length=0,t.sort((function(e,t){return e.entity.graphDepth-t.entity.graphDepth}));for(var n=0;n<t.length;++n)t[n].reflow();if(++e>=eM){console.warn("Max reflow iterations limit reached, bailing.");break}}},n._onRemoveComponent=function(e,t){t.onRemove()},n.destroy=function(){e.prototype.destroy.call(this),this.app.systems.off("postUpdate",this._onPostUpdate,this)},t}(VS);zS._buildAccessors(QL.prototype,$L);var nM=function(e){function t(t,n){var i;return(i=e.call(this,t,n)||this)._type="asset",i._asset=null,i._model=null,i._mapping={},i._castShadows=!0,i._receiveShadows=!0,i._materialAsset=null,i._material=void 0,i._castShadowsLightmap=!0,i._lightmapped=!1,i._lightmapSizeMultiplier=1,i.isStatic=!1,i._layers=[Uu],i._batchGroupId=-1,i._customAabb=null,i._area=null,i._materialEvents=null,i._clonedModel=!1,i._material=t.defaultMaterial,n.on("remove",i.onRemoveChild,J(i)),n.on("removehierarchy",i.onRemoveChild,J(i)),n.on("insert",i.onInsertChild,J(i)),n.on("inserthierarchy",i.onInsertChild,J(i)),i}Z(t,e);var n=t.prototype;return n.addModelToLayers=function(){for(var e=this.system.app.scene.layers,t=0;t<this._layers.length;t++){var n=e.getLayerById(this._layers[t]);n&&n.addMeshInstances(this.meshInstances)}},n.removeModelFromLayers=function(){for(var e=this.system.app.scene.layers,t=0;t<this._layers.length;t++){var n=e.getLayerById(this._layers[t]);n&&n.removeMeshInstances(this.meshInstances)}},n.onRemoveChild=function(){this._model&&this.removeModelFromLayers()},n.onInsertChild=function(){this._model&&this.enabled&&this.entity.enabled&&this.addModelToLayers()},n.onRemove=function(){this.asset=null,this.model=null,this.materialAsset=null,this._unsetMaterialEvents(),this.entity.off("remove",this.onRemoveChild,this),this.entity.off("insert",this.onInsertChild,this)},n.onLayersChanged=function(e,t){this.addModelToLayers(),e.off("add",this.onLayerAdded,this),e.off("remove",this.onLayerRemoved,this),t.on("add",this.onLayerAdded,this),t.on("remove",this.onLayerRemoved,this)},n.onLayerAdded=function(e){this.layers.indexOf(e.id)<0||e.addMeshInstances(this.meshInstances)},n.onLayerRemoved=function(e){this.layers.indexOf(e.id)<0||e.removeMeshInstances(this.meshInstances)},n._setMaterialEvent=function(e,t,n,i){var a=t+":"+n;this.system.app.assets.on(a,i,this),this._materialEvents||(this._materialEvents=[]),this._materialEvents[e]||(this._materialEvents[e]={}),this._materialEvents[e][a]={id:n,handler:i}},n._unsetMaterialEvents=function(){var e=this.system.app.assets,t=this._materialEvents;if(t){for(var n=0,i=t.length;n<i;n++)if(t[n]){var a=t[n];for(var s in a)e.off(s,a[s].handler,this)}this._materialEvents=null}},n._getAssetByIdOrPath=function(e){var t=null;if(isNaN(parseInt(e,10))){if(this.asset){var n=this._getMaterialAssetUrl(e);n&&(t=this.system.app.assets.getByUrl(n))}}else t=this.system.app.assets.get(e);return t},n._getMaterialAssetUrl=function(e){if(!this.asset)return null;var t=this.system.app.assets.get(this.asset);return t?t.getAbsoluteUrl(e):null},n._loadAndSetMeshInstanceMaterial=function(e,t,n){var i=this.system.app.assets;e&&(e.resource?(t.material=e.resource,this._setMaterialEvent(n,"remove",e.id,(function(){t.material=this.system.defaultMaterial}))):(this._setMaterialEvent(n,"load",e.id,(function(i){t.material=i.resource,this._setMaterialEvent(n,"remove",e.id,(function(){t.material=this.system.defaultMaterial}))})),this.enabled&&this.entity.enabled&&i.load(e)))},n.onEnable=function(){var e=this.system.app,t=e.scene;t.on("set:layers",this.onLayersChanged,this),t.layers&&(t.layers.on("add",this.onLayerAdded,this),t.layers.on("remove",this.onLayerRemoved,this));var n,i,a="asset"===this._type;if(this._model?this.addModelToLayers():a&&this._asset&&(n=e.assets.get(this._asset))&&n.resource!==this._model&&this._bindModelAsset(n),this._materialAsset&&(n=e.assets.get(this._materialAsset))&&n.resource!==this._material&&this._bindMaterialAsset(n),a&&this._mapping)for(var s in this._mapping)this._mapping[s]&&(n=this._getAssetByIdOrPath(this._mapping[s]))&&!n.resource&&e.assets.load(n);this._batchGroupId>=0&&(null==(i=e.batcher)||i.insert(av.MODEL,this.batchGroupId,this.entity))},n.onDisable=function(){var e,t=this.system.app,n=t.scene;n.off("set:layers",this.onLayersChanged,this),n.layers&&(n.layers.off("add",this.onLayerAdded,this),n.layers.off("remove",this.onLayerRemoved,this)),this._batchGroupId>=0&&(null==(e=t.batcher)||e.remove(av.MODEL,this.batchGroupId,this.entity)),this._model&&this.removeModelFromLayers()},n.hide=function(){if(this._model)for(var e=this._model.meshInstances,t=0,n=e.length;t<n;t++)e[t].visible=!1},n.show=function(){if(this._model)for(var e=this._model.meshInstances,t=0,n=e.length;t<n;t++)e[t].visible=!0},n._bindMaterialAsset=function(e){if(e.on("load",this._onMaterialAssetLoad,this),e.on("unload",this._onMaterialAssetUnload,this),e.on("remove",this._onMaterialAssetRemove,this),e.on("change",this._onMaterialAssetChange,this),e.resource)this._onMaterialAssetLoad(e);else{if(!this.enabled||!this.entity.enabled)return;this.system.app.assets.load(e)}},n._unbindMaterialAsset=function(e){e.off("load",this._onMaterialAssetLoad,this),e.off("unload",this._onMaterialAssetUnload,this),e.off("remove",this._onMaterialAssetRemove,this),e.off("change",this._onMaterialAssetChange,this)},n._onMaterialAssetAdd=function(e){this.system.app.assets.off("add:"+e.id,this._onMaterialAssetAdd,this),this._materialAsset===e.id&&this._bindMaterialAsset(e)},n._onMaterialAssetLoad=function(e){this._setMaterial(e.resource)},n._onMaterialAssetUnload=function(e){this._setMaterial(this.system.defaultMaterial)},n._onMaterialAssetRemove=function(e){this._onMaterialAssetUnload(e)},n._onMaterialAssetChange=function(e){},n._bindModelAsset=function(e){if(this._unbindModelAsset(e),e.on("load",this._onModelAssetLoad,this),e.on("unload",this._onModelAssetUnload,this),e.on("change",this._onModelAssetChange,this),e.on("remove",this._onModelAssetRemove,this),e.resource)this._onModelAssetLoad(e);else{if(!this.enabled||!this.entity.enabled)return;this.system.app.assets.load(e)}},n._unbindModelAsset=function(e){e.off("load",this._onModelAssetLoad,this),e.off("unload",this._onModelAssetUnload,this),e.off("change",this._onModelAssetChange,this),e.off("remove",this._onModelAssetRemove,this)},n._onModelAssetAdded=function(e){this.system.app.assets.off("add:"+e.id,this._onModelAssetAdded,this),e.id===this._asset&&this._bindModelAsset(e)},n._onModelAssetLoad=function(e){this.model=e.resource.clone(),this._clonedModel=!0},n._onModelAssetUnload=function(e){this.model=null},n._onModelAssetChange=function(e,t,n,i){"data"===t&&(this.mapping=this._mapping)},n._onModelAssetRemove=function(e){this.model=null},n._setMaterial=function(e){if(this._material!==e){this._material=e;var t=this._model;if(t&&"asset"!==this._type)for(var n=t.meshInstances,i=0,a=n.length;i<a;i++)n[i].material=e}},q(t,[{key:"meshInstances",get:function(){return this._model?this._model.meshInstances:null},set:function(e){this._model&&(this._model.meshInstances=e)}},{key:"customAabb",get:function(){return this._customAabb},set:function(e){if(this._customAabb=e,this._model){var t=this._model.meshInstances;if(t)for(var n=0;n<t.length;n++)t[n].setCustomAabb(this._customAabb)}}},{key:"type",get:function(){return this._type},set:function(e){if(this._type!==e)if(this._area=null,this._type=e,"asset"===e)null!==this._asset?this._bindModelAsset(this._asset):this.model=null;else{var t=xg(this.system.app.graphicsDevice,e);this._area=t.area;var n=t.mesh,i=new Cv,a=new Mb;a.graph=i,a.meshInstances=[new Dv(n,this._material,i)],this.model=a,this._asset=null}}},{key:"asset",get:function(){return this._asset},set:function(e){var t=this.system.app.assets,n=e;if(e instanceof eS&&(n=e.id),this._asset!==n){if(this._asset){t.off("add:"+this._asset,this._onModelAssetAdded,this);var i=t.get(this._asset);i&&this._unbindModelAsset(i)}if(this._asset=n,this._asset){var a=t.get(this._asset);a?this._bindModelAsset(a):(this.model=null,t.on("add:"+this._asset,this._onModelAssetAdded,this))}else this.model=null}}},{key:"model",get:function(){return this._model},set:function(e){if(this._model!==e&&(!e||!e._immutable)&&(this._model&&(this._model._immutable=!1,this.removeModelFromLayers(),this._model.getGraph().destroy(),delete this._model._entity,this._clonedModel&&(this._model.destroy(),this._clonedModel=!1)),this._model=e,this._model)){this._model._immutable=!0;for(var t=this._model.meshInstances,n=0;n<t.length;n++)t[n].castShadow=this._castShadows,t[n].receiveShadow=this._receiveShadows,t[n].setCustomAabb(this._customAabb);this.lightmapped=this._lightmapped,this.entity.addChild(this._model.graph),this.enabled&&this.entity.enabled&&this.addModelToLayers(),this._model._entity=this.entity,this.entity.animation&&this.entity.animation.setModel(this._model),this.entity.anim&&this.entity.anim.rebind(),"asset"===this.type?this.mapping=this._mapping:this._unsetMaterialEvents()}}},{key:"lightmapped",get:function(){return this._lightmapped},set:function(e){if(e!==this._lightmapped&&(this._lightmapped=e,this._model))for(var t=this._model.meshInstances,n=0;n<t.length;n++)t[n].setLightmapped(e)}},{key:"castShadows",get:function(){return this._castShadows},set:function(e){if(this._castShadows!==e){var t=this._model;if(t){var n=this.layers,i=this.system.app.scene;if(this._castShadows&&!e)for(var a=0;a<n.length;a++){var s=this.system.app.scene.layers.getLayerById(this.layers[a]);s&&s.removeShadowCasters(t.meshInstances)}for(var r=t.meshInstances,o=0;o<r.length;o++)r[o].castShadow=e;if(!this._castShadows&&e)for(var l=0;l<n.length;l++){var c=i.layers.getLayerById(n[l]);c&&c.addShadowCasters(t.meshInstances)}}this._castShadows=e}}},{key:"receiveShadows",get:function(){return this._receiveShadows},set:function(e){if(this._receiveShadows!==e&&(this._receiveShadows=e,this._model))for(var t=this._model.meshInstances,n=0,i=t.length;n<i;n++)t[n].receiveShadow=e}},{key:"castShadowsLightmap",get:function(){return this._castShadowsLightmap},set:function(e){this._castShadowsLightmap=e}},{key:"lightmapSizeMultiplier",get:function(){return this._lightmapSizeMultiplier},set:function(e){this._lightmapSizeMultiplier=e}},{key:"layers",get:function(){return this._layers},set:function(e){var t=this.system.app.scene.layers;if(this.meshInstances)for(var n=0;n<this._layers.length;n++){var i=t.getLayerById(this._layers[n]);i&&i.removeMeshInstances(this.meshInstances)}this._layers.length=0;for(var a=0;a<e.length;a++)this._layers[a]=e[a];if(this.enabled&&this.entity.enabled&&this.meshInstances)for(var s=0;s<this._layers.length;s++){var r=t.getLayerById(this._layers[s]);r&&r.addMeshInstances(this.meshInstances)}}},{key:"batchGroupId",get:function(){return this._batchGroupId},set:function(e){var t,n;this._batchGroupId!==e&&(this.entity.enabled&&this._batchGroupId>=0&&(null==(t=this.system.app.batcher)||t.remove(av.MODEL,this.batchGroupId,this.entity)),this.entity.enabled&&e>=0&&(null==(n=this.system.app.batcher)||n.insert(av.MODEL,e,this.entity)),e<0&&this._batchGroupId>=0&&this.enabled&&this.entity.enabled&&this.addModelToLayers(),this._batchGroupId=e)}},{key:"materialAsset",get:function(){return this._materialAsset},set:function(e){var t=e;e instanceof eS&&(t=e.id);var n=this.system.app.assets;if(t!==this._materialAsset){if(this._materialAsset){n.off("add:"+this._materialAsset,this._onMaterialAssetAdd,this);var i=n.get(this._materialAsset);i&&this._unbindMaterialAsset(i)}if(this._materialAsset=t,this._materialAsset){var a=n.get(this._materialAsset);a?this._bindMaterialAsset(a):(this._setMaterial(this.system.defaultMaterial),n.on("add:"+this._materialAsset,this._onMaterialAssetAdd,this))}else this._setMaterial(this.system.defaultMaterial)}}},{key:"material",get:function(){return this._material},set:function(e){this._material!==e&&(this.materialAsset=null,this._setMaterial(e))}},{key:"mapping",get:function(){return this._mapping},set:function(e){if("asset"===this._type&&(this._unsetMaterialEvents(),e||(e={}),this._mapping=e,this._model))for(var t=this._model.meshInstances,n=this.asset?this.system.app.assets.get(this.asset):null,i=n?n.data.mapping:null,a=null,s=0,r=t.length;s<r;s++)if(void 0!==e[s])e[s]?(a=this.system.app.assets.get(e[s]),this._loadAndSetMeshInstanceMaterial(a,t[s],s)):t[s].material=this.system.defaultMaterial;else if(i)if(i[s]&&(i[s].material||i[s].path)){if(void 0!==i[s].material)a=this.system.app.assets.get(i[s].material);else if(void 0!==i[s].path){var o=this._getMaterialAssetUrl(i[s].path);o&&(a=this.system.app.assets.getByUrl(o))}this._loadAndSetMeshInstanceMaterial(a,t[s],s)}else t[s].material=this.system.defaultMaterial}}]),t}(zS),iM=function(){this.enabled=!0},aM=["enabled"],sM=function(e){function t(t){var n;return(n=e.call(this,t)||this).id="model",n.ComponentType=nM,n.DataType=iM,n.schema=aM,n.defaultMaterial=Qg(t.graphicsDevice),n.on("beforeremove",n.onRemove,J(n)),n}Z(t,e);var n=t.prototype;return n.initializeComponentData=function(t,n,i){i=["material","materialAsset","asset","castShadows","receiveShadows","castShadowsLightmap","lightmapped","lightmapSizeMultiplier","type","mapping","layers","isStatic","batchGroupId"],null!==n.batchGroupId&&void 0!==n.batchGroupId||(n.batchGroupId=-1),n.layers&&n.layers.length&&(n.layers=n.layers.slice(0));for(var a=0;a<i.length;a++)n.hasOwnProperty(i[a])&&(t[i[a]]=n[i[a]]);n.aabbCenter&&n.aabbHalfExtents&&(t.customAabb=new Ot(new pt(n.aabbCenter),new pt(n.aabbHalfExtents))),e.prototype.initializeComponentData.call(this,t,n,["enabled"])},n.cloneComponent=function(e,t){var n={type:e.model.type,asset:e.model.asset,castShadows:e.model.castShadows,receiveShadows:e.model.receiveShadows,castShadowsLightmap:e.model.castShadowsLightmap,lightmapped:e.model.lightmapped,lightmapSizeMultiplier:e.model.lightmapSizeMultiplier,isStatic:e.model.isStatic,enabled:e.model.enabled,layers:e.model.layers,batchGroupId:e.model.batchGroupId,mapping:G({},e.model.mapping)},i=e.model.materialAsset;i instanceof eS||null==i||(i=this.app.assets.get(i));var a=e.model.material;a&&a!==this.defaultMaterial&&i&&a!==i.resource||(n.materialAsset=i);var s=this.addComponent(t,n);if(e.model.model&&"asset"===e.model.type&&!e.model.asset&&(s.model=e.model.model.clone(),s._clonedModel=!0),n.materialAsset||(s.material=a),e.model.model)for(var r=e.model.model.meshInstances,o=s.model.meshInstances,l=0;l<r.length;l++)o[l].mask=r[l].mask,o[l].material=r[l].material,o[l].layer=r[l].layer,o[l].receiveShadow=r[l].receiveShadow;return e.model.customAabb&&(s.customAabb=e.model.customAabb.clone()),s},n.onRemove=function(e,t){t.onRemove()},t}(VS);zS._buildAccessors(nM.prototype,aM);var rM,oM=["emitterExtents","emitterRadius","emitterExtentsInner","emitterRadiusInner","loop","initialVelocity","animSpeed","normalMap","particleNormal"],lM=["numParticles","lifetime","rate","rate2","startAngle","startAngle2","lighting","halfLambert","intensity","wrap","wrapBounds","depthWrite","noFog","sort","stretch","alignToMotion","preWarm","emitterShape","animTilesX","animTilesY","animStartFrame","animNumFrames","animNumAnimations","animIndex","randomizeAnimIndex","animLoop","colorMap","localSpace","screenSpace","orientation"],cM=["scaleGraph","scaleGraph2","colorGraph","colorGraph2","alphaGraph","alphaGraph2","velocityGraph","velocityGraph2","localVelocityGraph","localVelocityGraph2","rotationSpeedGraph","rotationSpeedGraph2","radialSpeedGraph","radialSpeedGraph2"],hM=["colorMapAsset","normalMapAsset","meshAsset","renderAsset"],pM=function(e){function t(t,n){var i;return(i=e.call(this,t,n)||this)._requestedDepth=!1,i._drawOrder=0,i.on("set_colorMapAsset",i.onSetColorMapAsset,J(i)),i.on("set_normalMapAsset",i.onSetNormalMapAsset,J(i)),i.on("set_meshAsset",i.onSetMeshAsset,J(i)),i.on("set_mesh",i.onSetMesh,J(i)),i.on("set_renderAsset",i.onSetRenderAsset,J(i)),i.on("set_loop",i.onSetLoop,J(i)),i.on("set_blendType",i.onSetBlendType,J(i)),i.on("set_depthSoftening",i.onSetDepthSoftening,J(i)),i.on("set_layers",i.onSetLayers,J(i)),oM.forEach((function(e){i.on("set_"+e,i.onSetSimpleProperty,J(i))})),lM.forEach((function(e){i.on("set_"+e,i.onSetComplexProperty,J(i))})),cM.forEach((function(e){i.on("set_"+e,i.onSetGraphProperty,J(i))})),i}Z(t,e);var n=t.prototype;return n.addMeshInstanceToLayers=function(){if(this.emitter)for(var e=0;e<this.layers.length;e++){var t=this.system.app.scene.layers.getLayerById(this.layers[e]);t&&(t.addMeshInstances([this.emitter.meshInstance]),this.emitter._layer=t)}},n.removeMeshInstanceFromLayers=function(){if(this.emitter)for(var e=0;e<this.layers.length;e++){var t=this.system.app.scene.layers.getLayerById(this.layers[e]);t&&t.removeMeshInstances([this.emitter.meshInstance])}},n.onSetLayers=function(e,t,n){if(this.emitter){for(var i=0;i<t.length;i++){var a=this.system.app.scene.layers.getLayerById(t[i]);a&&a.removeMeshInstances([this.emitter.meshInstance])}if(this.enabled&&this.entity.enabled)for(var s=0;s<n.length;s++){var r=this.system.app.scene.layers.getLayerById(n[s]);r&&r.addMeshInstances([this.emitter.meshInstance])}}},n.onLayersChanged=function(e,t){this.addMeshInstanceToLayers(),e.off("add",this.onLayerAdded,this),e.off("remove",this.onLayerRemoved,this),t.on("add",this.onLayerAdded,this),t.on("remove",this.onLayerRemoved,this)},n.onLayerAdded=function(e){this.emitter&&(this.layers.indexOf(e.id)<0||e.addMeshInstances([this.emitter.meshInstance]))},n.onLayerRemoved=function(e){this.emitter&&(this.layers.indexOf(e.id)<0||e.removeMeshInstances([this.emitter.meshInstance]))},n._bindColorMapAsset=function(e){if(e.on("load",this._onColorMapAssetLoad,this),e.on("unload",this._onColorMapAssetUnload,this),e.on("remove",this._onColorMapAssetRemove,this),e.on("change",this._onColorMapAssetChange,this),e.resource)this._onColorMapAssetLoad(e);else{if(!this.enabled||!this.entity.enabled)return;this.system.app.assets.load(e)}},n._unbindColorMapAsset=function(e){e.off("load",this._onColorMapAssetLoad,this),e.off("unload",this._onColorMapAssetUnload,this),e.off("remove",this._onColorMapAssetRemove,this),e.off("change",this._onColorMapAssetChange,this)},n._onColorMapAssetLoad=function(e){this.colorMap=e.resource},n._onColorMapAssetUnload=function(e){this.colorMap=null},n._onColorMapAssetRemove=function(e){this._onColorMapAssetUnload(e)},n._onColorMapAssetChange=function(e){},n.onSetColorMapAsset=function(e,t,n){var i=this,a=this.system.app.assets;if(t){var s=a.get(t);s&&this._unbindColorMapAsset(s)}if(n){n instanceof eS&&(this.data.colorMapAsset=n.id,n=n.id);var r=a.get(n);r?this._bindColorMapAsset(r):a.once("add:"+n,(function(e){i._bindColorMapAsset(e)}))}else this.colorMap=null},n._bindNormalMapAsset=function(e){if(e.on("load",this._onNormalMapAssetLoad,this),e.on("unload",this._onNormalMapAssetUnload,this),e.on("remove",this._onNormalMapAssetRemove,this),e.on("change",this._onNormalMapAssetChange,this),e.resource)this._onNormalMapAssetLoad(e);else{if(!this.enabled||!this.entity.enabled)return;this.system.app.assets.load(e)}},n._unbindNormalMapAsset=function(e){e.off("load",this._onNormalMapAssetLoad,this),e.off("unload",this._onNormalMapAssetUnload,this),e.off("remove",this._onNormalMapAssetRemove,this),e.off("change",this._onNormalMapAssetChange,this)},n._onNormalMapAssetLoad=function(e){this.normalMap=e.resource},n._onNormalMapAssetUnload=function(e){this.normalMap=null},n._onNormalMapAssetRemove=function(e){this._onNormalMapAssetUnload(e)},n._onNormalMapAssetChange=function(e){},n.onSetNormalMapAsset=function(e,t,n){var i=this,a=this.system.app.assets;if(t){var s=a.get(t);s&&this._unbindNormalMapAsset(s)}if(n){n instanceof eS&&(this.data.normalMapAsset=n.id,n=n.id);var r=a.get(n);r?this._bindNormalMapAsset(r):a.once("add:"+n,(function(e){i._bindNormalMapAsset(e)}))}else this.normalMap=null},n._bindMeshAsset=function(e){if(e.on("load",this._onMeshAssetLoad,this),e.on("unload",this._onMeshAssetUnload,this),e.on("remove",this._onMeshAssetRemove,this),e.on("change",this._onMeshAssetChange,this),e.resource)this._onMeshAssetLoad(e);else{if(!this.enabled||!this.entity.enabled)return;this.system.app.assets.load(e)}},n._unbindMeshAsset=function(e){e.off("load",this._onMeshAssetLoad,this),e.off("unload",this._onMeshAssetUnload,this),e.off("remove",this._onMeshAssetRemove,this),e.off("change",this._onMeshAssetChange,this)},n._onMeshAssetLoad=function(e){this._onMeshChanged(e.resource)},n._onMeshAssetUnload=function(e){this.mesh=null},n._onMeshAssetRemove=function(e){this._onMeshAssetUnload(e)},n._onMeshAssetChange=function(e){},n.onSetMeshAsset=function(e,t,n){var i=this.system.app.assets;if(t){var a=i.get(t);a&&this._unbindMeshAsset(a)}if(n){n instanceof eS&&(this.data.meshAsset=n.id,n=n.id);var s=i.get(n);s&&this._bindMeshAsset(s)}else this._onMeshChanged(null)},n.onSetMesh=function(e,t,n){!n||n instanceof eS||"number"==typeof n?this.meshAsset=n:this._onMeshChanged(n)},n._onMeshChanged=function(e){!e||e instanceof og||(e=e.meshInstances[0]?e.meshInstances[0].mesh:null),this.data.mesh=e,this.emitter&&(this.emitter.mesh=e,this.emitter.resetMaterial(),this.rebuild())},n.onSetRenderAsset=function(e,t,n){var i=this.system.app.assets;if(t){var a=i.get(t);a&&this._unbindRenderAsset(a)}if(n){n instanceof eS&&(this.data.renderAsset=n.id,n=n.id);var s=i.get(n);s&&this._bindRenderAsset(s)}else this._onRenderChanged(null)},n._bindRenderAsset=function(e){if(e.on("load",this._onRenderAssetLoad,this),e.on("unload",this._onRenderAssetUnload,this),e.on("remove",this._onRenderAssetRemove,this),e.resource)this._onRenderAssetLoad(e);else{if(!this.enabled||!this.entity.enabled)return;this.system.app.assets.load(e)}},n._unbindRenderAsset=function(e){e.off("load",this._onRenderAssetLoad,this),e.off("unload",this._onRenderAssetUnload,this),e.off("remove",this._onRenderAssetRemove,this),e.resource&&e.resource.off("set:meshes",this._onRenderSetMeshes,this)},n._onRenderAssetLoad=function(e){this._onRenderChanged(e.resource)},n._onRenderAssetUnload=function(e){this._onRenderChanged(null)},n._onRenderAssetRemove=function(e){this._onRenderAssetUnload(e)},n._onRenderChanged=function(e){e?(e.off("set:meshes",this._onRenderSetMeshes,this),e.on("set:meshes",this._onRenderSetMeshes,this),e.meshes&&this._onRenderSetMeshes(e.meshes)):this._onMeshChanged(null)},n._onRenderSetMeshes=function(e){this._onMeshChanged(e&&e[0])},n.onSetLoop=function(e,t,n){this.emitter&&(this.emitter[e]=n,this.emitter.resetTime())},n.onSetBlendType=function(e,t,n){this.emitter&&(this.emitter[e]=n,this.emitter.material.blendType=n,this.emitter.resetMaterial(),this.rebuild())},n._requestDepth=function(){this._requestedDepth||(rM||(rM=this.system.app.scene.layers.getLayerById(zu)),rM&&(rM.incrementCounter(),this._requestedDepth=!0))},n._releaseDepth=function(){this._requestedDepth&&rM&&(rM.decrementCounter(),this._requestedDepth=!1)},n.onSetDepthSoftening=function(e,t,n){t!==n&&(n?(this.enabled&&this.entity.enabled&&this._requestDepth(),this.emitter&&(this.emitter[e]=n)):(this.enabled&&this.entity.enabled&&this._releaseDepth(),this.emitter&&(this.emitter[e]=n)),this.emitter&&(this.reset(),this.emitter.resetMaterial(),this.rebuild()))},n.onSetSimpleProperty=function(e,t,n){this.emitter&&(this.emitter[e]=n,this.emitter.resetMaterial())},n.onSetComplexProperty=function(e,t,n){this.emitter&&(this.emitter[e]=n,this.emitter.resetMaterial(),this.rebuild(),this.reset())},n.onSetGraphProperty=function(e,t,n){this.emitter&&(this.emitter[e]=n,this.emitter.rebuildGraphs(),this.emitter.resetMaterial())},n.onEnable=function(){for(var e=this.data,t=0,n=hM.length;t<n;t++){var i=e[hM[t]];if(i){if(!(i instanceof eS)){if(!(parseInt(i,10)>=0))continue;i=this.system.app.assets.get(i)}i&&!i.resource&&this.system.app.assets.load(i)}}if(!this.system.app.graphicsDevice.disableParticleSystem){if(!this.emitter){var a=e.mesh;a instanceof og||(a=null),this.emitter=new kx(this.system.app.graphicsDevice,{numParticles:e.numParticles,emitterExtents:e.emitterExtents,emitterExtentsInner:e.emitterExtentsInner,emitterRadius:e.emitterRadius,emitterRadiusInner:e.emitterRadiusInner,emitterShape:e.emitterShape,initialVelocity:e.initialVelocity,wrap:e.wrap,localSpace:e.localSpace,screenSpace:e.screenSpace,wrapBounds:e.wrapBounds,lifetime:e.lifetime,rate:e.rate,rate2:e.rate2,orientation:e.orientation,particleNormal:e.particleNormal,animTilesX:e.animTilesX,animTilesY:e.animTilesY,animStartFrame:e.animStartFrame,animNumFrames:e.animNumFrames,animNumAnimations:e.animNumAnimations,animIndex:e.animIndex,randomizeAnimIndex:e.randomizeAnimIndex,animSpeed:e.animSpeed,animLoop:e.animLoop,startAngle:e.startAngle,startAngle2:e.startAngle2,scaleGraph:e.scaleGraph,scaleGraph2:e.scaleGraph2,colorGraph:e.colorGraph,colorGraph2:e.colorGraph2,alphaGraph:e.alphaGraph,alphaGraph2:e.alphaGraph2,localVelocityGraph:e.localVelocityGraph,localVelocityGraph2:e.localVelocityGraph2,velocityGraph:e.velocityGraph,velocityGraph2:e.velocityGraph2,rotationSpeedGraph:e.rotationSpeedGraph,rotationSpeedGraph2:e.rotationSpeedGraph2,radialSpeedGraph:e.radialSpeedGraph,radialSpeedGraph2:e.radialSpeedGraph2,colorMap:e.colorMap,normalMap:e.normalMap,loop:e.loop,preWarm:e.preWarm,sort:e.sort,stretch:e.stretch,alignToMotion:e.alignToMotion,lighting:e.lighting,halfLambert:e.halfLambert,intensity:e.intensity,depthSoftening:e.depthSoftening,scene:this.system.app.scene,mesh:a,depthWrite:e.depthWrite,noFog:e.noFog,node:this.entity,blendType:e.blendType}),this.emitter.meshInstance.node=this.entity,this.emitter.drawOrder=this.drawOrder,e.autoPlay||(this.pause(),this.emitter.meshInstance.visible=!1)}this.emitter.colorMap&&this.addMeshInstanceToLayers(),this.system.app.scene.on("set:layers",this.onLayersChanged,this),this.system.app.scene.layers&&(this.system.app.scene.layers.on("add",this.onLayerAdded,this),this.system.app.scene.layers.on("remove",this.onLayerRemoved,this)),this.enabled&&this.entity.enabled&&e.depthSoftening&&this._requestDepth()}},n.onDisable=function(){this.system.app.scene.off("set:layers",this.onLayersChanged,this),this.system.app.scene.layers&&(this.system.app.scene.layers.off("add",this.onLayerAdded,this),this.system.app.scene.layers.off("remove",this.onLayerRemoved,this)),this.emitter&&(this.removeMeshInstanceFromLayers(),this.data.depthSoftening&&this._releaseDepth(),this.emitter.camera=null)},n.onBeforeRemove=function(){this.enabled&&(this.enabled=!1),this.emitter&&(this.emitter.destroy(),this.emitter=null);for(var e=0;e<hM.length;e++){var t=hM[e];this.data[t]&&(this[t]=null)}this.off()},n.reset=function(){this.emitter&&this.emitter.reset()},n.stop=function(){this.emitter&&(this.emitter.loop=!1,this.emitter.resetTime(),this.emitter.addTime(0,!0))},n.pause=function(){this.data.paused=!0},n.unpause=function(){this.data.paused=!1},n.play=function(){this.data.paused=!1,this.emitter&&(this.emitter.meshInstance.visible=!0,this.emitter.loop=this.data.loop,this.emitter.resetTime())},n.isPlaying=function(){return!this.data.paused&&(!(!this.emitter||!this.emitter.loop)||Date.now()<=this.emitter.endTime)},n.rebuild=function(){var e=this.enabled;this.enabled=!1,this.emitter&&(this.emitter.rebuild(),this.emitter.meshInstance.node=this.entity),this.enabled=e},q(t,[{key:"drawOrder",get:function(){return this._drawOrder},set:function(e){this._drawOrder=e,this.emitter&&(this.emitter.drawOrder=e)}}]),t}(zS),dM=function(){this.numParticles=1,this.rate=1,this.rate2=null,this.startAngle=0,this.startAngle2=null,this.lifetime=50,this.emitterExtents=new pt,this.emitterExtentsInner=new pt,this.emitterRadius=0,this.emitterRadiusInner=0,this.emitterShape=ym,this.initialVelocity=0,this.wrapBounds=new pt,this.localSpace=!1,this.screenSpace=!1,this.colorMap=null,this.colorMapAsset=null,this.normalMap=null,this.normalMapAsset=null,this.loop=!0,this.preWarm=!1,this.sort=0,this.mode=gm,this.scene=null,this.lighting=!1,this.halfLambert=!1,this.intensity=1,this.stretch=0,this.alignToMotion=!1,this.depthSoftening=0,this.meshAsset=null,this.mesh=null,this.depthWrite=!1,this.noFog=!1,this.orientation=wm,this.particleNormal=new pt(0,1,0),this.animTilesX=1,this.animTilesY=1,this.animStartFrame=0,this.animNumFrames=1,this.animNumAnimations=1,this.animIndex=0,this.randomizeAnimIndex=!1,this.animSpeed=1,this.animLoop=!0,this.scaleGraph=null,this.scaleGraph2=null,this.colorGraph=null,this.colorGraph2=null,this.alphaGraph=null,this.alphaGraph2=null,this.localVelocityGraph=null,this.localVelocityGraph2=null,this.velocityGraph=null,this.velocityGraph2=null,this.rotationSpeedGraph=null,this.rotationSpeedGraph2=null,this.radialSpeedGraph=null,this.radialSpeedGraph2=null,this.blendType=wu,this.enabled=!0,this.paused=!1,this.autoPlay=!0,this.layers=[Uu]},uM=["enabled","autoPlay","numParticles","lifetime","rate","rate2","startAngle","startAngle2","loop","preWarm","lighting","halfLambert","intensity","depthWrite","noFog","depthSoftening","sort","blendType","stretch","alignToMotion","emitterShape","emitterExtents","emitterExtentsInner","emitterRadius","emitterRadiusInner","initialVelocity","wrap","wrapBounds","localSpace","screenSpace","colorMapAsset","normalMapAsset","mesh","meshAsset","renderAsset","orientation","particleNormal","localVelocityGraph","localVelocityGraph2","velocityGraph","velocityGraph2","rotationSpeedGraph","rotationSpeedGraph2","radialSpeedGraph","radialSpeedGraph2","scaleGraph","scaleGraph2","colorGraph","colorGraph2","alphaGraph","alphaGraph2","colorMap","normalMap","animTilesX","animTilesY","animStartFrame","animNumFrames","animNumAnimations","animIndex","randomizeAnimIndex","animSpeed","animLoop","layers"],mM=function(e){function t(t){var n;return(n=e.call(this,t)||this).id="particlesystem",n.ComponentType=pM,n.DataType=dM,n.schema=uM,n.propertyTypes={emitterExtents:"vec3",emitterExtentsInner:"vec3",particleNormal:"vec3",wrapBounds:"vec3",localVelocityGraph:"curveset",localVelocityGraph2:"curveset",velocityGraph:"curveset",velocityGraph2:"curveset",colorGraph:"curveset",colorGraph2:"curveset",alphaGraph:"curve",alphaGraph2:"curve",rotationSpeedGraph:"curve",rotationSpeedGraph2:"curve",radialSpeedGraph:"curve",radialSpeedGraph2:"curve",scaleGraph:"curve",scaleGraph2:"curve"},n.on("beforeremove",n.onBeforeRemove,J(n)),n.app.systems.on("update",n.onUpdate,J(n)),n}Z(t,e);var n=t.prototype;return n.initializeComponentData=function(t,n,i){var a={};i=[];var s=this.propertyTypes;for(var r in(n.mesh instanceof eS||"number"==typeof n.mesh)&&(n.meshAsset=n.mesh,delete n.mesh),n){if(n.hasOwnProperty(r)&&(i.push(r),a[r]=n[r]),"vec3"===s[r])Array.isArray(a[r])&&(a[r]=new pt(a[r][0],a[r][1],a[r][2]));else if("curve"===s[r]){if(!(a[r]instanceof ct)){var o=a[r].type;a[r]=new ct(a[r].keys),a[r].type=o}}else if("curveset"===s[r]&&!(a[r]instanceof ht)){var l=a[r].type;a[r]=new ht(a[r].keys),a[r].type=l}a.layers&&Array.isArray(a.layers)&&(a.layers=a.layers.slice(0))}e.prototype.initializeComponentData.call(this,t,a,i)},n.cloneComponent=function(e,t){for(var n=e.particlesystem.data,i=this.schema,a={},s=0,r=i.length;s<r;s++){var o=i[s],l=n[o];l instanceof pt||l instanceof ct||l instanceof ht?(l=l.clone(),a[o]=l):"layers"===o?a.layers=n.layers.slice(0):null!=l&&(a[o]=l)}return this.addComponent(t,a)},n.onUpdate=function(e){for(var t,n=this.store,i=this.app.stats.particles,a=this.app.scene.layers,s=0;s<a.layerList.length;s++)a.layerList[s].requiresLightCube=!1;for(var r in n)if(n.hasOwnProperty(r)){var o=n[r],l=o.entity,c=o.data;if(c.enabled&&l.enabled){var h=l.particlesystem.emitter;if(null==h||!h.meshInstance.visible)continue;if(h.lighting)for(var p=c.layers,d=0;d<p.length;d++){var u=a.getLayerById(p[d]);u&&(u.requiresLightCube=!0)}if(!c.paused){if(h.simTime+=e,h.simTime>h.fixedTimeStep&&(t=Math.floor(h.simTime/h.fixedTimeStep),h.simTime-=t*h.fixedTimeStep),t){t=Math.min(t,h.maxSubSteps);for(var m=0;m<t;m++)h.addTime(h.fixedTimeStep,!1);i._updatesPerFrame+=t,i._frameTime+=h._addTimeTime,h._addTimeTime=0}h.finishFrame()}}}},n.onBeforeRemove=function(e,t){t.onBeforeRemove()},n.destroy=function(){e.prototype.destroy.call(this),this.app.systems.off("update",this.onUpdate,this)},t}(VS);zS._buildAccessors(pM.prototype,uM);var fM=function(e){function t(t,n){var i;return(i=e.call(this)||this).skin=t,i.skinInstance=n,i}return Z(t,e),t}(ng),gM=function(){function e(){}return e.createCachedSkinInstance=function(t,n,i){var a=e.getCachedSkinInstance(t,n);return a||((a=new rv(t)).resolve(n,i),e.addCachedSkinInstance(t,n,a)),a},e.getCachedSkinInstance=function(t,n){var i=null,a=e._skinInstanceCache.get(n);if(a){var s=a.find((function(e){return e.skin===t}));s&&(s.incRefCount(),i=s.skinInstance)}return i},e.addCachedSkinInstance=function(t,n,i){var a=e._skinInstanceCache.get(n);a||(a=[],e._skinInstanceCache.set(n,a));var s=a.find((function(e){return e.skin===t}));s||(s=new fM(t,i),a.push(s)),s.incRefCount()},e.removeCachedSkinInstance=function(t){if(t){var n=t.rootBone;if(n){var i=e._skinInstanceCache.get(n);if(i){var a=i.findIndex((function(e){return e.skinInstance===t}));if(a>=0){var s=i[a];s.decRefCount(),0===s.refCount&&(i.splice(a,1),i.length||e._skinInstanceCache.delete(n),t&&(t.destroy(),s.skinInstance=null))}}}}},e}();gM._skinInstanceCache=new Map;var vM=function(){function e(e,t,n,i,a){this.propertyName=e,this.parent=t,this._scope=a,this._registry=n,this.id=null,this.url=null,this.asset=null,this._onAssetLoad=i.load,this._onAssetAdd=i.add,this._onAssetRemove=i.remove,this._onAssetUnload=i.unload}var t=e.prototype;return t._bind=function(){this.id&&(this._onAssetLoad&&this._registry.on("load:"+this.id,this._onLoad,this),this._onAssetAdd&&this._registry.once("add:"+this.id,this._onAdd,this),this._onAssetRemove&&this._registry.on("remove:"+this.id,this._onRemove,this),this._onAssetUnload&&this._registry.on("unload:"+this.id,this._onUnload,this)),this.url&&(this._onAssetLoad&&this._registry.on("load:url:"+this.url,this._onLoad,this),this._onAssetAdd&&this._registry.once("add:url:"+this.url,this._onAdd,this),this._onAssetRemove&&this._registry.on("remove:url:"+this.url,this._onRemove,this))},t._unbind=function(){this.id&&(this._onAssetLoad&&this._registry.off("load:"+this.id,this._onLoad,this),this._onAssetAdd&&this._registry.off("add:"+this.id,this._onAdd,this),this._onAssetRemove&&this._registry.off("remove:"+this.id,this._onRemove,this),this._onAssetUnload&&this._registry.off("unload:"+this.id,this._onUnload,this)),this.url&&(this._onAssetLoad&&this._registry.off("load:"+this.url,this._onLoad,this),this._onAssetAdd&&this._registry.off("add:"+this.url,this._onAdd,this),this._onAssetRemove&&this._registry.off("remove:"+this.url,this._onRemove,this))},t._onLoad=function(e){this._onAssetLoad.call(this._scope,this.propertyName,this.parent,e)},t._onAdd=function(e){this.asset=e,this._onAssetAdd.call(this._scope,this.propertyName,this.parent,e)},t._onRemove=function(e){this._onAssetRemove.call(this._scope,this.propertyName,this.parent,e),this.asset=null},t._onUnload=function(e){this._onAssetUnload.call(this._scope,this.propertyName,this.parent,e)},q(e,[{key:"id",get:function(){return this._id},set:function(e){if(this.url)throw Error("Can't set id and url");this._unbind(),this._id=e,this.asset=this._registry.get(this._id),this._bind()}},{key:"url",get:function(){return this._url},set:function(e){if(this.id)throw Error("Can't set id and url");this._unbind(),this._url=e,this.asset=this._registry.getByUrl(this._url),this._bind()}}]),e}(),yM=function(e){function t(t,n){var i;return(i=e.call(this,t,n)||this)._type="asset",i._castShadows=!0,i._receiveShadows=!0,i._castShadowsLightmap=!0,i._lightmapped=!1,i._lightmapSizeMultiplier=1,i.isStatic=!1,i._batchGroupId=-1,i._layers=[Uu],i._renderStyle=Em,i._meshInstances=[],i._customAabb=null,i._area=null,i._assetReference=[],i._materialReferences=[],i._material=void 0,i._rootBone=void 0,i._rootBone=new lT(J(i),"rootBone"),i._rootBone.on("set:entity",i._onSetRootBone,J(i)),i._assetReference=new vM("asset",J(i),t.app.assets,{add:i._onRenderAssetAdded,load:i._onRenderAssetLoad,remove:i._onRenderAssetRemove,unload:i._onRenderAssetUnload},J(i)),i._material=t.defaultMaterial,n.on("remove",i.onRemoveChild,J(i)),n.on("removehierarchy",i.onRemoveChild,J(i)),n.on("insert",i.onInsertChild,J(i)),n.on("inserthierarchy",i.onInsertChild,J(i)),i}Z(t,e);var n=t.prototype;return n.assignAsset=function(e){var t=e instanceof eS?e.id:e;this._assetReference.id=t},n._onSetRootBone=function(e){e&&this._onRootBoneChanged()},n._onRootBoneChanged=function(){this._clearSkinInstances(),this.enabled&&this.entity.enabled&&this._cloneSkinInstances()},n.destroyMeshInstances=function(){var e=this._meshInstances;if(e){this.removeFromLayers(),this._clearSkinInstances();for(var t=0;t<e.length;t++)e[t].destroy();this._meshInstances.length=0}},n.addToLayers=function(){for(var e=this.system.app.scene.layers,t=0;t<this._layers.length;t++){var n=e.getLayerById(this._layers[t]);n&&n.addMeshInstances(this._meshInstances)}},n.removeFromLayers=function(){if(this._meshInstances&&this._meshInstances.length)for(var e=this.system.app.scene.layers,t=0;t<this._layers.length;t++){var n=e.getLayerById(this._layers[t]);n&&n.removeMeshInstances(this._meshInstances)}},n.onRemoveChild=function(){this.removeFromLayers()},n.onInsertChild=function(){this._meshInstances&&this.enabled&&this.entity.enabled&&this.addToLayers()},n.onRemove=function(){this.destroyMeshInstances(),this.asset=null,this.materialAsset=null,this._assetReference.id=null;for(var e=0;e<this._materialReferences.length;e++)this._materialReferences[e].id=null;this.entity.off("remove",this.onRemoveChild,this),this.entity.off("insert",this.onInsertChild,this)},n.onLayersChanged=function(e,t){this.addToLayers(),e.off("add",this.onLayerAdded,this),e.off("remove",this.onLayerRemoved,this),t.on("add",this.onLayerAdded,this),t.on("remove",this.onLayerRemoved,this)},n.onLayerAdded=function(e){this.layers.indexOf(e.id)<0||e.addMeshInstances(this._meshInstances)},n.onLayerRemoved=function(e){this.layers.indexOf(e.id)<0||e.removeMeshInstances(this._meshInstances)},n.onEnable=function(){var e=this.system.app,t=e.scene;this._rootBone.onParentComponentEnable(),this._cloneSkinInstances(),t.on("set:layers",this.onLayersChanged,this),t.layers&&(t.layers.on("add",this.onLayerAdded,this),t.layers.on("remove",this.onLayerRemoved,this));var n,i="asset"===this._type;this._meshInstances&&this._meshInstances.length?this.addToLayers():i&&this.asset&&this._onRenderAssetAdded();for(var a=0;a<this._materialReferences.length;a++)this._materialReferences[a].asset&&this.system.app.assets.load(this._materialReferences[a].asset);this._batchGroupId>=0&&(null==(n=e.batcher)||n.insert(av.RENDER,this.batchGroupId,this.entity))},n.onDisable=function(){var e,t=this.system.app,n=t.scene;n.off("set:layers",this.onLayersChanged,this),n.layers&&(n.layers.off("add",this.onLayerAdded,this),n.layers.off("remove",this.onLayerRemoved,this)),this._batchGroupId>=0&&(null==(e=t.batcher)||e.remove(av.RENDER,this.batchGroupId,this.entity)),this.removeFromLayers()},n.hide=function(){if(this._meshInstances)for(var e=0;e<this._meshInstances.length;e++)this._meshInstances[e].visible=!1},n.show=function(){if(this._meshInstances)for(var e=0;e<this._meshInstances.length;e++)this._meshInstances[e].visible=!0},n._onRenderAssetAdded=function(){this._assetReference.asset&&(this._assetReference.asset.resource?this._onRenderAssetLoad():this.enabled&&this.entity.enabled&&this.system.app.assets.load(this._assetReference.asset))},n._onRenderAssetLoad=function(){if(this.destroyMeshInstances(),this._assetReference.asset){var e=this._assetReference.asset.resource;e.off("set:meshes",this._onSetMeshes,this),e.on("set:meshes",this._onSetMeshes,this),e.meshes&&this._onSetMeshes(e.meshes)}},n._onSetMeshes=function(e){this._cloneMeshes(e)},n._clearSkinInstances=function(){for(var e=0;e<this._meshInstances.length;e++){var t=this._meshInstances[e];gM.removeCachedSkinInstance(t.skinInstance),t.skinInstance=null}},n._cloneSkinInstances=function(){if(this._meshInstances.length&&this._rootBone.entity instanceof Cv)for(var e=0;e<this._meshInstances.length;e++){var t=this._meshInstances[e],n=t.mesh;n.skin&&!t.skinInstance&&(t.skinInstance=gM.createCachedSkinInstance(n.skin,this._rootBone.entity,this.entity))}},n._cloneMeshes=function(e){if(e&&e.length){for(var t=[],n=0;n<e.length;n++){var i=e[n],a=this._materialReferences[n]&&this._materialReferences[n].asset&&this._materialReferences[n].asset.resource,s=new Dv(i,a||this.system.defaultMaterial,this.entity);t.push(s),i.morph&&(s.morphInstance=new Lb(i.morph))}this.meshInstances=t,this._cloneSkinInstances()}},n._onRenderAssetUnload=function(){"asset"===this._type&&this.destroyMeshInstances()},n._onRenderAssetRemove=function(){this._assetReference.asset&&this._assetReference.asset.resource&&this._assetReference.asset.resource.off("set:meshes",this._onSetMeshes,this),this._onRenderAssetUnload()},n._onMaterialAdded=function(e,t,n){n.resource?this._onMaterialLoad(e,t,n):this.enabled&&this.entity.enabled&&this.system.app.assets.load(n)},n._updateMainMaterial=function(e,t){0===e&&(this.material=t)},n._onMaterialLoad=function(e,t,n){this._meshInstances[e]&&(this._meshInstances[e].material=n.resource),this._updateMainMaterial(e,n.resource)},n._onMaterialRemove=function(e,t,n){this._meshInstances[e]&&(this._meshInstances[e].material=this.system.defaultMaterial),this._updateMainMaterial(e,this.system.defaultMaterial)},n._onMaterialUnload=function(e,t,n){this._meshInstances[e]&&(this._meshInstances[e].material=this.system.defaultMaterial),this._updateMainMaterial(e,this.system.defaultMaterial)},n.resolveDuplicatedEntityReferenceProperties=function(e,t){e.rootBone&&t[e.rootBone]&&(this.rootBone=t[e.rootBone]),this._clearSkinInstances()},q(t,[{key:"renderStyle",get:function(){return this._renderStyle},set:function(e){this._renderStyle!==e&&(this._renderStyle=e,Dv._prepareRenderStyleForArray(this._meshInstances,e))}},{key:"customAabb",get:function(){return this._customAabb},set:function(e){this._customAabb=e;var t=this._meshInstances;if(t)for(var n=0;n<t.length;n++)t[n].setCustomAabb(this._customAabb)}},{key:"type",get:function(){return this._type},set:function(e){if(this._type!==e&&(this._area=null,this._type=e,this.destroyMeshInstances(),"asset"!==e)){var t=this._material;t&&t!==this.system.defaultMaterial||(t=this._materialReferences[0]&&this._materialReferences[0].asset&&this._materialReferences[0].asset.resource);var n=xg(this.system.app.graphicsDevice,e);this._area=n.area,this.meshInstances=[new Dv(n.mesh,t||this.system.defaultMaterial,this.entity)]}}},{key:"meshInstances",get:function(){return this._meshInstances},set:function(e){if(this.destroyMeshInstances(),this._meshInstances=e,this._meshInstances){for(var t=this._meshInstances,n=0;n<t.length;n++)t[n].node||(t[n].node=this.entity),t[n].castShadow=this._castShadows,t[n].receiveShadow=this._receiveShadows,t[n].renderStyle=this._renderStyle,t[n].setLightmapped(this._lightmapped),t[n].setCustomAabb(this._customAabb);this.enabled&&this.entity.enabled&&this.addToLayers()}}},{key:"lightmapped",get:function(){return this._lightmapped},set:function(e){if(e!==this._lightmapped){this._lightmapped=e;var t=this._meshInstances;if(t)for(var n=0;n<t.length;n++)t[n].setLightmapped(e)}}},{key:"castShadows",get:function(){return this._castShadows},set:function(e){if(this._castShadows!==e){var t=this._meshInstances;if(t){var n=this.layers,i=this.system.app.scene;if(this._castShadows&&!e)for(var a=0;a<n.length;a++){var s=i.layers.getLayerById(this.layers[a]);s&&s.removeShadowCasters(t)}for(var r=0;r<t.length;r++)t[r].castShadow=e;if(!this._castShadows&&e)for(var o=0;o<n.length;o++){var l=i.layers.getLayerById(n[o]);l&&l.addShadowCasters(t)}}this._castShadows=e}}},{key:"receiveShadows",get:function(){return this._receiveShadows},set:function(e){if(this._receiveShadows!==e){this._receiveShadows=e;var t=this._meshInstances;if(t)for(var n=0;n<t.length;n++)t[n].receiveShadow=e}}},{key:"castShadowsLightmap",get:function(){return this._castShadowsLightmap},set:function(e){this._castShadowsLightmap=e}},{key:"lightmapSizeMultiplier",get:function(){return this._lightmapSizeMultiplier},set:function(e){this._lightmapSizeMultiplier=e}},{key:"layers",get:function(){return this._layers},set:function(e){var t,n=this.system.app.scene.layers;if(this._meshInstances)for(var i=0;i<this._layers.length;i++)(t=n.getLayerById(this._layers[i]))&&t.removeMeshInstances(this._meshInstances);this._layers.length=0;for(var a=0;a<e.length;a++)this._layers[a]=e[a];if(this.enabled&&this.entity.enabled&&this._meshInstances)for(var s=0;s<this._layers.length;s++)(t=n.getLayerById(this._layers[s]))&&t.addMeshInstances(this._meshInstances)}},{key:"batchGroupId",get:function(){return this._batchGroupId},set:function(e){var t,n;this._batchGroupId!==e&&(this.entity.enabled&&this._batchGroupId>=0&&(null==(t=this.system.app.batcher)||t.remove(av.RENDER,this.batchGroupId,this.entity)),this.entity.enabled&&e>=0&&(null==(n=this.system.app.batcher)||n.insert(av.RENDER,e,this.entity)),e<0&&this._batchGroupId>=0&&this.enabled&&this.entity.enabled&&this.addToLayers(),this._batchGroupId=e)}},{key:"material",get:function(){return this._material},set:function(e){if(this._material!==e&&(this._material=e,this._meshInstances&&"asset"!==this._type))for(var t=0;t<this._meshInstances.length;t++)this._meshInstances[t].material=e}},{key:"materialAssets",get:function(){return this._materialReferences.map((function(e){return e.id}))},set:function(e){if(void 0===e&&(e=[]),this._materialReferences.length>e.length){for(var t=e.length;t<this._materialReferences.length;t++)this._materialReferences[t].id=null;this._materialReferences.length=e.length}for(var n=0;n<e.length;n++)if(this._materialReferences[n]||this._materialReferences.push(new vM(n,this,this.system.app.assets,{add:this._onMaterialAdded,load:this._onMaterialLoad,remove:this._onMaterialRemove,unload:this._onMaterialUnload},this)),e[n]){var i=e[n]instanceof eS?e[n].id:e[n];this._materialReferences[n].id!==i&&(this._materialReferences[n].id=i),this._materialReferences[n].asset&&this._onMaterialAdded(n,this,this._materialReferences[n].asset)}else this._materialReferences[n].id=null,this._meshInstances[n]&&(this._meshInstances[n].material=this.system.defaultMaterial)}},{key:"asset",get:function(){return this._assetReference.id},set:function(e){var t=e instanceof eS?e.id:e;this._assetReference.id!==t&&(this._assetReference.asset&&this._assetReference.asset.resource&&this._onRenderAssetRemove(),this._assetReference.id=t,this._assetReference.asset&&this._onRenderAssetAdded())}}]),t}(zS),_M=function(){this.enabled=!0,this.rootBone=null},wM=[{name:"rootBone",type:"entity"},"enabled"],bM=["material","meshInstances","asset","materialAssets","castShadows","receiveShadows","castShadowsLightmap","lightmapped","lightmapSizeMultiplier","renderStyle","type","layers","isStatic","batchGroupId"],xM=function(e){function t(t){var n;return(n=e.call(this,t)||this).id="render",n.ComponentType=yM,n.DataType=_M,n.schema=wM,n.defaultMaterial=Qg(t.graphicsDevice),n.on("beforeremove",n.onRemove,J(n)),n}Z(t,e);var n=t.prototype;return n.initializeComponentData=function(t,n,i){null!==n.batchGroupId&&void 0!==n.batchGroupId||(n.batchGroupId=-1),n.layers&&n.layers.length&&(n.layers=n.layers.slice(0));for(var a=0;a<bM.length;a++)n.hasOwnProperty(bM[a])&&(t[bM[a]]=n[bM[a]]);n.aabbCenter&&n.aabbHalfExtents&&(t.customAabb=new Ot(new pt(n.aabbCenter),new pt(n.aabbHalfExtents))),e.prototype.initializeComponentData.call(this,t,n,wM)},n.cloneComponent=function(e,t){for(var n={},i=0;i<bM.length;i++)n[bM[i]]=e.render[bM[i]];n.enabled=e.render.enabled,delete n.meshInstances;var a=this.addComponent(t,n),s=e.render.meshInstances,r=s.map((function(e){return e.mesh}));a._onSetMeshes(r);for(var o=0;o<s.length;o++)a.meshInstances[o].material=s[o].material;return e.render.customAabb&&(a.customAabb=e.render.customAabb.clone()),a},n.onRemove=function(e,t){t.onRemove()},t}(VS);zS._buildAccessors(yM.prototype,wM);var CM,SM,EM,TM,AM,LM,MM=function(){function e(e,t){this._pool=[],this._count=0,this._constructor=e,this._resize(t)}var t=e.prototype;return t._resize=function(e){if(e>this._pool.length)for(var t=this._pool.length;t<e;t++)this._pool[t]=new this._constructor},t.allocate=function(){return this._count>=this._pool.length&&this._resize(2*this._pool.length),this._pool[this._count++]},t.freeAll=function(){this._count=0},e}(),PM=new Et,OM=new Et,IM=new pt,RM=function(e){function t(t,n){var i;return(i=e.call(this,t,n)||this)._angularDamping=0,i._angularFactor=new pt(1,1,1),i._angularVelocity=new pt,i._body=null,i._friction=.5,i._group=YT,i._linearDamping=0,i._linearFactor=new pt(1,1,1),i._linearVelocity=new pt,i._mask=hA,i._mass=1,i._restitution=0,i._rollingFriction=0,i._simulationEnabled=!1,i._type=RT,i}Z(t,e),t.onLibraryLoaded=function(){"undefined"!=typeof Ammo&&(CM=new Ammo.btTransform,SM=new Ammo.btVector3,EM=new Ammo.btVector3,TM=new Ammo.btQuaternion)};var n=t.prototype;return n.createBody=function(){var e,t=this.entity;if(t.collision&&(e=t.collision.shape,t.trigger&&(t.trigger.destroy(),delete t.trigger)),e){this._body&&this.system.onRemove(t,this);var n=this._type===DT?this._mass:0;this._getEntityTransform(CM);var i=this.system.createBody(n,e,CM);if(i.setRestitution(this._restitution),i.setFriction(this._friction),i.setRollingFriction(this._rollingFriction),i.setDamping(this._linearDamping,this._angularDamping),this._type===DT){var a=this._linearFactor;SM.setValue(a.x,a.y,a.z),i.setLinearFactor(SM);var s=this._angularFactor;SM.setValue(s.x,s.y,s.z),i.setAngularFactor(SM)}else this._type===kT&&(i.setCollisionFlags(i.getCollisionFlags()|BT),i.setActivationState(HT));i.entity=t,this.body=i,this.enabled&&t.enabled&&this.enableSimulation()}},n.isActive=function(){return!!this._body&&this._body.isActive()},n.activate=function(){this._body&&this._body.activate()},n.enableSimulation=function(){var e=this.entity;if(e.collision&&e.collision.enabled&&!this._simulationEnabled){var t=this._body;if(t){switch(this.system.addBody(t,this._group,this._mask),this._type){case DT:this.system._dynamic.push(this),t.forceActivationState(UT),this.syncEntityToBody();break;case kT:this.system._kinematic.push(this),t.forceActivationState(HT);break;case RT:t.forceActivationState(UT),this.syncEntityToBody()}"compound"===e.collision.type&&this.system._compounds.push(e.collision),t.activate(),this._simulationEnabled=!0}}},n.disableSimulation=function(){var e=this._body;if(e&&this._simulationEnabled){var t=this.system,n=t._compounds.indexOf(this.entity.collision);n>-1&&t._compounds.splice(n,1),(n=t._dynamic.indexOf(this))>-1&&t._dynamic.splice(n,1),(n=t._kinematic.indexOf(this))>-1&&t._kinematic.splice(n,1),t.removeBody(e),e.forceActivationState(GT),this._simulationEnabled=!1}},n.applyForce=function(e,t,n,i,a,s){var r=this._body;r&&(r.activate(),e instanceof pt?SM.setValue(e.x,e.y,e.z):SM.setValue(e,t,n),t instanceof pt?EM.setValue(t.x,t.y,t.z):void 0!==i?EM.setValue(i,a,s):EM.setValue(0,0,0),r.applyForce(SM,EM))},n.applyTorque=function(e,t,n){var i=this._body;i&&(i.activate(),e instanceof pt?SM.setValue(e.x,e.y,e.z):SM.setValue(e,t,n),i.applyTorque(SM))},n.applyImpulse=function(e,t,n,i,a,s){var r=this._body;r&&(r.activate(),e instanceof pt?SM.setValue(e.x,e.y,e.z):SM.setValue(e,t,n),t instanceof pt?EM.setValue(t.x,t.y,t.z):void 0!==i?EM.setValue(i,a,s):EM.setValue(0,0,0),r.applyImpulse(SM,EM))},n.applyTorqueImpulse=function(e,t,n){var i=this._body;i&&(i.activate(),e instanceof pt?SM.setValue(e.x,e.y,e.z):SM.setValue(e,t,n),i.applyTorqueImpulse(SM))},n.isStatic=function(){return this._type===RT},n.isStaticOrKinematic=function(){return this._type===RT||this._type===kT},n.isKinematic=function(){return this._type===kT},n._getEntityTransform=function(e){var t=this.entity,n=t.collision;if(n){var i=n.getShapePosition(),a=n.getShapeRotation();SM.setValue(i.x,i.y,i.z),TM.setValue(a.x,a.y,a.z,a.w)}else{var s=t.getPosition(),r=t.getRotation();SM.setValue(s.x,s.y,s.z),TM.setValue(r.x,r.y,r.z,r.w)}e.setOrigin(SM),e.setRotation(TM)},n.syncEntityToBody=function(){var e=this._body;if(e){if(this._getEntityTransform(CM),e.setWorldTransform(CM),this._type===kT){var t=e.getMotionState();t&&t.setWorldTransform(CM)}e.activate()}},n._updateDynamic=function(){var e=this._body;if(e.isActive()){var t=e.getMotionState();if(t){var n=this.entity;t.getWorldTransform(CM);var i=CM.getOrigin(),a=CM.getRotation(),s=n.collision;if(s&&s._hasOffset){var r=s.data.linearOffset,o=s.data.angularOffset,l=OM.copy(o).invert(),c=PM.set(a.x(),a.y(),a.z(),a.w()).mul(l);c.transformVector(r,IM),n.setPosition(i.x()-IM.x,i.y()-IM.y,i.z()-IM.z),n.setRotation(c)}else n.setPosition(i.x(),i.y(),i.z()),n.setRotation(a.x(),a.y(),a.z(),a.w())}}},n._updateKinematic=function(){var e=this._body.getMotionState();e&&(this._getEntityTransform(CM),e.setWorldTransform(CM))},n.teleport=function(e,t,n,i,a,s){e instanceof pt?this.entity.setPosition(e):this.entity.setPosition(e,t,n),t instanceof Et?this.entity.setRotation(t):t instanceof pt?this.entity.setEulerAngles(t):void 0!==i&&this.entity.setEulerAngles(i,a,s),this.syncEntityToBody()},n.onEnable=function(){this._body||this.createBody(),this.enableSimulation()},n.onDisable=function(){this.disableSimulation()},q(t,[{key:"angularDamping",get:function(){return this._angularDamping},set:function(e){this._angularDamping!==e&&(this._angularDamping=e,this._body&&this._body.setDamping(this._linearDamping,e))}},{key:"angularFactor",get:function(){return this._angularFactor},set:function(e){this._angularFactor.equals(e)||(this._angularFactor.copy(e),this._body&&this._type===DT&&(SM.setValue(e.x,e.y,e.z),this._body.setAngularFactor(SM)))}},{key:"angularVelocity",get:function(){if(this._body&&this._type===DT){var e=this._body.getAngularVelocity();this._angularVelocity.set(e.x(),e.y(),e.z())}return this._angularVelocity},set:function(e){this._body&&this._type===DT&&(this._body.activate(),SM.setValue(e.x,e.y,e.z),this._body.setAngularVelocity(SM),this._angularVelocity.copy(e))}},{key:"body",get:function(){return this._body},set:function(e){this._body!==e&&(this._body=e,e&&this._simulationEnabled&&e.activate())}},{key:"friction",get:function(){return this._friction},set:function(e){this._friction!==e&&(this._friction=e,this._body&&this._body.setFriction(e))}},{key:"group",get:function(){return this._group},set:function(e){this._group!==e&&(this._group=e,this.enabled&&this.entity.enabled&&(this.disableSimulation(),this.enableSimulation()))}},{key:"linearDamping",get:function(){return this._linearDamping},set:function(e){this._linearDamping!==e&&(this._linearDamping=e,this._body&&this._body.setDamping(e,this._angularDamping))}},{key:"linearFactor",get:function(){return this._linearFactor},set:function(e){this._linearFactor.equals(e)||(this._linearFactor.copy(e),this._body&&this._type===DT&&(SM.setValue(e.x,e.y,e.z),this._body.setLinearFactor(SM)))}},{key:"linearVelocity",get:function(){if(this._body&&this._type===DT){var e=this._body.getLinearVelocity();this._linearVelocity.set(e.x(),e.y(),e.z())}return this._linearVelocity},set:function(e){this._body&&this._type===DT&&(this._body.activate(),SM.setValue(e.x,e.y,e.z),this._body.setLinearVelocity(SM),this._linearVelocity.copy(e))}},{key:"mask",get:function(){return this._mask},set:function(e){this._mask!==e&&(this._mask=e,this.enabled&&this.entity.enabled&&(this.disableSimulation(),this.enableSimulation()))}},{key:"mass",get:function(){return this._mass},set:function(e){if(this._mass!==e&&(this._mass=e,this._body&&this._type===DT)){var t=this.enabled&&this.entity.enabled;t&&this.disableSimulation(),this._body.getCollisionShape().calculateLocalInertia(e,SM),this._body.setMassProps(e,SM),this._body.updateInertiaTensor(),t&&this.enableSimulation()}}},{key:"restitution",get:function(){return this._restitution},set:function(e){this._restitution!==e&&(this._restitution=e,this._body&&this._body.setRestitution(e))}},{key:"rollingFriction",get:function(){return this._rollingFriction},set:function(e){this._rollingFriction!==e&&(this._rollingFriction=e,this._body&&this._body.setRollingFriction(e))}},{key:"type",get:function(){return this._type},set:function(e){if(this._type!==e){switch(this._type=e,this.disableSimulation(),e){case DT:this._group=XT,this._mask=lA;break;case kT:this._group=qT,this._mask=lA;break;default:this._group=YT,this._mask=hA}this.createBody()}}}]),t}(zS),DM=function(){this.enabled=!0},kM=function(e,t,n,i){this.entity=e,this.point=t,this.normal=n,this.hitFraction=i},FM=function(e,t,n){0===arguments.length?(this.a=null,this.b=null,this.impulse=0,this.localPointA=new pt,this.localPointB=new pt,this.pointA=new pt,this.pointB=new pt,this.normal=new pt):(this.a=e,this.b=t,this.impulse=n.impulse,this.localPointA=n.localPoint,this.localPointB=n.localPointOther,this.pointA=n.point,this.pointB=n.pointOther,this.normal=n.normal)},BM=function(e,t,n,i,a,s){void 0===e&&(e=new pt),void 0===t&&(t=new pt),void 0===n&&(n=new pt),void 0===i&&(i=new pt),void 0===a&&(a=new pt),void 0===s&&(s=0),this.localPoint=e,this.localPointOther=t,this.point=n,this.pointOther=i,this.normal=a,this.impulse=s},NM=function(e,t){this.other=e,this.contacts=t},UM=["enabled"],zM=function(e){function t(t){var n;return(n=e.call(this,t)||this).maxSubSteps=10,n.fixedTimeStep=1/60,n.gravity=new pt(0,-9.81,0),n._gravityFloat32=new Float32Array(3),n._dynamic=[],n._kinematic=[],n._triggers=[],n._compounds=[],n.id="rigidbody",n._stats=t.stats.frame,n.ComponentType=RM,n.DataType=DM,n.contactPointPool=null,n.contactResultPool=null,n.singleContactResultPool=null,n.schema=UM,n.collisions={},n.frameCollisions={},n.on("beforeremove",n.onBeforeRemove,J(n)),n.on("remove",n.onRemove,J(n)),n}Z(t,e);var n=t.prototype;return n.onLibraryLoaded=function(){if("undefined"!=typeof Ammo){if(this.collisionConfiguration=new Ammo.btDefaultCollisionConfiguration,this.dispatcher=new Ammo.btCollisionDispatcher(this.collisionConfiguration),this.overlappingPairCache=new Ammo.btDbvtBroadphase,this.solver=new Ammo.btSequentialImpulseConstraintSolver,this.dynamicsWorld=new Ammo.btDiscreteDynamicsWorld(this.dispatcher,this.overlappingPairCache,this.solver,this.collisionConfiguration),this.dynamicsWorld.setInternalTickCallback){var e=Ammo.addFunction(this._checkForCollisions.bind(this),"vif");this.dynamicsWorld.setInternalTickCallback(e)}AM=new Ammo.btVector3,LM=new Ammo.btVector3,RM.onLibraryLoaded(),this.contactPointPool=new MM(BM,1),this.contactResultPool=new MM(NM,1),this.singleContactResultPool=new MM(FM,1),this.app.systems.on("update",this.onUpdate,this)}else this.app.systems.off("update",this.onUpdate,this)},n.initializeComponentData=function(t,n,i){for(var a=0,s=["mass","linearDamping","angularDamping","linearFactor","angularFactor","friction","rollingFriction","restitution","type","group","mask"];a<s.length;a++){var r=s[a];if(n.hasOwnProperty(r)){var o=n[r];Array.isArray(o)?t[r]=new pt(o[0],o[1],o[2]):t[r]=o}}e.prototype.initializeComponentData.call(this,t,n,["enabled"])},n.cloneComponent=function(e,t){var n=e.rigidbody,i={enabled:n.enabled,mass:n.mass,linearDamping:n.linearDamping,angularDamping:n.angularDamping,linearFactor:[n.linearFactor.x,n.linearFactor.y,n.linearFactor.z],angularFactor:[n.angularFactor.x,n.angularFactor.y,n.angularFactor.z],friction:n.friction,rollingFriction:n.rollingFriction,restitution:n.restitution,type:n.type,group:n.group,mask:n.mask};return this.addComponent(t,i)},n.onBeforeRemove=function(e,t){t.enabled&&(t.enabled=!1)},n.onRemove=function(e,t){var n=t.body;n&&(this.removeBody(n),this.destroyBody(n),t.body=null)},n.addBody=function(e,t,n){void 0!==t&&void 0!==n?this.dynamicsWorld.addRigidBody(e,t,n):this.dynamicsWorld.addRigidBody(e)},n.removeBody=function(e){this.dynamicsWorld.removeRigidBody(e)},n.createBody=function(e,t,n){var i=new Ammo.btVector3(0,0,0);0!==e&&t.calculateLocalInertia(e,i);var a=new Ammo.btDefaultMotionState(n),s=new Ammo.btRigidBodyConstructionInfo(e,a,t,i),r=new Ammo.btRigidBody(s);return Ammo.destroy(s),Ammo.destroy(i),r},n.destroyBody=function(e){var t=e.getMotionState();t&&Ammo.destroy(t),Ammo.destroy(e)},n.raycastFirst=function(e,t,n){if(void 0===n&&(n={}),n.filterTags||n.filterCallback)return n.sort=!0,this.raycastAll(e,t,n)[0]||null;var i=null;AM.setValue(e.x,e.y,e.z),LM.setValue(t.x,t.y,t.z);var a=new Ammo.ClosestRayResultCallback(AM,LM);if("number"==typeof n.filterCollisionGroup&&a.set_m_collisionFilterGroup(n.filterCollisionGroup),"number"==typeof n.filterCollisionMask&&a.set_m_collisionFilterMask(n.filterCollisionMask),this.dynamicsWorld.rayTest(AM,LM,a),a.hasHit()){var s=a.get_m_collisionObject(),r=Ammo.castObject(s,Ammo.btRigidBody);if(r){var o=a.get_m_hitPointWorld(),l=a.get_m_hitNormalWorld();i=new kM(r.entity,new pt(o.x(),o.y(),o.z()),new pt(l.x(),l.y(),l.z()),a.get_m_closestHitFraction())}}return Ammo.destroy(a),i},n.raycastAll=function(e,t,n){void 0===n&&(n={});var i=[];AM.setValue(e.x,e.y,e.z),LM.setValue(t.x,t.y,t.z);var a=new Ammo.AllHitsRayResultCallback(AM,LM);if("number"==typeof n.filterCollisionGroup&&a.set_m_collisionFilterGroup(n.filterCollisionGroup),"number"==typeof n.filterCollisionMask&&a.set_m_collisionFilterMask(n.filterCollisionMask),this.dynamicsWorld.rayTest(AM,LM,a),a.hasHit()){for(var s=a.get_m_collisionObjects(),r=a.get_m_hitPointWorld(),o=a.get_m_hitNormalWorld(),l=a.get_m_hitFractions(),c=s.size(),h=0;h<c;h++){var p=Ammo.castObject(s.at(h),Ammo.btRigidBody);if(p&&p.entity){var d;if(n.filterTags&&!(d=p.entity.tags).has.apply(d,n.filterTags)||n.filterCallback&&!n.filterCallback(p.entity))continue;var u=r.at(h),m=o.at(h),f=new kM(p.entity,new pt(u.x(),u.y(),u.z()),new pt(m.x(),m.y(),m.z()),l.at(h));i.push(f)}}n.sort&&i.sort((function(e,t){return e.hitFraction-t.hitFraction}))}return Ammo.destroy(a),i},n._storeCollision=function(e,t){var n=!1,i=e.getGuid();return this.collisions[i]=this.collisions[i]||{others:[],entity:e},this.collisions[i].others.indexOf(t)<0&&(this.collisions[i].others.push(t),n=!0),this.frameCollisions[i]=this.frameCollisions[i]||{others:[],entity:e},this.frameCollisions[i].others.push(t),n},n._createContactPointFromAmmo=function(e){var t=e.get_m_localPointA(),n=e.get_m_localPointB(),i=e.getPositionWorldOnA(),a=e.getPositionWorldOnB(),s=e.get_m_normalWorldOnB(),r=this.contactPointPool.allocate();return r.localPoint.set(t.x(),t.y(),t.z()),r.localPointOther.set(n.x(),n.y(),n.z()),r.point.set(i.x(),i.y(),i.z()),r.pointOther.set(a.x(),a.y(),a.z()),r.normal.set(s.x(),s.y(),s.z()),r.impulse=e.getAppliedImpulse(),r},n._createReverseContactPointFromAmmo=function(e){var t=e.get_m_localPointA(),n=e.get_m_localPointB(),i=e.getPositionWorldOnA(),a=e.getPositionWorldOnB(),s=e.get_m_normalWorldOnB(),r=this.contactPointPool.allocate();return r.localPointOther.set(t.x(),t.y(),t.z()),r.localPoint.set(n.x(),n.y(),n.z()),r.pointOther.set(i.x(),i.y(),i.z()),r.point.set(a.x(),a.y(),a.z()),r.normal.set(s.x(),s.y(),s.z()),r.impulse=e.getAppliedImpulse(),r},n._createSingleContactResult=function(e,t,n){var i=this.singleContactResultPool.allocate();return i.a=e,i.b=t,i.localPointA=n.localPoint,i.localPointB=n.localPointOther,i.pointA=n.point,i.pointB=n.pointOther,i.normal=n.normal,i.impulse=n.impulse,i},n._createContactResult=function(e,t){var n=this.contactResultPool.allocate();return n.other=e,n.contacts=t,n},n._cleanOldCollisions=function(){for(var e in this.collisions)if(this.collisions.hasOwnProperty(e)){for(var t=this.frameCollisions[e],n=this.collisions[e],i=n.entity,a=i.collision,s=i.rigidbody,r=n.others,o=r.length;o--;){var l=r[o];(!t||t.others.indexOf(l)<0)&&(r.splice(o,1),i.trigger?(a&&a.fire("triggerleave",l),l.rigidbody&&l.rigidbody.fire("triggerleave",i)):l.trigger||(s&&s.fire("collisionend",l),a&&a.fire("collisionend",l)))}0===r.length&&delete this.collisions[e]}},n._hasContactEvent=function(e){var t=e.collision;if(t&&(t.hasEvent("collisionstart")||t.hasEvent("collisionend")||t.hasEvent("contact")))return!0;var n=e.rigidbody;return n&&(n.hasEvent("collisionstart")||n.hasEvent("collisionend")||n.hasEvent("contact"))},n._checkForCollisions=function(e,t){var n=Ammo.wrapPointer(e,Ammo.btDynamicsWorld).getDispatcher(),i=n.getNumManifolds();this.frameCollisions={};for(var a=0;a<i;a++){var s=n.getManifoldByIndexInternal(a),r=s.getBody0(),o=s.getBody1(),l=Ammo.castObject(r,Ammo.btRigidBody),c=Ammo.castObject(o,Ammo.btRigidBody),h=l.entity,p=c.entity;if(h&&p){var d=l.getCollisionFlags(),u=c.getCollisionFlags(),m=s.getNumContacts(),f=[],g=[],v=void 0;if(m>0)if(d&NT||u&NT){var y=h.collision&&(h.collision.hasEvent("triggerenter")||h.collision.hasEvent("triggerleave")),_=p.collision&&(p.collision.hasEvent("triggerenter")||p.collision.hasEvent("triggerleave")),w=h.rigidbody&&(h.rigidbody.hasEvent("triggerenter")||h.rigidbody.hasEvent("triggerleave")),b=p.rigidbody&&(p.rigidbody.hasEvent("triggerenter")||p.rigidbody.hasEvent("triggerleave"));y&&(!(v=this._storeCollision(h,p))||u&NT||h.collision.fire("triggerenter",p)),_&&(!(v=this._storeCollision(p,h))||d&NT||p.collision.fire("triggerenter",h)),w&&(v||(v=this._storeCollision(p,h)),v&&h.rigidbody.fire("triggerenter",p)),b&&(v||(v=this._storeCollision(h,p)),v&&p.rigidbody.fire("triggerenter",h))}else{var x=this._hasContactEvent(h),C=this._hasContactEvent(p),S=this.hasEvent("contact");if(S||x||C){for(var E=0;E<m;E++){var T=s.getContactPoint(E),A=this._createContactPointFromAmmo(T);if(x||C){f.push(A);var L=this._createReverseContactPointFromAmmo(T);g.push(L)}if(S){var M=this._createSingleContactResult(h,p,A);this.fire("contact",M)}}if(x){var P=this._createContactResult(p,f);v=this._storeCollision(h,p),h.collision&&(h.collision.fire("contact",P),v&&h.collision.fire("collisionstart",P)),h.rigidbody&&(h.rigidbody.fire("contact",P),v&&h.rigidbody.fire("collisionstart",P))}if(C){var O=this._createContactResult(h,g);v=this._storeCollision(p,h),p.collision&&(p.collision.fire("contact",O),v&&p.collision.fire("collisionstart",O)),p.rigidbody&&(p.rigidbody.fire("contact",O),v&&p.rigidbody.fire("collisionstart",O))}}}}}this._cleanOldCollisions(),this.contactPointPool.freeAll(),this.contactResultPool.freeAll(),this.singleContactResultPool.freeAll()},n.onUpdate=function(e){var t,n;this._gravityFloat32[0]=this.gravity.x,this._gravityFloat32[1]=this.gravity.y,this._gravityFloat32[2]=this.gravity.z;var i=this.dynamicsWorld.getGravity();i.x()===this._gravityFloat32[0]&&i.y()===this._gravityFloat32[1]&&i.z()===this._gravityFloat32[2]||(i.setValue(this.gravity.x,this.gravity.y,this.gravity.z),this.dynamicsWorld.setGravity(i));var a=this._triggers;for(t=0,n=a.length;t<n;t++)a[t].updateTransform();var s=this._compounds;for(t=0,n=s.length;t<n;t++)s[t]._updateCompound();var r=this._kinematic;for(t=0,n=r.length;t<n;t++)r[t]._updateKinematic();this.dynamicsWorld.stepSimulation(e,this.maxSubSteps,this.fixedTimeStep);var o=this._dynamic;for(t=0,n=o.length;t<n;t++)o[t]._updateDynamic();this.dynamicsWorld.setInternalTickCallback||this._checkForCollisions(Ammo.getPointer(this.dynamicsWorld),e)},n.destroy=function(){e.prototype.destroy.call(this),this.app.systems.off("update",this.onUpdate,this),"undefined"!=typeof Ammo&&(Ammo.destroy(this.dynamicsWorld),Ammo.destroy(this.solver),Ammo.destroy(this.overlappingPairCache),Ammo.destroy(this.dispatcher),Ammo.destroy(this.collisionConfiguration),this.dynamicsWorld=null,this.solver=null,this.overlappingPairCache=null,this.dispatcher=null,this.collisionConfiguration=null)},t}(VS);zS._buildAccessors(RM.prototype,UM);var VM="none",HM="blend",GM=new St,WM=function(e){function t(t,n){var i;return(i=e.call(this,t,n)||this)._resolution=new ft(640,320),i._referenceResolution=new ft(640,320),i._scaleMode=VM,i.scale=1,i._scaleBlend=.5,i._priority=0,i._screenSpace=!1,i.cull=i._screenSpace,i._screenMatrix=new St,i._elements=new Set,t.app.graphicsDevice.on("resizecanvas",i._onResize,J(i)),i}Z(t,e);var n=t.prototype;return n.syncDrawOrder=function(){this.system.queueDrawOrderSync(this.entity.getGuid(),this._processDrawOrderSync,this)},n._recurseDrawOrderSync=function(e,t){if(!(e instanceof gS))return t;if(e.element){var n,i=e.element.drawOrder;e.element.drawOrder=t++,e.element._batchGroupId>=0&&i!==e.element.drawOrder&&(null==(n=this.system.app.batcher)||n.markGroupDirty(e.element._batchGroupId))}e.particlesystem&&(e.particlesystem.drawOrder=t++);for(var a=e.children,s=0;s<a.length;s++)t=this._recurseDrawOrderSync(a[s],t);return t},n._processDrawOrderSync=function(){var e=1;this._recurseDrawOrderSync(this.entity,e),this.fire("syncdraworder")},n._calcProjectionMatrix=function(){var e=this._resolution.x/this.scale,t=this._resolution.y/this.scale,n=0,i=e,a=-t,s=0,r=1,o=-1;this._screenMatrix.setOrtho(n,i,a,s,r,o),this._screenSpace||(GM.setScale(.5*e,.5*t,1),this._screenMatrix.mul2(GM,this._screenMatrix))},n._updateScale=function(){this.scale=this._calcScale(this._resolution,this.referenceResolution)},n._calcScale=function(e,t){var n=Math.log2(e.x/t.x),i=Math.log2(e.y/t.y);return Math.pow(2,n*(1-this._scaleBlend)+i*this._scaleBlend)},n._onResize=function(e,t){this._screenSpace&&(this._resolution.set(e,t),this.resolution=this._resolution)},n._bindElement=function(e){this._elements.add(e)},n._unbindElement=function(e){this._elements.delete(e)},n.onRemove=function(){this.system.app.graphicsDevice.off("resizecanvas",this._onResize,this),this.fire("remove"),this._elements.forEach((function(e){return e._onScreenRemove()})),this._elements.clear(),this.off()},q(t,[{key:"resolution",get:function(){return this._resolution},set:function(e){var t=this;this._screenSpace?this._resolution.set(this.system.app.graphicsDevice.width,this.system.app.graphicsDevice.height):this._resolution.set(e.x,e.y),this._updateScale(),this._calcProjectionMatrix(),this.entity._dirtyLocal||this.entity._dirtifyLocal(),this.fire("set:resolution",this._resolution),this._elements.forEach((function(e){return e._onScreenResize(t._resolution)}))}},{key:"referenceResolution",get:function(){return this._scaleMode===VM?this._resolution:this._referenceResolution},set:function(e){var t=this;this._referenceResolution.set(e.x,e.y),this._updateScale(),this._calcProjectionMatrix(),this.entity._dirtyLocal||this.entity._dirtifyLocal(),this.fire("set:referenceresolution",this._resolution),this._elements.forEach((function(e){return e._onScreenResize(t._resolution)}))}},{key:"screenSpace",get:function(){return this._screenSpace},set:function(e){this._screenSpace=e,this._screenSpace&&this._resolution.set(this.system.app.graphicsDevice.width,this.system.app.graphicsDevice.height),this.resolution=this._resolution,this.entity._dirtyLocal||this.entity._dirtifyLocal(),this.fire("set:screenspace",this._screenSpace),this._elements.forEach((function(e){return e._onScreenSpaceChange()}))}},{key:"scaleMode",get:function(){return this._scaleMode},set:function(e){e!==VM&&e!==HM&&(e=VM),this._screenSpace||e===VM||(e=VM),this._scaleMode=e,this.resolution=this._resolution,this.fire("set:scalemode",this._scaleMode)}},{key:"scaleBlend",get:function(){return this._scaleBlend},set:function(e){var t=this;this._scaleBlend=e,this._updateScale(),this._calcProjectionMatrix(),this.entity._dirtyLocal||this.entity._dirtifyLocal(),this.fire("set:scaleblend",this._scaleBlend),this._elements.forEach((function(e){return e._onScreenResize(t._resolution)}))}},{key:"priority",get:function(){return this._priority},set:function(e){e>255&&(e=255),this._priority!==e&&(this._priority=e,this.syncDrawOrder())}}]),t}(zS),jM=function(){this.enabled=!0},XM=["enabled"],YM=function(e){function t(t){var n;return(n=e.call(this,t)||this).id="screen",n.ComponentType=WM,n.DataType=jM,n.schema=XM,n.windowResolution=new ft,n._drawOrderSyncQueue=new ze,n.app.graphicsDevice.on("resizecanvas",n._onResize,J(n)),n.app.systems.on("update",n._onUpdate,J(n)),n.on("beforeremove",n.onRemoveComponent,J(n)),n}Z(t,e);var n=t.prototype;return n.initializeComponentData=function(t,n,i){void 0!==n.priority&&(t.priority=n.priority),void 0!==n.screenSpace&&(t.screenSpace=n.screenSpace),t.cull=t.screenSpace,void 0!==n.scaleMode&&(t.scaleMode=n.scaleMode),void 0!==n.scaleBlend&&(t.scaleBlend=n.scaleBlend),void 0!==n.resolution&&(n.resolution instanceof ft?t._resolution.copy(n.resolution):t._resolution.set(n.resolution[0],n.resolution[1]),t.resolution=t._resolution),void 0!==n.referenceResolution&&(n.referenceResolution instanceof ft?t._referenceResolution.copy(n.referenceResolution):t._referenceResolution.set(n.referenceResolution[0],n.referenceResolution[1]),t.referenceResolution=t._referenceResolution),t.syncDrawOrder(),e.prototype.initializeComponentData.call(this,t,n,i)},n.destroy=function(){e.prototype.destroy.call(this),this.app.graphicsDevice.off("resizecanvas",this._onResize,this),this.app.systems.off("update",this._onUpdate,this)},n._onUpdate=function(e){var t=this.store;for(var n in t)t[n].entity.screen.update&&t[n].entity.screen.update(e)},n._onResize=function(e,t){this.windowResolution.x=e,this.windowResolution.y=t},n.cloneComponent=function(e,t){var n=e.screen;return this.addComponent(t,{enabled:n.enabled,screenSpace:n.screenSpace,scaleMode:n.scaleMode,resolution:n.resolution.clone(),referenceResolution:n.referenceResolution.clone()})},n.onRemoveComponent=function(e,t){t.onRemove()},n.processDrawOrderSyncQueue=function(){for(var e=this._drawOrderSyncQueue.list(),t=0;t<e.length;t++){var n=e[t];n.callback.call(n.scope)}this._drawOrderSyncQueue.clear()},n.queueDrawOrderSync=function(e,t,n){this._drawOrderSyncQueue.list().length||this.app.once("prerender",this.processDrawOrderSyncQueue,this),this._drawOrderSyncQueue.has(e)||this._drawOrderSyncQueue.push(e,{callback:t,scope:n})},t}(VS);zS._buildAccessors(WM.prototype,XM);var qM=function(e){function t(t,n){var i;return(i=e.call(this,t,n)||this).on("set_scripts",i.onSetScripts,J(i)),i}Z(t,e);var n=t.prototype;return n.send=function(e,t){var n,i=Array.prototype.slice.call(arguments,2),a=this.entity.script.instances;if(a&&a[e]&&(n=a[e].instance[t]))return n.apply(a[e].instance,i)},n.onEnable=function(){this.data.areScriptsLoaded&&!this.system.preloading&&(this.data.initialized?this.system._enableScriptComponent(this):this.system._initializeScriptComponent(this),this.data.postInitialized||this.system._postInitializeScriptComponent(this))},n.onDisable=function(){this.system._disableScriptComponent(this)},n.onSetScripts=function(e,t,n){if(!this.system._inTools||this.runInTools){if(this._updateScriptAttributes(t,n))return;this.enabled&&this.system._disableScriptComponent(this),this.system._destroyScriptComponent(this),this.data.areScriptsLoaded=!1;var i=n.map((function(e){return e.url}));if(this._loadFromCache(i))return;this._loadScripts(i)}},n._updateScriptAttributes=function(e,t){var n=!0;if(e.length!==t.length)n=!1;else for(var i=0,a=t.length;i<a;i++)if(e[i].url!==t[i].url){n=!1;break}if(n)for(var s in this.instances)this.instances.hasOwnProperty(s)&&this.system._updateAccessors(this.entity,this.instances[s]);return n},n._loadFromCache=function(e){for(var t=[],n=this.system.app._scriptPrefix||"",i=/^http(s)?:\/\//i,a=0,s=e.length;a<s;a++){var r=e[a];i.test(r)||(r=ce.join(n,r));var o=this.system.app.loader.getFromCache(r,"script");if(!o)return!1;t.push(o)}for(var l=0,c=t.length;l<c;l++){var h=t[l];if(!0!==h&&h&&this.entity.script&&!this.entity.script.instances[h._pcScriptName]){var p=new h(this.entity);this.system._preRegisterInstance(this.entity,e[l],h._pcScriptName,p)}}return this.data&&(this.data.areScriptsLoaded=!0),this.system.preloading||(this.system.onInitialize(this.entity),this.system.onPostInitialize(this.entity)),!0},n._loadScripts=function(e){var t=this,n=e.length,i=this.system.app._scriptPrefix||"";e.forEach((function(e){var a=null,s=null;e.toLowerCase().startsWith("http://")||e.toLowerCase().startsWith("https://")?(s=e,a=e):(s=e,a=ce.join(i,e)),t.system.app.loader.load(a,"script",(function(e,i){if(n--,e)console.error(e);else if(i&&t.entity.script&&!t.entity.script.instances[i._pcScriptName]){var a=new i(t.entity);t.system._preRegisterInstance(t.entity,s,i._pcScriptName,a)}0===n&&(t.data.areScriptsLoaded=!0,t.system.preloading||(t.system.onInitialize(t.entity),t.system.onPostInitialize(t.entity)))}))}))},t}(zS),KM=function(){this.scripts=[],this.enabled=!0,this.instances={},this._instances={},this.runInTools=!1,this.attributes={},this.initialized=!1,this.postInitialized=!1,this.areScriptsLoaded=!1},ZM=["enabled","scripts","instances","runInTools"],QM="initialize",JM="postInitialize",$M="update",eP="postUpdate",tP="fixedUpdate",nP="toolsUpdate",iP="onEnable",aP="onDisable",sP=function(e){function t(t){var n;return(n=e.call(this,t)||this).id="script",n.ComponentType=qM,n.DataType=KM,n.schema=ZM,n.preloading=!1,n.instancesWithUpdate=[],n.instancesWithFixedUpdate=[],n.instancesWithPostUpdate=[],n.instancesWithToolsUpdate=[],n.on("beforeremove",n.onBeforeRemove,J(n)),n.app.systems.on(QM,n.onInitialize,J(n)),n.app.systems.on(JM,n.onPostInitialize,J(n)),n.app.systems.on($M,n.onUpdate,J(n)),n.app.systems.on(tP,n.onFixedUpdate,J(n)),n.app.systems.on(eP,n.onPostUpdate,J(n)),n.app.systems.on(nP,n.onToolsUpdate,J(n)),n}Z(t,e);var n=t.prototype;return n.initializeComponentData=function(t,n,i){i=["runInTools","enabled","scripts"],n.scripts&&n.scripts.length&&n.scripts.forEach((function(e){if(e.attributes&&Array.isArray(e.attributes)){for(var t={},n=0;n<e.attributes.length;n++)t[e.attributes[n].name]=e.attributes[n];e.attributes=t}})),e.prototype.initializeComponentData.call(this,t,n,i)},n.cloneComponent=function(e,t){for(var n=this.store[e.getGuid()],i={runInTools:n.data.runInTools,scripts:[],enabled:n.data.enabled},a=n.data.scripts,s=0,r=a.length;s<r;s++){var o=a[s].attributes;o&&delete a[s].attributes,i.scripts.push(G({},a[s])),o&&(i.scripts[s].attributes=this._cloneAttributes(o),a[s].attributes=o)}return this.addComponent(t,i)},n.onBeforeRemove=function(e,t){t.enabled&&this._disableScriptComponent(t),this._destroyScriptComponent(t)},n.onInitialize=function(e){if(this._registerInstances(e),e.enabled){e.script&&e.script.enabled&&this._initializeScriptComponent(e.script);for(var t=e._children,n=0,i=t.length;n<i;n++)t[n]instanceof gS&&this.onInitialize(t[n])}},n.onPostInitialize=function(e){if(e.enabled){e.script&&e.script.enabled&&this._postInitializeScriptComponent(e.script);for(var t=e._children,n=0,i=t.length;n<i;n++)t[n]instanceof gS&&this.onPostInitialize(t[n])}},n._callInstancesMethod=function(e,t){var n=e.data.instances;for(var i in n)if(n.hasOwnProperty(i)){var a=n[i].instance;a[t]&&a[t]()}},n._initializeScriptComponent=function(e){this._callInstancesMethod(e,QM),e.data.initialized=!0,e.enabled&&e.entity.enabled&&this._enableScriptComponent(e)},n._enableScriptComponent=function(e){this._callInstancesMethod(e,iP)},n._disableScriptComponent=function(e){this._callInstancesMethod(e,aP)},n._destroyScriptComponent=function(e){var t=e.data.instances;for(var n in t)if(t.hasOwnProperty(n)){var i=t[n].instance;if(i.destroy&&i.destroy(),i.update){var a=this.instancesWithUpdate.indexOf(i);a>=0&&this.instancesWithUpdate.splice(a,1)}if(i.fixedUpdate){var s=this.instancesWithFixedUpdate.indexOf(i);s>=0&&this.instancesWithFixedUpdate.splice(s,1)}if(i.postUpdate){var r=this.instancesWithPostUpdate.indexOf(i);r>=0&&this.instancesWithPostUpdate.splice(r,1)}if(i.toolsUpdate){var o=this.instancesWithToolsUpdate.indexOf(i);o>=0&&this.instancesWithToolsUpdate.splice(o,1)}e.instances[n].instance===e[n]&&delete e[n],delete e.instances[n]}},n._postInitializeScriptComponent=function(e){this._callInstancesMethod(e,JM),e.data.postInitialized=!0},n._updateInstances=function(e,t,n){for(var i=0,a=t.length;i<a;i++){var s=t[i];s&&s.entity&&s.entity.enabled&&s.entity.script.enabled&&s[e](n)}},n.onUpdate=function(e){this._updateInstances($M,this.instancesWithUpdate,e)},n.onFixedUpdate=function(e){this._updateInstances(tP,this.instancesWithFixedUpdate,e)},n.onPostUpdate=function(e){this._updateInstances(eP,this.instancesWithPostUpdate,e)},n.onToolsUpdate=function(e){this._updateInstances(nP,this.instancesWithToolsUpdate,e)},n.broadcast=function(e,t){var n=Array.prototype.slice.call(arguments,2),i=this.store;for(var a in i)if(i.hasOwnProperty(a)){var s=i[a].data;if(s.instances[e]){var r=s.instances[e].instance[t];r&&r.apply(s.instances[e].instance,n)}}},n._preRegisterInstance=function(e,t,n,i){if(e.script){if(e.script.data._instances=e.script.data._instances||{},e.script.data._instances[n])throw Error("Script name collision '"+n+"'. Scripts from '"+t+"' and '"+e.script.data._instances[n].url+"' {"+e.getGuid()+"}");e.script.data._instances[n]={url:t,name:n,instance:i}}},n._registerInstances=function(e){if(e.script&&e.script.data._instances){for(var t in e.script.instances=e.script.data._instances,e.script.instances){var n=e.script.instances[t],i=n.instance;if(oe.attach(i),i.update&&this.instancesWithUpdate.push(i),i.fixedUpdate&&this.instancesWithFixedUpdate.push(i),i.postUpdate&&this.instancesWithPostUpdate.push(i),i.toolsUpdate&&this.instancesWithToolsUpdate.push(i),e.script.scripts&&this._createAccessors(e,n),e.script[t])throw Error("Script with name '"+t+"' is already attached to Script Component");e.script[t]=i}delete e.script.data._instances}for(var a=e._children,s=0,r=a.length;s<r;s++)a[s]instanceof gS&&this._registerInstances(a[s])},n._cloneAttributes=function(e){var t={};for(var n in e)if(e.hasOwnProperty(n))if("entity"!==e[n].type)t[n]=G({},e[n]);else{var i=e[n].value;delete e[n].value,t[n]=G({},e[n]),t[n].value=i,e[n].value=i}return t},n._createAccessors=function(e,t){for(var n=e.script.scripts.length,i=t.url,a=0;a<n;a++){var s=e.script.scripts[a];if(s.url===i){var r=s.attributes;if(s.name&&r){for(var o in r)r.hasOwnProperty(o)&&this._createAccessor(r[o],t);e.script.data.attributes[s.name]=this._cloneAttributes(r)}break}}},n._createAccessor=function(e,t){var n=this;e={name:e.name,value:e.value,type:e.type},this._convertAttributeValue(e),Object.defineProperty(t.instance,e.name,{get:function(){return e.value},set:function(i){var a=e.value;e.value=i,n._convertAttributeValue(e),t.instance.fire("set",e.name,a,e.value)},configurable:!0})},n._updateAccessors=function(e,t){for(var n=e.script.scripts.length,i=t.url,a=0;a<n;a++){var s=e.script,r=s.scripts[a];if(r.url===i){var o=r.name,l=r.attributes;if(o){if(l)for(var c in l)l.hasOwnProperty(c)&&this._createAccessor(l[c],t);var h=s.data.attributes[o];if(h)for(var p in h){var d=h[p];p in l?l[p].value!==d.value&&t.instance.onAttributeChanged&&t.instance.onAttributeChanged(d.name,d.value,l[p].value):delete t.instance[d.name]}l?s.data.attributes[o]=this._cloneAttributes(l):delete s.data.attributes[o]}break}}},n._convertAttributeValue=function(e){if("rgb"===e.type||"rgba"===e.type)Array.isArray(e.value)&&(e.value=3===e.value.length?new st(e.value[0],e.value[1],e.value[2]):new st(e.value[0],e.value[1],e.value[2],e.value[3]));else if("vec2"===e.type)Array.isArray(e.value)&&(e.value=new ft(e.value[0],e.value[1]));else if("vec3"===e.type||"vector"===e.type)Array.isArray(e.value)&&(e.value=new pt(e.value[0],e.value[1],e.value[2]));else if("vec4"===e.type)Array.isArray(e.value)&&(e.value=new vt(e.value[0],e.value[1],e.value[2],e.value[3]));else if("entity"===e.type)null!==e.value&&"string"==typeof e.value&&(e.value=this.app.root.findByGuid(e.value));else if("curve"===e.type||"colorcurve"===e.type){var t=e.value.keys[0]instanceof Array?ht:ct;e.value=new t(e.value.keys),e.value.type=e.value.type}},n.destroy=function(){e.prototype.destroy.call(this),this.app.systems.off(QM,this.onInitialize,this),this.app.systems.off(JM,this.onPostInitialize,this),this.app.systems.off($M,this.onUpdate,this),this.app.systems.off(tP,this.onFixedUpdate,this),this.app.systems.off(eP,this.onPostUpdate,this),this.app.systems.off(nP,this.onToolsUpdate,this)},t}(VS);zS._buildAccessors(qM.prototype,ZM);var rP=new ft,oP=new pt,lP=new Ft,cP=new Ht,hP=new pt,pP=new pt,dP=new Et,uP={x:"y",y:"x"},mP=function(e){function t(t,n){var i;if(i=e.call(this)||this,!(t&&t instanceof _L))throw new Error("Element was null or not an ElementComponent");if(n&&"x"!==n&&"y"!==n)throw new Error("Unrecognized axis: "+n);return i._element=t,i._app=t.system.app,i._axis=n||null,i._enabled=!0,i._dragScale=new pt,i._dragStartMousePosition=new pt,i._dragStartHandlePosition=new pt,i._deltaMousePosition=new pt,i._deltaHandlePosition=new pt,i._isDragging=!1,i._toggleLifecycleListeners("on"),i}Z(t,e);var n=t.prototype;return n._toggleLifecycleListeners=function(e){this._element[e]("mousedown",this._onMouseDownOrTouchStart,this),this._element[e]("touchstart",this._onMouseDownOrTouchStart,this),this._element[e]("selectstart",this._onMouseDownOrTouchStart,this)},n._toggleDragListeners=function(e){var t="on"===e;this._hasDragListeners&&t||(this._app.mouse&&(this._element[e]("mousemove",this._onMove,this),this._element[e]("mouseup",this._onMouseUpOrTouchEnd,this)),we.touch&&(this._element[e]("touchmove",this._onMove,this),this._element[e]("touchend",this._onMouseUpOrTouchEnd,this),this._element[e]("touchcancel",this._onMouseUpOrTouchEnd,this)),this._element[e]("selectmove",this._onMove,this),this._element[e]("selectend",this._onMouseUpOrTouchEnd,this),this._hasDragListeners=t)},n._onMouseDownOrTouchStart=function(e){if(this._element&&!this._isDragging&&this.enabled){this._dragCamera=e.camera,this._calculateDragScale();var t=this._screenToLocal(e);t&&(this._toggleDragListeners("on"),this._isDragging=!0,this._dragStartMousePosition.copy(t),this._dragStartHandlePosition.copy(this._element.entity.getLocalPosition()),this.fire("drag:start"))}},n._onMouseUpOrTouchEnd=function(){this._isDragging&&(this._isDragging=!1,this._toggleDragListeners("off"),this.fire("drag:end"))},n._screenToLocal=function(e){return e.inputSource?lP.set(e.inputSource.getOrigin(),e.inputSource.getDirection()):(this._determineInputPosition(e),this._chooseRayOriginAndDirection()),hP.copy(this._element.entity.forward).mulScalar(-1),cP.setFromPointNormal(this._element.entity.getPosition(),hP),cP.intersectsRay(lP,pP)?(dP.copy(this._element.entity.getRotation()).invert().transformVector(pP,pP),pP.mul(this._dragScale),pP):null},n._determineInputPosition=function(e){var t=this._app.graphicsDevice.maxPixelRatio;void 0!==e.x&&void 0!==e.y?(rP.x=e.x*t,rP.y=e.y*t):e.changedTouches?(rP.x=e.changedTouches[0].x*t,rP.y=e.changedTouches[0].y*t):console.warn("Could not determine position from input event")},n._chooseRayOriginAndDirection=function(){this._element.screen&&this._element.screen.screen.screenSpace?(lP.origin.set(rP.x,-rP.y,0),lP.direction.copy(pt.FORWARD)):(oP.copy(this._dragCamera.screenToWorld(rP.x,rP.y,1)),lP.origin.copy(this._dragCamera.entity.getPosition()),lP.direction.copy(oP).sub(lP.origin).normalize())},n._calculateDragScale=function(){var e=this._element.entity.parent,t=this._element.screen&&this._element.screen.screen,n=t&&t.screenSpace,i=n?t.scale:1,a=this._dragScale;for(a.set(i,i,i);e&&(a.mul(e.getLocalScale()),e=e.parent,!n||!e.screen););a.x=1/a.x,a.y=1/a.y,a.z=0},n._onMove=function(e){var t=this._element,n=this._deltaMousePosition,i=this._deltaHandlePosition,a=this._axis;if(t&&this._isDragging&&this.enabled&&t.enabled&&t.entity.enabled){var s=this._screenToLocal(e);if(s){if(n.sub2(s,this._dragStartMousePosition),i.add2(this._dragStartHandlePosition,n),a){var r=t.entity.getLocalPosition(),o=uP[a];i[o]=r[o]}t.entity.setLocalPosition(i),this.fire("drag:move",i)}}},n.destroy=function(){this._toggleLifecycleListeners("off"),this._toggleDragListeners("off")},q(t,[{key:"enabled",get:function(){return this._enabled},set:function(e){this._enabled=e}},{key:"isDragging",get:function(){return this._isDragging}}]),t}(re),fP=0,gP=1,vP=2,yP=0,_P=1,wP=new ft,bP=function(e){function t(t,n){var i;return(i=e.call(this,t,n)||this)._viewportReference=new lT(J(i),"viewportEntity",{"element#gain":i._onViewportElementGain,"element#resize":i._onSetContentOrViewportSize}),i._contentReference=new lT(J(i),"contentEntity",{"element#gain":i._onContentElementGain,"element#lose":i._onContentElementLose,"element#resize":i._onSetContentOrViewportSize}),i._scrollbarUpdateFlags={},i._scrollbarReferences={},i._scrollbarReferences[eg]=new lT(J(i),"horizontalScrollbarEntity",{"scrollbar#set:value":i._onSetHorizontalScrollbarValue,"scrollbar#gain":i._onHorizontalScrollbarGain}),i._scrollbarReferences[tg]=new lT(J(i),"verticalScrollbarEntity",{"scrollbar#set:value":i._onSetVerticalScrollbarValue,"scrollbar#gain":i._onVerticalScrollbarGain}),i._prevContentSizes={},i._prevContentSizes[eg]=null,i._prevContentSizes[tg]=null,i._scroll=new ft,i._velocity=new pt,i._dragStartPosition=new pt,i._disabledContentInput=!1,i._disabledContentInputEntities=[],i._toggleLifecycleListeners("on",t),i._toggleElementListeners("on"),i}Z(t,e);var n=t.prototype;return n._toggleLifecycleListeners=function(e,t){this[e]("set_horizontal",this._onSetHorizontalScrollingEnabled,this),this[e]("set_vertical",this._onSetVerticalScrollingEnabled,this),t.app.systems.element[e]("add",this._onElementComponentAdd,this),t.app.systems.element[e]("beforeremove",this._onElementComponentRemove,this)},n._toggleElementListeners=function(e){if(this.entity.element){if("on"===e&&this._hasElementListeners)return;this.entity.element[e]("resize",this._onSetContentOrViewportSize,this),this.entity.element[e](Uc,this._onMouseWheel,this),this._hasElementListeners="on"===e}},n._onElementComponentAdd=function(e){this.entity===e&&this._toggleElementListeners("on")},n._onElementComponentRemove=function(e){this.entity===e&&this._toggleElementListeners("off")},n._onViewportElementGain=function(){this._syncAll()},n._onContentElementGain=function(){this._destroyDragHelper(),this._contentDragHelper=new mP(this._contentReference.entity.element),this._contentDragHelper.on("drag:start",this._onContentDragStart,this),this._contentDragHelper.on("drag:end",this._onContentDragEnd,this),this._contentDragHelper.on("drag:move",this._onContentDragMove,this),this._prevContentSizes[eg]=null,this._prevContentSizes[tg]=null,this._syncAll()},n._onContentElementLose=function(){this._destroyDragHelper()},n._onContentDragStart=function(){this._contentReference.entity&&this.enabled&&this.entity.enabled&&this._dragStartPosition.copy(this._contentReference.entity.getLocalPosition())},n._onContentDragEnd=function(){this._prevContentDragPosition=null,this._enableContentInput()},n._onContentDragMove=function(e){if(this._contentReference.entity&&this.enabled&&this.entity.enabled&&(this._wasDragged=!0,this._setScrollFromContentPosition(e),this._setVelocityFromContentPositionDelta(e),!this._disabledContentInput)){var t=e.x-this._dragStartPosition.x,n=e.y-this._dragStartPosition.y;(Math.abs(t)>this.dragThreshold||Math.abs(n)>this.dragThreshold)&&this._disableContentInput()}},n._onSetContentOrViewportSize=function(){this._syncAll()},n._onSetHorizontalScrollbarValue=function(e){!this._scrollbarUpdateFlags[eg]&&this.enabled&&this.entity.enabled&&this._onSetScroll(e,null)},n._onSetVerticalScrollbarValue=function(e){!this._scrollbarUpdateFlags[tg]&&this.enabled&&this.entity.enabled&&this._onSetScroll(null,e)},n._onSetHorizontalScrollingEnabled=function(){this._syncScrollbarEnabledState(eg)},n._onSetVerticalScrollingEnabled=function(){this._syncScrollbarEnabledState(tg)},n._onHorizontalScrollbarGain=function(){this._syncScrollbarEnabledState(eg),this._syncScrollbarPosition(eg)},n._onVerticalScrollbarGain=function(){this._syncScrollbarEnabledState(tg),this._syncScrollbarPosition(tg)},n._onSetScroll=function(e,t,n){!1!==n&&this._velocity.set(0,0,0);var i=this._updateAxis(e,"x",eg),a=this._updateAxis(t,"y",tg);(i||a)&&this.fire("set:scroll",this._scroll)},n._updateAxis=function(e,t,n){var i=null!==e&&Math.abs(e-this._scroll[t])>1e-5;return(i||this._isDragging()||0===e)&&(this._scroll[t]=this._determineNewScrollValue(e,t,n),this._syncContentPosition(n),this._syncScrollbarPosition(n)),i},n._determineNewScrollValue=function(e,t,n){if(!this._getScrollingEnabled(n))return this._scroll[t];switch(this.scrollMode){case fP:return at.clamp(e,0,this._getMaxScrollValue(n));case gP:return this._setVelocityFromOvershoot(e,t,n),e;case vP:return e;default:return console.warn("Unhandled scroll mode:"+this.scrollMode),e}},n._syncAll=function(){this._syncContentPosition(eg),this._syncContentPosition(tg),this._syncScrollbarPosition(eg),this._syncScrollbarPosition(tg),this._syncScrollbarEnabledState(eg),this._syncScrollbarEnabledState(tg)},n._syncContentPosition=function(e){var t=this._getAxis(e),n=this._getSign(e),i=this._contentReference.entity;if(i){var a=this._prevContentSizes[e],s=this._getContentSize(e);if(null!==a&&Math.abs(a-s)>1e-4){var r=this._getMaxOffset(e,a),o=this._getMaxOffset(e,s);this._scroll[t]=0===o?1:at.clamp(this._scroll[t]*r/o,0,1)}var l=this._scroll[t]*this._getMaxOffset(e),c=i.getLocalPosition();c[t]=l*n,i.setLocalPosition(c),this._prevContentSizes[e]=s}},n._syncScrollbarPosition=function(e){var t=this._getAxis(e),n=this._scrollbarReferences[e].entity;n&&n.scrollbar&&(this._scrollbarUpdateFlags[e]=!0,n.scrollbar.value=this._scroll[t],n.scrollbar.handleSize=this._getScrollbarHandleSize(t,e),this._scrollbarUpdateFlags[e]=!1)},n._syncScrollbarEnabledState=function(e){var t=this._scrollbarReferences[e].entity;if(t){var n=this._getScrollingEnabled(e),i=this._getScrollbarVisibility(e);switch(i){case yP:return void(t.enabled=n);case _P:return void(t.enabled=n&&this._contentIsLargerThanViewport(e));default:console.warn("Unhandled scrollbar visibility:"+i),t.enabled=n}}},n._contentIsLargerThanViewport=function(e){return this._getContentSize(e)>this._getViewportSize(e)},n._contentPositionToScrollValue=function(e){var t=this._getMaxOffset(eg),n=this._getMaxOffset(tg);return wP.x=0===t?0:e.x/t,wP.y=0===n?0:e.y/-n,wP},n._getMaxOffset=function(e,t){t=void 0===t?this._getContentSize(e):t;var n=this._getViewportSize(e);return t<n?-this._getViewportSize(e):n-t},n._getMaxScrollValue=function(e){return this._contentIsLargerThanViewport(e)?1:0},n._getScrollbarHandleSize=function(e,t){var n=this._getViewportSize(t),i=this._getContentSize(t);if(Math.abs(i)<.001)return 1;var a=Math.min(n/i,1),s=this._toOvershoot(this._scroll[e],t);return 0===s?a:a/(1+Math.abs(s))},n._getViewportSize=function(e){return this._getSize(e,this._viewportReference)},n._getContentSize=function(e){return this._getSize(e,this._contentReference)},n._getSize=function(e,t){return t.entity&&t.entity.element?t.entity.element[this._getCalculatedDimension(e)]:0},n._getScrollingEnabled=function(e){return e===eg?this.horizontal:e===tg?this.vertical:void 0},n._getScrollbarVisibility=function(e){return e===eg?this.horizontalScrollbarVisibility:e===tg?this.verticalScrollbarVisibility:void 0},n._getSign=function(e){return e===eg?1:-1},n._getAxis=function(e){return e===eg?"x":"y"},n._getCalculatedDimension=function(e){return e===eg?"calculatedWidth":"calculatedHeight"},n._destroyDragHelper=function(){this._contentDragHelper&&this._contentDragHelper.destroy()},n.onUpdate=function(){this._contentReference.entity&&(this._updateVelocity(),this._syncScrollbarEnabledState(eg),this._syncScrollbarEnabledState(tg))},n._updateVelocity=function(){if(!this._isDragging()){if(this.scrollMode===gP&&(this._hasOvershoot("x",eg)&&this._setVelocityFromOvershoot(this.scroll.x,"x",eg),this._hasOvershoot("y",tg)&&this._setVelocityFromOvershoot(this.scroll.y,"y",tg)),Math.abs(this._velocity.x)>1e-4||Math.abs(this._velocity.y)>1e-4){var e=this._contentReference.entity.getLocalPosition();e.x+=this._velocity.x,e.y+=this._velocity.y,this._contentReference.entity.setLocalPosition(e),this._setScrollFromContentPosition(e)}this._velocity.x*=1-this.friction,this._velocity.y*=1-this.friction}},n._hasOvershoot=function(e,t){return Math.abs(this._toOvershoot(this.scroll[e],t))>.001},n._toOvershoot=function(e,t){var n=this._getMaxScrollValue(t);return e<0?e:e>n?e-n:0},n._setVelocityFromOvershoot=function(e,t,n){var i=this._toOvershoot(e,n)*this._getMaxOffset(n)*this._getSign(n);Math.abs(i)>0&&(this._velocity[t]=-i/(50*this.bounceAmount+1))},n._setVelocityFromContentPositionDelta=function(e){this._prevContentDragPosition?(this._velocity.sub2(e,this._prevContentDragPosition),this._prevContentDragPosition.copy(e)):(this._velocity.set(0,0,0),this._prevContentDragPosition=e.clone())},n._setScrollFromContentPosition=function(e){var t=this._contentPositionToScrollValue(e);this._isDragging()&&(t=this._applyScrollValueTension(t)),this._onSetScroll(t.x,t.y,!1)},n._applyScrollValueTension=function(e){var t=1,n=this._getMaxScrollValue(eg),i=this._toOvershoot(e.x,eg);return i>0?e.x=n+t*Math.log10(1+i):i<0&&(e.x=-t*Math.log10(1-i)),n=this._getMaxScrollValue(tg),(i=this._toOvershoot(e.y,tg))>0?e.y=n+t*Math.log10(1+i):i<0&&(e.y=-t*Math.log10(1-i)),e},n._isDragging=function(){return this._contentDragHelper&&this._contentDragHelper.isDragging},n._setScrollbarComponentsEnabled=function(e){this._scrollbarReferences[eg].hasComponent("scrollbar")&&(this._scrollbarReferences[eg].entity.scrollbar.enabled=e),this._scrollbarReferences[tg].hasComponent("scrollbar")&&(this._scrollbarReferences[tg].entity.scrollbar.enabled=e)},n._setContentDraggingEnabled=function(e){this._contentDragHelper&&(this._contentDragHelper.enabled=e)},n._onMouseWheel=function(e){if(this.useMouseWheel){var t=e.event,n=t.deltaX/this._contentReference.entity.element.calculatedWidth*this.mouseWheelSensitivity.x,i=t.deltaY/this._contentReference.entity.element.calculatedHeight*this.mouseWheelSensitivity.y,a=at.clamp(this._scroll.x+n,0,this._getMaxScrollValue(eg)),s=at.clamp(this._scroll.y+i,0,this._getMaxScrollValue(tg));this.scroll=new ft(a,s)}},n._enableContentInput=function(){for(;this._disabledContentInputEntities.length;){var e=this._disabledContentInputEntities.pop();e.element&&(e.element.useInput=!0)}this._disabledContentInput=!1},n._disableContentInput=function(){var e=this,t=function t(n){n.element&&n.element.useInput&&(e._disabledContentInputEntities.push(n),n.element.useInput=!1);for(var i=n.children,a=0,s=i.length;a<s;a++)t(i[a])},n=this._contentReference.entity;if(n)for(var i=n.children,a=0,s=i.length;a<s;a++)t(i[a]);this._disabledContentInput=!0},n.onEnable=function(){this._viewportReference.onParentComponentEnable(),this._contentReference.onParentComponentEnable(),this._scrollbarReferences[eg].onParentComponentEnable(),this._scrollbarReferences[tg].onParentComponentEnable(),this._setScrollbarComponentsEnabled(!0),this._setContentDraggingEnabled(!0),this._syncAll()},n.onDisable=function(){this._setScrollbarComponentsEnabled(!1),this._setContentDraggingEnabled(!1)},n.onRemove=function(){this._toggleLifecycleListeners("off",this.system),this._toggleElementListeners("off"),this._destroyDragHelper()},q(t,[{key:"scroll",get:function(){return this._scroll},set:function(e){this._onSetScroll(e.x,e.y)}}]),t}(zS),xP=function(){this.enabled=!0},CP=[{name:"enabled",type:"boolean"},{name:"horizontal",type:"boolean"},{name:"vertical",type:"boolean"},{name:"scrollMode",type:"number"},{name:"bounceAmount",type:"number"},{name:"friction",type:"number"},{name:"dragThreshold",type:"number"},{name:"useMouseWheel",type:"boolean"},{name:"mouseWheelSensitivity",type:"vec2"},{name:"horizontalScrollbarVisibility",type:"number"},{name:"verticalScrollbarVisibility",type:"number"},{name:"viewportEntity",type:"entity"},{name:"contentEntity",type:"entity"},{name:"horizontalScrollbarEntity",type:"entity"},{name:"verticalScrollbarEntity",type:"entity"}],SP=10,EP=function(e){function t(t){var n;return(n=e.call(this,t)||this).id="scrollview",n.ComponentType=bP,n.DataType=xP,n.schema=CP,n.on("beforeremove",n._onRemoveComponent,J(n)),n.app.systems.on("update",n.onUpdate,J(n)),n}Z(t,e);var n=t.prototype;return n.initializeComponentData=function(t,n,i){void 0===n.dragThreshold&&(n.dragThreshold=SP),void 0===n.useMouseWheel&&(n.useMouseWheel=!0),void 0===n.mouseWheelSensitivity&&(n.mouseWheelSensitivity=new ft(1,1)),e.prototype.initializeComponentData.call(this,t,n,CP)},n.onUpdate=function(e){var t=this.store;for(var n in t){var i=t[n].entity,a=i.scrollview;a.enabled&&i.enabled&&a.onUpdate()}},n._onRemoveComponent=function(e,t){t.onRemove()},n.destroy=function(){e.prototype.destroy.call(this),this.app.systems.off("update",this.onUpdate,this)},t}(VS);zS._buildAccessors(bP.prototype,CP);var TP=function(e){function t(t,n){var i;return(i=e.call(this,t,n)||this)._handleReference=new lT(J(i),"handleEntity",{"element#gain":i._onHandleElementGain,"element#lose":i._onHandleElementLose,"element#set:anchor":i._onSetHandleAlignment,"element#set:margin":i._onSetHandleAlignment,"element#set:pivot":i._onSetHandleAlignment}),i._toggleLifecycleListeners("on"),i}Z(t,e);var n=t.prototype;return n._toggleLifecycleListeners=function(e){this[e]("set_value",this._onSetValue,this),this[e]("set_handleSize",this._onSetHandleSize,this),this[e]("set_orientation",this._onSetOrientation,this)},n._onHandleElementGain=function(){this._destroyDragHelper(),this._handleDragHelper=new mP(this._handleReference.entity.element,this._getAxis()),this._handleDragHelper.on("drag:move",this._onHandleDrag,this),this._updateHandlePositionAndSize()},n._onHandleElementLose=function(){this._destroyDragHelper()},n._onHandleDrag=function(e){this._handleReference.entity&&this.enabled&&this.entity.enabled&&(this.value=this._handlePositionToScrollValue(e[this._getAxis()]))},n._onSetValue=function(e,t,n){Math.abs(n-t)>1e-5&&(this.data.value=at.clamp(n,0,1),this._updateHandlePositionAndSize(),this.fire("set:value",this.data.value))},n._onSetHandleSize=function(e,t,n){Math.abs(n-t)>1e-5&&(this.data.handleSize=at.clamp(n,0,1),this._updateHandlePositionAndSize())},n._onSetHandleAlignment=function(){this._updateHandlePositionAndSize()},n._onSetOrientation=function(e,t,n){n!==t&&this._handleReference.hasComponent("element")&&(this._handleReference.entity.element[this._getOppositeDimension()]=0)},n._updateHandlePositionAndSize=function(){var e=this._handleReference.entity,t=e&&e.element;if(e){var n=e.getLocalPosition();n[this._getAxis()]=this._getHandlePosition(),this._handleReference.entity.setLocalPosition(n)}t&&(t[this._getDimension()]=this._getHandleLength())},n._handlePositionToScrollValue=function(e){return e*this._getSign()/this._getUsableTrackLength()},n._scrollValueToHandlePosition=function(e){return e*this._getSign()*this._getUsableTrackLength()},n._getUsableTrackLength=function(){return Math.max(this._getTrackLength()-this._getHandleLength(),.001)},n._getTrackLength=function(){return this.entity.element?this.orientation===eg?this.entity.element.calculatedWidth:this.entity.element.calculatedHeight:0},n._getHandleLength=function(){return this._getTrackLength()*this.handleSize},n._getHandlePosition=function(){return this._scrollValueToHandlePosition(this.value)},n._getSign=function(){return this.orientation===eg?1:-1},n._getAxis=function(){return this.orientation===eg?"x":"y"},n._getDimension=function(){return this.orientation===eg?"width":"height"},n._getOppositeDimension=function(){return this.orientation===eg?"height":"width"},n._destroyDragHelper=function(){this._handleDragHelper&&this._handleDragHelper.destroy()},n._setHandleDraggingEnabled=function(e){this._handleDragHelper&&(this._handleDragHelper.enabled=e)},n.onEnable=function(){this._handleReference.onParentComponentEnable(),this._setHandleDraggingEnabled(!0)},n.onDisable=function(){this._setHandleDraggingEnabled(!1)},n.onRemove=function(){this._destroyDragHelper(),this._toggleLifecycleListeners("off")},t}(zS),AP=function(){this.enabled=!0},LP=[{name:"enabled",type:"boolean"},{name:"orientation",type:"number"},{name:"value",type:"number"},{name:"handleSize",type:"number"},{name:"handleEntity",type:"entity"}],MP=function(e){function t(t){var n;return(n=e.call(this,t)||this).id="scrollbar",n.ComponentType=TP,n.DataType=AP,n.schema=LP,n.on("beforeremove",n._onRemoveComponent,J(n)),n}Z(t,e);var n=t.prototype;return n.initializeComponentData=function(t,n,i){e.prototype.initializeComponentData.call(this,t,n,LP)},n._onRemoveComponent=function(e,t){t.onRemove()},t}(VS);zS._buildAccessors(TP.prototype,LP);var PP={volume:0,pitch:0,loop:!1,startTime:0,duration:0,position:new pt,maxDistance:0,refDistance:0,rollOffFactor:0,distanceModel:0,onPlay:null,onPause:null,onResume:null,onStop:null,onEnd:null},OP=function(e){function t(t,n,i){var a;return void 0===n&&(n="Untitled"),void 0===i&&(i={}),(a=e.call(this)||this).name=void 0,a.instances=[],a._component=t,a._assets=t.system.app.assets,a._manager=t.system.manager,a.name=n,a._volume=void 0!==i.volume?at.clamp(Number(i.volume)||0,0,1):1,a._pitch=void 0!==i.pitch?Math.max(.01,Number(i.pitch)||0):1,a._loop=!(void 0===i.loop||!i.loop),a._duration=i.duration>0?i.duration:null,a._startTime=Math.max(0,Number(i.startTime)||0),a._overlap=!!i.overlap,a._autoPlay=!!i.autoPlay,a._firstNode=null,a._lastNode=null,a._asset=i.asset,a._asset instanceof eS&&(a._asset=a._asset.id),a._onInstancePlayHandler=a._onInstancePlay.bind(J(a)),a._onInstancePauseHandler=a._onInstancePause.bind(J(a)),a._onInstanceResumeHandler=a._onInstanceResume.bind(J(a)),a._onInstanceStopHandler=a._onInstanceStop.bind(J(a)),a._onInstanceEndHandler=a._onInstanceEnd.bind(J(a)),a}Z(t,e);var n=t.prototype;return n.play=function(){if(this.overlap||this.stop(),this.isLoaded||this._hasAsset()){var e=this._createInstance();if(this.instances.push(e),this.isLoaded)e.play();else{var t=function(t){var n=e._playWhenLoaded;e.sound=t,n&&e.play()};this.off("load",t),this.once("load",t),this.load()}return e}},n.pause=function(){for(var e=!1,t=this.instances,n=0,i=t.length;n<i;n++)t[n].pause()&&(e=!0);return e},n.resume=function(){for(var e=!1,t=this.instances,n=0,i=t.length;n<i;n++)t[n].resume()&&(e=!0);return e},n.stop=function(){for(var e=!1,t=this.instances,n=t.length;n--;)t[n].stop(),e=!0;return t.length=0,e},n.load=function(){if(this._hasAsset()){var e=this._assets.get(this._asset);if(!e)return this._assets.off("add:"+this._asset,this._onAssetAdd,this),void this._assets.once("add:"+this._asset,this._onAssetAdd,this);if(e.off("remove",this._onAssetRemoved,this),e.on("remove",this._onAssetRemoved,this),!e.resource)return e.off("load",this._onAssetLoad,this),e.once("load",this._onAssetLoad,this),void this._assets.load(e);this.fire("load",e.resource)}},n.setExternalNodes=function(e,t){if(e){if(t||(t=e),this._firstNode=e,this._lastNode=t,!this._overlap)for(var n=this.instances,i=0,a=n.length;i<a;i++)n[i].setExternalNodes(e,t)}else console.error("The firstNode must have a valid AudioNode")},n.clearExternalNodes=function(){if(this._firstNode=null,this._lastNode=null,!this._overlap)for(var e=this.instances,t=0,n=e.length;t<n;t++)e[t].clearExternalNodes()},n.getExternalNodes=function(){return[this._firstNode,this._lastNode]},n._hasAsset=function(){return null!=this._asset},n._createInstance=function(){var e=null,t=this._component,n=null;if(this._hasAsset()){var i=this._assets.get(this._asset);i&&(n=i.resource)}var a=PP;return a.volume=this._volume*t.volume,a.pitch=this._pitch*t.pitch,a.loop=this._loop,a.startTime=this._startTime,a.duration=this._duration,a.onPlay=this._onInstancePlayHandler,a.onPause=this._onInstancePauseHandler,a.onResume=this._onInstanceResumeHandler,a.onStop=this._onInstanceStopHandler,a.onEnd=this._onInstanceEndHandler,t.positional?(a.position.copy(t.entity.getPosition()),a.maxDistance=t.maxDistance,a.refDistance=t.refDistance,a.rollOffFactor=t.rollOffFactor,a.distanceModel=t.distanceModel,e=new fu(this._manager,n,a)):e=new uu(this._manager,n,a),this._firstNode&&e.setExternalNodes(this._firstNode,this._lastNode),e},n._onInstancePlay=function(e){this.fire("play",e),this._component.fire("play",this,e)},n._onInstancePause=function(e){this.fire("pause",e),this._component.fire("pause",this,e)},n._onInstanceResume=function(e){this.fire("resume",e),this._component.fire("resume",this,e)},n._onInstanceStop=function(e){var t=this.instances.indexOf(e);-1!==t&&this.instances.splice(t,1),this.fire("stop",e),this._component.fire("stop",this,e)},n._onInstanceEnd=function(e){var t=this.instances.indexOf(e);-1!==t&&this.instances.splice(t,1),this.fire("end",e),this._component.fire("end",this,e)},n._onAssetAdd=function(e){this.load()},n._onAssetLoad=function(e){this.load()},n._onAssetRemoved=function(e){e.off("remove",this._onAssetRemoved,this),this._assets.off("add:"+e.id,this._onAssetAdd,this),this.stop()},n.updatePosition=function(e){for(var t=this.instances,n=0,i=t.length;n<i;n++)t[n].position=e},q(t,[{key:"asset",get:function(){return this._asset},set:function(e){var t=this._asset;if(t){this._assets.off("add:"+t,this._onAssetAdd,this);var n=this._assets.get(t);n&&n.off("remove",this._onAssetRemoved,this)}this._asset=e,this._asset instanceof eS&&(this._asset=this._asset.id),this._hasAsset()&&this._component.enabled&&this._component.entity.enabled&&this.load()}},{key:"autoPlay",get:function(){return this._autoPlay},set:function(e){this._autoPlay=!!e}},{key:"duration",get:function(){var e=0;if(this._hasAsset()){var t=this._assets.get(this._asset);e=null!=t&&t.resource?t.resource.duration:0}return null!=this._duration?this._duration%(e||1):e},set:function(e){if(this._duration=Math.max(0,Number(e)||0)||null,!this._overlap)for(var t=this.instances,n=0,i=t.length;n<i;n++)t[n].duration=this._duration}},{key:"isLoaded",get:function(){if(this._hasAsset()){var e=this._assets.get(this._asset);if(e)return!!e.resource}return!1}},{key:"isPaused",get:function(){var e=this.instances,t=e.length;if(0===t)return!1;for(var n=0;n<t;n++)if(!e[n].isPaused)return!1;return!0}},{key:"isPlaying",get:function(){for(var e=this.instances,t=0,n=e.length;t<n;t++)if(e[t].isPlaying)return!0;return!1}},{key:"isStopped",get:function(){for(var e=this.instances,t=0,n=e.length;t<n;t++)if(!e[t].isStopped)return!1;return!0}},{key:"loop",get:function(){return this._loop},set:function(e){this._loop=!!e;for(var t=this.instances,n=0,i=t.length;n<i;n++)t[n].loop=this._loop}},{key:"overlap",get:function(){return this._overlap},set:function(e){this._overlap=!!e}},{key:"pitch",get:function(){return this._pitch},set:function(e){if(this._pitch=Math.max(Number(e)||0,.01),!this._overlap)for(var t=this.instances,n=0,i=t.length;n<i;n++)t[n].pitch=this.pitch*this._component.pitch}},{key:"startTime",get:function(){return this._startTime},set:function(e){if(this._startTime=Math.max(0,Number(e)||0),!this._overlap)for(var t=this.instances,n=0,i=t.length;n<i;n++)t[n].startTime=this._startTime}},{key:"volume",get:function(){return this._volume},set:function(e){if(this._volume=at.clamp(Number(e)||0,0,1),!this._overlap)for(var t=this.instances,n=0,i=t.length;n<i;n++)t[n].volume=this._volume*this._component.volume}}]),t}(re),IP=function(e){function t(t,n){var i;return(i=e.call(this,t,n)||this)._volume=1,i._pitch=1,i._positional=!0,i._refDistance=1,i._maxDistance=1e4,i._rollOffFactor=1,i._distanceModel=Gt,i._slots={},i._playingBeforeDisable={},i}Z(t,e);var n=t.prototype;return n._updateSoundInstances=function(e,t,n){var i=this._slots;for(var a in i){var s=i[a];if(!s.overlap)for(var r=s.instances,o=0,l=r.length;o<l;o++)r[o][e]=n?s[e]*t:t}},n.onEnable=function(){if(!this.system._inTools){var e=this._slots,t=this._playingBeforeDisable;for(var n in e){var i=e[n];i.autoPlay&&i.isStopped?i.play():t[n]?i.resume():i.isLoaded||i.load()}}},n.onDisable=function(){var e=this._slots,t={};for(var n in e)e[n].overlap||e[n].isPlaying&&(e[n].pause(),t[n]=!0);this._playingBeforeDisable=t},n.onRemove=function(){this.off()},n.addSlot=function(e,t){var n=this._slots;if(n[e])return null;var i=new OP(this,e,t);return n[e]=i,i.autoPlay&&this.enabled&&this.entity.enabled&&i.play(),i},n.removeSlot=function(e){var t=this._slots;t[e]&&(t[e].stop(),delete t[e])},n.slot=function(e){return this._slots[e]},n._getSlotProperty=function(e,t){if(this.enabled&&this.entity.enabled){var n=this._slots[e];if(n)return n[t]}},n.isPlaying=function(e){return this._getSlotProperty(e,"isPlaying")||!1},n.isLoaded=function(e){return this._getSlotProperty(e,"isLoaded")||!1},n.isPaused=function(e){return this._getSlotProperty(e,"isPaused")||!1},n.isStopped=function(e){return this._getSlotProperty(e,"isStopped")||!1},n.play=function(e){if(!this.enabled||!this.entity.enabled)return null;var t=this._slots[e];return t?t.play():null},n.pause=function(e){var t=this._slots;if(e){var n=t[e];if(!n)return;n.pause()}else for(var i in t)t[i].pause()},n.resume=function(e){var t=this._slots;if(e){var n=t[e];if(!n)return;n.isPaused&&n.resume()}else for(var i in t)t[i].resume()},n.stop=function(e){var t=this._slots;if(e){var n=t[e];if(!n)return;n.stop()}else for(var i in t)t[i].stop()},q(t,[{key:"distanceModel",get:function(){return this._distanceModel},set:function(e){this._distanceModel=e,this._updateSoundInstances("distanceModel",e,!1)}},{key:"maxDistance",get:function(){return this._maxDistance},set:function(e){this._maxDistance=e,this._updateSoundInstances("maxDistance",e,!1)}},{key:"refDistance",get:function(){return this._refDistance},set:function(e){this._refDistance=e,this._updateSoundInstances("refDistance",e,!1)}},{key:"rollOffFactor",get:function(){return this._rollOffFactor},set:function(e){this._rollOffFactor=e,this._updateSoundInstances("rollOffFactor",e,!1)}},{key:"pitch",get:function(){return this._pitch},set:function(e){this._pitch=e,this._updateSoundInstances("pitch",e,!0)}},{key:"volume",get:function(){return this._volume},set:function(e){this._volume=e,this._updateSoundInstances("volume",e,!0)}},{key:"positional",get:function(){return this._positional},set:function(e){this._positional=e;var t=this._slots;for(var n in t){var i=t[n];if(!i.overlap)for(var a=i.instances,s=a.length-1;s>=0;s--){var r=a[s].isPlaying||a[s].isSuspended,o=a[s].currentTime;r&&a[s].stop();var l=i._createInstance();r&&(l.play(),l.currentTime=o),a.push(l)}}}},{key:"slots",get:function(){return this._slots},set:function(e){var t=this._slots;if(t)for(var n in t)t[n].stop();var i={};for(var a in e)e[a]instanceof OP?i[e[a].name]=e[a]:e[a].name&&(i[e[a].name]=new OP(this,e[a].name,e[a]));this._slots=i,this.enabled&&this.entity.enabled&&this.onEnable()}}]),t}(zS),RP=function(){this.enabled=!0},DP=["enabled"],kP=function(e){function t(t){var n;return(n=e.call(this,t)||this).id="sound",n.ComponentType=IP,n.DataType=RP,n.schema=DP,n.manager=t.soundManager,n.app.systems.on("update",n.onUpdate,J(n)),n.on("beforeremove",n.onBeforeRemove,J(n)),n}Z(t,e);var n=t.prototype;return n.initializeComponentData=function(t,n,i){i=["volume","pitch","positional","refDistance","maxDistance","rollOffFactor","distanceModel","slots"];for(var a=0;a<i.length;a++)n.hasOwnProperty(i[a])&&(t[i[a]]=n[i[a]]);e.prototype.initializeComponentData.call(this,t,n,["enabled"])},n.cloneComponent=function(e,t){var n=e.sound,i=n.slots,a={};for(var s in i){var r=i[s];a[s]={name:r.name,volume:r.volume,pitch:r.pitch,loop:r.loop,duration:r.duration,startTime:r.startTime,overlap:r.overlap,autoPlay:r.autoPlay,asset:r.asset}}var o={distanceModel:n.distanceModel,enabled:n.enabled,maxDistance:n.maxDistance,pitch:n.pitch,positional:n.positional,refDistance:n.refDistance,rollOffFactor:n.rollOffFactor,slots:a,volume:n.volume};return this.addComponent(t,o)},n.onUpdate=function(e){var t=this.store;for(var n in t)if(t.hasOwnProperty(n)){var i=t[n].entity;if(i.enabled){var a=i.sound;if(a.enabled&&a.positional){var s=i.getPosition(),r=a.slots;for(var o in r)r[o].updatePosition(s)}}}},n.onBeforeRemove=function(e,t){var n=t.slots;for(var i in n)n[i].overlap||n[i].stop();t.onRemove()},n.destroy=function(){e.prototype.destroy.call(this),this.app.systems.off("update",this.onUpdate,this)},q(t,[{key:"volume",get:function(){return this.manager.volume},set:function(e){this.manager.volume=e}},{key:"context",get:function(){return Jd()?this.manager.context:null}}]),t}(VS);zS._buildAccessors(IP.prototype,DP);var FP="simple",BP="animated",NP=function(e){function t(t,n){var i;return(i=e.call(this)||this)._component=t,i._frame=0,i._sprite=null,i._spriteAsset=null,i.spriteAsset=n.spriteAsset,i.name=n.name,i.fps=n.fps||0,i.loop=n.loop||!1,i._playing=!1,i._paused=!1,i._time=0,i}Z(t,e);var n=t.prototype;return n._onSpriteAssetAdded=function(e){this._component.system.app.assets.off("add:"+e.id,this._onSpriteAssetAdded,this),this._spriteAsset===e.id&&this._bindSpriteAsset(e)},n._bindSpriteAsset=function(e){e.on("load",this._onSpriteAssetLoad,this),e.on("remove",this._onSpriteAssetRemove,this),e.resource?this._onSpriteAssetLoad(e):this._component.system.app.assets.load(e)},n._unbindSpriteAsset=function(e){e&&(e.off("load",this._onSpriteAssetLoad,this),e.off("remove",this._onSpriteAssetRemove,this),e.resource&&!e.resource.atlas&&this._component.system.app.assets.off("load:"+e.data.textureAtlasAsset,this._onTextureAtlasLoad,this))},n._onSpriteAssetLoad=function(e){if(e.resource)if(e.resource.atlas)this.sprite=e.resource;else{var t=e.data.textureAtlasAsset,n=this._component.system.app.assets;n.off("load:"+t,this._onTextureAtlasLoad,this),n.once("load:"+t,this._onTextureAtlasLoad,this)}else this.sprite=null},n._onTextureAtlasLoad=function(e){var t=this._spriteAsset;t instanceof eS?this._onSpriteAssetLoad(t):this._onSpriteAssetLoad(this._component.system.app.assets.get(t))},n._onSpriteAssetRemove=function(e){this.sprite=null},n._onSpriteMeshesChange=function(){this._component.currentClip===this&&this._component._showFrame(this.frame)},n._onSpritePpuChanged=function(){this._component.currentClip===this&&this.sprite.renderMode!==Nf&&this._component._showFrame(this.frame)},n._update=function(e){if(0!==this.fps&&this._playing&&!this._paused&&this._sprite){var t=this.fps<0?-1:1,n=this._time+e*this._component.speed*t,i=this.duration,a=n>i||n<0;this._setTime(n);var s=this.frame;(s=this._sprite?Math.floor(this._sprite.frameKeys.length*this._time/i):0)!==this._frame&&this._setFrame(s),a&&(this.loop?(this.fire("loop"),this._component.fire("loop",this)):(this._playing=!1,this._paused=!1,this.fire("end"),this._component.fire("end",this)))}},n._setTime=function(e){this._time=e;var t=this.duration;this._time<0?this.loop?this._time=this._time%t+t:this._time=0:this._time>t&&(this.loop?this._time%=t:this._time=t)},n._setFrame=function(e){this._sprite?this._frame=at.clamp(e,0,this._sprite.frameKeys.length-1):this._frame=e,this._component.currentClip===this&&this._component._showFrame(this._frame)},n._destroy=function(){if(this._spriteAsset){var e=this._component.system.app.assets;this._unbindSpriteAsset(e.get(this._spriteAsset))}this._sprite&&(this.sprite=null),this._spriteAsset&&(this.spriteAsset=null)},n.play=function(){this._playing||(this._playing=!0,this._paused=!1,this.frame=0,this.fire("play"),this._component.fire("play",this))},n.pause=function(){this._playing&&!this._paused&&(this._paused=!0,this.fire("pause"),this._component.fire("pause",this))},n.resume=function(){this._paused&&(this._paused=!1,this.fire("resume"),this._component.fire("resume",this))},n.stop=function(){this._playing&&(this._playing=!1,this._paused=!1,this._time=0,this.frame=0,this.fire("stop"),this._component.fire("stop",this))},q(t,[{key:"duration",get:function(){if(this._sprite){var e=this.fps||Number.MIN_VALUE;return this._sprite.frameKeys.length/Math.abs(e)}return 0}},{key:"frame",get:function(){return this._frame},set:function(e){this._setFrame(e);var t=this.fps||Number.MIN_VALUE;this._setTime(this._frame/t)}},{key:"isPaused",get:function(){return this._paused}},{key:"isPlaying",get:function(){return this._playing}},{key:"sprite",get:function(){return this._sprite},set:function(e){var t;this._sprite&&(this._sprite.off("set:meshes",this._onSpriteMeshesChange,this),this._sprite.off("set:pixelsPerUnit",this._onSpritePpuChanged,this),this._sprite.off("set:atlas",this._onSpriteMeshesChange,this),this._sprite.atlas&&this._sprite.atlas.off("set:texture",this._onSpriteMeshesChange,this)),this._sprite=e,this._sprite&&(this._sprite.on("set:meshes",this._onSpriteMeshesChange,this),this._sprite.on("set:pixelsPerUnit",this._onSpritePpuChanged,this),this._sprite.on("set:atlas",this._onSpriteMeshesChange,this),this._sprite.atlas&&this._sprite.atlas.on("set:texture",this._onSpriteMeshesChange,this)),this._component.currentClip===this&&(e&&e.atlas?(e.atlas.texture&&((t=this._component._meshInstance)&&(t.setParameter("texture_emissiveMap",e.atlas.texture),t.setParameter("texture_opacityMap",e.atlas.texture)),this._component.enabled&&this._component.entity.enabled&&this._component._showModel()),this.time&&this.fps?this.time=this.time:this.frame=this.frame):((t=this._component._meshInstance)&&(t.deleteParameter("texture_emissiveMap"),t.deleteParameter("texture_opacityMap")),this._component._hideModel()))}},{key:"spriteAsset",get:function(){return this._spriteAsset},set:function(e){var t=this._component.system.app.assets,n=e;if(e instanceof eS&&(n=e.id),this._spriteAsset!==n){if(this._spriteAsset){var i=t.get(this._spriteAsset);i&&this._unbindSpriteAsset(i)}if(this._spriteAsset=n,this._spriteAsset){var a=t.get(this._spriteAsset);a?this._bindSpriteAsset(a):(this.sprite=null,t.on("add:"+this._spriteAsset,this._onSpriteAssetAdded,this))}else this.sprite=null}}},{key:"time",get:function(){return this._time},set:function(e){this._setTime(e),this._sprite?this.frame=Math.min(this._sprite.frameKeys.length-1,Math.floor(this._time*Math.abs(this.fps))):this.frame=0}}]),t}(re),UP="texture_emissiveMap",zP="texture_opacityMap",VP="material_emissive",HP="material_opacity",GP="innerOffset",WP="outerScale",jP="atlasRect",XP=function(e){function t(t,n){var i;return(i=e.call(this,t,n)||this)._type=FP,i._material=t.defaultMaterial,i._color=new st(1,1,1,1),i._colorUniform=new Float32Array(3),i._speed=1,i._flipX=!1,i._flipY=!1,i._width=1,i._height=1,i._drawOrder=0,i._layers=[Uu],i._outerScale=new ft(1,1),i._outerScaleUniform=new Float32Array(2),i._innerOffset=new vt,i._innerOffsetUniform=new Float32Array(4),i._atlasRect=new vt,i._atlasRectUniform=new Float32Array(4),i._batchGroupId=-1,i._batchGroup=null,i._node=new Cv,i._model=new Mb,i._model.graph=i._node,i._meshInstance=null,n.addChild(i._model.graph),i._model._entity=n,i._updateAabbFunc=i._updateAabb.bind(J(i)),i._addedModel=!1,i._autoPlayClip=null,i._clips={},i._defaultClip=new NP(J(i),{name:i.entity.name,fps:0,loop:!1,spriteAsset:null}),i._currentClip=i._defaultClip,i}Z(t,e);var n=t.prototype;return n.onEnable=function(){var e,t=this.system.app,n=t.scene;n.on("set:layers",this._onLayersChanged,this),n.layers&&(n.layers.on("add",this._onLayerAdded,this),n.layers.on("remove",this._onLayerRemoved,this)),this._showModel(),this._autoPlayClip&&this._tryAutoPlay(),this._batchGroupId>=0&&(null==(e=t.batcher)||e.insert(av.SPRITE,this._batchGroupId,this.entity))},n.onDisable=function(){var e,t=this.system.app,n=t.scene;n.off("set:layers",this._onLayersChanged,this),n.layers&&(n.layers.off("add",this._onLayerAdded,this),n.layers.off("remove",this._onLayerRemoved,this)),this.stop(),this._hideModel(),this._batchGroupId>=0&&(null==(e=t.batcher)||e.remove(av.SPRITE,this._batchGroupId,this.entity))},n.onDestroy=function(){var e;for(var t in this._currentClip=null,this._defaultClip&&(this._defaultClip._destroy(),this._defaultClip=null),this._clips)this._clips[t]._destroy();this._clips=null,this._hideModel(),this._model=null,null==(e=this._node)||e.remove(),this._node=null,this._meshInstance&&(this._meshInstance.material=null,this._meshInstance.mesh=null,this._meshInstance=null)},n._showModel=function(){if(!this._addedModel&&this._meshInstance){for(var e=[this._meshInstance],t=0,n=this._layers.length;t<n;t++){var i=this.system.app.scene.layers.getLayerById(this._layers[t]);i&&i.addMeshInstances(e)}this._addedModel=!0}},n._hideModel=function(){if(this._addedModel&&this._meshInstance){for(var e=[this._meshInstance],t=0,n=this._layers.length;t<n;t++){var i=this.system.app.scene.layers.getLayerById(this._layers[t]);i&&i.removeMeshInstances(e)}this._addedModel=!1}},n._showFrame=function(e){if(this.sprite){var t=this.sprite.meshes[e];if(t){var n;if(n=this.sprite.renderMode===Uf?this.system.default9SlicedMaterialSlicedMode:this.sprite.renderMode===zf?this.system.default9SlicedMaterialTiledMode:this.system.defaultMaterial,this._meshInstance||(this._meshInstance=new Dv(t,this._material,this._node),this._meshInstance.castShadow=!1,this._meshInstance.receiveShadow=!1,this._meshInstance.drawOrder=this._drawOrder,this._model.meshInstances.push(this._meshInstance),this._colorUniform[0]=this._color.r,this._colorUniform[1]=this._color.g,this._colorUniform[2]=this._color.b,this._meshInstance.setParameter(VP,this._colorUniform),this._meshInstance.setParameter(HP,this._color.a),this.enabled&&this.entity.enabled&&this._showModel()),this._meshInstance.material!==n&&(this._meshInstance.material=n),this._meshInstance.mesh!==t&&(this._meshInstance.mesh=t,this._meshInstance.visible=!0,this._meshInstance._aabbVer=-1),this.sprite.atlas&&this.sprite.atlas.texture?(this._meshInstance.setParameter(UP,this.sprite.atlas.texture),this._meshInstance.setParameter(zP,this.sprite.atlas.texture)):(this._meshInstance.deleteParameter(UP),this._meshInstance.deleteParameter(zP)),!this.sprite.atlas||this.sprite.renderMode!==Uf&&this.sprite.renderMode!==zf)this._meshInstance._updateAabbFunc=null;else{this._meshInstance._updateAabbFunc=this._updateAabbFunc;var i=this.sprite.atlas.frames[this.sprite.frameKeys[e]];if(i){var a=2/i.rect.z,s=2/i.rect.w;this._innerOffset.set(i.border.x*a,i.border.y*s,i.border.z*a,i.border.w*s);var r=this.sprite.atlas.texture;this._atlasRect.set(i.rect.x/r.width,i.rect.y/r.height,i.rect.z/r.width,i.rect.w/r.height)}else this._innerOffset.set(0,0,0,0);this._innerOffsetUniform[0]=this._innerOffset.x,this._innerOffsetUniform[1]=this._innerOffset.y,this._innerOffsetUniform[2]=this._innerOffset.z,this._innerOffsetUniform[3]=this._innerOffset.w,this._meshInstance.setParameter(GP,this._innerOffsetUniform),this._atlasRectUniform[0]=this._atlasRect.x,this._atlasRectUniform[1]=this._atlasRect.y,this._atlasRectUniform[2]=this._atlasRect.z,this._atlasRectUniform[3]=this._atlasRect.w,this._meshInstance.setParameter(jP,this._atlasRectUniform)}this._updateTransform()}else this._meshInstance&&(this._meshInstance.mesh=null,this._meshInstance.visible=!1)}},n._updateTransform=function(){var e=this.flipX?-1:1,t=this.flipY?-1:1,n=0,i=0;if(this.sprite&&(this.sprite.renderMode===Uf||this.sprite.renderMode===zf)){var a=1,s=1;if(this.sprite.atlas){var r=this.sprite.atlas.frames[this.sprite.frameKeys[this.frame]];r&&(a=r.rect.z,s=r.rect.w,n=(.5-r.pivot.x)*this._width,i=(.5-r.pivot.y)*this._height)}var o=a/this.sprite.pixelsPerUnit,l=s/this.sprite.pixelsPerUnit;this._outerScale.set(Math.max(this._width,this._innerOffset.x*o),Math.max(this._height,this._innerOffset.y*l)),e*=o,t*=l,this._outerScale.x/=o,this._outerScale.y/=l,e*=at.clamp(this._width/(this._innerOffset.x*o),1e-4,1),t*=at.clamp(this._height/(this._innerOffset.y*l),1e-4,1),this._meshInstance&&(this._outerScaleUniform[0]=this._outerScale.x,this._outerScaleUniform[1]=this._outerScale.y,this._meshInstance.setParameter(WP,this._outerScaleUniform))}this._node.setLocalScale(e,t,1),this._node.setLocalPosition(n,i,0)},n._updateAabb=function(e){return e.center.set(0,0,0),e.halfExtents.set(.5*this._outerScale.x,.5*this._outerScale.y,.001),e.setFromTransformedAabb(e,this._node.getWorldTransform()),e},n._tryAutoPlay=function(){if(this._autoPlayClip&&this.type===BP){var e=this._clips[this._autoPlayClip];!e||e.isPlaying||this._currentClip&&this._currentClip.isPlaying||this.enabled&&this.entity.enabled&&this.play(e.name)}},n._onLayersChanged=function(e,t){e.off("add",this.onLayerAdded,this),e.off("remove",this.onLayerRemoved,this),t.on("add",this.onLayerAdded,this),t.on("remove",this.onLayerRemoved,this),this.enabled&&this.entity.enabled&&this._showModel()},n._onLayerAdded=function(e){this.layers.indexOf(e.id)<0||this._addedModel&&this.enabled&&this.entity.enabled&&this._meshInstance&&e.addMeshInstances([this._meshInstance])},n._onLayerRemoved=function(e){this._meshInstance&&(this.layers.indexOf(e.id)<0||e.removeMeshInstances([this._meshInstance]))},n.removeModelFromLayers=function(){for(var e=0;e<this.layers.length;e++){var t=this.system.app.scene.layers.getLayerById(this.layers[e]);t&&t.removeMeshInstances([this._meshInstance])}},n.addClip=function(e){var t=new NP(this,{name:e.name,fps:e.fps,loop:e.loop,spriteAsset:e.spriteAsset});return this._clips[e.name]=t,t.name&&t.name===this._autoPlayClip&&this._tryAutoPlay(),t},n.removeClip=function(e){delete this._clips[e]},n.clip=function(e){return this._clips[e]},n.play=function(e){var t=this._clips[e],n=this._currentClip;return n&&n!==t&&(n._playing=!1),this._currentClip=t,this._currentClip&&(this._currentClip=t,this._currentClip.play()),t},n.pause=function(){this._currentClip!==this._defaultClip&&this._currentClip.isPlaying&&this._currentClip.pause()},n.resume=function(){this._currentClip!==this._defaultClip&&this._currentClip.isPaused&&this._currentClip.resume()},n.stop=function(){this._currentClip!==this._defaultClip&&this._currentClip.stop()},q(t,[{key:"type",get:function(){return this._type},set:function(e){this._type!==e&&(this._type=e,this._type===FP?(this.stop(),this._currentClip=this._defaultClip,this.enabled&&this.entity.enabled&&(this._currentClip.frame=this.frame,this._currentClip.sprite?this._showModel():this._hideModel())):this._type===BP&&(this.stop(),this._autoPlayClip&&this._tryAutoPlay(),this._currentClip&&this._currentClip.isPlaying&&this.enabled&&this.entity.enabled?this._showModel():this._hideModel()))}},{key:"frame",get:function(){return this._currentClip.frame},set:function(e){this._currentClip.frame=e}},{key:"spriteAsset",get:function(){return this._defaultClip._spriteAsset},set:function(e){this._defaultClip.spriteAsset=e}},{key:"sprite",get:function(){return this._currentClip.sprite},set:function(e){this._currentClip.sprite=e}},{key:"material",get:function(){return this._material},set:function(e){this._material=e,this._meshInstance&&(this._meshInstance.material=e)}},{key:"color",get:function(){return this._color},set:function(e){this._color.r=e.r,this._color.g=e.g,this._color.b=e.b,this._meshInstance&&(this._colorUniform[0]=this._color.r,this._colorUniform[1]=this._color.g,this._colorUniform[2]=this._color.b,this._meshInstance.setParameter(VP,this._colorUniform))}},{key:"opacity",get:function(){return this._color.a},set:function(e){this._color.a=e,this._meshInstance&&this._meshInstance.setParameter(HP,e)}},{key:"clips",get:function(){return this._clips},set:function(e){if(e){for(var t in this._clips){var n=!1;for(var i in e)if(e[i].name===t){n=!0,this._clips[t].fps=e[i].fps,this._clips[t].loop=e[i].loop,e[i].hasOwnProperty("sprite")?this._clips[t].sprite=e[i].sprite:e[i].hasOwnProperty("spriteAsset")&&(this._clips[t].spriteAsset=e[i].spriteAsset);break}n||this.removeClip(t)}for(var a in e)this._clips[e[a].name]||this.addClip(e[a]);this._autoPlayClip&&this._tryAutoPlay(),this._currentClip&&this._currentClip.sprite||this._hideModel()}else for(var s in this._clips)this.removeClip(s)}},{key:"currentClip",get:function(){return this._currentClip}},{key:"speed",get:function(){return this._speed},set:function(e){this._speed=e}},{key:"flipX",get:function(){return this._flipX},set:function(e){this._flipX!==e&&(this._flipX=e,this._updateTransform())}},{key:"flipY",get:function(){return this._flipY},set:function(e){this._flipY!==e&&(this._flipY=e,this._updateTransform())}},{key:"width",get:function(){return this._width},set:function(e){e!==this._width&&(this._width=e,this._outerScale.x=this._width,!this.sprite||this.sprite.renderMode!==zf&&this.sprite.renderMode!==Uf||this._updateTransform())}},{key:"height",get:function(){return this._height},set:function(e){e!==this._height&&(this._height=e,this._outerScale.y=this.height,!this.sprite||this.sprite.renderMode!==zf&&this.sprite.renderMode!==Uf||this._updateTransform())}},{key:"batchGroupId",get:function(){return this._batchGroupId},set:function(e){if(this._batchGroupId!==e){var t,n,i=this._batchGroupId;this._batchGroupId=e,this.entity.enabled&&i>=0&&(null==(t=this.system.app.batcher)||t.remove(av.SPRITE,i,this.entity)),this.entity.enabled&&e>=0?null==(n=this.system.app.batcher)||n.insert(av.SPRITE,e,this.entity):i>=0&&this._currentClip&&this._currentClip.sprite&&this.enabled&&this.entity.enabled&&this._showModel()}}},{key:"autoPlayClip",get:function(){return this._autoPlayClip},set:function(e){this._autoPlayClip=e instanceof NP?e.name:e,this._tryAutoPlay()}},{key:"drawOrder",get:function(){return this._drawOrder},set:function(e){this._drawOrder=e,this._meshInstance&&(this._meshInstance.drawOrder=e)}},{key:"layers",get:function(){return this._layers},set:function(e){this._addedModel&&this._hideModel(),this._layers=e,this._meshInstance&&this.enabled&&this.entity.enabled&&this._showModel()}},{key:"aabb",get:function(){return this._meshInstance?this._meshInstance.aabb:null}}]),t}(zS),YP=function(){this.enabled=!0},qP=["enabled"],KP=function(e){function t(t){var n;return(n=e.call(this,t)||this).id="sprite",n.ComponentType=XP,n.DataType=YP,n.schema=qP,n._defaultTexture=null,n._defaultMaterial=null,n._default9SlicedMaterialSlicedMode=null,n._default9SlicedMaterialTiledMode=null,n.app.systems.on("update",n.onUpdate,J(n)),n.on("beforeremove",n.onBeforeRemove,J(n)),n}Z(t,e);var n=t.prototype;return n.destroy=function(){e.prototype.destroy.call(this),this.app.systems.off("update",this.onUpdate,this),this._defaultTexture&&(this._defaultTexture.destroy(),this._defaultTexture=null)},n.initializeComponentData=function(t,n,i){var a,s;if(void 0!==n.enabled&&(t.enabled=n.enabled),t.type=n.type,n.layers&&Array.isArray(n.layers)&&(t.layers=n.layers.slice(0)),void 0!==n.drawOrder&&(t.drawOrder=n.drawOrder),void 0!==n.color&&(n.color instanceof st?t.color.set(n.color.r,n.color.g,n.color.b,null!=(a=n.opacity)?a:1):t.color.set(n.color[0],n.color[1],n.color[2],null!=(s=n.opacity)?s:1),t.color=t.color),void 0!==n.opacity&&(t.opacity=n.opacity),void 0!==n.flipX&&(t.flipX=n.flipX),void 0!==n.flipY&&(t.flipY=n.flipY),void 0!==n.width&&(t.width=n.width),void 0!==n.height&&(t.height=n.height),void 0!==n.spriteAsset&&(t.spriteAsset=n.spriteAsset),n.sprite&&(t.sprite=n.sprite),void 0!==n.frame&&(t.frame=n.frame),n.clips)for(var r in n.clips)t.addClip(n.clips[r]);void 0!==n.speed&&(t.speed=n.speed),n.autoPlayClip&&(t.autoPlayClip=n.autoPlayClip),t.batchGroupId=void 0===n.batchGroupId||null===n.batchGroupId?-1:n.batchGroupId,e.prototype.initializeComponentData.call(this,t,n,i)},n.cloneComponent=function(e,t){var n=e.sprite;return this.addComponent(t,{enabled:n.enabled,type:n.type,spriteAsset:n.spriteAsset,sprite:n.sprite,width:n.width,height:n.height,frame:n.frame,color:n.color.clone(),opacity:n.opacity,flipX:n.flipX,flipY:n.flipY,speed:n.speed,clips:n.clips,autoPlayClip:n.autoPlayClip,batchGroupId:n.batchGroupId,drawOrder:n.drawOrder,layers:n.layers.slice(0)})},n.onUpdate=function(e){var t=this.store;for(var n in t)if(t.hasOwnProperty(n)){var i=t[n];if(i.data.enabled&&i.entity.enabled){var a=i.entity.sprite;a._currentClip&&a._currentClip._update(e)}}},n.onBeforeRemove=function(e,t){t.onDestroy()},q(t,[{key:"defaultMaterial",get:function(){if(!this._defaultMaterial){var e=new vl(this.app.graphicsDevice,{width:1,height:1,format:ti,name:"sprite"}),t=new Uint8Array(e.lock());t[0]=t[1]=t[2]=t[3]=255,e.unlock();var n=new zw;n.diffuse.set(0,0,0),n.emissive.set(.5,.5,.5),n.emissiveMap=e,n.emissiveTint=!0,n.opacityMap=e,n.opacityMapChannel="a",n.opacityTint=!0,n.opacity=0,n.useLighting=!1,n.useGammaTonemap=!1,n.useFog=!1,n.useSkybox=!1,n.blendType=xu,n.depthWrite=!1,n.pixelSnap=!1,n.cull=An,n.update(),this._defaultTexture=e,this._defaultMaterial=n}return this._defaultMaterial},set:function(e){this._defaultMaterial=e}},{key:"default9SlicedMaterialSlicedMode",get:function(){if(!this._default9SlicedMaterialSlicedMode){var e=this.defaultMaterial.clone();e.nineSlicedMode=Uf,e.update(),this._default9SlicedMaterialSlicedMode=e}return this._default9SlicedMaterialSlicedMode},set:function(e){this._default9SlicedMaterialSlicedMode=e}},{key:"default9SlicedMaterialTiledMode",get:function(){if(!this._default9SlicedMaterialTiledMode){var e=this.defaultMaterial.clone();e.nineSlicedMode=zf,e.update(),this._default9SlicedMaterialTiledMode=e}return this._default9SlicedMaterialTiledMode},set:function(e){this._default9SlicedMaterialTiledMode=e}}]),t}(VS);zS._buildAccessors(XP.prototype,qP);var ZP=function(e){function t(t,n){var i;return(i=e.call(this,t,n)||this)._oldState=!0,i._size=new pt,i.on("set_enabled",i._onSetEnabled,J(i)),i}Z(t,e);var n=t.prototype;return n.onEnable=function(){this._checkState()},n.onDisable=function(){this._checkState()},n._onSetEnabled=function(e,t,n){this._checkState()},n._checkState=function(){var e=this.enabled&&this.entity.enabled;e!==this._oldState&&(this._oldState=e,this.fire("enable"),this.fire("state",this.enabled))},n._onBeforeRemove=function(){this.fire("remove")},q(t,[{key:"size",get:function(){return this._size},set:function(e){e instanceof pt?this._size.copy(e):e instanceof Array&&e.length>=3&&this.size.set(e[0],e[1],e[2])}}]),t}(zS),QP=function(){this.enabled=!0},JP=["enabled"],$P=function(e){function t(t){var n;return(n=e.call(this,t)||this).id="zone",n.ComponentType=ZP,n.DataType=QP,n.schema=JP,n.on("beforeremove",n._onBeforeRemove,J(n)),n}Z(t,e);var n=t.prototype;return n.initializeComponentData=function(e,t,n){e.enabled=!t.hasOwnProperty("enabled")||!!t.enabled,t.size&&(t.size instanceof pt?e.size.copy(t.size):t.size instanceof Array&&t.size.length>=3&&e.size.set(t.size[0],t.size[1],t.size[2]))},n.cloneComponent=function(e,t){var n={size:e.zone.size};return this.addComponent(t,n)},n._onBeforeRemove=function(e,t){t._onBeforeRemove()},t}(VS);zS._buildAccessors(ZP.prototype,JP);var eO=function(e,t){this.effect=e,this.inputTarget=t,this.outputTarget=null,this.name=e.constructor.name},tO=function(){function e(e,t){this.app=e,this.camera=t,this.destinationRenderTarget=null,this.effects=[],this.enabled=!1,this.depthTarget=null,t.on("set:rect",this.onCameraRectChanged,this)}var t=e.prototype;return t._allocateColorBuffer=function(e,t){var n,i,a=this.camera.rect,s=this.camera.renderTarget,r=this.app.graphicsDevice,o=Math.floor(a.z*(null!=(n=null==s?void 0:s.width)?n:r.width)),l=Math.floor(a.w*(null!=(i=null==s?void 0:s.height)?i:r.height));return new vl(r,{name:t,format:e,width:o,height:l,mipmaps:!1,minFilter:On,magFilter:On,addressU:Yt,addressV:Yt})},t._createOffscreenTarget=function(e,t){var n=this.app.graphicsDevice,i=t&&n.getHdrFormat(!1,!0,!1,!1)||ti,a=this.camera.entity.name+"-posteffect-"+this.effects.length,s=this._allocateColorBuffer(i,a);return new Vr({colorBuffer:s,depth:e,stencil:e&&this.app.graphicsDevice.supportsStencil,samples:e?n.samples:1})},t._resizeOffscreenTarget=function(e){var t=e.colorBuffer.format,n=e.colorBuffer.name;e.destroyFrameBuffers(),e.destroyTextureBuffers(),e._colorBuffer=this._allocateColorBuffer(t,n),e._colorBuffers=[e._colorBuffer]},t._destroyOffscreenTarget=function(e){e.destroyTextureBuffers(),e.destroy()},t.addEffect=function(e){var t=this.effects,n=0===t.length,i=this._createOffscreenTarget(n,e.hdr),a=new eO(e,i);t.push(a),this._sourceTarget=a.inputTarget,t.length>1&&(t[t.length-2].outputTarget=a.inputTarget),this._newPostEffect=e,e.needsDepthBuffer&&this._requestDepthMap(),this.enable(),this._newPostEffect=void 0},t.removeEffect=function(e){for(var t=-1,n=0,i=this.effects.length;n<i;n++)if(this.effects[n].effect===e){t=n;break}t>=0&&(t>0?this.effects[t-1].outputTarget=t+1<this.effects.length?this.effects[t+1].inputTarget:null:this.effects.length>1&&(this.effects[1].inputTarget._depth||(this._destroyOffscreenTarget(this.effects[1].inputTarget),this.effects[1].inputTarget=this._createOffscreenTarget(!0,this.effects[1].hdr),this._sourceTarget=this.effects[1].inputTarget),this.camera.renderTarget=this.effects[1].inputTarget),this._destroyOffscreenTarget(this.effects[t].inputTarget),this.effects.splice(t,1)),this.enabled&&e.needsDepthBuffer&&this._releaseDepthMap(),0===this.effects.length&&this.disable()},t._requestDepthMaps=function(){for(var e=0,t=this.effects.length;e<t;e++){var n=this.effects[e].effect;this._newPostEffect!==n&&n.needsDepthBuffer&&this._requestDepthMap()}},t._releaseDepthMaps=function(){for(var e=0,t=this.effects.length;e<t;e++)this.effects[e].effect.needsDepthBuffer&&this._releaseDepthMap()},t._requestDepthMap=function(){var e=this.app.scene.layers.getLayerById(zu);e&&(e.incrementCounter(),this.camera.requestSceneDepthMap(!0))},t._releaseDepthMap=function(){var e=this.app.scene.layers.getLayerById(zu);e&&(e.decrementCounter(),this.camera.requestSceneDepthMap(!1))},t.destroy=function(){for(var e=0,t=this.effects.length;e<t;e++)this.effects[e].inputTarget.destroy();this.effects.length=0,this.disable()},t.enable=function(){var e=this;!this.enabled&&this.effects.length&&(this.enabled=!0,this._requestDepthMaps(),this.app.graphicsDevice.on("resizecanvas",this._onCanvasResized,this),this.destinationRenderTarget=this.camera.renderTarget,this.camera.renderTarget=this.effects[0].inputTarget,this.camera.onPostprocessing=function(){if(e.enabled){var t=null,n=e.effects.length;if(n)for(var i=0;i<n;i++){var a=e.effects[i],s=a.outputTarget;i===n-1&&(t=e.camera.rect,e.destinationRenderTarget&&(s=e.destinationRenderTarget)),a.effect.render(a.inputTarget,s,t)}}})},t.disable=function(){this.enabled&&(this.enabled=!1,this.app.graphicsDevice.off("resizecanvas",this._onCanvasResized,this),this._releaseDepthMaps(),this._destroyOffscreenTarget(this._sourceTarget),this.camera.renderTarget=null,this.camera.onPostprocessing=null)},t._onCanvasResized=function(e,t){var n,i,a=this.camera.rect,s=this.camera.renderTarget;e=null!=(n=null==s?void 0:s.width)?n:e,t=null!=(i=null==s?void 0:s.height)?i:t,this.camera.camera.aspectRatio=e*a.z/(t*a.w),this.resizeRenderTargets()},t.resizeRenderTargets=function(){for(var e,t,n=this.app.graphicsDevice,i=this.camera.renderTarget,a=null!=(e=null==i?void 0:i.width)?e:n.width,s=null!=(t=null==i?void 0:i.height)?t:n.height,r=this.camera.rect,o=Math.floor(r.z*a),l=Math.floor(r.w*s),c=this.effects,h=0,p=c.length;h<p;h++){var d=c[h];d.inputTarget.width===o&&d.inputTarget.height===l||this._resizeOffscreenTarget(d.inputTarget)}},t.onCameraRectChanged=function(e,t,n){this.enabled&&this.resizeRenderTargets()},e}(),nO=function(e){function t(t,n){var i;return(i=e.call(this,t,n)||this).onPostprocessing=null,i.onPreRender=null,i.onPostRender=null,i._renderSceneDepthMap=0,i._renderSceneColorMap=0,i._sceneDepthMapRequested=!1,i._sceneColorMapRequested=!1,i._priority=0,i._disablePostEffectsLayer=Gu,i._camera=new iy,i._camera.node=n,i._postEffects=new tO(t.app,J(i)),i}Z(t,e);var n=t.prototype;return n.setShaderPass=function(e){var t=Yg.get(this.system.app.graphicsDevice),n=e?t.allocate(e,{isForward:!0}):null;return this._camera.shaderPassInfo=n,n.index},n.getShaderPass=function(){var e;return null==(e=this._camera.shaderPassInfo)?void 0:e.name},n._enableDepthLayer=function(e){if(this.layers.find((function(e){return e===zu}))){var t=this.system.app.scene.layers.getLayerById(zu);e?null==t||t.incrementCounter():null==t||t.decrementCounter()}else if(e)return!1;return!0},n.requestSceneColorMap=function(e){this._renderSceneColorMap+=e?1:-1,this._enableDepthLayer(e),this.camera._enableRenderPassColorGrab(this.system.app.graphicsDevice,this.renderSceneColorMap)},n.requestSceneDepthMap=function(e){this._renderSceneDepthMap+=e?1:-1,this._enableDepthLayer(e),this.camera._enableRenderPassDepthGrab(this.system.app.graphicsDevice,this.system.app.renderer,this.renderSceneDepthMap)},n.dirtyLayerCompositionCameras=function(){this.system.app.scene.layers._dirtyCameras=!0},n.screenToWorld=function(e,t,n,i){var a=this.system.app.graphicsDevice,s=a.clientRect.width,r=a.clientRect.height;return this._camera.screenToWorld(e,t,n,s,r,i)},n.worldToScreen=function(e,t){var n=this.system.app.graphicsDevice,i=n.clientRect.width,a=n.clientRect.height;return this._camera.worldToScreen(e,i,a,t)},n.onAppPrerender=function(){this._camera._viewMatDirty=!0,this._camera._viewProjMatDirty=!0},n.addCameraToLayers=function(){for(var e=this.layers,t=0;t<e.length;t++){var n=this.system.app.scene.layers.getLayerById(e[t]);n&&n.addCamera(this)}},n.removeCameraFromLayers=function(){for(var e=this.layers,t=0;t<e.length;t++){var n=this.system.app.scene.layers.getLayerById(e[t]);n&&n.removeCamera(this)}},n.onLayersChanged=function(e,t){this.addCameraToLayers(),e.off("add",this.onLayerAdded,this),e.off("remove",this.onLayerRemoved,this),t.on("add",this.onLayerAdded,this),t.on("remove",this.onLayerRemoved,this)},n.onLayerAdded=function(e){this.layers.indexOf(e.id)<0||e.addCamera(this)},n.onLayerRemoved=function(e){this.layers.indexOf(e.id)<0||e.removeCamera(this)},n.onEnable=function(){var e=this.system,t=e.app.scene,n=t.layers;e.addCamera(this),t.on("set:layers",this.onLayersChanged,this),n&&(n.on("add",this.onLayerAdded,this),n.on("remove",this.onLayerRemoved,this)),this.enabled&&this.entity.enabled&&this.addCameraToLayers(),this.postEffects.enable()},n.onDisable=function(){var e=this.system,t=e.app.scene,n=t.layers;this.postEffects.disable(),this.removeCameraFromLayers(),t.off("set:layers",this.onLayersChanged,this),n&&(n.off("add",this.onLayerAdded,this),n.off("remove",this.onLayerRemoved,this)),e.removeCamera(this)},n.onRemove=function(){this.onDisable(),this.off(),this.camera.destroy()},n.calculateAspectRatio=function(e){var t=this.system.app.graphicsDevice,n=e?e.width:t.width,i=e?e.height:t.height;return n*this.rect.z/(i*this.rect.w)},n.frameUpdate=function(e){this.aspectRatioMode===Jf&&(this.aspectRatio=this.calculateAspectRatio(e))},n.startXr=function(e,t,n){this.system.app.xr.start(this,e,t,n)},n.endXr=function(e){this._camera.xr?this._camera.xr.end(e):e&&e(new Error("Camera is not in XR"))},n.copy=function(e){this.aperture=e.aperture,this.aspectRatio=e.aspectRatio,this.aspectRatioMode=e.aspectRatioMode,this.calculateProjection=e.calculateProjection,this.calculateTransform=e.calculateTransform,this.clearColor=e.clearColor,this.clearColorBuffer=e.clearColorBuffer,this.clearDepthBuffer=e.clearDepthBuffer,this.clearStencilBuffer=e.clearStencilBuffer,this.cullFaces=e.cullFaces,this.disablePostEffectsLayer=e.disablePostEffectsLayer,this.farClip=e.farClip,this.flipFaces=e.flipFaces,this.fov=e.fov,this.frustumCulling=e.frustumCulling,this.horizontalFov=e.horizontalFov,this.layers=e.layers,this.nearClip=e.nearClip,this.orthoHeight=e.orthoHeight,this.priority=e.priority,this.projection=e.projection,this.rect=e.rect,this.renderTarget=e.renderTarget,this.scissorRect=e.scissorRect,this.sensitivity=e.sensitivity,this.shutter=e.shutter},q(t,[{key:"aperture",get:function(){return this._camera.aperture},set:function(e){this._camera.aperture=e}},{key:"aspectRatio",get:function(){return this._camera.aspectRatio},set:function(e){this._camera.aspectRatio=e}},{key:"aspectRatioMode",get:function(){return this._camera.aspectRatioMode},set:function(e){this._camera.aspectRatioMode=e}},{key:"calculateProjection",get:function(){return this._camera.calculateProjection},set:function(e){this._camera.calculateProjection=e}},{key:"calculateTransform",get:function(){return this._camera.calculateTransform},set:function(e){this._camera.calculateTransform=e}},{key:"camera",get:function(){return this._camera}},{key:"clearColor",get:function(){return this._camera.clearColor},set:function(e){this._camera.clearColor=e}},{key:"clearColorBuffer",get:function(){return this._camera.clearColorBuffer},set:function(e){this._camera.clearColorBuffer=e,this.dirtyLayerCompositionCameras()}},{key:"clearDepthBuffer",get:function(){return this._camera.clearDepthBuffer},set:function(e){this._camera.clearDepthBuffer=e,this.dirtyLayerCompositionCameras()}},{key:"clearStencilBuffer",get:function(){return this._camera.clearStencilBuffer},set:function(e){this._camera.clearStencilBuffer=e,this.dirtyLayerCompositionCameras()}},{key:"cullFaces",get:function(){return this._camera.cullFaces},set:function(e){this._camera.cullFaces=e}},{key:"disablePostEffectsLayer",get:function(){return this._disablePostEffectsLayer},set:function(e){this._disablePostEffectsLayer=e,this.dirtyLayerCompositionCameras()}},{key:"farClip",get:function(){return this._camera.farClip},set:function(e){this._camera.farClip=e}},{key:"flipFaces",get:function(){return this._camera.flipFaces},set:function(e){this._camera.flipFaces=e}},{key:"fov",get:function(){return this._camera.fov},set:function(e){this._camera.fov=e}},{key:"frustum",get:function(){return this._camera.frustum}},{key:"frustumCulling",get:function(){return this._camera.frustumCulling},set:function(e){this._camera.frustumCulling=e}},{key:"horizontalFov",get:function(){return this._camera.horizontalFov},set:function(e){this._camera.horizontalFov=e}},{key:"layers",get:function(){return this._camera.layers},set:function(e){for(var t=this._camera.layers,n=0;n<t.length;n++){var i=this.system.app.scene.layers.getLayerById(t[n]);i&&i.removeCamera(this)}if(this._camera.layers=e,this.enabled&&this.entity.enabled)for(var a=0;a<e.length;a++){var s=this.system.app.scene.layers.getLayerById(e[a]);s&&s.addCamera(this)}}},{key:"layersSet",get:function(){return this._camera.layersSet}},{key:"nearClip",get:function(){return this._camera.nearClip},set:function(e){this._camera.nearClip=e}},{key:"orthoHeight",get:function(){return this._camera.orthoHeight},set:function(e){this._camera.orthoHeight=e}},{key:"postEffects",get:function(){return this._postEffects}},{key:"postEffectsEnabled",get:function(){return this._postEffects.enabled}},{key:"priority",get:function(){return this._priority},set:function(e){this._priority=e,this.dirtyLayerCompositionCameras()}},{key:"projection",get:function(){return this._camera.projection},set:function(e){this._camera.projection=e}},{key:"projectionMatrix",get:function(){return this._camera.projectionMatrix}},{key:"rect",get:function(){return this._camera.rect},set:function(e){this._camera.rect=e,this.fire("set:rect",this._camera.rect)}},{key:"renderSceneColorMap",get:function(){return this._renderSceneColorMap>0},set:function(e){e&&!this._sceneColorMapRequested?(this.requestSceneColorMap(!0),this._sceneColorMapRequested=!0):this._sceneColorMapRequested&&(this.requestSceneColorMap(!1),this._sceneColorMapRequested=!1)}},{key:"renderSceneDepthMap",get:function(){return this._renderSceneDepthMap>0},set:function(e){e&&!this._sceneDepthMapRequested?(this.requestSceneDepthMap(!0),this._sceneDepthMapRequested=!0):this._sceneDepthMapRequested&&(this.requestSceneDepthMap(!1),this._sceneDepthMapRequested=!1)}},{key:"renderTarget",get:function(){return this._camera.renderTarget},set:function(e){this._camera.renderTarget=e,this.dirtyLayerCompositionCameras()}},{key:"scissorRect",get:function(){return this._camera.scissorRect},set:function(e){this._camera.scissorRect=e}},{key:"sensitivity",get:function(){return this._camera.sensitivity},set:function(e){this._camera.sensitivity=e}},{key:"shutter",get:function(){return this._camera.shutter},set:function(e){this._camera.shutter=e}},{key:"viewMatrix",get:function(){return this._camera.viewMatrix}}]),t}(zS),iO=function(){this.enabled=!0},aO=["enabled"],sO=function(e){function t(t){var n;return(n=e.call(this,t)||this).cameras=[],n.id="camera",n.ComponentType=nO,n.DataType=iO,n.schema=aO,n.on("beforeremove",n.onBeforeRemove,J(n)),n.app.on("prerender",n.onAppPrerender,J(n)),n.app.systems.on("update",n.onUpdate,J(n)),n}Z(t,e);var n=t.prototype;return n.initializeComponentData=function(t,n,i){i=["aspectRatio","aspectRatioMode","calculateProjection","calculateTransform","clearColor","clearColorBuffer","clearDepthBuffer","clearStencilBuffer","renderSceneColorMap","renderSceneDepthMap","cullFaces","farClip","flipFaces","fov","frustumCulling","horizontalFov","layers","renderTarget","nearClip","orthoHeight","projection","priority","rect","scissorRect","aperture","shutter","sensitivity"];for(var a=0;a<i.length;a++){var s=i[a];if(n.hasOwnProperty(s)){var r=n[s];switch(s){case"rect":case"scissorRect":Array.isArray(r)?t[s]=new vt(r[0],r[1],r[2],r[3]):t[s]=r;break;case"clearColor":Array.isArray(r)?t[s]=new st(r[0],r[1],r[2],r[3]):t[s]=r;break;default:t[s]=r}}}e.prototype.initializeComponentData.call(this,t,n,["enabled"])},n.cloneComponent=function(e,t){var n=e.camera;return this.addComponent(t,{aspectRatio:n.aspectRatio,aspectRatioMode:n.aspectRatioMode,calculateProjection:n.calculateProjection,calculateTransform:n.calculateTransform,clearColor:n.clearColor,clearColorBuffer:n.clearColorBuffer,clearDepthBuffer:n.clearDepthBuffer,clearStencilBuffer:n.clearStencilBuffer,renderSceneDepthMap:n.renderSceneDepthMap,renderSceneColorMap:n.renderSceneColorMap,cullFaces:n.cullFaces,enabled:n.enabled,farClip:n.farClip,flipFaces:n.flipFaces,fov:n.fov,frustumCulling:n.frustumCulling,horizontalFov:n.horizontalFov,layers:n.layers,renderTarget:n.renderTarget,nearClip:n.nearClip,orthoHeight:n.orthoHeight,projection:n.projection,priority:n.priority,rect:n.rect,scissorRect:n.scissorRect,aperture:n.aperture,sensitivity:n.sensitivity,shutter:n.shutter})},n.onBeforeRemove=function(e,t){this.removeCamera(t),t.onRemove()},n.onUpdate=function(e){},n.onAppPrerender=function(){for(var e=0,t=this.cameras.length;e<t;e++)this.cameras[e].onAppPrerender()},n.addCamera=function(e){this.cameras.push(e),mb(this.cameras)},n.removeCamera=function(e){var t=this.cameras.indexOf(e);t>=0&&(this.cameras.splice(t,1),mb(this.cameras))},n.destroy=function(){e.prototype.destroy.call(this),this.app.systems.off("update",this.onUpdate,this)},t}(VS);zS._buildAccessors(nO.prototype,aO);var rO=[],oO=[],lO=function(e){function t(t,n){var i;return(i=e.call(this,t,n)||this)._cookieAsset=null,i._cookieAssetId=null,i._cookieAssetAdd=!1,i._cookieMatrix=null,i}Z(t,e);var n=t.prototype;return n.addLightToLayers=function(){for(var e=0;e<this.layers.length;e++){var t=this.system.app.scene.layers.getLayerById(this.layers[e]);t&&(t.addLight(this),this.light.addLayer(t))}},n.removeLightFromLayers=function(){for(var e=0;e<this.layers.length;e++){var t=this.system.app.scene.layers.getLayerById(this.layers[e]);t&&(t.removeLight(this),this.light.removeLayer(t))}},n.onLayersChanged=function(e,t){this.enabled&&this.entity.enabled&&this.addLightToLayers(),e.off("add",this.onLayerAdded,this),e.off("remove",this.onLayerRemoved,this),t.on("add",this.onLayerAdded,this),t.on("remove",this.onLayerRemoved,this)},n.onLayerAdded=function(e){this.layers.indexOf(e.id)>=0&&this.enabled&&this.entity.enabled&&(e.addLight(this),this.light.addLayer(e))},n.onLayerRemoved=function(e){this.layers.indexOf(e.id)>=0&&(e.removeLight(this),this.light.removeLayer(e))},n.refreshProperties=function(){for(var e=0;e<rO.length;e++){var t=rO[e];this[t]=this[t]}this.enabled&&this.entity.enabled&&this.onEnable()},n.onCookieAssetSet=function(){var e=!1;"cubemap"!==this._cookieAsset.type||this._cookieAsset.loadFaces||(this._cookieAsset.loadFaces=!0,e=!0),this._cookieAsset.resource&&!e||this.system.app.assets.load(this._cookieAsset),this._cookieAsset.resource&&this.onCookieAssetLoad()},n.onCookieAssetAdd=function(e){this._cookieAssetId===e.id&&(this._cookieAsset=e,this.light.enabled&&this.onCookieAssetSet(),this._cookieAsset.on("load",this.onCookieAssetLoad,this),this._cookieAsset.on("remove",this.onCookieAssetRemove,this))},n.onCookieAssetLoad=function(){this._cookieAsset&&this._cookieAsset.resource&&(this.cookie=this._cookieAsset.resource)},n.onCookieAssetRemove=function(){this._cookieAssetId&&(this._cookieAssetAdd&&(this.system.app.assets.off("add:"+this._cookieAssetId,this.onCookieAssetAdd,this),this._cookieAssetAdd=!1),this._cookieAsset&&(this._cookieAsset.off("load",this.onCookieAssetLoad,this),this._cookieAsset.off("remove",this.onCookieAssetRemove,this),this._cookieAsset=null),this.cookie=null)},n.onEnable=function(){this.light.enabled=!0,this.system.app.scene.on("set:layers",this.onLayersChanged,this),this.system.app.scene.layers&&(this.system.app.scene.layers.on("add",this.onLayerAdded,this),this.system.app.scene.layers.on("remove",this.onLayerRemoved,this)),this.enabled&&this.entity.enabled&&this.addLightToLayers(),this._cookieAsset&&!this.cookie&&this.onCookieAssetSet()},n.onDisable=function(){this.light.enabled=!1,this.system.app.scene.off("set:layers",this.onLayersChanged,this),this.system.app.scene.layers&&(this.system.app.scene.layers.off("add",this.onLayerAdded,this),this.system.app.scene.layers.off("remove",this.onLayerRemoved,this)),this.removeLightFromLayers()},n.onRemove=function(){this.onDisable(),this.light.destroy(),this.cookieAsset=null},q(t,[{key:"shadowUpdateOverrides",get:function(){return this.light.shadowUpdateOverrides},set:function(e){this.light.shadowUpdateOverrides=e}},{key:"penumbraSize",get:function(){return this.light.penumbraSize},set:function(e){this.light.penumbraSize=e}}]),t}(zS);function cO(e,t,n,i){var a=lO.prototype;rO.push(e),oO.push(t),Object.defineProperty(a,e,{get:function(){return this.data[e]},set:function(t){var a=this.data,s=a[e];(i||s!==t)&&(a[e]=t,n&&n.call(this,t,s))},configurable:!0})}function hO(){cO("enabled",!0,(function(e,t){this.onSetEnabled(null,t,e)})),cO("light",null),cO("type","directional",(function(e,t){this.system.changeType(this,t,e),this.refreshProperties()})),cO("color",new st(1,1,1),(function(e,t){this.light.setColor(e)}),!0),cO("intensity",1,(function(e,t){this.light.intensity=e})),cO("luminance",0,(function(e,t){this.light.luminance=e})),cO("shape",Ku,(function(e,t){this.light.shape=e})),cO("affectSpecularity",!0,(function(e,t){this.light.affectSpecularity=e})),cO("castShadows",!1,(function(e,t){this.light.castShadows=e})),cO("shadowDistance",40,(function(e,t){this.light.shadowDistance=e})),cO("shadowIntensity",1,(function(e,t){this.light.shadowIntensity=e})),cO("shadowResolution",1024,(function(e,t){this.light.shadowResolution=e})),cO("shadowBias",.05,(function(e,t){this.light.shadowBias=-.01*at.clamp(e,0,1)})),cO("numCascades",1,(function(e,t){this.light.numCascades=at.clamp(Math.floor(e),1,4)})),cO("bakeNumSamples",1,(function(e,t){this.light.bakeNumSamples=at.clamp(Math.floor(e),1,255)})),cO("bakeArea",0,(function(e,t){this.light.bakeArea=at.clamp(e,0,180)})),cO("cascadeDistribution",.5,(function(e,t){this.light.cascadeDistribution=at.clamp(e,0,1)})),cO("normalOffsetBias",0,(function(e,t){this.light.normalOffsetBias=at.clamp(e,0,1)})),cO("range",10,(function(e,t){this.light.attenuationEnd=e})),cO("innerConeAngle",40,(function(e,t){this.light.innerConeAngle=e})),cO("outerConeAngle",45,(function(e,t){this.light.outerConeAngle=e})),cO("falloffMode",$u,(function(e,t){this.light.falloffMode=e})),cO("shadowType",tm,(function(e,t){this.light.shadowType=e})),cO("vsmBlurSize",11,(function(e,t){this.light.vsmBlurSize=e})),cO("vsmBlurMode",pm,(function(e,t){this.light.vsmBlurMode=e})),cO("vsmBias",.0025,(function(e,t){this.light.vsmBias=at.clamp(e,0,1)})),cO("cookieAsset",null,(function(e,t){if(!this._cookieAssetId||!(e instanceof eS&&e.id===this._cookieAssetId||e===this._cookieAssetId))if(this.onCookieAssetRemove(),this._cookieAssetId=null,e instanceof eS)this.data.cookieAsset=e.id,this._cookieAssetId=e.id,this.onCookieAssetAdd(e);else if("number"==typeof e){this._cookieAssetId=e;var n=this.system.app.assets.get(e);n?this.onCookieAssetAdd(n):(this._cookieAssetAdd=!0,this.system.app.assets.on("add:"+this._cookieAssetId,this.onCookieAssetAdd,this))}})),cO("cookie",null,(function(e,t){this.light.cookie=e})),cO("cookieIntensity",1,(function(e,t){this.light.cookieIntensity=at.clamp(e,0,1)})),cO("cookieFalloff",!0,(function(e,t){this.light.cookieFalloff=e})),cO("cookieChannel","rgb",(function(e,t){this.light.cookieChannel=e})),cO("cookieAngle",0,(function(e,t){if(0!==e||null!==this.cookieScale){this._cookieMatrix||(this._cookieMatrix=new vt);var n=1,i=1;this.cookieScale&&(n=this.cookieScale.x,i=this.cookieScale.y);var a=Math.cos(e*at.DEG_TO_RAD),s=Math.sin(e*at.DEG_TO_RAD);this._cookieMatrix.set(a/n,-s/n,s/i,a/i),this.light.cookieTransform=this._cookieMatrix}else this.light.cookieTransform=null})),cO("cookieScale",null,(function(e,t){if(null!==e||0!==this.cookieAngle){this._cookieMatrix||(this._cookieMatrix=new vt);var n=e.x,i=e.y,a=Math.cos(this.cookieAngle*at.DEG_TO_RAD),s=Math.sin(this.cookieAngle*at.DEG_TO_RAD);this._cookieMatrix.set(a/n,-s/n,s/i,a/i),this.light.cookieTransform=this._cookieMatrix}else this.light.cookieTransform=null}),!0),cO("cookieOffset",null,(function(e,t){this.light.cookieOffset=e}),!0),cO("shadowUpdateMode",gf,(function(e,t){this.light.shadowUpdateMode=e}),!0),cO("mask",1,(function(e,t){this.light.mask=e})),cO("affectDynamic",!0,(function(e,t){e?this.light.mask|=_f:this.light.mask&=~_f,this.light.layersDirty()})),cO("affectLightmapped",!1,(function(e,t){e?(this.light.mask|=wf,this.bake&&(this.light.mask&=~bf)):(this.light.mask&=~wf,this.bake&&(this.light.mask|=bf))})),cO("bake",!1,(function(e,t){e?(this.light.mask|=bf,this.affectLightmapped&&(this.light.mask&=~wf)):(this.light.mask&=~bf,this.affectLightmapped&&(this.light.mask|=wf)),this.light.layersDirty()})),cO("bakeDir",!0,(function(e,t){this.light.bakeDir=e})),cO("isStatic",!1,(function(e,t){this.light.isStatic=e})),cO("layers",[Uu],(function(e,t){for(var n=0;n<t.length;n++){var i=this.system.app.scene.layers.getLayerById(t[n]);i&&(i.removeLight(this),this.light.removeLayer(i))}for(var a=0;a<e.length;a++){var s=this.system.app.scene.layers.getLayerById(e[a]);s&&this.enabled&&this.entity.enabled&&(s.addLight(this),this.light.addLayer(s))}})),rO.push("penumbraSize"),oO.push(1)}hO();var pO=function(){for(var e=rO,t=oO,n=0;n<e.length;n++){var i=t[n];i&&i.clone?this[e[n]]=i.clone():this[e[n]]=i}},dO=function(e){function t(t){var n;return(n=e.call(this,t)||this).id="light",n.ComponentType=lO,n.DataType=pO,n.on("beforeremove",n._onRemoveComponent,J(n)),n}Z(t,e);var n=t.prototype;return n.initializeComponentData=function(t,n){for(var i=rO,a={},s=0,r=i.length;s<r;s++){var o=i[s];a[o]=n[o]}a.type||(a.type=t.data.type),t.data.type=a.type,a.layers&&Array.isArray(a.layers)&&(a.layers=a.layers.slice(0)),a.color&&Array.isArray(a.color)&&(a.color=new st(a.color[0],a.color[1],a.color[2])),a.cookieOffset&&a.cookieOffset instanceof Array&&(a.cookieOffset=new ft(a.cookieOffset[0],a.cookieOffset[1])),a.cookieScale&&a.cookieScale instanceof Array&&(a.cookieScale=new ft(a.cookieScale[0],a.cookieScale[1])),a.enable&&(console.warn("WARNING: enable: Property is deprecated. Set enabled property instead."),a.enabled=a.enable),a.shape||(a.shape=Ku);var l=new Sb(this.app.graphicsDevice);l.type=wb[a.type],l._node=t.entity,t.data.light=l,e.prototype.initializeComponentData.call(this,t,a,i)},n._onRemoveComponent=function(e,t){t.onRemove()},n.cloneComponent=function(e,t){for(var n,i=e.light,a=[],s=rO,r=0;r<s.length;r++)"light"!==(n=s[r])&&(i[n]&&i[n].clone?a[n]=i[n].clone():a[n]=i[n]);return this.addComponent(t,a)},n.changeType=function(e,t,n){t!==n&&(e.light.type=wb[n])},t}(VS),uO=["x","y","z","w"],mO=[void 0,void 0,ft,pt,vt];function fO(e,t,n,i){switch(t.type){case"boolean":return!!n;case"number":if("number"==typeof n)return n;if("string"==typeof n){var a=parseInt(n,10);return isNaN(a)?null:a}return"boolean"==typeof n?0+n:null;case"json":var s={};if(Array.isArray(t.schema)){n&&"object"==typeof n||(n={});for(var r=0;r<t.schema.length;r++){var o=t.schema[r];if(o.name)if(o.array){s[o.name]=[];for(var l=Array.isArray(n[o.name])?n[o.name]:[],c=0;c<l.length;c++)s[o.name].push(fO(e,o,l[c]))}else{var h=n.hasOwnProperty(o.name)?n[o.name]:o.default;s[o.name]=fO(e,o,h)}}}return s;case"asset":return n instanceof eS?n:"number"==typeof n?e.assets.get(n)||null:"string"==typeof n&&e.assets.get(parseInt(n,10))||null;case"entity":return n instanceof Cv?n:"string"==typeof n?e.getEntityFromIndex(n):null;case"rgb":case"rgba":if(n instanceof st)return i instanceof st?(i.copy(n),i):n.clone();if(n instanceof Array&&n.length>=3&&n.length<=4){for(var p=0;p<n.length;p++)if("number"!=typeof n[p])return null;return i||(i=new st),i.r=n[0],i.g=n[1],i.b=n[2],i.a=3===n.length?1:n[3],i}return"string"==typeof n&&/#([0-9abcdef]{2}){3,4}/i.test(n)?(i||(i=new st),i.fromString(n),i):null;case"vec2":case"vec3":case"vec4":var d=parseInt(t.type.slice(3),10),u=mO[d];if(n instanceof u)return i instanceof u?(i.copy(n),i):n.clone();if(n instanceof Array&&n.length===d){for(var m=0;m<n.length;m++)if("number"!=typeof n[m])return null;i||(i=new u);for(var f=0;f<d;f++)i[uO[f]]=n[f];return i}return null;case"curve":var g;if(n)return n instanceof ct||n instanceof ht?g=n.clone():(g=new(n.keys[0]instanceof Array?ht:ct)(n.keys)).type=n.type,g}return n}var gO=function(){function e(e){this.scriptType=e,this.index={}}var t=e.prototype;return t.add=function(t,n){this.index[t]||e.reservedNames.has(t)||(this.index[t]=n,Object.defineProperty(this.scriptType.prototype,t,{get:function(){return this.__attributes[t]},set:function(e){var i="attr",a="attr:"+t,s=this.__attributes[t],r=s;if(s&&"json"!==n.type&&"entity"!==n.type&&s.clone&&(this.hasEvent(i)||this.hasEvent(a))&&(r=s.clone()),n.array){if(this.__attributes[t]=[],e)for(var o=0,l=e.length;o<l;o++)this.__attributes[t].push(fO(this.app,n,e[o],s?s[o]:null))}else this.__attributes[t]=fO(this.app,n,e,s);this.fire(i,t,this.__attributes[t],r),this.fire(a,this.__attributes[t],r)}}))},t.remove=function(e){return!!this.index[e]&&(delete this.index[e],delete this.scriptType.prototype[e],!0)},t.has=function(e){return!!this.index[e]},t.get=function(e){return this.index[e]||null},e}();gO.reservedNames=new Set(["app","entity","enabled","_enabled","_enabledOld","_destroyed","__attributes","__attributesRaw","__scriptType","__executionOrder","_callbacks","_callbackActive","has","get","on","off","fire","once","hasEvent"]);var vO="initialize",yO="postInitialize",_O="update",wO="postUpdate",bO="swap",xO=function(e){function t(t,n){var i;return(i=e.call(this,t,n)||this)._scripts=[],i._updateList=new je({sortBy:"__executionOrder"}),i._postUpdateList=new je({sortBy:"__executionOrder"}),i._scriptsIndex={},i._destroyedScripts=[],i._destroyed=!1,i._scriptsData=null,i._oldState=!0,i._enabled=!0,i._beingEnabled=!1,i._isLoopingThroughScripts=!1,i._executionOrder=-1,i.on("set_enabled",i._onSetEnabled,J(i)),i}Z(t,e);var n=t.prototype;return n.onEnable=function(){this._beingEnabled=!0,this._checkState(),this.entity._beingEnabled||this.onPostStateChange(),this._beingEnabled=!1},n.onDisable=function(){this._checkState()},n.onPostStateChange=function(){for(var e=this._beginLooping(),t=0,n=this.scripts.length;t<n;t++){var i=this.scripts[t];i._initialized&&!i._postInitialized&&i.enabled&&(i._postInitialized=!0,i.postInitialize&&this._scriptMethod(i,yO))}this._endLooping(e)},n._beginLooping=function(){var e=this._isLoopingThroughScripts;return this._isLoopingThroughScripts=!0,e},n._endLooping=function(e){this._isLoopingThroughScripts=e,this._isLoopingThroughScripts||this._removeDestroyedScripts()},n._onSetEnabled=function(e,t,n){this._beingEnabled=!0,this._checkState(),this._beingEnabled=!1},n._checkState=function(){var e=this.enabled&&this.entity.enabled;if(e!==this._oldState){this._oldState=e,this.fire(e?"enable":"disable"),this.fire("state",e),e?this.system._addComponentToEnabled(this):this.system._removeComponentFromEnabled(this);for(var t=this._beginLooping(),n=0,i=this.scripts.length;n<i;n++){var a=this.scripts[n];a.enabled=a._enabled}this._endLooping(t)}},n._onBeforeRemove=function(){this.fire("remove");for(var e=this._beginLooping(),t=0;t<this.scripts.length;t++){var n=this.scripts[t];n&&this.destroy(n.__scriptType.__name)}this._endLooping(e)},n._removeDestroyedScripts=function(){var e=this._destroyedScripts.length;if(e){for(var t=0;t<e;t++){var n=this._destroyedScripts[t];this._removeScriptInstance(n)}this._destroyedScripts.length=0,this._resetExecutionOrder(0,this._scripts.length)}},n._onInitializeAttributes=function(){for(var e=0,t=this.scripts.length;e<t;e++)this.scripts[e].__initializeAttributes()},n._scriptMethod=function(e,t,n){e[t](n)},n._onInitialize=function(){for(var e=this._scripts,t=this._beginLooping(),n=0,i=e.length;n<i;n++){var a=e[n];!a._initialized&&a.enabled&&(a._initialized=!0,a.initialize&&this._scriptMethod(a,vO))}this._endLooping(t)},n._onPostInitialize=function(){this.onPostStateChange()},n._onUpdate=function(e){var t=this._updateList;if(t.length){var n=this._beginLooping();for(t.loopIndex=0;t.loopIndex<t.length;t.loopIndex++){var i=t.items[t.loopIndex];i.enabled&&this._scriptMethod(i,_O,e)}this._endLooping(n)}},n._onPostUpdate=function(e){var t=this._postUpdateList;if(t.length){var n=this._beginLooping();for(t.loopIndex=0;t.loopIndex<t.length;t.loopIndex++){var i=t.items[t.loopIndex];i.enabled&&this._scriptMethod(i,wO,e)}this._endLooping(n)}},n._insertScriptInstance=function(e,t,n){-1===t?(this._scripts.push(e),e.__executionOrder=n,e.update&&this._updateList.append(e),e.postUpdate&&this._postUpdateList.append(e)):(this._scripts.splice(t,0,e),e.__executionOrder=t,this._resetExecutionOrder(t+1,n+1),e.update&&this._updateList.insert(e),e.postUpdate&&this._postUpdateList.insert(e))},n._removeScriptInstance=function(e){var t=this._scripts.indexOf(e);return-1===t||(this._scripts.splice(t,1),e.update&&this._updateList.remove(e),e.postUpdate&&this._postUpdateList.remove(e)),t},n._resetExecutionOrder=function(e,t){for(var n=e;n<t;n++)this._scripts[n].__executionOrder=n},n._resolveEntityScriptAttribute=function(e,t,n,i,a,s){if(e.array){var r=n.length;if(!r)return;for(var o=n.slice(),l=0;l<r;l++){var c=o[l]instanceof gS?o[l].getGuid():o[l];s[c]&&(o[l]=i?s[c].getGuid():s[c])}a[t]=o}else{if(n instanceof gS)n=n.getGuid();else if("string"!=typeof n)return;s[n]&&(a[t]=s[n])}},n.has=function(e){if("string"==typeof e)return!!this._scriptsIndex[e];if(!e)return!1;var t=e,n=t.__name,i=this._scriptsIndex[n];return(i&&i.instance)instanceof t},n.get=function(e){if("string"==typeof e){var t=this._scriptsIndex[e];return t?t.instance:null}if(!e)return null;var n=e,i=n.__name,a=this._scriptsIndex[i],s=a&&a.instance;return s instanceof n?s:null},n.create=function(e,t){void 0===t&&(t={});var n=this,i=e,a=e;if("string"==typeof i?i=this.system.app.scripts.get(i):i&&(a=i.__name),i){if(!this._scriptsIndex[a]||!this._scriptsIndex[a].instance){var s=new i({app:this.system.app,entity:this.entity,enabled:!t.hasOwnProperty("enabled")||t.enabled,attributes:t.attributes}),r=this._scripts.length,o=-1;return"number"==typeof t.ind&&-1!==t.ind&&r>t.ind&&(o=t.ind),this._insertScriptInstance(s,o,r),this._scriptsIndex[a]={instance:s,onSwap:function(){n.swap(a)}},this[a]=s,t.preloading||s.__initializeAttributes(),this.fire("create",a,s),this.fire("create:"+a,s),this.system.app.scripts.on("swap:"+a,this._scriptsIndex[a].onSwap),t.preloading||(s.enabled&&!s._initialized&&(s._initialized=!0,s.initialize&&this._scriptMethod(s,vO)),s.enabled&&!s._postInitialized&&(s._postInitialized=!0,s.postInitialize&&this._scriptMethod(s,yO))),s}}else this._scriptsIndex[a]={awaiting:!0,ind:this._scripts.length};return null},n.destroy=function(e){var t=e,n=e;"string"==typeof n?n=this.system.app.scripts.get(n):n&&(t=n.__name);var i=this._scriptsIndex[t];if(delete this._scriptsIndex[t],!i)return!1;var a=i.instance;if(a&&!a._destroyed)if(a.enabled=!1,a._destroyed=!0,this._isLoopingThroughScripts)this._destroyedScripts.push(a);else{var s=this._removeScriptInstance(a);s>=0&&this._resetExecutionOrder(s,this._scripts.length)}return this.system.app.scripts.off("swap:"+t,i.onSwap),delete this[t],this.fire("destroy",t,a||null),this.fire("destroy:"+t,a||null),a&&a.fire("destroy"),!0},n.swap=function(e){var t=e,n=e;"string"==typeof n?n=this.system.app.scripts.get(n):n&&(t=n.__name);var i=this._scriptsIndex[t];if(!i||!i.instance)return!1;var a=i.instance,s=this._scripts.indexOf(a),r=new n({app:this.system.app,entity:this.entity,enabled:a.enabled,attributes:a.__attributes});return!!r.swap&&(r.__initializeAttributes(),this._scripts[s]=r,this._scriptsIndex[t].instance=r,this[t]=r,r.__executionOrder=s,a.update&&this._updateList.remove(a),a.postUpdate&&this._postUpdateList.remove(a),r.update&&this._updateList.insert(r),r.postUpdate&&this._postUpdateList.insert(r),this._scriptMethod(r,bO,a),this.fire("swap",t,r),this.fire("swap:"+t,r),!0)},n.resolveDuplicatedEntityReferenceProperties=function(e,t){var n=this.entity.script;for(var i in e._scriptsIndex){var a=this.system.app.scripts.get(i);if(a){var s=e._scriptsIndex[i];if(s&&s.instance){var r=n[i].__attributesRaw,o=n[i].__attributes;if(r||o){var l=!!r,c=s.instance.__attributes;for(var h in c)if(c[h]){var p=a.attributes.get(h);if(p)if("entity"===p.type)this._resolveEntityScriptAttribute(p,h,c[h],l,r||o,t);else if("json"===p.type&&Array.isArray(p.schema))for(var d=c[h],u=r?r[h]:o[h],m=0;m<p.schema.length;m++){var f=p.schema[m];if("entity"===f.type)if(p.array)for(var g=0;g<d.length;g++)this._resolveEntityScriptAttribute(f,f.name,d[g][f.name],l,u[g],t);else this._resolveEntityScriptAttribute(f,f.name,d[f.name],l,u,t)}}}}}}},n.move=function(e,t){var n=this._scripts.length;if(t>=n||t<0)return!1;var i=e,a=e;"string"!=typeof a?a=e.__name:i=null;var s=this._scriptsIndex[a];if(!s||!s.instance)return!1;var r=s.instance;if(i&&!(r instanceof i))return!1;var o=this._scripts.indexOf(r);return-1!==o&&o!==t&&(this._scripts.splice(t,0,this._scripts.splice(o,1)[0]),this._resetExecutionOrder(0,n),this._updateList.sort(),this._postUpdateList.sort(),this.fire("move",a,r,t,o),this.fire("move:"+a,r,t,o),!0)},q(t,[{key:"scripts",get:function(){return this._scripts},set:function(e){for(var t in this._scriptsData=e,e)if(e.hasOwnProperty(t)){var n=this._scriptsIndex[t];if(n){if("boolean"==typeof e[t].enabled&&(n.enabled=!!e[t].enabled),"object"==typeof e[t].attributes)for(var i in e[t].attributes)if(!gO.reservedNames.has(i)){if(!n.__attributes.hasOwnProperty(i)){var a=this.system.app.scripts.get(t);a&&a.attributes.add(i,{})}n[i]=e[t].attributes[i]}}else console.log(this.order)}}},{key:"enabled",get:function(){return this._enabled},set:function(e){var t=this._enabled;this._enabled=e,this.fire("set","enabled",t,e)}}]),t}(zS),CO=function(){this.enabled=!0},SO="_onInitializeAttributes",EO="_onInitialize",TO="_onPostInitialize",AO="_onUpdate",LO="_onPostUpdate",MO=0,PO=function(e){function t(t){var n;return(n=e.call(this,t)||this).id="script",n.ComponentType=xO,n.DataType=CO,n._components=new je({sortBy:"_executionOrder"}),n._enabledComponents=new je({sortBy:"_executionOrder"}),n.preloading=!0,n.on("beforeremove",n._onBeforeRemove,J(n)),n.app.systems.on("initialize",n._onInitialize,J(n)),n.app.systems.on("postInitialize",n._onPostInitialize,J(n)),n.app.systems.on("update",n._onUpdate,J(n)),n.app.systems.on("postUpdate",n._onPostUpdate,J(n)),n}Z(t,e);var n=t.prototype;return n.initializeComponentData=function(e,t){if(e._executionOrder=MO++,this._components.append(e),MO>Number.MAX_SAFE_INTEGER&&this._resetExecutionOrder(),e.enabled=!t.hasOwnProperty("enabled")||!!t.enabled,e.enabled&&e.entity.enabled&&this._enabledComponents.append(e),t.hasOwnProperty("order")&&t.hasOwnProperty("scripts")){e._scriptsData=t.scripts;for(var n=0;n<t.order.length;n++)e.create(t.order[n],{enabled:t.scripts[t.order[n]].enabled,attributes:t.scripts[t.order[n]].attributes,preloading:this.preloading})}},n.cloneComponent=function(e,t){for(var n=[],i={},a=0;a<e.script._scripts.length;a++){var s=e.script._scripts[a],r=s.__scriptType.__name;n.push(r);var o={};for(var l in s.__attributes)o[l]=s.__attributes[l];i[r]={enabled:s._enabled,attributes:o}}for(var c in e.script._scriptsIndex)c.awaiting&&n.splice(c.ind,0,c);var h={enabled:e.script.enabled,order:n,scripts:i};return this.addComponent(t,h)},n._resetExecutionOrder=function(){MO=0;for(var e=0,t=this._components.length;e<t;e++)this._components.items[e]._executionOrder=MO++},n._callComponentMethod=function(e,t,n){for(e.loopIndex=0;e.loopIndex<e.length;e.loopIndex++)e.items[e.loopIndex][t](n)},n._onInitialize=function(){this.preloading=!1,this._callComponentMethod(this._components,SO),this._callComponentMethod(this._enabledComponents,EO)},n._onPostInitialize=function(){this._callComponentMethod(this._enabledComponents,TO)},n._onUpdate=function(e){this._callComponentMethod(this._enabledComponents,AO,e)},n._onPostUpdate=function(e){this._callComponentMethod(this._enabledComponents,LO,e)},n._addComponentToEnabled=function(e){this._enabledComponents.insert(e)},n._removeComponentFromEnabled=function(e){this._enabledComponents.remove(e)},n._onBeforeRemove=function(e,t){this._components.items.indexOf(t)>=0&&t._onBeforeRemove(),this._removeComponentFromEnabled(t),this._components.remove(t)},n.destroy=function(){e.prototype.destroy.call(this),this.app.systems.off("initialize",this._onInitialize,this),this.app.systems.off("postInitialize",this._onPostInitialize,this),this.app.systems.off("update",this._onUpdate,this),this.app.systems.off("postUpdate",this._onPostUpdate,this)},t}(VS),OO=function(e){function t(){var t;return(t=e.call(this)||this)._meshes=null,t}Z(t,e);var n=t.prototype;return n.destroy=function(){this.meshes=null},n.decRefMeshes=function(){if(this._meshes)for(var e=this._meshes.length,t=0;t<e;t++){var n=this._meshes[t];n&&(n.decRefCount(),n.refCount<1&&(n.destroy(),this._meshes[t]=null))}},n.incRefMeshes=function(){if(this._meshes)for(var e=this._meshes.length,t=0;t<e;t++)this._meshes[t]&&this._meshes[t].incRefCount()},q(t,[{key:"meshes",get:function(){return this._meshes},set:function(e){this.decRefMeshes(),this._meshes=e,this.incRefMeshes(),this.fire("set:meshes",e)}}]),t}(re);function IO(e){var t=this;if(t.resource){var n=e.resource,i=n.renders&&n.renders[t.data.renderIndex];i&&(t.resource.meshes=i.resource.meshes)}}function RO(e){var t=this;t.registry.off("load:"+e.id,IO,t),t.registry.on("load:"+e.id,IO,t),t.registry.off("remove:"+e.id,DO,t),t.registry.once("remove:"+e.id,DO,t),e.resource?IO.call(t,e):t.registry.load(e)}function DO(e){var t=this;t.registry.off("load:"+e.id,IO,t),t.resource&&t.resource.destroy()}var kO=function(){function e(e){this.handlerType="render",this._registry=e.assets}var t=e.prototype;return t.load=function(e,t,n){},t.open=function(e,t){return new OO},t.patch=function(e,t){if(e.data.containerAsset){var n=t.get(e.data.containerAsset);n?RO.call(e,n):t.once("add:"+e.data.containerAsset,RO,e)}},e}(),FO=function(){function e(e,t,n,i){this._paths=e,this._input=t,this._output=n,this._interpolation=i}return q(e,[{key:"paths",get:function(){return this._paths}},{key:"input",get:function(){return this._input}},{key:"output",get:function(){return this._output}},{key:"interpolation",get:function(){return this._interpolation}}]),e}(),BO=function(){function e(e,t){this._components=e,this._data=t}return q(e,[{key:"components",get:function(){return this._components}},{key:"data",get:function(){return this._data}}]),e}();function NO(e,t){var n,i=0,a=1,s=function(e,t){switch(t){case n.DT_INT8:return new Int8Array(e.buffer,e.byteOffset,e.byteLength);case n.DT_INT16:return new Int16Array(e.buffer,e.byteOffset,e.byteLength/2);case n.DT_INT32:return new Int32Array(e.buffer,e.byteOffset,e.byteLength/4);case n.DT_UINT8:return new Uint8Array(e.buffer,e.byteOffset,e.byteLength);case n.DT_UINT16:return new Uint16Array(e.buffer,e.byteOffset,e.byteLength/2);case n.DT_UINT32:return new Uint32Array(e.buffer,e.byteOffset,e.byteLength/4);case n.DT_FLOAT32:return new Float32Array(e.buffer,e.byteOffset,e.byteLength/4)}return null},r=function(e){switch(e){case n.DT_INT8:return 1;case n.DT_INT16:return 2;case n.DT_INT32:return 4;case n.DT_UINT8:return 1;case n.DT_UINT16:return 2;case n.DT_UINT32:case n.DT_FLOAT32:return 4}return 1},o=function(e){return e.num_components()*r(e.data_type())},l={0:0,1:1,5:2,2:3,7:4,8:5,4:6,3:7},c=function(e,t){for(var n=function(e,t,n){e[0]=t[0]-n[0],e[1]=t[1]-n[1],e[2]=t[2]-n[2]},i=function(e,t,n){e[0]=t[1]*n[2]-n[1]*t[2],e[1]=t[2]*n[0]-n[2]*t[0],e[2]=t[0]*n[1]-n[0]*t[1]},a=function(e,t){var n=e[t+0],i=e[t+1],a=e[t+2],s=1/Math.sqrt(n*n+i*i+a*a);e[t+0]*=s,e[t+1]*=s,e[t+2]*=s},s=function(e,t,n){for(var i=0;i<3;++i)e[i]=t[n+i]},r=t.length/3,o=e.length/3,l=new Float32Array(e.length),c=[0,0,0],h=[0,0,0],p=[0,0,0],d=[0,0,0],u=[0,0,0],m=[0,0,0],f=0;f<r;++f){var g=3*t[3*f+0],v=3*t[3*f+1],y=3*t[3*f+2];s(c,e,g),s(h,e,v),s(p,e,y),n(d,h,c),n(u,p,c),i(m,d,u),a(m,0);for(var _=0;_<3;++_)l[g+_]+=m[_],l[v+_]+=m[_],l[y+_]+=m[_]}for(var w=0;w<o;++w)a(l,3*w);return new Uint8Array(l.buffer)},h=function(e){var t={},r=new n.DecoderBuffer;r.Init(e,e.length);var h=new n.Decoder;if(h.GetEncodedGeometryType(r)!==n.TRIANGULAR_MESH)return t.error="Failed to decode draco mesh: not a mesh",t;var p=new n.Mesh,d=h.DecodeBufferToMesh(r,p);if(!d||!d.ok()||0===p.ptr)return t.error="Failed to decode draco asset",t;var u=3*p.num_faces(),m=p.num_points()<=65535,f=u*(m?2:4),g=n._malloc(f);m?(h.GetTrianglesUInt16Array(p,f,g),t.indices=new Uint16Array(n.HEAPU16.buffer,g,u).slice().buffer):(h.GetTrianglesUInt32Array(p,f,g),t.indices=new Uint32Array(n.HEAPU32.buffer,g,u).slice().buffer),n._free(g);for(var v=[],y=0;y<p.num_attributes();++y)v.push(h.GetAttribute(p,y));v.sort((function(e,t){var n,i;return(null!=(n=l[e.attribute_type()])?n:l.length)-(null!=(i=l[t.attribute_type()])?i:l.length)})),t.attributes=v.map((function(e){return e.unique_id()}));var _=0,w=v.map((function(e){var t=_;return _+=4*Math.ceil(o(e)/4),t})),b=v.some((function(e){return e.attribute_type()===a})),x=w[1];if(!b){for(var C=1;C<w.length;++C)w[C]+=12;_+=12}t.vertices=new ArrayBuffer(p.num_points()*_);for(var S=new Uint8Array(t.vertices),E=0;E<p.num_attributes();++E){var T=v[E],A=o(T),L=p.num_points()*A,M=n._malloc(L);h.GetAttributeDataArrayForAllPoints(p,T,T.data_type(),L,M);for(var P=new Uint8Array(n.HEAPU8.buffer,M,L),O=0;O<p.num_points();++O)for(var I=0;I<A;++I)S[O*_+w[E]+I]=P[O*A+I];if(!b&&T.attribute_type()===i)for(var R=c(s(P,T.data_type()),m?new Uint16Array(t.indices):new Uint32Array(t.indices)),D=0;D<p.num_points();++D)for(var k=0;k<12;++k)S[D*_+x+k]=R[12*D+k];n._free(M)}return n.destroy(p),n.destroy(h),n.destroy(r),t},p=function(e){var t=h(new Uint8Array(e.buffer));self.postMessage({jobId:e.jobId,error:t.error,indices:t.indices,vertices:t.vertices,attributes:t.attributes},[t.indices,t.vertices].filter((function(e){return null!=e})))},d=[];self.onmessage=function(e){var t=e.data;switch(t.type){case"init":self.DracoDecoderModule({instantiateWasm:function(e,n){return WebAssembly.instantiate(t.module,e).then((function(e){return n(e)})).catch((function(e){return console.error("instantiate failed + "+e)})),{}}}).then((function(e){n=e,d.forEach((function(e){return p(e)}))}));break;case"decodeMesh":n?p(t):d.push(t)}}}var UO,zO,VO,HO,GO=3,WO=function(){function e(){this.workers=[[],[],[]],this.jobId=0,this.jobQueue=[],this.jobCallbacks=new Map,this.run=function(e,t){e.postMessage({type:"decodeMesh",jobId:t.jobId,buffer:t.buffer},[t.buffer])}}var t=e.prototype;return t.init=function(e){var t=this;for(e.forEach((function(e){e.addEventListener("message",(function(n){var i=n.data,a=t.jobCallbacks.get(i.jobId);if(a&&a(i.error,{indices:i.indices,vertices:i.vertices,attributes:i.attributes}),t.jobCallbacks.delete(i.jobId),t.jobQueue.length>0){var s=t.jobQueue.shift();t.run(e,s)}else{var r=t.workers[2].indexOf(e);if(-1!==r)t.workers[2].splice(r,1),t.workers[1].push(e);else{var o=t.workers[1].indexOf(e);-1!==o&&(t.workers[1].splice(o,1),t.workers[0].push(e))}}}))})),this.workers[0]=e;this.jobQueue.length&&(this.workers[0].length||this.workers[1].length);){var n=this.jobQueue.shift();if(this.workers[0].length>0){var i=this.workers[0].shift();this.workers[1].push(i),this.run(i,n)}else{var a=this.workers[1].shift();this.workers[2].push(a),this.run(a,n)}}},t.enqueueJob=function(e,t){var n={jobId:this.jobId++,buffer:e};if(this.jobCallbacks.set(n.jobId,t),this.workers[0].length>0){var i=this.workers[0].shift();this.workers[1].push(i),this.run(i,n)}else if(this.workers[1].length>0){var a=this.workers[1].shift();this.workers[2].push(a),this.run(a,n)}else this.jobQueue.push(n)},e}(),jO=function(e){return new Promise((function(t,n){var i={cache:!0,responseType:"text",retry:GO>0,maxRetries:GO};Qd.get(e,i,(function(e,i){e?n(e):t(i)}))}))},XO=function(e){var t=function(){return fetch(e).then((function(e){return e.arrayBuffer()})).then((function(e){return WebAssembly.compile(e)}))},n=function(){return WebAssembly.compileStreaming(fetch(e)).catch((function(e){return t()}))};return WebAssembly.compileStreaming?n():t()},YO=1,qO=function(e){if(UO)return!0;if(!e)if(zO)e=zO;else{var t=Ge.getConfig("DracoDecoderModule");e=t?{jsUrl:t.glueUrl,wasmUrl:t.wasmUrl,numWorkers:t.numWorkers}:{jsUrl:"draco.wasm.js",wasmUrl:"draco.wasm.wasm",numWorkers:YO}}return!(!e.jsUrl||!e.wasmUrl||(UO=new WO,Promise.all([jO(e.jsUrl),XO(e.wasmUrl)]).then((function(t){for(var n=t[0],i=t[1],a=["/* draco */",n,"/* worker */","(\n"+NO.toString()+"\n)()\n\n"].join("\n"),s=new Blob([a],{type:"application/javascript"}),r=URL.createObjectURL(s),o=Math.max(1,Math.min(16,e.numWorkers||YO)),l=[],c=0;c<o;++c){var h=new Worker(r);h.postMessage({type:"init",module:i}),l.push(h)}UO.init(l)})),0))},KO=function(e){null!=e&&e.lazyInit?zO=e:qO(e)},ZO=function(e,t){return!!qO()&&(UO.enqueueJob(e,t),!0)},QO=function(){function e(){this.gltf=void 0,this.nodes=void 0,this.scenes=void 0,this.animations=void 0,this.textures=void 0,this.materials=void 0,this.variants=void 0,this.meshVariants=void 0,this.meshDefaultMaterials=void 0,this.renders=void 0,this.skins=void 0,this.lights=void 0,this.cameras=void 0}return e.prototype.destroy=function(){this.renders&&this.renders.forEach((function(e){e.meshes=null}))},e}(),JO=function(e){return/^data:.*,.*$/i.test(e)},$O=function(e){return e.substring(e.indexOf(":")+1,e.indexOf(";"))},eI=function(e){switch(e){case"SCALAR":return 1;case"VEC2":return 2;case"VEC3":default:return 3;case"VEC4":case"MAT2":return 4;case"MAT3":return 9;case"MAT4":return 16}},tI=function(e){switch(e){case 5120:return Ka;case 5121:return Za;case 5122:return Qa;case 5123:return Ja;case 5124:return $a;case 5125:return es;case 5126:return ts;default:return 0}},nI=function(e){switch(e){case 5120:case 5121:return 1;case 5122:case 5123:return 2;case 5124:case 5125:case 5126:return 4;default:return 0}},iI=function(e){switch(e){case 5120:return Int8Array;case 5121:return Uint8Array;case 5122:return Int16Array;case 5123:return Uint16Array;case 5124:return Int32Array;case 5125:return Uint32Array;case 5126:return Float32Array;default:return null}},aI={POSITION:Fi,NORMAL:Bi,TANGENT:Ni,COLOR_0:Vi,JOINTS_0:zi,WEIGHTS_0:Ui,TEXCOORD_0:Gi,TEXCOORD_1:Wi,TEXCOORD_2:ji,TEXCOORD_3:Xi,TEXCOORD_4:Yi,TEXCOORD_5:qi,TEXCOORD_6:Ki,TEXCOORD_7:Zi},sI=((VO={})[Fi]=0,VO[Bi]=1,VO[Ni]=2,VO[Vi]=3,VO[zi]=4,VO[Ui]=5,VO[Gi]=6,VO[Wi]=7,VO[ji]=8,VO[Xi]=9,VO[Yi]=10,VO[qi]=11,VO[Ki]=12,VO[Zi]=13,VO),rI=function(e){switch(e){case Ka:return function(e){return Math.max(e/127,-1)};case Za:return function(e){return e/255};case Qa:return function(e){return Math.max(e/32767,-1)};case Ja:return function(e){return e/65535};default:return function(e){return e}}},oI=function(e,t,n){for(var i=rI(n),a=t.length,s=0;s<a;++s)e[s]=i(t[s]);return e},lI=function e(t,n,i){void 0===i&&(i=!1);var a,s=eI(t.type),r=iI(t.componentType);if(!r)return null;if(t.sparse){var o=t.sparse,l={count:o.count,type:"SCALAR"},c=e(Object.assign(l,o.indices),n,!0),h={count:o.count,type:t.type,componentType:t.componentType},p=e(Object.assign(h,o.values),n,!0);a=t.hasOwnProperty("bufferView")?e({bufferView:t.bufferView,byteOffset:t.byteOffset,componentType:t.componentType,count:t.count,type:t.type},n,!0).slice():new r(t.count*s);for(var d=0;d<o.count;++d)for(var u=c[d],m=0;m<s;++m)a[u*s+m]=p[d*s+m]}else if(t.hasOwnProperty("bufferView")){var f=n[t.bufferView];if(i&&f.hasOwnProperty("byteStride")){for(var g=s*r.BYTES_PER_ELEMENT,v=new ArrayBuffer(t.count*g),y=new Uint8Array(v),_=0,w=0;w<t.count;++w)for(var b=(t.byteOffset||0)+w*f.byteStride,x=0;x<g;++x)y[_++]=f[b++];a=new r(v)}else a=new r(f.buffer,f.byteOffset+(t.byteOffset||0),t.count*s)}else a=new r(t.count*s);return a},cI=function(e,t){var n=lI(e,t,!0);if(n instanceof Float32Array||!e.normalized)return n;var i=new Float32Array(n.length);return oI(i,n,tI(e.componentType)),i},hI=function(e){var t=e.min,n=e.max;if(!t||!n)return null;if(e.normalized){var i=tI(e.componentType);t=oI([],t,i),n=oI([],n,i)}return new Ot(new pt(.5*(n[0]+t[0]),.5*(n[1]+t[1]),.5*(n[2]+t[2])),new pt(.5*(n[0]-t[0]),.5*(n[1]-t[1]),.5*(n[2]-t[2])))},pI=function(e){if(!e.hasOwnProperty("mode"))return Ri;switch(e.mode){case 0:return Mi;case 1:return Pi;case 2:return Oi;case 3:return Ii;case 4:default:return Ri;case 5:return Di;case 6:return ki}},dI=function(e){for(var t=new Uint16Array(e),n=0;n<e;n++)t[n]=n;return t},uI=function(e,t){var n=e[Fi];if(n&&3===n.components){var i;if(n.size!==n.stride){var a=n.stride/zs[n.type],s=new Us[n.type](n.buffer,n.offset,n.count*a);i=new Us[n.type](3*n.count);for(var r=0;r<n.count;++r)i[3*r+0]=s[r*a+0],i[3*r+1]=s[r*a+1],i[3*r+2]=s[r*a+2]}else i=new Us[n.type](n.buffer,n.offset,3*n.count);var o=n.count;t||(t=dI(o));var l=pg(i,t),c=new Float32Array(l.length);c.set(l),e[Bi]={buffer:c.buffer,size:12,offset:0,stride:12,count:o,components:3,type:ts}}},mI=function(e){var t,n,i=[],a=[],s=[];for(t=0;t<e.format.elements.length;++t){var r=e.format.elements[t];if(r.name===Gi||r.name===Wi)switch(r.dataType){case ts:i.push({offset:r.offset/4+1,stride:r.stride/4});break;case Ja:a.push({offset:r.offset/2+1,stride:r.stride/2});break;case Za:s.push({offset:r.offset+1,stride:r.stride})}}var o=function(i,a,s){var r=new a(e.storage);for(t=0;t<i.length;++t){var o=i[t].offset,l=i[t].stride;for(n=0;n<e.numVertices;++n)r[o]=s-r[o],o+=l}};i.length>0&&o(i,Float32Array,1),a.length>0&&o(a,Uint16Array,65535),s.length>0&&o(s,Uint8Array,255)},fI=function(e){var t=function(e){for(var t=[],n=0;n<e._levels.length;++n){var i=[];if(e.cubemap)for(var a=0;a<6;++a)i.push(e._levels[n][a]);else i=e._levels[n];t.push(i)}return t},n=new vl(e.device,e);return n._levels=t(e),n},gI=function(e){var t=new eS(e.name+"_clone",e.type,e.file,e.data,e.options);return t.loaded=!0,t.resource=fI(e.resource),e.registry.add(t),t},vI=function(e,t,n){var i=t[Fi];if(!i)return null;var a,s,r,o,l,c,h=i.count,p=[];for(var d in t)if(t.hasOwnProperty(d)){var u={semantic:d,components:t[d].components,type:t[d].type,normalize:!!t[d].normalize};Fr.isElementValid(e,u)||u.components++,p.push(u)}p.sort((function(e,t){return sI[e.semantic]-sI[t.semantic]}));var m=new Fr(e,p),f=!0;for(a=0;a<m.elements.length;++a)if(c=(o=t[(l=m.elements[a]).name]).offset-i.offset,o.buffer!==i.buffer||o.stride!==l.stride||o.size!==l.size||c!==l.offset){f=!1;break}var g,v,y,_=new Mr(e,m,h,mn),w=_.lock(),b=new Uint32Array(w);if(f)g=new Uint32Array(i.buffer,i.offset,h*_.format.size/4),b.set(g);else for(a=0;a<_.format.elements.length;++a){v=(l=_.format.elements[a]).stride/4,y=(o=t[l.name]).stride/4,g=new Uint32Array(o.buffer,o.offset,(o.count-1)*y+(o.size+3)/4);var x=0,C=l.offset/4,S=Math.floor((o.size+3)/4);for(s=0;s<h;++s){for(r=0;r<S;++r)b[C+r]=g[x+r];x+=y,C+=v}}return n&&mI(_),_.unlock(),_},yI=function(e,t,n,i,a,s,r){var o={},l=[];for(var c in t)t.hasOwnProperty(c)&&aI.hasOwnProperty(c)&&(o[c]=t[c],l.push(c+":"+t[c]));l.sort();var h=l.join(),p=r[h];if(!p){var d={};for(var u in o){var m=i[t[u]],f=lI(m,a),g=a[m.bufferView],v=aI[u],y=eI(m.type)*nI(m.componentType),_=g&&g.hasOwnProperty("byteStride")?g.byteStride:y;d[v]={buffer:f.buffer,size:y,offset:f.byteOffset,stride:_,count:m.count,components:eI(m.type),type:tI(m.componentType),normalize:m.normalized}}d.hasOwnProperty(Bi)||uI(d,n),p=vI(e,d,s),r[h]=p}return p},_I=function(e,t,n,i,a,s){var r,o,l,c=t.joints,h=c.length,p=[];if(t.hasOwnProperty("inverseBindMatrices")){var d=t.inverseBindMatrices,u=lI(n[d],i,!0),m=[];for(r=0;r<h;r++){for(o=0;o<16;o++)m[o]=u[16*r+o];(l=new St).set(m),p.push(l)}}else for(r=0;r<h;r++)l=new St,p.push(l);var f=[];for(r=0;r<h;r++)f[r]=a[c[r]].name;var g=f.join("#"),v=s.get(g);return v||(v=new jx(e,p,f),s.set(g,v)),v},wI=function(e,t,n,i,a,s,r){var o,l=new og(e);l.aabb=hI(n[t.attributes.POSITION]);for(var c=[],h=0,p=Object.entries(t.attributes);h<p.length;h++){var d,u=p[h],m=u[0],f=n[u[1]],g=aI[m],v=tI(f.componentType);c.push({semantic:g,components:eI(f.type),type:v,normalize:null!=(d=f.normalized)?d:g===Vi&&(v===Za||v===Ja)})}if(r.push(new Promise((function(n,a){var s=t.extensions.KHR_draco_mesh_compression;ZO(i[s.bufferView].slice().buffer,(function(i,r){if(i)console.log(i),a(i);else{for(var o,h={},p=0,d=Object.entries(s.attributes);p<d.length;p++){var u=d[p],m=u[0],f=u[1];h[aI[m]]=r.attributes.indexOf(f)}c.sort((function(e,t){return h[e.semantic]-h[t.semantic]})),null!=(o=t.attributes)&&o.NORMAL||c.splice(1,0,{semantic:"NORMAL",components:3,type:ts});var g=new Fr(e,c),v=r.vertices.byteLength/g.size,y=v<=65535?Xn:Yn,_=r.indices.byteLength/(v<=65535?2:4),w=new Mr(e,g,v,mn,r.vertices),b=new lc(e,y,_,mn,r.indices);l.vertexBuffer=w,l.indexBuffer[0]=b,l.primitive[0].type=pI(t),l.primitive[0].base=0,l.primitive[0].count=b?_:v,l.primitive[0].indexed=!!b,n()}}))}))),null!=t&&null!=(o=t.extensions)&&o.KHR_materials_variants){var y=t.extensions.KHR_materials_variants,_={};y.mappings.forEach((function(e){e.variants.forEach((function(t){_[t]=e.material}))})),a[l.id]=_}return s[l.id]=t.material,l},bI=function(e,t,n,i,a,s,r,o,l,c){var h=[];return t.primitives.forEach((function(p){var d;if(null!=(d=p.extensions)&&d.KHR_draco_mesh_compression)h.push(wI(e,p,n,i,r,o,c));else{var u=p.hasOwnProperty("indices")?lI(n[p.indices],i,!0):null,m=yI(e,p.attributes,u,n,i,a,s),f=pI(p),g=new og(e);if(g.vertexBuffer=m,g.primitive[0].type=f,g.primitive[0].base=0,g.primitive[0].indexed=null!==u,null!==u){var v;(v=u instanceof Uint8Array?jn:u instanceof Uint16Array?Xn:Yn)!==Yn||e.extUintElement||(v=Xn,u=new Uint16Array(u)),v===jn&&e.isWebGPU&&(v=Xn,u=new Uint16Array(u));var y=new lc(e,v,u.length,mn,u);g.indexBuffer[0]=y,g.primitive[0].count=u.length}else g.primitive[0].count=m.numVertices;if(p.hasOwnProperty("extensions")&&p.extensions.hasOwnProperty("KHR_materials_variants")){var _=p.extensions.KHR_materials_variants,w={};_.mappings.forEach((function(e){e.variants.forEach((function(t){w[t]=e.material}))})),r[g.id]=w}o[g.id]=p.material;var b=n[p.attributes.POSITION];if(g.aabb=hI(b),p.hasOwnProperty("targets")){var x=[];p.targets.forEach((function(e,a){var s={};e.hasOwnProperty("POSITION")&&(b=n[e.POSITION],s.deltaPositions=cI(b,i),s.deltaPositionsType=ts,s.aabb=hI(b)),e.hasOwnProperty("NORMAL")&&(b=n[e.NORMAL],s.deltaNormals=cI(b,i),s.deltaNormalsType=ts),t.hasOwnProperty("extras")&&t.extras.hasOwnProperty("targetNames")?s.name=t.extras.targetNames[a]:s.name=a.toString(10),t.hasOwnProperty("weights")&&(s.defaultWeight=t.weights[a]),s.preserveData=l.morphPreserveData,x.push(new Ob(s))})),g.morph=new Pb(x,e,{preferHighPrecision:l.morphPreferHighPrecision})}h.push(g)}})),h},xI=function(e,t,n){var i,a,s=e.texCoord;if(s)for(a=0;a<n.length;++a)t[n[a]+"MapUv"]=s;var r=[0,0],o=[1,1],l=null==(i=e.extensions)?void 0:i.KHR_texture_transform;if(l){var c=l.offset||r,h=l.scale||o,p=l.rotation?-l.rotation*at.RAD_TO_DEG:0,d=new ft(h[0],h[1]),u=new ft(c[0],1-h[1]-c[1]);for(a=0;a<n.length;++a)t[n[a]+"MapTiling"]=d,t[n[a]+"MapOffset"]=u,t[n[a]+"MapRotation"]=p}},CI=function(e,t,n){var i,a;if(e.hasOwnProperty("diffuseFactor")?(i=e.diffuseFactor,t.diffuse.set(Math.pow(i[0],1/2.2),Math.pow(i[1],1/2.2),Math.pow(i[2],1/2.2)),t.opacity=i[3]):(t.diffuse.set(1,1,1),t.opacity=1),e.hasOwnProperty("diffuseTexture")){var s=e.diffuseTexture;a=n[s.index],t.diffuseMap=a,t.diffuseMapChannel="rgb",t.opacityMap=a,t.opacityMapChannel="a",xI(s,t,["diffuse","opacity"])}if(t.useMetalness=!1,e.hasOwnProperty("specularFactor")?(i=e.specularFactor,t.specular.set(Math.pow(i[0],1/2.2),Math.pow(i[1],1/2.2),Math.pow(i[2],1/2.2))):t.specular.set(1,1,1),e.hasOwnProperty("glossinessFactor")?t.gloss=e.glossinessFactor:t.gloss=1,e.hasOwnProperty("specularGlossinessTexture")){var r=e.specularGlossinessTexture;t.specularEncoding="srgb",t.specularMap=t.glossMap=n[r.index],t.specularMapChannel="rgb",t.glossMapChannel="a",xI(r,t,["gloss","metalness"])}},SI=function(e,t,n){if(e.hasOwnProperty("clearcoatFactor")?t.clearCoat=.25*e.clearcoatFactor:t.clearCoat=0,e.hasOwnProperty("clearcoatTexture")){var i=e.clearcoatTexture;t.clearCoatMap=n[i.index],t.clearCoatMapChannel="r",xI(i,t,["clearCoat"])}if(e.hasOwnProperty("clearcoatRoughnessFactor")?t.clearCoatGloss=e.clearcoatRoughnessFactor:t.clearCoatGloss=0,e.hasOwnProperty("clearcoatRoughnessTexture")){var a=e.clearcoatRoughnessTexture;t.clearCoatGlossMap=n[a.index],t.clearCoatGlossMapChannel="g",xI(a,t,["clearCoatGloss"])}if(e.hasOwnProperty("clearcoatNormalTexture")){var s=e.clearcoatNormalTexture;t.clearCoatNormalMap=n[s.index],xI(s,t,["clearCoatNormal"]),s.hasOwnProperty("scale")&&(t.clearCoatBumpiness=s.scale)}t.clearCoatGlossInvert=!0},EI=function(e,t,n){t.useLighting=!1,t.emissive.copy(t.diffuse),t.emissiveTint=t.diffuseTint,t.emissiveMap=t.diffuseMap,t.emissiveMapUv=t.diffuseMapUv,t.emissiveMapTiling.copy(t.diffuseMapTiling),t.emissiveMapOffset.copy(t.diffuseMapOffset),t.emissiveMapRotation=t.diffuseMapRotation,t.emissiveMapChannel=t.diffuseMapChannel,t.emissiveVertexColor=t.diffuseVertexColor,t.emissiveVertexColorChannel=t.diffuseVertexColorChannel,t.useLighting=!1,t.useSkybox=!1,t.diffuse.set(0,0,0),t.diffuseTint=!1,t.diffuseMap=null,t.diffuseVertexColor=!1},TI=function(e,t,n){if(t.useMetalnessSpecularColor=!0,e.hasOwnProperty("specularColorTexture")&&(t.specularEncoding="srgb",t.specularMap=n[e.specularColorTexture.index],t.specularMapChannel="rgb",xI(e.specularColorTexture,t,["specular"])),e.hasOwnProperty("specularColorFactor")){var i=e.specularColorFactor;t.specular.set(Math.pow(i[0],1/2.2),Math.pow(i[1],1/2.2),Math.pow(i[2],1/2.2))}else t.specular.set(1,1,1);e.hasOwnProperty("specularFactor")?t.specularityFactor=e.specularFactor:t.specularityFactor=1,e.hasOwnProperty("specularTexture")&&(t.specularityFactorMapChannel="a",t.specularityFactorMap=n[e.specularTexture.index],xI(e.specularTexture,t,["specularityFactor"]))},AI=function(e,t,n){e.hasOwnProperty("ior")&&(t.refractionIndex=1/e.ior)},LI=function(e,t,n){t.blendType=wu,t.useDynamicRefraction=!0,e.hasOwnProperty("transmissionFactor")&&(t.refraction=e.transmissionFactor),e.hasOwnProperty("transmissionTexture")&&(t.refractionMapChannel="r",t.refractionMap=n[e.transmissionTexture.index],xI(e.transmissionTexture,t,["refraction"]))},MI=function(e,t,n){if(t.useSheen=!0,e.hasOwnProperty("sheenColorFactor")){var i=e.sheenColorFactor;t.sheen.set(Math.pow(i[0],1/2.2),Math.pow(i[1],1/2.2),Math.pow(i[2],1/2.2))}else t.sheen.set(1,1,1);e.hasOwnProperty("sheenColorTexture")&&(t.sheenMap=n[e.sheenColorTexture.index],t.sheenEncoding="srgb",xI(e.sheenColorTexture,t,["sheen"])),e.hasOwnProperty("sheenRoughnessFactor")?t.sheenGloss=e.sheenRoughnessFactor:t.sheenGloss=0,e.hasOwnProperty("sheenRoughnessTexture")&&(t.sheenGlossMap=n[e.sheenRoughnessTexture.index],t.sheenGlossMapChannel="a",xI(e.sheenRoughnessTexture,t,["sheenGloss"])),t.sheenGlossInvert=!0},PI=function(e,t,n){if(t.blendType=wu,t.useDynamicRefraction=!0,e.hasOwnProperty("thicknessFactor")&&(t.thickness=e.thicknessFactor),e.hasOwnProperty("thicknessTexture")&&(t.thicknessMap=n[e.thicknessTexture.index],t.thicknessMapChannel="g",xI(e.thicknessTexture,t,["thickness"])),e.hasOwnProperty("attenuationDistance")&&(t.attenuationDistance=e.attenuationDistance),e.hasOwnProperty("attenuationColor")){var i=e.attenuationColor;t.attenuation.set(Math.pow(i[0],1/2.2),Math.pow(i[1],1/2.2),Math.pow(i[2],1/2.2))}},OI=function(e,t,n){e.hasOwnProperty("emissiveStrength")&&(t.emissiveIntensity=e.emissiveStrength)},II=function(e,t,n){t.useIridescence=!0,e.hasOwnProperty("iridescenceFactor")&&(t.iridescence=e.iridescenceFactor),e.hasOwnProperty("iridescenceTexture")&&(t.iridescenceMapChannel="r",t.iridescenceMap=n[e.iridescenceTexture.index],xI(e.iridescenceTexture,t,["iridescence"])),e.hasOwnProperty("iridescenceIor")&&(t.iridescenceRefractionIndex=e.iridescenceIor),e.hasOwnProperty("iridescenceThicknessMinimum")&&(t.iridescenceThicknessMin=e.iridescenceThicknessMinimum),e.hasOwnProperty("iridescenceThicknessMaximum")&&(t.iridescenceThicknessMax=e.iridescenceThicknessMaximum),e.hasOwnProperty("iridescenceThicknessTexture")&&(t.iridescenceThicknessMapChannel="g",t.iridescenceThicknessMap=n[e.iridescenceThicknessTexture.index],xI(e.iridescenceThicknessTexture,t,["iridescenceThickness"]))},RI=function(e,t,n){var i,a,s=new zw;if(s.occludeSpecular=qm,s.diffuseTint=!0,s.diffuseVertexColor=!0,s.specularTint=!0,s.specularVertexColor=!0,e.hasOwnProperty("name")&&(s.name=e.name),e.hasOwnProperty("pbrMetallicRoughness")){var r=e.pbrMetallicRoughness;if(r.hasOwnProperty("baseColorFactor")?(i=r.baseColorFactor,s.diffuse.set(Math.pow(i[0],1/2.2),Math.pow(i[1],1/2.2),Math.pow(i[2],1/2.2)),s.opacity=i[3]):(s.diffuse.set(1,1,1),s.opacity=1),r.hasOwnProperty("baseColorTexture")){var o=r.baseColorTexture;a=t[o.index],s.diffuseMap=a,s.diffuseMapChannel="rgb",s.opacityMap=a,s.opacityMapChannel="a",xI(o,s,["diffuse","opacity"])}if(s.useMetalness=!0,s.specular.set(1,1,1),r.hasOwnProperty("metallicFactor")?s.metalness=r.metallicFactor:s.metalness=1,r.hasOwnProperty("roughnessFactor")?s.gloss=r.roughnessFactor:s.gloss=1,s.glossInvert=!0,r.hasOwnProperty("metallicRoughnessTexture")){var l=r.metallicRoughnessTexture;s.metalnessMap=s.glossMap=t[l.index],s.metalnessMapChannel="b",s.glossMapChannel="g",xI(l,s,["gloss","metalness"])}}if(e.hasOwnProperty("normalTexture")){var c=e.normalTexture;s.normalMap=t[c.index],xI(c,s,["normal"]),c.hasOwnProperty("scale")&&(s.bumpiness=c.scale)}if(e.hasOwnProperty("occlusionTexture")){var h=e.occlusionTexture;s.aoMap=t[h.index],s.aoMapChannel="r",xI(h,s,["ao"])}if(e.hasOwnProperty("emissiveFactor")?(i=e.emissiveFactor,s.emissive.set(Math.pow(i[0],1/2.2),Math.pow(i[1],1/2.2),Math.pow(i[2],1/2.2)),s.emissiveTint=!0):(s.emissive.set(0,0,0),s.emissiveTint=!1),e.hasOwnProperty("emissiveTexture")){var p=e.emissiveTexture;s.emissiveMap=t[p.index],xI(p,s,["emissive"])}if(e.hasOwnProperty("alphaMode"))switch(e.alphaMode){case"MASK":s.blendType=bu,e.hasOwnProperty("alphaCutoff")?s.alphaTest=e.alphaCutoff:s.alphaTest=.5;break;case"BLEND":s.blendType=wu,s.alphaTest=1/255;break;default:s.blendType=bu}else s.blendType=bu;e.hasOwnProperty("doubleSided")?(s.twoSidedLighting=e.doubleSided,s.cull=e.doubleSided?An:Ln):(s.twoSidedLighting=!1,s.cull=Ln);var d={KHR_materials_clearcoat:SI,KHR_materials_emissive_strength:OI,KHR_materials_ior:AI,KHR_materials_iridescence:II,KHR_materials_pbrSpecularGlossiness:CI,KHR_materials_sheen:MI,KHR_materials_specular:TI,KHR_materials_transmission:LI,KHR_materials_unlit:EI,KHR_materials_volume:PI};if(e.hasOwnProperty("extensions"))for(var u in e.extensions){var m=d[u];void 0!==m&&m(e.extensions[u],s,t)}return s.update(),s},DI=function(e,t,n,i,a,s,r){var o,l=function(e){return new BO(eI(e.type),cI(e,i))},c={STEP:GS,LINEAR:WS,CUBICSPLINE:jS},h={},p={},d={},u=1;for(o=0;o<e.samplers.length;++o){var m=e.samplers[o];h.hasOwnProperty(m.input)||(h[m.input]=l(n[m.input])),p.hasOwnProperty(m.output)||(p[m.output]=l(n[m.output]));var f=m.hasOwnProperty("interpolation")&&c.hasOwnProperty(m.interpolation)?c[m.interpolation]:WS,g={paths:[],input:m.input,output:m.output,interpolation:f};d[o]=g}var v=[],y={translation:"localPosition",rotation:"localRotation",scale:"localScale"},_=function(e){for(var t=[];e;)t.unshift(e.name),e=e.parent;return t},w=function(e,t,n){var i=p[e.output];if(i){var a;if(s&&s[t.mesh]){var r=s[t.mesh];r.hasOwnProperty("extras")&&r.extras.hasOwnProperty("targetNames")&&(a=r.extras.targetNames)}for(var l=i.data,c=l.length/h[e.input].data.length,m=l.length/c,f=4*m,g=new ArrayBuffer(f*c),v=0;v<c;v++){for(var y,_=new Float32Array(g,f*v,m),w=0;w<m;w++)_[w]=l[w*c+v];var b=new BO(1,_),x=null!=(y=a)&&y[v]?"name."+a[v]:v;p[-u]=b;var C={paths:[{entityPath:n,component:"graph",propertyPath:["weight."+x]}],input:e.input,output:-u,interpolation:e.interpolation};u++,d["morphCurve-"+o+"-"+v]=C}}};for(o=0;o<e.channels.length;++o){var b=e.channels[o],x=b.target,C=d[b.sampler],S=a[x.node],E=r[x.node],T=_(S);x.path.startsWith("weights")?(w(C,E,T),d[b.sampler].morphCurve=!0):C.paths.push({entityPath:T,component:"graph",propertyPath:[y[x.path]]})}var A=[],L=[],M=[];for(var P in h)A.push(h[P]),h[P]=A.length-1;for(var O in p)L.push(p[O]),p[O]=L.length-1;for(var I in d){var R=d[I];R.morphCurve||(M.push(new FO(R.paths,h[R.input],p[R.output],R.interpolation)),R.paths.length>0&&"localRotation"===R.paths[0].propertyPath[0]&&R.interpolation!==jS&&v.push(M[M.length-1].output))}v.sort();var D,k=null;for(o=0;o<v.length;++o){var F=v[o];if(0===o||F!==k){if(4===(D=L[F]).components)for(var B=D.data,N=B.length-4,U=0;U<N;U+=4)B[U+0]*B[U+4]+B[U+1]*B[U+5]+B[U+2]*B[U+6]+B[U+3]*B[U+7]<0&&(B[U+4]*=-1,B[U+5]*=-1,B[U+6]*=-1,B[U+7]*=-1);k=F}}var z=0;for(o=0;o<A.length;o++)D=A[o]._data,z=Math.max(z,0===D.length?0:D[D.length-1]);return new EE(e.hasOwnProperty("name")?e.name:"animation_"+t,z,A,L,M)},kI=new St,FI=new pt,BI=function(e,t){var n=new Cv;if(e.hasOwnProperty("name")&&e.name.length>0?n.name=e.name:n.name="node_"+t,e.hasOwnProperty("matrix")&&(kI.data.set(e.matrix),kI.getTranslation(FI),n.setLocalPosition(FI),kI.getEulerAngles(FI),n.setLocalEulerAngles(FI),kI.getScale(FI),n.setLocalScale(FI)),e.hasOwnProperty("rotation")){var i=e.rotation;n.setLocalRotation(i[0],i[1],i[2],i[3])}if(e.hasOwnProperty("translation")){var a=e.translation;n.setLocalPosition(a[0],a[1],a[2])}if(e.hasOwnProperty("scale")){var s=e.scale;n.setLocalScale(s[0],s[1],s[2])}return n},NI=function(e,t){var n="orthographic"===e.type?Sm:Cm,i=n===Sm?e.orthographic:e.perspective,a={enabled:!1,projection:n,nearClip:i.znear,aspectRatioMode:Jf};i.zfar&&(a.farClip=i.zfar),n===Sm?(a.orthoHeight=.5*i.ymag,i.ymag&&(a.aspectRatioMode=$f,a.aspectRatio=i.xmag/i.ymag)):(a.fov=i.yfov*at.RAD_TO_DEG,i.aspectRatio&&(a.aspectRatioMode=$f,a.aspectRatio=i.aspectRatio));var s=new gS(e.name);return s.addComponent("camera",a),s},UI=function(e,t){var n={enabled:!1,type:"point"===e.type?"omni":e.type,color:e.hasOwnProperty("color")?new st(e.color):st.WHITE,range:e.hasOwnProperty("range")?e.range:9999,falloffMode:em,intensity:e.hasOwnProperty("intensity")?at.clamp(e.intensity,0,2):1};e.hasOwnProperty("spot")&&(n.innerConeAngle=e.spot.hasOwnProperty("innerConeAngle")?e.spot.innerConeAngle*at.RAD_TO_DEG:0,n.outerConeAngle=e.spot.hasOwnProperty("outerConeAngle")?e.spot.outerConeAngle*at.RAD_TO_DEG:Math.PI/4),e.hasOwnProperty("intensity")&&(n.luminance=e.intensity*Sb.getLightUnitConversion(wb[n.type],n.outerConeAngle,n.innerConeAngle));var i=new gS(t.name);return i.rotateLocal(90,0,0),i.addComponent("light",n),i},zI=function(e,t,n,i){if(!t.hasOwnProperty("skins")||0===t.skins.length)return[];var a=new Map;return t.skins.map((function(s){return _I(e,s,t.accessors,i,n,a)}))},VI=function(e,t,n,i,a){var s,r,o,l={},c={},h={},p=[];return{meshes:!a.skipMeshes&&(null==t||null==(s=t.meshes)?void 0:s.length)&&(null==t||null==(r=t.accessors)?void 0:r.length)&&(null==t||null==(o=t.bufferViews)?void 0:o.length)?t.meshes.map((function(s){return bI(e,s,t.accessors,n,i,l,c,h,a,p)})):[],meshVariants:c,meshDefaultMaterials:h,promises:p}},HI=function(e,t,n,i){var a,s,r,o;if(!e.hasOwnProperty("materials")||0===e.materials.length)return[];var l=null==n||null==(a=n.material)?void 0:a.preprocess,c=null!=(s=null==n||null==(r=n.material)?void 0:r.process)?s:RI,h=null==n||null==(o=n.material)?void 0:o.postprocess;return e.materials.map((function(e){l&&l(e);var n=c(e,t,i);return h&&h(e,n),n}))},GI=function(e){if(!e.hasOwnProperty("extensions")||!e.extensions.hasOwnProperty("KHR_materials_variants"))return null;for(var t=e.extensions.KHR_materials_variants.variants,n={},i=0;i<t.length;i++)n[t[i].name]=i;return n},WI=function(e,t,n,i){var a,s;if(!e.hasOwnProperty("animations")||0===e.animations.length)return[];var r=null==i||null==(a=i.animation)?void 0:a.preprocess,o=null==i||null==(s=i.animation)?void 0:s.postprocess;return e.animations.map((function(i,a){r&&r(i);var s=DI(i,a,e.accessors,n,t,e.meshes,e.nodes);return o&&o(i,s),s}))},jI=function(e,t){var n,i,a,s;if(!e.hasOwnProperty("nodes")||0===e.nodes.length)return[];for(var r=null==t||null==(n=t.node)?void 0:n.preprocess,o=null!=(i=null==t||null==(a=t.node)?void 0:a.process)?i:BI,l=null==t||null==(s=t.node)?void 0:s.postprocess,c=e.nodes.map((function(e,t){r&&r(e);var n=o(e,t);return l&&l(e,n),n})),h=0;h<e.nodes.length;++h){var p=e.nodes[h];if(p.hasOwnProperty("children"))for(var d=c[h],u={},m=0;m<p.children.length;++m){var f=c[p.children[m]];f.parent||(u.hasOwnProperty(f.name)?f.name+=u[f.name]++:u[f.name]=1,d.addChild(f))}}return c},XI=function(e,t){var n,i=[],a=e.scenes.length;if(1===a&&1===(null==(n=e.scenes[0].nodes)?void 0:n.length)){var s=e.scenes[0].nodes[0];i.push(t[s])}else for(var r=0;r<a;r++){var o=e.scenes[r];if(o.nodes){for(var l=new Cv(o.name),c=0;c<o.nodes.length;c++){var h=t[o.nodes[c]];l.addChild(h)}i.push(l)}}return i},YI=function(e,t,n){var i=null;if(e.hasOwnProperty("nodes")&&e.hasOwnProperty("cameras")&&e.cameras.length>0){var a,s,r,o,l=null==n||null==(a=n.camera)?void 0:a.preprocess,c=null!=(s=null==n||null==(r=n.camera)?void 0:r.process)?s:NI,h=null==n||null==(o=n.camera)?void 0:o.postprocess;e.nodes.forEach((function(n,a){if(n.hasOwnProperty("camera")){var s=e.cameras[n.camera];if(s){l&&l(s);var r=c(s,t[a]);h&&h(s,r),r&&(i||(i=new Map),i.set(n,r))}}}))}return i},qI=function(e,t,n){var i=null;if(e.hasOwnProperty("nodes")&&e.hasOwnProperty("extensions")&&e.extensions.hasOwnProperty("KHR_lights_punctual")&&e.extensions.KHR_lights_punctual.hasOwnProperty("lights")){var a=e.extensions.KHR_lights_punctual.lights;if(a.length){var s,r,o,l,c=null==n||null==(s=n.light)?void 0:s.preprocess,h=null!=(r=null==n||null==(o=n.light)?void 0:o.process)?r:UI,p=null==n||null==(l=n.light)?void 0:l.postprocess;e.nodes.forEach((function(e,n){if(e.hasOwnProperty("extensions")&&e.extensions.hasOwnProperty("KHR_lights_punctual")&&e.extensions.KHR_lights_punctual.hasOwnProperty("light")){var s=e.extensions.KHR_lights_punctual.light,r=a[s];if(r){c&&c(r);var o=h(r,t[n]);p&&p(r,o),o&&(i||(i=new Map),i.set(e,o))}}}))}}return i},KI=function(e,t,n){e.nodes.forEach((function(e){e.hasOwnProperty("mesh")&&e.hasOwnProperty("skin")&&t[e.mesh].meshes.forEach((function(t){t.skin=n[e.skin]}))}))},ZI=(HO=X(W().mark((function e(t,n,i,a,s){var r,o,l,c,h,p,d,u,m,f,g,v,y,_,w,b,x,C,S,E,T,A,L,M;return W().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return l=null==s||null==(r=s.global)?void 0:r.preprocess,c=null==s||null==(o=s.global)?void 0:o.postprocess,l&&l(n),h=n.asset&&"PlayCanvas"===n.asset.generator,p=jI(n,s),d=XI(n,p),u=qI(n,p,s),m=YI(n,p,s),f=GI(n),e.next=12,Promise.all(i);case 12:return g=e.sent,v=VI(t,n,g,h,s),y=v.meshes,_=v.meshVariants,w=v.meshDefaultMaterials,b=v.promises,x=WI(n,p,g,s),e.next=17,Promise.all(a);case 17:for(C=e.sent,S=C.map((function(e){return e.resource})),E=HI(n,S,s,h),T=zI(t,n,p,g),A=[],L=0;L<y.length;L++)A[L]=new OO,A[L].meshes=y[L];return KI(n,A,T),(M=new QO).gltf=n,M.nodes=p,M.scenes=d,M.animations=x,M.textures=C,M.materials=E,M.variants=f,M.meshVariants=_,M.meshDefaultMaterials=w,M.renders=A,M.skins=T,M.lights=u,M.cameras=m,c&&c(n,M),e.next=41,Promise.all(b);case 41:return e.abrupt("return",M);case 42:case"end":return e.stop()}}),e)}))),function(e,t,n,i,a){return HO.apply(this,arguments)}),QI=function(e,t){var n,i=function(e,t){switch(e){case 9728:return On;case 9729:return In;case 9984:return Rn;case 9985:return kn;case 9986:return Dn;case 9987:return Fn;default:return t}},a=function(e,t){switch(e){case 33071:return Yt;case 33648:return qt;case 10497:return Xt;default:return t}};e&&(t=null!=(n=t)?n:{},e.minFilter=i(t.minFilter,Fn),e.magFilter=i(t.magFilter,In),e.addressU=a(t.wrapS,Xt),e.addressV=a(t.wrapT,Xt))},JI=0,$I=function(e,t,n,i,a){var s,r,o;if(!e.images||0===e.images.length)return[];var l=null==a||null==(s=a.image)?void 0:s.preprocess,c=null==a||null==(r=a.image)?void 0:r.processAsync,h=null==a||null==(o=a.image)?void 0:o.postprocess,p={"image/png":"png","image/jpeg":"jpg","image/basis":"basis","image/ktx":"ktx","image/ktx2":"ktx2","image/vnd-ms.dds":"dds"},d=function(e,t,n,a,s){return new Promise((function(r,o){var l=function(n){var l=(e.name||"gltf-texture")+"-"+JI++,c={url:t||l};if(n&&(c.contents=n.slice(0).buffer),a){var h=p[a];h&&(c.filename=c.url+"."+h)}var d=new eS(l,"texture",c,null,s);d.on("load",(function(e){return r(e)})),d.on("error",(function(e){return o(e)})),i.add(d),i.load(d)};n?n.then((function(e){return l(e)})):l(null)}))};return e.images.map((function(e,i){var a;return l&&l(e),a=(a=new Promise(c?function(t,n){c(e,(function(e,i){e?n(e):t(i)}))}:function(e){e(null)})).then((function(a){return a||(e.hasOwnProperty("uri")?JO(e.uri)?d(e,e.uri,null,$O(e.uri),null):d(e,DC.test(e.uri)?e.uri:ce.join(n,e.uri),null,null,{crossOrigin:"anonymous"}):e.hasOwnProperty("bufferView")&&e.hasOwnProperty("mimeType")?d(e,null,t[e.bufferView],e.mimeType,null):Promise.reject(new Error("Invalid image found in gltf (neither uri or bufferView found). index="+i)))})),h&&(a=a.then((function(t){return h(e,t),t}))),a}))},eR=function(e,t,n){var i,a,s,r,o;if(null==e||null==(i=e.images)||!i.length||null==e||null==(a=e.textures)||!a.length)return[];var l=null==n||null==(s=n.texture)?void 0:s.preprocess,c=null==n||null==(r=n.texture)?void 0:r.processAsync,h=null==n||null==(o=n.texture)?void 0:o.postprocess,p=new Set;return e.textures.map((function(n){var i;return l&&l(n),i=(i=new Promise(c?function(t,i){c(n,e.images,(function(e,n){e?i(e):t(n)}))}:function(e){e(null)})).then((function(i){var a,s,r,o,l;i=null!=(a=null!=(s=null!=(r=i)?r:null==n||null==(o=n.extensions)||null==(o=o.KHR_texture_basisu)?void 0:o.source)?s:null==n||null==(l=n.extensions)||null==(l=l.EXT_texture_webp)?void 0:l.source)?a:n.source;var c=p.has(i);return p.add(i),t[i].then((function(t){var i,a=c?gI(t):t;return QI(a.resource,(null!=(i=e.samplers)?i:[])[n.sampler]),a}))})),h&&(i=i.then((function(e){return h(n,e),e}))),i}))},tR=function(e,t,n,i){var a,s,r;if(!e.buffers||0===e.buffers.length)return[];var o=null==i||null==(a=i.buffer)?void 0:a.preprocess,l=null==i||null==(s=i.buffer)?void 0:s.processAsync,c=null==i||null==(r=i.buffer)?void 0:r.postprocess;return e.buffers.map((function(i,a){var s;return o&&o(i),s=(s=new Promise(l?function(e,t){l(i,(function(n,i){n?t(n):e(i)}))}:function(e){e(null)})).then((function(e){if(e)return e;if(i.hasOwnProperty("uri")){if(JO(i.uri)){for(var a=atob(i.uri.split(",")[1]),s=new Uint8Array(a.length),r=0;r<a.length;r++)s[r]=a.charCodeAt(r);return s}return new Promise((function(e,t){Qd.get(DC.test(i.uri)?i.uri:ce.join(n,i.uri),{cache:!0,responseType:"arraybuffer",retry:!1},(function(n,i){n?t(n):e(new Uint8Array(i))}))}))}return t})),c&&(s=s.then((function(t){return c(e.buffers[a],t),t}))),s}))},nR=function(e,t){var n=function(e){if("undefined"!=typeof TextDecoder)return(new TextDecoder).decode(e);for(var t="",n=0;n<e.length;n++)t+=String.fromCharCode(e[n]);return decodeURIComponent(escape(t))},i=JSON.parse(n(e));i.asset&&i.asset.version&&parseFloat(i.asset.version)<2?t("Invalid gltf version. Expected version 2.0 or above but found version '"+i.asset.version+"'."):t(null,i)},iR=function(e,t){var n=e instanceof ArrayBuffer?new DataView(e):new DataView(e.buffer,e.byteOffset,e.byteLength),i=n.getUint32(0,!0),a=n.getUint32(4,!0),s=n.getUint32(8,!0);if(1179937895===i)if(2===a)if(s<=0||s>n.byteLength)t("Invalid length found in glb header. Found "+s);else{for(var r=[],o=12;o<s;){var l=n.getUint32(o,!0);o+l+8>n.byteLength&&t("Invalid chunk length found in glb. Found "+l);var c=n.getUint32(o+4,!0),h=new Uint8Array(n.buffer,n.byteOffset+o+8,l);r.push({length:l,type:c,data:h}),o+=l+8}1===r.length||2===r.length?1313821514===r[0].type?r.length>1&&5130562!==r[1].type?t("Invalid chunk type found in glb file. Expected 0x004E4942, found 0x"+r[1].type.toString(16)):t(null,{gltfChunk:r[0].data,binaryChunk:2===r.length?r[1].data:null}):t("Invalid chunk type found in glb file. Expected 0x4E4F534A, found 0x"+r[0].type.toString(16)):t("Invalid number of chunks found in glb file.")}else t("Invalid version number found in glb header. Expected 2, found "+a);else t("Invalid magic number found in glb header. Expected 0x46546C67, found 0x"+i.toString(16))},aR=function(e,t,n){var i=function(){var e=new Uint8Array(t);return 103===e[0]&&108===e[1]&&84===e[2]&&70===e[3]};e&&e.toLowerCase().endsWith(".glb")||i()?iR(t,n):n(null,{gltfChunk:t,binaryChunk:null})},sR=function(e,t,n){var i,a,s,r,o=[],l=null==n||null==(i=n.bufferView)?void 0:i.preprocess,c=null==n||null==(a=n.bufferView)?void 0:a.processAsync,h=null==n||null==(s=n.bufferView)?void 0:s.postprocess;if(null==(r=e.bufferViews)||!r.length)return o;for(var p=function(){var n,i=e.bufferViews[d];l&&l(i),n=new Promise(c?function(e,n){c(i,t,(function(t,i){t?n(t):e(i)}))}:function(e){e(null)}),n=n.then((function(e){return e||t[i.buffer].then((function(e){return new Uint8Array(e.buffer,e.byteOffset+(i.byteOffset||0),i.byteLength)}))})),i.hasOwnProperty("byteStride")&&(n=n.then((function(e){return e.byteStride=i.byteStride,e}))),h&&(n=n.then((function(e){return h(i,e),e}))),o.push(n)},d=0;d<e.bufferViews.length;++d)p();return o},rR=function(){function e(){}return e.parse=function(e,t,n,i,a,s,r){aR(e,n,(function(e,n){e?r(e):nR(n.gltfChunk,(function(e,o){if(e)r(e);else{var l=tR(o,n.binaryChunk,t,s),c=sR(o,l,s),h=$I(o,c,t,a,s),p=eR(o,h,s);ZI(i,o,c,p,s).then((function(e){return r(null,e)})).catch((function(e){return r(e)}))}}))}))},e.createDefaultMaterial=function(){return RI({name:"defaultGlbMaterial"},[])},e}(),oR=function(){function e(e){this.handlerType="animation",this.device=e.graphicsDevice,this.assets=e.assets,this.maxRetries=0}var t=e.prototype;return t.load=function(e,t,n){var i=this;"string"==typeof e&&(e={load:e,original:e});var a={retry:this.maxRetries>0,maxRetries:this.maxRetries};(e.load.startsWith("blob:")||e.load.startsWith("data:"))&&(".glb"===ce.getExtension(e.original).toLowerCase()?a.responseType=Zd.ResponseType.ARRAY_BUFFER:a.responseType=Zd.ResponseType.JSON),Qd.get(e.load,a,(function(a,s){var r;a?t("Error loading animation resource: "+e.original+" ["+a+"]"):".glb"===ce.getExtension(e.original).toLowerCase()?rR.parse("filename.glb","",s,i.device,i.assets,null!=(r=null==n?void 0:n.options)?r:{},(function(e,i){if(e)t(e);else{var a,s=i.animations;if(null!=n&&null!=(a=n.data)&&a.events)for(var r=0;r<s.length;r++)s[r].events=new SE(Object.values(n.data.events));i.destroy(),t(null,s)}})):t(null,i["_parseAnimationV"+s.animation.version](s))}))},t.open=function(e,t,n){return t},t.patch=function(e,t){},t._parseAnimationV3=function(e){var t=e.animation,n=new Jx;n.name=t.name,n.duration=t.duration;for(var i=0;i<t.nodes.length;i++){var a=new Qx,s=t.nodes[i];a._name=s.name;for(var r=0;r<s.keys.length;r++){var o=s.keys[r],l=o.time,c=o.pos,h=o.rot,p=o.scale,d=new pt(c[0],c[1],c[2]),u=(new Et).setFromEulerAngles(h[0],h[1],h[2]),m=new pt(p[0],p[1],p[2]),f=new Zx(l,d,u,m);a._keys.push(f)}n.addNode(a)}return n},t._parseAnimationV4=function(e){var t=e.animation,n=new Jx;n.name=t.name,n.duration=t.duration;for(var i=0;i<t.nodes.length;i++){var a=new Qx,s=t.nodes[i];a._name=s.name;for(var r=s.defaults.p,o=s.defaults.r,l=s.defaults.s,c=0;c<s.keys.length;c++){var h=s.keys[c],p=h.t,d=r||h.p,u=o||h.r,m=l||h.s,f=new pt(d[0],d[1],d[2]),g=(new Et).setFromEulerAngles(u[0],u[1],u[2]),v=new pt(m[0],m[1],m[2]),y=new Zx(p,f,g,v);a._keys.push(y)}n.addNode(a)}return n},e}(),lR=function(){function e(e){this.handlerType="animclip",this.maxRetries=0}var t=e.prototype;return t.load=function(e,t){"string"==typeof e&&(e={load:e,original:e});var n={retry:this.maxRetries>0,maxRetries:this.maxRetries};e.load.startsWith("blob:")&&(n.responseType=Zd.ResponseType.JSON),Qd.get(e.load,n,(function(n,i){n?t("Error loading animation clip resource: "+e.original+" ["+n+"]"):t(null,i)}))},t.open=function(e,t){var n=t.name,i=t.duration,a=t.inputs.map((function(e){return new BO(1,e)})),s=t.outputs.map((function(e){return new BO(e.components,e.data)})),r=t.curves.map((function(e){return new FO([e.path],e.inputIndex,e.outputIndex,e.interpolation)}));return new EE(n,i,a,s,r)},t.patch=function(e,t){},e}(),cR=function(){function e(e){this.handlerType="animstategraph",this.maxRetries=0}var t=e.prototype;return t.load=function(e,t){"string"==typeof e&&(e={load:e,original:e});var n={retry:this.maxRetries>0,maxRetries:this.maxRetries};e.load.startsWith("blob:")&&(n.responseType=Zd.ResponseType.JSON),Qd.get(e.load,n,(function(n,i){n?t("Error loading animation state graph resource: "+e.original+" ["+n+"]"):t(null,i)}))},t.open=function(e,t){return new KE(t)},t.patch=function(e,t){},e}(),hR=function(){if("undefined"==typeof window)return!1;var e=window.navigator.userAgent,t=e.indexOf("MSIE ");if(t>0)return parseInt(e.substring(t+5,e.indexOf(".",t)),10);if(e.indexOf("Trident/")>0){var n=e.indexOf("rv:");return parseInt(e.substring(n+3,e.indexOf(".",n)),10)}return!1}(),pR=[".ogg",".mp3",".wav",".mp4a",".m4a",".mp4",".aac",".opus"],dR=function(){function e(e){this.handlerType="audio",this.manager=e.soundManager,this.maxRetries=0}var t=e.prototype;return t._isSupported=function(e){var t=ce.getExtension(e);return pR.indexOf(t)>-1},t.load=function(e,t){"string"==typeof e&&(e={load:e,original:e});var n=function(e){t(null,new lu(e))},i=function(n){var i="Error loading audio url: "+e.original;n&&(i+=": "+(n.message||n)),console.warn(i),t(i)};if(this._createSound){if(!this._isSupported(e.original))return void i("Audio format for "+e.original+" not supported");this._createSound(e.load,n,i)}else i(null)},t.open=function(e,t){return t},t.patch=function(e,t){},t._createSound=function(e,t,n){if(Jd()){var i=this.manager;if(!i.context)return void n("Audio manager has no audio context");var a={retry:this.maxRetries>0,maxRetries:this.maxRetries};(e.startsWith("blob:")||e.startsWith("data:"))&&(a.responseType=Zd.ResponseType.ARRAY_BUFFER),Qd.get(e,a,(function(e,a){e?n(e):i.context.decodeAudioData(a,t,n)}))}else{var s=null;try{s=new Audio}catch(e){return void n("No support for Audio element")}hR&&document.body.appendChild(s);var r=function e(){s.removeEventListener("canplaythrough",e),hR&&document.body.removeChild(s),t(s)};s.onerror=function(){s.onerror=null,hR&&document.body.removeChild(s),n()},s.addEventListener("canplaythrough",r),s.src=e}},e}(),uR=function(){function e(e){this.handlerType="binary",this.maxRetries=0}var t=e.prototype;return t.load=function(e,t){"string"==typeof e&&(e={load:e,original:e}),Qd.get(e.load,{responseType:Zd.ResponseType.ARRAY_BUFFER,retry:this.maxRetries>0,maxRetries:this.maxRetries},(function(n,i){n?t("Error loading binary resource: "+e.original+" ["+n+"]"):t(null,i)}))},t.open=function(e,t){return t},t.patch=function(e,t){},e}(),mR=function(){function e(t,n,i,a){for(var s=function(t,a,s){var r=e.createAsset(n.name,t,a,s);return i.add(r),r},r=[],o=0;o<t.renders.length;++o)r.push(s("render",t.renders[o],o));for(var l=[],c=0;c<t.materials.length;++c)l.push(s("material",t.materials[c],c));for(var h=[],p=0;p<t.animations.length;++p)h.push(s("animation",t.animations[p],p));this.data=t,this._model=null,this._assetName=n.name,this._assets=i,this._defaultMaterial=a,this.renders=r,this.materials=l,this.textures=t.textures,this.animations=h}e.createAsset=function(e,t,n,i){var a=new eS(e+"/"+t+"/"+i,t,{url:""});return a.resource=n,a.loaded=!0,a};var t=e.prototype;return t.instantiateModelEntity=function(e){var t=new gS;return t.addComponent("model",Object.assign({type:"asset",asset:this.model},e)),t},t.instantiateRenderEntity=function(t){for(var n,i=this,a=this._defaultMaterial,s=[],r=function(e,t,n,i,r,o,l){var c=r[n.id],h=void 0===c?a:i[c],p=new Dv(n,h);return n.morph&&(p.morphInstance=new Lb(n.morph)),l.hasOwnProperty("skin")&&s.push({meshInstance:p,rootBone:e,entity:t}),p},o=function e(n,a,s){var o=new gS;a._cloneInternal(o),n||(n=o);for(var l=null,c=null,h=0;h<s.nodes.length;h++)if(s.nodes[h]===a){var p=s.gltf.nodes[h];if(p.hasOwnProperty("mesh")){var d=s.renders[p.mesh].meshes;c=i.renders[p.mesh];for(var u=0;u<d.length;u++){var m=d[u];if(m){var f=r(n,o,m,s.materials,s.meshDefaultMaterials,s.skins,p);l||(l=[]),l.push(f)}}}if(s.lights){var g=s.lights.get(p);g&&o.addChild(g.clone())}if(s.cameras){var v=s.cameras.get(p);v&&v.camera.system.cloneComponent(v,o)}}l&&(o.addComponent("render",Object.assign({type:"asset",meshInstances:l,rootBone:n},t)),o.render.assignAsset(c));for(var y=a.children,_=0;_<y.length;_++){var w=e(n,y[_],s);o.addChild(w)}return o},l=[],c=te(this.data.scenes);!(n=c()).done;){var h=n.value;l.push(o(null,h,this.data))}return s.forEach((function(e){e.meshInstance.skinInstance=gM.createCachedSkinInstance(e.meshInstance.mesh.skin,e.rootBone,e.entity)})),e.createSceneHierarchy(l,"Entity")},t.getMaterialVariants=function(){return this.data.variants?Object.keys(this.data.variants):[]},t.applyMaterialVariant=function(e,t){var n=t?this.data.variants[t]:null;if(void 0!==n)for(var i=e.findComponents("render"),a=0;a<i.length;a++){var s=i[a];this._applyMaterialVariant(n,s.meshInstances)}},t.applyMaterialVariantInstances=function(e,t){var n=t?this.data.variants[t]:null;void 0!==n&&this._applyMaterialVariant(n,e)},t._applyMaterialVariant=function(e,t){var n=this;t.forEach((function(t){if(null===e)t.material=n._defaultMaterial;else{var i=n.data.meshVariants[t.mesh.id];i&&(t.material=n.data.materials[i[e]])}}))},e.createSceneHierarchy=function(e,t){var n=null;if(1===e.length)n=e[0];else{n=new t("SceneGroup");for(var i,a=te(e);!(i=a()).done;){var s=i.value;n.addChild(s)}}return n},e.createModel=function(t,n){for(var i,a=function(e,i,a,s,r,o,l){var c=t.meshDefaultMaterials[i.id],h=void 0===c?n:r[c],p=new Dv(i,h,o);if(i.morph){var d=new Lb(i.morph);p.morphInstance=d,e.morphInstances.push(d)}if(l.hasOwnProperty("skin")){var u=l.skin,m=a[u];i.skin=m;var f=s[u];p.skinInstance=f,e.skinInstances.push(f)}e.meshInstances.push(p)},s=new Mb,r=[],o=te(t.skins);!(i=o()).done;){var l=i.value,c=new rv(l);c.bones=l.bones,r.push(c)}s.graph=e.createSceneHierarchy(t.scenes,"GraphNode");for(var h=0;h<t.nodes.length;h++){var p=t.nodes[h];if(p.root===s.graph){var d=t.gltf.nodes[h];if(d.hasOwnProperty("mesh"))for(var u=t.renders[d.mesh].meshes,m=0;m<u.length;m++){var f=u[m];f&&a(s,f,t.skins,r,t.materials,p,d)}}}return s},t.destroy=function(){var e=this._assets,t=function(t){e.remove(t),t.unload()},n=function(e){e.forEach((function(e){t(e)}))};this.animations&&(n(this.animations),this.animations=null),this.textures&&(n(this.textures),this.textures=null),this.materials&&(n(this.materials),this.materials=null),this.renders&&(n(this.renders),this.renders=null),this._model&&(t(this._model),this._model=null),this.data=null,this.assets=null},q(e,[{key:"model",get:function(){if(!this._model){var t=e.createModel(this.data,this._defaultMaterial),n=e.createAsset(this._assetName,"model",t,0);this._assets.add(n),this._model=n}return this._model}}]),e}(),fR=function(){function e(e,t,n){this._device=e,this._assets=t,this._defaultMaterial=rR.createDefaultMaterial(),this.maxRetries=n}var t=e.prototype;return t._getUrlWithoutParams=function(e){return e.indexOf("?")>=0?e.split("?")[0]:e},t.load=function(e,t,n){var i=this;eS.fetchArrayBuffer(e.load,(function(a,s){a?t(a):rR.parse(i._getUrlWithoutParams(e.original),ce.extractPath(e.load),s,i._device,n.registry,n.options,(function(e,a){e?t(e):t(null,new mR(a,n,i._assets,i._defaultMaterial))}))}),n,this.maxRetries)},t.open=function(e,t,n){return t},t.patch=function(e,t){},e}(),gR=function(){function e(){}var t=e.prototype;return t.instantiateModelEntity=function(e){return null},t.instantiateRenderEntity=function(e){return null},t.getMaterialVariants=function(){return null},t.applyMaterialVariant=function(e,t){},t.applyMaterialVariantInstances=function(e,t){},e}(),vR=function(){function e(e){this.handlerType="container",this.glbContainerParser=new fR(e.graphicsDevice,e.assets,0),this.parsers={}}var t=e.prototype;return t._getUrlWithoutParams=function(e){return e.indexOf("?")>=0?e.split("?")[0]:e},t._getParser=function(e){var t=e?ce.getExtension(this._getUrlWithoutParams(e)).toLowerCase().replace(".",""):null;return this.parsers[t]||this.glbContainerParser},t.load=function(e,t,n){"string"==typeof e&&(e={load:e,original:e}),this._getParser(e.original).load(e,t,n)},t.open=function(e,t,n){return this._getParser(e).open(e,t,n)},t.patch=function(e,t){},q(e,[{key:"maxRetries",get:function(){return this.glbContainerParser.maxRetries},set:function(e){for(var t in this.glbContainerParser.maxRetries=e,this.parsers)this.parsers.hasOwnProperty(t)&&(this.parsers[t].maxRetries=e)}}]),e}(),yR=function(){function e(e){this.handlerType="css",this.maxRetries=0}var t=e.prototype;return t.load=function(e,t){"string"==typeof e&&(e={load:e,original:e}),Qd.get(e.load,{retry:this.maxRetries>0,maxRetries:this.maxRetries},(function(n,i){n?t("Error loading css resource: "+e.original+" ["+n+"]"):t(null,i)}))},t.open=function(e,t){return t},t.patch=function(e,t){},e}(),_R=function(){function e(e){this.handlerType="cubemap",this._device=e.graphicsDevice,this._registry=e.assets,this._loader=e.loader}var t=e.prototype;return t.load=function(e,t,n){this.loadAssets(n,t)},t.open=function(e,t,n){return n?n.resource:null},t.patch=function(e,t){this.loadAssets(e,(function(n,i){n&&(t.fire("error",e),t.fire("error:"+e.id,n,e),e.fire("error",e))}))},t.getAssetIds=function(e){var t=[];if(t[0]=e.file,(e.loadFaces||!e.file)&&e.data&&e.data.textures)for(var n=0;n<6;++n)t[n+1]=e.data.textures[n];else t[1]=t[2]=t[3]=t[4]=t[5]=t[6]=null;return t},t.compareAssetIds=function(e,t){return e&&t?parseInt(e,10)===e||"string"==typeof e?e===t:e.url===t.url:null!==e==(null!==t)},t.update=function(e,t,n){var i,a,s,r=e.data||{},o=e._handlerState.assets,l=e._resources,c=[null,null,null,null,null,null,null],h=function(){return r.hasOwnProperty("type")?r.type:r.hasOwnProperty("rgbm")?r.rgbm?Ta:Ea:null};if(e.loaded&&n[0]===o[0])c[1]=l[1]||null,c[2]=l[2]||null,c[3]=l[3]||null,c[4]=l[4]||null,c[5]=l[5]||null,c[6]=l[6]||null;else if(n[0])if((i=n[0].resource).cubemap)for(s=0;s<6;++s)c[s+1]=new vl(this._device,{name:e.name+"_prelitCubemap"+(i.width>>s),cubemap:!0,type:h()||i.type,width:i.width>>s,height:i.height>>s,format:i.format,levels:[i._levels[s]],fixCubemapSeams:!0,addressU:Yt,addressV:Yt,mipmaps:0===s});else i.type=La,i.addressU=Yt,i.addressV=Yt,i.mipmaps=!1,c[1]=i;var p=n.slice(1);if(e.loaded&&this.cmpArrays(p,o.slice(1)))c[0]=l[0]||null;else if(-1===p.indexOf(null)){var d,u=p.map((function(e){return e.resource})),m=[];for(a=0;a<u[0]._levels.length;++a)m.push(u.map((function(e){return e._levels[a]})));var f=u[0].format,g=new vl(this._device,{name:e.name+"_faces",cubemap:!0,type:h()||u[0].type,width:u[0].width,height:u[0].height,format:f===ei?ti:f,mipmaps:null==(d=r.mipmaps)||d,levels:m,minFilter:r.hasOwnProperty("minFilter")?r.minFilter:u[0].minFilter,magFilter:r.hasOwnProperty("magFilter")?r.magFilter:u[0].magFilter,anisotropy:r.hasOwnProperty("anisotropy")?r.anisotropy:1,addressU:Yt,addressV:Yt,fixCubemapSeams:!!n[0]});c[0]=g}if(!this.cmpArrays(c,l))for(e.resources=c,e._handlerState.assetIds=t,e._handlerState.assets=n,s=0;s<l.length;++s)null!==l[s]&&-1===c.indexOf(l[s])&&l[s].destroy();for(s=0;s<o.length;++s)null!==o[s]&&-1===n.indexOf(o[s])&&o[s].unload()},t.cmpArrays=function(e,t){if(e.length!==t.length)return!1;for(var n=0;n<e.length;++n)if(e[n]!==t[n])return!1;return!0},t.resolveId=function(e){var t=parseInt(e,10);return t===e||t.toString()===e?t:e},t.loadAssets=function(e,t){e.hasOwnProperty("_handlerState")||(e._handlerState={assetIds:[null,null,null,null,null,null,null],assets:[null,null,null,null,null,null,null]});for(var n,i=this,a=i.getAssetIds(e),s=[null,null,null,null,null,null,null],r=e._handlerState.assetIds,o=e._handlerState.assets,l=i._registry,c=7,h=function(n,r){s[n]=r,0==--c&&(i.update(e,a,s),t(null,e.resources))},p=function(e,n,i){t(n)},d=function(e,t){t.loaded?h(e,t):(l.once("load:"+t.id,h.bind(i,e)),l.once("error:"+t.id,p.bind(i,e)),t.loading||l.load(t))},u=0;u<7;++u){var m=this.resolveId(a[u]);if(m)if(i.compareAssetIds(m,r[u]))h(u,o[u]);else if(parseInt(m,10)===m)(n=l.get(m))?d(u,n):setTimeout(function(e,t){var n=l.get(t);n?d(e,n):p(e,"failed to find dependent cubemap asset="+t)}.bind(null,u,m));else{var f="string"==typeof m?{url:m,filename:m}:m;n=new eS(e.name+"_part_"+u,"texture",f),l.add(n),l.once("load:"+n.id,h.bind(i,u)),l.once("error:"+n.id,p.bind(i,u)),l.load(n)}else h(u,null)}},e}(),wR=function(){function e(){this.handlerType="folder"}var t=e.prototype;return t.load=function(e,t){t(null,null)},t.open=function(e,t){return t},e}(),bR=function(){function e(e,t){this.type=t&&t.type||IA,this.em=1,this.textures=e,this.intensity=0,this._data=null,this.data=t}return q(e,[{key:"data",get:function(){return this._data},set:function(e){if(this._data=e,e&&(void 0!==this._data.intensity&&(this.intensity=this._data.intensity),this._data.info||(this._data.info={}),(!this._data.version||this._data.version<2)&&(this._data.info.maps=[{width:this._data.info.width,height:this._data.info.height}],this._data.chars)))for(var t in this._data.chars)this._data.chars[t].map=0}}]),e}();function xR(e){return e.version<3&&(e.version<2&&(e.info.maps=e.info.maps||[{width:e.info.width,height:e.info.height}]),e.chars=Object.keys(e.chars||{}).reduce((function(t,n){var i=e.chars[n],a=void 0!==i.letter?i.letter:Ue.fromCodePoint(n);return e.version<2&&(i.map=i.map||0),t[a]=i,t}),{}),e.version=3),e}var CR=function(){function e(e){this.handlerType="font",this._loader=e.loader,this.maxRetries=0}var t=e.prototype;return t.load=function(e,t,n){"string"==typeof e&&(e={load:e,original:e});var i=this;".json"===ce.getExtension(e.original)?Qd.get(e.load,{retry:this.maxRetries>0,maxRetries:this.maxRetries},(function(n,a){if(n)t("Error loading font resource: "+e.original+" ["+n+"]");else{var s=xR(a);i._loadTextures(e.load.replace(".json",".png"),s,(function(e,n){e?t(e):t(null,{data:s,textures:n})}))}})):(n&&n.data&&(n.data=xR(n.data)),this._loadTextures(e.load,n&&n.data,t))},t._loadTextures=function(e,t,n){for(var i=t.info.maps.length,a=0,s=null,r=new Array(i),o=this._loader,l=function(t){var l=function(e,o){if(!s){if(e)return s=e,void n(e);o.upload(),r[t]=o,++a===i&&n(null,r)}};0===t?o.load(e,"texture",l):o.load(e.replace(".png",t+".png"),"texture",l)},c=0;c<i;c++)l(c)},t.open=function(e,t,n){return t.textures?new bR(t.textures,t.data):new bR(t,null)},t.patch=function(e,t){var n=e.resource;!n.data&&e.data?n.data=e.data:!e.data&&n.data&&(e.data=n.data),e.data&&(e.data=xR(e.data))},e}(),SR=function(){function e(){}return e.setCompressedPRS=function(e,t,n){var i,a,s=n.singleVecs,r=t.___1;r||(i=n.tripleVecs,a=t.___2);var o=r?r[0]:i[a];e.setLocalPosition(s[o],s[o+1],s[o+2]),o=r?r[1]:i[a+1],e.setLocalEulerAngles(s[o],s[o+1],s[o+2]),o=r?r[2]:i[a+2],e.setLocalScale(s[o],s[o+1],s[o+2])},e.oneCharToKey=function(e,t){var n=e.charCodeAt(0)-t.fieldFirstCode;return t.fieldArray[n]},e.multCharToKey=function(e,t){for(var n=0,i=0;i<e.length;i++)n=n*t.fieldCodeBase+e.charCodeAt(i)-t.fieldFirstCode;return t.fieldArray[n]},e}(),ER=function(){function e(e,t){this._node=e,this._data=t}var t=e.prototype;return t.run=function(){var e=Object.prototype.toString.call(this._node);return"[object Object]"===e?this._handleMap():"[object Array]"===e?this._handleArray():this._result=this._node,this._result},t._handleMap=function(){this._result={},Object.keys(this._node).forEach(this._handleKey,this)},t._handleKey=function(t){var n=t,i=t.length;1===i?n=SR.oneCharToKey(t,this._data):2===i&&(n=SR.multCharToKey(t,this._data)),this._result[n]=new e(this._node[t],this._data).run()},t._handleArray=function(){this._result=[],this._node.forEach(this._handleArElt,this)},t._handleArElt=function(t){var n=new e(t,this._data).run();this._result.push(n)},e}(),TR=function(){function e(e,t){this._app=e,this._isTemplate=t}var t=e.prototype;return t.parse=function(e){var t={},n=null,i=e.compressedFormat;for(var a in i&&!e.entDecompressed&&(e.entDecompressed=!0,e.entities=new ER(e.entities,i).run()),e.entities){var s=e.entities[a],r=this._createEntity(s,i);t[a]=r,null===s.parent&&(n=r)}for(var o in e.entities)for(var l=t[o],c=e.entities[o].children,h=c.length,p=0;p<h;p++){var d=t[c[p]];d&&l.addChild(d)}return this._openComponentData(n,e.entities),n},t._createEntity=function(e,t){var n,i=new gS(e.name,this._app);if(i.setGuid(e.resource_id),this._setPosRotScale(i,e,t),i._enabled=null==(n=e.enabled)||n,this._isTemplate?i._template=!0:i._enabledInHierarchy=i._enabled,i.template=e.template,e.tags)for(var a=0;a<e.tags.length;a++)i.tags.add(e.tags[a]);return e.labels&&e.labels.forEach((function(e){i.addLabel(e)})),i},t._setPosRotScale=function(e,t,n){if(n)SR.setCompressedPRS(e,t,n);else{var i=t.position,a=t.rotation,s=t.scale;e.setLocalPosition(i[0],i[1],i[2]),e.setLocalEulerAngles(a[0],a[1],a[2]),e.setLocalScale(s[0],s[1],s[2])}},t._openComponentData=function(e,t){for(var n=this._app.systems.list,i=n.length,a=t[e.getGuid()],s=0;s<i;s++){var r=n[s],o=a.components[r.id];o&&r.addComponent(e,o)}i=a.children.length;for(var l=e._children,c=0;c<i;c++)l[c]&&(l[c]=this._openComponentData(l[c],t));return e},e}(),AR=function(){function e(){}return e.load=function(e,t,n){"string"==typeof e&&(e={load:e,original:e}),Qd.get(e.load,{retry:t>0,maxRetries:t},(function(t,i){if(t){var a="Error while loading scene JSON "+e.original;t.message?(a+=": "+t.message,t.stack&&(a+="\n"+t.stack)):a+=": "+t,n(a)}else n(t,i)}))},e}(),LR=function(){function e(e){this.handlerType="hierarchy",this._app=e,this.maxRetries=0}var t=e.prototype;return t.load=function(e,t){AR.load(e,this.maxRetries,t)},t.open=function(e,t){this._app.systems.script.preloading=!0;var n=new TR(this._app,!1).parse(t);return this._app.systems.script.preloading=!1,n},e}(),MR=function(){function e(e){this.handlerType="html",this.maxRetries=0}var t=e.prototype;return t.load=function(e,t){"string"==typeof e&&(e={load:e,original:e}),Qd.get(e.load,{retry:this.maxRetries>0,maxRetries:this.maxRetries},(function(n,i){n?t("Error loading html resource: "+e.original+" ["+n+"]"):t(null,i)}))},t.open=function(e,t){return t},t.patch=function(e,t){},e}(),PR=function(){function e(e){this.handlerType="json",this.maxRetries=0}var t=e.prototype;return t.load=function(e,t){"string"==typeof e&&(e={load:e,original:e});var n={retry:this.maxRetries>0,maxRetries:this.maxRetries};e.load.startsWith("blob:")&&(n.responseType=Zd.ResponseType.JSON),Qd.get(e.load,n,(function(n,i){n?t("Error loading JSON resource: "+e.original+" ["+n+"]"):t(null,i)}))},t.open=function(e,t){return t},t.patch=function(e,t){},e}(),OR=function(){function e(){this.removeInvalid=!0,this.valid=!0,this.enumValidators={occludeSpecular:this._createEnumValidator([Ym,qm,Km]),cull:this._createEnumValidator([An,Ln,Mn,Pn]),blendType:this._createEnumValidator([yu,_u,wu,bu,xu,Cu,Su,Eu,Tu,Au,Lu]),depthFunc:this._createEnumValidator([Bn,Nn,Un,zn,Vn,Hn,Gn,Wn]),shadingModel:this._createEnumValidator([Pm,Om])}}var t=e.prototype;return t.setInvalid=function(e,t){this.valid=!1,this.removeInvalid&&delete t[e]},t.validate=function(e){var t=Ow,n=Fw,i="path"===e.mappingFormat;for(var a in e){var s=t[a];if(s)if(s.startsWith("enum")){var r=s.split(":")[1];this.enumValidators[r]&&(this.enumValidators[r](e[a])||this.setInvalid(a,e))}else if("number"===s)"number"!=typeof e[a]&&this.setInvalid(a,e);else if("boolean"===s)"boolean"!=typeof e[a]&&this.setInvalid(a,e);else if("string"===s)"string"!=typeof e[a]&&this.setInvalid(a,e);else if("vec2"===s)e[a]instanceof Array&&2===e[a].length||this.setInvalid(a,e);else if("rgb"===s)e[a]instanceof Array&&3===e[a].length||this.setInvalid(a,e);else if("texture"===s)i?"string"!=typeof e[a]&&null!==e[a]&&(e[a]instanceof vl||this.setInvalid(a,e)):"number"!=typeof e[a]&&null!==e[a]&&(e[a]instanceof vl||this.setInvalid(a,e));else if("boundingbox"===s)e[a].center&&e[a].center instanceof Array&&3===e[a].center.length||this.setInvalid(a,e),e[a].halfExtents&&e[a].halfExtents instanceof Array&&3===e[a].halfExtents.length||this.setInvalid(a,e);else if("cubemap"===s)"number"!=typeof e[a]&&null!==e[a]&&void 0!==e[a]&&(e[a]instanceof vl&&e[a].cubemap||this.setInvalid(a,e));else if("chunks"===s)for(var o=Object.keys(e[a]),l=0;l<o.length;l++)"string"!=typeof e[a][o[l]]&&this.setInvalid(o[l],e[a]);else console.error("Unknown material type: "+s);else n[a]?delete e[a]:this.valid=!1}return e.validated=!0,this.valid},t._createEnumValidator=function(e){return function(t){return e.indexOf(t)>=0}},e}(),IR=function(){function e(){this._validator=null}var t=e.prototype;return t.parse=function(e){var t=this.migrate(e),n=this._validate(t),i=new zw;return this.initialize(i,n),i},t.initialize=function(e,t){for(var n in t.validated||(t=this._validate(t)),t.chunks&&(e.chunks=K({},t.chunks)),t){var i=Ow[n],a=t[n];if("vec2"===i)e[n]=new ft(a[0],a[1]);else if("rgb"===i)e[n]=new st(a[0],a[1],a[2]);else if("texture"===i)a instanceof vl?e[n]=a:e[n]instanceof vl&&"number"==typeof a&&a>0||(e[n]=null);else if("cubemap"===i)a instanceof vl?e[n]=a:e[n]instanceof vl&&"number"==typeof a&&a>0||(e[n]=null),"cubeMap"!==n||a||(e.prefilteredCubemaps=null);else if("boundingbox"===i){var s=new pt(a.center[0],a.center[1],a.center[2]),r=new pt(a.halfExtents[0],a.halfExtents[1],a.halfExtents[2]);e[n]=new Ot(s,r)}else e[n]=t[n]}e.update()},t.migrate=function(e){var t;void 0===e.shadingModel&&("blinn"===e.shader?e.shadingModel=Om:e.shadingModel=Pm),e.shader&&delete e.shader,e.mapping_format&&(e.mappingFormat=e.mapping_format,delete e.mapping_format);var n=[["bumpMapFactor","bumpiness"],["aoUvSet","aoMapUv"],["aoMapVertexColor","aoVertexColor"],["diffuseMapVertexColor","diffuseVertexColor"],["emissiveMapVertexColor","emissiveVertexColor"],["specularMapVertexColor","specularVertexColor"],["metalnessMapVertexColor","metalnessVertexColor"],["opacityMapVertexColor","opacityVertexColor"],["glossMapVertexColor","glossVertexColor"],["lightMapVertexColor","lightVertexColor"],["diffuseMapTint","diffuseTint"],["specularMapTint","specularTint"],["emissiveMapTint","emissiveTint"],["metalnessMapTint","metalnessTint"],["clearCoatGlossiness","clearCoatGloss"]];for(t=0;t<n.length;t++){var i=n[t][0],a=n[t][1];void 0!==e[i]&&(void 0===e[a]&&(e[a]=e[i]),delete e[i])}var s=["fresnelFactor","shadowSampleType"];for(t=0;t<s.length;t++){var r=s[t];e.hasOwnProperty(r)&&delete e[r]}return e},t._validate=function(e){return e.validated||(this._validator||(this._validator=new OR),this._validator.validate(e)),e},e}(),RR={aoMap:"white",diffuseMap:"gray",specularMap:"gray",specularityFactorMap:"white",metalnessMap:"black",glossMap:"gray",sheenMap:"black",sheenGlossinessMap:"gray",clearCoatMap:"black",clearCoatGlossMap:"gray",clearCoatNormalMap:"normal",refractionMap:"white",emissiveMap:"gray",normalMap:"normal",heightMap:"gray",opacityMap:"gray",sphereMap:"gray",lightMap:"white"},DR=function(){function e(e){this.handlerType="material",this._assets=e.assets,this._device=e.graphicsDevice,this._placeholderTextures=null,this._parser=new IR,this.maxRetries=0}var t=e.prototype;return t.load=function(e,t){"string"==typeof e&&(e={load:e,original:e}),Qd.get(e.load,{retry:this.maxRetries>0,maxRetries:this.maxRetries},(function(n,i){n?t&&t("Error loading material: "+e.original+" ["+n+"]"):t&&(i._engine=!0,t(null,i))}))},t.open=function(e,t){var n=this._parser.parse(t);return t._engine&&(n._data=t,delete t._engine),n},t._createPlaceholders=function(){this._placeholderTextures={};var e={white:[255,255,255,255],gray:[128,128,128,255],black:[0,0,0,255],normal:[128,128,255,255]};for(var t in e)if(e.hasOwnProperty(t)){this._placeholderTextures[t]=new vl(this._device,{width:2,height:2,format:ti,name:"material_placeholder"});for(var n=this._placeholderTextures[t].lock(),i=0;i<4;i++)for(var a=0;a<4;a++)n[4*i+a]=e[t][a];this._placeholderTextures[t].unlock()}},t.patch=function(e,t){e.resource._data&&(e._data=e.resource._data,delete e.resource._data),e.data.name=e.name,e.resource.name=e.name,this._bindAndAssignAssets(e,t),e.off("unload",this._onAssetUnload,this),e.on("unload",this._onAssetUnload,this)},t._onAssetUnload=function(e){delete e.data.parameters,delete e.data.chunks,delete e.data.name},t._assignTexture=function(e,t,n){t.resource[e]=n},t._getPlaceholderTexture=function(e){this._placeholderTextures||this._createPlaceholders();var t=RR[e];return this._placeholderTextures[t]},t._assignPlaceholderTexture=function(e,t){t.resource[e]=this._getPlaceholderTexture(e)},t._onTextureLoad=function(e,t,n){this._assignTexture(e,t,n.resource),t.resource.update()},t._onTextureAdd=function(e,t,n){this._assets.load(n)},t._onTextureRemoveOrUnload=function(e,t,n){var i=t.resource;i&&t.resource[e]===n.resource&&(this._assignPlaceholderTexture(e,t),i.update())},t._assignCubemap=function(e,t,n){if(t.resource[e]=n[0],"cubeMap"===e){var i=n.slice(1);i.every((function(e){return e}))?t.resource.prefilteredCubemaps=i:i[0]&&(t.resource.envAtlas=i[0])}},t._onCubemapLoad=function(e,t,n){this._assignCubemap(e,t,n.resources),this._parser.initialize(t.resource,t.data)},t._onCubemapAdd=function(e,t,n){t.data.shadingModel===Pm&&(t.loadFaces=!0),this._assets.load(n)},t._onCubemapRemoveOrUnload=function(e,t,n){var i=t.resource;t.data.prefilteredCubeMap128===n.resources[1]&&(this._assignCubemap(e,t,[null,null,null,null,null,null,null]),i.update())},t._bindAndAssignAssets=function(e,t){var n,i,a,s=this._parser.migrate(e.data),r=e.resource,o="path"===s.mappingFormat,l=Iw;for(n=0;n<l.length;n++){i=l[n],a=r._assetReferences[i];var c=s[i],h=r[i],p=h===this._getPlaceholderTexture(i),d=s.validated;!c||h&&d&&!p?a&&(o?a.url=null:a.id=null):(a||(a=new vM(i,e,t,{load:this._onTextureLoad,add:this._onTextureAdd,remove:this._onTextureRemoveOrUnload,unload:this._onTextureRemoveOrUnload},this),r._assetReferences[i]=a),o?a.url=e.getAbsoluteUrl(c):a.id=c,a.asset&&(a.asset.resource?this._assignTexture(i,e,a.asset.resource):this._assignPlaceholderTexture(i,e),t.load(a.asset)))}var u=Dw;for(n=0;n<u.length;n++)i=u[n],a=r._assetReferences[i],s[i]&&!e.data.prefilteredCubeMap128&&(a||(a=new vM(i,e,t,{load:this._onCubemapLoad,add:this._onCubemapAdd,remove:this._onCubemapRemoveOrUnload,unload:this._onCubemapRemoveOrUnload},this),r._assetReferences[i]=a),o?a.url=s[i]:a.id=s[i],a.asset&&(a.asset.loaded&&this._assignCubemap(i,e,a.asset.resources),t.load(a.asset)));this._parser.initialize(r,s)},e}(),kR=function(){function e(e){this._device=e.device,this._defaultMaterial=e.defaultMaterial,this._assets=e.assets}return e.prototype.parse=function(e,t,n){var i,a=this;rR.parse("filename.glb","",e,this._device,this._assets,null!=(i=null==n?void 0:n.options)?i:{},(function(e,n){if(e)t(e);else{var i=mR.createModel(n,a._defaultMaterial);n.destroy(),t(null,i)}}))},e}(),FR=function(){this.index=0,this.boneIndices=[0,0,0,0]},BR=function(){function e(){this.partition=0,this.vertexStart=0,this.vertexCount=0,this.indexStart=0,this.indexCount=0,this.boneIndices=[],this.vertices=[],this.indices=[],this.indexMap={},this.originalMesh=null}var t=e.prototype;return t.addVertex=function(e,t,n){var i=-1;if(void 0!==this.indexMap[t])i=this.indexMap[t],this.indices.push(i);else{for(var a=0;a<4;a++)if(0!==n.blendWeight.data[4*t+a]){var s=n.blendIndices.data[4*e.index+a];e.boneIndices[a]=this.getBoneRemap(s)}i=this.vertices.length,this.indices.push(i),this.vertices.push(e),this.indexMap[t]=i}},t.addPrimitive=function(e,t,n,i){for(var a=[],s=0,r=e.length,o=0;o<r;o++)for(var l=e[o].index,c=0;c<4;c++)if(n.blendWeight.data[4*l+c]>0){for(var h=n.blendIndices.data[4*l+c],p=!0,d=0;d<s;d++)if(a[d]===h){p=!1;break}p&&(a[s]=h,s+=-1===this.getBoneRemap(h)?1:0)}if(this.boneIndices.length+s>i)return!1;for(var u=0;u<s;u++)this.boneIndices.push(a[u]);for(var m=0;m<r;m++)this.addVertex(e[m],t[m],n);return!0},t.getBoneRemap=function(e){for(var t=0;t<this.boneIndices.length;t++)if(this.boneIndices[t]===e)return t;return-1},e}();function NR(e){for(var t=e.vertices,n=e.skins,i=e.meshes,a=e.meshInstances,s=0;s<i.length;s++)i[s].vertices=t[i[s].vertices],void 0!==i[s].skin&&(i[s].skin=n[i[s].skin]);for(var r=0;r<a.length;r++)a[r].mesh=i[a[r].mesh]}function UR(e){for(var t=e.vertices,n=e.skins,i=e.meshes,a=e.meshInstances,s=0;s<i.length;s++)i[s].vertices=t.indexOf(i[s].vertices),void 0!==i[s].skin&&(i[s].skin=n.indexOf(i[s].skin));for(var r=0;r<a.length;r++)a[r].mesh=i.indexOf(a[r].mesh)}function zR(e,t,n){var i,a,s,r;NR(e);var o,l=e.vertices,c=e.skins,h=e.meshes,p=e.meshInstances,d=function(e){var t=new FR;return t.index=e,t};for(i=c.length-1;i>=0;i--)if(c[i].boneNames.length>n){var u=c.splice(i,1)[0],m=[];for(a=0;a<h.length;a++)h[a].skin===u&&m.push(h[a]);for(a=0;a<m.length;a++)-1!==(r=h.indexOf(m[a]))&&h.splice(r,1);if(0===m.length)throw new Error("partitionSkin: There should be at least one mesh that references a skin");var f=m[0].vertices;for(a=1;a<m.length;a++)if(m[a].vertices!==f)throw new Error("partitionSkin: All meshes that share a skin should also share the same vertex buffer");var g=void 0,v=[],y=[],_=[],w=0;for(a=0;a<m.length;a++){for(var b=(o=m[a]).indices,x=o.base;x<o.base+o.count;){r=b[x++],y[0]=d(r),_[0]=r,r=b[x++],y[1]=d(r),_[1]=r,r=b[x++],y[2]=d(r),_[2]=r;for(var C=!1,S=w;S<v.length;S++)if((g=v[S]).addPrimitive(y,_,f,n)){C=!0;break}C||((g=new BR).originalMesh=o,g.addPrimitive(y,_,f,n),v.push(g))}w=v.length}var E=[],T=[];for(a=0;a<v.length;a++)if((g=v[a]).vertices.length&&g.indices.length){var A=E.length,L=g.vertices.length,M=T.length,P=g.indices.length;g.partition=a,g.vertexStart=A,g.vertexCount=L,g.indexStart=M,g.indexCount=P;var O=void 0,I=void 0;for(O=0,I=A;O<L;)E[I++]=g.vertices[O++];for(O=0,I=M;O<P;)T[I++]=g.indices[O++]+A}var R=[];for(a=0;a<v.length;a++){g=v[a];var D=[],k=[];for(s=0;s<g.boneIndices.length;s++)D.push(u.inverseBindMatrices[g.boneIndices[s]]),k.push(u.boneNames[g.boneIndices[s]]);var F={inverseBindMatrices:D,boneNames:k};R.push(F),c.push(F)}var B=void 0,N=void 0,U=void 0,z=void 0,V={};for(N in f)V[N]={components:f[N].components,data:[],type:f[N].type};for(N in f)if("blendIndices"===N){var H=V[N].data;for(a=0;a<E.length;a++){var G=E[a].boneIndices;H.push(G[0],G[1],G[2],G[3])}}else for(U=(B=f[N]).data,z=B.components,a=0;a<E.length;a++)for(r=E[a].index,s=0;s<z;s++)V[N].data.push(U[r*z+s]);for(l[l.indexOf(f)]=V,a=0;a<v.length;a++)for(g=v[a],o={aabb:{min:[0,0,0],max:[0,0,0]},vertices:V,skin:R[a],indices:T.splice(0,g.indexCount),type:"triangles",base:0,count:g.indexCount},h.push(o),s=p.length-1;s>=0;s--)p[s].mesh===g.originalMesh&&(p.push({mesh:o,node:p[s].node}),t&&t.push({material:t[s].material,path:t[s].path}));for(a=0;a<v.length;a++)for(g=v[a],s=p.length-1;s>=0;s--)p[s].mesh===g.originalMesh&&(p.splice(s,1),t&&t.splice(s,1))}UR(e)}var VR={points:Mi,lines:Pi,lineloop:Oi,linestrip:Ii,triangles:Ri,trianglestrip:Di,trianglefan:ki},HR={int8:Ka,uint8:Za,int16:Qa,uint16:Ja,int32:$a,uint32:es,float32:ts},GR=function(){function e(e){this._device=e.device,this._defaultMaterial=e.defaultMaterial}var t=e.prototype;return t.parse=function(e,t){var n=e.model;if(n)if(n.version<=1)t("JsonModelParser#parse: Trying to parse unsupported model format.");else{var i=this._parseNodes(e),a=this._parseSkins(e,i),s=this._parseVertexBuffers(e),r=this._parseIndexBuffers(e,s),o=this._parseMorphs(e,i,s),l=this._parseMeshes(e,a.skins,o.morphs,s,r.buffer,r.data),c=this._parseMeshInstances(e,i,l,a.skins,a.instances,o.morphs,o.instances),h=new Mb;h.graph=i[0],h.meshInstances=c,h.skinInstances=a.instances,h.morphInstances=o.instances,h.getGraph().syncHierarchy(),t(null,h)}else t(null,null)},t._parseNodes=function(e){var t,n=e.model,i=[];for(t=0;t<n.nodes.length;t++){var a=n.nodes[t],s=new Cv(a.name);s.setLocalPosition(a.position[0],a.position[1],a.position[2]),s.setLocalEulerAngles(a.rotation[0],a.rotation[1],a.rotation[2]),s.setLocalScale(a.scale[0],a.scale[1],a.scale[2]),s.scaleCompensation=!!a.scaleCompensation,i.push(s)}for(t=1;t<n.parents.length;t++)i[n.parents[t]].addChild(i[t]);return i},t._parseSkins=function(e,t){var n,i,a=e.model,s=[],r=[];for(!this._device.supportsBoneTextures&&a.skins.length>0&&zR(a,null,this._device.getBoneLimit()),n=0;n<a.skins.length;n++){var o=a.skins[n],l=[];for(i=0;i<o.inverseBindMatrices.length;i++){var c=o.inverseBindMatrices[i];l[i]=(new St).set(c)}var h=new jx(this._device,l,o.boneNames);s.push(h);var p=new rv(h),d=[];for(i=0;i<h.boneNames.length;i++){var u=h.boneNames[i],m=t[0].findByName(u);d.push(m)}p.bones=d,r.push(p)}return{skins:s,instances:r}},t._getMorphVertexCount=function(e,t,n){for(var i=0;i<e.meshes.length;i++){var a=e.meshes[i];if(a.morph===t)return n[a.vertices].numVertices}},t._parseMorphs=function(e,t,n){var i,a,s,r,o,l,c=e.model,h=[],p=[];if(c.morphs){var d=function(e,t,n){for(var i=new Float32Array(3*n),a=0;a<t.length;a++){var s=3*t[a];i[s]=e[3*a],i[s+1]=e[3*a+1],i[s+2]=e[3*a+2]}return i};for(i=0;i<c.morphs.length;i++){for(r=c.morphs[i].targets,l=[],s=this._getMorphVertexCount(c,i,n),a=0;a<r.length;a++){var u=r[a].aabb,m=u.min,f=u.max,g=new Ot(new pt(.5*(f[0]+m[0]),.5*(f[1]+m[1]),.5*(f[2]+m[2])),new pt(.5*(f[0]-m[0]),.5*(f[1]-m[1]),.5*(f[2]-m[2]))),v=r[a].indices,y=r[a].deltaPositions,_=r[a].deltaNormals;v&&(y=d(y,v,s),_=d(_,v,s)),o=new Ob({deltaPositions:y,deltaNormals:_,name:r[a].name,aabb:g}),l.push(o)}var w=new Pb(l,this._device);h.push(w);var b=new Lb(w);p.push(b)}}return{morphs:h,instances:p}},t._parseVertexBuffers=function(e){for(var t=e.model,n=[],i={position:Fi,normal:Bi,tangent:Ni,blendWeight:Ui,blendIndices:zi,color:Vi,texCoord0:Gi,texCoord1:Wi,texCoord2:ji,texCoord3:Xi,texCoord4:Yi,texCoord5:qi,texCoord6:Ki,texCoord7:Zi},a=0;a<t.vertices.length;a++){var s=t.vertices[a],r=[];for(var o in s){var l=s[o];r.push({semantic:i[o],components:l.components,type:HR[l.type],normalize:i[o]===Vi})}for(var c=new Fr(this._device,r),h=s.position.data.length/s.position.components,p=new Mr(this._device,c,h),d=new Cc(p),u=0;u<h;u++){for(var m in s){var f=s[m];switch(f.components){case 1:d.element[i[m]].set(f.data[u]);break;case 2:d.element[i[m]].set(f.data[2*u],1-f.data[2*u+1]);break;case 3:d.element[i[m]].set(f.data[3*u],f.data[3*u+1],f.data[3*u+2]);break;case 4:d.element[i[m]].set(f.data[4*u],f.data[4*u+1],f.data[4*u+2],f.data[4*u+3])}}d.next()}d.end(),n.push(p)}return n},t._parseIndexBuffers=function(e,t){var n,i=e.model,a=null,s=null,r=0;for(n=0;n<i.meshes.length;n++){var o=i.meshes[n];void 0!==o.indices&&(r+=o.indices.length)}var l=0;for(n=0;n<t.length;n++)l=Math.max(l,t[n].numVertices);return r>0&&(l>65535&&this._device.extUintElement?(a=new lc(this._device,Yn,r),s=new Uint32Array(a.lock())):(a=new lc(this._device,Xn,r),s=new Uint16Array(a.lock()))),{buffer:a,data:s}},t._parseMeshes=function(e,t,n,i,a,s){for(var r=e.model,o=[],l=0,c=0;c<r.meshes.length;c++){var h=r.meshes[c],p=h.aabb,d=p.min,u=p.max,m=new Ot(new pt(.5*(u[0]+d[0]),.5*(u[1]+d[1]),.5*(u[2]+d[2])),new pt(.5*(u[0]-d[0]),.5*(u[1]-d[1]),.5*(u[2]-d[2]))),f=void 0!==h.indices,g=new og(this._device);g.vertexBuffer=i[h.vertices],g.indexBuffer[0]=f?a:null,g.primitive[0].type=VR[h.type],g.primitive[0].base=f?h.base+l:h.base,g.primitive[0].count=h.count,g.primitive[0].indexed=f,g.skin=void 0!==h.skin?t[h.skin]:null,g.morph=void 0!==h.morph?n[h.morph]:null,g.aabb=m,f&&(s.set(h.indices,l),l+=h.indices.length),o.push(g)}return null!==a&&a.unlock(),o},t._parseMeshInstances=function(e,t,n,i,a,s,r){var o,l=e.model,c=[];for(o=0;o<l.meshInstances.length;o++){var h=l.meshInstances[o],p=t[h.node],d=n[h.mesh],u=new Dv(d,this._defaultMaterial,p);if(d.skin){var m=i.indexOf(d.skin);u.skinInstance=a[m]}if(d.morph){var f=s.indexOf(d.morph);u.morphInstance=r[f]}c.push(u)}return c},e}(),WR=function(){function e(e){this.handlerType="model",this._parsers=[],this.device=e.graphicsDevice,this.assets=e.assets,this.defaultMaterial=Qg(this.device),this.maxRetries=0,this.addParser(new GR(this),(function(e,t){return".json"===ce.getExtension(e)})),this.addParser(new kR(this),(function(e,t){return".glb"===ce.getExtension(e)}))}var t=e.prototype;return t.load=function(e,t,n){var i=this;"string"==typeof e&&(e={load:e,original:e});var a={retry:this.maxRetries>0,maxRetries:this.maxRetries};(e.load.startsWith("blob:")||e.load.startsWith("data:"))&&(".glb"===ce.getExtension(e.original).toLowerCase()?a.responseType=Zd.ResponseType.ARRAY_BUFFER:a.responseType=Zd.ResponseType.JSON),Qd.get(e.load,a,(function(a,s){if(t)if(a)t("Error loading model: "+e.original+" ["+a+"]");else{for(var r=0;r<i._parsers.length;r++){var o=i._parsers[r];if(o.decider(e.original,s))return void o.parser.parse(s,(function(e,n){e?t(e):t(null,n)}),n)}t("No parsers found")}}))},t.open=function(e,t){return t},t.patch=function(e,t){if(e.resource){var n=e.data,i=this;e.resource.meshInstances.forEach((function(a,s){if(n.mapping){var r=function e(n){n.resource?a.material=n.resource:(n.once("load",e),t.load(n)),n.once("remove",(function(e){a.material===e.resource&&(a.material=i.defaultMaterial)}))};if(!n.mapping[s])return void(a.material=i.defaultMaterial);var o,l=n.mapping[s].material,c=n.mapping[s].path;if(void 0!==l)l?(o=t.get(l))?r(o):t.once("add:"+l,r):a.material=i.defaultMaterial;else if(c){var h=e.getAbsoluteUrl(n.mapping[s].path);(o=t.getByUrl(h))?r(o):t.once("add:url:"+h,r)}}}))}},t.addParser=function(e,t){this._parsers.push({parser:e,decider:t})},e}(),jR=function(){function e(e){this.handlerType="scene",this._app=e,this.maxRetries=0}var t=e.prototype;return t.load=function(e,t){AR.load(e,this.maxRetries,t)},t.open=function(e,t){this._app.systems.script.preloading=!0;var n=new TR(this._app,!1).parse(t),i=this._app.scene;return i.root=n,this._app.applySceneSettings(t.settings),this._app.systems.script.preloading=!1,i},t.patch=function(e,t){},e}(),XR=function(){function e(e){this.handlerType="script",this._app=e,this._scripts={},this._cache={}}var t=e.prototype;return t.clearCache=function(){for(var e in this._cache){var t=this._cache[e],n=t.parentNode;n&&n.removeChild(t)}this._cache={}},t.load=function(e,t){var n=this;"string"==typeof e&&(e={load:e,original:e});var i=this;_C.app=this._app,this._loadScript(e.load,(function(e,a,s){if(e)t(e);else if(_C.legacy){var r=null;gC._types.length&&(r=gC._types.pop()),r?n._scripts[a]=r:r=null,t(null,r,s)}else{for(var o={},l=0;l<gC._types.length;l++)o[gC._types[l].name]=gC._types[l];gC._types.length=0,t(null,o,s),delete i._loader._cache[pS.makeKey(a,"script")]}}))},t.open=function(e,t){return t},t.patch=function(e,t){},t._loadScript=function(e,t){var n=document.head,i=document.createElement("script");this._cache[e]=i,i.async=!1,i.addEventListener("error",(function(e){t("Script: "+e.target.src+" failed to load")}),!1);var a=!1;i.onload=i.onreadystatechange=function(){a||this.readyState&&"loaded"!==this.readyState&&"complete"!==this.readyState||(a=!0,t(null,e,i))},i.src=e,n.appendChild(i)},e}(),YR=function(){function e(e){this.handlerType="shader",this.maxRetries=0}var t=e.prototype;return t.load=function(e,t){"string"==typeof e&&(e={load:e,original:e}),Qd.get(e.load,{retry:this.maxRetries>0,maxRetries:this.maxRetries},(function(n,i){n?t("Error loading shader resource: "+e.original+" ["+n+"]"):t(null,i)}))},t.open=function(e,t){return t},t.patch=function(e,t){},e}();function qR(e){var t=this;t.resource&&(t.resource.atlas=e.resource)}function KR(e){this.registry.load(e)}var ZR=function(){function e(e){this.handlerType="sprite",this._assets=e.assets,this._device=e.graphicsDevice,this.maxRetries=0}var t=e.prototype;return t.load=function(e,t){"string"==typeof e&&(e={load:e,original:e}),".json"===ce.getExtension(e.original)&&Qd.get(e.load,{retry:this.maxRetries>0,maxRetries:this.maxRetries},(function(e,n){e?t(e):t(null,n)}))},t.open=function(e,t){var n=new qx(this._device);return e&&(n.__data=t),n},t.patch=function(e,t){var n=e.resource;if(n.__data&&(e.data.pixelsPerUnit=n.__data.pixelsPerUnit,e.data.renderMode=n.__data.renderMode,e.data.frameKeys=n.__data.frameKeys,n.__data.textureAtlasAsset)){var i=t.getByUrl(n.__data.textureAtlasAsset);i?e.data.textureAtlasAsset=i.id:console.warn("Could not find textureatlas with url: "+n.__data.textureAtlasAsset)}n.startUpdate(),n.renderMode=e.data.renderMode,n.pixelsPerUnit=e.data.pixelsPerUnit,n.frameKeys=e.data.frameKeys,this._updateAtlas(e),n.endUpdate(),e.off("change",this._onAssetChange,this),e.on("change",this._onAssetChange,this)},t._updateAtlas=function(e){var t=e.resource;if(e.data.textureAtlasAsset){this._assets.off("load:"+e.data.textureAtlasAsset,qR,e),this._assets.on("load:"+e.data.textureAtlasAsset,qR,e);var n=this._assets.get(e.data.textureAtlasAsset);n&&n.resource?t.atlas=n.resource:n?this._assets.load(n):(this._assets.off("add:"+e.data.textureAtlasAsset,KR,e),this._assets.on("add:"+e.data.textureAtlasAsset,KR,e))}else t.atlas=null},t._onAssetChange=function(e,t,n,i){"data"===t&&n&&n.textureAtlasAsset&&i&&n.textureAtlasAsset!==i.textureAtlasAsset&&(this._assets.off("load:"+i.textureAtlasAsset,qR,e),this._assets.off("add:"+i.textureAtlasAsset,KR,e))},e}(),QR=function(){function e(e,t){this._app=void 0,this._data=void 0,this._templateRoot=null,this._app=e,this._data=t}var t=e.prototype;return t.instantiate=function(){return this._templateRoot||this._parseTemplate(),this._templateRoot.clone()},t._parseTemplate=function(){var e=new TR(this._app,!0);this._templateRoot=e.parse(this._data)},e}(),JR=function(){function e(e){this.handlerType="template",this._app=e,this.maxRetries=0}var t=e.prototype;return t.load=function(e,t){"string"==typeof e&&(e={load:e,original:e});var n={retry:this.maxRetries>0,maxRetries:this.maxRetries};Qd.get(e.load,n,(function(n,i){n?t("Error requesting template: "+e.original):t(n,i)}))},t.open=function(e,t){return new QR(this._app,t)},e}(),$R=function(){function e(e){this.handlerType="text",this.maxRetries=0}var t=e.prototype;return t.load=function(e,t){"string"==typeof e&&(e={load:e,original:e}),Qd.get(e.load,{retry:this.maxRetries>0,maxRetries:this.maxRetries},(function(n,i){n?t("Error loading text resource: "+e.original+" ["+n+"]"):t(null,i)}))},t.open=function(e,t){return t},t.patch=function(e,t){},e}(),eD={repeat:Xt,clamp:Yt,mirror:qt},tD={nearest:On,linear:In,nearest_mip_nearest:Rn,linear_mip_nearest:kn,nearest_mip_linear:Dn,linear_mip_linear:Fn},nD=/^data\.frames\.(\d+)$/,iD=function(){function e(e){this.handlerType="textureatlas",this._loader=e.loader,this.maxRetries=0}var t=e.prototype;return t.load=function(e,t){"string"==typeof e&&(e={load:e,original:e});var n=this,i=this._loader.getHandler("texture");".json"===ce.getExtension(e.original)?Qd.get(e.load,{retry:this.maxRetries>0,maxRetries:this.maxRetries},(function(i,a){if(i)t(i);else{var s=e.original.replace(".json",".png");n._loader.load(s,"texture",(function(e,n){e?t(e):t(null,{data:a,texture:n})}))}})):i.load(e,t)},t.open=function(e,t){var n=new Kx;if(t.texture&&t.data)n.texture=t.texture,n.__data=t.data;else{var i=this._loader.getHandler("texture").open(e,t);if(!i)return null;n.texture=i}return n},t.patch=function(e,t){if(e.resource){e.resource.__data&&(void 0!==e.resource.__data.minfilter&&(e.data.minfilter=e.resource.__data.minfilter),void 0!==e.resource.__data.magfilter&&(e.data.magfilter=e.resource.__data.magfilter),void 0!==e.resource.__data.addressu&&(e.data.addressu=e.resource.__data.addressu),void 0!==e.resource.__data.addressv&&(e.data.addressv=e.resource.__data.addressv),void 0!==e.resource.__data.mipmaps&&(e.data.mipmaps=e.resource.__data.mipmaps),void 0!==e.resource.__data.anisotropy&&(e.data.anisotropy=e.resource.__data.anisotropy),void 0!==e.resource.__data.rgbm&&(e.data.rgbm=!!e.resource.__data.rgbm),e.data.frames=e.resource.__data.frames,delete e.resource.__data);var n=e.resource.texture;if(n&&(n.name=e.name,e.data.hasOwnProperty("minfilter")&&n.minFilter!==tD[e.data.minfilter]&&(n.minFilter=tD[e.data.minfilter]),e.data.hasOwnProperty("magfilter")&&n.magFilter!==tD[e.data.magfilter]&&(n.magFilter=tD[e.data.magfilter]),e.data.hasOwnProperty("addressu")&&n.addressU!==eD[e.data.addressu]&&(n.addressU=eD[e.data.addressu]),e.data.hasOwnProperty("addressv")&&n.addressV!==eD[e.data.addressv]&&(n.addressV=eD[e.data.addressv]),e.data.hasOwnProperty("mipmaps")&&n.mipmaps!==e.data.mipmaps&&(n.mipmaps=e.data.mipmaps),e.data.hasOwnProperty("anisotropy")&&n.anisotropy!==e.data.anisotropy&&(n.anisotropy=e.data.anisotropy),e.data.hasOwnProperty("rgbm"))){var i=e.data.rgbm?Ta:Ea;n.type!==i&&(n.type=i)}e.resource.texture=n;var a={};for(var s in e.data.frames){var r=e.data.frames[s];a[s]={rect:new vt(r.rect),pivot:new ft(r.pivot),border:new vt(r.border)}}e.resource.frames=a,e.off("change",this._onAssetChange,this),e.on("change",this._onAssetChange,this)}},t._onAssetChange=function(e,t,n){var i;if("data"===t||"data.frames"===t){var a={};for(var s in n.frames)i=n.frames[s],a[s]={rect:new vt(i.rect),pivot:new ft(i.pivot),border:new vt(i.border)};e.resource.frames=a}else{var r=t.match(nD);if(r){var o=r[1];n?(e.resource.frames[o]?((i=e.resource.frames[o]).rect.set(n.rect[0],n.rect[1],n.rect[2],n.rect[3]),i.pivot.set(n.pivot[0],n.pivot[1]),i.border.set(n.border[0],n.border[1],n.border[2],n.border[3])):e.resource.frames[o]={rect:new vt(n.rect),pivot:new ft(n.pivot),border:new vt(n.border)},e.resource.fire("set:frame",o,e.resource.frames[o])):e.resource.frames[o]&&(delete e.resource.frames[o],e.resource.fire("remove:frame",o))}}},e}();function aD(){var e,t,n,i={cTFETC1:0,cTFETC2:1,cTFBC1:2,cTFBC3:3,cTFPVRTC1_4_RGB:8,cTFPVRTC1_4_RGBA:9,cTFASTC_4x4:10,cTFATC_RGB:11,cTFATC_RGBA_INTERPOLATED_ALPHA:12,cTFRGBA32:13,cTFRGB565:14,cTFRGBA4444:16},a={astc:i.cTFASTC_4x4,dxt:i.cTFBC1,etc1:i.cTFETC1,etc2:i.cTFETC1,pvr:i.cTFPVRTC1_4_RGB,atc:i.cTFATC_RGB,none:i.cTFRGB565},s={astc:i.cTFASTC_4x4,dxt:i.cTFBC3,etc1:i.cTFRGBA4444,etc2:i.cTFETC2,pvr:i.cTFPVRTC1_4_RGBA,atc:i.cTFATC_RGBA_INTERPOLATED_ALPHA,none:i.cTFRGBA4444},r={ETC1:21,ETC2_RGB:22,ETC2_RGBA:23,DXT1:8,DXT5:10,PVRTC_4BPP_RGB_1:26,PVRTC_4BPP_RGBA_1:27,ASTC_4x4:28,ATC_RGB:29,ATC_RGBA:30,R8_G8_B8_A8:7,R5_G6_B5:3,R4_G4_B4_A4:5},o=function(e,t){switch(e){case i.cTFETC1:return t.formats.etc1?r.ETC1:r.ETC2_RGB;case i.cTFETC2:return r.ETC2_RGBA;case i.cTFBC1:return r.DXT1;case i.cTFBC3:return r.DXT5;case i.cTFPVRTC1_4_RGB:return r.PVRTC_4BPP_RGB_1;case i.cTFPVRTC1_4_RGBA:return r.PVRTC_4BPP_RGBA_1;case i.cTFASTC_4x4:return r.ASTC_4x4;case i.cTFATC_RGB:return r.ATC_RGB;case i.cTFATC_RGBA_INTERPOLATED_ALPHA:return r.ATC_RGBA;case i.cTFRGBA32:return r.R8_G8_B8_A8;case i.cTFRGB565:return r.R5_G6_B5;case i.cTFRGBA4444:return r.R4_G4_B4_A4}},l=function(e){for(var t=function(e,t){var n=e*(2/255)-1,i=t*(2/255)-1,a=Math.sqrt(1-Math.min(1,n*n+i*i));return Math.max(0,Math.min(255,Math.floor(.5*(a+1)*255)))},n=0;n<e.length;n+=4){var i=e[n+3],a=e[n+1];e[n+0]=i,e[n+2]=t(i,a),e[n+3]=255}return e},c=function(e){for(var t=new Uint16Array(e.length/4),n=0;n<e.length;n+=4){var i=e[n+0],a=e[n+1],s=e[n+2];t[n/4]=(248&i)<<8|(252&a)<<3|s>>3}return t},h=function(e,t){return 0==(e&e-1)&&0==(t&t-1)},p=function(){return"undefined"!=typeof performance?performance.now():0},d=function(e,i,a){if(a){if(e.formats.astc)return"astc"}else if(i){if(e.formats.etc2)return"etc2"}else if(e.formats.etc1||e.formats.etc2)return"etc1";var s=function(t){for(var n=0;n<t.length;++n){var i=t[n];if(e.formats[i])return i}return"none"};return s(i?n:t)},u=function(e,t,n,a){switch(n){case i.cTFETC1:case i.cTFETC2:return!0;case i.cTFBC1:case i.cTFBC3:return 0==(3&e)&&0==(3&t);case i.cTFPVRTC1_4_RGB:case i.cTFPVRTC1_4_RGBA:return h(e,t)&&(e===t||a);case i.cTFASTC_4x4:case i.cTFATC_RGB:case i.cTFATC_RGBA_INTERPOLATED_ALPHA:return!0}return!1},m=function(t,n,r){if(!e.KTX2File)throw new Error("Basis transcoder module does not include support for KTX2.");var h=p(),m=new e.KTX2File(new Uint8Array(n)),f=m.getWidth(),g=m.getHeight(),v=m.getLevels(),y=!!m.getHasAlpha(),_=m.isUASTC&&m.isUASTC();if(!f||!g||!v)throw m.close(),m.delete(),new Error("Invalid image dimensions url="+t+" width="+f+" height="+g+" levels="+v);var w,b,x=d(r.deviceDetails,y,_),C=!!r.isGGGR&&"pvr"===x;if(C?w=i.cTFRGBA32:(w=y?s[x]:a[x],u(f,g,w,r.deviceDetails.webgl2)||(w=y?i.cTFRGBA32:i.cTFRGB565)),!m.startTranscoding())throw m.close(),m.delete(),new Error("Failed to start transcoding url="+t);for(var S=[],E=0;E<v;++E){var T=m.getImageTranscodedSizeInBytes(E,0,0,w),A=new Uint8Array(T);if(!m.transcodeImage(A,E,0,0,w,0,-1,-1))throw m.close(),m.delete(),new Error("Failed to transcode image url="+t);var L=w===i.cTFRGB565||w===i.cTFRGBA4444;S.push(L?new Uint16Array(A.buffer):A)}if(m.close(),m.delete(),C)for(w=i.cTFRGB565,b=0;b<S.length;++b)S[b]=c(l(S[b]));return{format:o(w,r.deviceDetails),width:f,height:g,levels:S,cubemap:!1,transcodeTime:p()-h,url:t,unswizzledGGGR:C}},f=function(t,n,r){var h=p(),m=new e.BasisFile(new Uint8Array(n)),f=m.getImageWidth(0,0),g=m.getImageHeight(0,0),v=m.getNumImages(),y=m.getNumLevels(0),_=!!m.getHasAlpha(),w=m.isUASTC&&m.isUASTC();if(!(f&&g&&v&&y))throw m.close(),m.delete(),new Error("Invalid image dimensions url="+t+" width="+f+" height="+g+" images="+v+" levels="+y);var b,x,C=d(r.deviceDetails,_,w),S=!!r.isGGGR&&"pvr"===C;if(S?b=i.cTFRGBA32:(b=_?s[C]:a[C],u(f,g,b,r.deviceDetails.webgl2)||(b=_?i.cTFRGBA32:i.cTFRGB565)),!m.startTranscoding())throw m.close(),m.delete(),new Error("Failed to start transcoding url="+t);for(var E=[],T=0;T<y;++T){var A=m.getImageTranscodedSizeInBytes(0,T,b),L=new Uint8Array(A);if(!m.transcodeImage(L,0,T,b,0,0)){if(T!==y-1||A!==E[T-1].buffer.byteLength)throw m.close(),m.delete(),new Error("Failed to transcode image url="+t);L.set(new Uint8Array(E[T-1].buffer)),console.warn("Failed to transcode last mipmap level, using previous level instead url="+t)}var M=b===i.cTFRGB565||b===i.cTFRGBA4444;E.push(M?new Uint16Array(L.buffer):L)}if(m.close(),m.delete(),S)for(b=i.cTFRGB565,x=0;x<E.length;++x)E[x]=c(l(E[x]));return{format:o(b,r.deviceDetails),width:f,height:g,levels:E,cubemap:!1,transcodeTime:p()-h,url:t,unswizzledGGGR:S}},g=function(e,t,n){return n.isKTX2?m(e,t,n):f(e,t,n)},v=function(e,t,n){try{var i=g(e,t,n);i.levels=i.levels.map((function(e){return e.buffer})),self.postMessage({url:e,data:i},i.levels)}catch(t){self.postMessage({url:e,err:t},null)}},y=function(i,a){var s=function(e,t){return WebAssembly.instantiate(i.module,e).then((function(e){t(e)})).catch((function(e){console.error("instantiate failed + "+e)})),{}};self.BASIS(i.module?{instantiateWasm:s}:null).then((function(s){s.initializeBasis(),e=s,t=i.rgbPriority,n=i.rgbaPriority,a(null)}))},_=[];self.onmessage=function(t){var n=t.data;switch(n.type){case"init":y(n.config,(function(){for(var e=0;e<_.length;++e)v(_[e].url,_[e].data,_[e].options);_.length=0}));break;case"transcode":e?v(n.url,n.data,n.options):_.push(n)}}}var sD=function(e){return{astc:!!e.extCompressedTextureASTC,atc:!!e.extCompressedTextureATC,dxt:!!e.extCompressedTextureS3TC,etc1:!!e.extCompressedTextureETC1,etc2:!!e.extCompressedTextureETC,pvr:!!e.extCompressedTexturePVRTC}},rD=function(e,t){var n=function(e){var t=["/* basis */",e,"","("+aD.toString()+")()\n\n"].join("\n");return new Blob([t],{type:"application/javascript"})},i=function(){try{if("object"==typeof WebAssembly&&"function"==typeof WebAssembly.instantiate){var e=new WebAssembly.Module(Uint8Array.of(0,97,115,109,1,0,0,0));if(e instanceof WebAssembly.Module)return new WebAssembly.Instance(e)instanceof WebAssembly.Instance}}catch(e){}return!1},a=function(i,a){t(null,{workerUrl:URL.createObjectURL(n(i)),module:a,rgbPriority:e.rgbPriority,rgbaPriority:e.rgbaPriority})},s={cache:!0,responseType:"text",retry:e.maxRetries>0,maxRetries:e.maxRetries};if(e.glueUrl&&e.wasmUrl&&i()){var r=null,o=null;Qd.get(e.glueUrl,s,(function(e,n){e?t(e):o?a(n,o):r=n}));var l=fetch(e.wasmUrl),c=function(){l.then((function(e){return e.arrayBuffer()})).then((function(e){return WebAssembly.compile(e)})).then((function(e){r?a(r,e):o=e})).catch((function(e){t(e,null)}))};WebAssembly.compileStreaming?WebAssembly.compileStreaming(l).then((function(e){r?a(r,e):o=e})).catch((function(e){c()})):c()}else Qd.get(e.fallbackUrl,s,(function(e,n){e?t(e,null):a(n,null)}))},oD=function(){function e(){this.callbacks={},this.queue=[],this.clients=[]}var t=e.prototype;return t.enqueueJob=function(e,t,n,i){if(this.callbacks.hasOwnProperty(e))this.callbacks[e].push(n);else{this.callbacks[e]=[n];var a={url:e,data:t,options:i};this.clients.length>0?this.clients.shift().run(a):this.queue.push(a)}},t.enqueueClient=function(e){this.queue.length>0?e.run(this.queue.shift()):this.clients.push(e)},t.handleResponse=function(e,t,n){var i=this.callbacks[e];if(t)for(var a=0;a<i.length;++a)i[a](t);else{n.format===Qn||n.format===$n?n.levels=n.levels.map((function(e){return new Uint16Array(e)})):n.levels=n.levels.map((function(e){return new Uint8Array(e)}));for(var s=0;s<i.length;++s)i[s](null,n)}delete this.callbacks[e]},e}(),lD=function(){function e(e,t,n){var i=this;this.queue=e,this.worker=new Worker(t.workerUrl),this.worker.addEventListener("message",(function(e){var t=e.data;i.queue.handleResponse(t.url,t.err,t.data),i.eager||i.queue.enqueueClient(i)})),this.worker.postMessage({type:"init",config:t}),this.eager=n}return e.prototype.run=function(e){var t=[];e.data instanceof ArrayBuffer&&t.push(e.data),this.worker.postMessage({type:"transcode",url:e.url,format:e.format,data:e.data,options:e.options},t),this.eager&&this.queue.enqueueClient(this)},e}(),cD=1,hD=["etc1","etc2","astc","dxt","pvr","atc"],pD=["astc","dxt","etc2","pvr","atc"],dD=5,uD=new oD,mD=null,fD=!1;function gD(e){if(!fD){if(e){if(e.lazyInit)return void(mD=e)}else e=mD||{};if(!e.glueUrl||!e.wasmUrl||!e.fallbackUrl){var t=Ge.getConfig("BASIS");t&&(e={glueUrl:t.glueUrl,wasmUrl:t.wasmUrl,fallbackUrl:t.fallbackUrl,numWorkers:t.numWorkers})}if(e.glueUrl||e.wasmUrl||e.fallbackUrl){fD=!0;var n=Math.max(1,Math.min(16,e.numWorkers||cD)),i=1===e.numWorkers||!e.hasOwnProperty("eagerWorkers")||e.eagerWorkers;e.rgbPriority=e.rgbPriority||hD,e.rgbaPriority=e.rgbaPriority||pD,e.maxRetries=e.hasOwnProperty("maxRetries")?e.maxRetries:dD,rD(e,(function(e,t){if(e)console.error("failed to initialize basis worker: "+e);else for(var a=0;a<n;++a)uD.enqueueClient(new lD(uD,t,i))}))}}}var vD=null;function yD(e,t,n,i,a){return gD(),vD||(vD={webgl2:e.isWebGL2,formats:sD(e)}),uD.enqueueJob(t,n,i,{deviceDetails:vD,isGGGR:!(null==a||!a.isGGGR),isKTX2:!(null==a||!a.isKTX2)}),fD}var _D=function(){function e(e,t){this.device=t,this.maxRetries=0}var t=e.prototype;return t.load=function(e,t,n){var i=this.device,a=function(a){var s;yD(i,e.load,a,t,{isGGGR:0!=(8&(null==n||null==(s=n.file)||null==(s=s.variants)||null==(s=s.basis)?void 0:s.opt))})||t("Basis module not found. Asset '"+n.name+"' basis texture variant will not be loaded.")};eS.fetchArrayBuffer(e.load,(function(e,n){e?t(e):a(n)}),n,this.maxRetries)},t.open=function(e,t,n,i){void 0===i&&(i={});var a=new vl(n,K({name:e,addressU:t.cubemap?Yt:Xt,addressV:t.cubemap?Yt:Xt,width:t.width,height:t.height,format:t.format,cubemap:t.cubemap,levels:t.levels},i));return a.upload(),a},e}(),wD=function(){function e(e,t){this.crossOrigin=e.prefix?"anonymous":null,this.maxRetries=0,this.device=t}var t=e.prototype;return t.load=function(e,t,n){var i,a=!(null==n||null==(i=n.file)||!i.contents);if(a){if(this.device.supportsImageBitmap)return void this._loadImageBitmapFromBlob(new Blob([n.file.contents]),t);e={load:URL.createObjectURL(new Blob([n.file.contents])),original:e.original}}var s,r=function(n,i){a&&URL.revokeObjectURL(e.load),t(n,i)};n&&n.options&&n.options.hasOwnProperty("crossOrigin")?s=n.options.crossOrigin:DC.test(e.load)&&(s=this.crossOrigin),this.device.supportsImageBitmap?this._loadImageBitmap(e.load,e.original,s,r):this._loadImage(e.load,e.original,s,r)},t.open=function(e,t,n,i){void 0===i&&(i={});var a=new vl(n,K({name:e,width:t.width,height:t.height,format:ti},i));return a.setSource(t),a},t._loadImage=function(e,t,n,i){var a=new Image;n&&(a.crossOrigin=n);var s,r=0,o=this.maxRetries;a.onload=function(){i(null,a)},a.onerror=function(){if(!s)if(o>0&&++r<=o){var n=100*Math.pow(2,r);console.log("Error loading Texture from: '"+t+"' - Retrying in "+n+"ms...");var l=e.indexOf("?")>=0?"&":"?";s=setTimeout((function(){a.src=e+l+"retry="+Date.now(),s=null}),n)}else i("Error loading Texture from: '"+t+"'")},a.src=e},t._loadImageBitmap=function(e,t,n,i){var a=this,s={cache:!0,responseType:"blob",retry:this.maxRetries>0,maxRetries:this.maxRetries};Qd.get(e,s,(function(e,t){e?i(e):a._loadImageBitmapFromBlob(t,i)}))},t._loadImageBitmapFromBlob=function(e,t){createImageBitmap(e,{premultiplyAlpha:"none",colorSpaceConversion:"none"}).then((function(e){return t(null,e)})).catch((function(e){return t(e)}))},e}(),bD=[1481919403,3140563232,169478669],xD={33776:ni,33778:ii,33779:ai,36196:fi,37492:gi,37496:vi,35840:wi,35841:yi,35842:bi,35843:_i,32849:ei,32856:ti,35905:ui,35907:mi,35898:di,34843:si,34842:ri};function CD(e,t,n,i){return e===di?new Uint32Array(t,n,i/4):new Uint8Array(t,n,i)}for(var SD=function(){function e(e){this.maxRetries=0}var t=e.prototype;return t.load=function(e,t,n){eS.fetchArrayBuffer(e.load,t,n,this.maxRetries)},t.open=function(e,t,n,i){void 0===i&&(i={});var a=this.parse(t);if(!a)return null;var s=new vl(n,K({name:e,addressU:a.cubemap?Yt:Xt,addressV:a.cubemap?Yt:Xt,width:a.width,height:a.height,format:a.format,cubemap:a.cubemap,levels:a.levels},i));return s.upload(),s},t.parse=function(e){var t=new Uint32Array(e);if(bD[0]!==t[0]||bD[1]!==t[1]||bD[2]!==t[2])return null;var n={endianness:t[3],glType:t[4],glTypeSize:t[5],glFormat:t[6],glInternalFormat:t[7],glBaseInternalFormat:t[8],pixelWidth:t[9],pixelHeight:t[10],pixelDepth:t[11],numberOfArrayElements:t[12],numberOfFaces:t[13],numberOfMipmapLevels:t[14],bytesOfKeyValueData:t[15]};if(n.pixelDepth>1)return null;if(0!==n.numberOfArrayElements)return null;var i=xD[n.glInternalFormat];if(void 0===i)return null;for(var a=16+n.bytesOfKeyValueData/4,s=n.numberOfFaces>1,r=[],o=0;o<(n.numberOfMipmapLevels||1);o++){var l=t[a++];s&&r.push([]);for(var c=s?r[o]:r,h=0;h<(s?6:1);++h)c.push(CD(i,e,4*a,l)),a+=l+3>>2}return{format:i,width:n.pixelWidth,height:n.pixelHeight,levels:r,cubemap:s}},e}(),ED={KHR_DF_MODEL_ETC1S:163,KHR_DF_MODEL_UASTC:166},TD=function(){function e(e,t){this.maxRetries=0,this.device=t}var t=e.prototype;return t.load=function(e,t,n){var i=this;eS.fetchArrayBuffer(e.load,(function(a,s){a?t(a,s):i.parse(s,e,t,n)}),n,this.maxRetries)},t.open=function(e,t,n,i){void 0===i&&(i={});var a=new vl(n,K({name:e,addressU:t.cubemap?Yt:Xt,addressV:t.cubemap?Yt:Xt,width:t.width,height:t.height,format:t.format,cubemap:t.cubemap,levels:t.levels},i));return a.upload(),a},t.parse=function(e,t,n,i){var a=new We(e),s=[a.readU32be(),a.readU32be(),a.readU32be()];if(2873840728!==s[0]||540160187!==s[1]||218765834!==s[2])return null;for(var r={vkFormat:a.readU32(),typeSize:a.readU32(),pixelWidth:a.readU32(),pixelHeight:a.readU32(),pixelDepth:a.readU32(),layerCount:a.readU32(),faceCount:a.readU32(),levelCount:a.readU32(),supercompressionScheme:a.readU32()},o={dfdByteOffset:a.readU32(),dfdByteLength:a.readU32(),kvdByteOffset:a.readU32(),kvdByteLength:a.readU32(),sgdByteOffset:a.readU64(),sgdByteLength:a.readU64()},l=[],c=0;c<Math.max(1,r.levelCount);++c)l.push({byteOffset:a.readU64(),byteLength:a.readU64(),uncompressedByteLength:a.readU64()});if(a.readU32()!==o.kvdByteOffset-o.dfdByteOffset)return null;a.skip(8);var h,p=a.readU8();a.skip(o.dfdByteLength-9),a.skip(o.kvdByteLength),1===r.supercompressionScheme||p===ED.KHR_DF_MODEL_UASTC?yD(this.device,t.load,e,n,{isGGGR:0!=(8&(null==i||null==(h=i.file)||null==(h=h.variants)||null==(h=h.basis)?void 0:h.opt)),isKTX2:!0})||n('Basis module not found. Asset "'+i.name+'" basis texture variant will not be loaded.'):n("unsupported KTX2 pixel format")},e}(),AD=function(){function e(e){this.maxRetries=0}var t=e.prototype;return t.load=function(e,t,n){eS.fetchArrayBuffer(e.load,t,n,this.maxRetries)},t.open=function(e,t,n,i){void 0===i&&(i={});var a,s=new Uint32Array(t,0,32),r=s[4],o=s[3],l=Math.max(s[7],1),c=4===s[20],h=s[21],p=s[22],d=65024===s[28],u=827611204,m=825438800,f=825439312,g=!1,v=!1,y=!1,_=!1,w=null,b=1;if(c?h===u?(w=ni,g=!0):894720068===h?(w=ai,g=!0):113===h?(w=ri,b=2):116===h?(w=li,b=4):826496069===h?(w=fi,g=!0,v=!0):h===m||825504336===h?(w=h===m?yi:_i,g=!0,y=!0):h!==f&&825504848!==h||(w=h===f?wi:bi,g=!0,_=!0):32===p&&(w=ti),!w)return a=new vl(n,{width:4,height:4,format:ei,name:"dds-legacy-empty"});a=new vl(n,K({name:e,addressU:d?Yt:Xt,addressV:d?Yt:Xt,width:r,height:o,format:w,cubemap:d,mipmaps:l>1},i));for(var x,C=128,S=d?6:1,E=4,T=4,A=h===u?8:16,L=0;L<S;L++)for(var M=r,P=o,O=0;O<l;O++){x=g?v?Math.floor((M+3)/4)*Math.floor((P+3)/4)*8:y?Math.max(M,16)*Math.max(P,8)/4:_?Math.max(M,8)*Math.max(P,8)/2:Math.floor((M+E-1)/E)*Math.floor((P+T-1)/T)*A:M*P*4;var I=w===li?new Float32Array(t,C,x):w===ri?new Uint16Array(t,C,x):new Uint8Array(t,C,x);d?(a._levels[O]||(a._levels[O]=[]),a._levels[O][L]=I):a._levels[O]=I,C+=x*b,M=Math.max(.5*M,1),P=Math.max(.5*P,1)}return a.upload(),a},e}(),LD=function(){function e(e){this.maxRetries=0}var t=e.prototype;return t.load=function(e,t,n){eS.fetchArrayBuffer(e.load,t,n,this.maxRetries)},t.open=function(e,t,n,i){void 0===i&&(i={});var a=this.parse(t);if(!a)return null;var s=new vl(n,K({name:e,addressU:Xt,addressV:Yt,minFilter:On,magFilter:On,width:a.width,height:a.height,levels:a.levels,format:ti,type:Aa,mipmaps:!1},i));return s.upload(),s},t.parse=function(e){var t=new We(e);if(!t.readLine().startsWith("#?RADIANCE"))return null;for(var n={};;){var i=t.readLine();if(0===i.length)break;var a=i.split("=");2===a.length&&(n[a[0]]=a[1])}if(!n.hasOwnProperty("FORMAT"))return null;var s=t.readLine().split(" ");if(4!==s.length)return null;var r=parseInt(s[1],10),o=parseInt(s[3],10),l=this._readPixels(t,o,r,"-Y"===s[0]);return l?{width:o,height:r,levels:[l]}:null},t._readPixels=function(e,t,n,i){if(t<8||t>32767)return this._readPixelsFlat(e,t,n);var a=[0,0,0,0];if(e.readArray(a),2!==a[0]||2!==a[1]||0!=(128&a[2]))return e.skip(-4),this._readPixelsFlat(e,t,n);var s,r,o,l,c,h,p=new ArrayBuffer(t*n*4),d=new Uint8Array(p),u=i?0:4*t*(n-1);for(r=0;r<n;++r){if(r&&e.readArray(a),(a[2]<<8)+a[3]!==t)return null;for(l=0;l<4;++l)for(s=0;s<t;)if((c=e.readU8())>128){if(s+(c-=128)>t)return null;for(h=e.readU8(),o=0;o<c;++o)d[u+l+4*s++]=h}else{if(0===c||s+c>t)return null;for(o=0;o<c;++o)d[u+l+4*s++]=e.readU8()}u+=4*t*(i?1:-1)}return d},t._readPixelsFlat=function(e,t,n){return e.remainingBytes===t*n*4?new Uint8Array(e.arraybuffer,e.offset):null},e}(),MD={repeat:Xt,clamp:Yt,mirror:qt},PD={nearest:On,linear:In,nearest_mip_nearest:Rn,linear_mip_nearest:kn,nearest_mip_linear:Dn,linear_mip_linear:Fn},OD={default:Ea,rgbm:Ta,rgbe:Aa,rgbp:La,swizzleGGGR:Ma},ID=function(){function e(){}var t=e.prototype;return t.load=function(e,t,n){throw new Error("not implemented")},t.open=function(e,t,n){throw new Error("not implemented")},e}(),RD=function(e){var t=Math.log2(Math.max(e._width,e._height))+1,n=function(e){return e instanceof HTMLCanvasElement||e instanceof HTMLImageElement||e instanceof HTMLVideoElement};if(!(e._format!==ti&&e._format!==li||e._volume||e._compressed||1===e._levels.length||e._levels.length===t||n(e._cubemap?e._levels[0][0]:e._levels[0]))){for(var i=function(e,t,n){for(var i=Math.max(1,e>>1),a=Math.max(1,t>>1),s=new n.constructor(i*a*4),r=Math.floor(e/i),o=Math.floor(t/a),l=r*o,c=0;c<a;++c)for(var h=0;h<i;++h)for(var p=0;p<4;++p){for(var d=0,u=0;u<o;++u)for(var m=0;m<r;++m)d+=n[4*(h*r+m+(c*o+u)*e)+p];s[4*(h+c*i)+p]=d/l}return s},a=e._levels.length;a<t;++a){var s=Math.max(1,e._width>>a-1),r=Math.max(1,e._height>>a-1);if(e._cubemap){for(var o=[],l=0;l<6;++l)o.push(i(s,r,e._levels[a-1][l]));e._levels.push(o)}else e._levels.push(i(s,r,e._levels[a-1]))}e._levelsUpdated=e._cubemap?[[!0,!0,!0,!0,!0,!0]]:[!0]}},DD=function(){function e(e){this.handlerType="texture";var t=e.assets,n=e.graphicsDevice;this._device=n,this._assets=t,this.imgParser=new wD(t,n),this.parsers={dds:new AD(t),ktx:new SD(t),ktx2:new TD(t,n),basis:new _D(t,n),hdr:new LD(t)}}var t=e.prototype;return t._getUrlWithoutParams=function(e){return e.indexOf("?")>=0?e.split("?")[0]:e},t._getParser=function(e){var t=ce.getExtension(this._getUrlWithoutParams(e)).toLowerCase().replace(".","");return this.parsers[t]||this.imgParser},t._getTextureOptions=function(e){var t={};if(e){var n;(null==(n=e.name)?void 0:n.length)>0&&(t.name=e.name);var i=e.data;i.hasOwnProperty("minfilter")&&(t.minFilter=PD[i.minfilter]),i.hasOwnProperty("magfilter")&&(t.magFilter=PD[i.magfilter]),i.hasOwnProperty("addressu")&&(t.addressU=MD[i.addressu]),i.hasOwnProperty("addressv")&&(t.addressV=MD[i.addressv]),i.hasOwnProperty("mipmaps")&&(t.mipmaps=i.mipmaps),i.hasOwnProperty("anisotropy")&&(t.anisotropy=i.anisotropy),i.hasOwnProperty("flipY")&&(t.flipY=!!i.flipY),i.hasOwnProperty("type")?t.type=OD[i.type]:i.hasOwnProperty("rgbm")&&i.rgbm?t.type=Ta:e.file&&0!=(8&e.file.opt)&&(t.type=Ma)}return t},t.load=function(e,t,n){"string"==typeof e&&(e={load:e,original:e}),this._getParser(e.original).load(e,t,n)},t.open=function(e,t,n){if(e){var i=this._getTextureOptions(n),a=this._getParser(e).open(e,t,this._device,i);return null===a?a=new vl(this._device,{width:4,height:4,format:ei}):(RD(a),t.unswizzledGGGR&&(n.file.variants.basis.opt&=-9)),a}},t.patch=function(e,t){var n=e.resource;if(n)for(var i=this._getTextureOptions(e),a=0,s=Object.keys(i);a<s.length;a++){var r=s[a];n[r]=i[r]}},q(e,[{key:"crossOrigin",get:function(){return this.imgParser.crossOrigin},set:function(e){this.imgParser.crossOrigin=e}},{key:"maxRetries",get:function(){return this.imgParser.maxRetries},set:function(e){for(var t in this.imgParser.maxRetries=e,this.parsers)this.parsers.hasOwnProperty(t)&&(this.parsers[t].maxRetries=e)}}]),e}(),kD="inline",FD="immersive-vr",BD="immersive-ar",ND="viewer",UD="local",zD="local-floor",VD="bounded-floor",HD="unbounded",GD="gaze",WD="screen",jD="tracked-pointer",XD="none",YD="left",qD="right",KD="point",ZD="plane",QD="mesh",JD="cpu-optimized",$D="gpu-optimized",ek="luminance-alpha",tk="float32",nk=function(e){function t(t){var n;return(n=e.call(this)||this)._manager=void 0,n._available=!1,n._depthInfoCpu=null,n._depthInfoGpu=null,n._usage=null,n._dataFormat=null,n._matrixDirty=!1,n._matrix=new St,n._emptyBuffer=new Uint8Array(32),n._depthBuffer=null,n._texture=void 0,n._manager=t,n._texture=new vl(n._manager.app.graphicsDevice,{format:Zn,mipmaps:!1,addressU:Yt,addressV:Yt,minFilter:In,magFilter:In,name:"XRDepthSensing"}),n.supported&&(n._manager.on("start",n._onSessionStart,J(n)),n._manager.on("end",n._onSessionEnd,J(n))),n}Z(t,e);var n=t.prototype;return n.destroy=function(){this._texture.destroy(),this._texture=null},n._onSessionStart=function(){var e=this._manager.session;try{this._usage=e.depthUsage,this._dataFormat=e.depthDataFormat}catch(e){this._usage=null,this._dataFormat=null,this._available=!1,this.fire("error",e)}},n._onSessionEnd=function(){this._depthInfoCpu=null,this._depthInfoGpu=null,this._usage=null,this._dataFormat=null,this._available&&(this._available=!1,this.fire("unavailable")),this._depthBuffer=null,this._texture._width=4,this._texture._height=4,this._texture._levels[0]=this._emptyBuffer,this._texture.upload()},n._updateTexture=function(){var e=this._depthInfoCpu||this._depthInfoGpu;if(e){var t=!1;if(e.width===this._texture.width&&e.height===this._texture.height||(this._texture._width=e.width,this._texture._height=e.height,this._matrixDirty=!0,t=!0),this._depthInfoCpu){var n=this._depthInfoCpu.data;this._depthBuffer=new Uint8Array(n),this._texture._levels[0]=this._depthBuffer,this._texture.upload()}else this._depthInfoGpu&&(this._texture._levels[0]=this._depthInfoGpu.texture,this._texture.upload());t&&this.fire("resize",e.width,e.height)}else this._depthBuffer&&(this._depthBuffer=null,this._texture._width=4,this._texture._height=4,this._texture._levels[0]=this._emptyBuffer,this._texture.upload())},n.update=function(e,t){if(this._usage){var n=null,i=null;if(this._usage===JD&&t?n=e.getDepthInformation(t):this._usage===$D&&t&&(i=e.getDepthInformation(t)),(this._depthInfoCpu&&!n||!this._depthInfoCpu&&n||this.depthInfoGpu&&!i||!this._depthInfoGpu&&i)&&(this._matrixDirty=!0),this._depthInfoCpu=n,this._depthInfoGpu=i,this._updateTexture(),this._matrixDirty){this._matrixDirty=!1;var a=this._depthInfoCpu||this._depthInfoGpu;a?this._matrix.data.set(a.normDepthBufferFromNormView.matrix):this._matrix.setIdentity()}!this._depthInfoCpu&&!this._depthInfoGpu||this._available?this._depthInfoCpu||this._depthInfoGpu||!this._available||(this._available=!1,this.fire("unavailable")):(this._available=!0,this.fire("available"))}},n.getDepth=function(e,t){return this._depthInfoCpu?this._depthInfoCpu.getDepthInMeters(e,t):null},q(t,[{key:"supported",get:function(){return we.browser&&!!window.XRDepthInformation}},{key:"available",get:function(){return this._available}},{key:"usage",get:function(){return this._usage}},{key:"dataFormat",get:function(){return this._dataFormat}},{key:"width",get:function(){var e=this._depthInfoCpu||this._depthInfoGpu;return e&&e.width||0}},{key:"height",get:function(){var e=this._depthInfoCpu||this._depthInfoGpu;return e&&e.height||0}},{key:"texture",get:function(){return this._texture}},{key:"uvMatrix",get:function(){return this._matrix}},{key:"rawValueToMeters",get:function(){var e=this._depthInfoCpu||this._depthInfoGpu;return e&&e.rawValueToMeters||0}}]),t}(re),ik=function(){function e(e){this._manager=void 0,this._supported=we.browser&&!!window.XRDOMOverlayState,this._root=null,this._manager=e}return q(e,[{key:"supported",get:function(){return this._supported}},{key:"available",get:function(){return this._supported&&this._manager.active&&null!==this._manager._session.domOverlayState}},{key:"state",get:function(){return this._supported&&this._manager.active&&this._manager._session.domOverlayState?this._manager._session.domOverlayState.type:null}},{key:"root",get:function(){return this._root},set:function(e){this._supported&&!this._manager.active&&(this._root=e)}}]),e}(),ak=[],sk=[],rk=function(e){function t(t,n,i){var a;return(a=e.call(this)||this).manager=void 0,a._xrHitTestSource=void 0,a._transient=void 0,a.manager=t,a._xrHitTestSource=n,a._transient=i,a}Z(t,e);var n=t.prototype;return n.remove=function(){if(this._xrHitTestSource){var e=this.manager.hitTest.sources,t=e.indexOf(this);-1!==t&&e.splice(t,1),this.onStop()}},n.onStop=function(){this._xrHitTestSource.cancel(),this._xrHitTestSource=null,this.fire("remove"),this.manager.hitTest.fire("remove",this)},n.update=function(e){if(this._transient)for(var t=e.getHitTestResultsForTransientInput(this._xrHitTestSource),n=0;n<t.length;n++){var i=t[n],a=void 0;i.inputSource&&(a=this.manager.input._getByInputSource(i.inputSource)),this.updateHitResults(i.results,a)}else this.updateHitResults(e.getHitTestResults(this._xrHitTestSource))},n.updateHitResults=function(e,t){for(var n=0;n<e.length;n++){var i=e[n].getPose(this.manager._referenceSpace),a=ak.pop();a||(a=new pt),a.copy(i.transform.position);var s=sk.pop();s||(s=new Et),s.copy(i.transform.orientation),this.fire("result",a,s,t),this.manager.hitTest.fire("result",this,a,s,t),ak.push(a),sk.push(s)}},t}(re),ok=function(e){function t(t){var n;return(n=e.call(this)||this).manager=void 0,n._supported=we.browser&&!(!window.XRSession||!window.XRSession.prototype.requestHitTestSource),n._session=null,n.sources=[],n.manager=t,n._supported&&(n.manager.on("start",n._onSessionStart,J(n)),n.manager.on("end",n._onSessionEnd,J(n))),n}Z(t,e);var n=t.prototype;return n._onSessionStart=function(){this.manager.type===BD&&(this._session=this.manager.session)},n._onSessionEnd=function(){if(this._session){this._session=null;for(var e=0;e<this.sources.length;e++)this.sources[e].onStop();this.sources=[]}},n.isAvailable=function(e,t){var n;return this._supported||(n=new Error("XR HitTest is not supported")),this._session||(n=new Error("XR Session is not started (1)")),this.manager.type!==BD&&(n=new Error("XR HitTest is available only for AR")),!n||(e&&e(n),t&&t.fire("error",n),!1)},n.start=function(e){var t=this;if(void 0===e&&(e={}),this.isAvailable(e.callback,this)){var n;e.profile||e.spaceType||(e.spaceType=ND);var i=e.offsetRay;if(i){var a=new DOMPoint(i.origin.x,i.origin.y,i.origin.z,1),s=new DOMPoint(i.direction.x,i.direction.y,i.direction.z,0);n=new XRRay(a,s)}var r=e.callback;e.spaceType?this._session.requestReferenceSpace(e.spaceType).then((function(i){if(!t._session){var a=new Error("XR Session is not started (2)");return r&&r(a),void t.fire("error",a)}t._session.requestHitTestSource({space:i,entityTypes:e.entityTypes||void 0,offsetRay:n}).then((function(e){t._onHitTestSource(e,!1,r)})).catch((function(e){r&&r(e),t.fire("error",e)}))})).catch((function(e){r&&r(e),t.fire("error",e)})):this._session.requestHitTestSourceForTransientInput({profile:e.profile,entityTypes:e.entityTypes||void 0,offsetRay:n}).then((function(e){t._onHitTestSource(e,!0,r)})).catch((function(e){r&&r(e),t.fire("error",e)}))}},n._onHitTestSource=function(e,t,n){if(!this._session){e.cancel();var i=new Error("XR Session is not started (3)");return n&&n(i),void this.fire("error",i)}var a=new rk(this.manager,e,t);this.sources.push(a),n&&n(null,a),this.fire("add",a)},n.update=function(e){for(var t=0;t<this.sources.length;t++)this.sources[t].update(e)},q(t,[{key:"supported",get:function(){return this._supported}}]),t}(re),lk=function(e){function t(t,n){var i;return(i=e.call(this)||this)._image=void 0,i._width=void 0,i._bitmap=null,i._measuredWidth=0,i._trackable=!1,i._tracking=!1,i._emulated=!1,i._pose=null,i._position=new pt,i._rotation=new Et,i._image=t,i._width=n,i}Z(t,e);var n=t.prototype;return n.prepare=function(){var e=this;return this._bitmap?{image:this._bitmap,widthInMeters:this._width}:createImageBitmap(this._image).then((function(t){return e._bitmap=t,{image:e._bitmap,widthInMeters:e._width}}))},n.destroy=function(){this._image=null,this._pose=null,this._bitmap&&(this._bitmap.close(),this._bitmap=null)},n.getPosition=function(){return this._pose&&this._position.copy(this._pose.transform.position),this._position},n.getRotation=function(){return this._pose&&this._rotation.copy(this._pose.transform.orientation),this._rotation},q(t,[{key:"image",get:function(){return this._image}},{key:"width",get:function(){return this._width},set:function(e){this._width=e}},{key:"trackable",get:function(){return this._trackable}},{key:"tracking",get:function(){return this._tracking}},{key:"emulated",get:function(){return this._emulated}}]),t}(re),ck=function(e){function t(t){var n;return(n=e.call(this)||this)._manager=void 0,n._supported=we.browser&&!!window.XRImageTrackingResult,n._available=!1,n._images=[],n._manager=t,n._supported&&(n._manager.on("start",n._onSessionStart,J(n)),n._manager.on("end",n._onSessionEnd,J(n))),n}Z(t,e);var n=t.prototype;return n.add=function(e,t){if(!this._supported||this._manager.active)return null;var n=new lk(e,t);return this._images.push(n),n},n.remove=function(e){if(!this._manager.active){var t=this._images.indexOf(e);-1!==t&&(e.destroy(),this._images.splice(t,1))}},n._onSessionStart=function(){var e=this;this._manager.session.getTrackedImageScores().then((function(t){e._available=!0;for(var n=0;n<t.length;n++)e._images[n]._trackable="trackable"===t[n]})).catch((function(t){e._available=!1,e.fire("error",t)}))},n._onSessionEnd=function(){this._available=!1;for(var e=0;e<this._images.length;e++){var t=this._images[e];t._pose=null,t._measuredWidth=0,t._tracking&&(t._tracking=!1,t.fire("untracked"))}},n.prepareImages=function(e){this._images.length?Promise.all(this._images.map((function(e){return e.prepare()}))).then((function(t){e(null,t)})).catch((function(t){e(t,null)})):e(null,null)},n.update=function(e){if(this._available){for(var t=e.getImageTrackingResults(),n={},i=0;i<t.length;i++){n[t[i].index]=t[i];var a=this._images[t[i].index];a._emulated="emulated"===t[i].trackingState,a._measuredWidth=t[i].measuredWidthInMeters,a._pose=e.getPose(t[i].imageSpace,this._manager._referenceSpace)}for(var s=0;s<this._images.length;s++)this._images[s]._tracking&&!n[s]?(this._images[s]._tracking=!1,this._images[s].fire("untracked")):!this._images[s]._tracking&&n[s]&&(this._images[s]._tracking=!0,this._images[s].fire("tracked"))}},q(t,[{key:"supported",get:function(){return this._supported}},{key:"available",get:function(){return this._available}},{key:"images",get:function(){return this._images}}]),t}(re),hk=function(){function e(e,t){this._index=void 0,this._hand=void 0,this._joints=[],this._tip=null,this._index=e,this._hand=t,this._hand._fingers.push(this)}return q(e,[{key:"index",get:function(){return this._index}},{key:"hand",get:function(){return this._hand}},{key:"joints",get:function(){return this._joints}},{key:"tip",get:function(){return this._tip}}]),e}(),pk=we.browser&&window.XRHand?["thumb-tip","index-finger-tip","middle-finger-tip","ring-finger-tip","pinky-finger-tip"]:[],dk={},uk=0;uk<pk.length;uk++)dk[pk[uk]]=!0;var mk=function(){function e(e,t,n,i){void 0===i&&(i=null),this._index=void 0,this._id=void 0,this._hand=void 0,this._finger=void 0,this._wrist=void 0,this._tip=void 0,this._radius=null,this._localTransform=new St,this._worldTransform=new St,this._localPosition=new pt,this._localRotation=new Et,this._position=new pt,this._rotation=new Et,this._dirtyLocal=!0,this._index=e,this._id=t,this._hand=n,this._finger=i,this._wrist="wrist"===t,this._tip=this._finger&&!!dk[t]}var t=e.prototype;return t.update=function(e){this._dirtyLocal=!0,this._radius=e.radius,this._localPosition.copy(e.transform.position),this._localRotation.copy(e.transform.orientation)},t._updateTransforms=function(){this._dirtyLocal&&(this._dirtyLocal=!1,this._localTransform.setTRS(this._localPosition,this._localRotation,pt.ONE));var e=this._hand._manager.camera.parent;e?this._worldTransform.mul2(e.getWorldTransform(),this._localTransform):this._worldTransform.copy(this._localTransform)},t.getPosition=function(){return this._updateTransforms(),this._worldTransform.getTranslation(this._position),this._position},t.getRotation=function(){return this._updateTransforms(),this._rotation.setFromMat4(this._worldTransform),this._rotation},q(e,[{key:"index",get:function(){return this._index}},{key:"hand",get:function(){return this._hand}},{key:"finger",get:function(){return this._finger}},{key:"wrist",get:function(){return this._wrist}},{key:"tip",get:function(){return this._tip}},{key:"radius",get:function(){return this._radius||.005}}]),e}(),fk=[],gk=new pt,vk=new pt,yk=new pt;we.browser&&window.XRHand&&(fk=[["thumb-metacarpal","thumb-phalanx-proximal","thumb-phalanx-distal","thumb-tip"],["index-finger-metacarpal","index-finger-phalanx-proximal","index-finger-phalanx-intermediate","index-finger-phalanx-distal","index-finger-tip"],["middle-finger-metacarpal","middle-finger-phalanx-proximal","middle-finger-phalanx-intermediate","middle-finger-phalanx-distal","middle-finger-tip"],["ring-finger-metacarpal","ring-finger-phalanx-proximal","ring-finger-phalanx-intermediate","ring-finger-phalanx-distal","ring-finger-tip"],["pinky-finger-metacarpal","pinky-finger-phalanx-proximal","pinky-finger-phalanx-intermediate","pinky-finger-phalanx-distal","pinky-finger-tip"]]);var _k,wk,bk=function(e){function t(t){var n;(n=e.call(this)||this)._manager=void 0,n._inputSource=void 0,n._tracking=!1,n._fingers=[],n._joints=[],n._jointsById={},n._tips=[],n._wrist=null;var i=t._xrInputSource.hand;if(n._manager=t._manager,n._inputSource=t,i.get("wrist")){var a=new mk(0,"wrist",J(n),null);n._wrist=a,n._joints.push(a),n._jointsById.wrist=a}for(var s=0;s<fk.length;s++)for(var r=new hk(s,J(n)),o=0;o<fk[s].length;o++){var l=fk[s][o];if(i.get(l)){var c=new mk(o,l,J(n),r);n._joints.push(c),n._jointsById[l]=c,c.tip&&(n._tips.push(c),r._tip=c),r._joints.push(c)}}return n}Z(t,e);var n=t.prototype;return n.update=function(e){for(var t=this._inputSource._xrInputSource,n=0;n<this._joints.length;n++){var i=this._joints[n],a=t.hand.get(i._id);if(a){var s=void 0;if("hidden"!==e.session.visibilityState&&(s=e.getJointPose(a,this._manager._referenceSpace)),s)i.update(s),i.wrist&&!this._tracking&&(this._tracking=!0,this.fire("tracking"));else if(i.wrist){this._tracking&&(this._tracking=!1,this.fire("trackinglost"));break}}}var r=this._jointsById["thumb-metacarpal"],o=this._jointsById["thumb-tip"],l=this._jointsById["index-finger-phalanx-proximal"],c=this._jointsById["index-finger-tip"],h=this._jointsById["ring-finger-phalanx-proximal"],p=this._jointsById["pinky-finger-phalanx-proximal"];if(r&&o&&l&&c&&h&&p){this._inputSource._dirtyRay=!0,this._inputSource._rayLocal.origin.lerp(o._localPosition,c._localPosition,.5);var d=r,u=p;if(this._inputSource.handedness===YD){var m=d;d=u,u=m}gk.sub2(d._localPosition,this._wrist._localPosition),vk.sub2(u._localPosition,this._wrist._localPosition),yk.cross(gk,vk).normalize(),gk.lerp(l._localPosition,h._localPosition,.5),gk.sub(this._wrist._localPosition).normalize(),this._inputSource._rayLocal.direction.lerp(yk,gk,.5).normalize()}this._fingerIsClosed(1)&&this._fingerIsClosed(2)&&this._fingerIsClosed(3)&&this._fingerIsClosed(4)?this._inputSource._squeezing||(this._inputSource._squeezing=!0,this._inputSource.fire("squeezestart"),this._manager.input.fire("squeezestart",this._inputSource)):this._inputSource._squeezing&&(this._inputSource._squeezing=!1,this._inputSource.fire("squeeze"),this._manager.input.fire("squeeze",this._inputSource),this._inputSource.fire("squeezeend"),this._manager.input.fire("squeezeend",this._inputSource))},n._fingerIsClosed=function(e){var t=this._fingers[e];return gk.sub2(t.joints[0]._localPosition,t.joints[1]._localPosition).normalize(),vk.sub2(t.joints[2]._localPosition,t.joints[3]._localPosition).normalize(),gk.dot(vk)<-.8},n.getJointById=function(e){return this._jointsById[e]||null},q(t,[{key:"fingers",get:function(){return this._fingers}},{key:"joints",get:function(){return this._joints}},{key:"tips",get:function(){return this._tips}},{key:"wrist",get:function(){return this._wrist}},{key:"tracking",get:function(){return this._tracking}}]),t}(re),xk=new Et,Ck=0,Sk=function(e){function t(t,n){var i;return(i=e.call(this)||this)._id=void 0,i._manager=void 0,i._xrInputSource=void 0,i._ray=new Ft,i._rayLocal=new Ft,i._grip=!1,i._hand=null,i._localTransform=null,i._worldTransform=null,i._position=new pt,i._rotation=new Et,i._localPosition=null,i._localRotation=null,i._dirtyLocal=!0,i._dirtyRay=!1,i._selecting=!1,i._squeezing=!1,i._elementInput=!0,i._elementEntity=null,i._hitTestSources=[],i._id=++Ck,i._manager=t,i._xrInputSource=n,n.hand&&(i._hand=new bk(J(i))),i}Z(t,e);var n=t.prototype;return n.update=function(e){if(this._hand)this._hand.update(e);else{if(this._xrInputSource.gripSpace){var t=e.getPose(this._xrInputSource.gripSpace,this._manager._referenceSpace);t&&(this._grip||(this._grip=!0,this._localTransform=new St,this._worldTransform=new St,this._localPosition=new pt,this._localRotation=new Et),this._dirtyLocal=!0,this._localPosition.copy(t.transform.position),this._localRotation.copy(t.transform.orientation))}var n=e.getPose(this._xrInputSource.targetRaySpace,this._manager._referenceSpace);n&&(this._dirtyRay=!0,this._rayLocal.origin.copy(n.transform.position),this._rayLocal.direction.set(0,0,-1),xk.copy(n.transform.orientation),xk.transformVector(this._rayLocal.direction,this._rayLocal.direction))}},n._updateTransforms=function(){this._dirtyLocal&&(this._dirtyLocal=!1,this._localTransform.setTRS(this._localPosition,this._localRotation,pt.ONE));var e=this._manager.camera.parent;e?this._worldTransform.mul2(e.getWorldTransform(),this._localTransform):this._worldTransform.copy(this._localTransform)},n._updateRayTransforms=function(){var e=this._dirtyRay;if(this._dirtyRay=!1,this._manager.camera.parent){var t=this._manager.camera.parent.getWorldTransform();t.getTranslation(this._position),this._rotation.setFromMat4(t),this._rotation.transformVector(this._rayLocal.origin,this._ray.origin),this._ray.origin.add(this._position),this._rotation.transformVector(this._rayLocal.direction,this._ray.direction)}else e&&(this._ray.origin.copy(this._rayLocal.origin),this._ray.direction.copy(this._rayLocal.direction))},n.getPosition=function(){return this._position?(this._updateTransforms(),this._worldTransform.getTranslation(this._position),this._position):null},n.getLocalPosition=function(){return this._localPosition},n.getRotation=function(){return this._rotation?(this._updateTransforms(),this._rotation.setFromMat4(this._worldTransform),this._rotation):null},n.getLocalRotation=function(){return this._localRotation},n.getOrigin=function(){return this._updateRayTransforms(),this._ray.origin},n.getDirection=function(){return this._updateRayTransforms(),this._ray.direction},n.hitTestStart=function(e){var t=this;void 0===e&&(e={}),e.profile=this._xrInputSource.profiles[0];var n=e.callback;e.callback=function(e,i){i&&t.onHitTestSourceAdd(i),n&&n(e,i)},this._manager.hitTest.start(e)},n.onHitTestSourceAdd=function(e){this._hitTestSources.push(e),this.fire("hittest:add",e),e.on("result",(function(t,n,i){i===this&&this.fire("hittest:result",e,t,n)}),this),e.once("remove",(function(){this.onHitTestSourceRemove(e),this.fire("hittest:remove",e)}),this)},n.onHitTestSourceRemove=function(e){var t=this._hitTestSources.indexOf(e);-1!==t&&this._hitTestSources.splice(t,1)},q(t,[{key:"id",get:function(){return this._id}},{key:"inputSource",get:function(){return this._xrInputSource}},{key:"targetRayMode",get:function(){return this._xrInputSource.targetRayMode}},{key:"handedness",get:function(){return this._xrInputSource.handedness}},{key:"profiles",get:function(){return this._xrInputSource.profiles}},{key:"grip",get:function(){return this._grip}},{key:"hand",get:function(){return this._hand}},{key:"gamepad",get:function(){return this._xrInputSource.gamepad||null}},{key:"selecting",get:function(){return this._selecting}},{key:"squeezing",get:function(){return this._squeezing}},{key:"elementInput",get:function(){return this._elementInput},set:function(e){this._elementInput!==e&&(this._elementInput=e,this._elementInput||(this._elementEntity=null))}},{key:"elementEntity",get:function(){return this._elementEntity}},{key:"hitTestSources",get:function(){return this._hitTestSources}}]),t}(re),Ek=function(e){function t(t){var n;return(n=e.call(this)||this).manager=void 0,n._inputSources=[],n._onInputSourcesChangeEvt=void 0,n.manager=t,n._onInputSourcesChangeEvt=function(e){n._onInputSourcesChange(e)},n.manager.on("start",n._onSessionStart,J(n)),n.manager.on("end",n._onSessionEnd,J(n)),n}Z(t,e);var n=t.prototype;return n._onSessionStart=function(){var e=this,t=this.manager.session;t.addEventListener("inputsourceschange",this._onInputSourcesChangeEvt),t.addEventListener("select",(function(t){var n=e._getByInputSource(t.inputSource);n.update(t.frame),n.fire("select",t),e.fire("select",n,t)})),t.addEventListener("selectstart",(function(t){var n=e._getByInputSource(t.inputSource);n.update(t.frame),n._selecting=!0,n.fire("selectstart",t),e.fire("selectstart",n,t)})),t.addEventListener("selectend",(function(t){var n=e._getByInputSource(t.inputSource);n.update(t.frame),n._selecting=!1,n.fire("selectend",t),e.fire("selectend",n,t)})),t.addEventListener("squeeze",(function(t){var n=e._getByInputSource(t.inputSource);n.update(t.frame),n.fire("squeeze",t),e.fire("squeeze",n,t)})),t.addEventListener("squeezestart",(function(t){var n=e._getByInputSource(t.inputSource);n.update(t.frame),n._squeezing=!0,n.fire("squeezestart",t),e.fire("squeezestart",n,t)})),t.addEventListener("squeezeend",(function(t){var n=e._getByInputSource(t.inputSource);n.update(t.frame),n._squeezing=!1,n.fire("squeezeend",t),e.fire("squeezeend",n,t)}));for(var n=t.inputSources,i=0;i<n.length;i++)this._addInputSource(n[i])},n._onSessionEnd=function(){for(var e=this._inputSources.length;e--;){var t=this._inputSources[e];this._inputSources.splice(e,1),t.fire("remove"),this.fire("remove",t)}this.manager.session.removeEventListener("inputsourceschange",this._onInputSourcesChangeEvt)},n._onInputSourcesChange=function(e){for(var t=0;t<e.removed.length;t++)this._removeInputSource(e.removed[t]);for(var n=0;n<e.added.length;n++)this._addInputSource(e.added[n])},n._getByInputSource=function(e){for(var t=0;t<this._inputSources.length;t++)if(this._inputSources[t].inputSource===e)return this._inputSources[t];return null},n._addInputSource=function(e){if(!this._getByInputSource(e)){var t=new Sk(this.manager,e);this._inputSources.push(t),this.fire("add",t)}},n._removeInputSource=function(e){for(var t=0;t<this._inputSources.length;t++)if(this._inputSources[t].inputSource===e){var n=this._inputSources[t];this._inputSources.splice(t,1);for(var i=n.hitTestSources.length;i--;)n.hitTestSources[i].remove();return n.fire("remove"),void this.fire("remove",n)}},n.update=function(e){for(var t=0;t<this._inputSources.length;t++)this._inputSources[t].update(e)},q(t,[{key:"inputSources",get:function(){return this._inputSources}}]),t}(re),Tk=new pt,Ak=new pt,Lk=new St,Mk=new St,Pk=function(e){function t(t){var n;return(n=e.call(this)||this)._manager=void 0,n._supported=!1,n._available=!1,n._lightProbeRequested=!1,n._lightProbe=null,n._intensity=0,n._rotation=new Et,n._color=new st,n._sphericalHarmonics=new Float32Array(27),n._manager=t,n._manager.on("start",n._onSessionStart,J(n)),n._manager.on("end",n._onSessionEnd,J(n)),n}Z(t,e);var n=t.prototype;return n._onSessionStart=function(){this._manager.session.requestLightProbe&&(this._supported=!0)},n._onSessionEnd=function(){this._supported=!1,this._available=!1,this._lightProbeRequested=!1,this._lightProbe=null},n.start=function(){var e,t=this;this._manager.session||(e=new Error("XR session is not running")),e||this._manager.type===BD||(e=new Error("XR session type is not AR")),e||this._supported||(e=new Error("light-estimation is not supported")),(!e&&this._lightProbe||this._lightProbeRequested)&&(e=new Error("light estimation is already requested")),e?this.fire("error",e):(this._lightProbeRequested=!0,this._manager.session.requestLightProbe().then((function(e){var n=t._lightProbeRequested;t._lightProbeRequested=!1,t._manager.active?n&&(t._lightProbe=e):t.fire("error",new Error("XR session is not active"))})).catch((function(e){t._lightProbeRequested=!1,t.fire("error",e)})))},n.end=function(){this._lightProbeRequested=!1,this._lightProbe=null,this._available=!1},n.update=function(e){if(this._lightProbe){var t=e.getLightEstimate(this._lightProbe);if(t){this._available||(this._available=!0,this.fire("available"));var n=t.primaryLightIntensity;this._intensity=Math.max(1,Math.max(n.x,Math.max(n.y,n.z))),Tk.copy(n).mulScalar(1/this._intensity),this._color.set(Tk.x,Tk.y,Tk.z),Tk.set(0,0,0),Ak.copy(t.primaryLightDirection),Lk.setLookAt(Ak,Tk,pt.UP),Mk.setFromAxisAngle(pt.RIGHT,90),Lk.mul(Mk),this._rotation.setFromMat4(Lk),this._sphericalHarmonics.set(t.sphericalHarmonicsCoefficients)}}},q(t,[{key:"supported",get:function(){return this._supported}},{key:"available",get:function(){return this._available}},{key:"intensity",get:function(){return this._available?this._intensity:null}},{key:"color",get:function(){return this._available?this._color:null}},{key:"rotation",get:function(){return this._available?this._rotation:null}},{key:"sphericalHarmonics",get:function(){return this._available?this._sphericalHarmonics:null}}]),t}(re),Ok=0,Ik=function(e){function t(t,n){var i;return(i=e.call(this)||this)._id=void 0,i._planeDetection=void 0,i._xrPlane=void 0,i._lastChangedTime=void 0,i._orientation=void 0,i._position=new pt,i._rotation=new Et,i._id=++Ok,i._planeDetection=t,i._xrPlane=n,i._lastChangedTime=n.lastChangedTime,i._orientation=n.orientation,i}Z(t,e);var n=t.prototype;return n.destroy=function(){this.fire("remove")},n.update=function(e){var t=this._planeDetection._manager,n=e.getPose(this._xrPlane.planeSpace,t._referenceSpace);n&&(this._position.copy(n.transform.position),this._rotation.copy(n.transform.orientation)),this._lastChangedTime!==this._xrPlane.lastChangedTime&&(this._lastChangedTime=this._xrPlane.lastChangedTime,this.fire("change"))},n.getPosition=function(){return this._position},n.getRotation=function(){return this._rotation},q(t,[{key:"id",get:function(){return this._id}},{key:"orientation",get:function(){return this._orientation}},{key:"points",get:function(){return this._xrPlane.polygon}}]),t}(re),Rk=function(e){function t(t){var n;return(n=e.call(this)||this)._manager=void 0,n._supported=we.browser&&!!window.XRPlane,n._available=!1,n._planesIndex=new Map,n._planes=null,n._manager=t,n._supported&&n._manager.on("end",n._onSessionEnd,J(n)),n}Z(t,e);var n=t.prototype;return n._onSessionEnd=function(){if(this._planes)for(var e=0;e<this._planes.length;e++)this._planes[e].destroy();this._planesIndex.clear(),this._planes=null,this._available&&(this._available=!1,this.fire("unavailable"))},n.update=function(e){var t;if(this._available)t=e.detectedPlanes;else try{t=e.detectedPlanes,this._planes=[],this._available=!0,this.fire("available")}catch(e){return}for(var n,i=te(this._planesIndex);!(n=i()).done;){var a=n.value,s=a[0],r=a[1];t.has(s)||(this._planesIndex.delete(s),this._planes.splice(this._planes.indexOf(r),1),r.destroy(),this.fire("remove",r))}for(var o,l=te(t);!(o=l()).done;){var c=o.value,h=this._planesIndex.get(c);h?h.update(e):(h=new Ik(this,c),this._planesIndex.set(c,h),this._planes.push(h),h.update(e),this.fire("add",h))}},q(t,[{key:"supported",get:function(){return this._supported}},{key:"available",get:function(){return this._available}},{key:"planes",get:function(){return this._planes}}]),t}(re),Dk=function(e){function t(t,n){var i;return(i=e.call(this)||this)._position=new pt,i._rotation=new Et,i._anchors=t,i._xrAnchor=n,i}Z(t,e);var n=t.prototype;return n.destroy=function(){if(this._xrAnchor){this._anchors._index.delete(this._xrAnchor);var e=this._anchors._list.indexOf(this);-1!==e&&this._anchors._list.splice(e,1),this._xrAnchor.delete(),this._xrAnchor=null,this.fire("destroy"),this._anchors.fire("destroy",this)}},n.update=function(e){if(this._xrAnchor){var t=e.getPose(this._xrAnchor.anchorSpace,this._anchors.manager._referenceSpace);if(t){if(this._position.equals(t.transform.position)&&this._rotation.equals(t.transform.orientation))return;this._position.copy(t.transform.position),this._rotation.copy(t.transform.orientation),this.fire("change")}}},n.getPosition=function(){return this._position},n.getRotation=function(){return this._rotation},t}(re),kk=function(e){function t(t){var n;return(n=e.call(this)||this)._supported=we.browser&&!!window.XRAnchor,n._creationQueue=[],n._index=new Map,n._list=[],n._callbacksAnchors=new Map,n.manager=t,n._supported&&n.manager.on("end",n._onSessionEnd,J(n)),n}Z(t,e);var n=t.prototype;return n._onSessionEnd=function(){for(var e=0;e<this._creationQueue.length;e++)this._creationQueue[e].callback&&this._creationQueue[e].callback(new Error("session ended"),null);if(this._creationQueue.length=0,this._list){for(var t=this._list.length;t--;)this._list[t].destroy();this._list.length=0}},n.create=function(e,t,n){this._creationQueue.push({transform:new XRRigidTransform(e,t),callback:n})},n.update=function(e){var t=this;if(this._creationQueue.length){for(var n=function(){var n=t._creationQueue[i];e.createAnchor(n.transform,t.manager._referenceSpace).then((function(e){n.callback&&t._callbacksAnchors.set(e,n.callback)})).catch((function(e){n.callback&&n.callback(e,null),t.fire("error",e)}))},i=0;i<this._creationQueue.length;i++)n();this._creationQueue.length=0}for(var a,s=te(this._index);!(a=s()).done;){var r=a.value,o=r[0],l=r[1];e.trackedAnchors.has(o)||l.destroy()}for(var c=0;c<this._list.length;c++)this._list[c].update(e);for(var h,p=te(e.trackedAnchors);!(h=p()).done;){var d=h.value;if(!this._index.has(d)){try{d.anchorSpace}catch(e){continue}var u=new Dk(this,d);this._index.set(d,u),this._list.push(u),u.update(e);var m=this._callbacksAnchors.get(d);m&&(this._callbacksAnchors.delete(d),m(null,u)),this.fire("add",u)}}},q(t,[{key:"supported",get:function(){return this._supported}},{key:"list",get:function(){return this._list}}]),t}(re),Fk=function(e){function t(t){var n;return(n=e.call(this)||this).app=void 0,n._supported=we.browser&&!!navigator.xr,n._available={},n._type=null,n._spaceType=null,n._session=null,n._baseLayer=null,n._referenceSpace=null,n.depthSensing=void 0,n.domOverlay=void 0,n.hitTest=void 0,n.imageTracking=void 0,n.planeDetection=void 0,n.input=void 0,n.lightEstimation=void 0,n._camera=null,n.views=[],n.viewsPool=[],n._localPosition=new pt,n._localRotation=new Et,n._depthNear=.1,n._depthFar=1e3,n._width=0,n._height=0,n.app=t,n._available[kD]=!1,n._available[FD]=!1,n._available[BD]=!1,n.depthSensing=new nk(J(n)),n.domOverlay=new ik(J(n)),n.hitTest=new ok(J(n)),n.imageTracking=new ck(J(n)),n.planeDetection=new Rk(J(n)),n.input=new Ek(J(n)),n.lightEstimation=new Pk(J(n)),n.anchors=new kk(J(n)),n._supported&&(navigator.xr.addEventListener("devicechange",(function(){n._deviceAvailabilityCheck()})),n._deviceAvailabilityCheck()),n}Z(t,e);var n=t.prototype;return n.destroy=function(){this.depthSensing.destroy(),this.depthSensing=null},n.start=function(e,t,n,i){var a=this,s=i;if("object"==typeof i&&(s=i.callback),this._available[t])if(this._session)s&&s(new Error("XR session is already started"));else{this._camera=e,this._camera.camera.xr=this,this._type=t,this._spaceType=n,this._setClipPlanes(e.nearClip,e.farClip);var r={requiredFeatures:[n],optionalFeatures:[]};if(t===BD){if(r.optionalFeatures.push("light-estimation"),r.optionalFeatures.push("hit-test"),i&&(i.imageTracking&&this.imageTracking.supported&&r.optionalFeatures.push("image-tracking"),i.planeDetection&&r.optionalFeatures.push("plane-detection")),this.domOverlay.supported&&this.domOverlay.root&&(r.optionalFeatures.push("dom-overlay"),r.domOverlay={root:this.domOverlay.root}),i&&i.anchors&&this.anchors.supported&&r.optionalFeatures.push("anchors"),i&&i.depthSensing&&this.depthSensing.supported){r.optionalFeatures.push("depth-sensing");var o=[JD],l=[ek];if(i.depthSensing.usagePreference){var c=o.indexOf(i.depthSensing.usagePreference);-1!==c&&o.splice(c,1),o.unshift(i.depthSensing.usagePreference)}if(i.depthSensing.dataFormatPreference){var h=l.indexOf(i.depthSensing.dataFormatPreference);-1!==h&&l.splice(h,1),l.unshift(i.depthSensing.dataFormatPreference)}r.depthSensing={usagePreference:o,dataFormatPreference:l}}}else t===FD&&r.optionalFeatures.push("hand-tracking");i&&i.optionalFeatures&&(r.optionalFeatures=r.optionalFeatures.concat(i.optionalFeatures)),this.imageTracking.supported&&this.imageTracking.images.length?this.imageTracking.prepareImages((function(e,i){if(e)return s&&s(e),void a.fire("error",e);null!==i&&(r.trackedImages=i),a._onStartOptionsReady(t,n,r,s)})):this._onStartOptionsReady(t,n,r,s)}else s&&s(new Error("XR is not available"))},n._onStartOptionsReady=function(e,t,n,i){var a=this;navigator.xr.requestSession(e,n).then((function(e){a._onSessionStart(e,t,i)})).catch((function(e){a._camera.camera.xr=null,a._camera=null,a._type=null,a._spaceType=null,i&&i(e),a.fire("error",e)}))},n.end=function(e){this._session?(e&&this.once("end",e),this._session.end()):e&&e(new Error("XR Session is not initialized"))},n.isAvailable=function(e){return this._available[e]},n._deviceAvailabilityCheck=function(){for(var e in this._available)this._sessionSupportCheck(e)},n._sessionSupportCheck=function(e){var t=this;navigator.xr.isSessionSupported(e).then((function(n){t._available[e]!==n&&(t._available[e]=n,t.fire("available",e,n),t.fire("available:"+e,n))})).catch((function(e){t.fire("error",e)}))},n._onSessionStart=function(e,t,n){var i=this,a=!1;this._session=e;var s=function(){i.fire("visibility:change",e.visibilityState)},r=function(){i._setClipPlanes(i._camera.nearClip,i._camera.farClip)},o=function t(){i._camera&&(i._camera.off("set_nearClip",r),i._camera.off("set_farClip",r),i._camera.camera.xr=null,i._camera=null),e.removeEventListener("end",t),e.removeEventListener("visibilitychange",s),a||i.fire("end"),i._session=null,i._referenceSpace=null,i.views=[],i._width=0,i._height=0,i._type=null,i._spaceType=null,i.app.tick()};e.addEventListener("end",o),e.addEventListener("visibilitychange",s),this._camera.on("set_nearClip",r),this._camera.on("set_farClip",r);var l=this.app.graphicsDevice.maxPixelRatio/window.devicePixelRatio;this._baseLayer=new XRWebGLLayer(e,this.app.graphicsDevice.gl,{alpha:!0,depth:!0,stencil:!0,framebufferScaleFactor:l,antialias:!1}),e.updateRenderState({baseLayer:this._baseLayer,depthNear:this._depthNear,depthFar:this._depthFar}),e.requestReferenceSpace(t).then((function(e){i._referenceSpace=e,i.app.tick(),n&&n(null),i.fire("start")})).catch((function(t){a=!0,e.end(),n&&n(t),i.fire("error",t)}))},n._setClipPlanes=function(e,t){this._depthNear===e&&this._depthFar===t||(this._depthNear=e,this._depthFar=t,this._session&&this._session.updateRenderState({depthNear:this._depthNear,depthFar:this._depthFar}))},n.update=function(e){if(!this._session)return!1;var t=e.session.renderState.baseLayer.framebufferWidth,n=e.session.renderState.baseLayer.framebufferHeight;this._width===t&&this._height===n||(this._width=t,this._height=n,this.app.graphicsDevice.setResolution(t,n));var i=e.getViewerPose(this._referenceSpace);if(!i)return!1;for(var a=this.views.length,s=i.views.length;s>this.views.length;){var r=this.viewsPool.pop();r||(r={viewport:new vt,projMat:new St,viewMat:new St,viewOffMat:new St,viewInvMat:new St,viewInvOffMat:new St,projViewOffMat:new St,viewMat3:new ut,position:new Float32Array(3),rotation:new Et}),this.views.push(r)}for(;s<this.views.length;)this.viewsPool.push(this.views.pop());var o=i.transform.position,l=i.transform.orientation;this._localPosition.set(o.x,o.y,o.z),this._localRotation.set(l.x,l.y,l.z,l.w);for(var c=e.session.renderState.baseLayer,h=0;h<i.views.length;h++){var p=i.views[h],d=this.views[h],u=c.getViewport(p);d.viewport.x=u.x,d.viewport.y=u.y,d.viewport.z=u.width,d.viewport.w=u.height,d.projMat.set(p.projectionMatrix),d.viewMat.set(p.transform.inverse.matrix),d.viewInvMat.set(p.transform.matrix)}if(0===a&&this.views.length>0){var m=new St,f=this.views[0];m.copy(f.projMat);var g=m.data,v=2*Math.atan(1/g[5])*180/Math.PI,y=g[5]/g[0],_=g[14]/(g[10]+1),w=g[14]/(g[10]-1),b=!1;this._camera.camera.setXrProperties({aspectRatio:y,farClip:_,fov:v,horizontalFov:b,nearClip:w})}return this._camera.camera._node.setLocalPosition(this._localPosition),this._camera.camera._node.setLocalRotation(this._localRotation),this.input.update(e),this._type===BD&&(this.hitTest.supported&&this.hitTest.update(e),this.lightEstimation.supported&&this.lightEstimation.update(e),this.depthSensing.supported&&this.depthSensing.update(e,i&&i.views[0]),this.imageTracking.supported&&this.imageTracking.update(e),this.anchors.supported&&this.anchors.update(e),this.planeDetection.supported&&this.planeDetection.update(e)),this.fire("update",e),!0},q(t,[{key:"supported",get:function(){return this._supported}},{key:"active",get:function(){return!!this._session}},{key:"type",get:function(){return this._type}},{key:"spaceType",get:function(){return this._spaceType}},{key:"session",get:function(){return this._session}},{key:"camera",get:function(){return this._camera?this._camera.entity:null}},{key:"visibilityState",get:function(){return this._session?this._session.visibilityState:null}}]),t}(re),Bk=function(e){function t(t,n){var i;void 0===n&&(n={}),i=e.call(this,t)||this;var a=new ES;return a.graphicsDevice=i.createDevice(t,n),i.addComponentSystems(a),i.addResourceHandles(a),a.elementInput=n.elementInput,a.keyboard=n.keyboard,a.mouse=n.mouse,a.touch=n.touch,a.gamepads=n.gamepads,a.scriptPrefix=n.scriptPrefix,a.assetPrefix=n.assetPrefix,a.scriptsOrder=n.scriptsOrder,a.soundManager=new ou,a.lightmapper=US,a.batchManager=Hv,a.xr=Fk,i.init(a),i}Z(t,e);var n=t.prototype;return n.createDevice=function(e,t){return t.graphicsDeviceOptions||(t.graphicsDeviceOptions={}),we.browser&&navigator.xr&&(t.graphicsDeviceOptions.xrCompatible=!0),t.graphicsDeviceOptions.alpha=t.graphicsDeviceOptions.alpha||!1,new $l(e,t.graphicsDeviceOptions)},n.addComponentSystems=function(e){e.componentSystems=[zM,AA,IL,IE,$E,sM,xM,sO,dO,_C.legacy?sP:PO,oT,kP,iT,mM,YM,CL,ET,EP,MP,KP,tM,FL,$P]},n.addResourceHandles=function(e){e.resourceHandlers=[kO,oR,lR,cR,WR,DR,DD,$R,PR,dR,XR,jR,_R,MR,yR,YR,LR,wR,CR,uR,iD,ZR,JR,vR]},t}(xS),Nk=function(e){function t(t,n){var i;return(i=e.call(this)||this)._assets=new Set,i._loadingAssets=new Set,i._waitingAssets=new Set,i._registry=n,i._loading=!1,i._loaded=!1,i._failed=[],t.forEach((function(e){if(e instanceof eS)e.registry||(e.registry=n),i._assets.add(e);else{var t=n.get(e);t?i._assets.add(t):i._waitForAsset(e)}})),i}Z(t,e);var n=t.prototype;return n.destroy=function(){var e=this;this._registry.off("load",this._onLoad),this._registry.off("error",this._onError),this._waitingAssets.forEach((function(t){e._registry.off("add:"+t,this._onAddAsset)})),this.off("progress"),this.off("load")},n._assetHasDependencies=function(e){var t;return"model"===e.type&&(null==(t=e.file)?void 0:t.url)&&e.file.url&&e.file.url.match(/.json$/g)},n.load=function(e,t){var n=this;if(!this._loading){this._loading=!0,this._callback=e,this._scope=t,this._registry.on("load",this._onLoad,this),this._registry.on("error",this._onError,this);var i=!1;this._assets.forEach((function(e){e.loaded||(i=!0,n._assetHasDependencies(e)&&n._registry.loadFromUrl(e.file.url,e.type,(function(t,i){t?n._onError(t,e):n._onLoad(e)})),n._loadingAssets.add(e),n._registry.add(e))})),this._loadingAssets.forEach((function(e){n._assetHasDependencies(e)||n._registry.load(e)})),i||0!==this._waitingAssets.size||this._loadingComplete()}},n.ready=function(e,t){void 0===t&&(t=this),this._loaded?e.call(t,Array.from(this._assets)):this.once("load",(function(n){e.call(t,n)}))},n._loadingComplete=function(){this._loaded||(this._loaded=!0,this._registry.off("load",this._onLoad,this),this._registry.off("error",this._onError,this),this._failed.length?(this._callback&&this._callback.call(this._scope,"Failed to load some assets",this._failed),this.fire("error",this._failed)):(this._callback&&this._callback.call(this._scope),this.fire("load",Array.from(this._assets))))},n._onLoad=function(e){var t=this;this._loadingAssets.has(e)&&(this.fire("progress",e),this._loadingAssets.delete(e)),0===this._loadingAssets.size&&setTimeout((function(){t._loadingComplete(t._failed)}),0)},n._onError=function(e,t){var n=this;this._loadingAssets.has(t)&&(this._failed.push(t),this._loadingAssets.delete(t)),0===this._loadingAssets.size&&setTimeout((function(){n._loadingComplete(n._failed)}),0)},n._onAddAsset=function(e){this._waitingAssets.delete(e),this._assets.add(e),e.loaded||(this._loadingAssets.add(e),this._registry.load(e))},n._waitForAsset=function(e){this._waitingAssets.add(e),this._registry.once("add:"+e,this._onAddAsset,this)},t}(re),Uk=4096,zk=512,Vk=function(){function e(e,t,n,i){this.canvas=document.createElement("canvas"),this.canvas.width=t,this.canvas.height=n,this.texture=new vl(e,{name:i,format:ti,width:t,height:n,mipmaps:!0,minFilter:Fn,magFilter:In,addressU:Yt,addressV:Yt,levels:[this.canvas]}),this.ctx=this.canvas.getContext("2d",{alpha:!0})}var t=e.prototype;return t.destroy=function(){this.texture.destroy()},t.clear=function(e){var t=this.canvas,n=t.width,i=t.height;this.ctx.clearRect(0,0,n,i),this.ctx.fillStyle=e,this.ctx.fillRect(0,0,n,i)},e}(),Hk=function(e){function t(t,n){var i;return void 0===n&&(n={}),(i=e.call(this)||this).type="bitmap",i.app=t,i.intensity=0,i.fontWeight=n.fontWeight||"normal",i.fontSize=parseInt(n.fontSize,10),i.glyphSize=i.fontSize,i.fontName=n.fontName||"Arial",i.color=n.color||new st(1,1,1),i.padding=n.padding||0,i.width=Math.min(Uk,n.width||zk),i.height=Math.min(Uk,n.height||zk),i.atlases=[],i.chars="",i.data={},i}Z(t,e);var n=t.prototype;return n.createTextures=function(e){var t=this._normalizeCharsSet(e);if(t.length===this.chars.length){for(var n=0;n<t.length;n++)if(t[n]!==this.chars[n])return void this._renderAtlas(t)}else this._renderAtlas(t)},n.updateTextures=function(e){for(var t=this._normalizeCharsSet(e),n=[],i=0;i<t.length;i++){var a=t[i];this.data.chars[a]||n.push(a)}n.length>0&&this._renderAtlas(this.chars.concat(n))},n.destroy=function(){this.atlases.forEach((function(e){return e.destroy()})),this.chars=null,this.color=null,this.data=null,this.fontName=null,this.fontSize=null,this.glyphSize=null,this.intensity=null,this.atlases=null,this.type=null,this.fontWeight=null},n._colorToRgbString=function(e,t){var n=Math.round(255*e.r),i=Math.round(255*e.g),a=Math.round(255*e.b);return t?"rgba("+n+", "+i+", "+a+", "+e.a+")":"rgb("+n+", "+i+", "+a+")"},n.renderCharacter=function(e,t,n,i,a){e.fillStyle=a,e.fillText(t,n,i)},n._getAtlas=function(e){return e>=this.atlases.length&&(this.atlases[e]=new Vk(this.app.graphicsDevice,this.width,this.height,"font-atlas-"+this.fontName+"-"+e)),this.atlases[e]},n._renderAtlas=function(e){this.chars=e;var t=this.width,n=this.height,i=this._colorToRgbString(this.color,!1),a=this.color.a;this.color.a=1/255;var s=this._colorToRgbString(this.color,!0);this.color.a=a;var r="center",o="alphabetic",l=0,c=this._getAtlas(l++);c.clear(s),this.data=this._createJson(this.chars,this.fontName,t,n);for(var h=Ue.getSymbols(this.chars.join("")),p=0,d=0,u={},m=0;m<h.length;m++){var f=h[m];u[f]=this._getTextMetrics(f),p=Math.max(p,u[f].height),d=Math.max(d,u[f].descent)}this.glyphSize=Math.max(this.glyphSize,p);for(var g=this.glyphSize+2*this.padding,v=this.glyphSize+2*this.padding,y=this.glyphSize/2+this.padding,_=v-d-this.padding,w=0,b=0,x=0;x<h.length;x++){var C=h[x],S=Ue.getCodePoint(h[x]),E=this.fontSize;c.ctx.font=this.fontWeight+" "+E.toString()+"px "+this.fontName,c.ctx.textAlign=r,c.ctx.textBaseline=o;var T=c.ctx.measureText(C).width;T>E&&(E=this.fontSize*this.fontSize/T,c.ctx.font=this.fontWeight+" "+E.toString()+"px "+this.fontName,T=this.fontSize),this.renderCharacter(c.ctx,C,w+y,b+_,i);var A=this.padding+(this.glyphSize-T)/2,L=-this.padding+u[C].descent-d,M=T;this._addChar(this.data,C,S,w,b,g,v,A,L,M,l-1,t,n),(w+=g)+g>t&&(w=0,(b+=v)+v>n&&((c=this._getAtlas(l++)).clear(s),b=0))}this.atlases.splice(l).forEach((function(e){return e.destroy()})),this.atlases.forEach((function(e){return e.texture.upload()})),this.fire("render")},n._createJson=function(e,t,n,i){return{version:3,intensity:this.intensity,info:{face:t,width:n,height:i,maps:[{width:n,height:i}]},chars:{}}},n._addChar=function(e,t,n,i,a,s,r,o,l,c,h,p,d){e.info.maps.length<h+1&&e.info.maps.push({width:p,height:d});var u=this.fontSize/32;e.chars[t]={id:n,letter:t,x:i,y:a,width:s,height:r,xadvance:c/u,xoffset:o/u,yoffset:(l+this.padding)/u,scale:u,range:1,map:h,bounds:[0,0,s/u,r/u]}},n._normalizeCharsSet=function(e){var t=this.app.systems.element.getUnicodeConverter();t&&(e=t(e));for(var n={},i=Ue.getSymbols(e),a=0;a<i.length;a++){var s=i[a];n[s]||(n[s]=s)}return Object.keys(n).sort()},n._getTextMetrics=function(e){var t=document.createElement("span");t.id="content-span",t.innerHTML=e;var n=document.createElement("div");n.id="content-block",n.style.display="inline-block",n.style.width="1px",n.style.height="0px";var i=document.createElement("div");i.appendChild(t),i.appendChild(n),i.style.font=this.fontSize+"px "+this.fontName,document.body.appendChild(i);var a=-1,s=-1,r=-1;try{n.style["vertical-align"]="baseline",a=n.offsetTop-t.offsetTop,n.style["vertical-align"]="bottom",s=(r=n.offsetTop-t.offsetTop)-a}finally{document.body.removeChild(i)}return{ascent:a,descent:s,height:r}},q(t,[{key:"textures",get:function(){return this.atlases.map((function(e){return e.texture}))}}]),t}(re),Gk=[],Wk=[[],[],[]],jk=function(e){function t(t,n){var i;return(i=e.call(this,t)||this).pickColor=new Float32Array(4),i.renderer=n,i}Z(t,e);var n=t.prototype;return n.update=function(e,t,n,i){this.camera=e,this.scene=t,this.layers=n,this.mapping=i},n.execute=function(){for(var e=this.device,t=this.renderer,n=this.camera,i=this.scene,a=this.layers,s=this.mapping,r=i.layers.layerList,o=i.layers.subLayerEnabled,l=i.layers.subLayerList,c=e.scope.resolve("uColor"),h=this.pickColor,p=0;p<r.length;p++){var d=r[p];if(!(a&&a.indexOf(d)<0)&&d.enabled&&o[p]&&d.camerasSet.has(n.camera)){d._clearDepthBuffer&&t.clear(n.camera,!1,!0,!1);for(var u=d.getCulledInstances(n.camera),m=l[p]?u.transparent:u.opaque,f=0;f<m.length;f++){var g=m[f];g.pick&&(Gk.push(g),s.set(g.id,g))}t.renderForward(n.camera,Gk,Wk,Ef,(function(t){var n=t.id;h[0]=(n>>16&255)/255,h[1]=(n>>8&255)/255,h[2]=(255&n)/255,h[3]=(n>>24&255)/255,c.setValue(h),e.setBlendState(yr.NOBLEND)})),Gk.length=0}}},t}(Eg),Xk=new Set,Yk=function(){function e(e,t,n){this.renderTarget=null,this.mapping=new Map,e instanceof Ur&&(e=mC()),this.renderer=e.renderer,this.device=e.graphicsDevice,this.renderPass=new jk(this.device,e.renderer),this.width=0,this.height=0,this.resize(t,n)}var t=e.prototype;return t.getSelection=function(e,t,n,i){var a=this.device;if("object"==typeof e){var s=e;e=s.x,t=s.y,n=s.width,i=s.height}else t=this.renderTarget.height-(t+(i||1));e=Math.floor(e),t=Math.floor(t),n=Math.floor(Math.max(n||1,1)),i=Math.floor(Math.max(i||1,1)),a.setRenderTarget(this.renderTarget),a.updateBegin();var r=new Uint8Array(4*n*i);a.readPixels(e,t,n,i,r),a.updateEnd();for(var o=this.mapping,l=0;l<n*i;l++){var c=r[4*l+0],h=r[4*l+1],p=r[4*l+2],d=r[4*l+3]<<24|c<<16|h<<8|p;4294967295!==d&&Xk.add(o.get(d))}var u=[];return Xk.forEach((function(e){return u.push(e)})),Xk.clear(),u},t.allocateRenderTarget=function(){var e=new vl(this.device,{format:ti,width:this.width,height:this.height,mipmaps:!1,minFilter:On,magFilter:On,addressU:Yt,addressV:Yt,name:"pick"});this.renderTarget=new Vr({colorBuffer:e,depth:!0})},t.releaseRenderTarget=function(){this.renderTarget&&(this.renderTarget.destroyTextureBuffers(),this.renderTarget.destroy(),this.renderTarget=null)},t.prepare=function(e,t,n){e instanceof iy&&(e=e.node.camera),n instanceof db&&(n=[n]),this.renderTarget&&this.width===this.renderTarget.width&&this.height===this.renderTarget.height||(this.releaseRenderTarget(),this.allocateRenderTarget()),this.mapping.clear();var i=this.renderPass;i.init(this.renderTarget),i.colorOps.clearValue=st.WHITE,i.colorOps.clear=!0,i.depthStencilOps.clearDepth=!0,i.update(e,t,n,this.mapping),i.render()},t.resize=function(e,t){this.width=Math.floor(e),this.height=Math.floor(t)},e}(),qk=function(){function e(){}var t=e.prototype;return t.load=function(e,t,n){throw new Error("not implemented")},t.open=function(e,t,n){throw new Error("not implemented")},t.patch=function(e,t){},e}(),Kk=function(){function e(e){this._app=e,this.maxRetries=0}var t=e.prototype;return t.load=function(e,t){AR.load(e,this.maxRetries,t)},t.open=function(e,t){return t.settings},e}(),Zk=new pt,Qk=new pt,Jk=new Ft,$k=new Ft,eF=new Ft;Jk.end=new pt,$k.end=new pt,eF.end=new pt;var tF=new pt,nF=new pt,iF=new pt,aF=new pt,sF=new pt,rF=new pt,oF=new pt,lF=new pt,cF=new pt,hF=new pt,pF=new pt,dF=new pt,uF=new pt,mF=new pt,fF=new pt,gF=new pt,vF=new pt,yF=new pt,_F=new pt,wF=new pt,bF=new vt;function xF(e,t,n){return pF.cross(e,t).dot(n)}function CF(e,t,n){tF.sub2(t,e),nF.sub2(n[0],e),iF.sub2(n[1],e),aF.sub2(n[2],e),rF.cross(aF,tF);var i,a,s=nF.dot(rF);if(s>=0){if((i=-iF.dot(rF))<0)return-1;if((a=xF(tF,iF,nF))<0)return-1;var r=1/(i+s+a);oF.copy(n[0]).mulScalar(i*r),lF.copy(n[1]).mulScalar(s*r),cF.copy(n[2]).mulScalar(a*r),hF.copy(oF).add(lF).add(cF)}else{if(sF.sub2(n[3],e),(i=sF.dot(rF))<0)return-1;if((a=xF(tF,nF,sF))<0)return-1;var o=1/(i+(s=-s)+a);oF.copy(n[0]).mulScalar(i*o),lF.copy(n[3]).mulScalar(s*o),cF.copy(n[2]).mulScalar(a*o),hF.copy(oF).add(lF).add(cF)}return tF.sub2(n[0],n[2]).lengthSq()<1e-8||tF.sub2(n[1],n[3]).lengthSq()<1e-8?-1:hF.sub(e).lengthSq()}var SF=function(){function e(e,t,n){this.event=e,this.element=t,this.camera=n,this._stopPropagation=!1}return e.prototype.stopPropagation=function(){this._stopPropagation=!0,this.event&&(this.event.stopImmediatePropagation(),this.event.stopPropagation())},e}(),EF=function(e){function t(t,n,i,a,s,r,o){var l;return(l=e.call(this,t,n,i)||this).x=a,l.y=s,l.ctrlKey=t.ctrlKey||!1,l.altKey=t.altKey||!1,l.shiftKey=t.shiftKey||!1,l.metaKey=t.metaKey||!1,l.button=t.button,Od.isPointerLocked()?(l.dx=t.movementX||t.webkitMovementX||t.mozMovementX||0,l.dy=t.movementY||t.webkitMovementY||t.mozMovementY||0):(l.dx=a-r,l.dy=s-o),l.wheelDelta=0,"wheel"===t.type&&(t.deltaY>0?l.wheelDelta=1:t.deltaY<0&&(l.wheelDelta=-1)),l}return Z(t,e),t}(SF),TF=function(e){function t(t,n,i,a,s,r){var o;return(o=e.call(this,t,n,i)||this).touches=t.touches,o.changedTouches=t.changedTouches,o.x=a,o.y=s,o.touch=r,o}return Z(t,e),t}(SF),AF=function(e){function t(t,n,i,a){var s;return(s=e.call(this,t,n,i)||this).inputSource=a,s}return Z(t,e),t}(SF),LF=function(){function e(e,t){this._app=null,this._attached=!1,this._target=null,this._enabled=!0,this._lastX=0,this._lastY=0,this._upHandler=this._handleUp.bind(this),this._downHandler=this._handleDown.bind(this),this._moveHandler=this._handleMove.bind(this),this._wheelHandler=this._handleWheel.bind(this),this._touchstartHandler=this._handleTouchStart.bind(this),this._touchendHandler=this._handleTouchEnd.bind(this),this._touchcancelHandler=this._touchendHandler,this._touchmoveHandler=this._handleTouchMove.bind(this),this._sortHandler=this._sortElements.bind(this),this._elements=[],this._hoveredElement=null,this._pressedElement=null,this._touchedElements={},this._touchesForWhichTouchLeaveHasFired={},this._selectedElements={},this._selectedPressedElements={},this._useMouse=!t||!1!==t.useMouse,this._useTouch=!t||!1!==t.useTouch,this._useXr=!t||!1!==t.useXr,this._selectEventsAttached=!1,we.touch&&(this._clickedEntities={}),this.attach(e)}var t=e.prototype;return t.attach=function(e){this._attached&&(this._attached=!1,this.detach()),this._target=e,this._attached=!0;var t=!!we.passiveEvents&&{passive:!0};this._useMouse&&(window.addEventListener("mouseup",this._upHandler,t),window.addEventListener("mousedown",this._downHandler,t),window.addEventListener("mousemove",this._moveHandler,t),window.addEventListener("wheel",this._wheelHandler,t)),this._useTouch&&we.touch&&(this._target.addEventListener("touchstart",this._touchstartHandler,t),this._target.addEventListener("touchend",this._touchendHandler,!1),this._target.addEventListener("touchmove",this._touchmoveHandler,!1),this._target.addEventListener("touchcancel",this._touchcancelHandler,!1)),this.attachSelectEvents()},t.attachSelectEvents=function(){!this._selectEventsAttached&&this._useXr&&this.app&&this.app.xr&&this.app.xr.supported&&(this._clickedEntities||(this._clickedEntities={}),this._selectEventsAttached=!0,this.app.xr.on("start",this._onXrStart,this))},t.detach=function(){if(this._attached){this._attached=!1;var e=!!we.passiveEvents&&{passive:!0};this._useMouse&&(window.removeEventListener("mouseup",this._upHandler,e),window.removeEventListener("mousedown",this._downHandler,e),window.removeEventListener("mousemove",this._moveHandler,e),window.removeEventListener("wheel",this._wheelHandler,e)),this._useTouch&&(this._target.removeEventListener("touchstart",this._touchstartHandler,e),this._target.removeEventListener("touchend",this._touchendHandler,!1),this._target.removeEventListener("touchmove",this._touchmoveHandler,!1),this._target.removeEventListener("touchcancel",this._touchcancelHandler,!1)),this._selectEventsAttached&&(this._selectEventsAttached=!1,this.app.xr.off("start",this._onXrStart,this),this.app.xr.off("end",this._onXrEnd,this),this.app.xr.off("update",this._onXrUpdate,this),this.app.xr.input.off("selectstart",this._onSelectStart,this),this.app.xr.input.off("selectend",this._onSelectEnd,this),this.app.xr.input.off("remove",this._onXrInputRemove,this)),this._target=null}},t.addElement=function(e){-1===this._elements.indexOf(e)&&this._elements.push(e)},t.removeElement=function(e){var t=this._elements.indexOf(e);-1!==t&&this._elements.splice(t,1)},t._handleUp=function(e){this._enabled&&(Od.isPointerLocked()||(this._calcMouseCoords(e),this._onElementMouseEvent("mouseup",e)))},t._handleDown=function(e){this._enabled&&(Od.isPointerLocked()||(this._calcMouseCoords(e),this._onElementMouseEvent("mousedown",e)))},t._handleMove=function(e){this._enabled&&(this._calcMouseCoords(e),this._onElementMouseEvent("mousemove",e),this._lastX=_k,this._lastY=wk)},t._handleWheel=function(e){this._enabled&&(this._calcMouseCoords(e),this._onElementMouseEvent("mousewheel",e))},t._determineTouchedElements=function(e){for(var t={},n=this.app.systems.camera.cameras,i=n.length-1;i>=0;i--){for(var a=n[i],s=0,r=e.changedTouches.length,o=0;o<r;o++)if(t[e.changedTouches[o].identifier])s++;else{var l=this._calcTouchCoords(e.changedTouches[o]),c=this._getTargetElementByCoords(a,l.x,l.y);c&&(s++,t[e.changedTouches[o].identifier]={element:c,camera:a,x:l.x,y:l.y})}if(s===r)break}return t},t._handleTouchStart=function(e){if(this._enabled){for(var t=this._determineTouchedElements(e),n=0,i=e.changedTouches.length;n<i;n++){var a=e.changedTouches[n],s=t[a.identifier],r=this._touchedElements[a.identifier];!s||r&&s.element===r.element||(this._fireEvent(e.type,new TF(e,s.element,s.camera,s.x,s.y,a)),this._touchesForWhichTouchLeaveHasFired[a.identifier]=!1)}for(var o in t)this._touchedElements[o]=t[o]}},t._handleTouchEnd=function(e){if(this._enabled){var t=this.app.systems.camera.cameras;for(var n in this._clickedEntities)delete this._clickedEntities[n];for(var i=0,a=e.changedTouches.length;i<a;i++){var s=e.changedTouches[i],r=this._touchedElements[s.identifier];if(r){var o=r.element,l=r.camera,c=r.x,h=r.y;delete this._touchedElements[s.identifier],delete this._touchesForWhichTouchLeaveHasFired[s.identifier];for(var p=this._calcTouchCoords(s),d=t.length-1;d>=0;d--)this._getTargetElementByCoords(t[d],p.x,p.y)===o&&(this._clickedEntities[o.entity.getGuid()]||(this._fireEvent("click",new TF(e,o,l,c,h,s)),this._clickedEntities[o.entity.getGuid()]=Date.now()));this._fireEvent(e.type,new TF(e,o,l,c,h,s))}}}},t._handleTouchMove=function(e){if(e.preventDefault(),this._enabled)for(var t=this._determineTouchedElements(e),n=0,i=e.changedTouches.length;n<i;n++){var a=e.changedTouches[n],s=t[a.identifier],r=this._touchedElements[a.identifier];if(r){var o=this._calcTouchCoords(a);s&&s.element===r.element||this._touchesForWhichTouchLeaveHasFired[a.identifier]||(this._fireEvent("touchleave",new TF(e,r.element,r.camera,o.x,o.y,a)),this._touchesForWhichTouchLeaveHasFired[a.identifier]=!0),this._fireEvent("touchmove",new TF(e,r.element,r.camera,o.x,o.y,a))}}},t._onElementMouseEvent=function(e,t){var n=null,i=this._hoveredElement;this._hoveredElement=null;for(var a,s=this.app.systems.camera.cameras,r=s.length-1;r>=0&&(a=s[r],!(n=this._getTargetElementByCoords(a,_k,wk)));r--);if(this._hoveredElement=n,"mousemove"!==e&&"mouseup"!==e||!this._pressedElement?n&&(this._fireEvent(e,new EF(t,n,a,_k,wk,this._lastX,this._lastY)),"mousedown"===e&&(this._pressedElement=n)):this._fireEvent(e,new EF(t,this._pressedElement,a,_k,wk,this._lastX,this._lastY)),i!==this._hoveredElement&&(i&&this._fireEvent("mouseleave",new EF(t,i,a,_k,wk,this._lastX,this._lastY)),this._hoveredElement&&this._fireEvent("mouseenter",new EF(t,this._hoveredElement,a,_k,wk,this._lastX,this._lastY))),"mouseup"===e&&this._pressedElement){if(this._pressedElement===this._hoveredElement){var o=this._hoveredElement.entity.getGuid(),l=!this._clickedEntities;if(this._clickedEntities){var c=this._clickedEntities[o]||0;l=Date.now()-c>300,delete this._clickedEntities[o]}l&&this._fireEvent("click",new EF(t,this._hoveredElement,a,_k,wk,this._lastX,this._lastY))}this._pressedElement=null}},t._onXrStart=function(){this.app.xr.on("end",this._onXrEnd,this),this.app.xr.on("update",this._onXrUpdate,this),this.app.xr.input.on("selectstart",this._onSelectStart,this),this.app.xr.input.on("selectend",this._onSelectEnd,this),this.app.xr.input.on("remove",this._onXrInputRemove,this)},t._onXrEnd=function(){this.app.xr.off("update",this._onXrUpdate,this),this.app.xr.input.off("selectstart",this._onSelectStart,this),this.app.xr.input.off("selectend",this._onSelectEnd,this),this.app.xr.input.off("remove",this._onXrInputRemove,this)},t._onXrUpdate=function(){if(this._enabled)for(var e=this.app.xr.input.inputSources,t=0;t<e.length;t++)this._onElementSelectEvent("selectmove",e[t],null)},t._onXrInputRemove=function(e){var t=this._selectedElements[e.id];t&&(e._elementEntity=null,this._fireEvent("selectleave",new AF(null,t,null,e))),delete this._selectedElements[e.id],delete this._selectedPressedElements[e.id]},t._onSelectStart=function(e,t){this._enabled&&this._onElementSelectEvent("selectstart",e,t)},t._onSelectEnd=function(e,t){this._enabled&&this._onElementSelectEvent("selectend",e,t)},t._onElementSelectEvent=function(e,t,n){var i,a,s,r=this._selectedElements[t.id],o=this.app.systems.camera.cameras;if(t.elementInput){eF.set(t.getOrigin(),t.getDirection());for(var l=o.length-1;l>=0&&(s=o[l],!(i=this._getTargetElementByRay(eF,s)));l--);}t._elementEntity=i||null,i?(this._selectedElements[t.id]=i,a=i):delete this._selectedElements[t.id],r!==a&&(r&&this._fireEvent("selectleave",new AF(n,r,s,t)),a&&this._fireEvent("selectenter",new AF(n,a,s,t)));var c=this._selectedPressedElements[t.id];"selectmove"===e&&c&&this._fireEvent("selectmove",new AF(n,c,s,t)),"selectstart"===e&&(this._selectedPressedElements[t.id]=a,a&&this._fireEvent("selectstart",new AF(n,a,s,t))),!t.elementInput&&c&&(delete this._selectedPressedElements[t.id],r&&this._fireEvent("selectend",new AF(n,c,s,t))),"selectend"===e&&t.elementInput&&(delete this._selectedPressedElements[t.id],c&&this._fireEvent("selectend",new AF(n,c,s,t)),c&&c===r&&this._fireEvent("click",new AF(n,c,s,t)))},t._fireEvent=function(e,t){for(var n=t.element;n.fire(e,t),!t._stopPropagation&&n.entity.parent&&(n=n.entity.parent.element););},t._calcMouseCoords=function(e){var t=this._target.getBoundingClientRect(),n=Math.floor(t.left),i=Math.floor(t.top);_k=e.clientX-n,wk=e.clientY-i},t._calcTouchCoords=function(e){for(var t=0,n=0,i=e.target;!(i instanceof HTMLElement);)i=i.parentNode;var a=i;do{t+=a.offsetLeft-a.scrollLeft,n+=a.offsetTop-a.scrollTop,a=a.offsetParent}while(a);return{x:e.pageX-t,y:e.pageY-n}},t._sortElements=function(e,t){var n=this.app.scene.layers.sortTransparentLayers(e.layers,t.layers);return 0!==n?n:e.screen&&!t.screen?-1:!e.screen&&t.screen?1:e.screen||t.screen?e.screen.screen.screenSpace&&!t.screen.screen.screenSpace?-1:t.screen.screen.screenSpace&&!e.screen.screen.screenSpace?1:t.drawOrder-e.drawOrder:0},t._getTargetElementByCoords=function(e,t,n){var i=this._calculateRayScreen(t,n,e,Jk)?Jk:null,a=this._calculateRay3d(t,n,e,$k)?$k:null;return this._getTargetElement(e,i,a)},t._getTargetElementByRay=function(e,t){Jk.origin.copy(e.origin),Jk.direction.copy(e.direction),Jk.end.copy(Jk.direction).mulScalar(2*t.farClip).add(Jk.origin);var n=Jk,i=t.worldToScreen(n.origin,Zk),a=this._calculateRayScreen(i.x,i.y,t,$k)?$k:null;return this._getTargetElement(t,a,n)},t._getTargetElement=function(e,t,n){var i=null,a=1/0;this._elements.sort(this._sortHandler);for(var s=0,r=this._elements.length;s<r;s++){var o=this._elements[s];if(o.layers.some((function(t){return e.layersSet.has(t)})))if(o.screen&&o.screen.screen.screenSpace){if(!t)continue;if(this._checkElement(t,o,!0)>=0){i=o;break}}else{if(!n)continue;var l=this._checkElement(n,o,!1);if(l>=0&&(l<a&&(i=o,a=l),o.screen)){i=o;break}}}return i},t._calculateRayScreen=function(e,t,n,i){var a=this.app.graphicsDevice.width,s=this.app.graphicsDevice.height,r=n.rect.z*a,o=n.rect.w*s,l=n.rect.x*a,c=l+r,h=(1-n.rect.y)*s,p=h-o,d=e*a/this._target.clientWidth,u=t*s/this._target.clientHeight;return d>=l&&d<=c&&u<=h&&u>=p&&(d=a*(d-l)/r,u=s-(u=s*(u-p)/o),i.origin.set(d,u,1),i.direction.set(0,0,-1),i.end.copy(i.direction).mulScalar(2).add(i.origin),!0)},t._calculateRay3d=function(e,t,n,i){var a=this._target.clientWidth,s=this._target.clientHeight,r=n.rect.z*a,o=n.rect.w*s,l=n.rect.x*a,c=l+r,h=(1-n.rect.y)*s,p=h-o,d=e,u=t;return e>=l&&e<=c&&t<=h&&u>=p&&(d=a*(d-l)/r,u=s*(u-p)/o,n.screenToWorld(d,u,n.nearClip,Zk),n.screenToWorld(d,u,n.farClip,Qk),i.origin.copy(Zk),i.direction.set(0,0,-1),i.end.copy(Qk),!0)},t._checkElement=function(t,n,i){if(n.maskedBy&&this._checkElement(t,n.maskedBy.element,i)<0)return-1;var a;a=i?e.calculateScaleToScreen(n):e.calculateScaleToWorld(n);var s=e.buildHitCorners(n,i?n.screenCorners:n.worldCorners,a);return CF(t.origin,t.end,s)},e.buildHitCorners=function(e,t,n){var i=t;if(e.entity&&e.entity.button){var a=e.entity.button.hitPadding||bF;uF.copy(e.entity.up),mF.copy(uF).mulScalar(-1),gF.copy(e.entity.right),fF.copy(gF).mulScalar(-1),uF.mulScalar(a.w*n.y),mF.mulScalar(a.y*n.y),gF.mulScalar(a.z*n.x),fF.mulScalar(a.x*n.x),vF.copy(i[0]).add(mF).add(fF),yF.copy(i[1]).add(mF).add(gF),_F.copy(i[2]).add(uF).add(gF),wF.copy(i[3]).add(uF).add(fF),i=[vF,yF,_F,wF]}if(n.x<0){var s=i[2].x,r=i[0].x;i[0].x=s,i[1].x=r,i[2].x=r,i[3].x=s}if(n.y<0){var o=i[2].y,l=i[0].y;i[0].y=o,i[1].y=o,i[2].y=l,i[3].y=l}if(n.z<0){var c=i[2].x,h=i[2].y,p=i[2].z;i[2].x=i[0].x,i[2].y=i[0].y,i[2].z=i[0].z,i[0].x=c,i[0].y=h,i[0].z=p}return i},e.calculateScaleToScreen=function(e){var t=e.entity,n=e.screen.screen.scale;for(dF.set(n,n,n);t&&!t.screen;)dF.mul(t.getLocalScale()),t=t.parent;return dF},e.calculateScaleToWorld=function(e){var t=e.entity;for(dF.set(1,1,1);t;)dF.mul(t.getLocalScale()),t=t.parent;return dF},q(e,[{key:"enabled",get:function(){return this._enabled},set:function(e){this._enabled=e}},{key:"app",get:function(){return this._app||mC()},set:function(e){this._app=e}}]),e}(),MF=new RegExp("^\\s*function(?:\\s|\\s*\\/\\*.*\\*\\/\\s*)+([^\\(\\s\\/]*)\\s*"),PF=function(e){function t(t){var n;return(n=e.call(this)||this).app=void 0,n.entity=void 0,n._enabled=void 0,n._enabledOld=void 0,n._initialized=void 0,n._postInitialized=void 0,n.__destroyed=void 0,n.__attributes=void 0,n.__attributesRaw=void 0,n.__scriptType=void 0,n.__executionOrder=void 0,n.initScriptType(t),n}Z(t,e);var n=t.prototype;return n.initScriptType=function(e){var t=this.constructor;this.app=e.app,this.entity=e.entity,this._enabled="boolean"!=typeof e.enabled||e.enabled,this._enabledOld=this.enabled,this.__destroyed=!1,this.__attributes={},this.__attributesRaw=e.attributes||{},this.__scriptType=t,this.__executionOrder=-1},t.__getScriptName=function(e){if("function"==typeof e){if("name"in Function.prototype)return e.name;if(e===Function||e===Function.prototype.constructor)return"Function";var t=(""+e).match(MF);return t?t[1]:void 0}},n.__initializeAttributes=function(e){if(e||this.__attributesRaw){for(var t in this.__scriptType.attributes.index)this.__attributesRaw&&this.__attributesRaw.hasOwnProperty(t)?this[t]=this.__attributesRaw[t]:this.__attributes.hasOwnProperty(t)||(this.__scriptType.attributes.index[t].hasOwnProperty("default")?this[t]=this.__scriptType.attributes.index[t].default:this[t]=null);this.__attributesRaw=null}},t.extend=function(e){for(var t in e)e.hasOwnProperty(t)&&(this.prototype[t]=e[t])},q(t,[{key:"enabled",get:function(){return this._enabled&&!this._destroyed&&this.entity.script.enabled&&this.entity.enabled},set:function(e){this._enabled=!!e,this.enabled!==this._enabledOld&&(this._enabledOld=this.enabled,this.fire(this.enabled?"enable":"disable"),this.fire("state",this.enabled),!this._initialized&&this.enabled&&(this._initialized=!0,this.__initializeAttributes(!0),this.initialize&&this.entity.script._scriptMethod(this,vO)),this._initialized&&!this._postInitialized&&this.enabled&&!this.entity.script._beingEnabled&&(this._postInitialized=!0,this.postInitialize&&this.entity.script._scriptMethod(this,yO)))}}],[{key:"scriptName",get:function(){return this.__name}},{key:"attributes",get:function(){return this.hasOwnProperty("__attributes")||(this.__attributes=new gO(this)),this.__attributes}}]),t}(re);PF.__name=null;var OF=new Set(["system","entity","create","destroy","swap","move","data","scripts","_scripts","_scriptsIndex","_scriptsData","enabled","_oldState","onEnable","onDisable","onPostStateChange","_onSetEnabled","_checkState","_onBeforeRemove","_onInitializeAttributes","_onInitialize","_onPostInitialize","_onUpdate","_onPostUpdate","_callbacks","_callbackActive","has","get","on","off","fire","once","hasEvent"]);function IF(){return OF}function RF(e,t){if(_C.legacy)return null;if(OF.has(e))throw new Error("Script name '"+e+"' is reserved, please rename the script");var n=function(e){re.prototype.initEventHandler.call(this),PF.prototype.initScriptType.call(this,e)};return n.prototype=Object.create(PF.prototype),n.prototype.constructor=n,n.extend=PF.extend,n.attributes=new gO(n),kF(n,e,t),n}var DF={};function kF(e,t,n){if(!e.legacy){if("function"!=typeof e)throw new Error("script class: '"+e+"' must be a constructor function (i.e. class).");if(!(e.prototype instanceof PF))throw new Error("script class: '"+PF.__getScriptName(e)+"' does not extend pc.ScriptType.");if(t=t||e.__name||PF.__getScriptName(e),OF.has(t))throw new Error("script name: '"+t+"' is reserved, please change script name");e.__name=t,(n?n.scripts:xS.getApplication().scripts).add(e),gC.push(e,e.legacy)}}gO.reservedNames.forEach((function(e,t,n){DF[e]=1})),RF.reservedAttributes=DF;var FF={write:function(e){console.log(e)},open:function(){FF.write("Powered by PlayCanvas "+k+" "+F)},info:function(e){console.info("INFO:    "+e)},debug:function(e){console.debug("DEBUG:   "+e)},error:function(e){console.error("ERROR:   "+e)},warning:function(e){console.warn("WARNING: "+e)},alert:function(e){function t(t){return e.apply(this,arguments)}return t.toString=function(){return e.toString()},t}((function(e){FF.write("ALERT:   "+e),alert(e)})),assert:function(e,t){!1===e&&FF.write("ASSERT:  "+t)}};Ue.endsWith=function(e,t){return e.endsWith(t)},Ue.startsWith=function(e,t){return e.startsWith(t)};var BF=function(){function e(){this._isRunning=!1,this._a=0,this._b=0}var t=e.prototype;return t.start=function(){this._isRunning=!0,this._a=Ye()},t.stop=function(){this._isRunning=!1,this._b=Ye()},t.getMilliseconds=function(){return this._b-this._a},e}(),NF={now:Ye,Timer:BF};function UF(e,t){var n=function(){},i=function(n,i,a,s,r,o,l,c){t.call(this,n,i,a,s,r,o,l,c),e.call(this,n,i,a,s,r,o,l,c)};return i._super=t.prototype,n.prototype=t.prototype,i.prototype=new n,i}function zF(e){return Array.prototype.slice.call(e)}function VF(e){var t=document.createElement("style");return t.type="text/css",t.styleSheet?t.styleSheet.cssText=e:t.appendChild(document.createTextNode(e)),t}Object.defineProperty(st.prototype,"data",{get:function(){return this._data||(this._data=new Float32Array(4)),this._data[0]=this.r,this._data[1]=this.g,this._data[2]=this.b,this._data[3]=this.a,this._data}}),Object.defineProperty(st.prototype,"data3",{get:function(){return this._data3||(this._data3=new Float32Array(3)),this._data3[0]=this.r,this._data3[1]=this.g,this._data3[2]=this.b,this._data3}}),at.INV_LOG2=Math.LOG2E,at.intToBytes=at.intToBytes32,at.bytesToInt=at.bytesToInt32,Object.defineProperty(ft.prototype,"data",{get:function(){return this._data||(this._data=new Float32Array(2)),this._data[0]=this.x,this._data[1]=this.y,this._data}}),ft.prototype.scale=ft.prototype.mulScalar,Object.defineProperty(pt.prototype,"data",{get:function(){return this._data||(this._data=new Float32Array(3)),this._data[0]=this.x,this._data[1]=this.y,this._data[2]=this.z,this._data}}),pt.prototype.scale=pt.prototype.mulScalar,Object.defineProperty(vt.prototype,"data",{get:function(){return this._data||(this._data=new Float32Array(4)),this._data[0]=this.x,this._data[1]=this.y,this._data[2]=this.z,this._data[3]=this.w,this._data}}),vt.prototype.scale=vt.prototype.mulScalar;var HF={Aabb:Ot,Sphere:Dt,Plane:Ht};Dt.prototype.intersectRay=Dt.prototype.intersectsRay,kt.prototype.update=function(e,t){var n=new St;n.mul2(e,t),this.setFromMat4(n)};var GF=Ka,WF=Za,jF=Qa,XF=Ja,YF=$a,qF=es,KF=ts,ZF=Zn,QF=Qn,JF=Jn,$F=$n,eB=ei,tB=ti,nB=on,iB=ln,aB=on,sB=ln;function rB(e){this.name="UnsupportedBrowserError",this.message=e||""}function oB(e){this.name="ContextCreationError",this.message=e||""}rB.prototype=Error.prototype,oB.prototype=Error.prototype;var lB={begin:Rg.begin,dummyFragmentCode:Vl.dummyFragmentCode,end:Rg.end,fogCode:Rg.fogCode,gammaCode:Rg.gammaCode,precisionCode:Vl.precisionCode,skinCode:Rg.skinCode,tonemapCode:Rg.tonemapCode,versionCode:Vl.versionCode},cB={ADDRESS_CLAMP_TO_EDGE:Yt,ADDRESS_MIRRORED_REPEAT:qt,ADDRESS_REPEAT:Xt,BLENDMODE_ZERO:Kt,BLENDMODE_ONE:Zt,BLENDMODE_SRC_COLOR:Qt,BLENDMODE_ONE_MINUS_SRC_COLOR:Jt,BLENDMODE_DST_COLOR:$t,BLENDMODE_ONE_MINUS_DST_COLOR:en,BLENDMODE_SRC_ALPHA:tn,BLENDMODE_SRC_ALPHA_SATURATE:nn,BLENDMODE_ONE_MINUS_SRC_ALPHA:an,BLENDMODE_DST_ALPHA:sn,BLENDMODE_ONE_MINUS_DST_ALPHA:rn,BUFFER_STATIC:mn,BUFFER_DYNAMIC:fn,BUFFER_STREAM:gn,CULLFACE_NONE:An,CULLFACE_BACK:Ln,CULLFACE_FRONT:Mn,CULLFACE_FRONTANDBACK:Pn,ELEMENTTYPE_INT8:Ka,ELEMENTTYPE_UINT8:Za,ELEMENTTYPE_INT16:Qa,ELEMENTTYPE_UINT16:Ja,ELEMENTTYPE_INT32:$a,ELEMENTTYPE_UINT32:es,ELEMENTTYPE_FLOAT32:ts,FILTER_NEAREST:On,FILTER_LINEAR:In,FILTER_NEAREST_MIPMAP_NEAREST:Rn,FILTER_NEAREST_MIPMAP_LINEAR:Dn,FILTER_LINEAR_MIPMAP_NEAREST:kn,FILTER_LINEAR_MIPMAP_LINEAR:Fn,INDEXFORMAT_UINT8:jn,INDEXFORMAT_UINT16:Xn,INDEXFORMAT_UINT32:Yn,PIXELFORMAT_RGB565:Qn,PIXELFORMAT_RGB8:ei,PIXELFORMAT_RGBA8:ti,PRIMITIVE_POINTS:Mi,PRIMITIVE_LINES:Pi,PRIMITIVE_LINELOOP:Oi,PRIMITIVE_LINESTRIP:Ii,PRIMITIVE_TRIANGLES:Ri,PRIMITIVE_TRISTRIP:Di,PRIMITIVE_TRIFAN:ki,SEMANTIC_POSITION:Fi,SEMANTIC_NORMAL:Bi,SEMANTIC_COLOR:Vi,SEMANTIC_TEXCOORD:Hi,SEMANTIC_TEXCOORD0:Gi,SEMANTIC_TEXCOORD1:Wi,SEMANTIC_ATTR0:Ji,SEMANTIC_ATTR1:$i,SEMANTIC_ATTR2:ea,SEMANTIC_ATTR3:ta,TEXTURELOCK_READ:Ca,TEXTURELOCK_WRITE:Sa,drawQuadWithShader:Gg,programlib:lB,shaderChunks:Mg,ContextCreationError:oB,Device:Ur,IndexBuffer:lc,ProgramLibrary:oC,RenderTarget:Vr,ScopeId:Tr,Shader:Qo,ShaderInput:bl,Texture:vl,UnsupportedBrowserError:rB,VertexBuffer:Mr,VertexFormat:Fr,VertexIterator:Cc},hB=new vt;function pB(e,t,n,i,a){var s;if(a){var r=t?t.width:e.width,o=t?t.height:e.height;s=hB.set(a.x*r,a.y*o,a.z*r,a.w*o)}Gg(e,t,i,s)}var dB={createFullscreenQuad:function(e){return e.quadVertexBuffer},drawFullscreenQuad:pB,PostEffect:nC,PostEffectQueue:tO};Object.defineProperty(Mg,"transformSkinnedVS",{get:function(){return"#define SKIN\n"+Mg.transformVS}});var uB={"ambientPrefilteredCube.frag":"ambientEnv.frag","ambientPrefilteredCubeLod.frag":"ambientEnv.frag","dpAtlasQuad.frag":null,"genParaboloid.frag":null,"prefilterCubemap.frag":null,"reflectionDpAtlas.frag":"reflectionEnv.frag","reflectionPrefilteredCube.frag":"reflectionEnv.frag","reflectionPrefilteredCubeLod.frag":"reflectionEnv.frag"};Object.keys(uB).forEach((function(e){Object.defineProperty(Mg,e,{get:function(){return null},set:function(){}})})),Object.defineProperties(Vr.prototype,{_glFrameBuffer:{get:function(){return this.impl._glFrameBuffer},set:function(e){}}}),Object.defineProperty(Fr,"defaultInstancingFormat",{get:function(){return Fr.getDefaultInstancingFormat(ig.get())}}),Object.defineProperties(vl.prototype,{rgbm:{get:function(){return this.type===Ta},set:function(e){this.type=e?Ta:Ea}},swizzleGGGR:{get:function(){return this.type===Ma},set:function(e){this.type=e?Ma:Ea}},_glTexture:{get:function(){return this.impl._glTexture}},autoMipmap:{get:function(){return this._mipmaps},set:function(e){this._mipmaps=e}}}),Object.defineProperty(Ur.prototype,"webgl2",{get:function(){return this.isWebGL2}}),Ur.prototype.getProgramLibrary=function(){return Og(this)},Ur.prototype.setProgramLibrary=function(e){Ig(this,e)},Ur.prototype.removeShaderFromCache=function(e){Og(this).removeFromCache(e)},yr.DEFAULT=Object.freeze(new yr);var mB=new yr,fB=new xr;Ur.prototype.setBlendFunction=function(e,t){var n=this.blendState;mB.copy(n),mB.setColorBlend(n.colorOp,e,t),mB.setAlphaBlend(n.alphaOp,e,t),this.setBlendState(mB)},Ur.prototype.setBlendFunctionSeparate=function(e,t,n,i){var a=this.blendState;mB.copy(a),mB.setColorBlend(a.colorOp,e,t),mB.setAlphaBlend(a.alphaOp,n,i),this.setBlendState(mB)},Ur.prototype.setBlendEquation=function(e){var t=this.blendState;mB.copy(t),mB.setColorBlend(e,t.colorSrcFactor,t.colorDstFactor),mB.setAlphaBlend(e,t.alphaSrcFactor,t.alphaDstFactor),this.setBlendState(mB)},Ur.prototype.setBlendEquationSeparate=function(e,t){var n=this.blendState;mB.copy(n),mB.setColorBlend(e,n.colorSrcFactor,n.colorDstFactor),mB.setAlphaBlend(t,n.alphaSrcFactor,n.alphaDstFactor),this.setBlendState(mB)},Ur.prototype.setColorWrite=function(e,t,n,i){var a=this.blendState;mB.copy(a),mB.setColorWrite(e,t,n,i),this.setBlendState(mB)},Ur.prototype.getBlending=function(){return this.blendState.blend},Ur.prototype.setBlending=function(e){mB.copy(this.blendState),mB.blend=e,this.setBlendState(mB)},Ur.prototype.setDepthWrite=function(e){fB.copy(this.depthState),fB.write=e,this.setDepthState(fB)},Ur.prototype.setDepthFunc=function(e){fB.copy(this.depthState),fB.func=e,this.setDepthState(fB)},Ur.prototype.setDepthTest=function(e){fB.copy(this.depthState),fB.test=e,this.setDepthState(fB)},Ur.prototype.getCullMode=function(){return this.cullMode};var gB=zw,vB=ay,yB={partitionSkin:zR,procedural:{calculateTangents:dg,createMesh:ug,createTorus:mg,createCylinder:gg,createCapsule:vg,createCone:yg,createSphere:_g,createPlane:wg,createBox:bg},BasicMaterial:nv,ForwardRenderer:tb,GraphNode:Cv,Material:tv,Mesh:og,MeshInstance:Dv,Model:Mb,ParticleEmitter:kx,PhongMaterial:zw,Picker:Yk,Projection:{ORTHOGRAPHIC:Sm,PERSPECTIVE:Cm},Scene:Wx,Skin:jx,SkinInstance:rv};function _B(e,t){Object.defineProperty(zw.prototype,t,{get:function(){return this[e]},set:function(t){this[e]=t}})}function wB(e,t){"pass"!==e&&Object.defineProperty(bw.prototype,e,{get:function(){return this.litOptions[t||e]},set:function(n){this.litOptions[t||e]=n}})}Object.defineProperty(Wx.prototype,"defaultMaterial",{get:function(){return Qg(mC().graphicsDevice)}}),Object.defineProperty(gb.prototype,"_meshInstances",{get:function(){return null}}),Object.defineProperty(Wx.prototype,"drawCalls",{get:function(){return null}}),["128","64","32","16","8","4"].forEach((function(e,t){Object.defineProperty(Wx.prototype,"skyboxPrefiltered"+e,{get:function(){return this._prefilteredCubemaps[t]},set:function(e){this._prefilteredCubemaps[t]=e,this.updateShaders=!0}})})),Object.defineProperty(Wx.prototype,"models",{get:function(){return this._models||(this._models=[]),this._models}}),Object.defineProperty(db.prototype,"renderTarget",{set:function(e){this._renderTarget=e,this._dirtyCameras=!0},get:function(){return this._renderTarget}}),Wx.prototype._updateSkybox=function(e){this._updateSky(e)},Wx.prototype.addModel=function(e){if(!this.containsModel(e)){var t=this.layers.getLayerById(Uu);t&&(t.addMeshInstances(e.meshInstances),this.models.push(e))}},Wx.prototype.addShadowCaster=function(e){var t=this.layers.getLayerById(Uu);t&&t.addShadowCasters(e.meshInstances)},Wx.prototype.removeModel=function(e){var t=this.models.indexOf(e);if(-1!==t){var n=this.layers.getLayerById(Uu);if(!n)return;n.removeMeshInstances(e.meshInstances),this.models.splice(t,1)}},Wx.prototype.removeShadowCasters=function(e){var t=this.layers.getLayerById(Uu);t&&t.removeShadowCasters(e.meshInstances)},Wx.prototype.containsModel=function(e){return this.models.indexOf(e)>=0},Wx.prototype.getModels=function(e){return this.models},Object.defineProperty(iv.prototype,"model",{get:function(){return null}}),tb.prototype.renderComposition=function(e){mC().renderComposition(e)},Dv.prototype.syncAabb=function(){},Pb.prototype.getTarget=function(e){return this.targets[e]},Cv.prototype._dirtify=function(e){e?this._dirtifyLocal():this._dirtifyWorld()},Cv.prototype.addLabel=function(e){this._labels[e]=!0},Cv.prototype.getLabels=function(){return Object.keys(this._labels)},Cv.prototype.hasLabel=function(e){return!!this._labels[e]},Cv.prototype.removeLabel=function(e){delete this._labels[e]},Cv.prototype.findByLabel=function(e,t){void 0===t&&(t=[]),this.hasLabel(e)&&t.push(this);for(var n=0;n<this._children.length;++n)t=this._children[n].findByLabel(e,t);return t},Cv.prototype.getChildren=function(){return this.children},Cv.prototype.getName=function(){return this.name},Cv.prototype.getPath=function(){return this.path},Cv.prototype.getRoot=function(){return this.root},Cv.prototype.getParent=function(){return this.parent},Cv.prototype.setName=function(e){this.name=e},tv.prototype.getName=function(){return this.name},tv.prototype.setName=function(e){this.name=e},tv.prototype.getShader=function(){return this.shader},tv.prototype.setShader=function(e){this.shader=e},Object.defineProperty(tv.prototype,"blend",{set:function(e){this.blendState.blend=e},get:function(){return this.blendState.blend}}),Object.defineProperty(tv.prototype,"blendSrc",{set:function(e){var t=this.blendState;mB.copy(t),mB.setColorBlend(t.colorOp,e,t.colorDstFactor),mB.setAlphaBlend(t.alphaOp,e,t.alphaDstFactor),this.blendState=mB},get:function(){return this.blendState.colorSrcFactor}}),Object.defineProperty(tv.prototype,"blendDst",{set:function(e){var t=this.blendState;mB.copy(t),mB.setColorBlend(t.colorOp,t.colorSrcFactor,e),mB.setAlphaBlend(t.alphaOp,t.alphaSrcFactor,e),this.blendState=mB},get:function(){return this.blendState.colorDstFactor}}),Object.defineProperty(zw.prototype,"shininess",{get:function(){return 100*this.gloss},set:function(e){this.gloss=.01*e}}),_B("diffuseTint","diffuseMapTint"),_B("specularTint","specularMapTint"),_B("emissiveTint","emissiveMapTint"),_B("aoVertexColor","aoMapVertexColor"),_B("diffuseVertexColor","diffuseMapVertexColor"),_B("specularVertexColor","specularMapVertexColor"),_B("emissiveVertexColor","emissiveMapVertexColor"),_B("metalnessVertexColor","metalnessMapVertexColor"),_B("glossVertexColor","glossMapVertexColor"),_B("opacityVertexColor","opacityMapVertexColor"),_B("lightVertexColor","lightMapVertexColor"),_B("sheenGloss","sheenGlossiess"),_B("clearCoatGloss","clearCostGlossiness"),wB("refraction","useRefraction");var bB=new ay,xB=Object.getOwnPropertyNames(bB);for(var CB in xB)wB(xB[CB]);var SB={Animation:Jx,Key:Zx,Node:Qx,Skeleton:eC};Jx.prototype.getDuration=function(){return this.duration},Jx.prototype.getName=function(){return this.name},Jx.prototype.getNodes=function(){return this.nodes},Jx.prototype.setDuration=function(e){this.duration=e},Jx.prototype.setName=function(e){this.name=e},eC.prototype.getAnimation=function(){return this.animation},eC.prototype.getCurrentTime=function(){return this.currentTime},eC.prototype.getLooping=function(){return this.looping},eC.prototype.getNumNodes=function(){return this.numNodes},eC.prototype.setAnimation=function(e){this.animation=e},eC.prototype.setCurrentTime=function(e){this.currentTime=e},eC.prototype.setLooping=function(e){this.looping=e};var EB={AudioManager:ou,Channel:$d,Channel3d:tu,Listener:au,Sound:lu};ou.prototype.getListener=function(){return this.listener},ou.prototype.getVolume=function(){return this.volume},ou.prototype.setVolume=function(e){this.volume=e};var TB={ASSET_ANIMATION:"animation",ASSET_AUDIO:"audio",ASSET_IMAGE:"image",ASSET_JSON:"json",ASSET_MODEL:"model",ASSET_MATERIAL:"material",ASSET_TEXT:"text",ASSET_TEXTURE:"texture",ASSET_CUBEMAP:"cubemap",ASSET_SCRIPT:"script"};nS.prototype.getAssetById=function(e){return this.get(e)},Object.defineProperty(Sk.prototype,"ray",{get:function(){return this._rayLocal}}),Object.defineProperty(Sk.prototype,"position",{get:function(){return this._localPosition}}),Object.defineProperty(Sk.prototype,"rotation",{get:function(){return this._localRotation}});var AB={getTouchTargetCoords:Xd,Controller:Id,GamePads:jd,Keyboard:Ld,KeyboardEvent:Cd,Mouse:Od,MouseEvent:Pd,Touch:Yd,TouchDevice:Kd,TouchEvent:qd};Object.defineProperty(LF.prototype,"wheel",{get:function(){return-2*this.wheelDelta}}),Object.defineProperty(Pd.prototype,"wheel",{get:function(){return-2*this.wheelDelta}});var LB=RT,MB=DT,PB=kT,OB=FT,IB=BT,RB=NT,DB=UT,kB=zT,FB=VT,BB=HT,NB=GT;function UB(e,t,n){gD({glueUrl:e,wasmUrl:t,fallbackUrl:n,lazyInit:!0})}function zB(e){}xS.prototype.isFullscreen=function(){return!!document.fullscreenElement},xS.prototype.enableFullscreen=function(e,t,n){e=e||this.graphicsDevice.canvas;var i=function e(){t(),document.removeEventListener("fullscreenchange",e)},a=function e(){n(),document.removeEventListener("fullscreenerror",e)};t&&document.addEventListener("fullscreenchange",i,!1),n&&document.addEventListener("fullscreenerror",a,!1),e.requestFullscreen?e.requestFullscreen(Element.ALLOW_KEYBOARD_INPUT):n()},xS.prototype.disableFullscreen=function(e){var t=function t(){e(),document.removeEventListener("fullscreenchange",t)};e&&document.addEventListener("fullscreenchange",t,!1),document.exitFullscreen()},xS.prototype.getSceneUrl=function(e){var t=this.scenes.find(e);return t?t.url:null},xS.prototype.loadScene=function(e,t){this.scenes.loadScene(e,t)},xS.prototype.loadSceneHierarchy=function(e,t){this.scenes.loadSceneHierarchy(e,t)},xS.prototype.loadSceneSettings=function(e,t){this.scenes.loadSceneSettings(e,t)},xS.prototype.renderMeshInstance=function(e,t){var n=null!=t&&t.layer?t.layer:this.scene.defaultDrawLayer;this.scene.immediate.drawMesh(null,null,null,e,n)},xS.prototype.renderMesh=function(e,t,n,i){var a=null!=i&&i.layer?i.layer:this.scene.defaultDrawLayer;this.scene.immediate.drawMesh(t,n,e,null,a)},xS.prototype._addLines=function(e,t,n){var i=n&&n.layer?n.layer:this.scene.layers.getLayerById(Hu),a=!n||void 0===n.depthTest||n.depthTest;this.scene.immediate.getBatch(i,a).addLines(e,t)},xS.prototype.renderLine=function(e,t,n){var i,a=n,s=arguments[3],r=arguments[4];s instanceof st?(a=s,i="number"==typeof r?r===df?{layer:this.scene.layers.getLayerById(Hu),depthTest:!1}:{layer:this.scene.layers.getLayerById(Hu),depthTest:!0}:r):"number"==typeof s?(a=n,i=s===df?{layer:this.scene.layers.getLayerById(Hu),depthTest:!1}:{layer:this.scene.layers.getLayerById(Hu),depthTest:!0}):s&&(i=s),this._addLines([e,t],[n,a],i)},xS.prototype.renderLines=function(e,t,n){n?"number"==typeof n&&(n=n===df?{layer:this.scene.layers.getLayerById(Hu),depthTest:!1}:{layer:this.scene.layers.getLayerById(Hu),depthTest:!0}):n={layer:this.scene.layers.getLayerById(Hu),depthTest:!0},t.length&&e.length!==t.length?console.error("renderLines: position/color arrays have different lengths"):e.length%2==0?this._addLines(e,t,n):console.error("renderLines: array length is not divisible by 2")},xS.prototype.enableVr=function(){},Object.defineProperty(nO.prototype,"node",{get:function(){return this.entity}}),Object.defineProperty(lO.prototype,"enable",{get:function(){return this.enabled},set:function(e){this.enabled=e}}),nM.prototype.setVisible=function(e){this.enabled=e},Object.defineProperty(nM.prototype,"aabb",{get:function(){return null},set:function(e){}}),Object.defineProperty(yM.prototype,"aabb",{get:function(){return null},set:function(e){}}),Object.defineProperty(RM.prototype,"bodyType",{get:function(){return this.type},set:function(e){this.type=e}}),RM.prototype.syncBodyToEntity=function(){this._updateDynamic()},zM.prototype.setGravity=function(){1===arguments.length?this.gravity.copy(arguments[0]):this.gravity.set(arguments[0],arguments[1],arguments[2])},t.ABSOLUTE_URL=DC,t.ACTION_GAMEPAD=Tc,t.ACTION_KEYBOARD=Ec,t.ACTION_MOUSE=Sc,t.ADDRESS_CLAMP_TO_EDGE=Yt,t.ADDRESS_MIRRORED_REPEAT=qt,t.ADDRESS_REPEAT=Xt,t.ANIM_BLEND_1D=hE,t.ANIM_BLEND_2D_CARTESIAN=dE,t.ANIM_BLEND_2D_DIRECTIONAL=pE,t.ANIM_BLEND_DIRECT=uE,t.ANIM_CONTROL_STATES=vE,t.ANIM_EQUAL_TO=aE,t.ANIM_GREATER_THAN=eE,t.ANIM_GREATER_THAN_EQUAL_TO=nE,t.ANIM_INTERRUPTION_NEXT=QS,t.ANIM_INTERRUPTION_NEXT_PREV=$S,t.ANIM_INTERRUPTION_NONE=KS,t.ANIM_INTERRUPTION_PREV=ZS,t.ANIM_INTERRUPTION_PREV_NEXT=JS,t.ANIM_LAYER_ADDITIVE=_E,t.ANIM_LAYER_OVERWRITE=yE,t.ANIM_LESS_THAN=tE,t.ANIM_LESS_THAN_EQUAL_TO=iE,t.ANIM_NOT_EQUAL_TO=sE,t.ANIM_PARAMETER_BOOLEAN=lE,t.ANIM_PARAMETER_FLOAT=oE,t.ANIM_PARAMETER_INTEGER=rE,t.ANIM_PARAMETER_TRIGGER=cE,t.ANIM_STATE_ANY=gE,t.ANIM_STATE_END=fE,t.ANIM_STATE_START=mE,t.ASPECT_AUTO=Jf,t.ASPECT_MANUAL=$f,t.ASSET_ANIMATION=kC,t.ASSET_AUDIO=FC,t.ASSET_CONTAINER=KC,t.ASSET_CSS=XC,t.ASSET_CUBEMAP=WC,t.ASSET_HTML=YC,t.ASSET_IMAGE=BC,t.ASSET_JSON=NC,t.ASSET_MATERIAL=zC,t.ASSET_MODEL=UC,t.ASSET_SCRIPT=qC,t.ASSET_SHADER=jC,t.ASSET_TEXT=VC,t.ASSET_TEXTURE=HC,t.ASSET_TEXTUREATLAS=GC,t.AXIS_KEY=Rc,t.AXIS_MOUSE_X=Ac,t.AXIS_MOUSE_Y=Lc,t.AXIS_PAD_L_X=Mc,t.AXIS_PAD_L_Y=Pc,t.AXIS_PAD_R_X=Oc,t.AXIS_PAD_R_Y=Ic,t.AnimBinder=TE,t.AnimClip=qS,t.AnimClipHandler=lR,t.AnimComponent=ZE,t.AnimComponentLayer=qE,t.AnimComponentSystem=$E,t.AnimController=VE,t.AnimCurve=FO,t.AnimData=BO,t.AnimEvaluator=CE,t.AnimEvents=SE,t.AnimSnapshot=YS,t.AnimStateGraph=KE,t.AnimStateGraphHandler=cR,t.AnimTarget=AE,t.AnimTrack=EE,t.Animation=Jx,t.AnimationComponent=ME,t.AnimationComponentSystem=IE,t.AnimationHandler=oR,t.AppBase=xS,t.AppOptions=ES,t.Application=Bk,t.Asset=eS,t.AssetListLoader=Nk,t.AssetReference=vM,t.AssetRegistry=nS,t.AudioHandler=dR,t.AudioListenerComponent=eT,t.AudioListenerComponentSystem=iT,t.AudioSourceComponent=aT,t.AudioSourceComponentSystem=oT,t.BAKE_COLOR=Vf,t.BAKE_COLORDIR=Hf,t.BINDGROUP_MESH=ks,t.BINDGROUP_VIEW=Fs,t.BLENDEQUATION_ADD=cn,t.BLENDEQUATION_MAX=un,t.BLENDEQUATION_MIN=dn,t.BLENDEQUATION_REVERSE_SUBTRACT=pn,t.BLENDEQUATION_SUBTRACT=hn,t.BLENDMODE_CONSTANT=on,t.BLENDMODE_CONSTANT_ALPHA=aB,t.BLENDMODE_CONSTANT_COLOR=nB,t.BLENDMODE_DST_ALPHA=sn,t.BLENDMODE_DST_COLOR=$t,t.BLENDMODE_ONE=Zt,t.BLENDMODE_ONE_MINUS_CONSTANT=ln,t.BLENDMODE_ONE_MINUS_CONSTANT_ALPHA=sB,t.BLENDMODE_ONE_MINUS_CONSTANT_COLOR=iB,t.BLENDMODE_ONE_MINUS_DST_ALPHA=rn,t.BLENDMODE_ONE_MINUS_DST_COLOR=en,t.BLENDMODE_ONE_MINUS_SRC_ALPHA=an,t.BLENDMODE_ONE_MINUS_SRC_COLOR=Jt,t.BLENDMODE_SRC_ALPHA=tn,t.BLENDMODE_SRC_ALPHA_SATURATE=nn,t.BLENDMODE_SRC_COLOR=Qt,t.BLENDMODE_ZERO=Kt,t.BLEND_ADDITIVE=_u,t.BLEND_ADDITIVEALPHA=Su,t.BLEND_MAX=Lu,t.BLEND_MIN=Au,t.BLEND_MULTIPLICATIVE=Cu,t.BLEND_MULTIPLICATIVE2X=Eu,t.BLEND_NONE=bu,t.BLEND_NORMAL=wu,t.BLEND_PREMULTIPLIED=xu,t.BLEND_SCREEN=Tu,t.BLEND_SUBTRACTIVE=yu,t.BLUR_BOX=hm,t.BLUR_GAUSSIAN=pm,t.BODYFLAG_KINEMATIC_OBJECT=BT,t.BODYFLAG_NORESPONSE_OBJECT=NT,t.BODYFLAG_STATIC_OBJECT=FT,t.BODYGROUP_DEFAULT=jT,t.BODYGROUP_DYNAMIC=XT,t.BODYGROUP_ENGINE_1=KT,t.BODYGROUP_ENGINE_2=QT,t.BODYGROUP_ENGINE_3=JT,t.BODYGROUP_KINEMATIC=qT,t.BODYGROUP_NONE=WT,t.BODYGROUP_STATIC=YT,t.BODYGROUP_TRIGGER=ZT,t.BODYGROUP_USER_1=$T,t.BODYGROUP_USER_2=eA,t.BODYGROUP_USER_3=tA,t.BODYGROUP_USER_4=nA,t.BODYGROUP_USER_5=iA,t.BODYGROUP_USER_6=aA,t.BODYGROUP_USER_7=sA,t.BODYGROUP_USER_8=rA,t.BODYMASK_ALL=lA,t.BODYMASK_NONE=oA,t.BODYMASK_NOT_STATIC=hA,t.BODYMASK_NOT_STATIC_KINEMATIC=pA,t.BODYMASK_STATIC=cA,t.BODYSTATE_ACTIVE_TAG=UT,t.BODYSTATE_DISABLE_DEACTIVATION=HT,t.BODYSTATE_DISABLE_SIMULATION=GT,t.BODYSTATE_ISLAND_SLEEPING=zT,t.BODYSTATE_WANTS_DEACTIVATION=VT,t.BODYTYPE_DYNAMIC=DT,t.BODYTYPE_KINEMATIC=kT,t.BODYTYPE_STATIC=RT,t.BUFFER_DYNAMIC=fn,t.BUFFER_GPUDYNAMIC=vn,t.BUFFER_STATIC=mn,t.BUFFER_STREAM=gn,t.BUTTON_TRANSITION_MODE_SPRITE_CHANGE=hT,t.BUTTON_TRANSITION_MODE_TINT=cT,t.BasicMaterial=nv,t.Batch=iv,t.BatchGroup=av,t.BatchManager=Hv,t.BinaryHandler=uR,t.BlendState=yr,t.BoundingBox=Ot,t.BoundingSphere=Dt,t.Bundle=sS,t.BundleHandler=hS,t.BundleRegistry=iS,t.ButtonComponent=bT,t.ButtonComponentSystem=ET,t.CHUNKAPI_1_51=qs,t.CHUNKAPI_1_55=Ks,t.CHUNKAPI_1_56=Zs,t.CHUNKAPI_1_57=Qs,t.CHUNKAPI_1_58=Js,t.CHUNKAPI_1_60=$s,t.CHUNKAPI_1_62=er,t.CHUNKAPI_1_65=tr,t.CLEARFLAG_COLOR=yn,t.CLEARFLAG_DEPTH=_n,t.CLEARFLAG_STENCIL=wn,t.CUBEFACE_NEGX=xn,t.CUBEFACE_NEGY=Sn,t.CUBEFACE_NEGZ=Tn,t.CUBEFACE_POSX=bn,t.CUBEFACE_POSY=Cn,t.CUBEFACE_POSZ=En,t.CUBEPROJ_BOX=Mm,t.CUBEPROJ_NONE=Lm,t.CULLFACE_BACK=Ln,t.CULLFACE_FRONT=Mn,t.CULLFACE_FRONTANDBACK=Pn,t.CULLFACE_NONE=An,t.CURVE_CARDINAL=tt,t.CURVE_CATMULL=et,t.CURVE_LINEAR=Je,t.CURVE_SMOOTHSTEP=$e,t.CURVE_SPLINE=nt,t.CURVE_STEP=it,t.Camera=iy,t.CameraComponent=nO,t.CameraComponentSystem=sO,t.CanvasFont=Hk,t.ChunkBuilder=oy,t.CollisionComponent=OT,t.CollisionComponentSystem=AA,t.Color=st,t.Component=zS,t.ComponentSystem=VS,t.ComponentSystemRegistry=aS,t.ContactPoint=BM,t.ContactResult=NM,t.ContainerHandler=vR,t.ContainerResource=gR,t.ContextCreationError=oB,t.Controller=Id,t.CssHandler=yR,t.CubemapHandler=_R,t.Curve=ct,t.CurveSet=ht,t.DETAILMODE_ADD=Rm,t.DETAILMODE_MAX=Bm,t.DETAILMODE_MIN=Fm,t.DETAILMODE_MUL=Im,t.DETAILMODE_OVERLAY=km,t.DETAILMODE_SCREEN=Dm,t.DEVICETYPE_NULL=Os,t.DEVICETYPE_WEBGL1=Ls,t.DEVICETYPE_WEBGL2=Ms,t.DEVICETYPE_WEBGPU=Ps,t.DISTANCE_EXPONENTIAL=jt,t.DISTANCE_INVERSE=Wt,t.DISTANCE_LINEAR=Gt,t.DefaultAnimBinder=LE,t.DepthState=xr,t.ELEMENTTYPE_FLOAT32=KF,t.ELEMENTTYPE_GROUP=pT,t.ELEMENTTYPE_IMAGE=dT,t.ELEMENTTYPE_INT16=jF,t.ELEMENTTYPE_INT32=YF,t.ELEMENTTYPE_INT8=GF,t.ELEMENTTYPE_TEXT=uT,t.ELEMENTTYPE_UINT16=XF,t.ELEMENTTYPE_UINT32=qF,t.ELEMENTTYPE_UINT8=WF,t.EMITTERSHAPE_BOX=ym,t.EMITTERSHAPE_SPHERE=_m,t.EVENT_GAMEPADCONNECTED=pd,t.EVENT_GAMEPADDISCONNECTED=dd,t.EVENT_KEYDOWN=Dc,t.EVENT_KEYUP=kc,t.EVENT_MOUSEDOWN=Fc,t.EVENT_MOUSEMOVE=Bc,t.EVENT_MOUSEUP=Nc,t.EVENT_MOUSEWHEEL=Uc,t.EVENT_SELECT=Wc,t.EVENT_SELECTEND=Xc,t.EVENT_SELECTSTART=jc,t.EVENT_TOUCHCANCEL=Gc,t.EVENT_TOUCHEND=Vc,t.EVENT_TOUCHMOVE=Hc,t.EVENT_TOUCHSTART=zc,t.ElementComponent=_L,t.ElementComponentSystem=CL,t.ElementDragHelper=mP,t.ElementInput=LF,t.ElementInputEvent=SF,t.ElementMouseEvent=EF,t.ElementSelectEvent=AF,t.ElementTouchEvent=TF,t.Entity=gS,t.EntityReference=lT,t.EnvLighting=ww,t.EventHandler=re,t.FILLMODE_FILL_WINDOW=hC,t.FILLMODE_KEEP_ASPECT=pC,t.FILLMODE_NONE=cC,t.FILTER_LINEAR=In,t.FILTER_LINEAR_MIPMAP_LINEAR=Fn,t.FILTER_LINEAR_MIPMAP_NEAREST=kn,t.FILTER_NEAREST=On,t.FILTER_NEAREST_MIPMAP_LINEAR=Dn,t.FILTER_NEAREST_MIPMAP_NEAREST=Rn,t.FITMODE_CONTAIN=fT,t.FITMODE_COVER=gT,t.FITMODE_STRETCH=mT,t.FITTING_BOTH=zL,t.FITTING_NONE=BL,t.FITTING_SHRINK=UL,t.FITTING_STRETCH=NL,t.FOG_EXP=Ou,t.FOG_EXP2=Iu,t.FOG_LINEAR=Pu,t.FOG_NONE=Mu,t.FONT_BITMAP=RA,t.FONT_MSDF=IA,t.FRESNEL_NONE=Ru,t.FRESNEL_SCHLICK=Du,t.FUNC_ALWAYS=Wn,t.FUNC_EQUAL=Un,t.FUNC_GREATER=Vn,t.FUNC_GREATEREQUAL=Gn,t.FUNC_LESS=Nn,t.FUNC_LESSEQUAL=zn,t.FUNC_NEVER=Bn,t.FUNC_NOTEQUAL=Hn,t.FolderHandler=wR,t.Font=bR,t.FontHandler=CR,t.ForwardRenderer=tb,t.Frustum=kt,t.GAMMA_NONE=Nm,t.GAMMA_SRGB=Um,t.GAMMA_SRGBFAST=zm,t.GAMMA_SRGBHDR=Vm,t.GamePads=jd,t.GraphNode=Cv,t.GraphicsDevice=Ur,t.HierarchyHandler=LR,t.HtmlHandler=MR,t.Http=Zd,t.I18n=uS,t.INDEXFORMAT_UINT16=Xn,t.INDEXFORMAT_UINT32=Yn,t.INDEXFORMAT_UINT8=jn,t.INTERPOLATION_CUBIC=jS,t.INTERPOLATION_LINEAR=WS,t.INTERPOLATION_STEP=GS,t.ImageElement=PA,t.IndexBuffer=lc,t.IndexedList=ze,t.JointComponent=LL,t.JointComponentSystem=IL,t.JsonHandler=PR,t.JsonStandardMaterialParser=IR,t.KEY_0=fh,t.KEY_1=gh,t.KEY_2=vh,t.KEY_3=yh,t.KEY_4=_h,t.KEY_5=wh,t.KEY_6=bh,t.KEY_7=xh,t.KEY_8=Ch,t.KEY_9=Sh,t.KEY_A=Ah,t.KEY_ADD=dp,t.KEY_ALT=$c,t.KEY_B=Lh,t.KEY_BACKSPACE=Yc,t.KEY_BACK_SLASH=Rp,t.KEY_C=Mh,t.KEY_CAPS_LOCK=th,t.KEY_CLOSE_BRACKET=Dp,t.KEY_COMMA=Mp,t.KEY_CONTEXT_MENU=ep,t.KEY_CONTROL=Jc,t.KEY_D=Ph,t.KEY_DECIMAL=fp,t.KEY_DELETE=mh,t.KEY_DIVIDE=gp,t.KEY_DOWN=ph,t.KEY_E=Oh,t.KEY_END=rh,t.KEY_ENTER=Zc,t.KEY_EQUAL=Th,t.KEY_ESCAPE=nh,t.KEY_F=Ih,t.KEY_F1=vp,t.KEY_F10=Tp,t.KEY_F11=Ap,t.KEY_F12=Lp,t.KEY_F2=yp,t.KEY_F3=_p,t.KEY_F4=wp,t.KEY_F5=bp,t.KEY_F6=xp,t.KEY_F7=Cp,t.KEY_F8=Sp,t.KEY_F9=Ep,t.KEY_G=Rh,t.KEY_H=Dh,t.KEY_HOME=oh,t.KEY_I=kh,t.KEY_INSERT=uh,t.KEY_J=Fh,t.KEY_K=Bh,t.KEY_L=Nh,t.KEY_LEFT=lh,t.KEY_M=Uh,t.KEY_META=kp,t.KEY_MULTIPLY=pp,t.KEY_N=zh,t.KEY_NUMPAD_0=tp,t.KEY_NUMPAD_1=np,t.KEY_NUMPAD_2=ip,t.KEY_NUMPAD_3=ap,t.KEY_NUMPAD_4=sp,t.KEY_NUMPAD_5=rp,t.KEY_NUMPAD_6=op,t.KEY_NUMPAD_7=lp,t.KEY_NUMPAD_8=cp,t.KEY_NUMPAD_9=hp,t.KEY_O=Vh,t.KEY_OPEN_BRACKET=Ip,t.KEY_P=Hh,t.KEY_PAGE_DOWN=sh,t.KEY_PAGE_UP=ah,t.KEY_PAUSE=eh,t.KEY_PERIOD=Pp,t.KEY_PRINT_SCREEN=dh,t.KEY_Q=Gh,t.KEY_R=Wh,t.KEY_RETURN=Kc,t.KEY_RIGHT=hh,t.KEY_S=jh,t.KEY_SEMICOLON=Eh,t.KEY_SEPARATOR=up,t.KEY_SHIFT=Qc,t.KEY_SLASH=Op,t.KEY_SPACE=ih,t.KEY_SUBTRACT=mp,t.KEY_T=Xh,t.KEY_TAB=qc,t.KEY_U=Yh,t.KEY_UP=ch,t.KEY_V=qh,t.KEY_W=Kh,t.KEY_WINDOWS=$h,t.KEY_X=Zh,t.KEY_Y=Qh,t.KEY_Z=Jh,t.Key=Zx,t.Keyboard=Ld,t.KeyboardEvent=Cd,t.LAYERID_DEPTH=zu,t.LAYERID_IMMEDIATE=Hu,t.LAYERID_SKYBOX=Vu,t.LAYERID_UI=Gu,t.LAYERID_WORLD=Uu,t.LAYER_FX=Bu,t.LAYER_GIZMO=Fu,t.LAYER_HUD=ku,t.LAYER_WORLD=Nu,t.LIGHTFALLOFF_INVERSESQUARED=em,t.LIGHTFALLOFF_LINEAR=$u,t.LIGHTSHAPE_DISK=Qu,t.LIGHTSHAPE_PUNCTUAL=Ku,t.LIGHTSHAPE_RECT=Zu,t.LIGHTSHAPE_SPHERE=Ju,t.LIGHTTYPE_COUNT=qu,t.LIGHTTYPE_DIRECTIONAL=Wu,t.LIGHTTYPE_OMNI=ju,t.LIGHTTYPE_POINT=Xu,t.LIGHTTYPE_SPOT=Yu,t.LINEBATCH_GIZMO=uf,t.LINEBATCH_OVERLAY=df,t.LINEBATCH_WORLD=pf,t.Layer=db,t.LayerComposition=gb,t.LayoutCalculator=qL,t.LayoutChildComponent=RL,t.LayoutChildComponentSystem=FL,t.LayoutGroupComponent=QL,t.LayoutGroupComponentSystem=tM,t.Light=Sb,t.LightComponent=lO,t.LightComponentSystem=dO,t.LightingParams=Eb,t.Lightmapper=US,t.LitMaterial=ky,t.LitOptions=vB,t.LitShaderOptions=ay,t.LocalizedAsset=OA,t.MASK_AFFECT_DYNAMIC=_f,t.MASK_AFFECT_LIGHTMAPPED=wf,t.MASK_BAKE=bf,t.MOTION_FREE=SL,t.MOTION_LIMITED=EL,t.MOTION_LOCKED=TL,t.MOUSEBUTTON_LEFT=Bp,t.MOUSEBUTTON_MIDDLE=Np,t.MOUSEBUTTON_NONE=Fp,t.MOUSEBUTTON_RIGHT=Up,t.Mat3=ut,t.Mat4=St,t.Material=tv,t.MaterialHandler=DR,t.Mesh=og,t.MeshInstance=Dv,t.Model=Mb,t.ModelComponent=nM,t.ModelComponentSystem=sM,t.ModelHandler=WR,t.Morph=Pb,t.MorphInstance=Lb,t.MorphTarget=Ob,t.Mouse=Od,t.MouseEvent=Pd,t.Node=Qx,t.NullGraphicsDevice=sc,t.ORIENTATION_HORIZONTAL=eg,t.ORIENTATION_VERTICAL=tg,t.OrientedBox=Vt,t.PAD_1=zp,t.PAD_2=Vp,t.PAD_3=Hp,t.PAD_4=Gp,t.PAD_DOWN=id,t.PAD_FACE_1=Wp,t.PAD_FACE_2=jp,t.PAD_FACE_3=Xp,t.PAD_FACE_4=Yp,t.PAD_LEFT=ad,t.PAD_L_SHOULDER_1=qp,t.PAD_L_SHOULDER_2=Zp,t.PAD_L_STICK_BUTTON=ed,t.PAD_L_STICK_X=od,t.PAD_L_STICK_Y=ld,t.PAD_RIGHT=sd,t.PAD_R_SHOULDER_1=Kp,t.PAD_R_SHOULDER_2=Qp,t.PAD_R_STICK_BUTTON=td,t.PAD_R_STICK_X=cd,t.PAD_R_STICK_Y=hd,t.PAD_SELECT=Jp,t.PAD_START=$p,t.PAD_UP=nd,t.PAD_VENDOR=rd,t.PARTICLEMODE_CPU=vm,t.PARTICLEMODE_GPU=gm,t.PARTICLEORIENTATION_EMITTER=xm,t.PARTICLEORIENTATION_SCREEN=wm,t.PARTICLEORIENTATION_WORLD=bm,t.PARTICLESORT_DISTANCE=um,t.PARTICLESORT_NEWER_FIRST=mm,t.PARTICLESORT_NONE=dm,t.PARTICLESORT_OLDER_FIRST=fm,t.PIXELFORMAT_111110F=di,t.PIXELFORMAT_A8=qn,t.PIXELFORMAT_ASTC_4x4=xi,t.PIXELFORMAT_ATC_RGB=Ci,t.PIXELFORMAT_ATC_RGBA=Si,t.PIXELFORMAT_BGRA8=Ei,t.PIXELFORMAT_DEPTH=hi,t.PIXELFORMAT_DEPTHSTENCIL=pi,t.PIXELFORMAT_DXT1=ni,t.PIXELFORMAT_DXT3=ii,t.PIXELFORMAT_DXT5=ai,t.PIXELFORMAT_ETC1=fi,t.PIXELFORMAT_ETC2_RGB=gi,t.PIXELFORMAT_ETC2_RGBA=vi,t.PIXELFORMAT_L8=Kn,t.PIXELFORMAT_L8_A8=ZF,t.PIXELFORMAT_LA8=Zn,t.PIXELFORMAT_PVRTC_2BPP_RGBA_1=_i,t.PIXELFORMAT_PVRTC_2BPP_RGB_1=yi,t.PIXELFORMAT_PVRTC_4BPP_RGBA_1=bi,t.PIXELFORMAT_PVRTC_4BPP_RGB_1=wi,t.PIXELFORMAT_R32F=ci,t.PIXELFORMAT_R4_G4_B4_A4=$F,t.PIXELFORMAT_R5_G5_B5_A1=JF,t.PIXELFORMAT_R5_G6_B5=QF,t.PIXELFORMAT_R8_G8_B8=eB,t.PIXELFORMAT_R8_G8_B8_A8=tB,t.PIXELFORMAT_RGB16F=si,t.PIXELFORMAT_RGB32F=oi,t.PIXELFORMAT_RGB565=Qn,t.PIXELFORMAT_RGB8=ei,t.PIXELFORMAT_RGBA16F=ri,t.PIXELFORMAT_RGBA32F=li,t.PIXELFORMAT_RGBA4=$n,t.PIXELFORMAT_RGBA5551=Jn,t.PIXELFORMAT_RGBA8=ti,t.PIXELFORMAT_SRGB=ui,t.PIXELFORMAT_SRGBA=mi,t.PRIMITIVE_LINELOOP=Oi,t.PRIMITIVE_LINES=Pi,t.PRIMITIVE_LINESTRIP=Ii,t.PRIMITIVE_POINTS=Mi,t.PRIMITIVE_TRIANGLES=Ri,t.PRIMITIVE_TRIFAN=ki,t.PRIMITIVE_TRISTRIP=Di,t.PROJECTION_ORTHOGRAPHIC=Sm,t.PROJECTION_PERSPECTIVE=Cm,t.ParticleEmitter=kx,t.ParticleSystemComponent=pM,t.ParticleSystemComponentSystem=mM,t.PhongMaterial=gB,t.Picker=Yk,t.Plane=Ht,t.PostEffect=nC,t.PostEffectQueue=tO,t.ProgramLibrary=oC,t.QuadRender=Vg,t.Quat=Et,t.RENDERSTYLE_POINTS=Am,t.RENDERSTYLE_SOLID=Em,t.RENDERSTYLE_WIREFRAME=Tm,t.RESOLUTION_AUTO=dC,t.RESOLUTION_FIXED=uC,t.RIGIDBODY_ACTIVE_TAG=DB,t.RIGIDBODY_CF_KINEMATIC_OBJECT=IB,t.RIGIDBODY_CF_NORESPONSE_OBJECT=RB,t.RIGIDBODY_CF_STATIC_OBJECT=OB,t.RIGIDBODY_DISABLE_DEACTIVATION=BB,t.RIGIDBODY_DISABLE_SIMULATION=NB,t.RIGIDBODY_ISLAND_SLEEPING=kB,t.RIGIDBODY_TYPE_DYNAMIC=MB,t.RIGIDBODY_TYPE_KINEMATIC=PB,t.RIGIDBODY_TYPE_STATIC=LB,t.RIGIDBODY_WANTS_DEACTIVATION=FB,t.Ray=Ft,t.RaycastResult=kM,t.ReadStream=We,t.RenderComponent=yM,t.RenderComponentSystem=xM,t.RenderHandler=kO,t.RenderTarget=Vr,t.ResourceHandler=qk,t.ResourceLoader=pS,t.RigidBodyComponent=RM,t.RigidBodyComponentSystem=zM,t.SAMPLETYPE_DEPTH=Ha,t.SAMPLETYPE_FLOAT=za,t.SAMPLETYPE_UNFILTERABLE_FLOAT=Va,t.SCALEMODE_BLEND=HM,t.SCALEMODE_NONE=VM,t.SCROLLBAR_VISIBILITY_SHOW_ALWAYS=yP,t.SCROLLBAR_VISIBILITY_SHOW_WHEN_REQUIRED=_P,t.SCROLL_MODE_BOUNCE=gP,t.SCROLL_MODE_CLAMP=fP,t.SCROLL_MODE_INFINITE=vP,t.SEMANTIC_ATTR=Qi,t.SEMANTIC_ATTR0=Ji,t.SEMANTIC_ATTR1=$i,t.SEMANTIC_ATTR10=la,t.SEMANTIC_ATTR11=ca,t.SEMANTIC_ATTR12=ha,t.SEMANTIC_ATTR13=pa,t.SEMANTIC_ATTR14=da,t.SEMANTIC_ATTR15=ua,t.SEMANTIC_ATTR2=ea,t.SEMANTIC_ATTR3=ta,t.SEMANTIC_ATTR4=na,t.SEMANTIC_ATTR5=ia,t.SEMANTIC_ATTR6=aa,t.SEMANTIC_ATTR7=sa,t.SEMANTIC_ATTR8=ra,t.SEMANTIC_ATTR9=oa,t.SEMANTIC_BLENDINDICES=zi,t.SEMANTIC_BLENDWEIGHT=Ui,t.SEMANTIC_COLOR=Vi,t.SEMANTIC_NORMAL=Bi,t.SEMANTIC_POSITION=Fi,t.SEMANTIC_TANGENT=Ni,t.SEMANTIC_TEXCOORD=Hi,t.SEMANTIC_TEXCOORD0=Gi,t.SEMANTIC_TEXCOORD1=Wi,t.SEMANTIC_TEXCOORD2=ji,t.SEMANTIC_TEXCOORD3=Xi,t.SEMANTIC_TEXCOORD4=Yi,t.SEMANTIC_TEXCOORD5=qi,t.SEMANTIC_TEXCOORD6=Ki,t.SEMANTIC_TEXCOORD7=Zi,t.SHADERDEF_DIRLM=af,t.SHADERDEF_INSTANCING=tf,t.SHADERDEF_LM=nf,t.SHADERDEF_LMAMBIENT=hf,t.SHADERDEF_MORPH_NORMAL=lf,t.SHADERDEF_MORPH_POSITION=of,t.SHADERDEF_MORPH_TEXTURE_BASED=cf,t.SHADERDEF_NOSHADOW=Zm,t.SHADERDEF_SCREENSPACE=sf,t.SHADERDEF_SKIN=Qm,t.SHADERDEF_TANGENTS=rf,t.SHADERDEF_UV0=Jm,t.SHADERDEF_UV1=$m,t.SHADERDEF_VCOLOR=ef,t.SHADERLANGUAGE_GLSL=Ya,t.SHADERLANGUAGE_WGSL=qa,t.SHADERPASS_ALBEDO=Lf,t.SHADERPASS_AO=Df,t.SHADERPASS_EMISSION=kf,t.SHADERPASS_FORWARD=Af,t.SHADERPASS_GLOSS=If,t.SHADERPASS_LIGHTING=Ff,t.SHADERPASS_METALNESS=Rf,t.SHADERPASS_OPACITY=Pf,t.SHADERPASS_SPECULARITY=Of,t.SHADERPASS_UV0=Bf,t.SHADERPASS_WORLDNORMAL=Mf,t.SHADERSTAGE_COMPUTE=Ds,t.SHADERSTAGE_FRAGMENT=Rs,t.SHADERSTAGE_VERTEX=Is,t.SHADERTAG_MATERIAL=ma,t.SHADER_DEPTH=Sf,t.SHADER_FORWARD=xf,t.SHADER_FORWARDHDR=Cf,t.SHADER_PICK=Ef,t.SHADER_SHADOW=Tf,t.SHADOWUPDATE_NONE=mf,t.SHADOWUPDATE_REALTIME=gf,t.SHADOWUPDATE_THISFRAME=ff,t.SHADOW_DEPTH=nm,t.SHADOW_PCF1=om,t.SHADOW_PCF3=tm,t.SHADOW_PCF5=rm,t.SHADOW_PCSS=lm,t.SHADOW_VSM16=am,t.SHADOW_VSM32=sm,t.SHADOW_VSM8=im,t.SORTKEY_DEPTH=yf,t.SORTKEY_FORWARD=vf,t.SORTMODE_BACK2FRONT=Kf,t.SORTMODE_CUSTOM=Qf,t.SORTMODE_FRONT2BACK=Zf,t.SORTMODE_MANUAL=Yf,t.SORTMODE_MATERIALMESH=qf,t.SORTMODE_NONE=Xf,t.SPECOCC_AO=qm,t.SPECOCC_GLOSSDEPENDENT=Km,t.SPECOCC_NONE=Ym,t.SPECULAR_BLINN=Om,t.SPECULAR_PHONG=Pm,t.SPRITETYPE_ANIMATED=BP,t.SPRITETYPE_SIMPLE=FP,t.SPRITE_RENDERMODE_SIMPLE=Nf,t.SPRITE_RENDERMODE_SLICED=Uf,t.SPRITE_RENDERMODE_TILED=zf,t.STENCILOP_DECREMENT=wa,t.STENCILOP_DECREMENTWRAP=ba,t.STENCILOP_INCREMENT=ya,t.STENCILOP_INCREMENTWRAP=_a,t.STENCILOP_INVERT=xa,t.STENCILOP_KEEP=fa,t.STENCILOP_REPLACE=va,t.STENCILOP_ZERO=ga,t.Scene=Wx,t.SceneHandler=jR,t.SceneRegistry=_S,t.SceneRegistryItem=yS,t.SceneSettingsHandler=Kk,t.ScopeId=Tr,t.ScopeSpace=Ar,t.ScreenComponent=WM,t.ScreenComponentSystem=YM,t.ScriptAttributes=gO,t.ScriptComponent=xO,t.ScriptComponentSystem=PO,t.ScriptHandler=XR,t.ScriptLegacyComponent=qM,t.ScriptLegacyComponentSystem=sP,t.ScriptRegistry=mS,t.ScriptType=PF,t.ScrollViewComponent=bP,t.ScrollViewComponentSystem=EP,t.ScrollbarComponent=TP,t.ScrollbarComponentSystem=MP,t.Shader=Qo,t.ShaderHandler=YR,t.ShaderPass=Yg,t.SingleContactResult=FM,t.Skeleton=eC,t.Skin=jx,t.SkinBatchInstance=ov,t.SkinInstance=rv,t.SortedLoopArray=je,t.Sound=lu,t.SoundComponent=IP;t.SoundComponentSystem=kP,t.SoundInstance=uu,t.SoundInstance3d=fu,t.SoundManager=ou,t.SoundSlot=OP,t.Sprite=qx,t.SpriteAnimationClip=NP,t.SpriteComponent=XP,t.SpriteComponentSystem=KP,t.SpriteHandler=ZR,t.StandardMaterial=zw,t.StandardMaterialOptions=bw,t.StencilParameters=Nr,t.TEXHINT_ASSET=Ia,t.TEXHINT_LIGHTMAP=Ra,t.TEXHINT_NONE=Pa,t.TEXHINT_SHADOWMAP=Oa,t.TEXTUREDIMENSION_1D=Da,t.TEXTUREDIMENSION_2D=ka,t.TEXTUREDIMENSION_2D_ARRAY=Fa,t.TEXTUREDIMENSION_3D=Ua,t.TEXTUREDIMENSION_CUBE=Ba,t.TEXTUREDIMENSION_CUBE_ARRAY=Na,t.TEXTURELOCK_READ=Ca,t.TEXTURELOCK_WRITE=Sa,t.TEXTUREPROJECTION_CUBE=Wa,t.TEXTUREPROJECTION_EQUIRECT=ja,t.TEXTUREPROJECTION_NONE=Ga,t.TEXTUREPROJECTION_OCTAHEDRAL=Xa,t.TEXTURETYPE_DEFAULT=Ea,t.TEXTURETYPE_RGBE=Aa,t.TEXTURETYPE_RGBM=Ta,t.TEXTURETYPE_RGBP=La,t.TEXTURETYPE_SWIZZLEGGGR=Ma,t.TONEMAP_ACES=jm,t.TONEMAP_ACES2=Xm,t.TONEMAP_FILMIC=Gm,t.TONEMAP_HEJL=Wm,t.TONEMAP_LINEAR=Hm,t.TRACEID_BINDGROUPFORMAT_ALLOC=L,t.TRACEID_BINDGROUP_ALLOC=A,t.TRACEID_GPU_TIMINGS=D,t.TRACEID_PIPELINELAYOUT_ALLOC=P,t.TRACEID_RENDERPIPELINE_ALLOC=M,t.TRACEID_RENDER_ACTION=_,t.TRACEID_RENDER_FRAME=f,t.TRACEID_RENDER_FRAME_TIME=g,t.TRACEID_RENDER_PASS=v,t.TRACEID_RENDER_PASS_DETAIL=y,t.TRACEID_RENDER_QUEUE=R,t.TRACEID_RENDER_TARGET_ALLOC=w,t.TRACEID_SHADER_ALLOC=x,t.TRACEID_SHADER_COMPILE=C,t.TRACEID_TEXTURES=I,t.TRACEID_TEXTURE_ALLOC=b,t.TRACEID_VRAM_IB=T,t.TRACEID_VRAM_TEXTURE=S,t.TRACEID_VRAM_VB=E,t.TRACE_ID_ELEMENT=O,t.TYPE_FLOAT32=ts,t.TYPE_INT16=Qa,t.TYPE_INT32=$a,t.TYPE_INT8=Ka,t.TYPE_UINT16=Ja,t.TYPE_UINT32=es,t.TYPE_UINT8=Za,t.Tags=Xe,t.Template=QR,t.TemplateHandler=JR,t.TextElement=hL,t.TextHandler=$R,t.Texture=vl,t.TextureAtlas=Kx,t.TextureAtlasHandler=iD,t.TextureHandler=DD,t.TextureParser=ID,t.TextureUtils=Io,t.Touch=Yd,t.TouchDevice=Kd,t.TouchEvent=qd,t.Tracing=ae,t.TransformFeedback=cc,t.UNIFORMTYPE_BOOL=ns,t.UNIFORMTYPE_BVEC2=ps,t.UNIFORMTYPE_BVEC3=ds,t.UNIFORMTYPE_BVEC4=us,t.UNIFORMTYPE_FLOAT=as,t.UNIFORMTYPE_FLOATARRAY=_s,t.UNIFORMTYPE_INT=is,t.UNIFORMTYPE_IVEC2=ls,t.UNIFORMTYPE_IVEC3=cs,t.UNIFORMTYPE_IVEC4=hs,t.UNIFORMTYPE_MAT2=ms,t.UNIFORMTYPE_MAT3=fs,t.UNIFORMTYPE_MAT4=gs,t.UNIFORMTYPE_MAT4ARRAY=Ts,t.UNIFORMTYPE_TEXTURE2D=vs,t.UNIFORMTYPE_TEXTURE2D_SHADOW=ws,t.UNIFORMTYPE_TEXTURE3D=xs,t.UNIFORMTYPE_TEXTURECUBE=ys,t.UNIFORMTYPE_TEXTURECUBE_SHADOW=bs,t.UNIFORMTYPE_VEC2=ss,t.UNIFORMTYPE_VEC2ARRAY=Cs,t.UNIFORMTYPE_VEC3=rs,t.UNIFORMTYPE_VEC3ARRAY=Ss,t.UNIFORMTYPE_VEC4=os,t.UNIFORMTYPE_VEC4ARRAY=Es,t.UNIFORM_BUFFER_DEFAULT_SLOT_NAME=Ns,t.URI=Qe,t.UnsupportedBrowserError=rB,t.VIEW_CENTER=Gf,t.VIEW_LEFT=Wf,t.VIEW_RIGHT=jf,t.Vec2=ft,t.Vec3=pt,t.Vec4=vt,t.VertexBuffer=Mr,t.VertexFormat=Fr,t.VertexIterator=Cc,t.WasmModule=Ge,t.WebglGraphicsDevice=$l,t.WebgpuGraphicsDevice=fl,t.WorldClusters=Hy,t.XRDEPTHSENSINGFORMAT_F32=tk,t.XRDEPTHSENSINGFORMAT_L8A8=ek,t.XRDEPTHSENSINGUSAGE_CPU=JD,t.XRDEPTHSENSINGUSAGE_GPU=$D,t.XRHAND_LEFT=YD,t.XRHAND_NONE=XD,t.XRHAND_RIGHT=qD,t.XRPAD_A=bd,t.XRPAD_B=xd,t.XRPAD_SQUEEZE=_d,t.XRPAD_STICK_BUTTON=wd,t.XRPAD_STICK_X=fd,t.XRPAD_STICK_Y=gd,t.XRPAD_TOUCHPAD_BUTTON=vd,t.XRPAD_TOUCHPAD_X=ud,t.XRPAD_TOUCHPAD_Y=md,t.XRPAD_TRIGGER=yd,t.XRSPACE_BOUNDEDFLOOR=VD,t.XRSPACE_LOCAL=UD,t.XRSPACE_LOCALFLOOR=zD,t.XRSPACE_UNBOUNDED=HD,t.XRSPACE_VIEWER=ND,t.XRTARGETRAY_GAZE=GD,t.XRTARGETRAY_POINTER=jD,t.XRTARGETRAY_SCREEN=WD,t.XRTRACKABLE_MESH=QD,t.XRTRACKABLE_PLANE=ZD,t.XRTRACKABLE_POINT=KD,t.XRTYPE_AR=BD,t.XRTYPE_INLINE=kD,t.XRTYPE_VR=FD,t.XrAnchor=Dk,t.XrAnchors=kk,t.XrDepthSensing=nk,t.XrDomOverlay=ik,t.XrHitTest=ok,t.XrHitTestSource=rk,t.XrImageTracking=ck,t.XrInput=Ek,t.XrInputSource=Sk,t.XrLightEstimation=Pk,t.XrManager=Fk,t.XrPlane=Ik,t.XrPlaneDetection=Rk,t.XrTrackedImage=lk,t.ZoneComponent=ZP,t.ZoneComponentSystem=$P,t.anim=SB,t.apps=U,t.asset=TB,t.audio=EB,t.basisInitialize=gD,t.basisSetDownloadConfig=UB,t.bindGroupNames=Bs,t.calculateNormals=pg,t.calculateTangents=dg,t.common=N,t.config=B,t.createBox=bg,t.createCapsule=vg,t.createCone=yg,t.createCylinder=gg,t.createGraphicsDevice=rc,t.createMesh=ug,t.createPlane=wg,t.createScript=RF,t.createShader=Dg,t.createShaderFromCode=kg,t.createSphere=_g,t.createStyle=VF,t.createTorus=mg,t.createURI=qe,t.data=z,t.dracoInitialize=KO,t.drawFullscreenQuad=pB,t.drawQuadWithShader=Gg,t.drawTexture=Wg,t.events=oe,t.extend=G,t.getPixelFormatArrayType=Li,t.getReservedScriptNames=IF,t.getTouchTargetCoords=Xd,t.gfx=cB,t.guid=le,t.http=Qd,t.inherits=UF,t.input=AB,t.isCompressedPixelFormat=Ai,t.log=FF,t.makeArray=zF,t.math=at,t.now=Ye,t.path=ce,t.pixelFormatInfo=Ti,t.platform=we,t.posteffect=dB,t.prefilterCubemap=zB,t.programlib=lB,t.registerScript=kF,t.reprojectTexture=dw,t.revision=F,t.scene=yB,t.script=_C,t.semanticToLocation=js,t.shFromCubemap=sC,t.shaderChunks=Mg,t.shaderChunksLightmapper=lC,t.shadowTypeToString=cm,t.shape=HF,t.string=Ue,t.time=NF,t.type=H,t.typedArrayIndexFormats=Gs,t.typedArrayIndexFormatsByteSize=Ws,t.typedArrayToType=Hs,t.typedArrayTypes=Us,t.typedArrayTypesByteSize=zs,t.uniformTypeToName=As,t.version=k,t.vertexTypesNames=Vs}(lo.exports);var co,ho=function(e){var t=i.exports.useState({showParameters:!1,showCode:!0,collapsed:window.top.innerWidth<er}),n=t[0],a=t[1];i.exports.useEffect((function(){window.top.innerWidth<er&&(document.getElementById("controlPanel-controls").ui.hidden=!0),0===window.top.location.hash.indexOf("#/iframe")&&(document.getElementById("controlPanel").ui.hidden=!0)}));var s=e.controls?e.controls(window.observerData):null;return p.createElement(_t,{id:"controls-wrapper",class:e.controls?"has-controls":null},window.top.innerWidth<er&&e.controls&&p.createElement(_t,{id:"controlPanel-tabs",class:"tabs-container"},p.createElement(Xe,{text:"CODE",id:"codeButton",class:n.showCode?"selected":null,onClick:function(){document.getElementById("codeButton").classList.contains("selected")||(a({showParameters:!1,showCode:!0,collapsed:!1}),document.getElementById("paramButton").classList.remove("selected"),document.getElementById("codeButton").classList.add("selected"),document.getElementById("controlPanel-controls").classList.add("pcui-hidden"))}}),p.createElement(Xe,{text:"PARAMETERS",class:n.showParameters?"selected":null,id:"paramButton",onClick:function(){document.getElementById("paramButton").classList.contains("selected")||(a({showParameters:!0,showCode:!1,collapsed:!1}),document.getElementById("paramButton").classList.add("selected"),document.getElementById("codeButton").classList.remove("selected"),document.getElementById("controlPanel-controls").classList.remove("pcui-hidden"))}})),p.createElement(_t,{id:"controlPanel-controls"},s),window.top.innerWidth<er&&n.showCode&&p.createElement($r,{options:{readOnly:!0},defaultLanguage:"typescript",value:e.files?e.files[0].text:""}))},po=((co={})[lo.exports.DEVICETYPE_WEBGL1]="WebGL 1",co[lo.exports.DEVICETYPE_WEBGL2]="WebGL 2",co[lo.exports.DEVICETYPE_WEBGPU]="WebGPU",co[lo.exports.DEVICETYPE_NULL]="Null",co),uo=new x,mo=function(e){var t=document.getElementsByTagName("iframe")[0].contentWindow.Example.prototype.controls||null;return!t&&window.top.innerWidth>=er?null:p.createElement(ho,{controls:t,files:e.files})},fo=function(e){function t(t){var n=e.call(this,t)||this;return n.state={exampleLoaded:!1},window.addEventListener("exampleLoading",(function(){n.setState({exampleLoaded:!1})})),window.addEventListener("exampleLoad",(function(){n.setState({exampleLoaded:!0});var e=window.pc.app.graphicsDevice.deviceType;uo.emit("updateActiveDevice",e)})),n}return ro(t,e),t.prototype.componentDidUpdate=function(e){e.path!==this.props.path&&this.setState({exampleLoaded:!1})},t.prototype.render=function(){return p.createElement(p.Fragment,null,this.state.exampleLoaded&&p.createElement(mo,oo({},this.props)))},t}(i.exports.Component),go=function(e){function t(t){var n=e.call(this,t)||this;return n.setDisabledOptions=function(e,t){var i,a,s;void 0===e&&(e="webgpu");var r=n.deviceTypeSelectInput;e!==lo.exports.DEVICETYPE_WEBGL2&&e!==lo.exports.DEVICETYPE_WEBGPU||t!==lo.exports.DEVICETYPE_WEBGL1?e===lo.exports.DEVICETYPE_WEBGL1&&t===lo.exports.DEVICETYPE_WEBGL2?(r.fallbackOrder=[lo.exports.DEVICETYPE_WEBGL1,lo.exports.DEVICETYPE_WEBGL2,lo.exports.DEVICETYPE_WEBGPU],r.disabledOptions=((a={})[lo.exports.DEVICETYPE_WEBGL1]="WebGL 1 (not supported)",a)):e===lo.exports.DEVICETYPE_WEBGPU&&t!==lo.exports.DEVICETYPE_WEBGPU?(r.fallbackOrder=[lo.exports.DEVICETYPE_WEBGPU,lo.exports.DEVICETYPE_WEBGL2,lo.exports.DEVICETYPE_WEBGL1],r.disabledOptions=((s={})[lo.exports.DEVICETYPE_WEBGPU]="WebGPU (not supported)",s)):r.disabledOptions=null:(r.fallbackOrder=[lo.exports.DEVICETYPE_WEBGPU,lo.exports.DEVICETYPE_WEBGL2,lo.exports.DEVICETYPE_WEBGL1],r.disabledOptions=((i={})[lo.exports.DEVICETYPE_WEBGPU]="WebGPU (not supported)",i[lo.exports.DEVICETYPE_WEBGL2]="WebGL 2 (not supported)",i))},n.onSetActiveGraphicsDevice=function(e){n.preferredGraphicsDevice||(n.preferredGraphicsDevice=e,n.deviceTypeSelectInput.value=e),n.setDisabledOptions(n.preferredGraphicsDevice,e),document.getElementById("showMiniStatsButton").ui.enabled=e!==lo.exports.DEVICETYPE_WEBGPU&&e!==lo.exports.DEVICETYPE_NULL},n.onSetPreferredGraphicsDevice=function(e){n.deviceTypeSelectInput.disabledOptions=null,n.deviceTypeSelectInput.value=e,n.preferredGraphicsDevice=e,document.getElementById("exampleIframe").contentWindow.location.reload()},n.deviceTypeSelectInputRef=p.createRef(),uo.on("updateActiveDevice",n.onSetActiveGraphicsDevice),n}return ro(t,e),Object.defineProperty(t.prototype,"defaultFiles",{get:function(){return $s.paths[this.path].files},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"path",{get:function(){return"/".concat(this.props.match.params.category,"/").concat(this.props.match.params.example)},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"iframePath",{get:function(){var e=$s.paths[this.path];return"/iframe/?category=".concat(e.category,"&example=").concat(e.name)},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"deviceTypeSelectInput",{get:function(){return this.deviceTypeSelectInputRef.current.element},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"preferredGraphicsDevice",{get:function(){return window.preferredGraphicsDevice},set:function(e){window.preferredGraphicsDevice=e},enumerable:!1,configurable:!0}),t.prototype.componentDidMount=function(){window.localStorage.removeItem(this.path),this.props.setFiles(this.defaultFiles)},t.prototype.shouldComponentUpdate=function(e){var t=this;return this.props.match.params.category!==e.match.params.category||this.props.match.params.example!==e.match.params.example||window.top.innerWidth<er&&t.props.files!==e.files},t.prototype.componentDidUpdate=function(){window.localStorage.removeItem(this.path),delete window.editedFiles,this.props.setFiles(this.defaultFiles)},t.prototype.render=function(){var e=this.iframePath;return p.createElement(_t,{id:"canvas-container"},p.createElement(Ei,{size:50}),p.createElement("iframe",{id:"exampleIframe",key:e,src:e}),p.createElement(ti,{id:"controlPanel",class:[window.top.innerWidth<er?"mobile":null],resizable:"top",headerText:window.top.innerWidth<er?"CODE & CONTROLS":"CONTROLS",collapsible:!0,collapsed:window.top.innerWidth<er},p.createElement(pi,{id:"deviceTypeSelectInput",options:[{t:po[lo.exports.DEVICETYPE_WEBGL1],v:lo.exports.DEVICETYPE_WEBGL1},{t:po[lo.exports.DEVICETYPE_WEBGL2],v:lo.exports.DEVICETYPE_WEBGL2},{t:po[lo.exports.DEVICETYPE_WEBGPU],v:lo.exports.DEVICETYPE_WEBGPU},{t:po[lo.exports.DEVICETYPE_NULL],v:lo.exports.DEVICETYPE_NULL}],onSelect:this.onSetPreferredGraphicsDevice,prefix:"Active Device: ",ref:this.deviceTypeSelectInputRef}),p.createElement(fo,{path:this.path,files:this.props.files})))},t}(i.exports.Component),vo=function(e){var t="withRouter("+(e.displayName||e.name)+")",n=function(t){var n=t.wrappedComponentRef,i=os(t,["wrappedComponentRef"]);return p.createElement(Ts.Consumer,null,(function(t){return t||Oa(!1),p.createElement(e,Ea({},i,t,{ref:n}))}))};return n.displayName=t,n.WrappedComponent=e,ws(n,e)}(go);window.pcui=da,window.React=p;h(document.getElementById("app")).render(p.createElement((function(){var e=i.exports.useState([{name:"example.ts",text:""}]),t=e[0],n=e[1],a=i.exports.useState(!1),s=a[0],r=a[1],o=i.exports.useState("true"===localStorage.getItem("useTypeScript")),l=o[0],c=o[1],h=i.exports.createRef(),d=i.exports.createRef();return i.exports.useEffect((function(){h.current&&(h.current.element.unbind(),h.current.element.on("click",(function(){document.getElementById("exampleIframe").contentWindow.location.reload()}))),d.current&&(d.current.element.unbind(),d.current.element.on("click",(function(){localStorage.setItem("useTypeScript",l?"false":"true"),c(!l)})))})),p.createElement("div",{id:"appInner"},p.createElement(zs,null,p.createElement(Us,null,p.createElement(Ns,{exact:!0,path:"/"},p.createElement(Rs,{to:"/misc/hello-world"})),p.createElement(Ns,{path:"/:category/:example"},p.createElement(nr,null),p.createElement(_t,{id:"main-view-wrapper"},p.createElement(ao,{useTypeScript:l,setShowMiniStats:function(e){window._showMiniStats=e}}),p.createElement(_t,{id:"main-view"},p.createElement(io,{lintErrors:s,setLintErrors:r,playButtonRef:h,languageButtonRef:d,useTypeScript:l,files:t,setFiles:n}),p.createElement(vo,{files:t,setFiles:n,useTypeScript:l})))))))}),null));
