/**
 * @license
 * PlayCanvas Engine v1.59.0-preview revision 797466563 (DEBUG PROFILER)
 * Copyright 2011-2022 PlayCanvas Ltd. All rights reserved.
 */
import { Debug } from '../../core/debug.js';
import { WebgpuGraphicsDevice } from './webgpu/webgpu-graphics-device.js';
import { DEVICETYPE_WEBGL, DEVICETYPE_WEBGPU } from './constants.js';
import { WebglGraphicsDevice } from './webgl/webgl-graphics-device.js';

function createGraphicsDevice(canvas, options = {}) {
  var _options$deviceTypes;
  options.deviceTypes = (_options$deviceTypes = options.deviceTypes) != null ? _options$deviceTypes : [DEVICETYPE_WEBGL];
  let device;
  for (let i = 0; i < options.deviceTypes.length; i++) {
    var _window, _window$navigator;
    const deviceType = options.deviceTypes[i];
    if (deviceType === DEVICETYPE_WEBGPU && (_window = window) != null && (_window$navigator = _window.navigator) != null && _window$navigator.gpu) {
      device = new WebgpuGraphicsDevice(canvas, options);
      return device.initWebGpu(options.glslangUrl);
    }
    if (deviceType === DEVICETYPE_WEBGL) {
      device = new WebglGraphicsDevice(canvas, options);
      return Promise.resolve(device);
    }
  }
  Debug.assert(device, 'Failed to allocate graphics device based on requested device types: ', options.deviceTypes);
  return Promise.reject(new Error("Failed to allocated graphics device"));
}

export { createGraphicsDevice };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ3JhcGhpY3MtZGV2aWNlLWNyZWF0ZS5qcyIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vc3JjL3BsYXRmb3JtL2dyYXBoaWNzL2dyYXBoaWNzLWRldmljZS1jcmVhdGUuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRGVidWcgfSBmcm9tICcuLi8uLi9jb3JlL2RlYnVnLmpzJztcblxuLy8gI2lmIF9ERUJVR1xuaW1wb3J0IHsgV2ViZ3B1R3JhcGhpY3NEZXZpY2UgfSBmcm9tICcuL3dlYmdwdS93ZWJncHUtZ3JhcGhpY3MtZGV2aWNlLmpzJztcbi8vICNlbmRpZlxuXG5pbXBvcnQgeyBERVZJQ0VUWVBFX1dFQkdMLCBERVZJQ0VUWVBFX1dFQkdQVSB9IGZyb20gJy4vY29uc3RhbnRzLmpzJztcbmltcG9ydCB7IFdlYmdsR3JhcGhpY3NEZXZpY2UgfSBmcm9tICcuL3dlYmdsL3dlYmdsLWdyYXBoaWNzLWRldmljZS5qcyc7XG5cbi8qKlxuICogQ3JlYXRlcyBhIGdyYXBoaWNzIGRldmljZS5cbiAqXG4gKiBAcGFyYW0ge0VsZW1lbnR9IGNhbnZhcyAtIFRoZSBjYW52YXMgZWxlbWVudC5cbiAqIEBwYXJhbSB7b2JqZWN0fSBvcHRpb25zIC0gR3JhcGhpY3MgZGV2aWNlIG9wdGlvbnMuXG4gKiBAcGFyYW0ge3N0cmluZ1tdfSBbb3B0aW9ucy5kZXZpY2VUeXBlc10gLSBBbiBhcnJheSBvZiBERVZJQ0VUWVBFXyoqKiBjb25zdGFudHMsIGRlZmluaW5nIHRoZVxuICogb3JkZXIgaW4gd2hpY2ggdGhlIGRldmljZSBhcmUgYXR0ZW1wdGVkIHRvIGdldCBjcmVhdGVkLiBEZWZhdWx0cyB0byBbe0BsaW5rIERFVklDRVRZUEVfV0VCR0x9XS5cbiAqIEBwYXJhbSB7c3RyaW5nfSBbb3B0aW9ucy5nbHNsYW5nVXJsXSAtIEFuIHVybCB0byBnbHNsYW5nIHNjaXB0LCByZXF1aXJlZCBpZlxuICoge0BsaW5rIERFVklDRVRZUEVfV0VCR1BVfSB0eXBlIGlzIGFkZGVkIHRvIGRldmljZVR5cGVzIGFycmF5LiBOb3QgdXNlZCBmb3JcbiAqIHtAbGluayBERVZJQ0VUWVBFX1dFQkdMfSBkZXZpY2UgdHlwZSBjcmVhdGlvbi5cbiAqIEByZXR1cm5zIHtQcm9taXNlfSAtIFByb21pc2Ugb2JqZWN0IHJlcHJlc2VudGluZyB0aGUgY3JlYXRlZCBncmFwaGljcyBkZXZpY2UuXG4gKi9cbmZ1bmN0aW9uIGNyZWF0ZUdyYXBoaWNzRGV2aWNlKGNhbnZhcywgb3B0aW9ucyA9IHt9KSB7XG4gICAgb3B0aW9ucy5kZXZpY2VUeXBlcyA9IG9wdGlvbnMuZGV2aWNlVHlwZXMgPz8gW0RFVklDRVRZUEVfV0VCR0xdO1xuXG4gICAgbGV0IGRldmljZTtcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IG9wdGlvbnMuZGV2aWNlVHlwZXMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgY29uc3QgZGV2aWNlVHlwZSA9IG9wdGlvbnMuZGV2aWNlVHlwZXNbaV07XG5cbiAgICAgICAgLy8gI2lmIF9ERUJVR1xuICAgICAgICBpZiAoZGV2aWNlVHlwZSA9PT0gREVWSUNFVFlQRV9XRUJHUFUgJiYgd2luZG93Py5uYXZpZ2F0b3I/LmdwdSkge1xuICAgICAgICAgICAgZGV2aWNlID0gbmV3IFdlYmdwdUdyYXBoaWNzRGV2aWNlKGNhbnZhcywgb3B0aW9ucyk7XG4gICAgICAgICAgICByZXR1cm4gZGV2aWNlLmluaXRXZWJHcHUob3B0aW9ucy5nbHNsYW5nVXJsKTtcbiAgICAgICAgfVxuICAgICAgICAvLyAjZW5kaWZcblxuICAgICAgICBpZiAoZGV2aWNlVHlwZSA9PT0gREVWSUNFVFlQRV9XRUJHTCkge1xuICAgICAgICAgICAgZGV2aWNlID0gbmV3IFdlYmdsR3JhcGhpY3NEZXZpY2UoY2FudmFzLCBvcHRpb25zKTtcbiAgICAgICAgICAgIHJldHVybiBQcm9taXNlLnJlc29sdmUoZGV2aWNlKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIERlYnVnLmFzc2VydChkZXZpY2UsICdGYWlsZWQgdG8gYWxsb2NhdGUgZ3JhcGhpY3MgZGV2aWNlIGJhc2VkIG9uIHJlcXVlc3RlZCBkZXZpY2UgdHlwZXM6ICcsIG9wdGlvbnMuZGV2aWNlVHlwZXMpO1xuICAgIHJldHVybiBQcm9taXNlLnJlamVjdChuZXcgRXJyb3IoXCJGYWlsZWQgdG8gYWxsb2NhdGVkIGdyYXBoaWNzIGRldmljZVwiKSk7XG59XG5cbmV4cG9ydCB7IGNyZWF0ZUdyYXBoaWNzRGV2aWNlIH07XG4iXSwibmFtZXMiOlsiY3JlYXRlR3JhcGhpY3NEZXZpY2UiLCJjYW52YXMiLCJvcHRpb25zIiwiZGV2aWNlVHlwZXMiLCJERVZJQ0VUWVBFX1dFQkdMIiwiZGV2aWNlIiwiaSIsImxlbmd0aCIsImRldmljZVR5cGUiLCJERVZJQ0VUWVBFX1dFQkdQVSIsIndpbmRvdyIsIm5hdmlnYXRvciIsImdwdSIsIldlYmdwdUdyYXBoaWNzRGV2aWNlIiwiaW5pdFdlYkdwdSIsImdsc2xhbmdVcmwiLCJXZWJnbEdyYXBoaWNzRGV2aWNlIiwiUHJvbWlzZSIsInJlc29sdmUiLCJEZWJ1ZyIsImFzc2VydCIsInJlamVjdCIsIkVycm9yIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBcUJBLFNBQVNBLG9CQUFvQixDQUFDQyxNQUFNLEVBQUVDLE9BQU8sR0FBRyxFQUFFLEVBQUU7QUFBQSxFQUFBLElBQUEsb0JBQUEsQ0FBQTtFQUNoREEsT0FBTyxDQUFDQyxXQUFXLEdBQUdELENBQUFBLG9CQUFBQSxHQUFBQSxPQUFPLENBQUNDLFdBQVcsS0FBQSxJQUFBLEdBQUEsb0JBQUEsR0FBSSxDQUFDQyxnQkFBZ0IsQ0FBQyxDQUFBO0FBRS9ELEVBQUEsSUFBSUMsTUFBTSxDQUFBO0FBQ1YsRUFBQSxLQUFLLElBQUlDLENBQUMsR0FBRyxDQUFDLEVBQUVBLENBQUMsR0FBR0osT0FBTyxDQUFDQyxXQUFXLENBQUNJLE1BQU0sRUFBRUQsQ0FBQyxFQUFFLEVBQUU7QUFBQSxJQUFBLElBQUEsT0FBQSxFQUFBLGlCQUFBLENBQUE7QUFDakQsSUFBQSxNQUFNRSxVQUFVLEdBQUdOLE9BQU8sQ0FBQ0MsV0FBVyxDQUFDRyxDQUFDLENBQUMsQ0FBQTtJQUd6QyxJQUFJRSxVQUFVLEtBQUtDLGlCQUFpQixJQUFJQyxDQUFBQSxPQUFBQSxHQUFBQSxNQUFNLEtBQU4sSUFBQSxJQUFBLENBQUEsaUJBQUEsR0FBQSxPQUFBLENBQVFDLFNBQVMsS0FBQSxJQUFBLElBQWpCLGlCQUFtQkMsQ0FBQUEsR0FBRyxFQUFFO0FBQzVEUCxNQUFBQSxNQUFNLEdBQUcsSUFBSVEsb0JBQW9CLENBQUNaLE1BQU0sRUFBRUMsT0FBTyxDQUFDLENBQUE7QUFDbEQsTUFBQSxPQUFPRyxNQUFNLENBQUNTLFVBQVUsQ0FBQ1osT0FBTyxDQUFDYSxVQUFVLENBQUMsQ0FBQTtBQUNoRCxLQUFBO0lBR0EsSUFBSVAsVUFBVSxLQUFLSixnQkFBZ0IsRUFBRTtBQUNqQ0MsTUFBQUEsTUFBTSxHQUFHLElBQUlXLG1CQUFtQixDQUFDZixNQUFNLEVBQUVDLE9BQU8sQ0FBQyxDQUFBO0FBQ2pELE1BQUEsT0FBT2UsT0FBTyxDQUFDQyxPQUFPLENBQUNiLE1BQU0sQ0FBQyxDQUFBO0FBQ2xDLEtBQUE7QUFDSixHQUFBO0VBRUFjLEtBQUssQ0FBQ0MsTUFBTSxDQUFDZixNQUFNLEVBQUUsc0VBQXNFLEVBQUVILE9BQU8sQ0FBQ0MsV0FBVyxDQUFDLENBQUE7RUFDakgsT0FBT2MsT0FBTyxDQUFDSSxNQUFNLENBQUMsSUFBSUMsS0FBSyxDQUFDLHFDQUFxQyxDQUFDLENBQUMsQ0FBQTtBQUMzRTs7OzsifQ==
