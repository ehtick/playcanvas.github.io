/**
 * @license
 * PlayCanvas Engine v1.59.0-preview revision 797466563 (DEBUG PROFILER)
 * Copyright 2011-2022 PlayCanvas Ltd. All rights reserved.
 */
import { BLENDMODE_ONE, BLENDMODE_ZERO, BLENDEQUATION_ADD } from '../constants.js';

class WebgpuRenderState {
  constructor() {
    this.reset();
  }
  reset() {
    this.blendStateDirty = true;
    this.blendStateKey = '';
    this.blending = false;
    this.blendSrcColor = BLENDMODE_ONE;
    this.blendDstColor = BLENDMODE_ZERO;
    this.blendEquationColor = BLENDEQUATION_ADD;
    this.blendEquationAlpha = BLENDEQUATION_ADD;
    this.blendSrcAlpha = BLENDMODE_ONE;
    this.blendDstAlpha = BLENDMODE_ZERO;
    this.writeRed = true;
    this.writeGreen = true;
    this.writeBlue = true;
    this.writeAlpha = true;
  }
  get blendKey() {
    if (this.blendStateDirty) {
      this.blendStateDirty = false;
      this.blendStateKey = `${this.blending}_${this.blendSrcColor}_${this.blendSrcAlpha}`;
      this.blendStateKey += `_${this.blendDstColor}_${this.blendDstAlpha}`;
      this.blendStateKey += `_${this.blendEquationColor}_${this.blendEquationAlpha}`;
    }
    return this.blendStateKey;
  }
  setBlending(blending) {
    if (this.blending !== blending) {
      this.blending = blending;
      this.blendStateDirty = true;
    }
  }
  setBlendFunction(blendSrc, blendDst) {
    if (this.blendSrcColor !== blendSrc || this.blendDstColor !== blendDst || this.blendSrcAlpha !== blendSrc || this.blendDstAlpha !== blendDst) {
      this.blendSrcColor = blendSrc;
      this.blendSrcAlpha = blendSrc;
      this.blendDstColor = blendDst;
      this.blendDstAlpha = blendDst;
      this.blendStateDirty = true;
    }
  }
  setBlendEquation(blendEquation) {
    if (this.blendEquationColor !== blendEquation || this.blendEquationAlpha !== blendEquation) {
      this.blendEquationColor = blendEquation;
      this.blendEquationAlpha = blendEquation;
      this.blendStateDirty = true;
    }
  }
}

export { WebgpuRenderState };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoid2ViZ3B1LXJlbmRlci1zdGF0ZS5qcyIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vc3JjL3BsYXRmb3JtL2dyYXBoaWNzL3dlYmdwdS93ZWJncHUtcmVuZGVyLXN0YXRlLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gICAgQkxFTkRFUVVBVElPTl9BREQsXG4gICAgQkxFTkRNT0RFX1pFUk8sIEJMRU5ETU9ERV9PTkVcbn0gZnJvbSAnLi4vY29uc3RhbnRzLmpzJztcblxuY2xhc3MgV2ViZ3B1UmVuZGVyU3RhdGUge1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICB0aGlzLnJlc2V0KCk7XG4gICAgfVxuXG4gICAgcmVzZXQoKSB7XG5cbiAgICAgICAgLy8gYmxlbmQgc3RhdGVcbiAgICAgICAgdGhpcy5ibGVuZFN0YXRlRGlydHkgPSB0cnVlO1xuICAgICAgICB0aGlzLmJsZW5kU3RhdGVLZXkgPSAnJztcbiAgICAgICAgdGhpcy5ibGVuZGluZyA9IGZhbHNlO1xuICAgICAgICB0aGlzLmJsZW5kU3JjQ29sb3IgPSBCTEVORE1PREVfT05FO1xuICAgICAgICB0aGlzLmJsZW5kRHN0Q29sb3IgPSBCTEVORE1PREVfWkVSTztcbiAgICAgICAgdGhpcy5ibGVuZEVxdWF0aW9uQ29sb3IgPSBCTEVOREVRVUFUSU9OX0FERDtcbiAgICAgICAgdGhpcy5ibGVuZEVxdWF0aW9uQWxwaGEgPSBCTEVOREVRVUFUSU9OX0FERDtcbiAgICAgICAgdGhpcy5ibGVuZFNyY0FscGhhID0gQkxFTkRNT0RFX09ORTtcbiAgICAgICAgdGhpcy5ibGVuZERzdEFscGhhID0gQkxFTkRNT0RFX1pFUk87XG4vLyAgICAgICAgdGhpcy5ibGVuZENvbG9yID0gbmV3IENvbG9yKDAsIDAsIDAsIDApO1xuICAgICAgICB0aGlzLndyaXRlUmVkID0gdHJ1ZTtcbiAgICAgICAgdGhpcy53cml0ZUdyZWVuID0gdHJ1ZTtcbiAgICAgICAgdGhpcy53cml0ZUJsdWUgPSB0cnVlO1xuICAgICAgICB0aGlzLndyaXRlQWxwaGEgPSB0cnVlO1xuICAgIH1cblxuICAgIGdldCBibGVuZEtleSgpIHtcblxuICAgICAgICBpZiAodGhpcy5ibGVuZFN0YXRlRGlydHkpIHtcbiAgICAgICAgICAgIHRoaXMuYmxlbmRTdGF0ZURpcnR5ID0gZmFsc2U7XG5cbiAgICAgICAgICAgIHRoaXMuYmxlbmRTdGF0ZUtleSA9IGAke3RoaXMuYmxlbmRpbmd9XyR7dGhpcy5ibGVuZFNyY0NvbG9yfV8ke3RoaXMuYmxlbmRTcmNBbHBoYX1gO1xuICAgICAgICAgICAgdGhpcy5ibGVuZFN0YXRlS2V5ICs9IGBfJHt0aGlzLmJsZW5kRHN0Q29sb3J9XyR7dGhpcy5ibGVuZERzdEFscGhhfWA7XG4gICAgICAgICAgICB0aGlzLmJsZW5kU3RhdGVLZXkgKz0gYF8ke3RoaXMuYmxlbmRFcXVhdGlvbkNvbG9yfV8ke3RoaXMuYmxlbmRFcXVhdGlvbkFscGhhfWA7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRoaXMuYmxlbmRTdGF0ZUtleTtcblxuICAgIH1cblxuICAgIHNldEJsZW5kaW5nKGJsZW5kaW5nKSB7XG4gICAgICAgIGlmICh0aGlzLmJsZW5kaW5nICE9PSBibGVuZGluZykge1xuICAgICAgICAgICAgdGhpcy5ibGVuZGluZyA9IGJsZW5kaW5nO1xuXG4gICAgICAgICAgICB0aGlzLmJsZW5kU3RhdGVEaXJ0eSA9IHRydWU7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBzZXRCbGVuZEZ1bmN0aW9uKGJsZW5kU3JjLCBibGVuZERzdCkge1xuICAgICAgICBpZiAodGhpcy5ibGVuZFNyY0NvbG9yICE9PSBibGVuZFNyYyB8fCB0aGlzLmJsZW5kRHN0Q29sb3IgIT09IGJsZW5kRHN0IHx8XG4gICAgICAgICAgICB0aGlzLmJsZW5kU3JjQWxwaGEgIT09IGJsZW5kU3JjIHx8IHRoaXMuYmxlbmREc3RBbHBoYSAhPT0gYmxlbmREc3QpIHtcblxuICAgICAgICAgICAgdGhpcy5ibGVuZFNyY0NvbG9yID0gYmxlbmRTcmM7XG4gICAgICAgICAgICB0aGlzLmJsZW5kU3JjQWxwaGEgPSBibGVuZFNyYztcbiAgICAgICAgICAgIHRoaXMuYmxlbmREc3RDb2xvciA9IGJsZW5kRHN0O1xuICAgICAgICAgICAgdGhpcy5ibGVuZERzdEFscGhhID0gYmxlbmREc3Q7XG5cbiAgICAgICAgICAgIHRoaXMuYmxlbmRTdGF0ZURpcnR5ID0gdHJ1ZTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIHNldEJsZW5kRXF1YXRpb24oYmxlbmRFcXVhdGlvbikge1xuICAgICAgICBpZiAodGhpcy5ibGVuZEVxdWF0aW9uQ29sb3IgIT09IGJsZW5kRXF1YXRpb24gfHwgdGhpcy5ibGVuZEVxdWF0aW9uQWxwaGEgIT09IGJsZW5kRXF1YXRpb24pIHtcbiAgICAgICAgICAgIHRoaXMuYmxlbmRFcXVhdGlvbkNvbG9yID0gYmxlbmRFcXVhdGlvbjtcbiAgICAgICAgICAgIHRoaXMuYmxlbmRFcXVhdGlvbkFscGhhID0gYmxlbmRFcXVhdGlvbjtcblxuICAgICAgICAgICAgdGhpcy5ibGVuZFN0YXRlRGlydHkgPSB0cnVlO1xuICAgICAgICB9XG4gICAgfVxufVxuXG5leHBvcnQgeyBXZWJncHVSZW5kZXJTdGF0ZSB9O1xuIl0sIm5hbWVzIjpbIldlYmdwdVJlbmRlclN0YXRlIiwiY29uc3RydWN0b3IiLCJyZXNldCIsImJsZW5kU3RhdGVEaXJ0eSIsImJsZW5kU3RhdGVLZXkiLCJibGVuZGluZyIsImJsZW5kU3JjQ29sb3IiLCJCTEVORE1PREVfT05FIiwiYmxlbmREc3RDb2xvciIsIkJMRU5ETU9ERV9aRVJPIiwiYmxlbmRFcXVhdGlvbkNvbG9yIiwiQkxFTkRFUVVBVElPTl9BREQiLCJibGVuZEVxdWF0aW9uQWxwaGEiLCJibGVuZFNyY0FscGhhIiwiYmxlbmREc3RBbHBoYSIsIndyaXRlUmVkIiwid3JpdGVHcmVlbiIsIndyaXRlQmx1ZSIsIndyaXRlQWxwaGEiLCJibGVuZEtleSIsInNldEJsZW5kaW5nIiwic2V0QmxlbmRGdW5jdGlvbiIsImJsZW5kU3JjIiwiYmxlbmREc3QiLCJzZXRCbGVuZEVxdWF0aW9uIiwiYmxlbmRFcXVhdGlvbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUtBLE1BQU1BLGlCQUFpQixDQUFDO0FBQ3BCQyxFQUFBQSxXQUFXLEdBQUc7SUFDVixJQUFJLENBQUNDLEtBQUssRUFBRSxDQUFBO0FBQ2hCLEdBQUE7QUFFQUEsRUFBQUEsS0FBSyxHQUFHO0lBR0osSUFBSSxDQUFDQyxlQUFlLEdBQUcsSUFBSSxDQUFBO0lBQzNCLElBQUksQ0FBQ0MsYUFBYSxHQUFHLEVBQUUsQ0FBQTtJQUN2QixJQUFJLENBQUNDLFFBQVEsR0FBRyxLQUFLLENBQUE7SUFDckIsSUFBSSxDQUFDQyxhQUFhLEdBQUdDLGFBQWEsQ0FBQTtJQUNsQyxJQUFJLENBQUNDLGFBQWEsR0FBR0MsY0FBYyxDQUFBO0lBQ25DLElBQUksQ0FBQ0Msa0JBQWtCLEdBQUdDLGlCQUFpQixDQUFBO0lBQzNDLElBQUksQ0FBQ0Msa0JBQWtCLEdBQUdELGlCQUFpQixDQUFBO0lBQzNDLElBQUksQ0FBQ0UsYUFBYSxHQUFHTixhQUFhLENBQUE7SUFDbEMsSUFBSSxDQUFDTyxhQUFhLEdBQUdMLGNBQWMsQ0FBQTtJQUVuQyxJQUFJLENBQUNNLFFBQVEsR0FBRyxJQUFJLENBQUE7SUFDcEIsSUFBSSxDQUFDQyxVQUFVLEdBQUcsSUFBSSxDQUFBO0lBQ3RCLElBQUksQ0FBQ0MsU0FBUyxHQUFHLElBQUksQ0FBQTtJQUNyQixJQUFJLENBQUNDLFVBQVUsR0FBRyxJQUFJLENBQUE7QUFDMUIsR0FBQTtBQUVBLEVBQUEsSUFBSUMsUUFBUSxHQUFHO0lBRVgsSUFBSSxJQUFJLENBQUNoQixlQUFlLEVBQUU7TUFDdEIsSUFBSSxDQUFDQSxlQUFlLEdBQUcsS0FBSyxDQUFBO0FBRTVCLE1BQUEsSUFBSSxDQUFDQyxhQUFhLEdBQUksQ0FBQSxFQUFFLElBQUksQ0FBQ0MsUUFBUyxDQUFHLENBQUEsRUFBQSxJQUFJLENBQUNDLGFBQWMsQ0FBQSxDQUFBLEVBQUcsSUFBSSxDQUFDTyxhQUFjLENBQUMsQ0FBQSxDQUFBO01BQ25GLElBQUksQ0FBQ1QsYUFBYSxJQUFLLENBQUcsQ0FBQSxFQUFBLElBQUksQ0FBQ0ksYUFBYyxDQUFHLENBQUEsRUFBQSxJQUFJLENBQUNNLGFBQWMsQ0FBQyxDQUFBLENBQUE7TUFDcEUsSUFBSSxDQUFDVixhQUFhLElBQUssQ0FBRyxDQUFBLEVBQUEsSUFBSSxDQUFDTSxrQkFBbUIsQ0FBRyxDQUFBLEVBQUEsSUFBSSxDQUFDRSxrQkFBbUIsQ0FBQyxDQUFBLENBQUE7QUFDbEYsS0FBQTtJQUNBLE9BQU8sSUFBSSxDQUFDUixhQUFhLENBQUE7QUFFN0IsR0FBQTtFQUVBZ0IsV0FBVyxDQUFDZixRQUFRLEVBQUU7QUFDbEIsSUFBQSxJQUFJLElBQUksQ0FBQ0EsUUFBUSxLQUFLQSxRQUFRLEVBQUU7TUFDNUIsSUFBSSxDQUFDQSxRQUFRLEdBQUdBLFFBQVEsQ0FBQTtNQUV4QixJQUFJLENBQUNGLGVBQWUsR0FBRyxJQUFJLENBQUE7QUFDL0IsS0FBQTtBQUNKLEdBQUE7QUFFQWtCLEVBQUFBLGdCQUFnQixDQUFDQyxRQUFRLEVBQUVDLFFBQVEsRUFBRTtJQUNqQyxJQUFJLElBQUksQ0FBQ2pCLGFBQWEsS0FBS2dCLFFBQVEsSUFBSSxJQUFJLENBQUNkLGFBQWEsS0FBS2UsUUFBUSxJQUNsRSxJQUFJLENBQUNWLGFBQWEsS0FBS1MsUUFBUSxJQUFJLElBQUksQ0FBQ1IsYUFBYSxLQUFLUyxRQUFRLEVBQUU7TUFFcEUsSUFBSSxDQUFDakIsYUFBYSxHQUFHZ0IsUUFBUSxDQUFBO01BQzdCLElBQUksQ0FBQ1QsYUFBYSxHQUFHUyxRQUFRLENBQUE7TUFDN0IsSUFBSSxDQUFDZCxhQUFhLEdBQUdlLFFBQVEsQ0FBQTtNQUM3QixJQUFJLENBQUNULGFBQWEsR0FBR1MsUUFBUSxDQUFBO01BRTdCLElBQUksQ0FBQ3BCLGVBQWUsR0FBRyxJQUFJLENBQUE7QUFDL0IsS0FBQTtBQUNKLEdBQUE7RUFFQXFCLGdCQUFnQixDQUFDQyxhQUFhLEVBQUU7SUFDNUIsSUFBSSxJQUFJLENBQUNmLGtCQUFrQixLQUFLZSxhQUFhLElBQUksSUFBSSxDQUFDYixrQkFBa0IsS0FBS2EsYUFBYSxFQUFFO01BQ3hGLElBQUksQ0FBQ2Ysa0JBQWtCLEdBQUdlLGFBQWEsQ0FBQTtNQUN2QyxJQUFJLENBQUNiLGtCQUFrQixHQUFHYSxhQUFhLENBQUE7TUFFdkMsSUFBSSxDQUFDdEIsZUFBZSxHQUFHLElBQUksQ0FBQTtBQUMvQixLQUFBO0FBQ0osR0FBQTtBQUNKOzs7OyJ9
