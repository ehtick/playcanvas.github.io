/**
 * @license
 * PlayCanvas Engine v1.57.0 revision f1998a31e (DEBUG PROFILER)
 * Copyright 2011-2022 PlayCanvas Ltd. All rights reserved.
 */
import { Vec3 } from '../../../math/vec3.js';
import { Component } from '../component.js';

class ZoneComponent extends Component {
  constructor(system, entity) {
    super(system, entity);
    this._oldState = true;
    this._size = new Vec3();
    this.on('set_enabled', this._onSetEnabled, this);
  }

  set size(data) {
    if (data instanceof Vec3) {
      this._size.copy(data);
    } else if (data instanceof Array && data.length >= 3) {
      this.size.set(data[0], data[1], data[2]);
    }
  }

  get size() {
    return this._size;
  }

  onEnable() {
    this._checkState();
  }

  onDisable() {
    this._checkState();
  }

  _onSetEnabled(prop, old, value) {
    this._checkState();
  }

  _checkState() {
    const state = this.enabled && this.entity.enabled;
    if (state === this._oldState) return;
    this._oldState = state;
    this.fire('enable');
    this.fire('state', this.enabled);
  }

  _onBeforeRemove() {
    this.fire('remove');
  }

}

export { ZoneComponent };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29tcG9uZW50LmpzIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9zcmMvZnJhbWV3b3JrL2NvbXBvbmVudHMvem9uZS9jb21wb25lbnQuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgVmVjMyB9IGZyb20gJy4uLy4uLy4uL21hdGgvdmVjMy5qcyc7XG5cbmltcG9ydCB7IENvbXBvbmVudCB9IGZyb20gJy4uL2NvbXBvbmVudC5qcyc7XG5cbi8qKiBAdHlwZWRlZiB7aW1wb3J0KCcuLi8uLi9lbnRpdHkuanMnKS5FbnRpdHl9IEVudGl0eSAqL1xuLyoqIEB0eXBlZGVmIHtpbXBvcnQoJy4vc3lzdGVtLmpzJykuWm9uZUNvbXBvbmVudFN5c3RlbX0gWm9uZUNvbXBvbmVudFN5c3RlbSAqL1xuXG4vKipcbiAqIFRoZSBab25lQ29tcG9uZW50IGFsbG93cyB5b3UgdG8gZGVmaW5lIGFuIGFyZWEgaW4gd29ybGQgc3BhY2Ugb2YgY2VydGFpbiBzaXplLiBUaGlzIGNhbiBiZSB1c2VkXG4gKiBpbiB2YXJpb3VzIHdheXMsIHN1Y2ggYXMgYWZmZWN0aW5nIGF1ZGlvIHJldmVyYiB3aGVuIHtAbGluayBBdWRpb0xpc3RlbmVyQ29tcG9uZW50fSBpcyB3aXRoaW5cbiAqIHpvbmUuIE9yIGNyZWF0ZSBjdWxsaW5nIHN5c3RlbSB3aXRoIHBvcnRhbHMgYmV0d2VlbiB6b25lcyB0byBoaWRlIHdob2xlIGluZG9vciBzZWN0aW9ucyBmb3JcbiAqIHBlcmZvcm1hbmNlIHJlYXNvbnMuIEFuZCBtYW55IG90aGVyIHBvc3NpYmxlIG9wdGlvbnMuIFpvbmVzIGFyZSBidWlsZGluZyBibG9ja3MgYW5kIG1lYW50IHRvIGJlXG4gKiB1c2VkIGluIG1hbnkgZGlmZmVyZW50IHdheXMuXG4gKlxuICogQGF1Z21lbnRzIENvbXBvbmVudFxuICogQGlnbm9yZVxuICovXG5jbGFzcyBab25lQ29tcG9uZW50IGV4dGVuZHMgQ29tcG9uZW50IHtcbiAgICAvKipcbiAgICAgKiBDcmVhdGUgYSBuZXcgWm9uZUNvbXBvbmVudCBpbnN0YW5jZS5cbiAgICAgKlxuICAgICAqIEBwYXJhbSB7Wm9uZUNvbXBvbmVudFN5c3RlbX0gc3lzdGVtIC0gVGhlIENvbXBvbmVudFN5c3RlbSB0aGF0IGNyZWF0ZWQgdGhpcyBDb21wb25lbnQuXG4gICAgICogQHBhcmFtIHtFbnRpdHl9IGVudGl0eSAtIFRoZSBFbnRpdHkgdGhhdCB0aGlzIENvbXBvbmVudCBpcyBhdHRhY2hlZCB0by5cbiAgICAgKi9cbiAgICBjb25zdHJ1Y3RvcihzeXN0ZW0sIGVudGl0eSkge1xuICAgICAgICBzdXBlcihzeXN0ZW0sIGVudGl0eSk7XG5cbiAgICAgICAgdGhpcy5fb2xkU3RhdGUgPSB0cnVlO1xuICAgICAgICB0aGlzLl9zaXplID0gbmV3IFZlYzMoKTtcbiAgICAgICAgdGhpcy5vbignc2V0X2VuYWJsZWQnLCB0aGlzLl9vblNldEVuYWJsZWQsIHRoaXMpO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIEZpcmVkIHdoZW4gQ29tcG9uZW50IGJlY29tZXMgZW5hYmxlZC4gTm90ZTogdGhpcyBldmVudCBkb2VzIG5vdCB0YWtlIGluIGFjY291bnQgZW50aXR5IG9yXG4gICAgICogYW55IG9mIGl0cyBwYXJlbnQgZW5hYmxlZCBzdGF0ZS5cbiAgICAgKlxuICAgICAqIEBldmVudCBab25lQ29tcG9uZW50I2VuYWJsZVxuICAgICAqIEBleGFtcGxlXG4gICAgICogZW50aXR5LnpvbmUub24oJ2VuYWJsZScsIGZ1bmN0aW9uICgpIHtcbiAgICAgKiAgICAgLy8gY29tcG9uZW50IGlzIGVuYWJsZWRcbiAgICAgKiB9KTtcbiAgICAgKiBAaWdub3JlXG4gICAgICovXG5cbiAgICAvKipcbiAgICAgKiBGaXJlZCB3aGVuIENvbXBvbmVudCBiZWNvbWVzIGRpc2FibGVkLiBOb3RlOiB0aGlzIGV2ZW50IGRvZXMgbm90IHRha2UgaW4gYWNjb3VudCBlbnRpdHkgb3JcbiAgICAgKiBhbnkgb2YgaXRzIHBhcmVudCBlbmFibGVkIHN0YXRlLlxuICAgICAqXG4gICAgICogQGV2ZW50IFpvbmVDb21wb25lbnQjZGlzYWJsZVxuICAgICAqIEBleGFtcGxlXG4gICAgICogZW50aXR5LnpvbmUub24oJ2Rpc2FibGUnLCBmdW5jdGlvbiAoKSB7XG4gICAgICogICAgIC8vIGNvbXBvbmVudCBpcyBkaXNhYmxlZFxuICAgICAqIH0pO1xuICAgICAqIEBpZ25vcmVcbiAgICAgKi9cblxuICAgIC8qKlxuICAgICAqIEZpcmVkIHdoZW4gQ29tcG9uZW50IGNoYW5nZXMgc3RhdGUgdG8gZW5hYmxlZCBvciBkaXNhYmxlZC4gTm90ZTogdGhpcyBldmVudCBkb2VzIG5vdCB0YWtlIGluXG4gICAgICogYWNjb3VudCBlbnRpdHkgb3IgYW55IG9mIGl0cyBwYXJlbnQgZW5hYmxlZCBzdGF0ZS5cbiAgICAgKlxuICAgICAqIEBldmVudCBab25lQ29tcG9uZW50I3N0YXRlXG4gICAgICogQHBhcmFtIHtib29sZWFufSBlbmFibGVkIC0gVHJ1ZSBpZiBub3cgZW5hYmxlZCwgRmFsc2UgaWYgZGlzYWJsZWQuXG4gICAgICogQGV4YW1wbGVcbiAgICAgKiBlbnRpdHkuem9uZS5vbignc3RhdGUnLCBmdW5jdGlvbiAoZW5hYmxlZCkge1xuICAgICAqICAgICAvLyBjb21wb25lbnQgY2hhbmdlZCBzdGF0ZVxuICAgICAqIH0pO1xuICAgICAqIEBpZ25vcmVcbiAgICAgKi9cblxuICAgIC8qKlxuICAgICAqIEZpcmVkIHdoZW4gYSB6b25lIGlzIHJlbW92ZWQgZnJvbSBhbiBlbnRpdHkuXG4gICAgICpcbiAgICAgKiBAZXZlbnQgWm9uZUNvbXBvbmVudCNyZW1vdmVcbiAgICAgKiBAZXhhbXBsZVxuICAgICAqIGVudGl0eS56b25lLm9uKCdyZW1vdmUnLCBmdW5jdGlvbiAoKSB7XG4gICAgICogICAgIC8vIHpvbmUgaGFzIGJlZW4gcmVtb3ZlZCBmcm9tIGFuIGVudGl0eVxuICAgICAqIH0pO1xuICAgICAqIEBpZ25vcmVcbiAgICAgKi9cblxuICAgIC8qKlxuICAgICAqIFRoZSBzaXplIG9mIHRoZSBheGlzLWFsaWduZWQgYm94IG9mIHRoaXMgWm9uZUNvbXBvbmVudC5cbiAgICAgKlxuICAgICAqIEB0eXBlIHtWZWMzfVxuICAgICAqL1xuICAgIHNldCBzaXplKGRhdGEpIHtcbiAgICAgICAgaWYgKGRhdGEgaW5zdGFuY2VvZiBWZWMzKSB7XG4gICAgICAgICAgICB0aGlzLl9zaXplLmNvcHkoZGF0YSk7XG4gICAgICAgIH0gZWxzZSBpZiAoZGF0YSBpbnN0YW5jZW9mIEFycmF5ICYmIGRhdGEubGVuZ3RoID49IDMpIHtcbiAgICAgICAgICAgIHRoaXMuc2l6ZS5zZXQoZGF0YVswXSwgZGF0YVsxXSwgZGF0YVsyXSk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBnZXQgc2l6ZSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX3NpemU7XG4gICAgfVxuXG4gICAgb25FbmFibGUoKSB7XG4gICAgICAgIHRoaXMuX2NoZWNrU3RhdGUoKTtcbiAgICB9XG5cbiAgICBvbkRpc2FibGUoKSB7XG4gICAgICAgIHRoaXMuX2NoZWNrU3RhdGUoKTtcbiAgICB9XG5cbiAgICBfb25TZXRFbmFibGVkKHByb3AsIG9sZCwgdmFsdWUpIHtcbiAgICAgICAgdGhpcy5fY2hlY2tTdGF0ZSgpO1xuICAgIH1cblxuICAgIF9jaGVja1N0YXRlKCkge1xuICAgICAgICBjb25zdCBzdGF0ZSA9IHRoaXMuZW5hYmxlZCAmJiB0aGlzLmVudGl0eS5lbmFibGVkO1xuICAgICAgICBpZiAoc3RhdGUgPT09IHRoaXMuX29sZFN0YXRlKVxuICAgICAgICAgICAgcmV0dXJuO1xuXG4gICAgICAgIHRoaXMuX29sZFN0YXRlID0gc3RhdGU7XG5cbiAgICAgICAgdGhpcy5maXJlKCdlbmFibGUnKTtcbiAgICAgICAgdGhpcy5maXJlKCdzdGF0ZScsIHRoaXMuZW5hYmxlZCk7XG4gICAgfVxuXG4gICAgX29uQmVmb3JlUmVtb3ZlKCkge1xuICAgICAgICB0aGlzLmZpcmUoJ3JlbW92ZScpO1xuICAgIH1cbn1cblxuZXhwb3J0IHsgWm9uZUNvbXBvbmVudCB9O1xuIl0sIm5hbWVzIjpbIlpvbmVDb21wb25lbnQiLCJDb21wb25lbnQiLCJjb25zdHJ1Y3RvciIsInN5c3RlbSIsImVudGl0eSIsIl9vbGRTdGF0ZSIsIl9zaXplIiwiVmVjMyIsIm9uIiwiX29uU2V0RW5hYmxlZCIsInNpemUiLCJkYXRhIiwiY29weSIsIkFycmF5IiwibGVuZ3RoIiwic2V0Iiwib25FbmFibGUiLCJfY2hlY2tTdGF0ZSIsIm9uRGlzYWJsZSIsInByb3AiLCJvbGQiLCJ2YWx1ZSIsInN0YXRlIiwiZW5hYmxlZCIsImZpcmUiLCJfb25CZWZvcmVSZW1vdmUiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBaUJBLE1BQU1BLGFBQU4sU0FBNEJDLFNBQTVCLENBQXNDO0FBT2xDQyxFQUFBQSxXQUFXLENBQUNDLE1BQUQsRUFBU0MsTUFBVCxFQUFpQjtJQUN4QixLQUFNRCxDQUFBQSxNQUFOLEVBQWNDLE1BQWQsQ0FBQSxDQUFBO0lBRUEsSUFBS0MsQ0FBQUEsU0FBTCxHQUFpQixJQUFqQixDQUFBO0FBQ0EsSUFBQSxJQUFBLENBQUtDLEtBQUwsR0FBYSxJQUFJQyxJQUFKLEVBQWIsQ0FBQTtBQUNBLElBQUEsSUFBQSxDQUFLQyxFQUFMLENBQVEsYUFBUixFQUF1QixJQUFLQyxDQUFBQSxhQUE1QixFQUEyQyxJQUEzQyxDQUFBLENBQUE7QUFDSCxHQUFBOztFQXVETyxJQUFKQyxJQUFJLENBQUNDLElBQUQsRUFBTztJQUNYLElBQUlBLElBQUksWUFBWUosSUFBcEIsRUFBMEI7QUFDdEIsTUFBQSxJQUFBLENBQUtELEtBQUwsQ0FBV00sSUFBWCxDQUFnQkQsSUFBaEIsQ0FBQSxDQUFBO0tBREosTUFFTyxJQUFJQSxJQUFJLFlBQVlFLEtBQWhCLElBQXlCRixJQUFJLENBQUNHLE1BQUwsSUFBZSxDQUE1QyxFQUErQztBQUNsRCxNQUFBLElBQUEsQ0FBS0osSUFBTCxDQUFVSyxHQUFWLENBQWNKLElBQUksQ0FBQyxDQUFELENBQWxCLEVBQXVCQSxJQUFJLENBQUMsQ0FBRCxDQUEzQixFQUFnQ0EsSUFBSSxDQUFDLENBQUQsQ0FBcEMsQ0FBQSxDQUFBO0FBQ0gsS0FBQTtBQUNKLEdBQUE7O0FBRU8sRUFBQSxJQUFKRCxJQUFJLEdBQUc7QUFDUCxJQUFBLE9BQU8sS0FBS0osS0FBWixDQUFBO0FBQ0gsR0FBQTs7QUFFRFUsRUFBQUEsUUFBUSxHQUFHO0FBQ1AsSUFBQSxJQUFBLENBQUtDLFdBQUwsRUFBQSxDQUFBO0FBQ0gsR0FBQTs7QUFFREMsRUFBQUEsU0FBUyxHQUFHO0FBQ1IsSUFBQSxJQUFBLENBQUtELFdBQUwsRUFBQSxDQUFBO0FBQ0gsR0FBQTs7QUFFRFIsRUFBQUEsYUFBYSxDQUFDVSxJQUFELEVBQU9DLEdBQVAsRUFBWUMsS0FBWixFQUFtQjtBQUM1QixJQUFBLElBQUEsQ0FBS0osV0FBTCxFQUFBLENBQUE7QUFDSCxHQUFBOztBQUVEQSxFQUFBQSxXQUFXLEdBQUc7SUFDVixNQUFNSyxLQUFLLEdBQUcsSUFBS0MsQ0FBQUEsT0FBTCxJQUFnQixJQUFLbkIsQ0FBQUEsTUFBTCxDQUFZbUIsT0FBMUMsQ0FBQTtBQUNBLElBQUEsSUFBSUQsS0FBSyxLQUFLLElBQUtqQixDQUFBQSxTQUFuQixFQUNJLE9BQUE7SUFFSixJQUFLQSxDQUFBQSxTQUFMLEdBQWlCaUIsS0FBakIsQ0FBQTtJQUVBLElBQUtFLENBQUFBLElBQUwsQ0FBVSxRQUFWLENBQUEsQ0FBQTtBQUNBLElBQUEsSUFBQSxDQUFLQSxJQUFMLENBQVUsT0FBVixFQUFtQixLQUFLRCxPQUF4QixDQUFBLENBQUE7QUFDSCxHQUFBOztBQUVERSxFQUFBQSxlQUFlLEdBQUc7SUFDZCxJQUFLRCxDQUFBQSxJQUFMLENBQVUsUUFBVixDQUFBLENBQUE7QUFDSCxHQUFBOztBQXpHaUM7Ozs7In0=
