/**
 * @license
 * PlayCanvas Engine v1.59.0-preview revision 797466563 (DEBUG PROFILER)
 * Copyright 2011-2022 PlayCanvas Ltd. All rights reserved.
 */
import { BoundingBox } from '../../core/shape/bounding-box.js';

class Batch {
  constructor(meshInstances, dynamic, batchGroupId) {
    this.origMeshInstances = meshInstances;
    this._aabb = new BoundingBox();
    this.meshInstance = null;
    this.dynamic = dynamic;
    this.batchGroupId = batchGroupId;
  }

  destroy(scene, layers) {
    if (this.meshInstance) {
      this.removeFromLayers(scene, layers);
      this.meshInstance.destroy();
    }
  }
  addToLayers(scene, layers) {
    for (let i = 0; i < layers.length; i++) {
      const layer = scene.layers.getLayerById(layers[i]);
      if (layer) {
        layer.addMeshInstances([this.meshInstance]);
      }
    }
  }
  removeFromLayers(scene, layers) {
    for (let i = 0; i < layers.length; i++) {
      const layer = scene.layers.getLayerById(layers[i]);
      if (layer) {
        layer.removeMeshInstances([this.meshInstance]);
      }
    }
  }

  updateBoundingBox() {
    this._aabb.copy(this.origMeshInstances[0].aabb);
    for (let i = 1; i < this.origMeshInstances.length; i++) {
      this._aabb.add(this.origMeshInstances[i].aabb);
    }
    this.meshInstance.aabb = this._aabb;
    this.meshInstance._aabbVer = 0;
  }
}

export { Batch };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYmF0Y2guanMiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9zY2VuZS9iYXRjaGluZy9iYXRjaC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBCb3VuZGluZ0JveCB9IGZyb20gJy4uLy4uL2NvcmUvc2hhcGUvYm91bmRpbmctYm94LmpzJztcblxuLyoqXG4gKiBIb2xkcyBpbmZvcm1hdGlvbiBhYm91dCBiYXRjaGVkIG1lc2ggaW5zdGFuY2VzLiBDcmVhdGVkIGluIHtAbGluayBCYXRjaE1hbmFnZXIjY3JlYXRlfS5cbiAqXG4gKiBAcHJvcGVydHkge2ltcG9ydCgnLi4vbWVzaC1pbnN0YW5jZS5qcycpLk1lc2hJbnN0YW5jZVtdfSBvcmlnTWVzaEluc3RhbmNlcyBBbiBhcnJheSBvZiBvcmlnaW5hbFxuICogbWVzaCBpbnN0YW5jZXMsIGZyb20gd2hpY2ggdGhpcyBiYXRjaCB3YXMgZ2VuZXJhdGVkLlxuICogQHByb3BlcnR5IHtpbXBvcnQoJy4uL21lc2gtaW5zdGFuY2UuanMnKS5NZXNoSW5zdGFuY2V9IG1lc2hJbnN0YW5jZSBBIHNpbmdsZSBjb21iaW5lZCBtZXNoXG4gKiBpbnN0YW5jZSwgdGhlIHJlc3VsdCBvZiBiYXRjaGluZy5cbiAqIEBwcm9wZXJ0eSB7Ym9vbGVhbn0gZHluYW1pYyBXaGV0aGVyIHRoaXMgYmF0Y2ggaXMgZHluYW1pYyAoc3VwcG9ydHMgdHJhbnNmb3JtaW5nIG1lc2ggaW5zdGFuY2VzXG4gKiBhdCBydW50aW1lKS5cbiAqIEBwcm9wZXJ0eSB7bnVtYmVyfSBbYmF0Y2hHcm91cElkXSBMaW5rIHRoaXMgYmF0Y2ggdG8gYSBzcGVjaWZpYyBiYXRjaCBncm91cC4gVGhpcyBpcyBkb25lXG4gKiBhdXRvbWF0aWNhbGx5IHdpdGggZGVmYXVsdCBiYXRjaGVzLlxuICovXG5jbGFzcyBCYXRjaCB7XG4gICAgLyoqXG4gICAgICogQ3JlYXRlIGEgbmV3IEJhdGNoIGluc3RhbmNlLlxuICAgICAqXG4gICAgICogQHBhcmFtIHtpbXBvcnQoJy4uL21lc2gtaW5zdGFuY2UuanMnKS5NZXNoSW5zdGFuY2VbXX0gbWVzaEluc3RhbmNlcyAtIFRoZSBtZXNoIGluc3RhbmNlcyB0b1xuICAgICAqIGJlIGJhdGNoZWQuXG4gICAgICogQHBhcmFtIHtib29sZWFufSBkeW5hbWljIC0gV2hldGhlciB0aGlzIGJhdGNoIGlzIGR5bmFtaWMgKHN1cHBvcnRzIHRyYW5zZm9ybWluZyBtZXNoXG4gICAgICogaW5zdGFuY2VzIGF0IHJ1bnRpbWUpLlxuICAgICAqIEBwYXJhbSB7bnVtYmVyfSBiYXRjaEdyb3VwSWQgLSBMaW5rIHRoaXMgYmF0Y2ggdG8gYSBzcGVjaWZpYyBiYXRjaCBncm91cC4gVGhpcyBpcyBkb25lXG4gICAgICogYXV0b21hdGljYWxseSB3aXRoIGRlZmF1bHQgYmF0Y2hlcy5cbiAgICAgKi9cbiAgICBjb25zdHJ1Y3RvcihtZXNoSW5zdGFuY2VzLCBkeW5hbWljLCBiYXRjaEdyb3VwSWQpIHtcbiAgICAgICAgdGhpcy5vcmlnTWVzaEluc3RhbmNlcyA9IG1lc2hJbnN0YW5jZXM7XG4gICAgICAgIHRoaXMuX2FhYmIgPSBuZXcgQm91bmRpbmdCb3goKTtcbiAgICAgICAgdGhpcy5tZXNoSW5zdGFuY2UgPSBudWxsO1xuICAgICAgICB0aGlzLmR5bmFtaWMgPSBkeW5hbWljO1xuICAgICAgICB0aGlzLmJhdGNoR3JvdXBJZCA9IGJhdGNoR3JvdXBJZDtcbiAgICB9XG5cbiAgICAvLyBSZW1vdmVzIHRoZSBiYXRjaCBtZXNoZXMgZnJvbSBhbGwgbGF5ZXJzIGFuZCBkZXN0cm95cyBpdFxuICAgIGRlc3Ryb3koc2NlbmUsIGxheWVycykge1xuICAgICAgICBpZiAodGhpcy5tZXNoSW5zdGFuY2UpIHtcbiAgICAgICAgICAgIHRoaXMucmVtb3ZlRnJvbUxheWVycyhzY2VuZSwgbGF5ZXJzKTtcbiAgICAgICAgICAgIHRoaXMubWVzaEluc3RhbmNlLmRlc3Ryb3koKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGFkZFRvTGF5ZXJzKHNjZW5lLCBsYXllcnMpIHtcbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBsYXllcnMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgIGNvbnN0IGxheWVyID0gc2NlbmUubGF5ZXJzLmdldExheWVyQnlJZChsYXllcnNbaV0pO1xuICAgICAgICAgICAgaWYgKGxheWVyKSB7XG4gICAgICAgICAgICAgICAgbGF5ZXIuYWRkTWVzaEluc3RhbmNlcyhbdGhpcy5tZXNoSW5zdGFuY2VdKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cblxuICAgIHJlbW92ZUZyb21MYXllcnMoc2NlbmUsIGxheWVycykge1xuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IGxheWVycy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgY29uc3QgbGF5ZXIgPSBzY2VuZS5sYXllcnMuZ2V0TGF5ZXJCeUlkKGxheWVyc1tpXSk7XG4gICAgICAgICAgICBpZiAobGF5ZXIpIHtcbiAgICAgICAgICAgICAgICBsYXllci5yZW1vdmVNZXNoSW5zdGFuY2VzKFt0aGlzLm1lc2hJbnN0YW5jZV0pO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgLy8gVXBkYXRlcyBib3VuZGluZyBib3ggZm9yIGEgYmF0Y2hcbiAgICB1cGRhdGVCb3VuZGluZ0JveCgpIHtcbiAgICAgICAgdGhpcy5fYWFiYi5jb3B5KHRoaXMub3JpZ01lc2hJbnN0YW5jZXNbMF0uYWFiYik7XG4gICAgICAgIGZvciAobGV0IGkgPSAxOyBpIDwgdGhpcy5vcmlnTWVzaEluc3RhbmNlcy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgdGhpcy5fYWFiYi5hZGQodGhpcy5vcmlnTWVzaEluc3RhbmNlc1tpXS5hYWJiKTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLm1lc2hJbnN0YW5jZS5hYWJiID0gdGhpcy5fYWFiYjtcbiAgICAgICAgdGhpcy5tZXNoSW5zdGFuY2UuX2FhYmJWZXIgPSAwO1xuICAgIH1cbn1cblxuZXhwb3J0IHsgQmF0Y2ggfTtcbiJdLCJuYW1lcyI6WyJCYXRjaCIsImNvbnN0cnVjdG9yIiwibWVzaEluc3RhbmNlcyIsImR5bmFtaWMiLCJiYXRjaEdyb3VwSWQiLCJvcmlnTWVzaEluc3RhbmNlcyIsIl9hYWJiIiwiQm91bmRpbmdCb3giLCJtZXNoSW5zdGFuY2UiLCJkZXN0cm95Iiwic2NlbmUiLCJsYXllcnMiLCJyZW1vdmVGcm9tTGF5ZXJzIiwiYWRkVG9MYXllcnMiLCJpIiwibGVuZ3RoIiwibGF5ZXIiLCJnZXRMYXllckJ5SWQiLCJhZGRNZXNoSW5zdGFuY2VzIiwicmVtb3ZlTWVzaEluc3RhbmNlcyIsInVwZGF0ZUJvdW5kaW5nQm94IiwiY29weSIsImFhYmIiLCJhZGQiLCJfYWFiYlZlciJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQWNBLE1BQU1BLEtBQUssQ0FBQztBQVdSQyxFQUFBQSxXQUFXLENBQUNDLGFBQWEsRUFBRUMsT0FBTyxFQUFFQyxZQUFZLEVBQUU7SUFDOUMsSUFBSSxDQUFDQyxpQkFBaUIsR0FBR0gsYUFBYSxDQUFBO0FBQ3RDLElBQUEsSUFBSSxDQUFDSSxLQUFLLEdBQUcsSUFBSUMsV0FBVyxFQUFFLENBQUE7SUFDOUIsSUFBSSxDQUFDQyxZQUFZLEdBQUcsSUFBSSxDQUFBO0lBQ3hCLElBQUksQ0FBQ0wsT0FBTyxHQUFHQSxPQUFPLENBQUE7SUFDdEIsSUFBSSxDQUFDQyxZQUFZLEdBQUdBLFlBQVksQ0FBQTtBQUNwQyxHQUFBOztBQUdBSyxFQUFBQSxPQUFPLENBQUNDLEtBQUssRUFBRUMsTUFBTSxFQUFFO0lBQ25CLElBQUksSUFBSSxDQUFDSCxZQUFZLEVBQUU7QUFDbkIsTUFBQSxJQUFJLENBQUNJLGdCQUFnQixDQUFDRixLQUFLLEVBQUVDLE1BQU0sQ0FBQyxDQUFBO0FBQ3BDLE1BQUEsSUFBSSxDQUFDSCxZQUFZLENBQUNDLE9BQU8sRUFBRSxDQUFBO0FBQy9CLEtBQUE7QUFDSixHQUFBO0FBRUFJLEVBQUFBLFdBQVcsQ0FBQ0gsS0FBSyxFQUFFQyxNQUFNLEVBQUU7QUFDdkIsSUFBQSxLQUFLLElBQUlHLENBQUMsR0FBRyxDQUFDLEVBQUVBLENBQUMsR0FBR0gsTUFBTSxDQUFDSSxNQUFNLEVBQUVELENBQUMsRUFBRSxFQUFFO0FBQ3BDLE1BQUEsTUFBTUUsS0FBSyxHQUFHTixLQUFLLENBQUNDLE1BQU0sQ0FBQ00sWUFBWSxDQUFDTixNQUFNLENBQUNHLENBQUMsQ0FBQyxDQUFDLENBQUE7QUFDbEQsTUFBQSxJQUFJRSxLQUFLLEVBQUU7UUFDUEEsS0FBSyxDQUFDRSxnQkFBZ0IsQ0FBQyxDQUFDLElBQUksQ0FBQ1YsWUFBWSxDQUFDLENBQUMsQ0FBQTtBQUMvQyxPQUFBO0FBQ0osS0FBQTtBQUNKLEdBQUE7QUFFQUksRUFBQUEsZ0JBQWdCLENBQUNGLEtBQUssRUFBRUMsTUFBTSxFQUFFO0FBQzVCLElBQUEsS0FBSyxJQUFJRyxDQUFDLEdBQUcsQ0FBQyxFQUFFQSxDQUFDLEdBQUdILE1BQU0sQ0FBQ0ksTUFBTSxFQUFFRCxDQUFDLEVBQUUsRUFBRTtBQUNwQyxNQUFBLE1BQU1FLEtBQUssR0FBR04sS0FBSyxDQUFDQyxNQUFNLENBQUNNLFlBQVksQ0FBQ04sTUFBTSxDQUFDRyxDQUFDLENBQUMsQ0FBQyxDQUFBO0FBQ2xELE1BQUEsSUFBSUUsS0FBSyxFQUFFO1FBQ1BBLEtBQUssQ0FBQ0csbUJBQW1CLENBQUMsQ0FBQyxJQUFJLENBQUNYLFlBQVksQ0FBQyxDQUFDLENBQUE7QUFDbEQsT0FBQTtBQUNKLEtBQUE7QUFDSixHQUFBOztBQUdBWSxFQUFBQSxpQkFBaUIsR0FBRztBQUNoQixJQUFBLElBQUksQ0FBQ2QsS0FBSyxDQUFDZSxJQUFJLENBQUMsSUFBSSxDQUFDaEIsaUJBQWlCLENBQUMsQ0FBQyxDQUFDLENBQUNpQixJQUFJLENBQUMsQ0FBQTtBQUMvQyxJQUFBLEtBQUssSUFBSVIsQ0FBQyxHQUFHLENBQUMsRUFBRUEsQ0FBQyxHQUFHLElBQUksQ0FBQ1QsaUJBQWlCLENBQUNVLE1BQU0sRUFBRUQsQ0FBQyxFQUFFLEVBQUU7QUFDcEQsTUFBQSxJQUFJLENBQUNSLEtBQUssQ0FBQ2lCLEdBQUcsQ0FBQyxJQUFJLENBQUNsQixpQkFBaUIsQ0FBQ1MsQ0FBQyxDQUFDLENBQUNRLElBQUksQ0FBQyxDQUFBO0FBQ2xELEtBQUE7QUFDQSxJQUFBLElBQUksQ0FBQ2QsWUFBWSxDQUFDYyxJQUFJLEdBQUcsSUFBSSxDQUFDaEIsS0FBSyxDQUFBO0FBQ25DLElBQUEsSUFBSSxDQUFDRSxZQUFZLENBQUNnQixRQUFRLEdBQUcsQ0FBQyxDQUFBO0FBQ2xDLEdBQUE7QUFDSjs7OzsifQ==
