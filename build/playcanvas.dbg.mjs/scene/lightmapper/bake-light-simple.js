/**
 * @license
 * PlayCanvas Engine v1.58.0-dev revision 1331860ee (DEBUG PROFILER)
 * Copyright 2011-2022 PlayCanvas Ltd. All rights reserved.
 */
import { Vec2 } from '../../core/math/vec2.js';
import { random } from '../../core/math/random.js';
import { LIGHTTYPE_DIRECTIONAL } from '../constants.js';
import { BakeLight } from './bake-light.js';

const _tempPoint = new Vec2();

class BakeLightSimple extends BakeLight {
  get numVirtualLights() {
    if (this.light.type === LIGHTTYPE_DIRECTIONAL) {
      return this.light.bakeNumSamples;
    }

    return 1;
  }

  prepareVirtualLight(index, numVirtualLights) {
    const light = this.light;

    light._node.setLocalRotation(this.rotation);

    if (index > 0) {
      const directionalSpreadAngle = light.bakeArea;
      random.circlePointDeterministic(_tempPoint, index, numVirtualLights);

      _tempPoint.mulScalar(directionalSpreadAngle * 0.5);

      light._node.rotateLocal(_tempPoint.x, 0, _tempPoint.y);
    }

    light._node.getWorldTransform();

    const gamma = this.scene.gammaCorrection ? 2.2 : 1;
    const linearIntensity = Math.pow(this.intensity, gamma);
    light.intensity = Math.pow(linearIntensity / numVirtualLights, 1 / gamma);
  }

}

export { BakeLightSimple };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYmFrZS1saWdodC1zaW1wbGUuanMiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9zY2VuZS9saWdodG1hcHBlci9iYWtlLWxpZ2h0LXNpbXBsZS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBWZWMyIH0gZnJvbSAnLi4vLi4vY29yZS9tYXRoL3ZlYzIuanMnO1xuaW1wb3J0IHsgcmFuZG9tIH0gZnJvbSAnLi4vLi4vY29yZS9tYXRoL3JhbmRvbS5qcyc7XG5pbXBvcnQgeyBMSUdIVFRZUEVfRElSRUNUSU9OQUwgfSBmcm9tICcuLi9jb25zdGFudHMuanMnO1xuaW1wb3J0IHsgQmFrZUxpZ2h0IH0gZnJvbSAnLi9iYWtlLWxpZ2h0LmpzJztcblxuY29uc3QgX3RlbXBQb2ludCA9IG5ldyBWZWMyKCk7XG5cbi8vIGEgYmFrZSBsaWdodCByZXByZXNlbnRpbmcgYSBkaXJlY3Rpb25hbCwgb21uaSBvciBzcG90IHR5cGUgb2YgbGlnaHRcbmNsYXNzIEJha2VMaWdodFNpbXBsZSBleHRlbmRzIEJha2VMaWdodCB7XG4gICAgZ2V0IG51bVZpcnR1YWxMaWdodHMoKSB7XG4gICAgICAgIC8vIG9ubHkgZGlyZWN0aW9uYWwgbGlnaHRzIHN1cHBvcnQgbXVsdGlwbGUgc2FtcGxlc1xuICAgICAgICBpZiAodGhpcy5saWdodC50eXBlID09PSBMSUdIVFRZUEVfRElSRUNUSU9OQUwpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLmxpZ2h0LmJha2VOdW1TYW1wbGVzO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIDE7XG4gICAgfVxuXG4gICAgcHJlcGFyZVZpcnR1YWxMaWdodChpbmRleCwgbnVtVmlydHVhbExpZ2h0cykge1xuXG4gICAgICAgIC8vIHNldCB0byBvcmlnaW5hbCByb3RhdGlvblxuICAgICAgICBjb25zdCBsaWdodCA9IHRoaXMubGlnaHQ7XG4gICAgICAgIGxpZ2h0Ll9ub2RlLnNldExvY2FsUm90YXRpb24odGhpcy5yb3RhdGlvbik7XG5cbiAgICAgICAgLy8gcmFuZG9tIGFkanVzdG1lbnQgdG8gdGhlIGRpcmVjdGlvbmFsIGxpZ2h0IGZhY2luZ1xuICAgICAgICBpZiAoaW5kZXggPiAwKSB7XG4gICAgICAgICAgICBjb25zdCBkaXJlY3Rpb25hbFNwcmVhZEFuZ2xlID0gbGlnaHQuYmFrZUFyZWE7XG4gICAgICAgICAgICByYW5kb20uY2lyY2xlUG9pbnREZXRlcm1pbmlzdGljKF90ZW1wUG9pbnQsIGluZGV4LCBudW1WaXJ0dWFsTGlnaHRzKTtcbiAgICAgICAgICAgIF90ZW1wUG9pbnQubXVsU2NhbGFyKGRpcmVjdGlvbmFsU3ByZWFkQW5nbGUgKiAwLjUpO1xuICAgICAgICAgICAgbGlnaHQuX25vZGUucm90YXRlTG9jYWwoX3RlbXBQb2ludC54LCAwLCBfdGVtcFBvaW50LnkpO1xuICAgICAgICB9XG5cbiAgICAgICAgLy8gdXBkYXRlIHRyYW5zZm9ybVxuICAgICAgICBsaWdodC5fbm9kZS5nZXRXb3JsZFRyYW5zZm9ybSgpO1xuXG4gICAgICAgIC8vIGRpdmlkZSBpbnRlbnNpdHkgYnkgbnVtYmVyIG9mIHZpcnR1YWwgbGlnaHRzIChpbiBsaW5lYXIgc3BhY2UpXG4gICAgICAgIGNvbnN0IGdhbW1hID0gdGhpcy5zY2VuZS5nYW1tYUNvcnJlY3Rpb24gPyAyLjIgOiAxO1xuICAgICAgICBjb25zdCBsaW5lYXJJbnRlbnNpdHkgPSBNYXRoLnBvdyh0aGlzLmludGVuc2l0eSwgZ2FtbWEpO1xuICAgICAgICBsaWdodC5pbnRlbnNpdHkgPSBNYXRoLnBvdyhsaW5lYXJJbnRlbnNpdHkgLyBudW1WaXJ0dWFsTGlnaHRzLCAxIC8gZ2FtbWEpO1xuICAgIH1cbn1cblxuZXhwb3J0IHsgQmFrZUxpZ2h0U2ltcGxlIH07XG4iXSwibmFtZXMiOlsiX3RlbXBQb2ludCIsIlZlYzIiLCJCYWtlTGlnaHRTaW1wbGUiLCJCYWtlTGlnaHQiLCJudW1WaXJ0dWFsTGlnaHRzIiwibGlnaHQiLCJ0eXBlIiwiTElHSFRUWVBFX0RJUkVDVElPTkFMIiwiYmFrZU51bVNhbXBsZXMiLCJwcmVwYXJlVmlydHVhbExpZ2h0IiwiaW5kZXgiLCJfbm9kZSIsInNldExvY2FsUm90YXRpb24iLCJyb3RhdGlvbiIsImRpcmVjdGlvbmFsU3ByZWFkQW5nbGUiLCJiYWtlQXJlYSIsInJhbmRvbSIsImNpcmNsZVBvaW50RGV0ZXJtaW5pc3RpYyIsIm11bFNjYWxhciIsInJvdGF0ZUxvY2FsIiwieCIsInkiLCJnZXRXb3JsZFRyYW5zZm9ybSIsImdhbW1hIiwic2NlbmUiLCJnYW1tYUNvcnJlY3Rpb24iLCJsaW5lYXJJbnRlbnNpdHkiLCJNYXRoIiwicG93IiwiaW50ZW5zaXR5Il0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBS0EsTUFBTUEsVUFBVSxHQUFHLElBQUlDLElBQUosRUFBbkIsQ0FBQTs7QUFHQSxNQUFNQyxlQUFOLFNBQThCQyxTQUE5QixDQUF3QztBQUNoQixFQUFBLElBQWhCQyxnQkFBZ0IsR0FBRztBQUVuQixJQUFBLElBQUksS0FBS0MsS0FBTCxDQUFXQyxJQUFYLEtBQW9CQyxxQkFBeEIsRUFBK0M7TUFDM0MsT0FBTyxJQUFBLENBQUtGLEtBQUwsQ0FBV0csY0FBbEIsQ0FBQTtBQUNILEtBQUE7O0FBRUQsSUFBQSxPQUFPLENBQVAsQ0FBQTtBQUNILEdBQUE7O0FBRURDLEVBQUFBLG1CQUFtQixDQUFDQyxLQUFELEVBQVFOLGdCQUFSLEVBQTBCO0lBR3pDLE1BQU1DLEtBQUssR0FBRyxJQUFBLENBQUtBLEtBQW5CLENBQUE7O0FBQ0FBLElBQUFBLEtBQUssQ0FBQ00sS0FBTixDQUFZQyxnQkFBWixDQUE2QixLQUFLQyxRQUFsQyxDQUFBLENBQUE7O0lBR0EsSUFBSUgsS0FBSyxHQUFHLENBQVosRUFBZTtBQUNYLE1BQUEsTUFBTUksc0JBQXNCLEdBQUdULEtBQUssQ0FBQ1UsUUFBckMsQ0FBQTtBQUNBQyxNQUFBQSxNQUFNLENBQUNDLHdCQUFQLENBQWdDakIsVUFBaEMsRUFBNENVLEtBQTVDLEVBQW1ETixnQkFBbkQsQ0FBQSxDQUFBOztBQUNBSixNQUFBQSxVQUFVLENBQUNrQixTQUFYLENBQXFCSixzQkFBc0IsR0FBRyxHQUE5QyxDQUFBLENBQUE7O0FBQ0FULE1BQUFBLEtBQUssQ0FBQ00sS0FBTixDQUFZUSxXQUFaLENBQXdCbkIsVUFBVSxDQUFDb0IsQ0FBbkMsRUFBc0MsQ0FBdEMsRUFBeUNwQixVQUFVLENBQUNxQixDQUFwRCxDQUFBLENBQUE7QUFDSCxLQUFBOztJQUdEaEIsS0FBSyxDQUFDTSxLQUFOLENBQVlXLGlCQUFaLEVBQUEsQ0FBQTs7SUFHQSxNQUFNQyxLQUFLLEdBQUcsSUFBS0MsQ0FBQUEsS0FBTCxDQUFXQyxlQUFYLEdBQTZCLEdBQTdCLEdBQW1DLENBQWpELENBQUE7SUFDQSxNQUFNQyxlQUFlLEdBQUdDLElBQUksQ0FBQ0MsR0FBTCxDQUFTLElBQUtDLENBQUFBLFNBQWQsRUFBeUJOLEtBQXpCLENBQXhCLENBQUE7QUFDQWxCLElBQUFBLEtBQUssQ0FBQ3dCLFNBQU4sR0FBa0JGLElBQUksQ0FBQ0MsR0FBTCxDQUFTRixlQUFlLEdBQUd0QixnQkFBM0IsRUFBNkMsQ0FBQSxHQUFJbUIsS0FBakQsQ0FBbEIsQ0FBQTtBQUNILEdBQUE7O0FBL0JtQzs7OzsifQ==
