/**
 * @license
 * PlayCanvas Engine v1.57.0 revision f1998a31e (DEBUG PROFILER)
 * Copyright 2011-2022 PlayCanvas Ltd. All rights reserved.
 */
import { EventHandler } from '../core/event-handler.js';

class Render extends EventHandler {
  constructor() {
    super();
    this._meshes = null;
  }

  set meshes(value) {
    this.decRefMeshes();
    this._meshes = value;
    this.incRefMeshes();
    this.fire('set:meshes', value);
  }

  get meshes() {
    return this._meshes;
  }

  destroy() {
    this.meshes = null;
  }

  decRefMeshes() {
    if (this._meshes) {
      const count = this._meshes.length;

      for (let i = 0; i < count; i++) {
        const mesh = this._meshes[i];

        if (mesh) {
          mesh.decRefCount();

          if (mesh.refCount < 1) {
            mesh.destroy();
            this._meshes[i] = null;
          }
        }
      }
    }
  }

  incRefMeshes() {
    if (this._meshes) {
      const count = this._meshes.length;

      for (let i = 0; i < count; i++) {
        if (this._meshes[i]) {
          this._meshes[i].incRefCount();
        }
      }
    }
  }

}

export { Render };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmVuZGVyLmpzIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvc2NlbmUvcmVuZGVyLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEV2ZW50SGFuZGxlciB9IGZyb20gJy4uL2NvcmUvZXZlbnQtaGFuZGxlci5qcyc7XG5cbi8qKiBAdHlwZWRlZiB7aW1wb3J0KCcuL21lc2guanMnKS5NZXNofSBNZXNoICovXG5cbi8qKlxuICogQSByZW5kZXIgY29udGFpbnMgYW4gYXJyYXkgb2YgbWVzaGVzIHRoYXQgYXJlIHJlZmVyZW5jZWQgYnkgYSBzaW5nbGUgaGllcmFyY2h5IG5vZGUgaW4gYSBHTEJcbiAqIG1vZGVsLCBhbmQgYXJlIGFjY2Vzc2libGUgdXNpbmcge0BsaW5rIENvbnRhaW5lclJlc291cmNlI3JlbmRlcnN9IHByb3BlcnR5LiBUaGUgcmVuZGVyIGlzIHRoZVxuICogcmVzb3VyY2Ugb2YgYSBSZW5kZXIgQXNzZXQuXG4gKlxuICogQGF1Z21lbnRzIEV2ZW50SGFuZGxlclxuICogQGlnbm9yZVxuICovXG5jbGFzcyBSZW5kZXIgZXh0ZW5kcyBFdmVudEhhbmRsZXIge1xuICAgIC8qKlxuICAgICAqIENyZWF0ZSBhIG5ldyBSZW5kZXIgaW5zdGFuY2UuIFRoZXNlIGFyZSB1c3VhbGx5IGNyZWF0ZWQgYnkgdGhlIEdMQiBsb2FkZXIgYW5kIG5vdCBjcmVhdGVkXG4gICAgICogYnkgaGFuZC5cbiAgICAgKi9cbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgc3VwZXIoKTtcblxuICAgICAgICAvKipcbiAgICAgICAgICogTWVzaGVzIGFyZSByZWZlcmVuY2UgY291bnRlZCwgYW5kIHRoaXMgY2xhc3Mgb3ducyB0aGUgcmVmZXJlbmNlcyBhbmQgaXMgcmVzcG9uc2libGUgZm9yXG4gICAgICAgICAqIHJlbGVhc2luZyB0aGUgbWVzaGVzIHdoZW4gdGhleSBhcmUgbm8gbG9uZ2VyIHJlZmVyZW5jZWQuXG4gICAgICAgICAqXG4gICAgICAgICAqIEB0eXBlIHtNZXNoW119XG4gICAgICAgICAqIEBwcml2YXRlXG4gICAgICAgICAqL1xuICAgICAgICB0aGlzLl9tZXNoZXMgPSBudWxsO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIEZpcmVkIHdoZW4gdGhlIG1lc2hlcyBhcmUgc2V0LlxuICAgICAqXG4gICAgICogQGV2ZW50IFJlbmRlciNzZXQ6bWVzaGVzXG4gICAgICogQHBhcmFtIHtNZXNoW119IG1lc2hlcyAtIFRoZSBtZXNoZXMuXG4gICAgICogQGlnbm9yZVxuICAgICAqL1xuXG4gICAgLyoqXG4gICAgICogVGhlIG1lc2hlcyB0aGF0IHRoZSByZW5kZXIgY29udGFpbnMuXG4gICAgICpcbiAgICAgKiBAdHlwZSB7TWVzaFtdfVxuICAgICAqL1xuICAgIHNldCBtZXNoZXModmFsdWUpIHtcbiAgICAgICAgLy8gZGVjcmVtZW50IHJlZmVyZW5jZXMgb24gdGhlIGV4aXN0aW5nIG1lc2hlc1xuICAgICAgICB0aGlzLmRlY1JlZk1lc2hlcygpO1xuXG4gICAgICAgIC8vIGFzc2lnbiBuZXcgbWVzaGVzXG4gICAgICAgIHRoaXMuX21lc2hlcyA9IHZhbHVlO1xuICAgICAgICB0aGlzLmluY1JlZk1lc2hlcygpO1xuXG4gICAgICAgIHRoaXMuZmlyZSgnc2V0Om1lc2hlcycsIHZhbHVlKTtcbiAgICB9XG5cbiAgICBnZXQgbWVzaGVzKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5fbWVzaGVzO1xuICAgIH1cblxuICAgIGRlc3Ryb3koKSB7XG4gICAgICAgIHRoaXMubWVzaGVzID0gbnVsbDtcbiAgICB9XG5cbiAgICAvLyBkZWNyZW1lbnQgcmVmZXJlbmNlcyB0byBtZXNoZXMsIGRlc3Ryb3kgdGhlIG9uZXMgd2l0aCB6ZXJvIHJlZmVyZW5jZXNcbiAgICBkZWNSZWZNZXNoZXMoKSB7XG4gICAgICAgIGlmICh0aGlzLl9tZXNoZXMpIHtcbiAgICAgICAgICAgIGNvbnN0IGNvdW50ID0gdGhpcy5fbWVzaGVzLmxlbmd0aDtcbiAgICAgICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgY291bnQ7IGkrKykge1xuICAgICAgICAgICAgICAgIGNvbnN0IG1lc2ggPSB0aGlzLl9tZXNoZXNbaV07XG4gICAgICAgICAgICAgICAgaWYgKG1lc2gpIHtcbiAgICAgICAgICAgICAgICAgICAgbWVzaC5kZWNSZWZDb3VudCgpO1xuICAgICAgICAgICAgICAgICAgICBpZiAobWVzaC5yZWZDb3VudCA8IDEpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIG1lc2guZGVzdHJveSgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5fbWVzaGVzW2ldID0gbnVsbDtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cblxuICAgIC8vIGluY3JlbWVudHMgcmVmIGNvdW50IG9uIGFsbCBtZXNoZXNcbiAgICBpbmNSZWZNZXNoZXMoKSB7XG4gICAgICAgIGlmICh0aGlzLl9tZXNoZXMpIHtcbiAgICAgICAgICAgIGNvbnN0IGNvdW50ID0gdGhpcy5fbWVzaGVzLmxlbmd0aDtcbiAgICAgICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgY291bnQ7IGkrKykge1xuICAgICAgICAgICAgICAgIGlmICh0aGlzLl9tZXNoZXNbaV0pIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5fbWVzaGVzW2ldLmluY1JlZkNvdW50KCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxufVxuXG5leHBvcnQgeyBSZW5kZXIgfTtcbiJdLCJuYW1lcyI6WyJSZW5kZXIiLCJFdmVudEhhbmRsZXIiLCJjb25zdHJ1Y3RvciIsIl9tZXNoZXMiLCJtZXNoZXMiLCJ2YWx1ZSIsImRlY1JlZk1lc2hlcyIsImluY1JlZk1lc2hlcyIsImZpcmUiLCJkZXN0cm95IiwiY291bnQiLCJsZW5ndGgiLCJpIiwibWVzaCIsImRlY1JlZkNvdW50IiwicmVmQ291bnQiLCJpbmNSZWZDb3VudCJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQVlBLE1BQU1BLE1BQU4sU0FBcUJDLFlBQXJCLENBQWtDO0FBSzlCQyxFQUFBQSxXQUFXLEdBQUc7QUFDVixJQUFBLEtBQUEsRUFBQSxDQUFBO0lBU0EsSUFBS0MsQ0FBQUEsT0FBTCxHQUFlLElBQWYsQ0FBQTtBQUNILEdBQUE7O0VBZVMsSUFBTkMsTUFBTSxDQUFDQyxLQUFELEVBQVE7QUFFZCxJQUFBLElBQUEsQ0FBS0MsWUFBTCxFQUFBLENBQUE7SUFHQSxJQUFLSCxDQUFBQSxPQUFMLEdBQWVFLEtBQWYsQ0FBQTtBQUNBLElBQUEsSUFBQSxDQUFLRSxZQUFMLEVBQUEsQ0FBQTtBQUVBLElBQUEsSUFBQSxDQUFLQyxJQUFMLENBQVUsWUFBVixFQUF3QkgsS0FBeEIsQ0FBQSxDQUFBO0FBQ0gsR0FBQTs7QUFFUyxFQUFBLElBQU5ELE1BQU0sR0FBRztBQUNULElBQUEsT0FBTyxLQUFLRCxPQUFaLENBQUE7QUFDSCxHQUFBOztBQUVETSxFQUFBQSxPQUFPLEdBQUc7SUFDTixJQUFLTCxDQUFBQSxNQUFMLEdBQWMsSUFBZCxDQUFBO0FBQ0gsR0FBQTs7QUFHREUsRUFBQUEsWUFBWSxHQUFHO0lBQ1gsSUFBSSxJQUFBLENBQUtILE9BQVQsRUFBa0I7QUFDZCxNQUFBLE1BQU1PLEtBQUssR0FBRyxJQUFLUCxDQUFBQSxPQUFMLENBQWFRLE1BQTNCLENBQUE7O01BQ0EsS0FBSyxJQUFJQyxDQUFDLEdBQUcsQ0FBYixFQUFnQkEsQ0FBQyxHQUFHRixLQUFwQixFQUEyQkUsQ0FBQyxFQUE1QixFQUFnQztBQUM1QixRQUFBLE1BQU1DLElBQUksR0FBRyxJQUFBLENBQUtWLE9BQUwsQ0FBYVMsQ0FBYixDQUFiLENBQUE7O0FBQ0EsUUFBQSxJQUFJQyxJQUFKLEVBQVU7QUFDTkEsVUFBQUEsSUFBSSxDQUFDQyxXQUFMLEVBQUEsQ0FBQTs7QUFDQSxVQUFBLElBQUlELElBQUksQ0FBQ0UsUUFBTCxHQUFnQixDQUFwQixFQUF1QjtBQUNuQkYsWUFBQUEsSUFBSSxDQUFDSixPQUFMLEVBQUEsQ0FBQTtBQUNBLFlBQUEsSUFBQSxDQUFLTixPQUFMLENBQWFTLENBQWIsQ0FBQSxHQUFrQixJQUFsQixDQUFBO0FBQ0gsV0FBQTtBQUNKLFNBQUE7QUFDSixPQUFBO0FBQ0osS0FBQTtBQUNKLEdBQUE7O0FBR0RMLEVBQUFBLFlBQVksR0FBRztJQUNYLElBQUksSUFBQSxDQUFLSixPQUFULEVBQWtCO0FBQ2QsTUFBQSxNQUFNTyxLQUFLLEdBQUcsSUFBS1AsQ0FBQUEsT0FBTCxDQUFhUSxNQUEzQixDQUFBOztNQUNBLEtBQUssSUFBSUMsQ0FBQyxHQUFHLENBQWIsRUFBZ0JBLENBQUMsR0FBR0YsS0FBcEIsRUFBMkJFLENBQUMsRUFBNUIsRUFBZ0M7QUFDNUIsUUFBQSxJQUFJLElBQUtULENBQUFBLE9BQUwsQ0FBYVMsQ0FBYixDQUFKLEVBQXFCO0FBQ2pCLFVBQUEsSUFBQSxDQUFLVCxPQUFMLENBQWFTLENBQWIsQ0FBQSxDQUFnQkksV0FBaEIsRUFBQSxDQUFBO0FBQ0gsU0FBQTtBQUNKLE9BQUE7QUFDSixLQUFBO0FBQ0osR0FBQTs7QUE3RTZCOzs7OyJ9
