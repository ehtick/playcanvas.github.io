/**
 * @license
 * PlayCanvas Engine v1.59.0-preview revision 797466563 (DEBUG PROFILER)
 * Copyright 2011-2022 PlayCanvas Ltd. All rights reserved.
 */
import { Shader } from '../../platform/graphics/shader.js';
import { ShaderUtils } from '../../platform/graphics/shader-utils.js';
import { shaderChunks } from './chunks/chunks.js';
import { getProgramLibrary } from './get-program-library.js';

function createShader(device, vsName, fsName, useTransformFeedback = false) {
  return new Shader(device, ShaderUtils.createDefinition(device, {
    name: `${vsName}_${fsName}`,
    vertexCode: shaderChunks[vsName],
    fragmentCode: shaderChunks[fsName],
    useTransformFeedback: useTransformFeedback
  }));
}

function createShaderFromCode(device, vsCode, fsCode, uniqueName, useTransformFeedback = false, fragmentPreamble = '') {
  const programLibrary = getProgramLibrary(device);
  let shader = programLibrary.getCachedShader(uniqueName);
  if (!shader) {
    shader = new Shader(device, ShaderUtils.createDefinition(device, {
      name: uniqueName,
      vertexCode: vsCode,
      fragmentCode: fsCode,
      fragmentPreamble: fragmentPreamble,
      useTransformFeedback: useTransformFeedback
    }));
    programLibrary.setCachedShader(uniqueName, shader);
  }
  return shader;
}
shaderChunks.createShader = createShader;
shaderChunks.createShaderFromCode = createShaderFromCode;

export { createShader, createShaderFromCode };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXRpbHMuanMiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9zY2VuZS9zaGFkZXItbGliL3V0aWxzLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFNoYWRlciB9IGZyb20gJy4uLy4uL3BsYXRmb3JtL2dyYXBoaWNzL3NoYWRlci5qcyc7XG5pbXBvcnQgeyBTaGFkZXJVdGlscyB9IGZyb20gJy4uLy4uL3BsYXRmb3JtL2dyYXBoaWNzL3NoYWRlci11dGlscy5qcyc7XG5pbXBvcnQgeyBzaGFkZXJDaHVua3MgfSBmcm9tICcuL2NodW5rcy9jaHVua3MuanMnO1xuaW1wb3J0IHsgZ2V0UHJvZ3JhbUxpYnJhcnkgfSBmcm9tICcuL2dldC1wcm9ncmFtLWxpYnJhcnkuanMnO1xuXG4vKipcbiAqIENyZWF0ZSBhIHNoYWRlciBmcm9tIG5hbWVkIHNoYWRlciBjaHVua3MuXG4gKlxuICogQHBhcmFtIHtpbXBvcnQoJy4uLy4uL3BsYXRmb3JtL2dyYXBoaWNzL2dyYXBoaWNzLWRldmljZS5qcycpLkdyYXBoaWNzRGV2aWNlfSBkZXZpY2UgLSBUaGVcbiAqIGdyYXBoaWNzIGRldmljZS5cbiAqIEBwYXJhbSB7c3RyaW5nfSB2c05hbWUgLSBUaGUgdmVydGV4IHNoYWRlciBjaHVuayBuYW1lLlxuICogQHBhcmFtIHtzdHJpbmd9IGZzTmFtZSAtIFRoZSBmcmFnbWVudCBzaGFkZXIgY2h1bmsgbmFtZS5cbiAqIEBwYXJhbSB7Ym9vbGVhbn0gW3VzZVRyYW5zZm9ybUZlZWRiYWNrXSAtIFdoZXRoZXIgdG8gdXNlIHRyYW5zZm9ybSBmZWVkYmFjay4gRGVmYXVsdHMgdG8gZmFsc2UuXG4gKiBAcmV0dXJucyB7U2hhZGVyfSBUaGUgbmV3bHkgY3JlYXRlZCBzaGFkZXIuXG4gKi9cbmZ1bmN0aW9uIGNyZWF0ZVNoYWRlcihkZXZpY2UsIHZzTmFtZSwgZnNOYW1lLCB1c2VUcmFuc2Zvcm1GZWVkYmFjayA9IGZhbHNlKSB7XG4gICAgcmV0dXJuIG5ldyBTaGFkZXIoZGV2aWNlLCBTaGFkZXJVdGlscy5jcmVhdGVEZWZpbml0aW9uKGRldmljZSwge1xuICAgICAgICBuYW1lOiBgJHt2c05hbWV9XyR7ZnNOYW1lfWAsXG4gICAgICAgIHZlcnRleENvZGU6IHNoYWRlckNodW5rc1t2c05hbWVdLFxuICAgICAgICBmcmFnbWVudENvZGU6IHNoYWRlckNodW5rc1tmc05hbWVdLFxuICAgICAgICB1c2VUcmFuc2Zvcm1GZWVkYmFjazogdXNlVHJhbnNmb3JtRmVlZGJhY2tcbiAgICB9KSk7XG59XG5cbi8qKlxuICogQ3JlYXRlIGEgc2hhZGVyIGZyb20gdGhlIHN1cHBsaWVkIHNvdXJjZSBjb2RlLlxuICpcbiAqIEBwYXJhbSB7aW1wb3J0KCcuLi8uLi9wbGF0Zm9ybS9ncmFwaGljcy9ncmFwaGljcy1kZXZpY2UuanMnKS5HcmFwaGljc0RldmljZX0gZGV2aWNlIC0gVGhlXG4gKiBncmFwaGljcyBkZXZpY2UuXG4gKiBAcGFyYW0ge3N0cmluZ30gdnNDb2RlIC0gVGhlIHZlcnRleCBzaGFkZXIgY29kZS5cbiAqIEBwYXJhbSB7c3RyaW5nfSBmc0NvZGUgLSBUaGUgZnJhZ21lbnQgc2hhZGVyIGNvZGUuXG4gKiBAcGFyYW0ge3N0cmluZ30gdW5pcXVlTmFtZSAtIFVuaXF1ZSBuYW1lIGZvciB0aGUgc2hhZGVyLlxuICogQHBhcmFtIHtib29sZWFufSBbdXNlVHJhbnNmb3JtRmVlZGJhY2tdIC0gV2hldGhlciB0byB1c2UgdHJhbnNmb3JtIGZlZWRiYWNrLiBEZWZhdWx0cyB0byBmYWxzZS5cbiAqIEBwYXJhbSB7c3RyaW5nfSBbZnJhZ21lbnRQcmVhbWJsZV0gLSBBbiBvcHRpb25hbCAncHJlYW1ibGUnIHN0cmluZyBmb3IgdGhlIGZyYWdtZW50IHNoYWRlci4gRGVmYXVsdHNcbiAqIHRvICcnLlxuICogQHJldHVybnMge1NoYWRlcn0gVGhlIG5ld2x5IGNyZWF0ZWQgc2hhZGVyLlxuICovXG5mdW5jdGlvbiBjcmVhdGVTaGFkZXJGcm9tQ29kZShkZXZpY2UsIHZzQ29kZSwgZnNDb2RlLCB1bmlxdWVOYW1lLCB1c2VUcmFuc2Zvcm1GZWVkYmFjayA9IGZhbHNlLCBmcmFnbWVudFByZWFtYmxlID0gJycpIHtcbiAgICBjb25zdCBwcm9ncmFtTGlicmFyeSA9IGdldFByb2dyYW1MaWJyYXJ5KGRldmljZSk7XG4gICAgbGV0IHNoYWRlciA9IHByb2dyYW1MaWJyYXJ5LmdldENhY2hlZFNoYWRlcih1bmlxdWVOYW1lKTtcbiAgICBpZiAoIXNoYWRlcikge1xuICAgICAgICBzaGFkZXIgPSBuZXcgU2hhZGVyKGRldmljZSwgU2hhZGVyVXRpbHMuY3JlYXRlRGVmaW5pdGlvbihkZXZpY2UsIHtcbiAgICAgICAgICAgIG5hbWU6IHVuaXF1ZU5hbWUsXG4gICAgICAgICAgICB2ZXJ0ZXhDb2RlOiB2c0NvZGUsXG4gICAgICAgICAgICBmcmFnbWVudENvZGU6IGZzQ29kZSxcbiAgICAgICAgICAgIGZyYWdtZW50UHJlYW1ibGU6IGZyYWdtZW50UHJlYW1ibGUsXG4gICAgICAgICAgICB1c2VUcmFuc2Zvcm1GZWVkYmFjazogdXNlVHJhbnNmb3JtRmVlZGJhY2tcbiAgICAgICAgfSkpO1xuICAgICAgICBwcm9ncmFtTGlicmFyeS5zZXRDYWNoZWRTaGFkZXIodW5pcXVlTmFtZSwgc2hhZGVyKTtcbiAgICB9XG4gICAgcmV0dXJuIHNoYWRlcjtcbn1cblxuc2hhZGVyQ2h1bmtzLmNyZWF0ZVNoYWRlciA9IGNyZWF0ZVNoYWRlcjtcbnNoYWRlckNodW5rcy5jcmVhdGVTaGFkZXJGcm9tQ29kZSA9IGNyZWF0ZVNoYWRlckZyb21Db2RlO1xuXG5leHBvcnQgeyBjcmVhdGVTaGFkZXIsIGNyZWF0ZVNoYWRlckZyb21Db2RlIH07XG4iXSwibmFtZXMiOlsiY3JlYXRlU2hhZGVyIiwiZGV2aWNlIiwidnNOYW1lIiwiZnNOYW1lIiwidXNlVHJhbnNmb3JtRmVlZGJhY2siLCJTaGFkZXIiLCJTaGFkZXJVdGlscyIsImNyZWF0ZURlZmluaXRpb24iLCJuYW1lIiwidmVydGV4Q29kZSIsInNoYWRlckNodW5rcyIsImZyYWdtZW50Q29kZSIsImNyZWF0ZVNoYWRlckZyb21Db2RlIiwidnNDb2RlIiwiZnNDb2RlIiwidW5pcXVlTmFtZSIsImZyYWdtZW50UHJlYW1ibGUiLCJwcm9ncmFtTGlicmFyeSIsImdldFByb2dyYW1MaWJyYXJ5Iiwic2hhZGVyIiwiZ2V0Q2FjaGVkU2hhZGVyIiwic2V0Q2FjaGVkU2hhZGVyIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBZUEsU0FBU0EsWUFBWSxDQUFDQyxNQUFNLEVBQUVDLE1BQU0sRUFBRUMsTUFBTSxFQUFFQyxvQkFBb0IsR0FBRyxLQUFLLEVBQUU7RUFDeEUsT0FBTyxJQUFJQyxNQUFNLENBQUNKLE1BQU0sRUFBRUssV0FBVyxDQUFDQyxnQkFBZ0IsQ0FBQ04sTUFBTSxFQUFFO0FBQzNETyxJQUFBQSxJQUFJLEVBQUcsQ0FBQSxFQUFFTixNQUFPLENBQUEsQ0FBQSxFQUFHQyxNQUFPLENBQUMsQ0FBQTtBQUMzQk0sSUFBQUEsVUFBVSxFQUFFQyxZQUFZLENBQUNSLE1BQU0sQ0FBQztBQUNoQ1MsSUFBQUEsWUFBWSxFQUFFRCxZQUFZLENBQUNQLE1BQU0sQ0FBQztBQUNsQ0MsSUFBQUEsb0JBQW9CLEVBQUVBLG9CQUFBQTtBQUMxQixHQUFDLENBQUMsQ0FBQyxDQUFBO0FBQ1AsQ0FBQTs7QUFlQSxTQUFTUSxvQkFBb0IsQ0FBQ1gsTUFBTSxFQUFFWSxNQUFNLEVBQUVDLE1BQU0sRUFBRUMsVUFBVSxFQUFFWCxvQkFBb0IsR0FBRyxLQUFLLEVBQUVZLGdCQUFnQixHQUFHLEVBQUUsRUFBRTtBQUNuSCxFQUFBLE1BQU1DLGNBQWMsR0FBR0MsaUJBQWlCLENBQUNqQixNQUFNLENBQUMsQ0FBQTtBQUNoRCxFQUFBLElBQUlrQixNQUFNLEdBQUdGLGNBQWMsQ0FBQ0csZUFBZSxDQUFDTCxVQUFVLENBQUMsQ0FBQTtFQUN2RCxJQUFJLENBQUNJLE1BQU0sRUFBRTtJQUNUQSxNQUFNLEdBQUcsSUFBSWQsTUFBTSxDQUFDSixNQUFNLEVBQUVLLFdBQVcsQ0FBQ0MsZ0JBQWdCLENBQUNOLE1BQU0sRUFBRTtBQUM3RE8sTUFBQUEsSUFBSSxFQUFFTyxVQUFVO0FBQ2hCTixNQUFBQSxVQUFVLEVBQUVJLE1BQU07QUFDbEJGLE1BQUFBLFlBQVksRUFBRUcsTUFBTTtBQUNwQkUsTUFBQUEsZ0JBQWdCLEVBQUVBLGdCQUFnQjtBQUNsQ1osTUFBQUEsb0JBQW9CLEVBQUVBLG9CQUFBQTtBQUMxQixLQUFDLENBQUMsQ0FBQyxDQUFBO0FBQ0hhLElBQUFBLGNBQWMsQ0FBQ0ksZUFBZSxDQUFDTixVQUFVLEVBQUVJLE1BQU0sQ0FBQyxDQUFBO0FBQ3RELEdBQUE7QUFDQSxFQUFBLE9BQU9BLE1BQU0sQ0FBQTtBQUNqQixDQUFBO0FBRUFULFlBQVksQ0FBQ1YsWUFBWSxHQUFHQSxZQUFZLENBQUE7QUFDeENVLFlBQVksQ0FBQ0Usb0JBQW9CLEdBQUdBLG9CQUFvQjs7OzsifQ==
