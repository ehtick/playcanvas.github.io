/**
 * @license
 * PlayCanvas Engine v1.57.0 revision f1998a31e (DEBUG PROFILER)
 * Copyright 2011-2022 PlayCanvas Ltd. All rights reserved.
 */
class ReadStream {
  constructor(arraybuffer) {
    this.arraybuffer = arraybuffer;
    this.dataView = new DataView(arraybuffer);
    this.offset = 0;
    this.stack = [];
  }

  get remainingBytes() {
    return this.dataView.byteLength - this.offset;
  }

  reset(offset = 0) {
    this.offset = offset;
  }

  skip(bytes) {
    this.offset += bytes;
  }

  align(bytes) {
    this.offset = this.offset + bytes - 1 & ~(bytes - 1);
  }

  _inc(amount) {
    this.offset += amount;
    return this.offset - amount;
  }

  readChar() {
    return String.fromCharCode(this.dataView.getUint8(this.offset++));
  }

  readChars(numChars) {
    let result = '';

    for (let i = 0; i < numChars; ++i) {
      result += this.readChar();
    }

    return result;
  }

  readU8() {
    return this.dataView.getUint8(this.offset++);
  }

  readU16() {
    return this.dataView.getUint16(this._inc(2), true);
  }

  readU32() {
    return this.dataView.getUint32(this._inc(4), true);
  }

  readU64() {
    return this.readU32() + 2 ** 32 * this.readU32();
  }

  readU32be() {
    return this.dataView.getUint32(this._inc(4), false);
  }

  readArray(result) {
    for (let i = 0; i < result.length; ++i) {
      result[i] = this.readU8();
    }
  }

  readLine() {
    const view = this.dataView;
    let result = '';

    while (true) {
      if (this.offset >= view.byteLength) {
        break;
      }

      const c = String.fromCharCode(this.readU8());

      if (c === '\n') {
        break;
      }

      result += c;
    }

    return result;
  }

}

export { ReadStream };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmVhZC1zdHJlYW0uanMiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9jb3JlL3JlYWQtc3RyZWFtLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogSGVscGVyIGNsYXNzIGZvciBvcmdhbml6ZWQgcmVhZGluZyBvZiBtZW1vcnkuXG4gKlxuICogQGlnbm9yZVxuICovXG5jbGFzcyBSZWFkU3RyZWFtIHtcbiAgICBjb25zdHJ1Y3RvcihhcnJheWJ1ZmZlcikge1xuICAgICAgICB0aGlzLmFycmF5YnVmZmVyID0gYXJyYXlidWZmZXI7XG4gICAgICAgIHRoaXMuZGF0YVZpZXcgPSBuZXcgRGF0YVZpZXcoYXJyYXlidWZmZXIpO1xuICAgICAgICB0aGlzLm9mZnNldCA9IDA7XG4gICAgICAgIHRoaXMuc3RhY2sgPSBbXTtcbiAgICB9XG5cbiAgICBnZXQgcmVtYWluaW5nQnl0ZXMoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmRhdGFWaWV3LmJ5dGVMZW5ndGggLSB0aGlzLm9mZnNldDtcbiAgICB9XG5cbiAgICByZXNldChvZmZzZXQgPSAwKSB7XG4gICAgICAgIHRoaXMub2Zmc2V0ID0gb2Zmc2V0O1xuICAgIH1cblxuICAgIHNraXAoYnl0ZXMpIHtcbiAgICAgICAgdGhpcy5vZmZzZXQgKz0gYnl0ZXM7XG4gICAgfVxuXG4gICAgYWxpZ24oYnl0ZXMpIHtcbiAgICAgICAgdGhpcy5vZmZzZXQgPSAodGhpcy5vZmZzZXQgKyBieXRlcyAtIDEpICYgKH4oYnl0ZXMgLSAxKSk7XG4gICAgfVxuXG4gICAgX2luYyhhbW91bnQpIHtcbiAgICAgICAgdGhpcy5vZmZzZXQgKz0gYW1vdW50O1xuICAgICAgICByZXR1cm4gdGhpcy5vZmZzZXQgLSBhbW91bnQ7XG4gICAgfVxuXG4gICAgcmVhZENoYXIoKSB7XG4gICAgICAgIHJldHVybiBTdHJpbmcuZnJvbUNoYXJDb2RlKHRoaXMuZGF0YVZpZXcuZ2V0VWludDgodGhpcy5vZmZzZXQrKykpO1xuICAgIH1cblxuICAgIHJlYWRDaGFycyhudW1DaGFycykge1xuICAgICAgICBsZXQgcmVzdWx0ID0gJyc7XG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgbnVtQ2hhcnM7ICsraSkge1xuICAgICAgICAgICAgcmVzdWx0ICs9IHRoaXMucmVhZENoYXIoKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gcmVzdWx0O1xuICAgIH1cblxuICAgIHJlYWRVOCgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZGF0YVZpZXcuZ2V0VWludDgodGhpcy5vZmZzZXQrKyk7XG4gICAgfVxuXG4gICAgcmVhZFUxNigpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZGF0YVZpZXcuZ2V0VWludDE2KHRoaXMuX2luYygyKSwgdHJ1ZSk7XG4gICAgfVxuXG4gICAgcmVhZFUzMigpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZGF0YVZpZXcuZ2V0VWludDMyKHRoaXMuX2luYyg0KSwgdHJ1ZSk7XG4gICAgfVxuXG4gICAgcmVhZFU2NCgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucmVhZFUzMigpICsgMiAqKiAzMiAqIHRoaXMucmVhZFUzMigpO1xuICAgIH1cblxuICAgIC8vIGJpZy1lbmRpYW5cbiAgICByZWFkVTMyYmUoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmRhdGFWaWV3LmdldFVpbnQzMih0aGlzLl9pbmMoNCksIGZhbHNlKTtcbiAgICB9XG5cbiAgICByZWFkQXJyYXkocmVzdWx0KSB7XG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgcmVzdWx0Lmxlbmd0aDsgKytpKSB7XG4gICAgICAgICAgICByZXN1bHRbaV0gPSB0aGlzLnJlYWRVOCgpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgcmVhZExpbmUoKSB7XG4gICAgICAgIGNvbnN0IHZpZXcgPSB0aGlzLmRhdGFWaWV3O1xuICAgICAgICBsZXQgcmVzdWx0ID0gJyc7XG4gICAgICAgIHdoaWxlICh0cnVlKSB7XG4gICAgICAgICAgICBpZiAodGhpcy5vZmZzZXQgPj0gdmlldy5ieXRlTGVuZ3RoKSB7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGNvbnN0IGMgPSBTdHJpbmcuZnJvbUNoYXJDb2RlKHRoaXMucmVhZFU4KCkpO1xuICAgICAgICAgICAgaWYgKGMgPT09ICdcXG4nKSB7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXN1bHQgKz0gYztcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gcmVzdWx0O1xuICAgIH1cbn1cblxuZXhwb3J0IHsgUmVhZFN0cmVhbSB9O1xuIl0sIm5hbWVzIjpbIlJlYWRTdHJlYW0iLCJjb25zdHJ1Y3RvciIsImFycmF5YnVmZmVyIiwiZGF0YVZpZXciLCJEYXRhVmlldyIsIm9mZnNldCIsInN0YWNrIiwicmVtYWluaW5nQnl0ZXMiLCJieXRlTGVuZ3RoIiwicmVzZXQiLCJza2lwIiwiYnl0ZXMiLCJhbGlnbiIsIl9pbmMiLCJhbW91bnQiLCJyZWFkQ2hhciIsIlN0cmluZyIsImZyb21DaGFyQ29kZSIsImdldFVpbnQ4IiwicmVhZENoYXJzIiwibnVtQ2hhcnMiLCJyZXN1bHQiLCJpIiwicmVhZFU4IiwicmVhZFUxNiIsImdldFVpbnQxNiIsInJlYWRVMzIiLCJnZXRVaW50MzIiLCJyZWFkVTY0IiwicmVhZFUzMmJlIiwicmVhZEFycmF5IiwibGVuZ3RoIiwicmVhZExpbmUiLCJ2aWV3IiwiYyJdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFLQSxNQUFNQSxVQUFOLENBQWlCO0VBQ2JDLFdBQVcsQ0FBQ0MsV0FBRCxFQUFjO0lBQ3JCLElBQUtBLENBQUFBLFdBQUwsR0FBbUJBLFdBQW5CLENBQUE7QUFDQSxJQUFBLElBQUEsQ0FBS0MsUUFBTCxHQUFnQixJQUFJQyxRQUFKLENBQWFGLFdBQWIsQ0FBaEIsQ0FBQTtJQUNBLElBQUtHLENBQUFBLE1BQUwsR0FBYyxDQUFkLENBQUE7SUFDQSxJQUFLQyxDQUFBQSxLQUFMLEdBQWEsRUFB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
