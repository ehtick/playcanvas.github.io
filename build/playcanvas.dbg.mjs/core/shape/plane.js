/**
 * @license
 * PlayCanvas Engine v1.59.0-preview revision 797466563 (DEBUG PROFILER)
 * Copyright 2011-2022 PlayCanvas Ltd. All rights reserved.
 */
import { Vec3 } from '../math/vec3.js';

const tmpVecA = new Vec3();

class Plane {
  constructor(point = new Vec3(), normal = new Vec3(0, 0, 1)) {
    this.point = point;
    this.normal = normal;
  }

  intersectsLine(start, end, point) {
    const d = -this.normal.dot(this.point);
    const d0 = this.normal.dot(start) + d;
    const d1 = this.normal.dot(end) + d;
    const t = d0 / (d0 - d1);
    const intersects = t >= 0 && t <= 1;
    if (intersects && point) point.lerp(start, end, t);
    return intersects;
  }

  intersectsRay(ray, point) {
    const pointToOrigin = tmpVecA.sub2(this.point, ray.origin);
    const t = this.normal.dot(pointToOrigin) / this.normal.dot(ray.direction);
    const intersects = t >= 0;
    if (intersects && point) point.copy(ray.direction).mulScalar(t).add(ray.origin);
    return intersects;
  }
}

export { Plane };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGxhbmUuanMiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9jb3JlL3NoYXBlL3BsYW5lLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFZlYzMgfSBmcm9tICcuLi9tYXRoL3ZlYzMuanMnO1xuXG5jb25zdCB0bXBWZWNBID0gbmV3IFZlYzMoKTtcblxuLyoqXG4gKiBBbiBpbmZpbml0ZSBwbGFuZS5cbiAqXG4gKiBAaWdub3JlXG4gKi9cbmNsYXNzIFBsYW5lIHtcbiAgICAvKipcbiAgICAgKiBDcmVhdGUgYSBuZXcgUGxhbmUgaW5zdGFuY2UuXG4gICAgICpcbiAgICAgKiBAcGFyYW0ge1ZlYzN9IFtwb2ludF0gLSBQb2ludCBwb3NpdGlvbiBvbiB0aGUgcGxhbmUuIFRoZSBjb25zdHJ1Y3RvciB0YWtlcyBhIHJlZmVyZW5jZSBvZlxuICAgICAqIHRoaXMgcGFyYW1ldGVyLlxuICAgICAqIEBwYXJhbSB7VmVjM30gW25vcm1hbF0gLSBOb3JtYWwgb2YgdGhlIHBsYW5lLiBUaGUgY29uc3RydWN0b3IgdGFrZXMgYSByZWZlcmVuY2Ugb2YgdGhpc1xuICAgICAqIHBhcmFtZXRlci5cbiAgICAgKi9cbiAgICBjb25zdHJ1Y3Rvcihwb2ludCA9IG5ldyBWZWMzKCksIG5vcm1hbCA9IG5ldyBWZWMzKDAsIDAsIDEpKSB7XG4gICAgICAgIHRoaXMucG9pbnQgPSBwb2ludDtcbiAgICAgICAgdGhpcy5ub3JtYWwgPSBub3JtYWw7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogVGVzdCBpZiB0aGUgcGxhbmUgaW50ZXJzZWN0cyBiZXR3ZWVuIHR3byBwb2ludHMuXG4gICAgICpcbiAgICAgKiBAcGFyYW0ge1ZlYzN9IHN0YXJ0IC0gU3RhcnQgcG9zaXRpb24gb2YgbGluZS5cbiAgICAgKiBAcGFyYW0ge1ZlYzN9IGVuZCAtIEVuZCBwb3NpdGlvbiBvZiBsaW5lLlxuICAgICAqIEBwYXJhbSB7VmVjM30gW3BvaW50XSAtIElmIHRoZXJlIGlzIGFuIGludGVyc2VjdGlvbiwgdGhlIGludGVyc2VjdGlvbiBwb2ludCB3aWxsIGJlIGNvcGllZFxuICAgICAqIGludG8gaGVyZS5cbiAgICAgKiBAcmV0dXJucyB7Ym9vbGVhbn0gVHJ1ZSBpZiB0aGVyZSBpcyBhbiBpbnRlcnNlY3Rpb24uXG4gICAgICovXG4gICAgaW50ZXJzZWN0c0xpbmUoc3RhcnQsIGVuZCwgcG9pbnQpIHtcbiAgICAgICAgY29uc3QgZCA9IC10aGlzLm5vcm1hbC5kb3QodGhpcy5wb2ludCk7XG4gICAgICAgIGNvbnN0IGQwID0gdGhpcy5ub3JtYWwuZG90KHN0YXJ0KSArIGQ7XG4gICAgICAgIGNvbnN0IGQxID0gdGhpcy5ub3JtYWwuZG90KGVuZCkgKyBkO1xuXG4gICAgICAgIGNvbnN0IHQgPSBkMCAvIChkMCAtIGQxKTtcbiAgICAgICAgY29uc3QgaW50ZXJzZWN0cyA9IHQgPj0gMCAmJiB0IDw9IDE7XG4gICAgICAgIGlmIChpbnRlcnNlY3RzICYmIHBvaW50KVxuICAgICAgICAgICAgcG9pbnQubGVycChzdGFydCwgZW5kLCB0KTtcblxuICAgICAgICByZXR1cm4gaW50ZXJzZWN0cztcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBUZXN0IGlmIGEgcmF5IGludGVyc2VjdHMgd2l0aCB0aGUgaW5maW5pdGUgcGxhbmUuXG4gICAgICpcbiAgICAgKiBAcGFyYW0ge2ltcG9ydCgnLi9yYXkuanMnKS5SYXl9IHJheSAtIFJheSB0byB0ZXN0IGFnYWluc3QgKGRpcmVjdGlvbiBtdXN0IGJlIG5vcm1hbGl6ZWQpLlxuICAgICAqIEBwYXJhbSB7VmVjM30gW3BvaW50XSAtIElmIHRoZXJlIGlzIGFuIGludGVyc2VjdGlvbiwgdGhlIGludGVyc2VjdGlvbiBwb2ludCB3aWxsIGJlIGNvcGllZFxuICAgICAqIGludG8gaGVyZS5cbiAgICAgKiBAcmV0dXJucyB7Ym9vbGVhbn0gVHJ1ZSBpZiB0aGVyZSBpcyBhbiBpbnRlcnNlY3Rpb24uXG4gICAgICovXG4gICAgaW50ZXJzZWN0c1JheShyYXksIHBvaW50KSB7XG4gICAgICAgIGNvbnN0IHBvaW50VG9PcmlnaW4gPSB0bXBWZWNBLnN1YjIodGhpcy5wb2ludCwgcmF5Lm9yaWdpbik7XG4gICAgICAgIGNvbnN0IHQgPSB0aGlzLm5vcm1hbC5kb3QocG9pbnRUb09yaWdpbikgLyB0aGlzLm5vcm1hbC5kb3QocmF5LmRpcmVjdGlvbik7XG4gICAgICAgIGNvbnN0IGludGVyc2VjdHMgPSB0ID49IDA7XG5cbiAgICAgICAgaWYgKGludGVyc2VjdHMgJiYgcG9pbnQpXG4gICAgICAgICAgICBwb2ludC5jb3B5KHJheS5kaXJlY3Rpb24pLm11bFNjYWxhcih0KS5hZGQocmF5Lm9yaWdpbik7XG5cbiAgICAgICAgcmV0dXJuIGludGVyc2VjdHM7XG4gICAgfVxufVxuXG5leHBvcnQgeyBQbGFuZSB9O1xuIl0sIm5hbWVzIjpbInRtcFZlY0EiLCJWZWMzIiwiUGxhbmUiLCJjb25zdHJ1Y3RvciIsInBvaW50Iiwibm9ybWFsIiwiaW50ZXJzZWN0c0xpbmUiLCJzdGFydCIsImVuZCIsImQiLCJkb3QiLCJkMCIsImQxIiwidCIsImludGVyc2VjdHMiLCJsZXJwIiwiaW50ZXJzZWN0c1JheSIsInJheSIsInBvaW50VG9PcmlnaW4iLCJzdWIyIiwib3JpZ2luIiwiZGlyZWN0aW9uIiwiY29weSIsIm11bFNjYWxhciIsImFkZCJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUVBLE1BQU1BLE9BQU8sR0FBRyxJQUFJQyxJQUFJLEVBQUUsQ0FBQTs7QUFPMUIsTUFBTUMsS0FBSyxDQUFDO0FBU1JDLEVBQUFBLFdBQVcsQ0FBQ0MsS0FBSyxHQUFHLElBQUlILElBQUksRUFBRSxFQUFFSSxNQUFNLEdBQUcsSUFBSUosSUFBSSxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUU7SUFDeEQsSUFBSSxDQUFDRyxLQUFLLEdBQUdBLEtBQUssQ0FBQTtJQUNsQixJQUFJLENBQUNDLE1BQU0sR0FBR0EsTUFBTSxDQUFBO0FBQ3hCLEdBQUE7O0FBV0FDLEVBQUFBLGNBQWMsQ0FBQ0MsS0FBSyxFQUFFQyxHQUFHLEVBQUVKLEtBQUssRUFBRTtBQUM5QixJQUFBLE1BQU1LLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQ0osTUFBTSxDQUFDSyxHQUFHLENBQUMsSUFBSSxDQUFDTixLQUFLLENBQUMsQ0FBQTtJQUN0QyxNQUFNTyxFQUFFLEdBQUcsSUFBSSxDQUFDTixNQUFNLENBQUNLLEdBQUcsQ0FBQ0gsS0FBSyxDQUFDLEdBQUdFLENBQUMsQ0FBQTtJQUNyQyxNQUFNRyxFQUFFLEdBQUcsSUFBSSxDQUFDUCxNQUFNLENBQUNLLEdBQUcsQ0FBQ0YsR0FBRyxDQUFDLEdBQUdDLENBQUMsQ0FBQTtBQUVuQyxJQUFBLE1BQU1JLENBQUMsR0FBR0YsRUFBRSxJQUFJQSxFQUFFLEdBQUdDLEVBQUUsQ0FBQyxDQUFBO0lBQ3hCLE1BQU1FLFVBQVUsR0FBR0QsQ0FBQyxJQUFJLENBQUMsSUFBSUEsQ0FBQyxJQUFJLENBQUMsQ0FBQTtBQUNuQyxJQUFBLElBQUlDLFVBQVUsSUFBSVYsS0FBSyxFQUNuQkEsS0FBSyxDQUFDVyxJQUFJLENBQUNSLEtBQUssRUFBRUMsR0FBRyxFQUFFSyxDQUFDLENBQUMsQ0FBQTtBQUU3QixJQUFBLE9BQU9DLFVBQVUsQ0FBQTtBQUNyQixHQUFBOztBQVVBRSxFQUFBQSxhQUFhLENBQUNDLEdBQUcsRUFBRWIsS0FBSyxFQUFFO0FBQ3RCLElBQUEsTUFBTWMsYUFBYSxHQUFHbEIsT0FBTyxDQUFDbUIsSUFBSSxDQUFDLElBQUksQ0FBQ2YsS0FBSyxFQUFFYSxHQUFHLENBQUNHLE1BQU0sQ0FBQyxDQUFBO0lBQzFELE1BQU1QLENBQUMsR0FBRyxJQUFJLENBQUNSLE1BQU0sQ0FBQ0ssR0FBRyxDQUFDUSxhQUFhLENBQUMsR0FBRyxJQUFJLENBQUNiLE1BQU0sQ0FBQ0ssR0FBRyxDQUFDTyxHQUFHLENBQUNJLFNBQVMsQ0FBQyxDQUFBO0FBQ3pFLElBQUEsTUFBTVAsVUFBVSxHQUFHRCxDQUFDLElBQUksQ0FBQyxDQUFBO0lBRXpCLElBQUlDLFVBQVUsSUFBSVYsS0FBSyxFQUNuQkEsS0FBSyxDQUFDa0IsSUFBSSxDQUFDTCxHQUFHLENBQUNJLFNBQVMsQ0FBQyxDQUFDRSxTQUFTLENBQUNWLENBQUMsQ0FBQyxDQUFDVyxHQUFHLENBQUNQLEdBQUcsQ0FBQ0csTUFBTSxDQUFDLENBQUE7QUFFMUQsSUFBQSxPQUFPTixVQUFVLENBQUE7QUFDckIsR0FBQTtBQUNKOzs7OyJ9
