import"../core/tracing.js";import{EventHandler as t}from"../core/event-handler.js";import{math as e}from"../math/math.js";import{hasAudioContext as n}from"../audio/capabilities.js";import{Channel as s}from"../audio/channel.js";import{Channel3d as i}from"../audio/channel3d.js";import{Listener as o}from"./listener.js";const c=["click","contextmenu","auxclick","dblclick","mousedown","mouseup","pointerup","touchend","keydown","keyup"];class r extends t{constructor(t){super(),this._context=null,this._forceWebAudioApi=t.forceWebAudioApi,this._resumeContextCallback=null,this._selfSuspended=!1,this._unlocked=!1,this._unlocking=!1,!n()&&this._forceWebAudioApi,this.listener=new o(this),this._volume=1}set volume(t){t=e.clamp(t,0,1),this._volume=t,this.fire("volumechange",t)}get volume(){return this._volume}get suspended(){return!this._context||!this._unlocked||"running"!==this._context.state}get context(){if(!this._context&&(n()||this._forceWebAudioApi)&&("undefined"!=typeof AudioContext?this._context=new AudioContext:"undefined"!=typeof webkitAudioContext&&(this._context=new webkitAudioContext),this._context)){this._unlocked="running"===this._context.state,this._unlocked||this._addContextUnlockListeners();const t=this;this._context.onstatechange=function(){t._unlocked&&!t._selfSuspended&&"running"!==t._context.state&&t._context.resume().then((()=>{}),(t=>{})).catch((t=>{}))}}return this._context}suspend(){this._selfSuspended=!0,this.suspended||this.fire("suspend")}resume(){this._selfSuspended=!1,this._context&&(this._unlocked||this._unlocking)&&("interrupted"===this._context.state?this._context.resume().then((()=>{this.fire("resume")}),(t=>{})).catch((t=>{})):this.fire("resume"))}destroy(){this._removeUserInputListeners(),this.fire("destroy"),this._context&&this._context.close&&(this._context.close(),this._context=null)}playSound(t,e={}){let n=null;return s&&(n=new s(this,t,e),n.play()),n}playSound3d(t,e,n={}){let s=null;return i&&(s=new i(this,t,n),s.setPosition(e),n.volume&&s.setVolume(n.volume),n.loop&&s.setLoop(n.loop),n.maxDistance&&s.setMaxDistance(n.maxDistance),n.minDistance&&s.setMinDistance(n.minDistance),n.rollOffFactor&&s.setRollOffFactor(n.rollOffFactor),n.distanceModel&&s.setDistanceModel(n.distanceModel),s.play()),s}_addContextUnlockListeners(){this._unlocking=!1,this._resumeContextCallback||(this._resumeContextCallback=()=>{if(!this._context||this._unlocked||this._unlocking)return;this._unlocking=!0,this.resume();const t=this._context.createBuffer(1,1,this._context.sampleRate),e=this._context.createBufferSource();e.buffer=t,e.connect(this._context.destination),e.start(0),e.onended=t=>{e.disconnect(0),this._unlocked=!0,this._unlocking=!1,this._removeUserInputListeners()}}),c.forEach((t=>{window.addEventListener(t,this._resumeContextCallback,!1)}))}_removeUserInputListeners(){this._resumeContextCallback&&(c.forEach((t=>{window.removeEventListener(t,this._resumeContextCallback,!1)})),this._resumeContextCallback=null)}}export{r as SoundManager};
