import{Mat3 as t}from"../math/mat3.js";import{Mat4 as e}from"../math/mat4.js";import{Vec3 as a}from"../math/vec3.js";import{Quat as s}from"../math/quat.js";import{CULLFACE_FRONT as o}from"../graphics/constants.js";import{SHADER_FORWARDHDR as r,GAMMA_SRGBHDR as n,GAMMA_NONE as i,TONEMAP_LINEAR as m,LAYERID_SKYBOX as p}from"./constants.js";import{createBox as c}from"./procedural.js";import{GraphNode as h}from"./graph-node.js";import{Material as y}from"./materials/material.js";import{MeshInstance as g}from"./mesh-instance.js";import{skybox as b}from"../graphics/program-lib/programs/skybox.js";let u;class x{constructor(x,l,M){this.meshInstance=void 0,this._rotationMat3=void 0;const d=new y;d.getShaderVariant=function(t,e,a,s,o,p,c,h){const y=x.getProgramLibrary();return y.register("skybox",b),M.cubemap?y.getProgram("skybox",{type:"cubemap",encoding:M.encoding,useIntensity:1!==l.skyboxIntensity||0!==l.skyboxLuminance,mip:M.fixCubemapSeams?l.skyboxMip:0,fixSeams:M.fixCubemapSeams,gamma:o===r?l.gammaCorrection?n:i:l.gammaCorrection,toneMapping:o===r?m:l.toneMapping}):y.getProgram("skybox",{type:"envAtlas",encoding:M.encoding,useIntensity:1!==l.skyboxIntensity||0!==l.skyboxLuminance,gamma:o===r?l.gammaCorrection?n:i:l.gammaCorrection,toneMapping:o===r?m:l.toneMapping})},M.cubemap?d.setParameter("texture_cubeMap",M):(d.setParameter("texture_envAtlas",M),d.setParameter("mipLevel",l._skyboxMip)),l.skyboxRotation.equals(s.IDENTITY)?d.setParameter("cubeMapRotationMatrix",t.IDENTITY.data):(u=u||new e,this._rotationMat3=this._rotationMat3||new t,u.setTRS(a.ZERO,l._skyboxRotation,a.ONE),u.invertTo3x3(this._rotationMat3),d.setParameter("cubeMapRotationMatrix",this._rotationMat3.data)),d.cull=o,d.depthWrite=!1;const k=l.layers.getLayerById(p);if(k){const t=new h("Skybox"),e=c(x),a=new g(e,d,t);this.meshInstance=a,a.cull=!1,a._noDepthDrawGl1=!0,a.pick=!1,k.addMeshInstances([a]),this.skyLayer=k}}destroy(){this.meshInstance&&(this.skyLayer&&this.skyLayer.removeMeshInstances([this.meshInstance]),this.meshInstance.destroy(),this.meshInstance=null)}}export{x as Sky};
