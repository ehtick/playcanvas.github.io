import"../../core/tracing.js";import{Color as r}from"../../math/color.js";import{SHADERDEF_SKIN as o,SHADERDEF_SCREENSPACE as s,SHADERDEF_INSTANCING as t,SHADERDEF_MORPH_POSITION as e,SHADERDEF_MORPH_NORMAL as i,SHADERDEF_MORPH_TEXTURE_BASED as a}from"../constants.js";import{basic as h}from"../../graphics/program-lib/programs/basic.js";import{ShaderProcessorOptions as c}from"../../graphics/shader-processor-options.js";import{Material as l}from"./material.js";class p extends l{constructor(){super(),this.color=new r(1,1,1,1),this.colorUniform=new Float32Array(4),this.colorMap=null,this.vertexColors=!1}copy(r){return super.copy(r),this.color.copy(r.color),this.colorMap=r.colorMap,this.vertexColors=r.vertexColors,this}updateUniforms(r,o){this.clearParameters(),this.colorUniform[0]=this.color.r,this.colorUniform[1]=this.color.g,this.colorUniform[2]=this.color.b,this.colorUniform[3]=this.color.a,this.setParameter("uColor",this.colorUniform),this.colorMap&&this.setParameter("texture_diffuseMap",this.colorMap)}getShaderVariant(r,l,p,m,n,u,f,g){if(this.updateShader)return this.updateShader(r,l,p,m,n,u),this.shader;const d={skin:p&&0!=(p&o),screenSpace:p&&0!=(p&s),useInstancing:p&&0!=(p&t),useMorphPosition:p&&0!=(p&e),useMorphNormal:p&&0!=(p&i),useMorphTextureBased:p&&0!=(p&a),alphaTest:this.alphaTest>0,vertexColors:this.vertexColors,diffuseMap:!!this.colorMap,pass:n},M=new c(f,g),x=r.getProgramLibrary();return x.register("basic",h),x.getProgram("basic",d,M)}}export{p as BasicMaterial};
