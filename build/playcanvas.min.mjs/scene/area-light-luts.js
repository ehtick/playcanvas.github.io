import{FloatPacking as t}from"../math/float-packing.js";import{Texture as e}from"../graphics/texture.js";import{DeviceCache as r}from"../graphics/device-cache.js";import{ADDRESS_CLAMP_TO_EDGE as s,TEXTURETYPE_DEFAULT as o,FILTER_LINEAR as a,FILTER_NEAREST as n,PIXELFORMAT_R8_G8_B8_A8 as c,PIXELFORMAT_RGBA32F as l,PIXELFORMAT_RGBA16F as i}from"../graphics/constants.js";class u{constructor(t,e){this.texture0=t,this.texture1=e}destroy(){var t,e;null==(t=this.texture0)||t.destroy(),null==(e=this.texture1)||e.destroy()}}const p=new r;class h{static createTexture(t,r,c,l=""){return new e(t,{width:c,height:c,format:r,addressU:s,addressV:s,type:o,magFilter:a,minFilter:n,anisotropy:1,name:`AreaLightLUT${l}`})}static applyTextures(t,e,r){p.remove(t),p.get(t,(()=>new u(e,e===r?null:r))),t.scope.resolve("areaLightsLutTex1").setValue(e),t.scope.resolve("areaLightsLutTex2").setValue(r)}static createPlaceholder(t){const e=h.createTexture(t,c,2,"placeholder");e.lock().fill(0),e.unlock(),h.applyTextures(t,e,e)}static set(e,r,s){function o(t,e,r){const s=h.createTexture(t,r,64);return s.lock().set(e),s.unlock(),s.upload(),s}function a(t,e,r){const s=t.length,o=new Float32Array(s);for(let a=0;a<s;a++){const s=a%4;o[a]=(t[a]+e[s])*r[s]}return o}function n(e){const r=e.length,s=new Uint16Array(r),o=t.float2Half;for(let t=0;t<r;t++)s[t]=o(e[t]);return s}function c(t){const e=t.length,r=new Uint8ClampedArray(e);for(let s=0;s<e;s++)r[s]=255*t[s];return r}const u=r,p=s;let f,m;const g=e.areaLightLutFormat;if(g===l)f=u,m=p;else if(g===i)f=n(u),m=n(p);else{const t=[-.306897,0,0,0],e=[1.442787,1,1,1];f=c(a(u,[0,.2976,.01381,0],[.999,3.08737,1.6546,.603249])),m=c(a(p,t,e))}const x=o(e,f,g),d=o(e,m,g);h.applyTextures(e,x,d)}}export{h as AreaLightLuts};
