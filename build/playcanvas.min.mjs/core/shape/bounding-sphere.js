import"../tracing.js";import{Vec3 as t}from"../math/vec3.js";const r=new t,i=new t;class s{constructor(r=new t,i=.5){this.center=void 0,this.radius=void 0,this.center=r,this.radius=i}containsPoint(t){const i=r.sub2(t,this.center).lengthSq(),s=this.radius;return i<s*s}intersectsRay(t,s){const n=r.copy(t.origin).sub(this.center),e=n.dot(i.copy(t.direction).normalize()),o=n.dot(n)-this.radius*this.radius;if(o>0&&e>0)return!1;const c=e*e-o;if(c<0)return!1;const a=Math.abs(-e-Math.sqrt(c));return s&&s.copy(t.direction).mulScalar(a).add(t.origin),!0}intersectsBoundingSphere(t){r.sub2(t.center,this.center);const i=t.radius+this.radius;return r.lengthSq()<=i*i}}export{s as BoundingSphere};
