import"../../core/debug.js";import"../../core/tracing.js";import{Color as e}from"../../core/math/color.js";class t{constructor(){this.clearValue=new e(0,0,0,1),this.clear=!1,this.store=!1,this.resolve=!0,this.mipmaps=!1}}class s{constructor(){this.clearDepthValue=1,this.clearStencilValue=0,this.clearDepth=!1,this.clearStencil=!1,this.storeDepth=!1,this.storeStencil=!1}}class r{get colorOps(){return this.colorArrayOps[0]}constructor(e,t){this.name=void 0,this.renderTarget=void 0,this.samples=0,this.colorArrayOps=[],this.depthStencilOps=void 0,this.requiresCubemaps=!0,this.fullSizeClearRect=!0,this.execute=void 0,this.before=void 0,this.after=void 0,this.device=e,this.execute=t}init(e){var r;this.renderTarget=e||null,this.samples=Math.max(this.renderTarget?this.renderTarget.samples:this.device.samples,1),this.depthStencilOps=new s;const i=e?null==(r=e._colorBuffers)?void 0:r.length:1;for(let e=0;e<i;e++){var l,h;const s=new t;this.colorArrayOps[e]=s,1===this.samples&&(s.store=!0,s.resolve=!1),null!=(l=this.renderTarget)&&null!=(h=l._colorBuffers)&&h[e].mipmaps&&(s.mipmaps=!0)}}setClearColor(e){const t=this.colorArrayOps.length;for(let s=0;s<t;s++){const t=this.colorArrayOps[s];t.clearValue.copy(e),t.clear=!0}}setClearDepth(e){this.depthStencilOps.clearDepthValue=e,this.depthStencilOps.clearDepth=!0}setClearStencil(e){this.depthStencilOps.clearStencilValue=e,this.depthStencilOps.clearStencil=!0}render(){var e,t,s;const r=this.device,i=void 0!==this.renderTarget;null==(e=this.before)||e.call(this),i&&r.startPass(this),null==(t=this.execute)||t.call(this),i&&r.endPass(this),null==(s=this.after)||s.call(this),r.renderPassIndex++}}export{t as ColorAttachmentOps,s as DepthStencilAttachmentOps,r as RenderPass};
