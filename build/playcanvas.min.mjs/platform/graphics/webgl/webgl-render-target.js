import"../../../core/debug.js";class e{constructor(e,r){this.msaaFB=void 0,this.resolveFB=void 0,this.msaaFB=e,this.resolveFB=r}destroy(e){this.msaaFB&&(e.deleteRenderbuffer(this.msaaFB),this.msaaFB=null),this.resolveFB&&(e.deleteRenderbuffer(this.resolveFB),this.resolveFB=null)}}class r{constructor(){this._glFrameBuffer=null,this._glDepthBuffer=null,this._glResolveFrameBuffer=null,this.colorMrtFramebuffers=null,this._glMsaaColorBuffers=[],this._glMsaaDepthBuffer=null}destroy(e){var r;const f=e.gl;this._glFrameBuffer&&(f.deleteFramebuffer(this._glFrameBuffer),this._glFrameBuffer=null),this._glDepthBuffer&&(f.deleteRenderbuffer(this._glDepthBuffer),this._glDepthBuffer=null),this._glResolveFrameBuffer&&(f.deleteFramebuffer(this._glResolveFrameBuffer),this._glResolveFrameBuffer=null),this._glMsaaColorBuffers.forEach((e=>{f.deleteRenderbuffer(e)})),this._glMsaaColorBuffers.length=0,null==(r=this.colorMrtFramebuffers)||r.forEach((e=>{e.destroy(f)})),this.colorMrtFramebuffers=null,this._glMsaaDepthBuffer&&(f.deleteRenderbuffer(this._glMsaaDepthBuffer),this._glMsaaDepthBuffer=null)}get initialized(){return null!==this._glFrameBuffer}init(e,r){var f,t;const l=e.gl;this._glFrameBuffer=l.createFramebuffer(),e.setFramebuffer(this._glFrameBuffer);const s=null!=(f=null==(t=r._colorBuffers)?void 0:t.length)?f:0,u=e.webgl2?l.COLOR_ATTACHMENT0:e.extDrawBuffers.COLOR_ATTACHMENT0_WEBGL,a=[];for(let f=0;f<s;++f){const t=r.getColorBuffer(f);t&&(t.impl._glTexture||(t._width=Math.min(t.width,e.maxRenderBufferSize),t._height=Math.min(t.height,e.maxRenderBufferSize),e.setTexture(t,0)),l.framebufferTexture2D(l.FRAMEBUFFER,u+f,t._cubemap?l.TEXTURE_CUBE_MAP_POSITIVE_X+r._face:l.TEXTURE_2D,t.impl._glTexture,0),a.push(u+f))}e.drawBuffers&&e.drawBuffers(a);const E=r._depthBuffer;if(E)E.impl._glTexture||(E._width=Math.min(E.width,e.maxRenderBufferSize),E._height=Math.min(E.height,e.maxRenderBufferSize),e.setTexture(E,0)),r._stencil?l.framebufferTexture2D(l.FRAMEBUFFER,l.DEPTH_STENCIL_ATTACHMENT,E._cubemap?l.TEXTURE_CUBE_MAP_POSITIVE_X+r._face:l.TEXTURE_2D,r._depthBuffer.impl._glTexture,0):l.framebufferTexture2D(l.FRAMEBUFFER,l.DEPTH_ATTACHMENT,E._cubemap?l.TEXTURE_CUBE_MAP_POSITIVE_X+r._face:l.TEXTURE_2D,r._depthBuffer.impl._glTexture,0);else if(r._depth){if(!(r._samples>1&&e.webgl2)){if(this._glDepthBuffer||(this._glDepthBuffer=l.createRenderbuffer()),l.bindRenderbuffer(l.RENDERBUFFER,this._glDepthBuffer),r._stencil)l.renderbufferStorage(l.RENDERBUFFER,l.DEPTH_STENCIL,r.width,r.height),l.framebufferRenderbuffer(l.FRAMEBUFFER,l.DEPTH_STENCIL_ATTACHMENT,l.RENDERBUFFER,this._glDepthBuffer);else{const f=e.webgl2?l.DEPTH_COMPONENT32F:l.DEPTH_COMPONENT16;l.renderbufferStorage(l.RENDERBUFFER,f,r.width,r.height),l.framebufferRenderbuffer(l.FRAMEBUFFER,l.DEPTH_ATTACHMENT,l.RENDERBUFFER,this._glDepthBuffer)}l.bindRenderbuffer(l.RENDERBUFFER,null)}}if(e.webgl2&&r._samples>1){var F,i;this._glResolveFrameBuffer=this._glFrameBuffer,this._glFrameBuffer=l.createFramebuffer(),e.setFramebuffer(this._glFrameBuffer);const f=null!=(F=null==(i=r._colorBuffers)?void 0:i.length)?F:0;for(let e=0;e<f;++e){const f=r.getColorBuffer(e);if(f){const t=l.createRenderbuffer();this._glMsaaColorBuffers.push(t),l.bindRenderbuffer(l.RENDERBUFFER,t),l.renderbufferStorageMultisample(l.RENDERBUFFER,r._samples,f.impl._glInternalFormat,r.width,r.height),l.framebufferRenderbuffer(l.FRAMEBUFFER,l.COLOR_ATTACHMENT0+e,l.RENDERBUFFER,t)}}r._depth&&(this._glMsaaDepthBuffer||(this._glMsaaDepthBuffer=l.createRenderbuffer()),l.bindRenderbuffer(l.RENDERBUFFER,this._glMsaaDepthBuffer),r._stencil?(l.renderbufferStorageMultisample(l.RENDERBUFFER,r._samples,l.DEPTH24_STENCIL8,r.width,r.height),l.framebufferRenderbuffer(l.FRAMEBUFFER,l.DEPTH_STENCIL_ATTACHMENT,l.RENDERBUFFER,this._glMsaaDepthBuffer)):(l.renderbufferStorageMultisample(l.RENDERBUFFER,r._samples,l.DEPTH_COMPONENT32F,r.width,r.height),l.framebufferRenderbuffer(l.FRAMEBUFFER,l.DEPTH_ATTACHMENT,l.RENDERBUFFER,this._glMsaaDepthBuffer))),f>1&&(this._createMsaaMrtFramebuffers(e,r,f),e.setFramebuffer(this._glFrameBuffer),e.drawBuffers(a))}}_createMsaaMrtFramebuffers(r,f,t){const l=r.gl;this.colorMrtFramebuffers=[];for(let s=0;s<t;++s){const t=f.getColorBuffer(s),u=l.createFramebuffer();r.setFramebuffer(u);const a=this._glMsaaColorBuffers[s];l.bindRenderbuffer(l.RENDERBUFFER,a),l.renderbufferStorageMultisample(l.RENDERBUFFER,f._samples,t.impl._glInternalFormat,f.width,f.height),l.framebufferRenderbuffer(l.FRAMEBUFFER,l.COLOR_ATTACHMENT0,l.RENDERBUFFER,a),r.drawBuffers([l.COLOR_ATTACHMENT0]);const E=l.createFramebuffer();r.setFramebuffer(E),l.framebufferTexture2D(l.FRAMEBUFFER,l.COLOR_ATTACHMENT0,t._cubemap?l.TEXTURE_CUBE_MAP_POSITIVE_X+f._face:l.TEXTURE_2D,t.impl._glTexture,0),this.colorMrtFramebuffers[s]=new e(u,E)}}_checkFbo(e,r,f=""){const t=e.gl;switch(t.checkFramebufferStatus(t.FRAMEBUFFER)){case t.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:case t.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:case t.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:case t.FRAMEBUFFER_UNSUPPORTED:}}loseContext(){this._glFrameBuffer=null,this._glDepthBuffer=null,this._glResolveFrameBuffer=null,this._glMsaaColorBuffers.length=0,this._glMsaaDepthBuffer=null,this.colorMrtFramebuffers=null}internalResolve(e,r,f,t,l){const s=e.gl;s.bindFramebuffer(s.READ_FRAMEBUFFER,r),s.bindFramebuffer(s.DRAW_FRAMEBUFFER,f),s.blitFramebuffer(0,0,t.width,t.height,0,0,t.width,t.height,l,s.NEAREST)}resolve(e,r,f,t){if(e.webgl2){const l=e.gl;if(this.colorMrtFramebuffers){if(f)for(let f=0;f<this.colorMrtFramebuffers.length;f++){const t=this.colorMrtFramebuffers[f];this.internalResolve(e,t.msaaFB,t.resolveFB,r,l.COLOR_BUFFER_BIT)}t&&this.internalResolve(e,this._glFrameBuffer,this._glResolveFrameBuffer,r,l.DEPTH_BUFFER_BIT)}else this.internalResolve(e,this._glFrameBuffer,this._glResolveFrameBuffer,r,(f?l.COLOR_BUFFER_BIT:0)|(t?l.DEPTH_BUFFER_BIT:0));l.bindFramebuffer(l.FRAMEBUFFER,this._glFrameBuffer)}}}export{r as WebglRenderTarget};
