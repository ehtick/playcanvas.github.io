import"../../core/debug.js";import{math as e}from"../../core/math/math.js";import{RenderTarget as t}from"./render-target.js";import{TextureUtils as s}from"./texture-utils.js";import{PIXELFORMAT_RGBA8 as i,isCompressedPixelFormat as h,FILTER_LINEAR_MIPMAP_LINEAR as l,FILTER_LINEAR as r,ADDRESS_REPEAT as a,FUNC_LESS as n,TEXTURETYPE_DEFAULT as p,TEXTURETYPE_RGBM as o,TEXTURETYPE_SWIZZLEGGGR as d,TEXTUREPROJECTION_NONE as u,TEXTUREPROJECTION_CUBE as m,PIXELFORMAT_RGB16F as _,PIXELFORMAT_RGB32F as c,PIXELFORMAT_RGBA16F as g,PIXELFORMAT_RGBA32F as v,TEXTURETYPE_RGBP as f,TEXTURETYPE_RGBE as y,TEXTURELOCK_WRITE as w,getPixelFormatArrayType as b}from"./constants.js";let U=0;class F{constructor(e,t={}){var s,_,c,g,v,f,y,w,b,F,x,A,C,V,j,O,R,z,S,k;(this.name=void 0,this._isRenderTarget=!1,this._gpuSize=0,this.id=U++,this._invalid=!1,this._lockedLevel=-1,this.renderVersionDirty=0,this.device=e,this.name=null!=(s=t.name)?s:null,this._width=null!=(_=t.width)?_:4,this._height=null!=(c=t.height)?c:4,this._format=null!=(g=t.format)?g:i,this._compressed=h(this._format),e.supportsVolumeTextures)?(this._volume=null!=(S=t.volume)&&S,this._depth=null!=(k=t.depth)?k:1):(this._volume=!1,this._depth=1);this._cubemap=null!=(v=t.cubemap)&&v,this.fixCubemapSeams=null!=(f=t.fixCubemapSeams)&&f,this._flipY=null!=(y=t.flipY)&&y,this._premultiplyAlpha=null!=(w=t.premultiplyAlpha)&&w,this._mipmaps=null==(b=null!=(F=t.mipmaps)?F:t.autoMipmap)||b,this._minFilter=null!=(x=t.minFilter)?x:l,this._magFilter=null!=(A=t.magFilter)?A:r,this._anisotropy=null!=(C=t.anisotropy)?C:1,this._addressU=null!=(V=t.addressU)?V:a,this._addressV=null!=(j=t.addressV)?j:a,this._addressW=null!=(O=t.addressW)?O:a,this._compareOnRead=null!=(R=t.compareOnRead)&&R,this._compareFunc=null!=(z=t.compareFunc)?z:n,this.type=p,t.hasOwnProperty("type")?this.type=t.type:t.hasOwnProperty("rgbm")?this.type=t.rgbm?o:p:t.hasOwnProperty("swizzleGGGR")&&(this.type=t.swizzleGGGR?d:p),this.projection=u,this._cubemap?this.projection=m:t.projection&&t.projection!==m&&(this.projection=t.projection),this.impl=e.createTextureImpl(this),this.dirtyAll(),this._levels=t.levels,this._levels?this.upload():this._levels=this._cubemap?[[null,null,null,null,null,null]]:[null],e.textures.push(this)}destroy(){if(this.device){const e=this.device,t=e.textures.indexOf(this);-1!==t&&e.textures.splice(t,1),e.scope.removeValue(this),this.impl.destroy(e),this.adjustVramSizeTracking(e._vram,-this._gpuSize),this._levels=null,this.device=null}}loseContext(){this.impl.loseContext(),this.dirtyAll()}adjustVramSizeTracking(e,t){e.tex+=t}propertyChanged(e){this.impl.propertyChanged(e),this.renderVersionDirty=this.device.renderVersion}get requiredMipLevels(){return this.mipmaps?Math.floor(Math.log2(Math.max(this.width,this.height)))+1:1}set minFilter(e){this._minFilter!==e&&(this._minFilter=e,this.propertyChanged(1))}get minFilter(){return this._minFilter}set magFilter(e){this._magFilter!==e&&(this._magFilter=e,this.propertyChanged(2))}get magFilter(){return this._magFilter}set addressU(e){this._addressU!==e&&(this._addressU=e,this.propertyChanged(4))}get addressU(){return this._addressU}set addressV(e){this._addressV!==e&&(this._addressV=e,this.propertyChanged(8))}get addressV(){return this._addressV}set addressW(e){this.device.supportsVolumeTextures&&this._volume&&e!==this._addressW&&(this._addressW=e,this.propertyChanged(16))}get addressW(){return this._addressW}set compareOnRead(e){this._compareOnRead!==e&&(this._compareOnRead=e,this.propertyChanged(32))}get compareOnRead(){return this._compareOnRead}set compareFunc(e){this._compareFunc!==e&&(this._compareFunc=e,this.propertyChanged(64))}get compareFunc(){return this._compareFunc}set anisotropy(e){this._anisotropy!==e&&(this._anisotropy=e,this.propertyChanged(128))}get anisotropy(){return this._anisotropy}set mipmaps(e){this._mipmaps!==e&&(this._mipmaps=e,this.device.isWebGPU,e&&(this._needsMipmapsUpload=!0))}get mipmaps(){return this._mipmaps}get width(){return this._width}get height(){return this._height}get depth(){return this._depth}get format(){return this._format}get cubemap(){return this._cubemap}get gpuSize(){const e=this.pot&&this._mipmaps&&!(this._compressed&&1===this._levels.length);return s.calcGpuSize(this._width,this._height,this._depth,this._format,e,this._cubemap)}get volume(){return this._volume}set flipY(e){this._flipY!==e&&(this._flipY=e,this._needsUpload=!0)}get flipY(){return this._flipY}set premultiplyAlpha(e){this._premultiplyAlpha!==e&&(this._premultiplyAlpha=e,this._needsUpload=!0)}get premultiplyAlpha(){return this._premultiplyAlpha}get pot(){return e.powerOfTwo(this._width)&&e.powerOfTwo(this._height)}get encoding(){switch(this.type){case o:return"rgbm";case y:return"rgbe";case f:return"rgbp";default:return this.format===_||this.format===c||this.format===g||this.format===v?"linear":"srgb"}}dirtyAll(){this._levelsUpdated=this._cubemap?[[!0,!0,!0,!0,!0,!0]]:[!0],this._needsUpload=!0,this._needsMipmapsUpload=this._mipmaps,this._mipmapsUploaded=!1,this.propertyChanged(255)}lock(e={}){void 0===e.level&&(e.level=0),void 0===e.face&&(e.face=0),void 0===e.mode&&(e.mode=w),this._lockedLevel=e.level;const t=this.cubemap?this._levels[e.face]:this._levels;if(null===t[e.level]){const i=Math.max(1,this._width>>e.level),h=Math.max(1,this._height>>e.level),l=new ArrayBuffer(s.calcLevelGpuSize(i,h,this._format));t[e.level]=new(b(this._format))(l)}return t[e.level]}setSource(e,t=0){let s,i,h=!1;if(this._cubemap){if(e[0]){s=e[0].width||0,i=e[0].height||0;for(let t=0;t<6;t++){const l=e[t];if(!l||l.width!==s||l.height!==i||!this.device._isBrowserInterface(l)){h=!0;break}}}else h=!0;if(!h)for(let s=0;s<6;s++)this._levels[t][s]!==e[s]&&(this._levelsUpdated[t][s]=!0)}else this.device._isBrowserInterface(e)||(h=!0),h||(e!==this._levels[t]&&(this._levelsUpdated[t]=!0),s=e.width,i=e.height);if(h)if(this._width=4,this._height=4,this._cubemap)for(let e=0;e<6;e++)this._levels[t][e]=null,this._levelsUpdated[t][e]=!0;else this._levels[t]=null,this._levelsUpdated[t]=!0;else 0===t&&(this._width=s,this._height=i),this._levels[t]=e;this._invalid===h&&h||(this._invalid=h,this.upload())}getSource(e=0){return this._levels[e]}unlock(){this._lockedLevel,this.upload(),this._lockedLevel=-1}upload(){var e,t;this._needsUpload=!0,this._needsMipmapsUpload=this._mipmaps,null==(e=(t=this.impl).uploadImmediate)||e.call(t,this.device,this)}async downloadAsync(){const e=[];for(let h=0;h<(this.cubemap?6:1);h++){var s,i;const l=new t({colorBuffer:this,depth:!1,face:h});this.device.setRenderTarget(l),this.device.initRenderTarget(l);const r=this.cubemap?this._levels[h]:this._levels;let a=r[0];r[0]&&this.device._isBrowserInterface(r[0])&&(r[0]=null),a=this.lock({face:h});const n=null==(s=(i=this.device).readPixelsAsync)?void 0:s.call(i,0,0,this.width,this.height,a).then((()=>l.destroy()));e.push(n)}await Promise.all(e)}getDds(){let e=128,t=0;for(;this._levels[t];){if(this.cubemap)for(let s=0;s<6;s++){if(!this._levels[t][s])return;const i=this._levels[t][s].length;if(!i)return;e+=i}else{const s=this._levels[t].length;if(!s)return;e+=s}e+=this._levels[t].length,t++}const s=new ArrayBuffer(e),i=new Uint32Array(s,0,32);let h=528391;this._levels.length>1&&(h|=131072);let l=4096;this._levels.length>1&&(l|=4194304),(this._levels.length>1||this.cubemap)&&(l|=8);const r=this.cubemap?65024:0;i[0]=542327876,i[1]=124,i[2]=h,i[3]=this.height,i[4]=this.width,i[5]=this.width*this.height*4,i[6]=0,i[7]=this._levels.length;for(let e=0;e<11;e++)i[8+e]=0;i[19]=32,i[20]=65,i[21]=0,i[22]=32,i[23]=16711680,i[24]=65280,i[25]=255,i[26]=4278190080,i[27]=l,i[28]=r,i[29]=0,i[30]=0,i[31]=0;let a=128;if(this.cubemap)for(let e=0;e<6;e++)for(let t=0;t<this._levels.length;t++){const i=this._levels[t][e],h=new Uint8Array(s,a,i.length);for(let e=0;e<i.length;e++)h[e]=i[e];a+=i.length}else for(let e=0;e<this._levels.length;e++){const t=this._levels[e],i=new Uint8Array(s,a,t.length);for(let e=0;e<t.length;e++)i[e]=t[e];a+=t.length}return s}}export{F as Texture};
