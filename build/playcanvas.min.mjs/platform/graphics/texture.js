import"../../core/tracing.js";import{math as t}from"../../core/math/math.js";import{PIXELFORMAT_RGBA8 as e,TEXTURETYPE_DEFAULT as i,TEXTUREPROJECTION_NONE as s,FILTER_LINEAR_MIPMAP_LINEAR as h,FILTER_LINEAR as l,ADDRESS_REPEAT as r,FUNC_LESS as a,TEXTURETYPE_RGBM as p,TEXTURETYPE_SWIZZLEGGGR as _,TEXTUREPROJECTION_CUBE as o,isCompressedPixelFormat as d,PIXELFORMAT_RGB16F as m,PIXELFORMAT_RGB32F as n,PIXELFORMAT_RGBA16F as c,PIXELFORMAT_RGBA32F as u,TEXTURETYPE_RGBP as v,TEXTURETYPE_RGBE as g,PIXELFORMAT_ETC1 as f,PIXELFORMAT_ETC2_RGB as w,PIXELFORMAT_PVRTC_2BPP_RGB_1 as y,PIXELFORMAT_PVRTC_2BPP_RGBA_1 as b,PIXELFORMAT_PVRTC_4BPP_RGB_1 as F,PIXELFORMAT_PVRTC_4BPP_RGBA_1 as U,PIXELFORMAT_DXT1 as A,PIXELFORMAT_ATC_RGB as M,PIXELFORMAT_ETC2_RGBA as k,PIXELFORMAT_DXT3 as x,PIXELFORMAT_DXT5 as O,PIXELFORMAT_ASTC_4x4 as S,PIXELFORMAT_ATC_RGBA as R,pixelFormatByteSizes as V,TEXTURELOCK_WRITE as j,PIXELFORMAT_RGB8 as z,PIXELFORMAT_RGBA4 as W,PIXELFORMAT_RGBA5551 as Y,PIXELFORMAT_RGB565 as G,PIXELFORMAT_LA8 as C,PIXELFORMAT_L8 as T,PIXELFORMAT_A8 as I}from"./constants.js";let L=null,P=0;class B{constructor(t,m){this.id=P++,this.device=t,this.name=null,this._width=4,this._height=4,this._depth=1,this._format=e,this.type=i,this.projection=s,this._cubemap=!1,this._volume=!1,this.fixCubemapSeams=!1,this._flipY=!1,this._premultiplyAlpha=!1,this._isRenderTarget=!1,this._mipmaps=!0,this._minFilter=h,this._magFilter=l,this._anisotropy=1,this._addressU=r,this._addressV=r,this._addressW=r,this._compareOnRead=!1,this._compareFunc=a,void 0!==m&&(void 0!==m.name&&(this.name=m.name),this._width=void 0!==m.width?m.width:this._width,this._height=void 0!==m.height?m.height:this._height,this._format=void 0!==m.format?m.format:this._format,m.hasOwnProperty("type")?this.type=m.type:m.hasOwnProperty("rgbm")?this.type=m.rgbm?p:i:m.hasOwnProperty("swizzleGGGR")&&(this.type=m.swizzleGGGR?_:i),void 0!==m.mipmaps?this._mipmaps=m.mipmaps:this._mipmaps=void 0!==m.autoMipmap?m.autoMipmap:this._mipmaps,this._levels=m.levels,this._cubemap=void 0!==m.cubemap?m.cubemap:this._cubemap,this.fixCubemapSeams=void 0!==m.fixCubemapSeams?m.fixCubemapSeams:this.fixCubemapSeams,this._cubemap?this.projection=o:m.projection&&m.projection!==o&&(this.projection=m.projection),this._minFilter=void 0!==m.minFilter?m.minFilter:this._minFilter,this._magFilter=void 0!==m.magFilter?m.magFilter:this._magFilter,this._anisotropy=void 0!==m.anisotropy?m.anisotropy:this._anisotropy,this._addressU=void 0!==m.addressU?m.addressU:this._addressU,this._addressV=void 0!==m.addressV?m.addressV:this._addressV,this._compareOnRead=void 0!==m.compareOnRead?m.compareOnRead:this._compareOnRead,this._compareFunc=void 0!==m._compareFunc?m._compareFunc:this._compareFunc,this._flipY=void 0!==m.flipY?m.flipY:this._flipY,this._premultiplyAlpha=void 0!==m.premultiplyAlpha?m.premultiplyAlpha:this._premultiplyAlpha,t.webgl2&&(this._depth=void 0!==m.depth?m.depth:this._depth,this._volume=void 0!==m.volume?m.volume:this._volume,this._addressW=void 0!==m.addressW?m.addressW:this._addressW)),this._compressed=d(this._format),this._invalid=!1,this._lockedLevel=-1,this._levels||(this._levels=this._cubemap?[[null,null,null,null,null,null]]:[null]),this.dirtyAll(),this._gpuSize=0,this.impl=t.createTextureImpl(this),t.textures.push(this)}destroy(){if(this.device){const t=this.device,e=t.textures.indexOf(this);-1!==e&&t.textures.splice(e,1),t.scope.removeValue(this),this.impl.destroy(t),this.adjustVramSizeTracking(t._vram,-this._gpuSize),this._levels=null,this.device=null}}loseContext(){this.impl.loseContext(),this.dirtyAll()}adjustVramSizeTracking(t,e){t.tex+=e}set minFilter(t){this._minFilter!==t&&(this._minFilter=t,this._parameterFlags|=1)}get minFilter(){return this._minFilter}set magFilter(t){this._magFilter!==t&&(this._magFilter=t,this._parameterFlags|=2)}get magFilter(){return this._magFilter}set addressU(t){this._addressU!==t&&(this._addressU=t,this._parameterFlags|=4)}get addressU(){return this._addressU}set addressV(t){this._addressV!==t&&(this._addressV=t,this._parameterFlags|=8)}get addressV(){return this._addressV}set addressW(t){this.device.webgl2&&this._volume&&t!==this._addressW&&(this._addressW=t,this._parameterFlags|=16)}get addressW(){return this._addressW}set compareOnRead(t){this._compareOnRead!==t&&(this._compareOnRead=t,this._parameterFlags|=32)}get compareOnRead(){return this._compareOnRead}set compareFunc(t){this._compareFunc!==t&&(this._compareFunc=t,this._parameterFlags|=64)}get compareFunc(){return this._compareFunc}set anisotropy(t){this._anisotropy!==t&&(this._anisotropy=t,this._parameterFlags|=128)}get anisotropy(){return this._anisotropy}set autoMipmap(t){this._mipmaps=t}get autoMipmap(){return this._mipmaps}set mipmaps(t){this._mipmaps!==t&&(this._mipmaps=t,t&&(this._needsMipmapsUpload=!0))}get mipmaps(){return this._mipmaps}get width(){return this._width}get height(){return this._height}get depth(){return this._depth}get format(){return this._format}get cubemap(){return this._cubemap}get gpuSize(){const t=this.pot&&this._mipmaps&&!(this._compressed&&1===this._levels.length);return B.calcGpuSize(this._width,this._height,this._depth,this._format,t,this._cubemap)}get volume(){return this._volume}set flipY(t){this._flipY!==t&&(this._flipY=t,this._needsUpload=!0)}get flipY(){return this._flipY}set premultiplyAlpha(t){this._premultiplyAlpha!==t&&(this._premultiplyAlpha=t,this._needsUpload=!0)}get premultiplyAlpha(){return this._premultiplyAlpha}get pot(){return t.powerOfTwo(this._width)&&t.powerOfTwo(this._height)}get encoding(){switch(this.type){case p:return"rgbm";case g:return"rgbe";case v:return"rgbp";default:return this.format===m||this.format===n||this.format===c||this.format===u?"linear":"srgb"}}static calcGpuSize(t,e,i,s,h,l){var r;L||(L=[],L[f]=8,L[w]=8,L[y]=8,L[b]=8,L[F]=8,L[U]=8,L[A]=8,L[M]=8,L[k]=16,L[x]=16,L[O]=16,L[S]=16,L[R]=16);const a=null!=(r=V[s])?r:0,p=L.hasOwnProperty(s)?L[s]:0;let _=0;for(;;){if(a>0)_+=t*e*i*a;else{let h=Math.floor((t+3)/4);const l=Math.floor((e+3)/4),r=Math.floor((i+3)/4);s!==y&&s!==b||(h=Math.max(Math.floor(h/2),1)),_+=h*l*r*p}if(!h||1===t&&1===e&&1===i)break;t=Math.max(Math.floor(t/2),1),e=Math.max(Math.floor(e/2),1),i=Math.max(Math.floor(i/2),1)}return _*(l?6:1)}dirtyAll(){this._levelsUpdated=this._cubemap?[[!0,!0,!0,!0,!0,!0]]:[!0],this._needsUpload=!0,this._needsMipmapsUpload=this._mipmaps,this._mipmapsUploaded=!1,this._parameterFlags=255}lock(t={}){if(void 0===t.level&&(t.level=0),void 0===t.face&&(t.face=0),void 0===t.mode&&(t.mode=j),this._lockedLevel=t.level,null===this._levels[t.level])switch(this._format){case I:case T:this._levels[t.level]=new Uint8Array(this._width*this._height*this._depth);break;case C:this._levels[t.level]=new Uint8Array(this._width*this._height*this._depth*2);break;case G:case Y:case W:this._levels[t.level]=new Uint16Array(this._width*this._height*this._depth);break;case z:this._levels[t.level]=new Uint8Array(this._width*this._height*this._depth*3);break;case e:this._levels[t.level]=new Uint8Array(this._width*this._height*this._depth*4);break;case A:this._levels[t.level]=new Uint8Array(Math.floor((this._width+3)/4)*Math.floor((this._height+3)/4)*8*this._depth);break;case x:case O:this._levels[t.level]=new Uint8Array(Math.floor((this._width+3)/4)*Math.floor((this._height+3)/4)*16*this._depth);break;case m:this._levels[t.level]=new Uint16Array(this._width*this._height*this._depth*3);break;case n:this._levels[t.level]=new Float32Array(this._width*this._height*this._depth*3);break;case c:this._levels[t.level]=new Uint16Array(this._width*this._height*this._depth*4);break;case u:this._levels[t.level]=new Float32Array(this._width*this._height*this._depth*4)}return this._levels[t.level]}setSource(t,e=0){let i,s,h=!1;if(this._cubemap){if(t[0]){i=t[0].width||0,s=t[0].height||0;for(let e=0;e<6;e++){const l=t[e];if(!l||l.width!==i||l.height!==s||!this.device._isBrowserInterface(l)){h=!0;break}}}else h=!0;if(!h)for(let i=0;i<6;i++)this._levels[e][i]!==t[i]&&(this._levelsUpdated[e][i]=!0)}else this.device._isBrowserInterface(t)||(h=!0),h||(t!==this._levels[e]&&(this._levelsUpdated[e]=!0),i=t.width,s=t.height);if(h)if(this._width=4,this._height=4,this._cubemap)for(let t=0;t<6;t++)this._levels[e][t]=null,this._levelsUpdated[e][t]=!0;else this._levels[e]=null,this._levelsUpdated[e]=!0;else 0===e&&(this._width=i,this._height=s),this._levels[e]=t;this._invalid===h&&h||(this._invalid=h,this.upload())}getSource(t=0){return this._levels[t]}unlock(){this._lockedLevel,this.upload(),this._lockedLevel=-1}upload(){var t,e;this._needsUpload=!0,this._needsMipmapsUpload=this._mipmaps,null==(t=(e=this.impl).uploadImmediate)||t.call(e,this.device,this)}getDds(){let t=128,e=0;for(;this._levels[e];){if(this.cubemap)for(let i=0;i<6;i++){if(!this._levels[e][i])return;const s=this._levels[e][i].length;if(!s)return;t+=s}else{const i=this._levels[e].length;if(!i)return;t+=i}t+=this._levels[e].length,e++}const i=new ArrayBuffer(t),s=new Uint32Array(i,0,32);let h=528391;this._levels.length>1&&(h|=131072);let l=4096;this._levels.length>1&&(l|=4194304),(this._levels.length>1||this.cubemap)&&(l|=8);const r=this.cubemap?65024:0;s[0]=542327876,s[1]=124,s[2]=h,s[3]=this.height,s[4]=this.width,s[5]=this.width*this.height*4,s[6]=0,s[7]=this._levels.length;for(let t=0;t<11;t++)s[8+t]=0;s[19]=32,s[20]=65,s[21]=0,s[22]=32,s[23]=16711680,s[24]=65280,s[25]=255,s[26]=4278190080,s[27]=l,s[28]=r,s[29]=0,s[30]=0,s[31]=0;let a=128;if(this.cubemap)for(let t=0;t<6;t++)for(let e=0;e<this._levels.length;e++){const s=this._levels[e][t],h=new Uint8Array(i,a,s.length);for(let t=0;t<s.length;t++)h[t]=s[t];a+=s.length}else for(let t=0;t<this._levels.length;t++){const e=this._levels[t],s=new Uint8Array(i,a,e.length);for(let t=0;t<e.length;t++)s[t]=e[t];a+=e.length}return i}}export{B as Texture};
