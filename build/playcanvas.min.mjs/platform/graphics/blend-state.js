import{BitPacking as t}from"../../core/math/bit-packing.js";import{BLENDEQUATION_ADD as e,BLENDMODE_SRC_ALPHA as r,BLENDMODE_ONE_MINUS_SRC_ALPHA as s,BLENDMODE_ONE as i,BLENDMODE_ZERO as a}from"./constants.js";const g=15;class h{constructor(t=!1,r=e,s=i,g=a,h,l,n,o=!0,u=!0,c=!0,d=!0){this.target0=0,this.setColorBlend(r,s,g),this.setAlphaBlend(null!=h?h:r,null!=l?l:s,null!=n?n:g),this.setColorWrite(o,u,c,d),this.blend=t}set blend(e){this.target0=t.set(this.target0,e?1:0,26)}get blend(){return t.all(this.target0,26)}setColorBlend(e,r,s){this.target0=t.set(this.target0,e,0,7),this.target0=t.set(this.target0,r,3,g),this.target0=t.set(this.target0,s,7,g)}setAlphaBlend(e,r,s){this.target0=t.set(this.target0,e,11,7),this.target0=t.set(this.target0,r,14,g),this.target0=t.set(this.target0,s,18,g)}setColorWrite(t,e,r,s){this.redWrite=t,this.greenWrite=e,this.blueWrite=r,this.alphaWrite=s}get colorOp(){return t.get(this.target0,0,7)}get colorSrcFactor(){return t.get(this.target0,3,g)}get colorDstFactor(){return t.get(this.target0,7,g)}get alphaOp(){return t.get(this.target0,11,7)}get alphaSrcFactor(){return t.get(this.target0,14,g)}get alphaDstFactor(){return t.get(this.target0,18,g)}set redWrite(e){this.target0=t.set(this.target0,e?1:0,22)}get redWrite(){return t.all(this.target0,22)}set greenWrite(e){this.target0=t.set(this.target0,e?1:0,23)}get greenWrite(){return t.all(this.target0,23)}set blueWrite(e){this.target0=t.set(this.target0,e?1:0,24)}get blueWrite(){return t.all(this.target0,24)}set alphaWrite(e){this.target0=t.set(this.target0,e?1:0,25)}get alphaWrite(){return t.all(this.target0,25)}get allWrite(){return t.get(this.target0,22,15)}copy(t){return this.target0=t.target0,this}clone(){return(new this.constructor).copy(this)}get key(){return this.target0}equals(t){return this.target0===t.target0}}h.NOBLEND=Object.freeze(new h),h.NOWRITE=Object.freeze(new h(void 0,void 0,void 0,void 0,void 0,void 0,void 0,!1,!1,!1,!1)),h.ALPHABLEND=Object.freeze(new h(!0,e,r,s));export{h as BlendState};
