import"../../core/debug.js";import{PIXELFORMAT_DEPTH as e,PIXELFORMAT_DEPTHSTENCIL as t}from"./constants.js";import{GraphicsDevice as i}from"./graphics-device.js";let s=0;class r{constructor(r={}){var h,o,l,f,d,u,n;this.name=void 0,this._device=void 0,this._colorBuffer=void 0,this._colorBuffers=void 0,this._depthBuffer=void 0,this._depth=void 0,this._stencil=void 0,this._samples=void 0,this.autoResolve=void 0,this._face=void 0,this.flipY=void 0,this.id=s++;const c=arguments[1],_=arguments[2];if(r instanceof i?(this._colorBuffer=c,r=_):this._colorBuffer=r.colorBuffer,this._colorBuffer&&(this._colorBuffers=[this._colorBuffer]),this._depthBuffer=r.depthBuffer,this._face=null!=(h=r.face)?h:0,this._depthBuffer){const i=this._depthBuffer._format;i===e?(this._depth=!0,this._stencil=!1):i===t?(this._depth=!0,this._stencil=!0):(this._depth=!1,this._stencil=!1)}else{var a,v;this._depth=null==(a=r.depth)||a,this._stencil=null!=(v=r.stencil)&&v}r.colorBuffers&&(this._colorBuffers||(this._colorBuffers=[...r.colorBuffers],this._colorBuffer=r.colorBuffers[0]));const p=(null==(o=this._colorBuffer)?void 0:o.device)||(null==(l=this._depthBuffer)?void 0:l.device)||r.graphicsDevice;this._device=p,null==(f=this._colorBuffers)||f.forEach((e=>{e._isRenderTarget=!0}));const{maxSamples:B}=this._device;var m,g;(this._samples=Math.min(null!=(d=r.samples)?d:1,B),p.isWebGPU&&(this._samples=this._samples>1?B:1),this.autoResolve=null==(u=r.autoResolve)||u,this.name=r.name,this.name)||(this.name=null==(m=this._colorBuffer)?void 0:m.name);this.name||(this.name=null==(g=this._depthBuffer)?void 0:g.name);this.name||(this.name="Untitled"),this.flipY=null!=(n=r.flipY)&&n,this.validateMrt(),this.impl=p.createRenderTargetImpl(this)}destroy(){const e=this._device;if(e){const t=e.targets.indexOf(this);-1!==t&&e.targets.splice(t,1),e.renderTarget===this&&e.setRenderTarget(null),this.destroyFrameBuffers()}}destroyFrameBuffers(){const e=this._device;e&&this.impl.destroy(e)}destroyTextureBuffers(){var e,t;null==(e=this._depthBuffer)||e.destroy(),this._depthBuffer=null,null==(t=this._colorBuffers)||t.forEach((e=>{e.destroy()})),this._colorBuffers=null,this._colorBuffer=null}validateMrt(){}init(){this.impl.init(this._device,this)}get initialized(){return this.impl.initialized}loseContext(){this.impl.loseContext()}resolve(e=!0,t=!!this._depthBuffer){this._device&&this._samples>1&&this.impl.resolve(this._device,this,e,t)}copy(e,t,i){if(!this._device){if(!e._device)return!1;this._device=e._device}return this._device.copyRenderTarget(e,this,t,i)}get samples(){return this._samples}get depth(){return this._depth}get stencil(){return this._stencil}get colorBuffer(){return this._colorBuffer}getColorBuffer(e){var t;return null==(t=this._colorBuffers)?void 0:t[e]}get depthBuffer(){return this._depthBuffer}get face(){return this._face}get width(){var e,t;return(null==(e=this._colorBuffer)?void 0:e.width)||(null==(t=this._depthBuffer)?void 0:t.width)||this._device.width}get height(){var e,t;return(null==(e=this._colorBuffer)?void 0:e.height)||(null==(t=this._depthBuffer)?void 0:t.height)||this._device.height}}export{r as RenderTarget};
