import{ADDRESS_CLAMP_TO_EDGE as e,TEXTURETYPE_RGBP as l,PIXELFORMAT_RGB8 as t,PIXELFORMAT_RGBA8 as s,TEXTURETYPE_RGBM as n,TEXTURETYPE_DEFAULT as r}from"../../platform/graphics/constants.js";import{Texture as a}from"../../platform/graphics/texture.js";import{Asset as i}from"../asset/asset.js";class o{constructor(e){this.handlerType="cubemap",this._device=e.graphicsDevice,this._registry=e.assets,this._loader=e.loader}load(e,l,t){this.loadAssets(t,l)}open(e,l,t){return t?t.resource:null}patch(e,l){this.loadAssets(e,(function(t,s){t&&(l.fire("error",e),l.fire("error:"+e.id,t,e),e.fire("error",e))}))}getAssetIds(e){const l=[];if(l[0]=e.file,(e.loadFaces||!e.file)&&e.data&&e.data.textures)for(let t=0;t<6;++t)l[t+1]=e.data.textures[t];else l[1]=l[2]=l[3]=l[4]=l[5]=l[6]=null;return l}compareAssetIds(e,l){return e&&l?parseInt(e,10)===e||"string"==typeof e?e===l:e.url===l.url:null!==e==(null!==l)}update(i,o,u){const d=i.data||{},p=i._handlerState.assets,c=i._resources;let f,m,h;const g=[null,null,null,null,null,null,null],y=function(){return d.hasOwnProperty("type")?d.type:d.hasOwnProperty("rgbm")?d.rgbm?n:r:null};if(i.loaded&&u[0]===p[0])g[1]=c[1]||null,g[2]=c[2]||null,g[3]=c[3]||null,g[4]=c[4]||null,g[5]=c[5]||null,g[6]=c[6]||null;else if(u[0])if(f=u[0].resource,f.cubemap)for(h=0;h<6;++h)g[h+1]=new a(this._device,{name:i.name+"_prelitCubemap"+(f.width>>h),cubemap:!0,type:y()||f.type,width:f.width>>h,height:f.height>>h,format:f.format,levels:[f._levels[h]],fixCubemapSeams:!0,addressU:e,addressV:e,mipmaps:0===h});else f.type=l,g[1]=f;const _=u.slice(1);if(i.loaded&&this.cmpArrays(_,p.slice(1)))g[0]=c[0]||null;else if(-1===_.indexOf(null)){var b;const l=_.map((function(e){return e.resource})),n=[];for(m=0;m<l[0]._levels.length;++m)n.push(l.map((function(e){return e._levels[m]})));const r=l[0].format,o=new a(this._device,{name:i.name+"_faces",cubemap:!0,type:y()||l[0].type,width:l[0].width,height:l[0].height,format:r===t?s:r,mipmaps:null==(b=d.mipmaps)||b,levels:n,minFilter:d.hasOwnProperty("minFilter")?d.minFilter:l[0].minFilter,magFilter:d.hasOwnProperty("magFilter")?d.magFilter:l[0].magFilter,anisotropy:d.hasOwnProperty("anisotropy")?d.anisotropy:1,addressU:e,addressV:e,fixCubemapSeams:!!u[0]});g[0]=o}if(!this.cmpArrays(g,c))for(i.resources=g,i._handlerState.assetIds=o,i._handlerState.assets=u,h=0;h<c.length;++h)null!==c[h]&&-1===g.indexOf(c[h])&&c[h].destroy();for(h=0;h<p.length;++h)null!==p[h]&&-1===u.indexOf(p[h])&&p[h].unload()}cmpArrays(e,l){if(e.length!==l.length)return!1;for(let t=0;t<e.length;++t)if(e[t]!==l[t])return!1;return!0}resolveId(e){const l=parseInt(e,10);return l===e||l.toString()===e?l:e}loadAssets(e,l){e.hasOwnProperty("_handlerState")||(e._handlerState={assetIds:[null,null,null,null,null,null,null],assets:[null,null,null,null,null,null,null]});const t=this,s=t.getAssetIds(e),n=[null,null,null,null,null,null,null],r=e._handlerState.assetIds,a=e._handlerState.assets,o=t._registry;let u=7;const d=function(r,a){n[r]=a,u--,0===u&&(t.update(e,s,n),l(null,e.resources))},p=function(e,t,s){l(t)},c=function(e,l){l.loaded?d(e,l):(o.once("load:"+l.id,d.bind(t,e)),o.once("error:"+l.id,p.bind(t,e)),l.loading||o.load(l))};let f;for(let l=0;l<7;++l){const n=this.resolveId(s[l]);if(n)if(t.compareAssetIds(n,r[l]))d(l,a[l]);else if(parseInt(n,10)===n)f=o.get(n),f?c(l,f):setTimeout(function(e,l){const t=o.get(l);t?c(e,t):p(0,"failed to find dependent cubemap asset="+l)}.bind(null,l,n));else{const s="string"==typeof n?{url:n,filename:n}:n;f=new i(e.name+"_part_"+l,"texture",s),o.add(f),o.once("load:"+f.id,d.bind(t,l)),o.once("error:"+f.id,p.bind(t,l)),o.load(f)}else d(l,null)}}}export{o as CubemapHandler};
