import{EventHandler as e}from"../../core/event-handler.js";import{Color as t}from"../../math/color.js";import{Vec2 as n}from"../../math/vec2.js";import{Vec3 as o}from"../../math/vec3.js";import{Vec4 as i}from"../../math/vec4.js";class r extends e{constructor(e){super(),this.app=e,this.store={},this.schema=[]}addComponent(e,t={}){const n=new this.ComponentType(this,e),o=new this.DataType;return this.store[e.getGuid()]={entity:e,data:o},e[this.id]=n,e.c[this.id]=n,this.initializeComponentData(n,t,[]),this.fire("add",e,n),n}removeComponent(e){const t=this.store[e.getGuid()],n=e.c[this.id];this.fire("beforeremove",e,n),delete this.store[e.getGuid()],e[this.id]=void 0,delete e.c[this.id],this.fire("remove",e,t.data)}cloneComponent(e,t){const n=this.store[e.getGuid()];return this.addComponent(t,n.data)}initializeComponentData(e,t={},n){for(let o=0,i=n.length;o<i;o++){const i=n[o];let r,a;"object"==typeof i?(r=i.name,a=i.type):(r=i,a=void 0);let c=t[r];void 0!==c?(void 0!==a&&(c=s(c,a)),e[r]=c):e[r]=e.data[r]}e.enabled&&e.entity.enabled&&e.onEnable()}getPropertiesOfType(e){const t=[];return(this.schema||[]).forEach((function(n){n&&"object"==typeof n&&n.type===e&&t.push(n)})),t}destroy(){this.off()}}function s(e,r){if(!e)return e;switch(r){case"rgb":return e instanceof t?e.clone():new t(e[0],e[1],e[2]);case"rgba":return e instanceof t?e.clone():new t(e[0],e[1],e[2],e[3]);case"vec2":return e instanceof n?e.clone():new n(e[0],e[1]);case"vec3":return e instanceof o?e.clone():new o(e[0],e[1],e[2]);case"vec4":return e instanceof i?e.clone():new i(e[0],e[1],e[2],e[3]);case"boolean":case"number":case"string":case"entity":return e;default:throw new Error("Could not convert unhandled type: "+r)}}export{r as ComponentSystem};
