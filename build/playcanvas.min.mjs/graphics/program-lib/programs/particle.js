import{BLEND_NORMAL as e,BLEND_ADDITIVE as n,BLEND_MULTIPLICATIVE as a}from"../../../scene/constants.js";import{shaderChunks as r}from"../chunks/chunks.js";import{collectAttribs as t}from"../utils.js";import{precisionCode as l,gammaCode as i,tonemapCode as o}from"./common.js";const c={generateKey:function(e){let n="particle";for(const a in e)e.hasOwnProperty(a)&&(n+=e[a]);return n},_animTex:function(e){let n="";return n+=e.animTexLoop?r.particleAnimFrameLoopVS:r.particleAnimFrameClampVS,n+=r.particleAnimTexVS,n},createShaderDefinition:function(c,m){let p="",S=l(c)+"\n";S+="#define PARTICLE\n",c.webgl2&&(p+="#define GL2\n",S+="#define GL2\n"),p+="#define VERTEXSHADER\n",m.mesh&&(p+="#define USE_MESH\n"),m.localSpace&&(p+="#define LOCAL_SPACE\n"),m.screenSpace&&(p+="#define SCREEN_SPACE\n"),m.animTex&&(p+="\nuniform vec2 animTexTilesParams;\n"),m.animTex&&(p+="\nuniform vec4 animTexParams;\n"),m.animTex&&(p+="\nuniform vec2 animTexIndexParams;\n"),2===m.normal&&(p+="\nvarying mat3 ParticleMat;\n"),1===m.normal&&(p+="\nvarying vec3 Normal;\n"),m.soft&&(p+="\nvarying float vDepth;\n");const s=m.customFace?r.particle_customFaceVS:r.particle_billboardVS;m.useCpu?(m.soft>0&&(p+=r.screenDepthPS),p+=r.particle_cpuVS,m.localSpace&&(p+=r.particle_localShiftVS),m.animTex&&(p+=this._animTex(m)),m.alignToMotion&&(p+=r.particle_pointAlongVS),p+=m.mesh?r.particle_meshVS:s,1===m.normal&&(p+=r.particle_normalVS),2===m.normal&&(p+=r.particle_TBNVS),m.stretch>0&&(p+=r.particle_stretchVS),p+=r.particle_cpu_endVS,m.soft>0&&(p+=r.particle_softVS)):(p+=r.particle_initVS,p+=m.pack8?r.particleInputRgba8PS:r.particleInputFloatPS,m.soft>0&&(p+=r.screenDepthPS),p+=r.particleVS,m.localSpace&&(p+=r.particle_localShiftVS),m.animTex&&(p+=this._animTex(m)),m.wrap&&(p+=r.particle_wrapVS),m.alignToMotion&&(p+=r.particle_pointAlongVS),p+=m.mesh?r.particle_meshVS:s,1===m.normal&&(p+=r.particle_normalVS),2===m.normal&&(p+=r.particle_TBNVS),m.stretch>0&&(p+=r.particle_stretchVS),p+=r.particle_endVS,m.soft>0&&(p+=r.particle_softVS)),p+="}\n",m.normal>0&&(1===m.normal?S+="\nvarying vec3 Normal;\n":2===m.normal&&(S+="\nvarying mat3 ParticleMat;\n"),S+="\nuniform vec3 lightCube[6];\n"),m.soft&&(S+="\nvarying float vDepth;\n"),0===m.normal&&"none"===m.fog&&(m.srgb=!1),S+=r.decodePS,S+=i(m.gamma),S+=o(m.toneMap),"linear"===m.fog?S+=r.fogLinearPS:"exp"===m.fog?S+=r.fogExpPS:"exp2"===m.fog?S+=r.fogExp2PS:S+=r.fogNonePS,2===m.normal&&(S+="\nuniform sampler2D normalMap;\n"),m.soft>0&&(S+=r.screenDepthPS),S+=r.particlePS,m.soft>0&&(S+=r.particle_softPS),1===m.normal&&(S+="\nvec3 normal = Normal;\n"),2===m.normal&&(S+=r.particle_normalMapPS),m.normal>0&&(S+=m.halflambert?r.particle_halflambertPS:r.particle_lambertPS),m.normal>0&&(S+=r.particle_lightingPS),m.blend===e?S+=r.particle_blendNormalPS:m.blend===n?S+=r.particle_blendAddPS:m.blend===a&&(S+=r.particle_blendMultiplyPS),S+=r.particle_endPS;return{attributes:t(p),vshader:p,fshader:S}}};export{c as particle};
