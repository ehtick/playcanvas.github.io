import{SEMANTIC_POSITION as e}from"../../constants.js";import{shaderChunks as n}from"../chunks/chunks.js";import{ChunkUtils as t}from"../chunk-utils.js";import{precisionCode as o,gammaCode as s,tonemapCode as i}from"./common.js";const a={generateKey:function(e){return"cubemap"===e.type?`skybox-${e.type}-${e.encoding}-${e.useIntensity}-${e.gamma}-${e.toneMapping}-${e.fixSeams}-${e.mip}`:`skybox-${e.type}-${e.encoding}-${e.useIntensity}-${e.gamma}-${e.toneMapping}`},createShaderDefinition:function(a,p){let m;if("cubemap"===p.type){const e=[128,64,16,8,4,2];m=o(a),m+=p.mip?n.fixCubemapSeamsStretchPS:n.fixCubemapSeamsNonePS,m+=p.useIntensity?n.envMultiplyPS:n.envConstPS,m+=n.decodePS,m+=s(p.gamma),m+=i(p.toneMapping),m+=n.skyboxHDRPS.replace(/\$DECODE/g,t.decodeFunc(p.encoding)).replace(/\$FIXCONST/g,1-1/e[p.mip]+"")}else m=o(a),m+=p.useIntensity?n.envMultiplyPS:n.envConstPS,m+=n.decodePS,m+=s(p.gamma),m+=i(p.toneMapping),m+=n.sphericalPS,m+=n.envAtlasPS,m+=n.skyboxEnvPS.replace(/\$DECODE/g,t.decodeFunc(p.encoding));return{attributes:{aPosition:e},vshader:n.skyboxVS,fshader:m}}};export{a as skybox};
