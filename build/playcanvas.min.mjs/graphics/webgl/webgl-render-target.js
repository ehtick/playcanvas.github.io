class e{constructor(){this._glFrameBuffer=null,this._glDepthBuffer=null,this._glResolveFrameBuffer=null,this._glMsaaColorBuffer=null,this._glMsaaDepthBuffer=null}destroy(e){const r=e.gl;this._glFrameBuffer&&(r.deleteFramebuffer(this._glFrameBuffer),this._glFrameBuffer=null),this._glDepthBuffer&&(r.deleteRenderbuffer(this._glDepthBuffer),this._glDepthBuffer=null),this._glResolveFrameBuffer&&(r.deleteFramebuffer(this._glResolveFrameBuffer),this._glResolveFrameBuffer=null),this._glMsaaColorBuffer&&(r.deleteRenderbuffer(this._glMsaaColorBuffer),this._glMsaaColorBuffer=null),this._glMsaaDepthBuffer&&(r.deleteRenderbuffer(this._glMsaaDepthBuffer),this._glMsaaDepthBuffer=null)}get initialized(){return null!==this._glFrameBuffer}init(e,r){const f=e.gl;this._glFrameBuffer=f.createFramebuffer(),e.setFramebuffer(this._glFrameBuffer);const E=r._colorBuffer;E&&(E.impl._glTexture||(E._width=Math.min(E.width,e.maxRenderBufferSize),E._height=Math.min(E.height,e.maxRenderBufferSize),e.setTexture(E,0)),f.framebufferTexture2D(f.FRAMEBUFFER,f.COLOR_ATTACHMENT0,E._cubemap?f.TEXTURE_CUBE_MAP_POSITIVE_X+r._face:f.TEXTURE_2D,E.impl._glTexture,0));const t=r._depthBuffer;if(t)t.impl._glTexture||(t._width=Math.min(t.width,e.maxRenderBufferSize),t._height=Math.min(t.height,e.maxRenderBufferSize),e.setTexture(t,0)),r._stencil?f.framebufferTexture2D(f.FRAMEBUFFER,f.DEPTH_STENCIL_ATTACHMENT,t._cubemap?f.TEXTURE_CUBE_MAP_POSITIVE_X+r._face:f.TEXTURE_2D,r._depthBuffer.impl._glTexture,0):f.framebufferTexture2D(f.FRAMEBUFFER,f.DEPTH_ATTACHMENT,t._cubemap?f.TEXTURE_CUBE_MAP_POSITIVE_X+r._face:f.TEXTURE_2D,r._depthBuffer.impl._glTexture,0);else if(r._depth){if(!(r._samples>1&&e.webgl2)){if(this._glDepthBuffer||(this._glDepthBuffer=f.createRenderbuffer()),f.bindRenderbuffer(f.RENDERBUFFER,this._glDepthBuffer),r._stencil)f.renderbufferStorage(f.RENDERBUFFER,f.DEPTH_STENCIL,r.width,r.height),f.framebufferRenderbuffer(f.FRAMEBUFFER,f.DEPTH_STENCIL_ATTACHMENT,f.RENDERBUFFER,this._glDepthBuffer);else{const E=e.webgl2?f.DEPTH_COMPONENT32F:f.DEPTH_COMPONENT16;f.renderbufferStorage(f.RENDERBUFFER,E,r.width,r.height),f.framebufferRenderbuffer(f.FRAMEBUFFER,f.DEPTH_ATTACHMENT,f.RENDERBUFFER,this._glDepthBuffer)}f.bindRenderbuffer(f.RENDERBUFFER,null)}}e.webgl2&&r._samples>1&&(this._glResolveFrameBuffer=this._glFrameBuffer,this._glFrameBuffer=f.createFramebuffer(),e.setFramebuffer(this._glFrameBuffer),E&&(this._glMsaaColorBuffer||(this._glMsaaColorBuffer=f.createRenderbuffer()),f.bindRenderbuffer(f.RENDERBUFFER,this._glMsaaColorBuffer),f.renderbufferStorageMultisample(f.RENDERBUFFER,r._samples,E.impl._glInternalFormat,r.width,r.height),f.framebufferRenderbuffer(f.FRAMEBUFFER,f.COLOR_ATTACHMENT0,f.RENDERBUFFER,this._glMsaaColorBuffer)),r._depth&&(this._glMsaaDepthBuffer||(this._glMsaaDepthBuffer=f.createRenderbuffer()),f.bindRenderbuffer(f.RENDERBUFFER,this._glMsaaDepthBuffer),r._stencil?(f.renderbufferStorageMultisample(f.RENDERBUFFER,r._samples,f.DEPTH24_STENCIL8,r.width,r.height),f.framebufferRenderbuffer(f.FRAMEBUFFER,f.DEPTH_STENCIL_ATTACHMENT,f.RENDERBUFFER,this._glMsaaDepthBuffer)):(f.renderbufferStorageMultisample(f.RENDERBUFFER,r._samples,f.DEPTH_COMPONENT32F,r.width,r.height),f.framebufferRenderbuffer(f.FRAMEBUFFER,f.DEPTH_ATTACHMENT,f.RENDERBUFFER,this._glMsaaDepthBuffer))))}_checkFbo(e){const r=e.gl;switch(r.checkFramebufferStatus(r.FRAMEBUFFER)){case r.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:console.error("ERROR: FRAMEBUFFER_INCOMPLETE_ATTACHMENT");break;case r.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:console.error("ERROR: FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT");break;case r.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:console.error("ERROR: FRAMEBUFFER_INCOMPLETE_DIMENSIONS");break;case r.FRAMEBUFFER_UNSUPPORTED:console.error("ERROR: FRAMEBUFFER_UNSUPPORTED");case r.FRAMEBUFFER_COMPLETE:}}loseContext(){this._glFrameBuffer=null,this._glDepthBuffer=null,this._glResolveFrameBuffer=null,this._glMsaaColorBuffer=null,this._glMsaaDepthBuffer=null}resolve(e,r,f,E){if(e.webgl2){const t=e.gl;t.bindFramebuffer(t.READ_FRAMEBUFFER,this._glFrameBuffer),t.bindFramebuffer(t.DRAW_FRAMEBUFFER,this._glResolveFrameBuffer),t.blitFramebuffer(0,0,r.width,r.height,0,0,r.width,r.height,(f?t.COLOR_BUFFER_BIT:0)|(E?t.DEPTH_BUFFER_BIT:0),t.NEAREST),t.bindFramebuffer(t.FRAMEBUFFER,this._glFrameBuffer)}}}export{e as WebglRenderTarget};
