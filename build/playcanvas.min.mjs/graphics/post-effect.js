import{SEMANTIC_POSITION as e,TYPE_FLOAT32 as t,CULLFACE_NONE as s,PRIMITIVE_TRISTRIP as r}from"./constants.js";import{VertexBuffer as n}from"./vertex-buffer.js";import{VertexFormat as i}from"./vertex-format.js";import{VertexIterator as o}from"./vertex-iterator.js";const d={type:r,base:0,count:4,indexed:!1};class h{constructor(e){this.device=e,this.shader=null,this.vertexBuffer=l(e),this.needsDepthBuffer=!1,this.depthMap=null}render(e,t,s){}}function l(s){const r=new i(s,[{semantic:e,components:2,type:t}]),d=new n(s,r,4),h=new o(d);return h.element[e].set(-1,-1),h.next(),h.element[e].set(1,-1),h.next(),h.element[e].set(-1,1),h.next(),h.element[e].set(1,1),h.end(),d}function p(e,t,r,n,i){const o=e.getRenderTarget();e.setRenderTarget(t),e.updateBegin();let h=t?t.width:e.width,l=t?t.height:e.height,p=0,c=0;i&&(p=i.x*h,c=i.y*l,h*=i.z,l*=i.w);const u=e.vx,a=e.vy,f=e.vw,g=e.vh;e.setViewport(p,c,h,l);const m=e.sx,w=e.sy,x=e.sw,v=e.sh;e.setScissor(p,c,h,l);const B=e.getBlending(),D=e.getDepthTest(),T=e.getDepthWrite(),y=e.getCullMode(),C=e.writeRed,W=e.writeGreen,j=e.writeBlue,M=e.writeAlpha;e.setBlending(!1),e.setDepthTest(!1),e.setDepthWrite(!1),e.setCullMode(s),e.setColorWrite(!0,!0,!0,!0),e.setVertexBuffer(r,0),e.setShader(n),e.draw(d),e.setBlending(B),e.setDepthTest(D),e.setDepthWrite(T),e.setCullMode(y),e.setColorWrite(C,W,j,M),e.updateEnd(),e.setRenderTarget(o),e.updateBegin(),e.setViewport(u,a,f,g),e.setScissor(m,w,x,v)}export{h as PostEffect,l as createFullscreenQuad,p as drawFullscreenQuad};
