import{Vec4 as e}from"../math/vec4.js";import{Texture as t}from"./texture.js";import{reprojectTexture as a}from"./reproject-texture.js";import{PIXELFORMAT_R8_G8_B8_A8 as s,TEXTURETYPE_DEFAULT as l,ADDRESS_CLAMP_TO_EDGE as r,TEXTUREPROJECTION_EQUIRECT as i,TEXTURETYPE_RGBM as m,PIXELFORMAT_RGBA16F as o,PIXELFORMAT_RGBA32F as n}from"./constants.js";const d=m,u=(e,t=0)=>1+Math.floor(Math.log2(Math.max(e,t)));class p{static generateSkyboxCubemap(e,i){const m=((e,a,i,m)=>new t(e,{name:`lighting-${a}`,cubemap:!0,width:a,height:a,format:i,type:i===s?d:l,addressU:r,addressV:r,fixCubemapSeams:!0,mipmaps:!!m}))(e.device,i||(e.cubemap?e.width:e.width/4),s,!1);return a(e,m,{numSamples:1024}),m}static generateLightingSource(e,i){const m=e.device,u=(e=>(e=>e.extTextureHalfFloat&&e.textureHalfFloatRenderable)(e)?o:(e=>e.extTextureFloat&&e.textureFloatRenderable)(e)?n:s)(m),p=(null==i?void 0:i.target)||new t(m,{name:"lighting-source",cubemap:!0,width:(null==i?void 0:i.size)||128,height:(null==i?void 0:i.size)||128,format:u,type:u===s?d:l,addressU:r,addressV:r,fixCubemapSeams:!1,mipmaps:!0});return a(e,p,{numSamples:e.mipmaps?1:1024}),p}static generateAtlas(l,m){const o=l.device,n=s,p=(null==m?void 0:m.target)||new t(o,{name:"envAtlas",width:(null==m?void 0:m.size)||512,height:(null==m?void 0:m.size)||512,format:n,type:d,projection:i,addressU:r,addressV:r,mipmaps:!1}),h=p.width/512,c=new e(0,0,512*h,256*h),x=u(256)-u(4);for(let e=0;e<x;++e)a(l,p,{numSamples:1,rect:c,seamPixels:h}),c.x+=c.w,c.y+=c.w,c.z=Math.max(1,Math.floor(.5*c.z)),c.w=Math.max(1,Math.floor(.5*c.w));c.set(0,256*h,256*h,128*h);for(let e=1;e<7;++e)a(l,p,{numSamples:(null==m?void 0:m.numReflectionSamples)||1024,distribution:(null==m?void 0:m.distribution)||"ggx",specularPower:Math.max(1,2048>>2*e),rect:c,seamPixels:h}),c.y+=c.w,c.z=Math.max(1,Math.floor(.5*c.z)),c.w=Math.max(1,Math.floor(.5*c.w));return c.set(128*h,384*h,64*h,32*h),a(l,p,{numSamples:(null==m?void 0:m.numAmbientSamples)||2048,distribution:"lambert",rect:c,seamPixels:h}),p}static generatePrefilteredAtlas(s,l){const m=s[0].device,o=s[0].format,n=s[0].type,d=(null==l?void 0:l.target)||new t(m,{name:"envPrefilteredAtlas",width:(null==l?void 0:l.size)||512,height:(null==l?void 0:l.size)||512,format:o,type:n,projection:i,addressU:r,addressV:r,mipmaps:!1}),p=d.width/512,h=new e(0,0,512*p,256*p),c=u(512);for(let e=0;e<c;++e)a(s[0],d,{numSamples:1,rect:h,seamPixels:p}),h.x+=h.w,h.y+=h.w,h.z=Math.max(1,Math.floor(.5*h.z)),h.w=Math.max(1,Math.floor(.5*h.w));h.set(0,256*p,256*p,128*p);for(let e=1;e<s.length;++e)a(s[e],d,{numSamples:1,rect:h,seamPixels:p}),h.y+=h.w,h.z=Math.max(1,Math.floor(.5*h.z)),h.w=Math.max(1,Math.floor(.5*h.w));return h.set(128*p,384*p,64*p,32*p),null!=l&&l.legacyAmbient?a(s[5],d,{numSamples:1,rect:h,seamPixels:p}):a(s[0],d,{numSamples:(null==l?void 0:l.numSamples)||2048,distribution:"lambert",rect:h,seamPixels:p}),d}}export{p as EnvLighting};
